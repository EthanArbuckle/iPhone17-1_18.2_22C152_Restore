uint64_t type metadata accessor for LinkedStockProvider()
{
  return self;
}

uint64_t sub_20A70D734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  sub_20A8C63B0();
  swift_release();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  swift_retain();
  v7 = (void *)sub_20A8C6450();
  uint64_t v8 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v8;
}

void *sub_20A70D8BC(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a2;
  uint64_t v55 = sub_20A8C5E90();
  unint64_t v71 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A70E73C(0, (unint64_t *)&unk_26AC676B0, MEMORY[0x263F7CE40], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (uint64_t)&v48 - v8;
  uint64_t v65 = sub_20A8C5ED0();
  uint64_t v10 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  v53 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A70E73C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], v6);
  MEMORY[0x270FA5388](v12 - 8);
  v64 = (char *)&v48 - v13;
  uint64_t v14 = sub_20A8C2530();
  v15 = *(char **)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  v69 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v19 = (char *)&v48 - v18;
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_20A8CF540();
    if (v20) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_3:
      v60 = v19;
      uint64_t v61 = v9;
      unint64_t v21 = a1 & 0xC000000000000001;
      v67 = (void *)v3;
      v68 = (void (**)(char *, char *, uint64_t))(v15 + 32);
      v70 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v66 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v58 = (void (**)(char *, char *, uint64_t))(v15 + 16);
      v56 = (void (**)(char *, uint64_t))(v15 + 8);
      v50 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
      v49 = (void (**)(char *, uint64_t))(v71 + 8);
      v48 = (void (**)(char *, uint64_t))(v10 + 8);
      v63 = (void *)MEMORY[0x263F8EE78];
      uint64_t v9 = 4;
      unint64_t v71 = a1;
      v19 = v64;
      uint64_t v51 = v14;
      unint64_t v59 = a1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v3 = v20;
        uint64_t v10 = v9 - 4;
        if (v21) {
          v23 = (char *)MEMORY[0x210527700](v9 - 4, a1);
        }
        else {
          v23 = (char *)*(id *)(a1 + 8 * v9);
        }
        v15 = v23;
        a1 = v9 - 3;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        self;
        uint64_t v24 = swift_dynamicCastObjCClass();
        if (v24)
        {
          v25 = (void *)v24;
          v26 = v15;
          id v27 = [v25 URL];
          if (!v27)
          {
            (*v70)(v19, 1, 1, v14);
LABEL_17:

            sub_20A70E7A0((uint64_t)v19, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
            goto LABEL_5;
          }
          v28 = v27;
          v29 = v69;
          sub_20A8C24E0();

          v30 = *v68;
          (*v68)(v19, v29, v14);
          (*v70)(v19, 0, 1, v14);
          if ((*v66)(v19, 1, v14) == 1) {
            goto LABEL_17;
          }
          v31 = v19;
          v32 = v60;
          v30(v60, v31, v14);
          (*v58)(v69, v32, v14);
          sub_20A8C60C0();
          swift_allocObject();
          sub_20A8C60A0();
          uint64_t v33 = v61;
          v34 = v67;
          sub_20A8C60B0();
          if (v34)
          {

            (*v57)(v33, 1, 1, v65);
            swift_release();

            (*v56)(v32, v14);
            sub_20A70E7A0(v33, (unint64_t *)&unk_26AC676B0, MEMORY[0x263F7CE40]);

            v67 = 0;
          }
          else
          {
            v67 = 0;
            uint64_t v35 = v65;
            (*v57)(v33, 0, 1, v65);
            v36 = v53;
            (*v50)(v53, v33, v35);
            v37 = v54;
            sub_20A8C5EB0();
            uint64_t v52 = sub_20A8C5E80();
            uint64_t v39 = v38;
            swift_release();

            (*v49)(v37, v55);
            v40 = v36;
            uint64_t v14 = v51;
            (*v48)(v40, v65);
            (*v56)(v32, v14);

            if (v39)
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v19 = v64;
              unint64_t v21 = v59;
              if (isUniquelyReferenced_nonNull_native) {
                v42 = v63;
              }
              else {
                v42 = sub_20A46DEBC(0, v63[2] + 1, 1, v63);
              }
              unint64_t v44 = v42[2];
              unint64_t v43 = v42[3];
              v63 = v42;
              uint64_t v20 = v3;
              if (v44 >= v43 >> 1) {
                v63 = sub_20A46DEBC((void *)(v43 > 1), v44 + 1, 1, v63);
              }
              v45 = v63;
              v63[2] = v44 + 1;
              v46 = &v45[2 * v44];
              v46[4] = v52;
              v46[5] = v39;
              goto LABEL_5;
            }
          }
          v19 = v64;
          uint64_t v20 = v3;
          unint64_t v21 = v59;
        }
        else
        {
        }
LABEL_5:
        ++v9;
        BOOL v22 = a1 == v20;
        a1 = v71;
        if (v22)
        {
          swift_bridgeObjectRelease();
          return v63;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

void sub_20A70E04C(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v29 = a2;
  id v31 = a1;
  uint64_t v4 = sub_20A8C59F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a3;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A70E73C(0, (unint64_t *)&qword_26AC7FF00, MEMORY[0x263F7CEF8], MEMORY[0x263F8E0F8]);
  sub_20A8C6150();
  uint64_t v9 = swift_allocObject();
  long long v30 = xmmword_20A8D3DC0;
  *(_OWORD *)(v9 + 16) = xmmword_20A8D3DC0;
  sub_20A70E73C(0, &qword_26AC7FEF0, MEMORY[0x263F7CED8], v8);
  uint64_t v10 = *(void *)(sub_20A8C60E0() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v30;
  uint64_t v13 = (void *)(v12 + v11);
  *uint64_t v13 = 0x6C6F626D7973;
  v13[1] = 0xE600000000000000;
  (*(void (**)(void))(v10 + 104))();
  *(void *)&long long v30 = a3;
  _Block_copy(a3);
  unint64_t v14 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E410](0x736B636F7473, 0xE600000000000000, 0, 0, 0, 0, 0, 0, v12, v14);
  id v15 = objc_msgSend(v31, sel_documentController);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_additions);
    sub_20A70E678();
    unint64_t v18 = sub_20A8CE5E0();

    swift_bridgeObjectRetain();
    sub_20A70D8BC(v18, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    __swift_project_boxed_opaque_existential_1((void *)(v29 + OBJC_IVAR____TtC8StocksUI19LinkedStockProvider_metadataManager), *(void *)(v29 + OBJC_IVAR____TtC8StocksUI19LinkedStockProvider_metadataManager + 24));
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7CD50], v4);
    sub_20A8C3940();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v19 = swift_allocObject();
    uint64_t v20 = v32;
    *(void *)(v19 + 16) = sub_20A46F628;
    *(void *)(v19 + 24) = v20;
    swift_retain();
    unint64_t v21 = (void *)sub_20A8C6450();
    type metadata accessor for LinkedStockProvider();
    sub_20A8C6510();
    swift_release();
    swift_release();
    swift_release();

    id v22 = objc_allocWithZone(MEMORY[0x263F593D8]);
    v37 = nullsub_1;
    uint64_t v38 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_20A4713FC;
    v36 = &block_descriptor_7;
    v23 = _Block_copy(&aBlock);
    swift_release();
    id v24 = objc_msgSend(v22, sel_initWithBlock_, v23);
    _Block_release(v23);
    if (v24)
    {
      swift_release();

      return;
    }
    _Block_release((const void *)v30);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void))(v30 + 16))();
    id v25 = objc_allocWithZone(MEMORY[0x263F593D8]);
    v37 = nullsub_1;
    uint64_t v38 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_20A4713FC;
    v36 = &block_descriptor_32;
    v26 = _Block_copy(&aBlock);
    swift_release();
    id v27 = objc_msgSend(v25, sel_initWithBlock_, v26);
    _Block_release(v26);
    if (v27)
    {
      swift_release();
      return;
    }
  }
  _Block_release((const void *)v30);
  __break(1u);
}

uint64_t sub_20A70E640()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

unint64_t sub_20A70E678()
{
  unint64_t result = qword_26AC7F898;
  if (!qword_26AC7F898)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7F898);
  }
  return result;
}

uint64_t sub_20A70E6B8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A70E6F0(uint64_t a1, uint64_t a2)
{
  return sub_20A70D734(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_20A70E70C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_20A70E73C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A70E7A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A70E73C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A70E81C(_OWORD *a1@<X8>)
{
  v90 = a1;
  sub_20A42D93C();
  uint64_t v88 = v2;
  uint64_t v80 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v84 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v83 = v4;
  uint64_t v82 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v81 = (char *)&v77 - v5;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v6 - 8);
  v87 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v85 = (uint64_t)&v77 - v9;
  uint64_t v10 = sub_20A8C2B70();
  uint64_t v86 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C8520();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v77 - v18;
  uint64_t v89 = v1;
  sub_20A8C9C10();
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A71BFC4(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
  uint64_t v22 = v21;
  sub_20A71F754((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v20);
  sub_20A8C9460();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F7D380], v13);
  char v23 = sub_20A8C8510();
  id v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v24(v16, v13);
  v24(v19, v13);
  if ((v23 & 1) == 0)
  {
    v46 = v90;
    _OWORD *v90 = 0u;
    v46[1] = 0u;
    return;
  }
  id v25 = v87;
  uint64_t v77 = v22;
  v78 = v12;
  uint64_t v79 = v10;
  uint64_t v26 = v88;
  id v27 = v90;
  sub_20A8C9BF0();
  sub_20A71E878();
  sub_20A71F568(&qword_26AC6A220, (void (*)(uint64_t))sub_20A71E878);
  uint64_t v28 = (void *)sub_20A8CA0E0();
  swift_release();
  objc_msgSend(v28, sel_bounds);
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v94.origin.x = v30;
  v94.origin.y = v32;
  v94.size.width = v34;
  v94.size.height = v36;
  double MidX = CGRectGetMidX(v94);
  sub_20A8C9BF0();
  uint64_t v38 = (void *)sub_20A8CA0E0();
  swift_release();
  objc_msgSend(v38, sel_contentOffset);
  double v40 = v39;

  sub_20A8C9BF0();
  v41 = (void *)sub_20A8CA0E0();
  swift_release();
  objc_msgSend(v41, sel_adjustedContentInset);
  double v43 = v42;

  double v44 = v40 + v43;
  if (MidX <= 0.0 && v44 <= 0.0)
  {
    long long v45 = 0uLL;
LABEL_14:
    *id v27 = v45;
    v27[1] = v45;
    return;
  }
  sub_20A8C9BF0();
  v47 = (void *)sub_20A8CA0E0();
  swift_release();
  id v48 = objc_msgSend(v47, sel_indexPathForItemAtPoint_, MidX, v44);
  if (v48)
  {
    v49 = v48;
    v50 = v25;
    sub_20A8C2B10();

    uint64_t v51 = 0;
    uint64_t v52 = v26;
    uint64_t v53 = (uint64_t)v50;
    uint64_t v54 = v79;
  }
  else
  {
    uint64_t v51 = 1;
    uint64_t v55 = v26;
    uint64_t v54 = v79;
    uint64_t v53 = (uint64_t)v25;
    uint64_t v52 = v55;
  }
  uint64_t v56 = v86;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v53, v51, 1, v54);
  uint64_t v57 = v53;
  uint64_t v58 = v85;
  sub_20A71F398(v57, v85, (uint64_t (*)(void))sub_20A469FF4);

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v58, 1, v54) == 1)
  {
    sub_20A71BF00(v58, (uint64_t (*)(void))sub_20A469FF4);
LABEL_13:
    long long v45 = 0uLL;
    goto LABEL_14;
  }
  uint64_t v59 = v58;
  v60 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v78, v59, v54);
  uint64_t v61 = v54;
  sub_20A8C9BF0();
  uint64_t v62 = v60;
  uint64_t v63 = v56;
  v64 = (void *)sub_20A8CA0E0();
  swift_release();
  sub_20A8CEAF0();

  sub_20A71F4E8((uint64_t)v91, (uint64_t)v92, qword_26AC7FB60, (uint64_t (*)(uint64_t))type metadata accessor for CGRect);
  if (v93)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v54);
    goto LABEL_13;
  }
  CGFloat v65 = *(double *)v92;
  CGFloat v66 = *(double *)&v92[1];
  CGFloat v67 = *(double *)&v92[2];
  CGFloat v68 = *(double *)&v92[3];
  sub_20A8C9C10();
  v69 = v81;
  sub_20A8C9490();
  swift_release();
  v70 = v84;
  uint64_t v71 = v83;
  sub_20A8CBB80();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v69, v71);
  uint64_t v72 = sub_20A8C82F0();
  uint64_t v74 = v73;
  (*(void (**)(char *, uint64_t))(v80 + 8))(v70, v52);
  v95.origin.x = v65;
  v95.origin.y = v66;
  v95.size.width = v67;
  v95.size.height = v68;
  double v75 = MidX - CGRectGetMinX(v95);
  v96.origin.x = v65;
  v96.origin.y = v66;
  v96.size.width = v67;
  v96.size.height = v68;
  double MinY = CGRectGetMinY(v96);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v61);
  *(void *)id v27 = v72;
  *((void *)v27 + 1) = v74;
  *((double *)v27 + 2) = v75;
  *((double *)v27 + 3) = v44 - MinY;
}

id sub_20A70F088()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_20A8C8FA0()), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_20A70F0FC()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(self, sel_buttonWithType_, 7);
  id v3 = objc_msgSend(v2, sel_widthAnchor);
  id v4 = objc_msgSend(v3, sel_constraintEqualToConstant_, 28.0);

  objc_msgSend(v4, sel_setActive_, 1);
  id v5 = objc_msgSend(v2, sel_heightAnchor);
  id v6 = objc_msgSend(v5, sel_constraintEqualToConstant_, 28.0);

  objc_msgSend(v6, sel_setActive_, 1);
  uint64_t v7 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_styler);
  swift_beginAccess();
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  id v8 = sub_20A8BA000();
  objc_msgSend(v2, sel_setImage_forState_, v8, 0);

  objc_msgSend(v2, sel_setDisabledDimsImage_, 1);
  objc_msgSend(v2, sel_setShowsMenuAsPrimaryAction_, 1);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_editWatchlistMenuProvider), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_editWatchlistMenuProvider + 24));
  uint64_t v9 = (void *)sub_20A6A772C(v2);
  objc_msgSend(v2, sel_setMenu_, v9);

  objc_msgSend(v2, sel_setShowsLargeContentViewer_, 1);
  id v10 = v2;
  uint64_t v11 = (void *)sub_20A8CE240();
  id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

  objc_msgSend(v10, sel_setLargeContentImage_, v12);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v14 = self;
  id v15 = v10;
  id v16 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setLargeContentTitle_, v17, 0x800000020A900810);

  id v18 = v15;
  id v19 = objc_msgSend(v14, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v20 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setAccessibilityLabel_, v20, 0x800000020A90C090);

  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithCustomView_, v18);
  return v21;
}

void sub_20A70F4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x2105289B0](v2);
  if (v3)
  {
    id v4 = (void *)v3;
    unsigned int v5 = *(unsigned __int16 *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState);
    if (*(_WORD *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState) != 2)
    {
      uint64_t v6 = sub_20A8CEB40();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        sub_20A71074C(v5 & 1, (v5 >> 8) & 1);
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F8F8);
        uint64_t v8 = sub_20A8CE5D0();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_setToolbarItems_, v8);

        id v4 = (void *)v8;
      }
    }
  }
}

uint64_t sub_20A70F5BC(unsigned __int8 *a1, char *a2)
{
  uint64_t v3 = *a1;
  id v4 = objc_msgSend(a2, sel_editButtonItem);
  objc_msgSend(v4, sel_setEnabled_, v3 ^ 1);

  id v5 = objc_msgSend(a2, sel_navigationItem);
  id v6 = objc_msgSend(v5, sel_rightBarButtonItem);

  objc_msgSend(v6, sel_setEnabled_, v3 ^ 1);
  uint64_t v7 = *(void *)(*(void *)&a2[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v7 + 136))(v3, 0, 0, ObjectType, v7);
}

void sub_20A70F6B0(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI23StockListViewController_scrollTracker;
  *(void *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C8410()), sel_init);
  *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem] = 0;
  *(_WORD *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState] = 2;
  uint64_t v3 = &v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI23StockListViewController_logger;
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_20A8C7DF0();
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_26AC9E888);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(&v1[v4], v6, v5);
  *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver] = 0;

  sub_20A8CF520();
  __break(1u);
}

id sub_20A70F8A0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x263F832E8], 0);

  id v4 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x263F83238], 0);

  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver];
  if (v5)
  {
    swift_unknownObjectRetain();
    id v6 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v6, sel_removeObserver_, v5);
    swift_unknownObjectRelease();
  }
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver];
  if (v7)
  {
    swift_unknownObjectRetain();
    id v8 = objc_msgSend(v2, sel_defaultCenter);
    objc_msgSend(v8, sel_removeObserver_, v7);
    swift_unknownObjectRelease();
  }
  v10.receiver = v0;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_dealloc);
}

uint64_t sub_20A70FBEC()
{
  return type metadata accessor for StockListViewController();
}

uint64_t type metadata accessor for StockListViewController()
{
  uint64_t result = qword_26AC68BE0;
  if (!qword_26AC68BE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A70FC74()
{
  uint64_t result = sub_20A8C7DF0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t sub_20A70FD74()
{
  swift_getObjectType();

  return sub_20A8C42F0();
}

uint64_t sub_20A70FDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A9B8](a1, ObjectType, a5);
}

uint64_t sub_20A70FE1C(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7A9B0](a1, ObjectType);
}

id sub_20A70FE6C()
{
  unint64_t v1 = v0;
  v54.receiver = v0;
  v54.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v54, sel_viewDidLoad);
  id v2 = objc_msgSend(v0, sel_navigationItem);
  id v3 = sub_20A801D6C();
  objc_msgSend(v2, sel_setTitleView_, v3);

  id v4 = objc_msgSend(v1, sel_navigationItem);
  id v5 = sub_20A70F0FC();
  objc_msgSend(v4, sel_setRightBarButtonItem_, v5);

  id v6 = objc_msgSend(v1, sel_navigationItem);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BA0]), sel_initWithNibName_bundle_, 0, 0);
  objc_msgSend(v6, sel_setSearchController_, v7);

  id v8 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_20A71F6DC;
  uint64_t v53 = v9;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  v50 = sub_20A4713FC;
  uint64_t v51 = &block_descriptor_116;
  objc_super v10 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v8, sel_su_performBlockAfterCATransactionCommits_, v10);
  _Block_release(v10);

  objc_msgSend(v1, sel_setDefinesPresentationContext_, 1);
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintViewController];
  objc_msgSend(v1, sel_addChildViewController_, v11);
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v13 = result;
  id result = objc_msgSend(v11, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v14 = result;
  objc_msgSend(v13, sel_addSubview_, result);

  objc_msgSend(v11, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v11, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v15 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  id v16 = result;
  objc_msgSend(result, sel_bounds);
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;

  objc_msgSend(v15, sel_setFrame_, v18, v20, v22, v24);
  sub_20A8C9BF0();
  id v25 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v25, sel_setKeyboardDismissMode_, 1);

  sub_20A8C9BF0();
  uint64_t v26 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v26, sel_setSelectionFollowsFocus_, 1);

  uint64_t v27 = sub_20A8CEB40();
  if (v27)
  {
    uint64_t v28 = (void *)v27;
    sub_20A71074C(0, 1);
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F8F8);
    double v29 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v28, sel_setToolbarItems_, v29);
  }
  id v30 = objc_msgSend(v1, sel_traitCollection);
  sub_20A710CD8((uint64_t)v30);

  sub_20A8C9BF0();
  double v31 = (void *)sub_20A8C94C0();
  swift_release();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v33 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  CGFloat v34 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setAccessibilityLabel_, v34, 0x800000020A90C160);

  sub_20A8C8200();
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  sub_20A8C6380();
  swift_release();
  swift_release();
  double v35 = self;
  id v36 = objc_msgSend(v35, sel_defaultCenter);
  uint64_t v37 = *MEMORY[0x263F83428];
  uint64_t v38 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_20A71F730;
  uint64_t v53 = v38;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  v50 = sub_20A7117DC;
  uint64_t v51 = &block_descriptor_121;
  double v39 = _Block_copy(&aBlock);
  swift_release();
  id v40 = objc_msgSend(v36, sel_addObserverForName_object_queue_usingBlock_, v37, 0, 0, v39);
  _Block_release(v39);

  *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver] = v40;
  swift_unknownObjectRelease();
  id v41 = objc_msgSend(v35, sel_defaultCenter);
  uint64_t v42 = *MEMORY[0x263F83330];
  uint64_t v43 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v52 = sub_20A71F730;
  uint64_t v53 = v43;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v49 = 1107296256;
  v50 = sub_20A7117DC;
  uint64_t v51 = &block_descriptor_125;
  double v44 = _Block_copy(&aBlock);
  swift_release();
  id v45 = objc_msgSend(v41, sel_addObserverForName_object_queue_usingBlock_, v42, 0, 0, v44);
  _Block_release(v44);

  *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver] = v45;
  swift_unknownObjectRelease();
  sub_20A8C9C10();
  sub_20A8C8C30();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8C5D60();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  uint64_t v46 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 184))(ObjectType, v46);
}

uint64_t sub_20A7106C4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v1);
  if (result)
  {
    id v3 = (void *)result;
    swift_retain();

    sub_20A8C6360();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A71074C(int a1, int a2)
{
  int v42 = a2;
  int v43 = a1;
  uint64_t v3 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v3 - 8);
  id v41 = (uint64_t *)((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_20A8CADF0();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C9830();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C3190();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = MEMORY[0x263F8EE78];
  double v44 = v2;
  __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_appConfigurationManager], *(void *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_appConfigurationManager + 24]);
  sub_20A8C3AC0();
  char v16 = sub_20A8C2FE0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v16)
  {
    double v17 = v44;
    id v18 = objc_msgSend(v44, sel_traitCollection);
    objc_msgSend(v18, sel_displayScale);

    sub_20A8C9C40();
    swift_getObjectType();
    sub_20A8CAD00();
    swift_unknownObjectRelease();
    sub_20A8C96E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_20A8CADC0();
    double v20 = v19;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
    uint64_t v21 = *(void *)&v17[OBJC_IVAR____TtC8StocksUI23StockListViewController_quoteAttributionProvider + 24];
    uint64_t v22 = *(void *)&v17[OBJC_IVAR____TtC8StocksUI23StockListViewController_quoteAttributionProvider + 32];
    __swift_project_boxed_opaque_existential_1(&v17[OBJC_IVAR____TtC8StocksUI23StockListViewController_quoteAttributionProvider], v21);
    double v23 = v41;
    AttributionProviderType.source.getter(v21, v22);
    id v24 = sub_20A882410((uint64_t)v17, (uint64_t)sel_didTapAttributionButton, v23, v20);
    sub_20A71BF00((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    id v25 = v24;
    MEMORY[0x2105268E0]();
    if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_20A8CE690();
    }
    sub_20A8CE6B0();
    sub_20A8CE620();
  }
  objc_msgSend(objc_allocWithZone(MEMORY[0x263F824A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  MEMORY[0x2105268E0]();
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  uint64_t v26 = v44;
  char v28 = v42;
  char v27 = v43;
  if (v43)
  {
    if ((v42 & 1) == 0) {
      goto LABEL_14;
    }
    double v29 = &v44[OBJC_IVAR____TtC8StocksUI23StockListViewController_styler];
    swift_beginAccess();
    uint64_t v30 = *((void *)v29 + 3);
    uint64_t v31 = *((void *)v29 + 4);
    CGFloat v32 = __swift_project_boxed_opaque_existential_1(v29, v30);
    v45[3] = v30;
    uint64_t v33 = *(void *)(v31 + 8);
    v45[4] = v33;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(boxed_opaque_existential_1, v32, v30);
    id v35 = objc_msgSend(v26, sel_traitCollection);
    objc_msgSend(v35, sel_displayScale);

    sub_20A8827A4((uint64_t)v26, (uint64_t)sel_didTapPlusButton, (uint64_t)boxed_opaque_existential_1, v30, v33);
    uint64_t v36 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  }
  else
  {
    uint64_t v36 = (uint64_t)sub_20A70F088();
  }
  MEMORY[0x2105268E0](v36);
  if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
LABEL_14:
  if (v28) {
    __int16 v37 = 256;
  }
  else {
    __int16 v37 = 0;
  }
  *(_WORD *)&v26[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState] = v37 & 0xFFFE | v27 & 1;
  return v46;
}

void sub_20A710CD8(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = &v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_styler];
  swift_beginAccess();
  sub_20A4342F4((uint64_t)v4, (uint64_t)v60);
  uint64_t v5 = v61;
  uint64_t v6 = v62;
  __swift_project_boxed_opaque_existential_1(v60, v61);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v58 = v5;
  uint64_t v59 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_20A42BEBC(&v57, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  sub_20A4342F4((uint64_t)v4, (uint64_t)v60);
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v60, v61);
  id v10 = objc_msgSend(v2, sel_view);
  if (!v10)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v11 = v10;
  uint64_t v12 = (void *)(*v9 + 56);
  uint64_t v14 = *(void *)(*v9 + 80);
  uint64_t v13 = *(void *)(*v9 + 88);
  __swift_project_boxed_opaque_existential_1(v12, v14);
  id v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v13 + 16) + 56))(v14);
  objc_msgSend(v11, sel_setBackgroundColor_, v15);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  sub_20A4342F4((uint64_t)v4, (uint64_t)v60);
  char v16 = __swift_project_boxed_opaque_existential_1(v60, v61);
  sub_20A8C9BF0();
  double v17 = (void *)sub_20A8C94C0();
  swift_release();
  id v18 = (void *)*v16;
  objc_msgSend(v17, sel_setAlwaysBounceVertical_, 1);
  double v19 = v18 + 7;
  uint64_t v21 = v18[10];
  uint64_t v20 = v18[11];
  __swift_project_boxed_opaque_existential_1(v19, v21);
  uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v20 + 16) + 56))(v21);
  objc_msgSend(v17, sel_setBackgroundColor_, v22);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  sub_20A4342F4((uint64_t)v4, (uint64_t)v60);
  __swift_project_boxed_opaque_existential_1(v60, v61);
  id v23 = objc_msgSend(v2, sel_navigationController);
  if (v23)
  {
    id v24 = v23;
    id v25 = objc_msgSend(v23, sel_navigationBar);
  }
  else
  {
    id v25 = 0;
  }
  sub_20A8BA1C4(v25);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  sub_20A4342F4((uint64_t)v4, (uint64_t)v60);
  __swift_project_boxed_opaque_existential_1(v60, v61);
  id v26 = objc_msgSend(v2, sel_navigationController);
  id v27 = objc_msgSend(v2, sel_navigationItem);
  id v28 = objc_msgSend(v27, sel_searchController);

  if (v28)
  {
    id v29 = objc_msgSend(v28, sel_searchBar);
  }
  else
  {
    id v29 = 0;
  }
  id v30 = objc_msgSend(v2, sel_navigationItem);
  id v31 = objc_msgSend(v30, sel_searchController);

  id v32 = objc_msgSend(v2, sel_splitViewController);
  if (v32)
  {
    uint64_t v33 = v32;
    id v34 = objc_msgSend(v32, sel_traitCollection);
  }
  else
  {
    id v34 = 0;
  }
  sub_20A8BA484(v26, v29, v31, (uint64_t)v34);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  id v35 = __swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
  uint64_t v37 = *(void *)(*v35 + 80);
  uint64_t v36 = *(void *)(*v35 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(*v35 + 56), v37);
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v36 + 16) + 32))(v60, v37);
  uint64_t v38 = OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView;
  uint64_t v39 = *(void **)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView];
  if (v60[0])
  {
    if (!v39) {
      return;
    }
    objc_msgSend(v39, sel_removeFromSuperview);
    uint64_t v40 = *(void **)&v2[v38];
    *(void *)&v2[v38] = 0;
    goto LABEL_18;
  }
  if (v39) {
    return;
  }
  id v41 = objc_msgSend(self, sel_ts_sideBarEffect);
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E50]), sel_initWithEffect_, v41);

  id v43 = v42;
  id v44 = objc_msgSend(v2, sel_view);
  if (!v44) {
    goto LABEL_21;
  }
  id v45 = v44;
  objc_msgSend(v44, sel_bounds);
  double v47 = v46;
  double v49 = v48;
  double v51 = v50;
  double v53 = v52;

  objc_msgSend(v43, sel_setFrame_, v47, v49, v51, v53);
  objc_super v54 = *(void **)&v2[v38];
  *(void *)&v2[v38] = v43;
  id v55 = v43;

  id v56 = objc_msgSend(v2, sel_view);
  if (!v56)
  {
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v40 = v56;
  objc_msgSend(v56, sel_insertSubview_atIndex_, v55, 0);

LABEL_18:
}

void sub_20A71125C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CADF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C6350();
  id v9 = (id)v41[0];
  if (v41[0])
  {
    id v10 = objc_msgSend(v0, sel_navigationItem);
    id v11 = objc_msgSend(v10, sel_searchController);

    if (v11 && (v11, v11 == v9) || !objc_msgSend(v0, sel_su_isAppeared))
    {
    }
    else
    {
      uint64_t v38 = v7;
      uint64_t v39 = v6;
      uint64_t v12 = (uint64_t)v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_styler;
      swift_beginAccess();
      sub_20A4342F4(v12, (uint64_t)v41);
      __swift_project_boxed_opaque_existential_1(v41, v41[3]);
      id v13 = objc_msgSend(v0, sel_navigationController);
      id v14 = objc_msgSend(v9, sel_searchBar);
      id v37 = v9;
      id v15 = objc_msgSend(v0, sel_splitViewController);
      if (v15)
      {
        char v16 = v15;
        id v17 = objc_msgSend(v15, sel_traitCollection);
      }
      else
      {
        id v17 = 0;
      }
      sub_20A8BA484(v13, v14, v9, (uint64_t)v17);

      id v18 = v37;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      sub_20A8C9C40();
      swift_getObjectType();
      double v19 = v40;
      sub_20A8CAD00();
      swift_unknownObjectRelease();
      sub_20A8C96E0();
      sub_20A8CADC0();
      double v21 = v20;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      id v22 = objc_msgSend(v0, sel_navigationController);
      if (v22)
      {
        id v23 = v22;
        sub_20A8C9710();
        id v24 = objc_msgSend(v23, sel_navigationBar);
        objc_msgSend(v24, sel_setAutoresizingMask_, 5);

        id v25 = objc_msgSend(v23, sel_navigationBar);
        id v26 = objc_msgSend(v23, sel_navigationBar);
        objc_msgSend(v26, sel_layoutMargins);

        sub_20A8CE940();
        sub_20A8CE950();
        objc_msgSend(v25, sel_setLayoutMargins_);
      }
      if (v21 * 0.5 > 0.0) {
        double v27 = v21 * 0.5;
      }
      else {
        double v27 = 0.0;
      }
      id v28 = objc_msgSend(v18, sel_searchBar);
      objc_msgSend(v28, sel_setPositionAdjustment_forSearchBarIcon_, 0, v27, 0.0);

      id v29 = objc_msgSend(v18, sel_searchBar);
      objc_msgSend(v29, sel_setLookToDictateEnabled_, 1);

      id v30 = objc_msgSend(v1, sel_navigationItem);
      objc_msgSend(v30, sel_setSearchController_, v18);

      id v31 = objc_msgSend(v1, sel_navigationItem);
      id v32 = objc_msgSend(v31, sel_searchController);

      uint64_t v34 = v38;
      uint64_t v33 = v39;
      if (v32)
      {
        objc_msgSend(v32, sel_setDelegate_, v1);
      }
      id v35 = objc_msgSend(v1, sel_traitCollection);
      sub_20A710CD8((uint64_t)v35);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v33);
    }
  }
}

uint64_t sub_20A7117DC(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2140();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_20A8C2130();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_20A7118D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = (void *)MEMORY[0x2105289B0](v2);
  if (v3)
  {
    uint64_t v4 = v3;
    if ((objc_msgSend(v3, sel_isEditing) & 1) == 0)
    {
      id v5 = objc_msgSend(v4, sel_navigationItem);
      id v6 = sub_20A70F0FC();
      objc_msgSend(v5, sel_setRightBarButtonItem_, v6);
    }
  }
}

void sub_20A711978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C7DF0();
  uint64_t v102 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v101 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v99 - v7;
  uint64_t v124 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v124);
  v116 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  v115 = (char *)&v99 - v11;
  sub_20A42D93C();
  uint64_t v131 = v12;
  v125 = *(void (**)(char *))(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v130 = (char *)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v123 = (char *)&v99 - v15;
  sub_20A5123C0();
  uint64_t v114 = v16;
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v20 = v19;
  v122 = *(void **)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  v129 = (char *)&v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  id v24 = (char *)&v99 - v23;
  MEMORY[0x270FA5388](v25);
  v113 = (char *)&v99 - v26;
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v117 = v27;
  id v28 = *(void (***)(char *, uint64_t))(v27 - 8);
  MEMORY[0x270FA5388](v27);
  v118 = (char *)&v99 - v29;
  sub_20A42D51C();
  v126 = v30;
  MEMORY[0x270FA5388](v30);
  id v32 = (char *)&v99 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a2 + 16;
  swift_beginAccess();
  uint64_t v34 = MEMORY[0x2105289B0](a2 + 16);
  v100 = v8;
  v127 = v28;
  if (v34)
  {
    id v35 = (void *)v34;
    uint64_t v36 = *(void *)(v34 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    swift_unknownObjectRetain();

    uint64_t v37 = v4;
    uint64_t v38 = a1;
    uint64_t v39 = *(void *)(v36 + 40);
    uint64_t ObjectType = swift_getObjectType();
    id v41 = *(void (**)(uint64_t, uint64_t))(v39 + 96);
    uint64_t v42 = v39;
    a1 = v38;
    uint64_t v4 = v37;
    id v28 = v127;
    v41(ObjectType, v42);
    swift_unknownObjectRelease();
  }
  uint64_t v103 = v4;
  swift_beginAccess();
  uint64_t v104 = v33;
  uint64_t v43 = MEMORY[0x2105289B0](v33);
  if (v43)
  {
    id v44 = (void *)v43;
    sub_20A7127B8();
  }
  id v45 = v28[2];
  uint64_t v46 = v117;
  v112 = (void (**)(void, void))(v28 + 2);
  v111 = v45;
  ((void (*)(char *, uint64_t, uint64_t))v45)(v118, a1, v117);
  double v47 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A71F754((unint64_t *)&unk_26AC6ACD0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  sub_20A8CE4B0();
  double v48 = &v32[*((int *)v126 + 9)];
  uint64_t v49 = sub_20A71F754((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v47);
  uint64_t v50 = *(void *)v48;
  sub_20A8CE8A0();
  if (v50 != v132)
  {
    v126 = (void (**)(char *))(v122 + 2);
    v108 = v127 + 1;
    v107 = (void (**)(char *, char *, uint64_t))(v122 + 4);
    v120 = (void (**)(char *))((char *)v125 + 16);
    v127 = (void (**)(char *, uint64_t))(v122 + 1);
    v119 = (void (**)(char *, char *, uint64_t))((char *)v125 + 32);
    v121 = (void (**)(char *, uint64_t))((char *)v125 + 8);
    v128 = v18;
    v110 = v24;
    v109 = v32;
    v106 = v48;
    uint64_t v105 = v49;
    do
    {
      v60 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v61 = *v126;
      uint64_t v62 = v113;
      (*v126)(v113);
      v60(&v132, 0);
      uint64_t v63 = v118;
      ((void (*)(char *, char *, uint64_t))v111)(v118, v32, v46);
      sub_20A8CE8B0();
      (*v108)(v63, v46);
      (*v107)(v24, v62, v20);
      v125 = v61;
      ((void (*)(char *, char *, uint64_t))v61)(v129, v24, v20);
      v64 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
      sub_20A71F754((unint64_t *)&unk_26AC69F30, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
      uint64_t v65 = (uint64_t)v128;
      sub_20A8CE4B0();
      CGFloat v66 = (void *)(v65 + *(int *)(v114 + 36));
      sub_20A71F754(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, v64);
      uint64_t v67 = *v66;
      sub_20A8CE8A0();
      uint64_t v68 = (uint64_t)v116;
      uint64_t v69 = (uint64_t)v115;
      v70 = v130;
      uint64_t v71 = v131;
      if (v67 != v132)
      {
        v122 = v66;
        do
        {
          uint64_t v74 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
          uint64_t v75 = v20;
          v76 = v123;
          (*v120)(v123);
          v74(&v132, 0);
          uint64_t v77 = v129;
          ((void (*)(char *, uint64_t, uint64_t))v125)(v129, v65, v75);
          sub_20A8CE8B0();
          v78 = *v127;
          (*v127)(v77, v75);
          (*v119)(v70, v76, v71);
          sub_20A8C8330();
          sub_20A71E62C(v69, v68, type metadata accessor for StockListModel);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v72 = type metadata accessor for StockListStockModel;
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload != 1)
            {
              sub_20A71BF00(v69, type metadata accessor for StockListModel);
              (*v121)(v130, v131);
              sub_20A71BF00((uint64_t)v128, (uint64_t (*)(void))sub_20A5123C0);
              v78(v110, v75);
              sub_20A71BF00((uint64_t)v109, (uint64_t (*)(void))sub_20A42D51C);
              uint64_t v80 = v104;
              swift_beginAccess();
              uint64_t v81 = MEMORY[0x2105289B0](v80);
              if (v81)
              {
                uint64_t v82 = (void *)v81;
                uint64_t v83 = v102;
                v84 = v100;
                uint64_t v85 = v103;
                (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v100, v81 + OBJC_IVAR____TtC8StocksUI23StockListViewController_logger, v103);

                uint64_t v86 = sub_20A8C7DD0();
                os_log_type_t v87 = sub_20A8CEA00();
                if (os_log_type_enabled(v86, v87))
                {
                  uint64_t v88 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v88 = 0;
                  _os_log_impl(&dword_20A414000, v86, v87, "Hiding ForYou card due to having an empty stock list", v88, 2u);
                  MEMORY[0x210528850](v88, -1, -1);
                }

                (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
              }
              swift_beginAccess();
              uint64_t v89 = MEMORY[0x2105289B0](v80);
              if (v89)
              {
                v90 = (void *)v89;
                sub_20A712B5C(0, 1);
                goto LABEL_31;
              }
              return;
            }
            uint64_t v72 = type metadata accessor for StockListModel;
          }
          v70 = v130;
          uint64_t v71 = v131;
          uint64_t v20 = v75;
          sub_20A71BF00(v68, v72);
          sub_20A71BF00(v69, type metadata accessor for StockListModel);
          (*v121)(v70, v71);
          uint64_t v73 = *v122;
          uint64_t v65 = (uint64_t)v128;
          sub_20A8CE8A0();
        }
        while (v73 != v132);
      }
      sub_20A71BF00(v65, (uint64_t (*)(void))sub_20A5123C0);
      id v24 = v110;
      (*v127)(v110, v20);
      uint64_t v59 = *(void *)v106;
      id v32 = v109;
      uint64_t v46 = v117;
      sub_20A8CE8A0();
    }
    while (v59 != v132);
  }
  sub_20A71BF00((uint64_t)v32, (uint64_t (*)(void))sub_20A42D51C);
  uint64_t v51 = v104;
  swift_beginAccess();
  double v52 = (void *)MEMORY[0x2105289B0](v51);
  uint64_t v53 = v103;
  uint64_t v54 = v102;
  if (v52)
  {
    id v55 = v52;
    id v56 = objc_msgSend(v52, sel_navigationItem);
    id v57 = objc_msgSend(v56, sel_searchController);

    if (v57)
    {
      unsigned __int8 v58 = objc_msgSend(v57, sel_isActive);

      if (v58) {
        return;
      }
    }
    else
    {
    }
  }
  swift_beginAccess();
  uint64_t v91 = MEMORY[0x2105289B0](v51);
  if (v91)
  {
    v92 = (void *)v91;
    char v93 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v101, v91 + OBJC_IVAR____TtC8StocksUI23StockListViewController_logger, v53);

    CGRect v94 = sub_20A8C7DD0();
    os_log_type_t v95 = sub_20A8CEA00();
    if (os_log_type_enabled(v94, v95))
    {
      CGRect v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)CGRect v96 = 0;
      _os_log_impl(&dword_20A414000, v94, v95, "Showing ForYou card after a blueprint refresh", v96, 2u);
      v97 = v96;
      char v93 = v101;
      MEMORY[0x210528850](v97, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v93, v53);
  }
  swift_beginAccess();
  uint64_t v98 = MEMORY[0x2105289B0](v51);
  if (v98)
  {
    v90 = (void *)v98;
    sub_20A713204(1);
LABEL_31:
  }
}

void sub_20A7127B8()
{
  uint64_t v1 = v0;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability], *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability + 24]);
  if (sub_20A8C3850())
  {
    id v10 = objc_msgSend(v0, sel_navigationItem);
    id v11 = objc_msgSend(v10, sel_searchController);

    if (!v11 || (unsigned __int8 v12 = objc_msgSend(v11, sel_isActive), v11, (v12 & 1) == 0))
    {
      if ((objc_msgSend(v1, sel_isEditing) & 1) == 0)
      {
        sub_20A7149EC((uint64_t)v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
        {
          sub_20A71BF00((uint64_t)v4, (uint64_t (*)(void))sub_20A42D908);
          id v13 = objc_msgSend(v1, sel_view);
          if (v13)
          {
            uint64_t v14 = v13;
            id v15 = objc_msgSend(v13, sel_window);

            if (v15)
            {
              id v16 = objc_msgSend(v15, sel_traitCollection);

              id v17 = objc_msgSend(v16, sel_horizontalSizeClass);
              if (v17 == (id)2)
              {
                id v18 = sub_20A582778();
                if (v18)
                {
                  uint64_t v19 = v18;
                  LOBYTE(v26) = 1;
                  id v20 = objc_msgSend(v18, sel_viewControllers, 0, v26);
                  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F920);
                  unint64_t v21 = sub_20A8CE5E0();

                  if (v21 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v22 = sub_20A8CF540();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  }
                  swift_bridgeObjectRelease();
                  if (v22 <= 1 || sub_20A581BA8(&v25, v19) <= 1)
                  {
                    uint64_t v23 = *(void *)(*(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler]
                                    + 40);
                    uint64_t ObjectType = swift_getObjectType();
                    (*(void (**)(uint64_t, uint64_t))(v23 + 160))(ObjectType, v23);
                  }
                }
              }
            }
          }
          else
          {
            __break(1u);
          }
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v4, v6);
          sub_20A718884();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
      }
    }
  }
}

void sub_20A712B5C(int a1, int a2)
{
  uint64_t v3 = v2;
  sub_20A71E3C8(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71E3FC();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8CA180();
  uint64_t v54 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v50 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)&v43 - v17;
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)&v43 - v19;
  uint64_t v21 = sub_20A8CEB40();
  if (v21)
  {
    uint64_t v22 = (char *)v21;
    uint64_t v46 = v3;
    uint64_t v49 = v20;
    unint64_t v23 = sub_20A8C9D20();
    unint64_t v24 = v23;
    int v47 = a2;
    if (v23 >> 62) {
      uint64_t v25 = (void (*)(char *, uint64_t))sub_20A8CF540();
    }
    else {
      uint64_t v25 = *(void (**)(char *, uint64_t))((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (__OFSUB__(v25, 1))
    {
      __break(1u);
    }
    else
    {
      int v48 = a1;
      uint64_t v55 = sub_20A8C9D40();
      uint64_t v51 = v14;
      uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x263F7DB68];
      sub_20A71BF60(0, &qword_26AC7F790, MEMORY[0x263F7DB68], MEMORY[0x263F8D488]);
      double v52 = v22;
      uint64_t v27 = v26;
      uint64_t v14 = v51;
      sub_20A71E4C4(&qword_26AC7F798, &qword_26AC7F790, v27);
      sub_20A8CE850();
      swift_bridgeObjectRelease();
      uint64_t v55 = (uint64_t)v25 - 1;
      sub_20A8C5D00();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      uint64_t v28 = v54;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v8, 1, v14) == 1)
      {

        sub_20A71BF00((uint64_t)v8, (uint64_t (*)(void))sub_20A71E3C8);
        return;
      }
      unint64_t v24 = (unint64_t)v49;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v49, v8, v14);
      uint64_t v29 = *(void (**)(char *))(v28 + 104);
      id v30 = v53;
      unsigned int v45 = *MEMORY[0x263F7DB30];
      v29(v53);
      sub_20A71F568((unint64_t *)&qword_26AC6A580, MEMORY[0x263F7DB68]);
      char v31 = sub_20A8CE210();
      uint64_t v25 = *(void (**)(char *, uint64_t))(v28 + 8);
      v25(v30, v14);
      if (v31)
      {
        v25((char *)v24, v14);

        return;
      }
      id v32 = v50;
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(v50, v24, v14);
      id v13 = v52;
      id v44 = v29;
      if (v48)
      {
        v25(v32, v14);
        char v33 = v47;
      }
      else
      {
        uint64_t v34 = v53;
        ((void (*)(char *, void, uint64_t))v29)(v53, *MEMORY[0x263F7DB50], v14);
        char v35 = sub_20A8CE210();
        v25(v34, v14);
        v25(v32, v14);
        char v33 = v47;
        if (v35)
        {
          v25((char *)v24, v14);

          return;
        }
      }
      uint64_t v36 = sub_20A8C7DD0();
      os_log_type_t v37 = sub_20A8CEA00();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 67109376;
        LODWORD(v55) = v48 & 1;
        sub_20A8CF1C0();
        *(_WORD *)(v38 + 8) = 1024;
        LODWORD(v55) = v33 & 1;
        unint64_t v24 = (unint64_t)v49;
        id v13 = v52;
        sub_20A8CF1C0();
        _os_log_impl(&dword_20A414000, v36, v37, "Hiding ForYou card ifExpanded=%{BOOL}d, animated=%{BOOL}d", (uint8_t *)v38, 0xEu);
        uint64_t v39 = v38;
        uint64_t v14 = v51;
        MEMORY[0x210528850](v39, -1, -1);
      }

      unint64_t v40 = sub_20A8C9D20();
      if (!(v40 >> 62))
      {
        uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_17;
      }
    }
    uint64_t v41 = sub_20A8CF540();
LABEL_17:
    swift_bridgeObjectRelease();
    if (__OFSUB__(v41, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v42 = v53;
      ((void (*)(char *, void, uint64_t))v44)(v53, v45, v14);
      sub_20A8C9CB0();

      v25(v42, v14);
      v25((char *)v24, v14);
    }
  }
}

void sub_20A713204(int a1)
{
  sub_20A71E3C8(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A71E3FC();
  uint64_t v7 = v6;
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_20A8CA180();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = &v33[-v15];
  uint64_t v17 = (void *)sub_20A8CEB40();
  if (v17)
  {
    uint64_t v36 = v16;
    id v39 = v17;
    unint64_t v18 = sub_20A8C9D20();
    if (v18 >> 62) {
      uint64_t v19 = sub_20A8CF540();
    }
    else {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v20 = __OFSUB__(v19, 1);
    uint64_t v21 = v19 - 1;
    if (v20)
    {
      __break(1u);
    }
    else
    {
      uint64_t v37 = v11;
      sub_20A8C9BD0();
      char v22 = sub_20A8C8AA0();
      swift_release();
      if (v22 & 1) != 0 || (objc_msgSend(v1, sel_isEditing))
      {
        id v23 = v39;
      }
      else
      {
        int v34 = a1;
        uint64_t v40 = sub_20A8C9D40();
        uint64_t v35 = v21;
        unint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x263F7DB68];
        sub_20A71BF60(0, &qword_26AC7F790, MEMORY[0x263F7DB68], MEMORY[0x263F8D488]);
        sub_20A71E4C4(&qword_26AC7F798, &qword_26AC7F790, v24);
        sub_20A8CE850();
        swift_bridgeObjectRelease();
        uint64_t v40 = v35;
        sub_20A8C5D00();
        (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v9, v7);
        uint64_t v25 = v37;
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48))(v5, 1, v10) == 1)
        {

          sub_20A71BF00((uint64_t)v5, (uint64_t (*)(void))sub_20A71E3C8);
        }
        else
        {
          uint64_t v26 = v36;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32))(v36, v5, v10);
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 16))(v13, v26, v10);
          int v27 = (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 88))(v13, v10);
          uint64_t v28 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
          if (v27 == *MEMORY[0x263F7DB30])
          {
            v28(v13, v10);
            uint64_t v29 = sub_20A8C7DD0();
            os_log_type_t v30 = sub_20A8CEA00();
            if (os_log_type_enabled(v29, v30))
            {
              char v31 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)char v31 = 67109120;
              uint64_t v26 = v36;
              LODWORD(v40) = v34 & 1;
              sub_20A8CF1C0();
              _os_log_impl(&dword_20A414000, v29, v30, "Showing ForYou card animated=%{BOOL}d", v31, 8u);
              MEMORY[0x210528850](v31, -1, -1);
            }

            sub_20A8C9CE0();
            id v32 = v26;
          }
          else
          {
            v28(v26, v10);

            id v32 = v13;
          }
          v28(v32, v10);
        }
      }
    }
  }
}

uint64_t sub_20A713780(char a1)
{
  uint64_t v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, sel_viewDidAppear_, a1 & 1);
  if (qword_26AC6ABB8 != -1) {
    swift_once();
  }
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_20A8C89C0();
  swift_release();
  sub_20A71F5E4((uint64_t)&v7, (uint64_t)&unk_26AC69E10, (uint64_t)&qword_26AC69E00, MEMORY[0x263F7D3A0], (uint64_t (*)(void))sub_20A491224);
  swift_release();
  if (qword_26AC6AC50 != -1) {
    swift_once();
  }
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_20A8C89C0();
  swift_release();
  sub_20A71F5E4((uint64_t)&v7, (uint64_t)&unk_26AC69E10, (uint64_t)&qword_26AC69E00, MEMORY[0x263F7D3A0], (uint64_t (*)(void))sub_20A491224);
  swift_release();
  if (qword_26AC6AC18 != -1) {
    swift_once();
  }
  uint64_t v9 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_20A8C89C0();
  swift_release();
  sub_20A71F5E4((uint64_t)&v7, (uint64_t)&unk_26AC69E10, (uint64_t)&qword_26AC69E00, MEMORY[0x263F7D3A0], (uint64_t (*)(void))sub_20A491224);
  swift_release();
  sub_20A8C89D0();
  swift_getObjectType();
  if (qword_26AC6ABD0 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8C8D20();
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  sub_20A71125C();
  uint64_t v4 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 144))(ObjectType, v4);
}

void sub_20A713B5C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2105289B0](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_navigationItem);

    id v5 = objc_msgSend(v4, sel_searchController);
    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_searchBar);

      objc_msgSend(v6, sel_becomeFirstResponder);
    }
  }
}

uint64_t sub_20A713C1C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v1);
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    swift_unknownObjectRetain();

    __swift_project_boxed_opaque_existential_1((void *)(v4 + 48), *(void *)(v4 + 72));
    sub_20A739DC8(0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A713CA8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v1);
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(_WORD *)(v5 + 24) = 257;
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t ObjectType = swift_getObjectType();
    long long v8 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 136);
    id v9 = v3;
    v8(1, sub_20A71F80C, v5, ObjectType, v6);

    return swift_release();
  }
  return result;
}

void sub_20A713D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x2105289B0](v4);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    sub_20A71C29C(a1);
  }
}

void sub_20A713E90()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_20A8CADF0();
  uint64_t v63 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  objc_super v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65.receiver = v1;
  v65.super_class = ObjectType;
  objc_msgSendSuper2(&v65, sel_viewWillLayoutSubviews, v8);
  id v11 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintViewController], sel_view);
  if (!v11)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v12 = v11;
  uint64_t v62 = v5;
  id v13 = objc_msgSend(v1, sel_view);
  if (!v13)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v14 = v13;
  objc_msgSend(v13, sel_bounds);
  double v16 = v15;
  double v18 = v17;
  double v20 = v19;
  double v22 = v21;

  objc_msgSend(v12, sel_setFrame_, v16, v18, v20, v22);
  sub_20A7143D0();
  uint64_t v23 = *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_mastheadViewProvider];
  id v24 = objc_msgSend(v1, sel_view);
  if (!v24)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = v24;
  uint64_t v61 = v3;
  objc_msgSend(v24, sel_bounds);
  uint64_t v27 = v26;
  uint64_t v29 = v28;

  id v30 = objc_msgSend(v1, sel_view);
  if (!v30)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  char v31 = v30;
  objc_msgSend(v30, sel_layoutMargins);
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;

  sub_20A8C9C40();
  swift_getObjectType();
  sub_20A8CAD00();
  swift_unknownObjectRelease();
  uint64_t v40 = v62;
  sub_20A8C96E0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  id v41 = objc_msgSend(v1, sel_splitViewController);
  if (!v41
    || (uint64_t v42 = v41,
        id v43 = objc_msgSend(v41, sel_traitCollection),
        v42,
        !v43))
  {
    id v43 = objc_msgSend(v1, sel_traitCollection);
  }
  v67[0] = v27;
  v67[1] = v29;
  v67[2] = v33;
  v67[3] = v35;
  v67[4] = v37;
  v67[5] = v39;
  v67[6] = v43;
  __swift_project_boxed_opaque_existential_1((void *)(v23 + 40), *(void *)(v23 + 64));
  id v44 = v43;
  sub_20A485E08((uint64_t)v67, v66);
  id v45 = sub_20A801D6C();
  type metadata accessor for MastheadView();
  uint64_t v46 = (char *)swift_dynamicCastClassUnconditional();
  if (qword_26AC69098 != -1) {
    swift_once();
  }
  type metadata accessor for MastheadViewRenderer();
  sub_20A71F568(&qword_26AC71A28, (void (*)(uint64_t))type metadata accessor for MastheadViewRenderer);
  sub_20A8C41C0();
  uint64_t v47 = v61;
  if (v64 == 1) {
    sub_20A540AE8((uint64_t)v66, v46);
  }
  else {
    sub_20A540EDC((uint64_t)v66, v46);
  }

  sub_20A71F5B0((uint64_t)v66);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v47);
  int v48 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView];
  if (v48)
  {
    id v49 = v48;
    id v50 = objc_msgSend(v1, sel_view);
    if (v50)
    {
      uint64_t v51 = v50;
      objc_msgSend(v50, sel_bounds);
      double v53 = v52;
      double v55 = v54;
      double v57 = v56;
      double v59 = v58;

      objc_msgSend(v49, sel_setFrame_, v53, v55, v57, v59);
      return;
    }
LABEL_21:
    __break(1u);
  }
}

void sub_20A7143D0()
{
  uint64_t v0 = sub_20A8C9830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BF0();
  uint64_t v4 = (void *)sub_20A8C94C0();
  swift_release();
  sub_20A8C9C40();
  swift_getObjectType();
  sub_20A8CAD00();
  swift_unknownObjectRelease();
  uint64_t v5 = (void *)sub_20A8C9790();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  unint64_t v6 = (unint64_t)objc_msgSend(v5, sel_horizontalSizeClass);
  double v7 = 0.0;
  if (v6 <= 2) {
    double v7 = dbl_20A8EC5D0[v6];
  }
  objc_msgSend(v4, sel_contentInset);
  objc_msgSend(v4, sel_setContentInset_, v7, 0.0, 16.0, 0.0);
  id v8 = v4;
  objc_msgSend(v8, sel_contentOffset);
  objc_msgSend(v8, sel_setContentOffset_);
}

void sub_20A7145D0()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v4 = v3;
  uint64_t v25 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v23 - v5;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v11 = v10;
  uint64_t v26 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.receiver = v0;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, sel_viewDidLayoutSubviews, v12);
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability], *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability + 24]);
  if (sub_20A8C3850())
  {
    id v15 = sub_20A582778();
    if (v15)
    {
      double v16 = v15;
      id v17 = objc_msgSend(v15, sel_traitCollection);
      id v24 = objc_msgSend(v17, sel_horizontalSizeClass);

      uint64_t v27 = 0;
      char v28 = 1;
      id v18 = objc_msgSend(v16, sel_viewControllers);
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F920);
      unint64_t v19 = sub_20A8CE5E0();

      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_20A8CF540();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v20 >= 2)
      {
        uint64_t v21 = sub_20A581BA8(&v27, v16);
        if (v24 != (id)2 || v21 > 1) {
          goto LABEL_12;
        }
      }
      else if (v24 != (id)2)
      {
LABEL_12:

        return;
      }
      sub_20A7149EC((uint64_t)v9);
      uint64_t v22 = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v11) == 1)
      {

        sub_20A71BF00((uint64_t)v9, (uint64_t (*)(void))sub_20A42D908);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v9, v11);
        uint64_t v27 = v1;
        sub_20A71F568(&qword_26763AE80, (void (*)(uint64_t))type metadata accessor for StockListViewController);
        sub_20A8C9490();
        LOBYTE(v27) = 0;
        sub_20A74231C((uint64_t)v14, (uint64_t)v6, (unsigned __int8 *)&v27);

        (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v11);
      }
    }
  }
}

uint64_t sub_20A7149EC@<X0>(uint64_t a1@<X8>)
{
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  objc_super v29 = (char *)&v26 - v4;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_20A8C2B70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v28 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_20A8CB160();
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v14(v7, 1, v11) == 1)
  {
    uint64_t v26 = v1;
    uint64_t v27 = a1;
    sub_20A8C9BF0();
    id v15 = (void *)sub_20A8C94C0();
    swift_release();
    id v16 = objc_msgSend(v15, sel_indexPathsForSelectedItems);

    if (v16)
    {
      uint64_t v17 = sub_20A8CE5E0();

      if (*(void *)(v17 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v10, v17 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    a1 = v27;
    sub_20A71BF00((uint64_t)v7, (uint64_t (*)(void))sub_20A469FF4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v10, v7, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
  }
  if (v14(v10, 1, v11) == 1)
  {
    sub_20A71BF00((uint64_t)v10, (uint64_t (*)(void))sub_20A469FF4);
    sub_20A42D93C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
  else
  {
    uint64_t v20 = v28;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v28, v10, v11);
    sub_20A8C9C10();
    uint64_t v21 = a1;
    uint64_t v32 = v33;
    uint64_t v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A71BFC4(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A71F754((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v22);
    uint64_t v23 = v29;
    sub_20A8C9490();
    swift_release();
    uint64_t v24 = v31;
    sub_20A8CBB80();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v11);
    sub_20A42D93C();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v21, 0, 1, v25);
  }
}

void sub_20A714F58(uint64_t a1)
{
  uint64_t v2 = v1;
  v13.receiver = v2;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_traitCollectionDidChange_, a1);
  swift_getObjectType();
  id v4 = objc_msgSend(v2, sel_traitCollection);
  sub_20A8CA6E0();

  id v5 = objc_msgSend(v2, sel_traitCollection);
  sub_20A710CD8((uint64_t)v5);

  id v6 = objc_msgSend(v2, sel_splitViewController);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_traitCollection);
    sub_20A715108(v8);
  }
  unsigned int v9 = *(unsigned __int16 *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState];
  if (*(_WORD *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState] != 2)
  {
    uint64_t v10 = sub_20A8CEB40();
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      sub_20A71074C(v9 & 1, (v9 >> 8) & 1);
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F8F8);
      uint64_t v12 = (void *)sub_20A8CE5D0();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setToolbarItems_, v12);
    }
  }
  sub_20A7127B8();
}

void sub_20A715108(void *a1)
{
  id v2 = objc_msgSend(a1, sel_horizontalSizeClass);
  if (v2) {
    BOOL v3 = v2 == (id)2;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    id v5 = objc_msgSend(v1, sel_navigationItem);
    objc_msgSend(v5, sel_setHidesSearchBarWhenScrolling_, 0);
  }
  else
  {
    if (v2 != (id)1)
    {
      sub_20A8CF520();
      __break(1u);
      return;
    }
    id v5 = objc_msgSend(v1, sel_navigationItem);
    BOOL v4 = !UIAccessibilityIsVoiceOverRunning()
      && !UIAccessibilityIsSwitchControlRunning()
      && !_AXSCommandAndControlEnabled()
      && _AXSFullKeyboardAccessEnabled() == 0;
    objc_msgSend(v5, sel_setHidesSearchBarWhenScrolling_, v4);
  }
}

id sub_20A7153D8(char *a1, char a2, char a3)
{
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v9 = (objc_class *)type metadata accessor for StockListViewController();
  v37.receiver = a1;
  v37.super_class = v9;
  objc_msgSendSuper2(&v37, sel_setEditing_animated_, a2 & 1, a3 & 1);
  if (a2)
  {
    id v10 = objc_msgSend(a1, sel_navigationItem);
    id v11 = objc_msgSend(a1, sel_editButtonItem);
    objc_msgSend(v10, sel_setRightBarButtonItem_, v11);
  }
  else
  {
    id v12 = sub_20A70F0FC();
    if (!v12) {
      goto LABEL_6;
    }
    id v10 = v12;
    id v11 = objc_msgSend(a1, sel_navigationItem);
    objc_msgSend(v11, sel_setRightBarButtonItem_, v10);
  }

LABEL_6:
  id v13 = sub_20A801D6C();
  objc_msgSend(v13, sel_setNeedsLayout);

  id v14 = sub_20A801D6C();
  objc_msgSend(v14, sel_layoutIfNeeded);

  sub_20A71074C(a2 & 1, 1);
  uint64_t v15 = sub_20A8CEB40();
  if (v15)
  {
    id v16 = (void *)v15;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F8F8);
    uint64_t v17 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setToolbarItems_animated_, v17, a3 & 1);

    if (a2)
    {
LABEL_8:
      swift_getObjectType();
      uint64_t v18 = sub_20A8C2B70();
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
      v19(v8, 1, 1, v18);
      sub_20A8CB170();
      sub_20A8C9BF0();
      uint64_t v20 = (void *)sub_20A8C94C0();
      swift_release();
      v19(v8, 1, 1, v18);
      int v21 = a3 & 1;
      sub_20A8CEAD0();

      sub_20A71BF00((uint64_t)v8, (uint64_t (*)(void))sub_20A469FF4);
      uint64_t v22 = sub_20A8C7DD0();
      os_log_type_t v23 = sub_20A8CEA00();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v24 = 0;
        _os_log_impl(&dword_20A414000, v22, v23, "Hiding ForYou card due to entering edit state", v24, 2u);
        MEMORY[0x210528850](v24, -1, -1);
      }

      sub_20A712B5C(1, v21);
      goto LABEL_16;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (a2) {
      goto LABEL_8;
    }
  }
  uint64_t v25 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 32))(ObjectType, v25) & 1) == 0)
  {
    uint64_t v27 = sub_20A8C7DD0();
    os_log_type_t v28 = sub_20A8CEA00();
    if (os_log_type_enabled(v27, v28))
    {
      objc_super v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v29 = 0;
      _os_log_impl(&dword_20A414000, v27, v28, "Showing ForYou card due to exiting edit state", v29, 2u);
      MEMORY[0x210528850](v29, -1, -1);
    }

    sub_20A713204(a3 & 1);
  }
LABEL_16:
  sub_20A8C9BF0();
  uint64_t v30 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v30, sel_setDragInteractionEnabled_, (a2 & 1) == 0);

  uint64_t v31 = self;
  objc_msgSend(v31, sel_begin);
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = a2 & 1;
  *(void *)(v32 + 24) = a1;
  aBlock[4] = sub_20A71E564;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_66;
  uint64_t v33 = _Block_copy(aBlock);
  uint64_t v34 = a1;
  swift_release();
  objc_msgSend(v31, sel_setCompletionBlock_, v33);
  _Block_release(v33);
  sub_20A8C9BE0();
  return objc_msgSend(v31, sel_commit);
}

void sub_20A71593C(char a1, void *a2)
{
  uint64_t v4 = sub_20A8CC220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CC250();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    uint64_t v19 = v10;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v18 = sub_20A8CEBE0();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    aBlock[4] = sub_20A71E570;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4713FC;
    aBlock[3] = &block_descriptor_72;
    id v14 = _Block_copy(aBlock);
    id v15 = a2;
    swift_release();
    sub_20A8CC240();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_20A71F568(&qword_26AC677A0, MEMORY[0x263F8F030]);
    id v16 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_20A71BF60(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_20A71E4C4((unint64_t *)&qword_26AC7F7B0, (unint64_t *)&unk_26AC7F7A0, v16);
    sub_20A8CF290();
    uint64_t v17 = (void *)v18;
    MEMORY[0x210526F10](0, v12, v7, v14);
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v19);
  }
}

void sub_20A715EDC(void *a1)
{
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v117 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v118 = (char *)&v109 - v6;
  uint64_t v7 = (void *)sub_20A8C2B70();
  v119 = (void *)*(v7 - 1);
  id v120 = v7;
  MEMORY[0x270FA5388](v7);
  v116 = (char *)&v109 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v109 - v10;
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v109 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v109 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v109 - v19;
  id v121 = v1;
  sub_20A8C9BF0();
  uint64_t v21 = sub_20A8C94C0();
  swift_release();
  sub_20A8C9BF0();
  uint64_t v22 = (void *)sub_20A8C94C0();
  swift_release();
  id v23 = a1;
  uint64_t v24 = (void *)sub_20A8C2B00();
  id v25 = objc_msgSend(v22, sel_cellForItemAtIndexPath_, v24);

  if (!v25)
  {
    id v121 = v17;
    uint64_t v62 = v11;
    v113 = v14;
    id v114 = v23;
    uint64_t v63 = v119;
    id v64 = v120;
    v115 = v20;
    unint64_t v65 = (unint64_t)&selRef_initWithInteger_;
    id v66 = objc_msgSend((id)v21, sel_visibleCells);
    sub_20A42CFF0(0, &qword_26763D868);
    unint64_t v67 = sub_20A8CE5E0();

    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v108 = sub_20A8CF540();
      swift_bridgeObjectRelease();
      id v68 = v64;
      if (v108)
      {
LABEL_11:
        if ((v67 & 0xC000000000000001) != 0)
        {
          id v23 = (id)MEMORY[0x210527700](0, v67);
          id v69 = v121;
        }
        else
        {
          id v69 = v121;
          if (!*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_43;
          }
          id v23 = *(id *)(v67 + 32);
        }
        swift_bridgeObjectRelease();
        id v120 = (id)v21;
        id v70 = objc_msgSend((id)v21, sel_indexPathForCell_, v23);
        if (v70)
        {
          uint64_t v71 = v70;
          v110 = v62;
          sub_20A8C2B10();

          uint64_t v21 = (uint64_t)v63;
          uint64_t v72 = (void (*)(char *, id, id))v63[4];
          uint64_t v73 = (uint64_t)v118;
          v72(v118, v69, v68);
          v112 = (void (*)(uint64_t, uint64_t, uint64_t, id))v63[7];
          v112(v73, 0, 1, v68);
          v111 = (unsigned int (*)(uint64_t, uint64_t, id))v63[6];
          if (v111(v73, 1, v68) != 1)
          {
            v109 = v63 + 7;
            v118 = (char *)v72;
            v72(v115, (id)v73, v68);
            id v74 = objc_msgSend(v120, (SEL)&protocolRef_UISearchControllerDelegate + 3);
            unint64_t v65 = sub_20A8CE5E0();

            if (!(v65 >> 62))
            {
              uint64_t v75 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
              goto LABEL_18;
            }
LABEL_43:
            swift_bridgeObjectRetain();
            uint64_t v75 = sub_20A8CF540();
            swift_bridgeObjectRelease();
LABEL_18:
            id v76 = v114;
            if (!v75)
            {
              swift_bridgeObjectRelease();
              (*(void (**)(char *, id))(v21 + 8))(v115, v68);

              return;
            }
            unint64_t v77 = v75 - 1;
            if (__OFSUB__(v75, 1))
            {
              __break(1u);
            }
            else if ((v65 & 0xC000000000000001) == 0)
            {
              if ((v77 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v77 < *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v78 = *(id *)(v65 + 8 * v77 + 32);
                goto LABEL_24;
              }
              __break(1u);
              goto LABEL_48;
            }
            id v78 = (id)MEMORY[0x210527700](v77, v65);
LABEL_24:
            uint64_t v79 = v78;
            swift_bridgeObjectRelease();
            id v80 = objc_msgSend(v120, sel_indexPathForCell_, v79);
            if (v80)
            {
              uint64_t v81 = v80;
              id v82 = v121;
              sub_20A8C2B10();

              uint64_t v83 = (uint64_t)v117;
              id v84 = v82;
              uint64_t v85 = v118;
              ((void (*)(char *, id, id))v118)(v117, v84, v68);
              v112(v83, 0, 1, v68);
              if (v111(v83, 1, v68) != 1)
              {
                id v121 = v23;
                ((void (*)(char *, uint64_t, id))v85)(v113, v83, v68);
                id v86 = v76;
                uint64_t v87 = sub_20A8C2B50();
                uint64_t v88 = v115;
                uint64_t v89 = sub_20A8C2B50();
                v90 = *(void (**)(char *, id, id))(v21 + 16);
                uint64_t v91 = v110;
                v90(v110, v86, v68);
                v92 = v116;
                v90(v116, v88, v68);
                id v93 = v120;
                if (v87 >= v89)
                {
                  uint64_t v105 = sub_20A8C2B60();
                  uint64_t v106 = sub_20A8C2B60();
                  CGRect v94 = *(void (**)(char *, id))(v21 + 8);
                  v94(v92, v68);
                  v94(v91, v68);
                  if (v105 >= v106)
                  {
                    sub_20A8C2B50();
                    v107 = v113;
                    sub_20A8C2B50();

                    v94(v107, v68);
                    v94(v88, v68);
                    return;
                  }
                }
                else
                {

                  CGRect v94 = *(void (**)(char *, id))(v21 + 8);
                  v94(v92, v68);
                  v94(v91, v68);
                }
                v94(v113, v68);
                v94(v88, v68);
                return;
              }
            }
            else
            {
              uint64_t v83 = (uint64_t)v117;
              v112((uint64_t)v117, 1, 1, v68);
            }

            (*(void (**)(char *, id))(v21 + 8))(v115, v68);
            sub_20A71BF00(v83, (uint64_t (*)(void))sub_20A469FF4);
            return;
          }
        }
        else
        {
          uint64_t v73 = (uint64_t)v118;
          ((void (*)(char *, uint64_t, uint64_t, id))v63[7])(v118, 1, 1, v68);
        }

        sub_20A71BF00(v73, (uint64_t (*)(void))sub_20A469FF4);
        return;
      }
    }
    else
    {
      id v68 = v64;
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_11;
      }
    }

    swift_bridgeObjectRelease();
    return;
  }
  sub_20A8C9BF0();
  uint64_t v26 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v25, sel_frame);
  double v28 = v27;
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;
  id v35 = v121;
  id v36 = objc_msgSend(v121, sel_view);
  if (!v36)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  objc_super v37 = v36;
  id v38 = objc_msgSend(v36, sel_coordinateSpace);

  objc_msgSend(v26, sel_convertRect_toCoordinateSpace_, v38, v28, v30, v32, v34);
  id v40 = v39;
  CGFloat v42 = v41;
  CGFloat v44 = v43;
  CGFloat v46 = v45;

  swift_unknownObjectRelease();
  sub_20A8C9BF0();
  uint64_t v47 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v47, sel_adjustedContentInset);
  double v49 = v48;

  id v50 = (void *)sub_20A8CEB40();
  if (!v50
    || (uint64_t v51 = v50,
        id v52 = objc_msgSend(v50, sel_navigationController),
        v51,
        !v52))
  {
LABEL_7:
    *(void *)&v123.origin.x = v40;
    v123.origin.y = v42;
    v123.size.width = v44;
    v123.size.height = v46;
    if (CGRectGetMinY(v123) < v49)
    {

      return;
    }
    *(void *)&v124.origin.x = v40;
    v124.origin.y = v42;
    v124.size.width = v44;
    v124.size.height = v46;
    CGRectGetMaxY(v124);
    id v95 = objc_msgSend(v35, sel_view);
    if (v95)
    {
      CGRect v96 = v95;
      objc_msgSend(v95, sel_frame);
      CGFloat v98 = v97;
      CGFloat v100 = v99;
      CGFloat v102 = v101;
      CGFloat v104 = v103;

      v125.origin.x = v98;
      v125.origin.y = v100;
      v125.size.width = v102;
      v125.size.height = v104;
      CGRectGetMaxY(v125);

      return;
    }
    goto LABEL_49;
  }
  id v120 = v40;
  id v53 = objc_msgSend(v52, sel_toolbar);

  if (v53)
  {
    objc_msgSend(v53, sel_frame);
    CGFloat v55 = v54;
    CGFloat v57 = v56;
    CGFloat v59 = v58;
    CGFloat v61 = v60;

    v122.origin.x = v55;
    v122.origin.y = v57;
    v122.size.width = v59;
    v122.size.height = v61;
    CGRectGetHeight(v122);
    id v40 = v120;
    goto LABEL_7;
  }
LABEL_50:
  __break(1u);
}

void sub_20A716950(char *a1, uint64_t a2)
{
  uint64_t v61 = a2;
  uint64_t v3 = sub_20A8CBBB0();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  MEMORY[0x270FA5388](v3);
  CGFloat v57 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_20A8CBBC0();
  uint64_t v56 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CD2C0();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CA180();
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)&a1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(_WORD *)(v13 + 24) = 0;
  uint64_t v14 = *(void *)(v12 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = *(void (**)(void, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 136);
  uint64_t v17 = a1;
  v16(0, sub_20A71F80C, v13, ObjectType, v14);
  swift_release();
  uint64_t v18 = sub_20A8CEB40();
  if (!v18) {
    goto LABEL_10;
  }
  uint64_t v19 = (void *)v18;
  unint64_t v20 = sub_20A8C9D20();
  if (v20 >> 62) {
    uint64_t v21 = sub_20A8CF540();
  }
  else {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v21)
  {

LABEL_10:
    sub_20A8C9BD0();
    sub_20A562644();
    id v35 = (uint64_t *)&v6[*(int *)(v34 + 48)];
    id v36 = &v6[*(int *)(v34 + 64)];
    sub_20A8CD240();
    objc_super v37 = &v17[OBJC_IVAR____TtC8StocksUI23StockListViewController_styler];
    swift_beginAccess();
    id v38 = __swift_project_boxed_opaque_existential_1(v37, *((void *)v37 + 3));
    uint64_t v39 = *(void *)(*v38 + 80);
    uint64_t v40 = *(void *)(*v38 + 88);
    __swift_project_boxed_opaque_existential_1((void *)(*v38 + 56), v39);
    sub_20A819910(v39, v40, v35);
    uint64_t v41 = *MEMORY[0x263F7D2F0];
    uint64_t v42 = sub_20A8C8380();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v36, v41, v42);
    uint64_t v43 = v56;
    uint64_t v44 = v58;
    (*(void (**)(char *, void, uint64_t))(v56 + 104))(v6, *MEMORY[0x263F7E0D0], v58);
    uint64_t v46 = v59;
    uint64_t v45 = v60;
    uint64_t v47 = v57;
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v57, *MEMORY[0x263F7E0D8], v60);
    sub_20A8C8AB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v45);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v44);
    goto LABEL_11;
  }
  unint64_t v22 = sub_20A8C9D20();
  if (v22 >> 62) {
    uint64_t v23 = sub_20A8CF540();
  }
  else {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!__OFSUB__(v23, 1))
  {
    uint64_t v24 = *MEMORY[0x263F7DB30];
    uint64_t v26 = v54;
    uint64_t v25 = v55;
    double v27 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
    uint64_t v60 = v23 - 1;
    v27(v11, v24, v55);
    double v28 = v51;
    uint64_t v29 = v52;
    uint64_t v30 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v61, v53);
    unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v32 + v31, v28, v30);
    double v33 = v17;
    sub_20A8C9CB0();

    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
LABEL_11:
    id v48 = objc_msgSend(v17, sel_editButtonItem);
    objc_msgSend(v48, sel_setEnabled_, 0);

    id v49 = sub_20A70F0FC();
    objc_msgSend(v49, sel_setEnabled_, 0);

    sub_20A8C9BF0();
    id v50 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v50, sel_setUserInteractionEnabled_, 0);

    return;
  }
  __break(1u);
}

uint64_t sub_20A716F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v22[1] = a3;
  uint64_t v23 = sub_20A8CBBB0();
  uint64_t v4 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CBBC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BD0();
  sub_20A562644();
  uint64_t v12 = (uint64_t *)&v10[*(int *)(v11 + 48)];
  uint64_t v13 = &v10[*(int *)(v11 + 64)];
  sub_20A8CD240();
  uint64_t v14 = (void *)(a2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_styler);
  swift_beginAccess();
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(v14, v14[3]);
  uint64_t v16 = *(void *)(*v15 + 80);
  uint64_t v17 = *(void *)(*v15 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(*v15 + 56), v16);
  sub_20A819910(v16, v17, v12);
  uint64_t v18 = *MEMORY[0x263F7D2F0];
  uint64_t v19 = sub_20A8C8380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v13, v18, v19);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7E0D0], v7);
  uint64_t v20 = v23;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7E0D8], v23);
  sub_20A8C8AB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_20A717248(char *a1)
{
  uint64_t v2 = *(void *)&a1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(_WORD *)(v3 + 24) = 0;
  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void (**)(void, id (*)(), uint64_t, uint64_t, uint64_t))(v4 + 136);
  uint64_t v7 = a1;
  v6(0, sub_20A71E51C, v3, ObjectType, v4);

  return swift_release();
}

void sub_20A71730C(void *a1)
{
  uint64_t v2 = sub_20A8CBBB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CBBC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BD0();
  char v10 = sub_20A8C8AA0();
  swift_release();
  if (v10)
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v11 = (void *)sub_20A8CF180();
    sub_20A8CEA00();
    sub_20A8C7D90();

    sub_20A8C9BD0();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7E0C8], v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7E0D8], v2);
    *(void *)(swift_allocObject() + 16) = a1;
    id v12 = a1;
    sub_20A8C8AB0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v13 = objc_msgSend(a1, sel_editButtonItem);
  objc_msgSend(v13, sel_setEnabled_, 1);

  id v14 = sub_20A70F0FC();
  objc_msgSend(v14, sel_setEnabled_, 1);

  sub_20A8C9BF0();
  uint64_t v15 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v15, sel_setUserInteractionEnabled_, 1);
}

void sub_20A717624()
{
  uint64_t v0 = sub_20A8CA180();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71E5C8();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71E3C8(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v28 - v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_20A8CEB40();
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    double v28 = v3;
    uint64_t v18 = sub_20A8C9D40();
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, v18+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(void *)(v1 + 72) * (v19 - 1), v0);
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v20(v15, 0, 1, v0);
    }
    else
    {
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      v20(v15, 1, 1, v0);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v12, *MEMORY[0x263F7DB30], v0);
    v20(v12, 0, 1, v0);
    uint64_t v21 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_20A71E62C((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(void))sub_20A71E3C8);
    sub_20A71E62C((uint64_t)v12, v21, (uint64_t (*)(void))sub_20A71E3C8);
    unint64_t v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    if (v22((uint64_t)v7, 1, v0) == 1)
    {
      sub_20A71BF00((uint64_t)v12, (uint64_t (*)(void))sub_20A71E3C8);
      sub_20A71BF00((uint64_t)v15, (uint64_t (*)(void))sub_20A71E3C8);
      if (v22(v21, 1, v0) == 1)
      {
        sub_20A71BF00((uint64_t)v7, (uint64_t (*)(void))sub_20A71E3C8);
LABEL_12:
        sub_20A8C9D40();
        swift_bridgeObjectRelease();
        sub_20A8C9CE0();
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v23 = v29;
      sub_20A71E62C((uint64_t)v7, v29, (uint64_t (*)(void))sub_20A71E3C8);
      if (v22(v21, 1, v0) != 1)
      {
        uint64_t v24 = v23;
        uint64_t v25 = v28;
        (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v28, v21, v0);
        sub_20A71F568((unint64_t *)&qword_26AC6A580, MEMORY[0x263F7DB68]);
        char v26 = sub_20A8CE210();
        double v27 = *(void (**)(char *, uint64_t))(v1 + 8);
        v27(v25, v0);
        sub_20A71BF00((uint64_t)v12, (uint64_t (*)(void))sub_20A71E3C8);
        sub_20A71BF00((uint64_t)v15, (uint64_t (*)(void))sub_20A71E3C8);
        v27((char *)v24, v0);
        sub_20A71BF00((uint64_t)v7, (uint64_t (*)(void))sub_20A71E3C8);
        if (v26) {
          goto LABEL_12;
        }
LABEL_13:

        return;
      }
      sub_20A71BF00((uint64_t)v12, (uint64_t (*)(void))sub_20A71E3C8);
      sub_20A71BF00((uint64_t)v15, (uint64_t (*)(void))sub_20A71E3C8);
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v23, v0);
    }
    sub_20A71BF00((uint64_t)v7, (uint64_t (*)(void))sub_20A71E5C8);
    goto LABEL_13;
  }
}

uint64_t sub_20A717B20(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v3);
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = *(void *)(result + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    swift_unknownObjectRetain();

    uint64_t v7 = *(void *)(v6 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 112))(a2, 1, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A717BC8(void *a1)
{
  if ((objc_msgSend(a1, sel_isEditing) & 1) == 0)
  {
    id v2 = objc_msgSend(a1, sel_navigationItem);
    id v3 = sub_20A70F0FC();
    objc_msgSend(v2, sel_setRightBarButtonItem_, v3);
  }
}

uint64_t sub_20A717C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_20A8C9BF0();
  uint64_t v8 = (void *)sub_20A8C94C0();
  swift_release();
  id v9 = objc_msgSend(v8, sel_indexPathsForSelectedItems);

  if (v9)
  {
    sub_20A8C2B70();
    uint64_t v10 = sub_20A8CE5E0();

    MEMORY[0x270FA5388](v11);
    v16[2] = a2;
    BOOL v12 = sub_20A8535DC((uint64_t (*)(char *))sub_20A71E014, (uint64_t)v16, v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    BOOL v12 = 1;
  }
  uint64_t v13 = *(void *)(*(void *)(v4 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, BOOL, uint64_t, uint64_t))(v13 + 128))(a1, a2, a3, v12, ObjectType, v13);
}

void sub_20A717DB8(char *a1, uint64_t a2)
{
  uint64_t v32 = a2;
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v5 = v4;
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  sub_20A42D93C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v8);
  BOOL v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v33 = v2;
  sub_20A8C9BF0();
  uint64_t v13 = (void *)sub_20A8C94C0();
  swift_release();
  unsigned __int8 v14 = objc_msgSend(v13, sel_hasActiveDrag);

  if ((v14 & 1) == 0)
  {
    uint64_t v30 = a1;
    id v15 = objc_msgSend(v33, sel_navigationItem);
    id v16 = objc_msgSend(v15, sel_searchController);

    id v29 = v16;
    if (v16)
    {
      uint64_t v17 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v9);
      uint64_t v18 = v30;
      uint64_t v19 = v31;
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      uint64_t v21 = v7;
      uint64_t v30 = v7;
      uint64_t v22 = v5;
      v20(v21, v18, v5);
      unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      unint64_t v24 = (v11 + *(unsigned __int8 *)(v19 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v17;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v23, v12, v9);
      (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(v25 + v24, v30, v22);
      aBlock[4] = sub_20A71E118;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4713FC;
      aBlock[3] = &block_descriptor_45;
      char v26 = _Block_copy(aBlock);
      swift_release();
      id v27 = v29;
      objc_msgSend(v29, sel_dismissViewControllerAnimated_completion_, 1, v26);
      _Block_release(v26);
    }
    sub_20A718884();
  }
}

uint64_t sub_20A71811C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v29 = a1;
  uint64_t v33 = sub_20A8CC220();
  uint64_t v36 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v32 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CC250();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  sub_20A42D93C();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v30 = sub_20A8CEBE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v28, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + *(unsigned __int8 *)(v9 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19 + v18, v11, v8);
  aBlock[4] = sub_20A71E2A8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_51;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v21 = v31;
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A71F568(&qword_26AC677A0, MEMORY[0x263F8F030]);
  uint64_t v22 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_20A71BF60(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_20A71E4C4((unint64_t *)&qword_26AC7F7B0, (unint64_t *)&unk_26AC7F7A0, v22);
  unint64_t v24 = v32;
  uint64_t v23 = v33;
  sub_20A8CF290();
  uint64_t v25 = (void *)v30;
  MEMORY[0x210526F10](0, v21, v24, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, v35);
}

uint64_t sub_20A7185F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C8EA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1 + 16;
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x2105289B0](a1 + 16);
  if (v11)
  {
    uint64_t v12 = (void *)v11;
    sub_20A8CEB90();

    if (*((void *)&v19 + 1))
    {
      sub_20A42BEBC(&v18, (uint64_t)v21);
      __swift_project_boxed_opaque_existential_1(v21, v22);
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D5C0], v6);
      sub_20A8C9890();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if (UIAccessibilityIsVoiceOverRunning()) {
        goto LABEL_9;
      }
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v20 = 0;
    long long v18 = 0u;
    long long v19 = 0u;
  }
  sub_20A71F5E4((uint64_t)&v18, (uint64_t)&qword_26763D880, (uint64_t)&qword_26AC82490, MEMORY[0x263F7D898], (uint64_t (*)(void))sub_20A491224);
  if (UIAccessibilityIsVoiceOverRunning()) {
    goto LABEL_9;
  }
LABEL_7:
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x2105289B0](v10);
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    sub_20A4342F4(v13 + OBJC_IVAR____TtC8StocksUI23StockListViewController_keyboardInputMonitor, (uint64_t)v21);

    __swift_project_boxed_opaque_existential_1(v21, v22);
    sub_20A8C9F70();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
LABEL_9:
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v10);
  if (result)
  {
    id v16 = (void *)result;
    swift_unknownObjectRetain();

    HIBYTE(v17) = 0;
    sub_20A74231C(a2, a3, (unsigned __int8 *)&v17 + 7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A718884()
{
  uint64_t v1 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability), *(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability + 24));
  uint64_t result = sub_20A8C3850();
  if (result)
  {
    sub_20A42D93C();
    sub_20A8C8330();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1) {
        sub_20A71BF00((uint64_t)v3, type metadata accessor for StockListModel);
      }
      uint64_t v6 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
      uint64_t ObjectType = swift_getObjectType();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 160))(ObjectType, v6);
    }
    else
    {
      return sub_20A71BF00((uint64_t)v3, type metadata accessor for StockListStockModel);
    }
  }
  return result;
}

void sub_20A7189D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CAE00();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a3, v5, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v10 == *MEMORY[0x263F7DEA0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_3:
    uint64_t v11 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 48))(ObjectType, v11);
    return;
  }
  if (v10 == *MEMORY[0x263F7DE88])
  {
    uint64_t v13 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v14, v13);
  }
  else
  {
    if (v10 == *MEMORY[0x263F7DE98] || v10 == *MEMORY[0x263F7DE90]) {
      goto LABEL_3;
    }
    if (v10 != *MEMORY[0x263F7DEA8])
    {
      if (v10 == *MEMORY[0x263F7DEB0])
      {
        sub_20A8C9BF0();
        id v16 = (void *)sub_20A8C94C0();
        swift_release();
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
        sub_20A8C8C70();
      }
      else
      {
        sub_20A8CF520();
        __break(1u);
      }
    }
  }
}

uint64_t sub_20A718C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_20A8C91C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - v10;
  sub_20A8CA3F0();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D690], v5);
  sub_20A71F568((unint64_t *)&unk_26763D870, MEMORY[0x263F7D6A0]);
  char v12 = sub_20A8CE210();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v13(v11, v5);
  BOOL v14 = (v12 & 1) == 0 && !UIAccessibilityIsVoiceOverRunning();
  uint64_t v15 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, BOOL, uint64_t, uint64_t))(v15 + 112))(a2, v14, ObjectType, v15);
}

uint64_t sub_20A718E4C()
{
  swift_retain();
  sub_20A8C5D80();
  swift_release();
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v1 + 136))(1, 0, 0, ObjectType, v1);
}

void sub_20A718EEC()
{
  uint64_t v1 = v0;
  swift_retain();
  sub_20A8C5D80();
  swift_release();
  sub_20A8C9BF0();
  uint64_t v2 = (void *)sub_20A8C94C0();
  swift_release();
  unsigned __int8 v3 = objc_msgSend(v2, sel_hasActiveDrop);

  if ((v3 & 1) == 0)
  {
    uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
    id v5 = objc_msgSend(v1, sel_isEditing);
    uint64_t v6 = *(void *)(v4 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(id, void, void, uint64_t, uint64_t))(v6 + 136))(v5, 0, 0, ObjectType, v6);
  }
}

uint64_t sub_20A718FE4(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    v10[4] = sub_20A71E0B4;
    v10[5] = v4;
    v10[0] = MEMORY[0x263EF8330];
    v10[1] = 1107296256;
    v10[2] = sub_20A4713FC;
    v10[3] = &block_descriptor_33;
    id v5 = _Block_copy(v10);
    swift_unknownObjectRetain();
    uint64_t v6 = v2;
    swift_release();
    objc_msgSend(a2, sel_addCompletion_, v5);
    _Block_release(v5);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v8 + 176))(1, 0, 0, ObjectType, v8);
  }
}

uint64_t sub_20A71911C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 168))(1, ObjectType, v1);
  return sub_20A7424A4();
}

uint64_t sub_20A719198(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 80))(a2, ObjectType, v4);
}

uint64_t sub_20A7191F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 72))(a2, ObjectType, v4);
}

uint64_t sub_20A719258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 64))(a2, ObjectType, v4);
}

uint64_t sub_20A7192C4()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  id v2 = objc_msgSend(v0, sel_isEditing);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(id, void, void, uint64_t, uint64_t))(v3 + 136))(v2, 0, 0, ObjectType, v3);
}

uint64_t sub_20A719344()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 168))(1, ObjectType, v1);
}

uint64_t sub_20A719398()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v1 + 136))(1, 0, 0, ObjectType, v1);
}

id sub_20A719440(void *a1)
{
  sub_20A8C83D0();
  if ((objc_msgSend(a1, sel_ts_isScrolling) & 1) == 0)
  {
    uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset);
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset + 16) & 1) == 0)
    {
      double v5 = *v3;
      double v4 = v3[1];
      objc_msgSend(a1, sel_contentOffset);
      if (v5 != v7 || v4 != v6)
      {
        uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
        sub_20A70E81C(&v24);
        long long v10 = v24;
        uint64_t v11 = v25;
        uint64_t v20 = v26;
        uint64_t v12 = *(void *)(v9 + 40);
        uint64_t ObjectType = swift_getObjectType();
        long long v21 = v10;
        uint64_t v22 = v11;
        uint64_t v23 = v20;
        (*(void (**)(long long *, uint64_t, uint64_t))(v12 + 120))(&v21, ObjectType, v12);
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(v9 + 40);
        uint64_t v15 = swift_getObjectType();
        (*(void (**)(uint64_t, void, void, uint64_t, uint64_t))(v14 + 176))(2, 0, 0, v15, v14);
      }
    }
  }
  id result = objc_msgSend(a1, sel_contentOffset);
  uint64_t v17 = v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset;
  *(void *)uint64_t v17 = v18;
  *(void *)(v17 + 8) = v19;
  *(unsigned char *)(v17 + 16) = 0;
  return result;
}

void sub_20A719610(void *a1)
{
  uint64_t v3 = sub_20A8C8960();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  double v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C89A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 168))(2, ObjectType, v11);
  uint64_t v13 = sub_20A8CEB40();
  if (!v13
    || (uint64_t v14 = (void *)v13, v15 = (void *)sub_20A8C9CD0(), v14, !v15)
    || (v26[1] = v15,
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F920),
        sub_20A43F7E0(0, (unint64_t *)&unk_26AC6A560),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v29 = 0;
    long long v27 = 0u;
    long long v28 = 0u;
    goto LABEL_8;
  }
  if (!*((void *)&v28 + 1))
  {
LABEL_8:
    sub_20A71F5E4((uint64_t)&v27, (uint64_t)&qword_26AC80B30, (uint64_t)&unk_26AC6A560, MEMORY[0x263F7DB20], (uint64_t (*)(void))sub_20A491224);

    return;
  }
  v26[0] = a1;
  sub_20A42BEBC(&v27, (uint64_t)v30);
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  sub_20A8CA150();
  uint64_t v16 = sub_20A8C8990();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7D4A8], v3);
  char v17 = sub_20A444A3C((uint64_t)v6, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v17)
  {
    id v18 = v26[0];
    objc_msgSend(v26[0], sel_adjustedContentInset);
    double v20 = v19;
    objc_msgSend(v18, sel_contentOffset);
    double v22 = v20 + v21;
    uint64_t v23 = (void *)sub_20A8C83E0();
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(double *)(v25 + 24) = v22;
    swift_retain();

    swift_release();
    swift_release();
  }
  else
  {
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_20A7199F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_20A8CA180();
  uint64_t v58 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v68 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v53 - v11;
  sub_20A71F47C();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  CGFloat v57 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A71BF60(0, &qword_26AC68C18, (uint64_t (*)(uint64_t))sub_20A71F47C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  id v64 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  double v21 = (char *)&v53 - v20;
  uint64_t v59 = a2 + 16;
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  unsigned __int8 v23 = objc_msgSend(Strong, sel_isEditing);

  if ((v23 & 1) == 0)
  {
    objc_msgSend(a1, sel_adjustedContentInset);
    double v25 = v24;
    objc_msgSend(a1, sel_contentOffset);
    if (v25 + v26 > 0.0 && v25 + v26 > a4)
    {
      uint64_t v32 = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v33 = (void *)sub_20A8CEB40();

      if (!v33)
      {
LABEL_22:
        uint64_t v51 = *MEMORY[0x263F7D348];
        uint64_t v52 = sub_20A8C83F0();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(a3, v51, v52);
      }
      id v53 = v33;
      uint64_t v54 = a3;
      uint64_t result = sub_20A8C9D40();
      unint64_t v34 = 0;
      unint64_t v35 = *(void *)(result + 16);
      uint64_t v56 = v58 + 16;
      id v69 = (void (**)(char *, char *, uint64_t))(v58 + 32);
      uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v63 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      unsigned int v67 = *MEMORY[0x263F7DB58];
      id v66 = (void (**)(char *, void, uint64_t))(v58 + 104);
      uint64_t v36 = (void (**)(char *, uint64_t))(v58 + 8);
      objc_super v37 = (unint64_t *)v64;
      unint64_t v60 = v35;
      uint64_t v61 = result;
      uint64_t v55 = v12;
      while (1)
      {
        if (v34 == v35)
        {
          uint64_t v38 = 1;
          unint64_t v34 = v35;
        }
        else
        {
          if (v34 >= *(void *)(result + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v39 = v58;
          uint64_t v40 = &v57[*(int *)(v14 + 48)];
          (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v40, result+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v8);
          uint64_t v41 = (char *)v37 + *(int *)(v14 + 48);
          unint64_t *v37 = v34;
          (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v40, v8);
          uint64_t v38 = 0;
          ++v34;
        }
        (*v63)(v37, v38, 1, v14);
        sub_20A71F4E8((uint64_t)v37, (uint64_t)v21, &qword_26AC68C18, (uint64_t (*)(uint64_t))sub_20A71F47C);
        if ((*v62)(v21, 1, v14) == 1)
        {

          swift_bridgeObjectRelease();
          a3 = v54;
          goto LABEL_22;
        }
        uint64_t v65 = *(void *)v21;
        uint64_t v42 = v14;
        (*v69)(v12, &v21[*(int *)(v14 + 48)], v8);
        uint64_t v43 = *v66;
        uint64_t v44 = v68;
        (*v66)(v68, v67, v8);
        sub_20A71F568((unint64_t *)&unk_26AC6A570, MEMORY[0x263F7DB68]);
        char v45 = sub_20A8CE1F0();
        uint64_t v46 = *v36;
        (*v36)(v44, v8);
        if (v45)
        {
          uint64_t v47 = (void *)swift_unknownObjectUnownedLoadStrong();
          id v48 = (void *)sub_20A8CEB40();

          if (v48)
          {
            id v49 = v68;
            v43(v68, v67, v8);
            sub_20A8C9CB0();

            id v50 = v49;
            uint64_t v12 = v55;
            v46(v50, v8);
          }
        }
        v46(v12, v8);
        uint64_t v14 = v42;
        objc_super v37 = (unint64_t *)v64;
        unint64_t v35 = v60;
        uint64_t result = v61;
      }
    }
  }
  uint64_t v28 = *MEMORY[0x263F7D340];
  uint64_t v29 = sub_20A8C83F0();
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104);

  return v30(a3, v28, v29);
}

uint64_t sub_20A71A0E4(void *a1)
{
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_ts_isScrolling);
  if ((result & 1) == 0)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    sub_20A70E81C(&v14);
    long long v4 = v14;
    uint64_t v5 = v15;
    uint64_t v6 = v16;
    uint64_t v7 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    long long v11 = v4;
    uint64_t v12 = v5;
    uint64_t v13 = v6;
    (*(void (**)(long long *, uint64_t, uint64_t))(v7 + 120))(&v11, ObjectType, v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v3 + 40);
    uint64_t v10 = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v9 + 176))(2, 0, 0, v10, v9);
  }
  return result;
}

uint64_t sub_20A71A370(void *a1)
{
  id v2 = v1;
  uint64_t v4 = sub_20A8CC220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CC250();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (char *)objc_msgSend(a1, sel_searchResultsController, v10);
  uint64_t v24 = v8;
  uint64_t v25 = v5;
  uint64_t v23 = v9;
  if (v13)
  {
    long long v14 = v13;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v15)
    {
      *(void *)&v15[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate + 8] = &off_26BE6C1E0;
      swift_unknownObjectWeakAssign();
    }
    else
    {
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v16 = (void *)sub_20A8CEBE0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  aBlock[4] = sub_20A71E870;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_88;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = v2;
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A71F568(&qword_26AC677A0, MEMORY[0x263F8F030]);
  uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
  sub_20A71BF60(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
  sub_20A71E4C4((unint64_t *)&qword_26AC7F7B0, (unint64_t *)&unk_26AC7F7A0, v20);
  sub_20A8CF290();
  MEMORY[0x210526F10](0, v12, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v24);
}

void sub_20A71A714(void *a1)
{
  id v1 = objc_msgSend(a1, sel_navigationItem);
  id v2 = objc_msgSend(v1, sel_searchController);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_searchBar);

    objc_msgSend(v3, sel_becomeFirstResponder);
  }
}

void sub_20A71A82C(void *a1)
{
  uint64_t v2 = v1;
  id v3 = (char *)objc_msgSend(a1, sel_searchResultsController);
  if (v3)
  {
    uint64_t v4 = v3;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v5)
    {
      id v15 = v5;
      *(void *)&v5[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate + 8] = 0;
      swift_unknownObjectWeakAssign();
      goto LABEL_9;
    }
  }
  id v15 = 0;
LABEL_9:
  sub_20A8C9BF0();
  uint64_t v6 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v6, sel_setHidden_, 0);

  uint64_t v7 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
  double v10 = sub_20A8C7DD0();
  os_log_type_t v11 = sub_20A8CEA00();
  BOOL v12 = os_log_type_enabled(v10, v11);
  if (v9)
  {
    if (v12)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_20A414000, v10, v11, "Hiding ForYou card due to search dismissal with an empty stock list", v13, 2u);
      MEMORY[0x210528850](v13, -1, -1);
    }

    sub_20A712B5C(1, 1);
  }
  else
  {
    if (v12)
    {
      long long v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v14 = 0;
      _os_log_impl(&dword_20A414000, v10, v11, "Showing ForYou card due to search dismissal", v14, 2u);
      MEMORY[0x210528850](v14, -1, -1);
    }

    sub_20A713204(1);
  }
}

void sub_20A71ABA0(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x2105289B0](a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);
  BOOL v2 = (BOOL)v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_text);

    if (v3)
    {
      uint64_t v4 = sub_20A8CE280();
      unint64_t v6 = v5;

      swift_bridgeObjectRelease();
      uint64_t v7 = HIBYTE(v6) & 0xF;
      if ((v6 & 0x2000000000000000) == 0) {
        uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v2 = v7 != 0;
    }
    else
    {
      BOOL v2 = 0;
    }
  }
  sub_20A8C9BF0();
  id v8 = (id)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v8, sel_setHidden_, v2);
}

void sub_20A71AC94(uint64_t a1, uint64_t a2)
{
}

BOOL sub_20A71AC9C()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = objc_msgSend(v1, sel_searchController);

  BOOL result = 1;
  if (v2)
  {
    unsigned int v3 = objc_msgSend(v2, sel_isActive);

    if (v3) {
      return 0;
    }
  }
  return result;
}

void sub_20A71AD1C()
{
  uint64_t v0 = sub_20A8C7DD0();
  os_log_type_t v1 = sub_20A8CEA00();
  if (os_log_type_enabled(v0, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v2 = 0;
    _os_log_impl(&dword_20A414000, v0, v1, "Hiding ForYou card due to trait collection change with search active", v2, 2u);
    MEMORY[0x210528850](v2, -1, -1);
  }

  sub_20A712B5C(0, 0);
}

void sub_20A71ADCC(uint64_t a1, void *a2)
{
}

uint64_t sub_20A71ADF8()
{
  id v1 = objc_msgSend(v0, sel_navigationItem);
  id v2 = objc_msgSend(v1, sel_searchController);

  if (v2)
  {
    if (objc_msgSend(v2, sel_isActive))
    {
      id v3 = objc_msgSend(v2, sel_searchResultsController);

      if (v3) {
        return (uint64_t)v3;
      }
    }
    else
    {
    }
  }
  return sub_20A8C9C80();
}

void sub_20A71AEB0(double a1)
{
  id v2 = sub_20A801D6C();
  objc_msgSend(v2, sel_setAlpha_, a1);

  id v3 = sub_20A70F0FC();
  id v4 = objc_msgSend(v3, sel_ts_barButtonItemView);

  objc_msgSend(v4, sel_setAlpha_, a1);
}

void sub_20A71AF60(double a1)
{
  id v2 = sub_20A801D6C();
  objc_msgSend(v2, sel_setAlpha_, a1);

  id v3 = sub_20A70F0FC();
  id v4 = objc_msgSend(v3, sel_ts_barButtonItemView);

  objc_msgSend(v4, sel_setAlpha_, a1);
}

uint64_t sub_20A71B084()
{
  uint64_t v1 = sub_20A8C91C0();
  uint64_t v24 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  id v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C91A0();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v22 - v16;
  uint64_t v25 = v0;
  sub_20A7149EC((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1) {
    return sub_20A71BF00((uint64_t)v9, (uint64_t (*)(void))sub_20A42D908);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v9, v11);
  if (sub_20A8C8300())
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v6, *MEMORY[0x263F7D668], v4);
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v3, *MEMORY[0x263F7D690], v1);
    sub_20A71E7D4(0, &qword_26763D8A0, MEMORY[0x263F7DC18]);
    swift_allocObject();
    uint64_t v19 = sub_20A8CA3B0();
    uint64_t v20 = *(void *)(*(void *)(v25 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 112))(v19, 0, ObjectType, v20);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_20A71B53C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_20A8C2B80() & 1) != 0 || (sub_20A8C2B80())
  {
    sub_20A4BE194(a2, (uint64_t)v25);
    if (v26)
    {
      sub_20A42CFF0(0, &qword_26763D898);
      if (swift_dynamicCast())
      {

        unsigned __int8 v14 = 0;
        return v14 & 1;
      }
    }
    else
    {
      sub_20A71F5E4((uint64_t)v25, (uint64_t)&qword_26AC80170, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4F6CD4);
    }
    sub_20A7149EC((uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    {
      sub_20A71BF00((uint64_t)v8, (uint64_t (*)(void))sub_20A42D908);
      unsigned __int8 v14 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v8, v10);
      unsigned __int8 v14 = sub_20A8C8300();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
  else
  {
    sub_20A4BE194(a2, (uint64_t)v25);
    uint64_t v15 = v26;
    if (v26)
    {
      uint64_t v16 = __swift_project_boxed_opaque_existential_1(v25, v26);
      uint64_t v17 = *(void *)(v15 - 8);
      double v18 = MEMORY[0x270FA5388](v16);
      uint64_t v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v17 + 16))(v20, v18);
      uint64_t v21 = sub_20A8CF740();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    else
    {
      uint64_t v21 = 0;
    }
    v24.receiver = v2;
    v24.super_class = ObjectType;
    unsigned __int8 v14 = objc_msgSendSuper2(&v24, sel_canPerformAction_withSender_, a1, v21);
    swift_unknownObjectRelease();
  }
  return v14 & 1;
}

uint64_t sub_20A71B990()
{
  sub_20A8C9C10();
  uint64_t v0 = sub_20A8C8C30();
  swift_release();
  return v0;
}

uint64_t sub_20A71B9E4()
{
  return swift_release();
}

uint64_t sub_20A71BA38(uint64_t a1)
{
  uint64_t v2 = sub_20A71F568(&qword_26763AE80, (void (*)(uint64_t))type metadata accessor for StockListViewController);

  return MEMORY[0x270F7B5F8](a1, v2);
}

uint64_t sub_20A71BAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A71F568(&qword_26763AE80, (void (*)(uint64_t))type metadata accessor for StockListViewController);

  return MEMORY[0x270F7B600](a1, a2, v4);
}

uint64_t sub_20A71BB30()
{
  return sub_20A71F568(&qword_26763D850, (void (*)(uint64_t))type metadata accessor for StockListViewController);
}

uint64_t sub_20A71BB78()
{
  return sub_20A71F568(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A71BBC0()
{
  return sub_20A71F568((unint64_t *)&unk_26763D858, (void (*)(uint64_t))type metadata accessor for StockListViewController);
}

void sub_20A71BC08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CA180();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  if (v12 != *MEMORY[0x263F7DB28]
    && v12 != *MEMORY[0x263F7DB50]
    && v12 != *MEMORY[0x263F7DB58]
    && v12 != *MEMORY[0x263F7DB48])
  {
    if (v12 == *MEMORY[0x263F7DB60])
    {
      __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability), *(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability + 24));
      if (sub_20A8C3850())
      {
        sub_20A7127B8();
        return;
      }
      goto LABEL_22;
    }
    if (v12 != *MEMORY[0x263F7DB40] && v12 != *MEMORY[0x263F7DB38] && v12 != *MEMORY[0x263F7DB30])
    {
      sub_20A8CF520();
      __break(1u);
LABEL_22:
      uint64_t v18 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 2, v20);
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 88))(v6, ObjectType, v18);
      sub_20A71BF00((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
      (*(void (**)(uint64_t, uint64_t))(v18 + 152))(ObjectType, v18);
    }
  }
}

uint64_t sub_20A71BF00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A71BF60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A71BFC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A71F568(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A71C084(char a1)
{
  type metadata accessor for TickerCardContainerControllerAnimationCoordinator();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = MEMORY[0x263F8EE80];
  uint64_t v4 = (uint64_t *)(v3 + 16);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  type metadata accessor for TickerAnimation();
  if (a1)
  {
    int v12 = (void *)swift_allocObject();
    v12[2] = sub_20A71E034;
    v12[3] = v5;
    v12[4] = sub_20A71E054;
    v12[5] = v6;
    swift_beginAccess();
    id v13 = v1;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    uint64_t v10 = (uint64_t)v12;
    char v11 = 0;
  }
  else
  {
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = sub_20A71E074;
    v7[3] = v5;
    v7[4] = sub_20A71E094;
    v7[5] = v6;
    swift_beginAccess();
    id v8 = v1;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    uint64_t v10 = (uint64_t)v7;
    char v11 = 1;
  }
  sub_20A7A4864(v10, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return v3;
}

void sub_20A71C29C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StockSearchMode(0);
  double v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(v1, sel_navigationItem, v5);
  id v9 = objc_msgSend(v8, sel_searchController);

  if (v9)
  {
    objc_msgSend(v9, sel_setShowsSearchResultsController_, 1);
    id v10 = objc_msgSend(v9, sel_searchResultsController);
    if (v10)
    {
      char v11 = v10;
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        int v12 = v11;
      }
      else {
        int v12 = 0;
      }
      if (v12)
      {
        uint64_t v13 = sub_20A8C40E0();
        uint64_t v14 = *(void *)(v13 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, a1, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
        sub_20A55F70C((uint64_t)v7);

        sub_20A71BF00((uint64_t)v7, type metadata accessor for StockSearchMode);
      }
      else
      {
      }
    }
    id v15 = objc_msgSend(v2, sel_navigationItem);
    id v16 = objc_msgSend(v15, sel_searchController);

    if (v16)
    {
      id v17 = objc_msgSend(v16, sel_searchBar);

      if (v17)
      {
        id v18 = objc_msgSend(v2, sel_splitViewController);
        if (v18)
        {
          uint64_t v19 = v18;
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v17;
          aBlock[4] = sub_20A71F694;
          aBlock[5] = v20;
          aBlock[0] = MEMORY[0x263EF8330];
          aBlock[1] = 1107296256;
          aBlock[2] = sub_20A4713FC;
          aBlock[3] = &block_descriptor_108;
          uint64_t v21 = _Block_copy(aBlock);
          id v22 = v17;
          swift_release();
          objc_msgSend(v19, sel_dismissViewControllerAnimated_completion_, 1, v21);

          _Block_release(v21);
          id v9 = v19;
        }
        else
        {
          objc_msgSend(v17, sel_becomeFirstResponder);
        }
      }
    }
  }
}

uint64_t sub_20A71C5D0()
{
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v10);
  int v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v14 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_20A71F398((uint64_t)v12, (uint64_t)v9, type metadata accessor for StockListStockModel);
    id v15 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v15(v6, v9, v3);
    uint64_t v16 = type metadata accessor for StockViewModel();
    sub_20A71E62C((uint64_t)&v9[*(int *)(v16 + 20)], (uint64_t)v2, (uint64_t (*)(void))sub_20A42C470);
    id v17 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
    id v18 = (char *)objc_allocWithZone(v17);
    v15(&v18[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], v6, v3);
    sub_20A71E62C((uint64_t)v2, (uint64_t)&v18[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote], (uint64_t (*)(void))sub_20A42C470);
    v21.receiver = v18;
    v21.super_class = v17;
    id v19 = objc_msgSendSuper2(&v21, sel_init);
    sub_20A71BF00((uint64_t)v2, (uint64_t (*)(void))sub_20A42C470);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v14 = sub_20A51BF44();

    sub_20A71BF00((uint64_t)v9, type metadata accessor for StockListStockModel);
  }
  return v14;
}

uint64_t sub_20A71C8E0()
{
  uint64_t v0 = sub_20A8CA180();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = sub_20A8CEB40();
  if (v7)
  {
    uint64_t v8 = (void *)v7;
    sub_20A8C9CC0();

    id v9 = *(void (**)(char *, void, uint64_t))(v1 + 104);
    v9(v3, *MEMORY[0x263F7DB50], v0);
    LOBYTE(v8) = sub_20A8CA170();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v3, v0);
    if (v8)
    {
      v10(v6, v0);
      char v11 = 0;
    }
    else
    {
      v9(v3, *MEMORY[0x263F7DB28], v0);
      char v12 = sub_20A8CA170();
      v10(v3, v0);
      v10(v6, v0);
      char v11 = v12 ^ 1;
    }
  }
  else
  {
    char v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_20A71CAA0(uint64_t result)
{
  if ((result & 1) == 0)
  {
    uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
    sub_20A70E81C(&v13);
    long long v3 = v13;
    uint64_t v4 = v14;
    uint64_t v5 = v15;
    uint64_t v6 = *(void *)(v2 + 40);
    uint64_t ObjectType = swift_getObjectType();
    long long v10 = v3;
    uint64_t v11 = v4;
    uint64_t v12 = v5;
    (*(void (**)(long long *, uint64_t, uint64_t))(v6 + 120))(&v10, ObjectType, v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t v9 = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v8 + 176))(2, 0, 0, v9, v8);
  }
  return result;
}

uint64_t sub_20A71CB78()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler);
  sub_20A70E81C(&v13);
  long long v2 = v13;
  uint64_t v3 = v14;
  uint64_t v4 = v15;
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  long long v10 = v2;
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  (*(void (**)(long long *, uint64_t, uint64_t))(v5 + 120))(&v10, ObjectType, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v7 + 176))(2, 0, 0, v8, v7);
}

void sub_20A71CC4C(void *a1)
{
  long long v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = sub_20A8CC220();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CC250();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_20A8C9C50() & 1) == 0) {
    goto LABEL_7;
  }
  sub_20A8C9BD0();
  char v11 = sub_20A8C8AA0();
  swift_release();
  if (v11)
  {
    uint64_t v12 = sub_20A8C7DD0();
    os_log_type_t v13 = sub_20A8CEA00();
    if (!os_log_type_enabled(v12, v13))
    {
LABEL_6:

      sub_20A712B5C(1, 0);
      goto LABEL_7;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    uint64_t v15 = "Hiding ForYou card due to trait collection change with a covering view";
LABEL_5:
    _os_log_impl(&dword_20A414000, v12, v13, v15, v14, 2u);
    MEMORY[0x210528850](v14, -1, -1);
    goto LABEL_6;
  }
  uint64_t v16 = sub_20A8CEB40();
  if (!v16)
  {
LABEL_16:
    id v24 = objc_msgSend(v1, sel_navigationItem);
    id v25 = objc_msgSend(v24, sel_searchController);

    if (v25)
    {
      if (objc_msgSend(v25, sel_isActive))
      {
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
        uint64_t v35 = sub_20A8CEBE0();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v2;
        aBlock[4] = sub_20A71E3C0;
        aBlock[5] = v26;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_20A4713FC;
        aBlock[3] = &block_descriptor_57;
        unint64_t v34 = _Block_copy(aBlock);
        long long v27 = v2;
        swift_release();
        sub_20A8CC240();
        aBlock[0] = MEMORY[0x263F8EE78];
        uint64_t v33 = sub_20A71F568(&qword_26AC677A0, MEMORY[0x263F8F030]);
        uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
        sub_20A71BF60(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
        sub_20A71E4C4((unint64_t *)&qword_26AC7F7B0, (unint64_t *)&unk_26AC7F7A0, v28);
        sub_20A8CF290();
        uint64_t v30 = v34;
        uint64_t v29 = (void *)v35;
        MEMORY[0x210526F10](0, v10, v6, v34);
        _Block_release(v30);

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        goto LABEL_7;
      }
    }
    if (objc_msgSend(v2, sel_isEditing))
    {
      uint64_t v12 = sub_20A8C7DD0();
      os_log_type_t v13 = sub_20A8CEA00();
      if (!os_log_type_enabled(v12, v13)) {
        goto LABEL_6;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      uint64_t v15 = "Hiding ForYou card due to trait collection change with edit active";
    }
    else
    {
      uint64_t v31 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 40);
      uint64_t ObjectType = swift_getObjectType();
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v31 + 32))(ObjectType, v31) & 1) == 0) {
        goto LABEL_7;
      }
      uint64_t v12 = sub_20A8C7DD0();
      os_log_type_t v13 = sub_20A8CEA00();
      if (!os_log_type_enabled(v12, v13)) {
        goto LABEL_6;
      }
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      uint64_t v15 = "Hiding ForYou card due to trait collection change with an empty stock list";
    }
    goto LABEL_5;
  }
  id v17 = (void *)v16;
  uint64_t v18 = v4;
  unint64_t v19 = sub_20A8C9D20();
  if (v19 >> 62) {
    uint64_t v20 = sub_20A8CF540();
  }
  else {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v20 != 2)
  {

    uint64_t v4 = v18;
    goto LABEL_16;
  }
  objc_super v21 = sub_20A8C7DD0();
  os_log_type_t v22 = sub_20A8CEA00();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_20A414000, v21, v22, "Showing ForYou card due to trait collection change with 2 cards in the stack", v23, 2u);
    MEMORY[0x210528850](v23, -1, -1);
  }

  sub_20A713204(0);
LABEL_7:
  sub_20A715108(v36);
  sub_20A7127B8();
}

uint64_t sub_20A71D264()
{
  sub_20A42CFF0(0, &qword_26AC82FE8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE990();
  sub_20A4F6CD4(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D5CA0;
  *(void *)(v3 + 32) = v2;
  uint64_t v5 = v3;
  sub_20A8CE620();
  return v5;
}

char *sub_20A71D3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v64[3] = a20;
  v64[4] = a22;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v64);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))(boxed_opaque_existential_1, a15, a20);
  v63[3] = type metadata accessor for StockListRenderer();
  v63[4] = &off_26BE619C8;
  v63[0] = a1;
  v62[3] = type metadata accessor for StockListStyler();
  v62[4] = &off_26BE738F8;
  v62[0] = a2;
  v61[3] = type metadata accessor for WatchlistEditMenuProvider();
  v61[4] = &off_26BE6B050;
  v61[0] = a16;
  uint64_t v27 = OBJC_IVAR____TtC8StocksUI23StockListViewController_scrollTracker;
  id v28 = objc_allocWithZone((Class)sub_20A8C8410());
  uint64_t v29 = a18;
  *(void *)&a18[v27] = objc_msgSend(v28, sel_init);
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_backgroundView] = 0;
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController____lazy_storage___exchangeStatusToolbarItem] = 0;
  *(_WORD *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_toolbarState] = 2;
  uint64_t v30 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_lastContentOffset];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  v30[16] = 1;
  uint64_t v31 = OBJC_IVAR____TtC8StocksUI23StockListViewController_logger;
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_20A8C7DF0();
  uint64_t v33 = __swift_project_value_buffer(v32, (uint64_t)qword_26AC9E888);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(&v29[v31], v33, v32);
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_contentSizeCategoryObserver] = 0;
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_applicationStateObserver] = 0;
  sub_20A4342F4((uint64_t)v63, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_renderer]);
  sub_20A4342F4((uint64_t)v62, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_styler]);
  unint64_t v34 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler];
  *(void *)unint64_t v34 = a3;
  *((void *)v34 + 1) = a4;
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintViewController] = a5;
  uint64_t v35 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintSelectionProvider];
  *(void *)uint64_t v35 = a6;
  *((void *)v35 + 1) = a21;
  uint64_t v36 = &v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_mastheadViewProvider];
  *(void *)uint64_t v36 = a7;
  *((void *)v36 + 1) = a8;
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_lazySearchController] = a9;
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_bootstrapper] = a10;
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_commands] = a11;
  sub_20A4342F4(a12, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_keyboardInputMonitor]);
  sub_20A4342F4((uint64_t)a13, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_appConfigurationManager]);
  sub_20A4342F4((uint64_t)a14, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_quoteAttributionProvider]);
  sub_20A4342F4((uint64_t)v64, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_featureAvailability]);
  sub_20A4342F4((uint64_t)v61, (uint64_t)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_editWatchlistMenuProvider]);
  *(void *)&v29[OBJC_IVAR____TtC8StocksUI23StockListViewController_stockListDraggingObserver] = a17;
  swift_unknownObjectRetain();
  id v37 = a5;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v38 = a10;
  swift_retain();
  swift_retain();

  v60.receiver = v29;
  v60.super_class = ObjectType;
  uint64_t v39 = (char *)objc_msgSendSuper2(&v60, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v39[OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler] + 24) = &off_26BE6C218;
  swift_unknownObjectWeakAssign();
  uint64_t v40 = *(void **)&v39[OBJC_IVAR____TtC8StocksUI23StockListViewController_blueprintViewController];
  uint64_t v41 = v39;
  id v42 = v40;
  sub_20A8C9C60();

  uint64_t v43 = a14[3];
  uint64_t v44 = a14[4];
  __swift_project_boxed_opaque_existential_1(a14, v43);
  (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  char v45 = (void *)sub_20A8CEBE0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8C5DC0();
  swift_release();

  swift_release();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v46 = v41;
  sub_20A8C59C0();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  __swift_project_boxed_opaque_existential_1(a13, a13[3]);
  sub_20A8C3AB0();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8C5D60();
  swift_release();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v47 = v46;
  sub_20A8C59C0();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  id v48 = self;
  id v49 = objc_msgSend(v48, sel_defaultCenter);
  objc_msgSend(v49, sel_addObserver_selector_name_object_, v47, sel_reconfigureLayoutForAccessibilityStateChange, *MEMORY[0x263F832E8], 0);

  id v50 = objc_msgSend(v48, sel_defaultCenter);
  objc_msgSend(v50, sel_addObserver_selector_name_object_, v47, sel_reconfigureLayoutForAccessibilityStateChange, *MEMORY[0x263F83238], 0);

  *(void *)(swift_allocObject() + 16) = v47;
  uint64_t v51 = v47;
  swift_retain();
  sub_20A8C5D60();
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  __swift_destroy_boxed_opaque_existential_1(a12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a13);
  return v51;
}

char *sub_20A71DAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, objc_class *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v73 = a7;
  uint64_t v74 = a8;
  uint64_t v71 = a5;
  uint64_t v72 = a6;
  uint64_t v69 = a3;
  uint64_t v70 = a4;
  long long v68 = a9;
  long long v67 = a10;
  id v66 = a11;
  uint64_t v65 = a12;
  uint64_t v64 = a15;
  Class v58 = a16;
  uint64_t v61 = a13;
  uint64_t v63 = a23;
  uint64_t v62 = a26;
  uint64_t v59 = a21;
  uint64_t v28 = *(void *)(a21 - 8);
  uint64_t v60 = a18;
  MEMORY[0x270FA5388](a1);
  uint64_t v30 = (char *)&v57 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = a17;
  uint64_t v83 = v31;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v81);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a17 - 8) + 32))(boxed_opaque_existential_1, a1, a17);
  uint64_t v79 = a20;
  uint64_t v80 = a25;
  uint64_t v33 = __swift_allocate_boxed_opaque_existential_1(v78);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))(v33, a2, a20);
  uint64_t v76 = a19;
  uint64_t v77 = a24;
  unint64_t v34 = __swift_allocate_boxed_opaque_existential_1(v75);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a19 - 8) + 32))(v34, a14, a19);
  uint64_t v35 = (char *)objc_allocWithZone(v58);
  uint64_t v36 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v81, v82);
  double v37 = MEMORY[0x270FA5388](v36);
  uint64_t v39 = (uint64_t *)((char *)&v57 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v40 + 16))(v39, v37);
  uint64_t v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v78, v79);
  double v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (uint64_t *)((char *)&v57 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v45 + 16))(v44, v42);
  uint64_t v46 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v75, v76);
  double v47 = MEMORY[0x270FA5388](v46);
  id v49 = (uint64_t *)((char *)&v57 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v50 + 16))(v49, v47);
  uint64_t v51 = *v39;
  uint64_t v52 = *v44;
  uint64_t v53 = *v49;
  uint64_t v54 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, v61, v59);
  uint64_t v55 = sub_20A71D3F0(v51, v52, v69, v70, v71, v72, v73, v74, v68, *((void **)&v68 + 1), v67, *((uint64_t *)&v67 + 1), v66, v65, (uint64_t)v30, v53, v64, v35, v60,
          v54,
          v63,
          v62);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  return v55;
}

uint64_t sub_20A71DFB8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A71DFF0(uint64_t a1)
{
  sub_20A70F4E0(a1, v1);
}

uint64_t sub_20A71E00C(unsigned __int8 *a1)
{
  return sub_20A70F5BC(a1, *(char **)(v1 + 16));
}

uint64_t sub_20A71E014()
{
  return sub_20A853E04() & 1;
}

void sub_20A71E034()
{
}

void sub_20A71E054()
{
}

void sub_20A71E074()
{
}

void sub_20A71E094()
{
}

uint64_t sub_20A71E0B4()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler)
                 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, void, void, uint64_t, uint64_t))(v1 + 176))(1, 0, 0, ObjectType, v1);
}

uint64_t sub_20A71E118()
{
  return sub_20A71E2C0((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_20A71811C);
}

uint64_t objectdestroy_41Tm()
{
  sub_20A42D93C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  unint64_t v9 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);

  return swift_deallocObject();
}

uint64_t sub_20A71E2A8()
{
  return sub_20A71E2C0((uint64_t (*)(uint64_t, unint64_t, uint64_t))sub_20A7185F4);
}

uint64_t sub_20A71E2C0(uint64_t (*a1)(uint64_t, unint64_t, uint64_t))
{
  sub_20A42D93C();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  unint64_t v4 = v3 + *(void *)(*(void *)(v2 - 8) + 64);
  sub_20A71BFC4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a1(v7, v1 + v3, v8);
}

void sub_20A71E3C0()
{
}

void sub_20A71E3C8(uint64_t a1)
{
}

void sub_20A71E3FC()
{
  if (!qword_26AC69628)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x263F7DB68];
    sub_20A71BF60(255, &qword_26AC7F790, MEMORY[0x263F7DB68], MEMORY[0x263F8D488]);
    sub_20A71E4C4(&qword_26AC7F798, &qword_26AC7F790, v0);
    unint64_t v1 = sub_20A8C5CF0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC69628);
    }
  }
}

uint64_t sub_20A71E4C4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A71BF60(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_20A71E51C()
{
  return sub_20A7153D8(*(char **)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_20A71E52C()
{
  return swift_deallocObject();
}

void sub_20A71E564()
{
  sub_20A71593C(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_20A71E570()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler)
                 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(ObjectType, v1);
}

void sub_20A71E5C0()
{
}

void sub_20A71E5C8()
{
  if (!qword_26763D888)
  {
    sub_20A71E3C8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D888);
    }
  }
}

uint64_t sub_20A71E62C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A71E694()
{
  uint64_t v1 = sub_20A8CD2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A71E760(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8CD2C0() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A716F90(a1, v4, v5);
}

void sub_20A71E7D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StockListModel(255);
    uint64_t v7 = sub_20A71F568(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A71E870()
{
  sub_20A71A714(*(void **)(v0 + 16));
}

void sub_20A71E878()
{
  if (!qword_26AC6A228)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F910);
    sub_20A71E9F4();
    sub_20A71F0AC();
    sub_20A71F244();
    type metadata accessor for StockListViewController();
    sub_20A71F568(&qword_26AC6A988, (void (*)(uint64_t))sub_20A71E9F4);
    sub_20A71F568(&qword_26AC6A6E0, (void (*)(uint64_t))sub_20A71F0AC);
    sub_20A71F568(&qword_26AC6A908, (void (*)(uint64_t))sub_20A71F244);
    unint64_t v0 = sub_20A8C94D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A228);
    }
  }
}

void sub_20A71E9F4()
{
  if (!qword_26AC6A990)
  {
    sub_20A71EB70();
    sub_20A71EE10();
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F910);
    sub_20A71F568((unint64_t *)&unk_26AC6A858, (void (*)(uint64_t))sub_20A71EB70);
    sub_20A71F568(&qword_26AC6AAA0, (void (*)(uint64_t))sub_20A71EE10);
    sub_20A71F568(&qword_26AC6AA88, (void (*)(uint64_t))sub_20A71EE10);
    sub_20A71F568((unint64_t *)&unk_26AC6AA90, (void (*)(uint64_t))sub_20A71EE10);
    unint64_t v0 = sub_20A8CB1D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A990);
    }
  }
}

void sub_20A71EB70()
{
  if (!qword_26AC6A868)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A71BFC4(255, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A71ED58();
    type metadata accessor for StockListBlueprintViewCellProvider();
    type metadata accessor for StockListBlueprintViewSupplementaryViewProvider();
    sub_20A71F754((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v0);
    sub_20A71F568(&qword_26AC6A408, (void (*)(uint64_t))sub_20A71ED58);
    sub_20A71F568(&qword_26AC7CA90, (void (*)(uint64_t))type metadata accessor for StockListBlueprintViewCellProvider);
    sub_20A71F568(&qword_26AC6B4B8, (void (*)(uint64_t))type metadata accessor for StockListBlueprintViewSupplementaryViewProvider);
    sub_20A71F568(&qword_26AC72560, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    unint64_t v1 = sub_20A8CABB0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6A868);
    }
  }
}

void sub_20A71ED58()
{
  if (!qword_26AC6A410)
  {
    type metadata accessor for StockListLayoutModel();
    sub_20A42D2FC();
    sub_20A71F568((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    unint64_t v0 = sub_20A8C9B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A410);
    }
  }
}

void sub_20A71EE10()
{
  if (!qword_26AC6AAA8)
  {
    type metadata accessor for StockListModel(255);
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A71BFC4(255, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A71ED58();
    type metadata accessor for StockListBlueprintViewCellProvider();
    type metadata accessor for StockListBlueprintViewSupplementaryViewProvider();
    type metadata accessor for StockListViewController();
    sub_20A42D40C();
    sub_20A71F568(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    sub_20A71F754((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v0);
    sub_20A71F568(&qword_26AC6A408, (void (*)(uint64_t))sub_20A71ED58);
    sub_20A71F568(&qword_26AC7CA90, (void (*)(uint64_t))type metadata accessor for StockListBlueprintViewCellProvider);
    sub_20A71F568(&qword_26AC6B4B8, (void (*)(uint64_t))type metadata accessor for StockListBlueprintViewSupplementaryViewProvider);
    sub_20A71F568(&qword_26AC75330, (void (*)(uint64_t))type metadata accessor for StockListViewController);
    sub_20A71F568(&qword_26AC72560, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    unint64_t v1 = sub_20A8CB400();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6AAA8);
    }
  }
}

void sub_20A71F0AC()
{
  if (!qword_26AC6A6E8)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A71BFC4(255, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A71ED58();
    type metadata accessor for StockListViewController();
    sub_20A71F754((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v0);
    sub_20A71F568(&qword_26AC6A408, (void (*)(uint64_t))sub_20A71ED58);
    sub_20A71F568(&qword_26AC75330, (void (*)(uint64_t))type metadata accessor for StockListViewController);
    sub_20A71F568(&qword_26AC72560, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    unint64_t v1 = sub_20A8CA970();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6A6E8);
    }
  }
}

void sub_20A71F244()
{
  if (!qword_26AC6A910)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A71BFC4(255, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A71ED58();
    type metadata accessor for StockListViewController();
    sub_20A71F754((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v0);
    sub_20A71F568(&qword_26AC6A408, (void (*)(uint64_t))sub_20A71ED58);
    sub_20A71F568(&qword_26AC75330, (void (*)(uint64_t))type metadata accessor for StockListViewController);
    unint64_t v1 = sub_20A8CB010();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC6A910);
    }
  }
}

uint64_t sub_20A71F398(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A71F400()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A71F438()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A71F470@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A7199F4(a1, *(void *)(v2 + 16), a2, *(double *)(v2 + 24));
}

void sub_20A71F47C()
{
  if (!qword_26AC67620)
  {
    sub_20A8CA180();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC67620);
    }
  }
}

uint64_t sub_20A71F4E8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A71BF60(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A71F568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A71F5B0(uint64_t a1)
{
  return a1;
}

void sub_20A71F5DC()
{
  sub_20A713B5C(v0);
}

uint64_t sub_20A71F5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A71F644()
{
  return sub_20A713C1C(v0);
}

uint64_t sub_20A71F64C()
{
  return sub_20A713CA8(v0);
}

void sub_20A71F654(uint64_t a1, uint64_t a2)
{
  sub_20A713D98(a1, a2, v2);
}

uint64_t sub_20A71F65C()
{
  return swift_deallocObject();
}

id sub_20A71F694()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_becomeFirstResponder);
}

uint64_t sub_20A71F6A4()
{
  return swift_deallocObject();
}

uint64_t sub_20A71F6DC()
{
  return sub_20A7106C4(v0);
}

void sub_20A71F6E4()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  sub_20A71125C();
}

void sub_20A71F730(uint64_t a1)
{
  sub_20A7118D0(a1, v1);
}

void sub_20A71F74C(uint64_t a1)
{
  sub_20A711978(a1, v1);
}

uint64_t sub_20A71F754(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A71BFC4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A71F814()
{
  sub_20A720000(0, &qword_26AC6AB10, type metadata accessor for CommandShareContent, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_20A720000(0, &qword_26AC6AB50, type metadata accessor for CommandShareContent, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E9C0 = result;
  return result;
}

uint64_t sub_20A71F960()
{
  sub_20A720000(0, &qword_26AC6AB18, type metadata accessor for CommandStocksShareContentComplete, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_20A720000(0, (unint64_t *)&unk_26AC6AB58, type metadata accessor for CommandStocksShareContentComplete, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E9B8 = result;
  return result;
}

uint64_t sub_20A71FAAC()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A59ADCC(v0, (uint64_t)v7);
  sub_20A58B96C();
  uint64_t v9 = (uint64_t)&v7[*(int *)(v8 + 48)];
  char v10 = v7[*(int *)(v8 + 64)];
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v7, v1);
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_20A8CF3C0();
  sub_20A8CE3D0();
  sub_20A8CF4E0();
  sub_20A8CE3D0();
  v13[15] = v10;
  sub_20A8CF4E0();
  sub_20A8CE3D0();
  uint64_t v11 = v14;
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  sub_20A5199D4(v9);
  return v11;
}

uint64_t sub_20A71FCB0()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A720000(0, (unint64_t *)&unk_26AC6A090, MEMORY[0x263F7D580], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v18 - v2;
  sub_20A720000(0, &qword_26AC69D08, MEMORY[0x263F7D250], v0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - v5;
  sub_20A720000(0, &qword_26AC70D80, type metadata accessor for CommandShareContent, v0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_20A8CB920();
  __swift_allocate_value_buffer(v10, qword_26AC9E8E8);
  __swift_project_value_buffer(v10, (uint64_t)qword_26AC9E8E8);
  if (qword_26AC6AB90 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for CommandShareContent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  os_log_type_t v13 = self;
  swift_retain();
  id v14 = objc_msgSend(v13, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v15 = sub_20A8C8130();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v16 = sub_20A8C8D90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v3, 1, 1, v16);
  return sub_20A8CB8D0();
}

void sub_20A720000(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for CommandShareContent(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26AC70D70);
}

uint64_t type metadata accessor for CommandStocksShareContentComplete(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6B7D0);
}

uint64_t sub_20A7200A4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_20A8C8F40();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AB90 != -1) {
    swift_once();
  }
  sub_20A58B96C();
  uint64_t v12 = (uint64_t)&v10[*(int *)(v11 + 48)];
  uint64_t v13 = *(int *)(v11 + 64);
  uint64_t v14 = sub_20A8C3F00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, a1, v14);
  uint64_t v15 = type metadata accessor for StockViewModel();
  sub_20A4BECB4(a1 + *(int *)(v15 + 20), v12);
  v10[v13] = a2;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v17 = self;
  swift_retain();
  id v18 = objc_msgSend(v17, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  if (qword_26AC7F248 != -1) {
    swift_once();
  }
  unint64_t v19 = (void *)qword_26AC9EBC0;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D600], v4);
  sub_20A8C8720();
  swift_allocObject();
  id v20 = v19;
  return sub_20A8C86B0();
}

unsigned char *storeEnumTagSinglePayload for CommandShareAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A72045CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandShareAction()
{
  return &type metadata for CommandShareAction;
}

void *sub_20A720494(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    sub_20A58B96C();
    uint64_t v9 = v8;
    uint64_t v10 = *(int *)(v8 + 48);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_20A8C3E10();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *((unsigned char *)a1 + *(int *)(v9 + 64)) = *((unsigned char *)a2 + *(int *)(v9 + 64));
    uint64_t v17 = *(int *)(a3 + 20);
    uint64_t v18 = *(int *)(a3 + 24);
    unint64_t v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)a1 + v17) = v19;
    id v20 = *(void **)((char *)a2 + v18);
    *(void *)((char *)a1 + v18) = v20;
    id v21 = v19;
    id v22 = v20;
  }
  return a1;
}

void sub_20A72069C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  sub_20A58B96C();
  uint64_t v6 = a1 + *(int *)(v5 + 48);
  uint64_t v7 = sub_20A8C3E10();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  uint64_t v9 = *(void **)(a1 + *(int *)(a2 + 24));
}

uint64_t sub_20A7207B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  sub_20A58B96C();
  uint64_t v8 = v7;
  uint64_t v9 = *(int *)(v7 + 48);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_20A8C3E10();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(unsigned char *)(a1 + *(int *)(v8 + 64)) = *(unsigned char *)(a2 + *(int *)(v8 + 64));
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)(a1 + v15) = v17;
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  id v19 = v17;
  id v20 = v18;
  return a1;
}

uint64_t sub_20A720968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a1, a2, v5);
  sub_20A58B96C();
  uint64_t v7 = v6;
  uint64_t v8 = *(int *)(v6 + 48);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_20A8C3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 24))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 16))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(v7 + 64)) = *(unsigned char *)(a2 + *(int *)(v7 + 64));
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = *(void **)(a2 + v17);
  id v19 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = v18;
  id v20 = v18;

  uint64_t v21 = *(int *)(a3 + 24);
  id v22 = *(void **)(a1 + v21);
  uint64_t v23 = *(void **)(a2 + v21);
  *(void *)(a1 + v21) = v23;
  id v24 = v23;

  return a1;
}

uint64_t sub_20A720BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  sub_20A58B96C();
  uint64_t v8 = v7;
  uint64_t v9 = *(int *)(v7 + 48);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_20A8C3E10();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(unsigned char *)(a1 + *(int *)(v8 + 64)) = *(unsigned char *)(a2 + *(int *)(v8 + 64));
  uint64_t v15 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  return a1;
}

uint64_t sub_20A720D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a1, a2, v5);
  sub_20A58B96C();
  uint64_t v7 = v6;
  uint64_t v8 = *(int *)(v6 + 48);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_20A8C3E10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(v7 + 64)) = *(unsigned char *)(a2 + *(int *)(v7 + 64));
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);

  uint64_t v19 = *(int *)(a3 + 24);
  id v20 = *(void **)(a1 + v19);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);

  return a1;
}

uint64_t sub_20A720F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A720F9C);
}

uint64_t sub_20A720F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)(*(void *)(type metadata accessor for CommandShareContent(0) - 8) + 84) == a2)
  {
    sub_20A58B96C();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
    return v7(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_20A721074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A721088);
}

uint64_t sub_20A721088(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CommandShareContent(0);
  uint64_t v10 = *(void *)(v8 - 8);
  uint64_t result = v8 - 8;
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    sub_20A58B96C();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a1, a2, a2, v11);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_20A72115C()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A720000(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      int v3 = &v2;
      uint64_t v4 = &unk_20A8EC680;
      uint64_t v5 = &unk_20A8EC698;
      swift_initStructMetadata();
    }
  }
}

void *sub_20A721288(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    sub_20A58B96C();
    uint64_t v8 = v7;
    uint64_t v9 = *(int *)(v7 + 48);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_20A8C3E10();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
  }
  return a1;
}

uint64_t sub_20A72146C(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  sub_20A58B96C();
  uint64_t v4 = a1 + *(int *)(v3 + 48);
  uint64_t v5 = sub_20A8C3E10();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_20A721570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  sub_20A58B96C();
  uint64_t v6 = v5;
  uint64_t v7 = *(int *)(v5 + 48);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(unsigned char *)(a1 + *(int *)(v6 + 64)) = *(unsigned char *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_20A721708(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  sub_20A58B96C();
  uint64_t v6 = v5;
  uint64_t v7 = *(int *)(v5 + 48);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(v6 + 64)) = *(unsigned char *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_20A721904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  sub_20A58B96C();
  uint64_t v6 = v5;
  uint64_t v7 = *(int *)(v5 + 48);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(unsigned char *)(a1 + *(int *)(v6 + 64)) = *(unsigned char *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_20A721A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  sub_20A58B96C();
  uint64_t v6 = v5;
  uint64_t v7 = *(int *)(v5 + 48);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A720000(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(unsigned char *)(a1 + *(int *)(v6 + 64)) = *(unsigned char *)(a2 + *(int *)(v6 + 64));
  return a1;
}

uint64_t sub_20A721C98(uint64_t a1, uint64_t a2)
{
  sub_20A58B96C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A721D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A58B96C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

void sub_20A721D80(uint64_t a1)
{
  sub_20A8C3F00();
  if (v2 <= 0x3F)
  {
    sub_20A720000(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      swift_initEnumMetadataSingleCase();
      *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
    }
  }
}

unint64_t sub_20A721EAC()
{
  unint64_t result = qword_26763D8A8;
  if (!qword_26763D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D8A8);
  }
  return result;
}

uint64_t sub_20A721F00@<X0>(uint64_t *a1@<X0>, CGFloat *a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = v3;
  uint64_t v100 = a3;
  uint64_t v7 = sub_20A8CAC10();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v103 = v7;
  MEMORY[0x270FA5388](v7);
  double v101 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for QuoteSummaryViewLayoutOptions();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = a2[1];
  CGFloat v107 = *a2;
  double v14 = a2[2];
  double v13 = a2[3];
  uint64_t v15 = type metadata accessor for StockTitleViewLayoutOptions();
  uint64_t v16 = (char *)a2 + *(int *)(v15 + 20);
  sub_20A8C9820();
  double v18 = v17;
  double v20 = v19;
  __swift_project_boxed_opaque_existential_1(v4 + 2, v4[5]);
  CGFloat v97 = *(double *)&a1;
  uint64_t v22 = *a1;
  uint64_t v21 = a1[1];
  CGFloat v104 = v16;
  uint64_t v23 = (void *)sub_20A8C9790();
  id v24 = objc_msgSend(v23, sel_horizontalSizeClass);

  double v98 = v14;
  if ((unint64_t)v24 >= 2)
  {
    if (v24 != (id)2)
    {
      LODWORD(v89) = 0;
      uint64_t v88 = 47;
LABEL_20:
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
    sub_20A8C9820();
  }
  double v99 = v18;
  CGFloat v105 = v12;
  double v25 = v18 - v12 - v13;
  id v26 = sub_20A5D2F5C(v22, v21);
  double v106 = v20;
  objc_msgSend(v26, sel_boundingRectWithSize_options_context_, 33, 0, v25, v20);
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  uint64_t v35 = (CGFloat *)((char *)a2 + *(int *)(v15 + 24));
  if (((_BYTE)v35[1] & 1) == 0)
  {
    double v36 = *v35;
    double v37 = (void *)sub_20A8CEC60();
    objc_msgSend(v37, sel_ascender);
    double v39 = v38;

    uint64_t v40 = (void *)sub_20A8CEC60();
    objc_msgSend(v40, sel_capHeight);
    double v42 = v41;

    CGFloat v107 = v36 - (v39 - v42);
  }
  v109.origin.CGFloat x = v28;
  v109.origin.CGFloat y = v30;
  v109.size.width = v32;
  v109.size.height = v34;
  CGFloat Width = CGRectGetWidth(v109);
  v110.origin.CGFloat x = v28;
  v110.origin.CGFloat y = v30;
  v110.size.width = v32;
  v110.size.height = v34;
  CGFloat Height = CGRectGetHeight(v110);
  double v90 = Width;
  CGFloat v45 = v107;
  CGFloat v46 = v97;
  CGFloat v47 = v34;
  CGFloat v48 = v105;
  sub_20A722598((uint64_t)v4, v25, v106, v28, v30, v32, v47, 10.0, v105, v107, Width, Height);
  uint64_t v93 = v49;
  uint64_t v94 = v50;
  uint64_t v95 = v51;
  uint64_t v96 = v52;
  uint64_t v53 = sub_20A8C9830();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v11, v104, v53);
  __swift_project_boxed_opaque_existential_1(v4 + 7, v4[10]);
  uint64_t v54 = type metadata accessor for StockTitleViewModel();
  sub_20A4BA828(COERCE_CGFLOAT(*(void *)&v46 + *(int *)(v54 + 24)), (uint64_t)v11, v108);
  v111.origin.CGFloat x = v48;
  v111.origin.CGFloat y = v45;
  v111.size.width = Width;
  v111.size.height = Height;
  CGFloat v55 = Height;
  CGFloat v56 = CGRectGetMaxY(v111) + 1.0;
  CGFloat x = v108[0].origin.x;
  CGFloat y = v108[0].origin.y;
  CGFloat v59 = v108[0].size.width;
  CGFloat v60 = v108[0].size.height;
  CGFloat v61 = CGRectGetWidth(v108[0]);
  v112.origin.CGFloat x = x;
  v112.origin.CGFloat y = y;
  v112.size.width = v59;
  v112.size.height = v60;
  CGFloat v62 = CGRectGetHeight(v112);
  v113.origin.CGFloat x = v48;
  CGFloat v97 = v56;
  v113.origin.CGFloat y = v56;
  CGFloat v63 = v90;
  CGFloat v92 = v61;
  v113.size.width = v61;
  v113.size.height = v62;
  double MaxY = CGRectGetMaxY(v113);
  v114.origin.CGFloat x = v48;
  v114.origin.CGFloat y = v107;
  v114.size.width = v63;
  CGFloat v91 = v55;
  v114.size.height = v55;
  double v65 = CGRectGetMaxY(v114);
  id v66 = (void *)sub_20A8C9750();
  id v67 = objc_msgSend(v66, sel_horizontalSizeClass);

  if (v67 && v67 != (id)2)
  {
    if (v67 != (id)1)
    {
      LODWORD(v89) = 0;
      uint64_t v88 = 108;
      goto LABEL_20;
    }
    uint64_t v73 = (void *)sub_20A8C97B0();
    char v74 = sub_20A8CECD0();

    uint64_t v69 = v102;
    uint64_t v72 = v96;
    CGFloat v68 = v62;
    if (v74) {
      uint64_t v75 = (unsigned int *)MEMORY[0x263F7DE40];
    }
    else {
      uint64_t v75 = (unsigned int *)MEMORY[0x263F7DE38];
    }
    uint64_t v70 = v101;
    uint64_t v71 = v103;
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, *v75, v103);
  }
  else
  {
    CGFloat v68 = v62;
    uint64_t v70 = v101;
    uint64_t v69 = v102;
    uint64_t v71 = v103;
    (*(void (**)(char *, void, uint64_t))(v102 + 104))(v101, *MEMORY[0x263F7DE38], v103);
    uint64_t v72 = v96;
  }
  if (MaxY > v65) {
    double v76 = MaxY;
  }
  else {
    double v76 = v65;
  }
  double v77 = v99;
  double v78 = v98 + v76;
  double v79 = v106;
  uint64_t v80 = sub_20A8CEDE0();
  MEMORY[0x270FA5388](v80);
  *((void *)&v90 - 18) = a2;
  *(&v90 - 17) = v77;
  *(&v90 - 16) = v79;
  CGFloat v81 = v105;
  *(&v90 - 15) = v78;
  *(&v90 - 14) = v81;
  *(&v90 - 13) = v107;
  *(&v90 - 12) = v63;
  uint64_t v82 = v93;
  *(&v90 - 11) = v91;
  *((void *)&v90 - 10) = v82;
  uint64_t v83 = v95;
  *((void *)&v90 - 9) = v94;
  *((void *)&v90 - 8) = v83;
  *((void *)&v90 - 7) = v72;
  *(&v90 - 6) = v81;
  CGFloat v84 = v92;
  *(&v90 - 5) = v97;
  CGFloat v86 = v84;
  CGFloat v87 = v68;
  uint64_t v88 = (uint64_t)v108;
  uint64_t v89 = v70;
  type metadata accessor for StockTitleViewLayoutAttributes();
  sub_20A8C9690();

  sub_20A722EC4((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v70, v71);
}

void sub_20A722598(uint64_t a1, CGFloat a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, double a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12)
{
  double v27 = __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
  type metadata accessor for StockTitleViewLayoutOptions();
  CGFloat v28 = (void *)sub_20A8C9790();
  id v29 = objc_msgSend(v28, sel_horizontalSizeClass);

  if ((unint64_t)v29 >= 2)
  {
    CGFloat v60 = a4;
    CGFloat v61 = a6;
    if (v29 == (id)2)
    {
      sub_20A8C9820();
      CGFloat v30 = (void *)*v27;
      sub_20A42CF04();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
      CGFloat v32 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      uint64_t v33 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
      swift_bridgeObjectRetain();
      id v34 = v32;
      *(void *)(inited + 40) = sub_20A8CEE20();
      uint64_t v35 = (void *)*MEMORY[0x263F81500];
      *(void *)(inited + 64) = v33;
      *(void *)(inited + 72) = v35;
      double v36 = v30 + 2;
      uint64_t v37 = v30[5];
      uint64_t v38 = v30[6];
      __swift_project_boxed_opaque_existential_1(v36, v37);
      uint64_t v39 = *(void *)(v38 + 16);
      uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v39 + 184);
      id v41 = v35;
      uint64_t v42 = v40(v37, v39);
      *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
      *(void *)(inited + 80) = v42;
      sub_20A4CF8B0(inited);
      id v43 = objc_allocWithZone(MEMORY[0x263F086A0]);
      uint64_t v44 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_20A4393AC();
      CGFloat v45 = (void *)sub_20A8CE170();
      swift_bridgeObjectRelease();
      id v46 = objc_msgSend(v43, sel_initWithString_attributes_, v44, v45);

      if (v46)
      {
        double v47 = a8;
        CGFloat v59 = a9;
        objc_msgSend(v46, sel_boundingRectWithSize_options_context_, 33, 0, a2, a3);
        CGFloat v49 = v48;
        CGFloat v51 = v50;
        CGFloat v53 = v52;
        CGFloat v55 = v54;
        v62.origin.CGFloat x = v60;
        v62.origin.CGFloat y = a5;
        v62.size.width = v61;
        v62.size.height = a7;
        CGFloat v56 = CGRectGetWidth(v62) + v47;
        v63.origin.CGFloat x = v49;
        v63.origin.CGFloat y = v51;
        v63.size.width = v53;
        v63.size.height = v55;
        if (v56 + CGRectGetWidth(v63) < a2)
        {
          v64.origin.CGFloat x = v59;
          v64.origin.CGFloat y = a10;
          v64.size.width = a11;
          v64.size.height = a12;
          CGRectGetMaxX(v64);
          v65.origin.CGFloat x = v59;
          v65.origin.CGFloat y = a10;
          v65.size.width = a11;
          v65.size.height = a12;
          CGRectGetMinY(v65);
          uint64_t v57 = (void *)sub_20A8CEC60();
          objc_msgSend(v57, sel_ascender);

          Class v58 = (void *)sub_20A8CEC60();
          objc_msgSend(v58, sel_ascender);

          v66.origin.CGFloat x = v49;
          v66.origin.CGFloat y = v51;
          v66.size.width = v53;
          v66.size.height = v55;
          CGRectGetWidth(v66);
          v67.origin.CGFloat x = v49;
          v67.origin.CGFloat y = v51;
          v67.size.width = v53;
          v67.size.height = v55;
          CGRectGetHeight(v67);
        }
      }
    }
    else
    {
      sub_20A8CF520();
      __break(1u);
    }
  }
}

uint64_t sub_20A7229D4@<X0>(uint64_t a1@<X1>, const void *a2@<X2>, uint64_t a3@<X3>, CGFloat *a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D2>, double a7@<D7>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v76 = a3;
  double v77 = a2;
  v59[1] = a1;
  double v61 = a7;
  uint64_t v66 = a13;
  uint64_t v67 = a12;
  uint64_t v65 = a14;
  v59[2] = a8;
  uint64_t v63 = a11;
  uint64_t v60 = sub_20A8CAC10();
  uint64_t v64 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  CGRect v62 = (char *)v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C8180();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78.origin.CGFloat y = *(CGFloat *)(a1 + *(int *)(type metadata accessor for StockTitleViewLayoutOptions() + 28));
  v78.origin.CGFloat x = 0.0;
  v78.size.CGFloat width = a5;
  v78.size.CGFloat height = a6;
  CGRect v79 = CGRectIntegral(v78);
  CGFloat y = v79.origin.y;
  CGFloat x = v79.origin.x;
  CGFloat height = v79.size.height;
  CGFloat width = v79.size.width;
  uint64_t v23 = *MEMORY[0x263F7D268];
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  v24(v22, v23, v19);
  sub_20A8C8170();
  uint64_t v70 = v26;
  uint64_t v71 = v25;
  uint64_t v68 = v28;
  uint64_t v69 = v27;
  id v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v22, v19);
  v24(v22, v23, v19);
  sub_20A8C8170();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  v29(v22, v19);
  v24(v22, v23, v19);
  uint64_t v38 = v60;
  sub_20A8C8170();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  v29(v22, v19);
  double v47 = v62;
  uint64_t v48 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v62, v76, v38);
  CGFloat v49 = (void *)sub_20A8C9790();
  id v50 = objc_msgSend(v49, sel_horizontalSizeClass);

  if ((unint64_t)v50 >= 2)
  {
    if (v50 != (id)2)
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
    sub_20A8C9820();
    if (v52 >= 640.0) {
      char v51 = 1;
    }
    else {
      char v51 = 2;
    }
  }
  else
  {
    char v51 = 0;
  }
  CGFloat v53 = y;
  *a4 = x;
  a4[1] = v53;
  CGFloat v54 = height;
  a4[2] = width;
  a4[3] = v54;
  uint64_t v55 = v70;
  *((void *)a4 + 4) = v71;
  *((void *)a4 + 5) = v55;
  uint64_t v56 = v68;
  *((void *)a4 + 6) = v69;
  *((void *)a4 + 7) = v56;
  *((void *)a4 + 8) = v31;
  *((void *)a4 + 9) = v33;
  *((void *)a4 + 10) = v35;
  *((void *)a4 + 11) = v37;
  *((void *)a4 + 12) = v40;
  *((void *)a4 + 13) = v42;
  *((void *)a4 + 14) = v44;
  *((void *)a4 + 15) = v46;
  memcpy(a4 + 16, v77, 0x1A1uLL);
  uint64_t v57 = type metadata accessor for StockTitleViewLayoutAttributes();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v48 + 32))((char *)a4 + *(int *)(v57 + 36), v47, v38);
  *((unsigned char *)a4 + *(int *)(v57 + 40)) = v51;
  return result;
}

uint64_t type metadata accessor for StockTitleViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A722E70@<X0>(CGFloat *a1@<X8>)
{
  return sub_20A7229D4(*(void *)(v1 + 16), *(const void **)(v1 + 144), *(void *)(v1 + 152), a1, *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 40), *(double *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136));
}

uint64_t sub_20A722EC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for QuoteSummaryViewLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for StockSearchBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_20A722F44()
{
  return sub_20A723064(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
}

uint64_t sub_20A722F8C()
{
  return sub_20A723064(&qword_26AC7CC48, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
}

uint64_t sub_20A722FD4()
{
  return sub_20A723064(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
}

uint64_t sub_20A72301C()
{
  return sub_20A723064(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

uint64_t sub_20A723064(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A7230AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v38[1] = a1;
  uint64_t v54 = a4;
  uint64_t v39 = type metadata accessor for StockSearchLayoutSectionDescriptor();
  MEMORY[0x270FA5388](v39);
  uint64_t v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v38 - v9;
  uint64_t v11 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StockSearchSectionHeaderViewLayoutOptions();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for StockSearchSectionDescriptor();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D848();
  sub_20A8C8820();
  sub_20A5E66E8((uint64_t *)v52);
  sub_20A723F58((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StockSearchSectionDescriptor);
  uint64_t v20 = sub_20A8C9830();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v16, a2, v20);
  uint64_t v21 = __swift_project_boxed_opaque_existential_1((void *)(a3 + 56), *(void *)(a3 + 80));
  sub_20A84DAF0((uint64_t)v52, *v21);
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  sub_20A8C9720();
  uint64_t v31 = v30;
  sub_20A8C9710();
  uint64_t v32 = (void *)sub_20A8C9750();

  v55.origin.CGFloat x = v23;
  v55.origin.CGFloat y = v25;
  v55.size.CGFloat width = v27;
  v55.size.CGFloat height = v29;
  CGFloat Height = CGRectGetHeight(v55);
  uint64_t v44 = 0;
  uint64_t v43 = 0;
  uint64_t v45 = v31;
  CGFloat v46 = Height + 0.0 + 11.0;
  CGFloat v47 = v23;
  CGFloat v48 = v25;
  CGFloat v49 = v27;
  CGFloat v50 = v29;
  char v51 = v16;
  sub_20A8C96A0();
  sub_20A5A274C();
  uint64_t v35 = (uint64_t)&v10[*(int *)(v34 + 48)];
  *((void *)v10 + 6) = v53;
  long long v36 = v52[1];
  *(_OWORD *)uint64_t v10 = v52[0];
  *((_OWORD *)v10 + 1) = v36;
  *((_OWORD *)v10 + 2) = v52[2];
  sub_20A723EF0((uint64_t)v13, v35, (uint64_t (*)(void))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes);
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  sub_20A44AFB4((void (*)(char *))sub_20A723ED0, (uint64_t)v40);
  sub_20A723EF0((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockSearchLayoutSectionDescriptor);
  type metadata accessor for StockSearchLayoutModel();
  sub_20A723064(&qword_26AC7CC48, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
  sub_20A723064(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
  sub_20A8C9840();
  sub_20A723F58((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockSearchLayoutSectionDescriptor);
  sub_20A723F58((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes);
  return sub_20A723F58((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StockSearchSectionHeaderViewLayoutOptions);
}

uint64_t sub_20A72356C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v66 = a1;
  uint64_t v71 = a3;
  uint64_t v69 = sub_20A8C40E0();
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v65 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for StockSearchLayoutModel();
  MEMORY[0x270FA5388](v70);
  uint64_t v67 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockSearchCellViewLayoutOptions();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v65 - v10;
  uint64_t v12 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v18 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DB30(0);
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A5159EC();
    double v22 = &v20[*(int *)(v21 + 48)];
    sub_20A4C8874((uint64_t)v20, (uint64_t)v14);
    uint64_t v23 = v68;
    double v24 = v65;
    uint64_t v25 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v22, v69);
    uint64_t v26 = sub_20A8C9830();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v8, v66, v26);
    v8[*(int *)(v6 + 20)] = 1;
    CGFloat v27 = __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
    __swift_project_boxed_opaque_existential_1((void *)(*v27 + 16), *(void *)(*v27 + 40));
    uint64_t v28 = sub_20A8C3EF0();
    id v30 = sub_20A53266C(v28, v29, 0);
    swift_bridgeObjectRelease();
    sub_20A8C9820();
    double v32 = v31;
    sub_20A8C9710();
    sub_20A8CE970();
    objc_msgSend(v30, sel_boundingRectWithSize_options_context_, 0, 0, v32 - v33, 1.79769313e308);
    BOOL v34 = CGRectGetHeight(v87) >= 27.0;
    sub_20A495840(v34, *(double *)&v14, (uint64_t)v8, (uint64_t)&v72);

    sub_20A695CD0();
    uint64_t v36 = v67 + *(int *)(v35 + 48);
    uint64_t v37 = v67 + *(int *)(v35 + 64);
    sub_20A723EF0((uint64_t)v14, v67, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v36, v24, v25);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v36, 0, 1, v25);
    long long v38 = v85;
    *(_OWORD *)(v37 + 192) = v84;
    *(_OWORD *)(v37 + 208) = v38;
    *(void *)(v37 + 224) = v86;
    long long v39 = v81;
    *(_OWORD *)(v37 + 128) = v80;
    *(_OWORD *)(v37 + 144) = v39;
    long long v40 = v83;
    *(_OWORD *)(v37 + 160) = v82;
    *(_OWORD *)(v37 + 176) = v40;
    long long v41 = v77;
    *(_OWORD *)(v37 + 64) = v76;
    *(_OWORD *)(v37 + 80) = v41;
    long long v42 = v79;
    *(_OWORD *)(v37 + 96) = v78;
    *(_OWORD *)(v37 + 112) = v42;
    long long v43 = v73;
    *(_OWORD *)uint64_t v37 = v72;
    *(_OWORD *)(v37 + 16) = v43;
    long long v44 = v75;
    *(_OWORD *)(v37 + 32) = v74;
    *(_OWORD *)(v37 + 48) = v44;
    sub_20A723064(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    sub_20A8C9140();
    sub_20A723F58((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockSearchCellViewLayoutOptions);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v25);
    uint64_t v17 = v14;
  }
  else
  {
    sub_20A4C8874((uint64_t)v20, (uint64_t)v17);
    uint64_t v45 = sub_20A8C9830();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v11, v66, v45);
    v11[*(int *)(v6 + 20)] = 0;
    CGFloat v46 = __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
    __swift_project_boxed_opaque_existential_1((void *)(*v46 + 16), *(void *)(*v46 + 40));
    uint64_t v47 = sub_20A8C3EF0();
    id v49 = sub_20A53266C(v47, v48, 0);
    swift_bridgeObjectRelease();
    sub_20A8C9820();
    double v51 = v50;
    sub_20A8C9710();
    sub_20A8CE970();
    objc_msgSend(v49, sel_boundingRectWithSize_options_context_, 0, 0, v51 - v52, 1.79769313e308);
    BOOL v53 = CGRectGetHeight(v88) >= 27.0;
    sub_20A495840(v53, *(double *)&v17, (uint64_t)v11, (uint64_t)&v72);

    sub_20A695CD0();
    uint64_t v55 = v67 + *(int *)(v54 + 48);
    uint64_t v56 = v67 + *(int *)(v54 + 64);
    sub_20A723EF0((uint64_t)v17, v67, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v55, 1, 1, v69);
    long long v57 = v85;
    *(_OWORD *)(v56 + 192) = v84;
    *(_OWORD *)(v56 + 208) = v57;
    *(void *)(v56 + 224) = v86;
    long long v58 = v81;
    *(_OWORD *)(v56 + 128) = v80;
    *(_OWORD *)(v56 + 144) = v58;
    long long v59 = v83;
    *(_OWORD *)(v56 + 160) = v82;
    *(_OWORD *)(v56 + 176) = v59;
    long long v60 = v77;
    *(_OWORD *)(v56 + 64) = v76;
    *(_OWORD *)(v56 + 80) = v60;
    long long v61 = v79;
    *(_OWORD *)(v56 + 96) = v78;
    *(_OWORD *)(v56 + 112) = v61;
    long long v62 = v73;
    *(_OWORD *)uint64_t v56 = v72;
    *(_OWORD *)(v56 + 16) = v62;
    long long v63 = v75;
    *(_OWORD *)(v56 + 32) = v74;
    *(_OWORD *)(v56 + 48) = v63;
    sub_20A723064(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
    sub_20A8C9140();
    sub_20A723F58((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockSearchCellViewLayoutOptions);
  }
  return sub_20A723F58((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A723CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  double v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = *v2;
  (*(void (**)(unsigned char *, uint64_t, double))(v8 + 16))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v5);
  uint64_t v11 = a2;
  uint64_t v12 = v7;
  sub_20A44AC6C((void (*)(char *))sub_20A723E98, (uint64_t)v10);
  type metadata accessor for StockSearchLayoutSectionDescriptor();
  type metadata accessor for StockSearchLayoutModel();
  sub_20A723064(&qword_26AC7CC48, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutSectionDescriptor);
  sub_20A723064(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
  return sub_20A8C85D0();
}

uint64_t sub_20A723E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A7230AC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_20A723EB8@<X0>(void *a1@<X8>)
{
  return sub_20A84DC1C(a1);
}

uint64_t sub_20A723ED0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A72356C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_20A723EF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A723F58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_20A723FB8(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView;
  id v12 = objc_allocWithZone(MEMORY[0x263F82E00]);
  uint64_t v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton;
  *(void *)&v13[v15] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockFeedEarningsView.AddCalendarButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v20.receiver = v13;
  v20.super_class = ObjectType;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v17 = *(void *)&v16[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView];
  uint64_t v18 = v16;
  objc_msgSend(v18, sel_addSubview_, v17);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel]);
  objc_msgSend(v18, sel_addSubview_, *(void *)&v18[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton]);

  return v18;
}

char *sub_20A724188(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = qword_26AC731B0;
  sub_20A45A1DC();
  id v13 = objc_allocWithZone(v12);
  uint64_t v14 = a1;
  *(void *)&a1[v11] = objc_msgSend(v13, sel_init);

  v20.receiver = v14;
  v20.super_class = ObjectType;
  uint64_t v15 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a2, a3, a4, a5);
  uint64_t v16 = *(void **)&v15[qword_26AC731B0];
  uint64_t v17 = v15;
  id v18 = v16;
  sub_20A8CB530();

  return v17;
}

void sub_20A724274(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_26AC731B0;
  sub_20A45A1DC();
  id v7 = objc_allocWithZone(v6);
  id v8 = a3;
  *(void *)&a1[v5] = objc_msgSend(v7, sel_init);

  sub_20A8CF520();
  __break(1u);
}

void sub_20A724314()
{
}

void sub_20A724324(uint64_t a1)
{
}

uint64_t type metadata accessor for StockFeedEarningsView()
{
  return self;
}

uint64_t type metadata accessor for StockFeedEarningsView.AddCalendarButton()
{
  uint64_t result = qword_26AC731B8;
  if (!qword_26AC731B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A724400()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A724450()
{
  return type metadata accessor for StockFeedEarningsView.AddCalendarButton();
}

void sub_20A724458()
{
  id v1 = objc_retain(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton)
                         + qword_26AC731B0));
}

void sub_20A7244C0()
{
  sub_20A72454C((unint64_t *)&unk_26AC731D0);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A724518()
{
  return sub_20A72454C(&qword_26AC731C8);
}

uint64_t sub_20A72454C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockFeedEarningsView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A72458C()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_separatorView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_earningsLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockFeedEarningsView.AddCalendarButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

id PremiumSealColorPalette.innerSealTopLeftDynamicColor.getter()
{
  return *v0;
}

id PremiumSealColorPalette.innerSealBottomRightDynamicColor.getter()
{
  return *(id *)(v0 + 8);
}

id PremiumSealColorPalette.outerSealDynamicColor.getter()
{
  return *(id *)(v0 + 16);
}

void *initializeBufferWithCopyOfBuffer for PremiumSealColorPalette(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for PremiumSealColorPalette(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for PremiumSealColorPalette(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

uint64_t assignWithTake for PremiumSealColorPalette(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for PremiumSealColorPalette()
{
  return &type metadata for PremiumSealColorPalette;
}

uint64_t destroy for ManageWatchlistsDeleteWatchlistBlueprintModifier()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ManageWatchlistsDeleteWatchlistBlueprintModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ManageWatchlistsDeleteWatchlistBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ManageWatchlistsDeleteWatchlistBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ManageWatchlistsDeleteWatchlistBlueprintModifier()
{
  return &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier;
}

uint64_t sub_20A724978(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_20A68C494(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(sub_20A8C40E0() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = sub_20A8C4050();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_20A68C494(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = v14 + 16 * v11;
      *(void *)(v12 + 32) = v7;
      *(void *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20A724AB0(void (*a1)(char *, uint64_t), void (*a2)(uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v63 = a7;
  uint64_t v71 = a3;
  long long v72 = a2;
  uint64_t v65 = a1;
  sub_20A725B84(0, &qword_26763BA70, MEMORY[0x263F7D950]);
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v67 = (uint64_t *)((char *)&v58 - v9);
  uint64_t v10 = sub_20A8CA4C0();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  MEMORY[0x270FA5388](v10);
  long long v60 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A725B2C(0, &qword_26763D8D0, (unint64_t *)&qword_26763D180, MEMORY[0x263F7E0A8]);
  MEMORY[0x270FA5388](v18 - 8);
  objc_super v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v58 - v22;
  sub_20A725B84(0, (unint64_t *)&qword_26763D180, v17);
  uint64_t v70 = v24;
  uint64_t v66 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v64 = (char *)&v58 - v28;
  uint64_t v29 = sub_20A8C91A0();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  double v32 = (char *)&v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6)
  {
    swift_retain();
    sub_20A8CA3D0();
    int v33 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v32, v29);
    int v34 = *MEMORY[0x263F7D668];
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    if (v33 == v34)
    {
      sub_20A484548();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
      sub_20A8CA3C0();
      uint64_t v36 = sub_20A8C82F0();
      uint64_t v38 = v37;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      *(void *)(inited + 32) = v36;
      *(void *)(inited + 40) = v38;
      sub_20A7252E4(inited, v72, v71, (uint64_t)v23);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v39 = v66;
      uint64_t v40 = v70;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v23, 1, v70) == 1)
      {
        swift_release();
        long long v41 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
        uint64_t v42 = (uint64_t)v23;
        return sub_20A725C14(v42, &qword_26763D8D0, (unint64_t *)&qword_26763D180, v41);
      }
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v64, v23, v40);
      LODWORD(v63) = *MEMORY[0x263F7DC48];
      uint64_t v53 = v61;
      long long v59 = *(void (**)(char *))(v61 + 104);
      uint64_t v54 = v60;
      uint64_t v55 = v62;
      v59(v60);
      uint64_t v58 = sub_20A8CA3A0();
      uint64_t v65 = *(void (**)(char *, uint64_t))(v53 + 8);
      v65(v54, v55);
      type metadata accessor for ManageWatchlistsModel();
      sub_20A42D7D4();
      sub_20A44D5AC();
      uint64_t v56 = v67;
      sub_20A8C9B40();
      v72(v56);
      (*(void (**)(uint64_t *, uint64_t))(v68 + 8))(v56, v69);
      ((void (*)(char *, void, uint64_t))v59)(v54, v63, v55);
      sub_20A8CA4D0();
      swift_release();
      swift_release();
      v65(v54, v55);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v64, v70);
    }
    else
    {
      sub_20A725AD8();
      uint64_t v48 = swift_allocError();
      unsigned char *v49 = 0;
      double v51 = v67;
      uint64_t v50 = v68;
      uint64_t *v67 = v48;
      uint64_t v52 = v69;
      (*(void (**)(uint64_t *, void, uint64_t))(v50 + 104))(v51, *MEMORY[0x263F7D930], v69);
      v72(v51);
      swift_release();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 8))(v51, v52);
    }
  }
  else
  {
    uint64_t result = v63;
    if (!v63) {
      return result;
    }
    uint64_t v44 = sub_20A724978(v63);
    uint64_t v45 = v72;
    sub_20A7252E4(v44, v72, v71, (uint64_t)v20);
    swift_bridgeObjectRelease();
    uint64_t v46 = v66;
    uint64_t v47 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v20, 1, v70) == 1)
    {
      long long v41 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
      uint64_t v42 = (uint64_t)v20;
      return sub_20A725C14(v42, &qword_26763D8D0, (unint64_t *)&qword_26763D180, v41);
    }
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v26, v20, v47);
    type metadata accessor for ManageWatchlistsModel();
    sub_20A42D7D4();
    sub_20A44D5AC();
    long long v57 = v67;
    sub_20A8C9B40();
    v45(v57);
    (*(void (**)(uint64_t *, uint64_t))(v68 + 8))(v57, v69);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v26, v47);
  }
}

uint64_t sub_20A7252E4@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v68 = a3;
  sub_20A725B84(0, &qword_26763BA70, MEMORY[0x263F7D950]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v67 = (uint64_t *)((char *)&v62 - v10);
  sub_20A54071C();
  MEMORY[0x270FA5388](v11 - 8);
  long long v81 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  uint64_t v80 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  long long v78 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A725B2C(0, (unint64_t *)&qword_26763BA80, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
  MEMORY[0x270FA5388](v17 - 8);
  long long v82 = (char *)&v62 - v18;
  sub_20A725B84(0, (unint64_t *)&qword_26763AB58, v16);
  uint64_t v20 = v19;
  uint64_t v21 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  long long v77 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v62 - v24;
  sub_20A725B84(0, (unint64_t *)&qword_26763D180, MEMORY[0x263F7E0A8]);
  double v27 = MEMORY[0x270FA5388](v26);
  uint64_t v69 = v29;
  uint64_t v70 = (char *)&v62 - v28;
  uint64_t v30 = *(void (**)(double))(v29 + 16);
  uint64_t v83 = v31;
  v30(v27);
  uint64_t v32 = *(void *)(a1 + 16);
  if (v32)
  {
    uint64_t v62 = v9;
    uint64_t v63 = v8;
    uint64_t v64 = a2;
    uint64_t v66 = a4;
    long long v79 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    long long v75 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    long long v76 = (void (**)(char *, uint64_t, uint64_t))(v21 + 32);
    long long v72 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    long long v73 = (void (**)(char *, uint64_t, uint64_t))(v14 + 32);
    long long v74 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v71 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v65 = swift_bridgeObjectRetain();
    uint64_t v33 = v65 + 40;
    int v34 = v70;
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = (uint64_t)v82;
      sub_20A8CBAC0();
      uint64_t v36 = v34;
      if ((*v79)(v35, 1, v20) == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_20A725C14(v35, (unint64_t *)&qword_26763BA80, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
        sub_20A725AD8();
        uint64_t v51 = swift_allocError();
        uint64_t v50 = 1;
        *uint64_t v52 = 1;
        uint64_t v53 = v67;
        uint64_t *v67 = v51;
        uint64_t v54 = v62;
        uint64_t v55 = v63;
        (*(void (**)(uint64_t *, void, uint64_t))(v62 + 104))(v53, *MEMORY[0x263F7D930], v63);
        v64(v53);
        (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v53, v55);
        goto LABEL_10;
      }
      (*v76)(v25, v35, v20);
      uint64_t v37 = (uint64_t)v81;
      sub_20A8C8920();
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v39 = v80;
      if ((*v75)(v37, 1, v80) == 1) {
        break;
      }
      v33 += 16;
      uint64_t v40 = v78;
      (*v73)(v78, v38, v39);
      long long v41 = *v72;
      uint64_t v84 = v32;
      uint64_t v42 = v20;
      long long v43 = v25;
      uint64_t v44 = v77;
      v41(v77, v43, v42);
      sub_20A8C8890();
      int v34 = v36;
      sub_20A8CBAB0();
      uint64_t v45 = *v74;
      uint64_t v46 = v44;
      uint64_t v25 = v43;
      uint64_t v20 = v42;
      uint64_t v47 = v84;
      (*v74)(v46, v20);
      (*v71)(v40, v39);
      v45(v25, v20);
      uint64_t v32 = v47 - 1;
      if (!v32)
      {
        swift_bridgeObjectRelease();
        a4 = v66;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_20A725C70(v37);
    sub_20A725AD8();
    uint64_t v56 = swift_allocError();
    uint64_t v50 = 1;
    *long long v57 = 1;
    uint64_t v58 = v67;
    uint64_t *v67 = v56;
    uint64_t v59 = v62;
    uint64_t v60 = v63;
    (*(void (**)(uint64_t *, void, uint64_t))(v62 + 104))(v58, *MEMORY[0x263F7D930], v63);
    v64(v58);
    (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v58, v60);
    (*v74)(v25, v20);
LABEL_10:
    uint64_t v48 = v69;
    uint64_t v49 = v83;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v83);
    a4 = v66;
  }
  else
  {
LABEL_7:
    uint64_t v48 = v69;
    uint64_t v49 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(a4, v70, v83);
    uint64_t v50 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(a4, v50, 1, v49);
}

uint64_t sub_20A725A74(void (*a1)(char *, uint64_t), void (*a2)(uint64_t *), uint64_t a3)
{
  return sub_20A724AB0(a1, a2, a3, *v3, v3[1], v3[2], v3[3]);
}

unint64_t sub_20A725A84()
{
  unint64_t result = qword_26763D8C8;
  if (!qword_26763D8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D8C8);
  }
  return result;
}

unint64_t sub_20A725AD8()
{
  unint64_t result = qword_26763D8D8;
  if (!qword_26763D8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D8D8);
  }
  return result;
}

void sub_20A725B2C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *))
{
  if (!*a2)
  {
    sub_20A725B84(255, a3, a4);
    unint64_t v5 = sub_20A8CF1B0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A725B84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    v8[2] = sub_20A42D7D4();
    v8[3] = sub_20A44D5AC();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A725C14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, void *))
{
  sub_20A725B2C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_20A725C70(uint64_t a1)
{
  sub_20A54071C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A725D98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors()
{
  return &type metadata for ManageWatchlistsDeleteWatchlistBlueprintModifier.Errors;
}

unint64_t sub_20A725DD4()
{
  unint64_t result = qword_26763D8E0;
  if (!qword_26763D8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D8E0);
  }
  return result;
}

uint64_t sub_20A725E28()
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C2530();
  __swift_allocate_value_buffer(v3, qword_267652FA8);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_267652FA8);
  sub_20A8C2520();
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A725F54(double a1)
{
  id v3 = (id)sub_20A658280(0, *(void *)(v1 + 56), *(unsigned char *)(v1 + 64), a1);
  objc_msgSend(v3, sel_setNumberStyle_, 1);
  id v4 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, a1);
  id v5 = objc_msgSend(v3, sel_stringFromNumber_, v4);

  if (v5)
  {
    uint64_t v16 = sub_20A8CE280();
    uint64_t v7 = v6;
  }
  else
  {

    uint64_t v16 = sub_20A8CE760();
    uint64_t v7 = v8;
  }
  uint64_t v9 = *(void *)(v1 + 40);
  uint64_t v10 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v9);
  uint64_t v11 = (void *)sub_20A8CDF60();
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = *(void (**)(void *, uint64_t, uint64_t))(v12 + 8);
  v17[3] = v9;
  v17[4] = v10;
  __swift_allocate_boxed_opaque_existential_1(v17);
  v13(v11, v9, v12);

  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 136))(v16, v7, v9, v10);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

uint64_t sub_20A7260E8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockChartPriceLabelFormatter()
{
  return self;
}

uint64_t sub_20A72614C(double a1)
{
  return sub_20A725F54(a1);
}

uint64_t sub_20A726170@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71590);
  uint64_t result = sub_20A8C5BB0();
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7A150);
  uint64_t result = sub_20A8C5BB0();
  if (!v20)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68EE0);
  uint64_t result = sub_20A8C5BB0();
  if (v18)
  {
    uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    double v6 = MEMORY[0x270FA5388](v5);
    uint64_t v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = sub_20A72CDE4(*v8, *v13, &v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    uint64_t result = sub_20A72EF84(&qword_26AC6FDC0, (void (*)(uint64_t))type metadata accessor for StockViewRenderer);
    *a2 = v15;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A726434@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for StockViewStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    uint64_t v8 = *(void *)(v4 - 8);
    double v9 = MEMORY[0x270FA5388](v7);
    double v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = sub_20A4E85B4((uint64_t)v11, v5, v4, v6);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v4);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = &off_26BE62928;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A7265B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71590);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7EF50);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for StockViewStyler();
      v37[3] = v17;
      v37[4] = &off_26BE62928;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockSparklineViewLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE6FB30;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for StockViewLayoutAttributesFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_26BE62928;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE6FB30;
      v20[7] = v32;
      v20[12] = MEMORY[0x263F8EE80];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE66838;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A7269FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7AE68);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for ForYouFeedMastheadViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE66F38;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for ForYouFeedMastheadViewRenderer();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE66F38;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE5F6D0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A726C28@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for ForYouFeedMastheadViewStyler();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_20A42BEBC(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_26BE66F38;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A726CDC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7AE68);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for ForYouFeedMastheadViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE66F38;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE66F38;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE6D248;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A726F14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v23;
  if (!v23)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC684D0);
  uint64_t result = sub_20A8C5BB0();
  if (!v22)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7F020);
  uint64_t result = sub_20A8C5BB0();
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for PremiumSealAnimationManager();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (uint64_t *)&v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)&v19[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    id v17 = sub_20A72EDA0(v5, *v10, *v15, v6);
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    a2[3] = type metadata accessor for ForYouFeedMastheadViewProvider();
    uint64_t result = sub_20A72EF84(&qword_26AC80E60, (void (*)(uint64_t))type metadata accessor for ForYouFeedMastheadViewProvider);
    a2[4] = result;
    *a2 = v17;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A727228@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for AddButtonStyler;
    a2[4] = (uint64_t)&off_26BE648F0;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_20A42BEBC(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A7272DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76570);
  uint64_t result = sub_20A8C5BB0();
  if (v12)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t **)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t **, double))(v8 + 16))(v7, v5);
    id v9 = sub_20A72CFF4(*v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    uint64_t result = sub_20A72EF84((unint64_t *)&unk_26AC74CB0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewRenderer);
    *a2 = v9;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A727440@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE712D8, a2);
}

uint64_t sub_20A727474@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76570);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for QuoteDetailViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE712D8;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for QuoteDetailViewLayoutAttributesFactory();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    *(void *)(v12 + 40) = v10;
    *(void *)(v12 + 48) = &off_26BE712D8;
    *(void *)(v12 + 16) = v18;
    *(void *)(v12 + 56) = 0;
    *(unsigned char *)(v12 + 64) = 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = (uint64_t)&off_26BE6DBD0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A7276B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A910);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78808);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v25;
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (void *)((char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    uint64_t v13 = type metadata accessor for StockFeedMastheadViewStyler();
    v22[3] = v13;
    v22[4] = &off_26BE715F0;
    v22[0] = v12;
    type metadata accessor for StockFeedMastheadViewRenderer();
    double v14 = (void *)swift_allocObject();
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v13);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (void *)((char *)&v22[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = *v18;
    v14[5] = v13;
    v14[6] = &off_26BE715F0;
    v14[2] = v20;
    v14[7] = v5;
    v14[8] = v6;
    sub_20A42BEBC(&v23, (uint64_t)(v14 + 9));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t result = sub_20A72EF84(&qword_26AC797D8, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadViewRenderer);
    *a2 = v14;
    a2[1] = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A7279C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE715F0, a2);
}

uint64_t sub_20A7279FC@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v21;
  if (v21)
  {
    uint64_t v11 = a2(0);
    uint64_t v12 = v22;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v14 = MEMORY[0x270FA5388](v13);
    double v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = a3(v16, v11, v10, v12);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a5[3] = v11;
    a5[4] = a4;
    *a5 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A727B70@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A910);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7EA58);
  uint64_t result = sub_20A8C5BB0();
  if (!v26)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC76D20);
  uint64_t result = sub_20A8C5BB0();
  if (!v24)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  if (v22)
  {
    uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    double v6 = MEMORY[0x270FA5388](v5);
    double v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (uint64_t *)((char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_20A72D168(*v8, *v13, *v18, &v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    uint64_t result = type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
    a2[3] = result;
    a2[4] = &off_26BE6F910;
    *a2 = v20;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A727F18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC789C8);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC78808);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v5 = v22;
    if (v22)
    {
      uint64_t v6 = v23;
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v8 = MEMORY[0x270FA5388](v7);
      uint64_t v10 = (void *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
      uint64_t v12 = *v10;
      uint64_t v13 = type metadata accessor for StockFeedQuoteViewStyler();
      void v21[3] = v13;
      v21[4] = &off_26BE692B8;
      v21[0] = v12;
      type metadata accessor for StockFeedPriceViewRenderer();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v13);
      double v16 = MEMORY[0x270FA5388](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      v14[5] = v13;
      v14[6] = &off_26BE692B8;
      v14[2] = v20;
      v14[7] = v5;
      v14[8] = v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      uint64_t result = sub_20A72EF84(&qword_26AC76ED8, (void (*)(uint64_t))type metadata accessor for StockFeedPriceViewRenderer);
      *a2 = v14;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A7281D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for StockFeedQuoteViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A6539A8, (uint64_t)&off_26BE692B8, a2);
}

uint64_t sub_20A728204@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC789C8);
  uint64_t result = sub_20A8C5BB0();
  if (!v39)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7EA58);
  uint64_t result = sub_20A8C5BB0();
  if (!v37)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v31 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v34;
  if (v34)
  {
    uint64_t v30 = type metadata accessor for StockFeedPriceViewLayoutAttributesFactory();
    uint64_t v6 = v35;
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(v33, v34);
    v32[3] = v5;
    v32[4] = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
    uint64_t v9 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v5 - 8) + 16);
    ((void (*)(uint64_t *, void *, uint64_t))v9)(boxed_opaque_existential_1, v7, v5);
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    uint64_t v29 = (uint64_t)&v29;
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = (*(uint64_t (**)(char *, double))(v19 + 16))(v18, v16);
    double v21 = MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9(v23, boxed_opaque_existential_1, v5, v21);
    uint64_t v24 = type metadata accessor for StockFeedQuoteViewStyler();
    uint64_t v25 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
    uint64_t v26 = v30;
    double v27 = sub_20A8C0928((uint64_t)v13, (uint64_t)v18, (uint64_t)v23, v30, v24, v5, v25, (uint64_t)&off_26BE692B8, v6, (uint64_t)&off_26BE623A0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    uint64_t v28 = v31;
    v31[3] = v26;
    v28[4] = &off_26BE73B08;
    void *v28 = v27;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A7285CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A908);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockFeedEarningsViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE5FE60;
    v22[0] = v9;
    type metadata accessor for StockFeedEarningsViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    double v21 = &off_26BE5FE60;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC79728, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A728828@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE5FE60, a2);
}

uint64_t sub_20A72885C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A908);
  uint64_t result = sub_20A8C5BB0();
  if (v26)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockFeedEarningsViewStyler();
    v24[3] = v10;
    v24[4] = &off_26BE5FE60;
    v24[0] = v9;
    uint64_t v11 = type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    *(void *)(v12 + 80) = v10;
    *(void *)(v12 + 88) = &off_26BE5FE60;
    __asm { FMOV            V1.2D, #12.0 }
    *(_OWORD *)(v12 + 16) = xmmword_20A8ECB00;
    *(_OWORD *)(v12 + 32) = _Q1;
    *(void *)(v12 + 48) = 0x4014000000000000;
    *(void *)(v12 + 56) = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    a2[3] = v11;
    a2[4] = (uint64_t)&off_26BE65598;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A728A9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC77860);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for SectionHeaderViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE65910;
    v22[0] = v9;
    type metadata accessor for SectionHeaderViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    double v21 = &off_26BE65910;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC76580, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A728CF8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A729250(a1, (uint64_t (*)(void))type metadata accessor for SectionHeaderViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_20A58ED18, (uint64_t)&off_26BE65910, a2);
}

uint64_t sub_20A728D2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC77860);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for SectionHeaderViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE65910;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for SectionHeaderViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE65910;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE71870;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A728F64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC75EE0);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC78808);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v5 = v22;
    if (v22)
    {
      uint64_t v6 = v23;
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v8 = MEMORY[0x270FA5388](v7);
      uint64_t v10 = (void *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
      uint64_t v12 = *v10;
      uint64_t v13 = type metadata accessor for StockTitleViewStyler();
      void v21[3] = v13;
      v21[4] = &off_26BE66FB0;
      v21[0] = v12;
      type metadata accessor for StockTitleViewRenderer();
      double v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v13);
      double v16 = MEMORY[0x270FA5388](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      v14[5] = v13;
      v14[6] = &off_26BE66FB0;
      v14[2] = v20;
      v14[7] = v5;
      v14[8] = v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      uint64_t result = sub_20A72EF84(&qword_26AC742B8, (void (*)(uint64_t))type metadata accessor for StockTitleViewRenderer);
      *a2 = v14;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72921C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A729250(a1, (uint64_t (*)(void))type metadata accessor for StockTitleViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_20A58ED18, (uint64_t)&off_26BE66FB0, a2);
}

uint64_t sub_20A729250@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v34)
  {
    uint64_t v29 = a4;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC71788);
    uint64_t result = sub_20A8C5BB0();
    if (v31)
    {
      uint64_t v11 = a2(0);
      uint64_t v13 = v34;
      uint64_t v12 = v35;
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
      uint64_t v28 = (uint64_t)&v28;
      double v15 = MEMORY[0x270FA5388](v14);
      uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v18 + 16))(v17, v15);
      uint64_t v19 = v31;
      uint64_t v20 = v32;
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = a3(v17, v24, v11, v13, v19, v12, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
      uint64_t v27 = v29;
      a5[3] = v11;
      a5[4] = v27;
      *a5 = v26;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A7294E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC75EE0);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7EA58);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      double v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for StockTitleViewStyler();
      v37[3] = v17;
      v37[4] = &off_26BE66FB0;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE623A0;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for StockTitleViewLayoutAttributesFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_26BE66FB0;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE623A0;
      v20[7] = v32;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE6C868;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72991C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7B538);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockSectionFooterViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE61B90;
    v22[0] = v9;
    type metadata accessor for StockSectionFooterViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE61B90;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC7A0A8, (void (*)(uint64_t))type metadata accessor for StockSectionFooterViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A729B78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for StockSectionFooterViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE61B90, a2);
}

uint64_t sub_20A729BAC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7B538);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for StockSectionFooterViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE61B90;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for StockSectionFooterViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE61B90;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE645E8;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A729DE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for WatchlistSwitcherStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE5FBF8, a2);
}

uint64_t sub_20A729E18@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC782B8);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for WatchlistSwitcherStyler();
    v19[3] = v10;
    v19[4] = &off_26BE5FBF8;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for WatchlistSwitcherLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE5FBF8;
    v12[2] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE69D90;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72A044@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78BE8);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7F5C8);
    uint64_t result = sub_20A8C5BB0();
    if (v23)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for StockSparklineViewStyler();
      void v21[3] = v11;
      v21[4] = &off_26BE699C0;
      v21[0] = v10;
      uint64_t v12 = type metadata accessor for StockSparklineViewRenderer();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
      double v15 = MEMORY[0x270FA5388](v14);
      uint64_t v17 = (void *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      v13[5] = v11;
      v13[6] = &off_26BE699C0;
      v13[2] = v19;
      sub_20A42BEBC(&v22, (uint64_t)(v13 + 7));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      a2[3] = v12;
      a2[4] = &off_26BE710A8;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72A2D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC78BE8);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7F5E0);
    uint64_t result = sub_20A8C5BB0();
    if (v23)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for StockSparklineViewStyler();
      void v21[3] = v11;
      v21[4] = &off_26BE699C0;
      v21[0] = v10;
      uint64_t v12 = type metadata accessor for StockSparklineViewLayoutAttributesFactory();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
      double v15 = MEMORY[0x270FA5388](v14);
      uint64_t v17 = (void *)((char *)&v21[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      v13[5] = v11;
      v13[6] = &off_26BE699C0;
      v13[2] = v19;
      sub_20A42BEBC(&v22, (uint64_t)(v13 + 7));
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      a2[3] = v12;
      a2[4] = &off_26BE6FB30;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72A564@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_20A8C2990();
  MEMORY[0x270FA5388](v4 - 8);
  double v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v19)
  {
    uint64_t v8 = type metadata accessor for StockSparklineViewStyler();
    sub_20A8C2940();
    uint64_t v9 = v19;
    uint64_t v10 = v20;
    uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    double v12 = MEMORY[0x270FA5388](v11);
    uint64_t v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v15 + 16))(v14, v12);
    uint64_t v16 = sub_20A665538((uint64_t)v14, (uint64_t)v6, v8, v9, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    a2[3] = v8;
    a2[4] = (uint64_t)&off_26BE699C0;
    *a2 = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72A724@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC72E60);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for PlacardViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE6A3B0;
    v22[0] = v9;
    type metadata accessor for PlacardViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE6A3B0;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC710A8, (void (*)(uint64_t))type metadata accessor for PlacardViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72A980@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for PlacardViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE6A3B0, a2);
}

uint64_t sub_20A72A9B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC72E60);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for PlacardViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE6A3B0;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for PlacardViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE6A3B0;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE6FB40;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72ABEC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7B690);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for BilingualFeedPromptViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE61688;
    v22[0] = v9;
    type metadata accessor for BilingualFeedPromptViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE61688;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC7A468, (void (*)(uint64_t))type metadata accessor for BilingualFeedPromptViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72AE48@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for BilingualFeedPromptViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A4805F8, (uint64_t)&off_26BE61688, a2);
}

uint64_t sub_20A72AE7C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7B690);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for BilingualFeedPromptViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE61688;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for BilingualFeedPromptViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE61688;
    v12[2] = v18;
    sub_20A72EB50();
    swift_allocObject();
    v12[7] = sub_20A8C63C0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE62718;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72B0C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC77530);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for BrandingTitleViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE6BC70;
    v22[0] = v9;
    type metadata accessor for BrandingTitleViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE6BC70;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC75F88, (void (*)(uint64_t))type metadata accessor for BrandingTitleViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72B324@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A729250(a1, (uint64_t (*)(void))type metadata accessor for BrandingTitleViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_20A58ED18, (uint64_t)&off_26BE6BC70, a2);
}

uint64_t sub_20A72B358@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC77530);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for BrandingTitleViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE6BC70;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for BrandingTitleViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE6BC70;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE67608;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72B590@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC76330);
  uint64_t result = sub_20A8C5BB0();
  if (v26)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for PremiumSealAnimationManager();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
      double v7 = MEMORY[0x270FA5388](v6);
      uint64_t v9 = (uint64_t *)((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
      uint64_t v11 = *v9;
      uint64_t v12 = type metadata accessor for ForYouTitleViewStyler();
      v24[3] = v12;
      v24[4] = &off_26BE64D38;
      v24[0] = v11;
      type metadata accessor for ForYouTitleViewRenderer();
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v12);
      double v15 = MEMORY[0x270FA5388](v14);
      uint64_t v17 = (uint64_t *)((char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
      uint64_t v19 = *v17;
      uint64_t v22 = v12;
      uint64_t v23 = &off_26BE64D38;
      *(void *)&long long v21 = v19;
      sub_20A42BEBC(&v21, v13 + 16);
      *(void *)(v13 + 56) = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      uint64_t result = sub_20A72EF84(&qword_26AC74B18, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewRenderer);
      *a2 = v13;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72B830@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v29)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC71788);
  uint64_t result = sub_20A8C5BB0();
  if (!v26)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t result = sub_20A8C5BB0();
  if (v22)
  {
    v31[0] = v21[1];
    v31[1] = v22;
    long long v32 = v23;
    uint64_t v33 = v24;
    uint64_t v5 = type metadata accessor for ForYouTitleViewStyler();
    uint64_t v7 = v29;
    uint64_t v6 = v30;
    uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
    double v9 = MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v12 + 16))(v11, v9);
    uint64_t v13 = v26;
    uint64_t v14 = v27;
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_20A568E78((uint64_t)v11, (uint64_t)v18, (uint64_t)v31, v5, v7, v13, v6, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE64D38;
    *a2 = v20;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A72BB00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC76330);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC76D20);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for ForYouTitleViewStyler();
      v37[3] = v17;
      v37[4] = &off_26BE64D38;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for MastheadMetricsFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE71B00;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for ForYouTitleViewLayoutAttributesFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_26BE64D38;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE71B00;
      v20[7] = v32;
      v20[12] = MEMORY[0x263F8EE80];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE6D6A8;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72BF44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76DF0);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC82850);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v5 = v22;
    if (v22)
    {
      uint64_t v6 = v23;
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
      double v8 = MEMORY[0x270FA5388](v7);
      uint64_t v10 = (void *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
      uint64_t v12 = *v10;
      uint64_t v13 = type metadata accessor for QuoteSummaryViewStyler();
      void v21[3] = v13;
      v21[4] = &off_26BE68D30;
      v21[0] = v12;
      type metadata accessor for QuoteSummaryViewRenderer();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v13);
      double v16 = MEMORY[0x270FA5388](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = *v18;
      v14[5] = v13;
      v14[6] = &off_26BE68D30;
      v14[2] = v20;
      v14[7] = v5;
      v14[8] = v6;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      uint64_t result = sub_20A72EF84(&qword_26AC75B68, (void (*)(uint64_t))type metadata accessor for QuoteSummaryViewRenderer);
      *a2 = v14;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72C1FC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A7279FC(a1, (uint64_t (*)(void))type metadata accessor for QuoteSummaryViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE68D30, a2);
}

uint64_t sub_20A72C230@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76DF0);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC82BD0);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      double v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for QuoteSummaryViewStyler();
      v37[3] = v17;
      v37[4] = &off_26BE68D30;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for QuoteViewLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE70D80;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      v20[5] = v17;
      v20[6] = &off_26BE68D30;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE70D80;
      v20[7] = v32;
      v20[12] = MEMORY[0x263F8EE80];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE623A0;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A72C674@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC82B48);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for QuoteViewStyler();
    v22[3] = v10;
    v22[4] = &off_26BE6B550;
    v22[0] = v9;
    type metadata accessor for QuoteViewRenderer();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v10);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t *)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
    uint64_t v17 = *v15;
    uint64_t v20 = v10;
    uint64_t v21 = &off_26BE6B550;
    *(void *)&long long v19 = v17;
    sub_20A42BEBC(&v19, v11 + 16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = sub_20A72EF84(&qword_26AC82B40, (void (*)(uint64_t))type metadata accessor for QuoteViewRenderer);
    *a2 = v11;
    a2[1] = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72C8D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A729250(a1, (uint64_t (*)(void))type metadata accessor for QuoteViewStyler, (uint64_t (*)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_20A58ED18, (uint64_t)&off_26BE6B550, a2);
}

uint64_t sub_20A72C904@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC82B48);
  uint64_t result = sub_20A8C5BB0();
  if (v21)
  {
    uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v5 = MEMORY[0x270FA5388](v4);
    uint64_t v7 = (void *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v8 + 16))(v7, v5);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for QuoteViewStyler();
    v19[3] = v10;
    v19[4] = &off_26BE6B550;
    v19[0] = v9;
    uint64_t v11 = type metadata accessor for QuoteViewLayoutAttributesFactory();
    uint64_t v12 = (void *)swift_allocObject();
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v10);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = *v16;
    v12[5] = v10;
    v12[6] = &off_26BE6B550;
    v12[2] = v18;
    v12[7] = MEMORY[0x263F8EE80];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a2[3] = v11;
    a2[4] = &off_26BE70D80;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A72CB3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A72CC00(a1, a2);
}

uint64_t sub_20A72CB58@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20A8CD790();
  swift_allocObject();
  uint64_t v3 = sub_20A8CD780();
  a1[3] = v2;
  uint64_t result = sub_20A72EF84(&qword_26763D8E8, MEMORY[0x263F59D20]);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_20A72CBE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A72CC00(a1, a2);
}

uint64_t sub_20A72CC00@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A72EAF8();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A148);
  uint64_t result = sub_20A8C5B70();
  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A1D0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    uint64_t v5 = sub_20A8C8000();
    swift_allocObject();
    uint64_t result = sub_20A8C7FF0();
    uint64_t v6 = MEMORY[0x263F7D238];
    a2[3] = v5;
    a2[4] = v6;
    *a2 = result;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A72CD64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20A8C9530();
  swift_allocObject();
  uint64_t result = sub_20A8C9520();
  uint64_t v4 = MEMORY[0x263F7D7B0];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for RendererAssembly()
{
  return self;
}

void *sub_20A72CDE4(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = type metadata accessor for StockViewStyler();
  void v25[3] = v6;
  v25[4] = &off_26BE62928;
  v25[0] = a1;
  uint64_t v7 = type metadata accessor for StockSparklineViewRenderer();
  uint64_t v23 = v7;
  uint64_t v24 = &off_26BE710A8;
  v22[0] = a2;
  type metadata accessor for StockViewRenderer();
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v6);
  double v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (void *)((char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  double v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (void *)((char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
  uint64_t v19 = *v12;
  uint64_t v20 = *v17;
  v8[5] = v6;
  v8[6] = &off_26BE62928;
  v8[2] = v19;
  v8[10] = v7;
  v8[11] = &off_26BE710A8;
  v8[7] = v20;
  v8[17] = MEMORY[0x263F8EE80];
  sub_20A42BEBC(a3, (uint64_t)(v8 + 12));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v8;
}

id sub_20A72CFF4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v15[3] = v1;
  v15[4] = &off_26BE712D8;
  v15[0] = a1;
  uint64_t v2 = (objc_class *)type metadata accessor for QuoteDetailViewRenderer();
  uint64_t v3 = (char *)objc_allocWithZone(v2);
  uint64_t v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v1);
  double v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v13 - v6);
  (*(void (**)(char *, double))(v8 + 16))((char *)&v13 - v6, v5);
  uint64_t v9 = *v7;
  v14[3] = v1;
  v14[4] = &off_26BE712D8;
  v14[0] = v9;
  double v10 = &v3[OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_lastKnownContentOffset];
  *(void *)double v10 = 0;
  *((void *)v10 + 1) = 0;
  unsigned char v10[16] = 1;
  sub_20A4342F4((uint64_t)v14, (uint64_t)&v3[OBJC_IVAR____TtC8StocksUI23QuoteDetailViewRenderer_styler]);
  v13.receiver = v3;
  v13.super_class = v2;
  id v11 = objc_msgSendSuper2(&v13, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v11;
}

void *sub_20A72D168(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = type metadata accessor for StockFeedMastheadViewStyler();
  void v38[3] = v8;
  v38[4] = &off_26BE715F0;
  v38[0] = a1;
  uint64_t v9 = type metadata accessor for QuoteSummaryViewLayoutAttributesFactory();
  uint64_t v36 = v9;
  uint64_t v37 = &off_26BE623A0;
  v35[0] = a2;
  uint64_t v10 = type metadata accessor for MastheadMetricsFactory();
  uint64_t v33 = v10;
  uint64_t v34 = &off_26BE71B00;
  v32[0] = a3;
  type metadata accessor for StockFeedMastheadViewLayoutAttributesFactory();
  id v11 = (void *)swift_allocObject();
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v8);
  double v13 = MEMORY[0x270FA5388](v12);
  double v15 = (void *)((char *)&v32[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v16 + 16))(v15, v13);
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (void *)((char *)&v32[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (void *)((char *)&v32[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  uint64_t v27 = *v15;
  uint64_t v28 = *v20;
  uint64_t v29 = *v25;
  v11[5] = v8;
  v11[6] = &off_26BE715F0;
  v11[2] = v27;
  v11[10] = v9;
  v11[11] = &off_26BE623A0;
  v11[12] = v29;
  v11[7] = v28;
  v11[15] = v10;
  v11[16] = &off_26BE71B00;
  v11[22] = MEMORY[0x263F8EE80];
  sub_20A42BEBC(a4, (uint64_t)(v11 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v11;
}

uint64_t sub_20A72D458()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC73658);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC71590);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, qword_26AC68550);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC684D0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC7AE68);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7F020);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7C688);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC70BA0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC77858);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC76570);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7E838);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7C088);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC7A910);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7F018);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7A000);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC789C8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7EE00);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7C080);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC7A908);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7F010);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC795D0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC77860);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7EB10);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC771D8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC75EE0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7E820);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7CD90);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC7B538);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7F0D0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC782B8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7ED48);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC7A150);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7EF50);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC78BE8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC74CA0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC72E60);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7DC50);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7CEB8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC7B690);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7F188);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC78E00);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC77530);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7EB08);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC777B0);
  sub_20A8C62A0();
  swift_release();
  uint64_t v4 = *MEMORY[0x263F7D008];
  id v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v10[1] = v1 + 104;
  v11(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v5 = v1 + 8;
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_20A8C5CD0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC76330);
  sub_20A8C62A0();
  swift_release();
  uint64_t v7 = v11;
  v11(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v10[2] = v5;
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7E830);
  sub_20A8C62A0();
  swift_release();
  v7(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC78808);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC76DF0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC7EA58);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC82850);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A4301D4(0, &qword_26AC82B48);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC82BD0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69E20);
  sub_20A8C62A0();
  swift_release();
  uint64_t v8 = *MEMORY[0x263F7D010];
  v11(v3, v8, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6A148);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A8C62A0();
  swift_release();
  v11(v3, v8, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A8C62A0();
  swift_release();
  return swift_release();
}

unint64_t sub_20A72EAF8()
{
  unint64_t result = qword_26AC6A200;
  if (!qword_26AC6A200)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6A200);
  }
  return result;
}

void sub_20A72EB50()
{
  if (!qword_26AC697F8)
  {
    unint64_t v0 = sub_20A8C63D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC697F8);
    }
  }
}

uint64_t sub_20A72EBB8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

id sub_20A72EBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  void v21[3] = type metadata accessor for ForYouFeedMastheadViewRenderer();
  v21[4] = &off_26BE5F6D0;
  v21[0] = a2;
  v20[3] = type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
  v20[4] = &off_26BE6D248;
  v20[0] = a3;
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_mastheadView;
  id v12 = objc_allocWithZone((Class)type metadata accessor for ForYouFeedMastheadView());
  double v13 = a5;
  *(void *)&a5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = &v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_margins];
  *(void *)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_margins] = 0x408EF00000000000;
  uint64_t v15 = *MEMORY[0x263F7D828];
  uint64_t v16 = sub_20A8C96C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  *(void *)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_model] = a1;
  sub_20A4342F4((uint64_t)v21, (uint64_t)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_renderer]);
  sub_20A4342F4((uint64_t)v20, (uint64_t)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_layoutAttributesFactory]);
  *(void *)&v13[OBJC_IVAR____TtC8StocksUI30ForYouFeedMastheadViewProvider_animationManager] = a4;
  swift_retain();
  swift_retain();

  v19.receiver = v13;
  v19.super_class = ObjectType;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return v17;
}

id sub_20A72EDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = type metadata accessor for ForYouFeedMastheadViewRenderer();
  uint64_t v26 = &off_26BE5F6D0;
  v24[0] = a2;
  uint64_t v22 = type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory();
  double v23 = &off_26BE6D248;
  v21[0] = a3;
  uint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for ForYouFeedMastheadViewProvider());
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  double v10 = MEMORY[0x270FA5388](v9);
  id v12 = (void *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  double v15 = MEMORY[0x270FA5388](v14);
  id v17 = (void *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
  id v19 = sub_20A72EBF0(a1, *v12, *v17, a4, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v19;
}

uint64_t sub_20A72EF84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A72EFCC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for ManageWatchlistsContentMode(0);
  sub_20A8C5A50();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42F250();
  sub_20A8CB4C0();
  if (v5)
  {
    sub_20A8C4990();
    swift_dynamicCast();
  }
  else
  {
    sub_20A72FBC8((uint64_t)v4, (uint64_t (*)(void))sub_20A42F348);
  }
  sub_20A8C4990();
  sub_20A8C5A00();
  swift_release();
  uint64_t v2 = (void (*)(void *))sub_20A8CB4A0();
  v2(a1);
  return swift_release();
}

uint64_t sub_20A72F128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v74 = a1;
  sub_20A42F250();
  uint64_t v77 = v5;
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v76 + 64);
  MEMORY[0x270FA5388](v5);
  long long v75 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A72FC28(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v69 - v8;
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ManageWatchlistsContentMode(0);
  uint64_t v73 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v73 + 64);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v19 = (char *)&v69 - v18;
  sub_20A44D308(a2, (uint64_t)v9);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  uint64_t v70 = a3;
  if (v20 == 1)
  {
    sub_20A44D27C((uint64_t)v9);
    sub_20A453638();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 1, 1, v21);
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v22(v13, v9, v10);
    v22(v19, v13, v10);
    sub_20A453638();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v19, 0, 1, v23);
  }
  uint64_t v24 = v78[5];
  uint64_t v72 = v78[6];
  uint64_t v71 = __swift_project_boxed_opaque_existential_1(v78 + 2, v24);
  sub_20A72F8F0();
  sub_20A47F8B0((uint64_t)v19, (uint64_t)v16);
  uint64_t v25 = v76;
  uint64_t v26 = v75;
  uint64_t v27 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v74, v77);
  uint64_t v28 = (uint64_t)v19;
  unint64_t v29 = (*(unsigned __int8 *)(v73 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  unint64_t v30 = (v15 + *(unsigned __int8 *)(v25 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v31 = swift_allocObject();
  sub_20A47F01C((uint64_t)v16, v31 + v29);
  (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v31 + v30, v26, v27);
  sub_20A8C5B90();
  uint64_t result = swift_release();
  if (!v80)
  {
    __break(1u);
    goto LABEL_30;
  }
  sub_20A42BEBC(&v79, (uint64_t)v82);
  __swift_project_boxed_opaque_existential_1(v82, v82[3]);
  uint64_t v33 = (void *)sub_20A503934(v28);
  id v34 = objc_msgSend(objc_allocWithZone((Class)sub_20A8C9370()), sel_initWithRootViewController_, v33);

  if (!v70)
  {
LABEL_20:
    id v54 = 0;
    goto LABEL_21;
  }
  swift_retain();
  uint64_t v35 = (void *)sub_20A8C9990();
  if (!v35)
  {
LABEL_19:
    swift_release();
    goto LABEL_20;
  }
  uint64_t v36 = v35;
  id v37 = objc_msgSend(v35, sel_nextResponder);
  if (!v37) {
    goto LABEL_18;
  }
  uint64_t v38 = v37;
  while (1)
  {
    self;
    uint64_t v39 = (void *)swift_dynamicCastObjCClass();
    if (v39) {
      break;
    }
    id v40 = objc_msgSend(v38, sel_nextResponder);

    uint64_t v38 = v40;
    if (!v40) {
      goto LABEL_18;
    }
  }
  id v41 = objc_msgSend(v39, sel_view);

  if (!v41)
  {
LABEL_18:

    goto LABEL_19;
  }
  sub_20A8C9980();
  double v43 = v84;
  double v42 = v85;
  sub_20A48C414((uint64_t)v83, (uint64_t)&v79);
  if ((v81 & 1) != 0 || v43 == 0.0 && v42 == 0.0)
  {
    uint64_t v44 = (void *)sub_20A8C9990();
    if (v44)
    {
      uint64_t v45 = v44;
      objc_msgSend(v44, sel_bounds);
      double v47 = v46;
      double v49 = v48;
      double v51 = v50;
      double v53 = v52;
    }
    else
    {
      double v47 = 0.0;
      double v49 = 0.0;
      double v51 = 0.0;
      double v53 = 0.0;
    }
    goto LABEL_26;
  }
  sub_20A8C9980();
  uint64_t result = sub_20A48C414((uint64_t)v86, (uint64_t)v87);
  if ((v88 & 1) == 0)
  {
    double v47 = *(double *)v87;
    double v49 = *(double *)&v87[1];
    double v51 = *(double *)&v87[2];
    double v53 = *(double *)&v87[3];
LABEL_26:
    id v55 = v36;
    objc_msgSend(v41, sel_convertRect_fromCoordinateSpace_, v55, v47, v49, v51, v53);
    double v57 = v56;
    double v59 = v58;
    double v61 = v60;
    double v63 = v62;

    swift_release();
    uint64_t v64 = (void *)v78[7];
    id v54 = v41;
    id v65 = objc_msgSend(v64, sel_traitCollection);
    id v66 = objc_msgSend(v65, sel_horizontalSizeClass);

    if (v66 != (id)1)
    {
      objc_msgSend(v34, sel_setModalPresentationStyle_, 7);
      objc_msgSend(v34, sel_setPreferredContentSize_, 376.0, 390.0);
      id v67 = objc_msgSend(v34, sel_popoverPresentationController);
      objc_msgSend(v67, sel_setSourceView_, v54);

      id v68 = objc_msgSend(v34, sel_popoverPresentationController);
      objc_msgSend(v68, sel_setSourceRect_, v57, v59, v61, v63);

      id v54 = v68;
      goto LABEL_22;
    }

LABEL_21:
    objc_msgSend(v34, sel_setModalPresentationStyle_, 2);
LABEL_22:

    sub_20A72FBC8(v28, type metadata accessor for ManageWatchlistsContentMode);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    return (uint64_t)v34;
  }
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_20A72F8F0()
{
  unint64_t result = qword_26AC76D18;
  if (!qword_26AC76D18)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC76D18);
  }
  return result;
}

uint64_t sub_20A72F948()
{
  uint64_t v1 = *(void *)(type metadata accessor for ManageWatchlistsContentMode(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  sub_20A42F250();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  sub_20A453638();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v0 + v2, 1, v8))
  {
    uint64_t v9 = sub_20A8C3F00();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v2, v9);
  }
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v2 + v3 + v7) & ~v7), v5);

  return swift_deallocObject();
}

uint64_t sub_20A72FAF4(void *a1)
{
  type metadata accessor for ManageWatchlistsContentMode(0);
  sub_20A42F250();

  return sub_20A72EFCC(a1);
}

uint64_t sub_20A72FBC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A72FC28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A72FC7C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t *sub_20A72FCAC@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

BOOL sub_20A72FCC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_20A72FCD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_20A72FCEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_20A72FD00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_20A72FD1C()
{
  int v1 = *(unsigned __int8 *)(v0 + 273);
  if (v1 == 2)
  {
    char v2 = _s11TeaSettings0B0C8StocksUIE7WelcomeV7VersionV14isBrandNewUserSbvgZ_0();
    *(unsigned char *)(v0 + 273) = v2 & 1;
  }
  else
  {
    char v2 = v1 & 1;
  }
  return v2 & 1;
}

uint64_t sub_20A72FD54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CC220();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CC250();
  uint64_t v19 = *(void *)(v7 - 8);
  uint64_t v20 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A734C78();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v13 = (void *)sub_20A8CEBE0();
  sub_20A734D28(a1, (uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  sub_20A734EB0((uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  aBlock[4] = sub_20A734F14;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_34;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A734F78(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A734F78((unint64_t *)&qword_26AC7F7B0, 255, sub_20A44D1C4);
  sub_20A8CF290();
  MEMORY[0x210526F10](0, v9, v6, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v9, v20);
}

void *sub_20A7300E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8CD2C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A734FC0();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = (void *)result[25];
    if (!v13) {
      return (void *)swift_release();
    }
    uint64_t v46 = a2;
    uint64_t v45 = v6;
    uint64_t v14 = result[24];
    uint64_t v15 = result[26];
    uint64_t v16 = result[27];
    uint64_t v17 = result[28];
    uint64_t v18 = result[29];
    uint64_t v20 = result[30];
    uint64_t v19 = result[31];
    uint64_t v21 = result[32];
    uint64_t v22 = (void *)result[33];
    v59[0] = result[23];
    v59[1] = v14;
    v59[2] = (uint64_t)v13;
    void v59[3] = v15;
    v59[4] = v16;
    v59[5] = v17;
    v59[6] = v18;
    char v60 = v20 & 1;
    uint64_t v61 = v19;
    char v62 = v21;
    double v63 = v22;
    uint64_t v23 = (void *)result[20];
    double v47 = v22;
    uint64_t v48 = v21;
    uint64_t v49 = v19;
    uint64_t v50 = v59[0];
    uint64_t v51 = v14;
    uint64_t v54 = v17;
    id v55 = v13;
    uint64_t v52 = v15;
    uint64_t v53 = v16;
    uint64_t v56 = v18;
    sub_20A735028(v59[0], v14, v13, v15, v16, v17, v18, v20, v19, v21, v22);
    id v24 = v23;
    char v25 = sub_20A8CD330();

    uint64_t v26 = 0x656E696C6E4FLL;
    if (v25) {
      uint64_t v26 = 0x656E696C66664FLL;
    }
    uint64_t v44 = v26;
    if (v25) {
      unint64_t v27 = 0xE700000000000000;
    }
    else {
      unint64_t v27 = 0xE600000000000000;
    }
    if (qword_26AC81218 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_20A8C7DF0();
    __swift_project_value_buffer(v28, (uint64_t)qword_26AC9EC20);
    swift_retain_n();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_20A8C7DD0();
    os_log_type_t v30 = sub_20A8CEA00();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v43 = v4;
      uint64_t v32 = v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v42 = v20;
      uint64_t v34 = v33;
      uint64_t v58 = v33;
      *(_DWORD *)uint64_t v32 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_20A687610(v44, v27, &v58);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2080;
      sub_20A8C5D50();
      uint64_t v57 = sub_20A687610(*(void *)&aStart_0[8 * (char)v57], 0xE500000000000000, &v58);
      sub_20A8CF1C0();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      uint64_t v35 = v34;
      uint64_t v20 = v42;
      MEMORY[0x210528850](v35, -1, -1);
      uint64_t v36 = v32;
      uint64_t v4 = v43;
      MEMORY[0x210528850](v36, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    sub_20A8C5D50();
    int v37 = v58;
    uint64_t v38 = *(int *)(v8 + 48);
    sub_20A734D28(v46, (uint64_t)v10);
    v10[v38] = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      uint64_t v39 = v12[2];
      id v40 = *(void **)(v39 + OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView);
      *(void *)(v39 + OBJC_IVAR____TtC8StocksUI11WelcomeView_errorView) = 0;
      sub_20A66F46C(v40);

      objc_msgSend(*(id *)(v39 + OBJC_IVAR____TtC8StocksUI11WelcomeView_activityIndicator), sel_setHidden_, 0);
      *((unsigned char *)v12 + 272) = 0;
      if (v37 == 1) {
        sub_20A7306B4((uint64_t)v59);
      }
      sub_20A73506C(v50, v51, v55, v52, v53, v54, v56, v20, v49, v48, v47);
      return (void *)swift_release();
    }
    uint64_t v41 = (uint64_t)v45;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v45, v10, v3);
    sub_20A730B70(v41, (double *)v59);
    sub_20A73506C(v50, v51, v55, v52, v53, v54, v56, v20, v49, v48, v47);
    swift_release();
    return (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v41, v3);
  }
  return result;
}

uint64_t sub_20A7306B4(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20A8C7DF0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC9EC20);
  uint64_t v5 = sub_20A8C7DD0();
  os_log_type_t v6 = sub_20A8CEA00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_20A414000, v5, v6, "Starting welcome animation.", v7, 2u);
    MEMORY[0x210528850](v7, -1, -1);
  }

  type metadata accessor for WelcomeViewAnimator.Canceler();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 0;
  swift_beginAccess();
  uint64_t v9 = swift_retain();
  MEMORY[0x2105268E0](v9);
  if (*(void *)((*(void *)(v2 + 176) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v2 + 176) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_20A8CE690();
  sub_20A8CE6B0();
  sub_20A8CE620();
  uint64_t v10 = swift_endAccess();
  MEMORY[0x270FA5388](v10);
  sub_20A8C6670();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v11 = (void *)sub_20A8CEBE0();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_20A7350CC;
  *(void *)(v12 + 24) = v2;
  swift_retain();
  sub_20A8C64F0();
  swift_release();

  swift_release();
  uint64_t v13 = (void *)sub_20A8CEBE0();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_20A735110;
  *(void *)(v14 + 24) = v2;
  swift_retain();
  sub_20A8C64F0();
  swift_release();

  swift_release();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_20A735118;
  *(void *)(v15 + 24) = v2;
  swift_retain();
  uint64_t v16 = (void *)sub_20A8C6450();
  sub_20A8C64F0();
  swift_release();
  swift_release();

  uint64_t v17 = (void *)sub_20A8CEBE0();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  *(void *)(v18 + 24) = v8;
  long long v19 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v18 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v18 + 80) = v19;
  *(_OWORD *)(v18 + 96) = *(_OWORD *)(a1 + 64);
  *(void *)(v18 + 112) = *(void *)(a1 + 80);
  long long v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 48) = v20;
  swift_retain();
  swift_retain();
  sub_20A7351C0(a1);
  sub_20A8C6500();
  swift_release();

  swift_release();
  uint64_t v21 = (void *)sub_20A8CEBE0();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v2;
  long long v23 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v22 + 72) = v23;
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(a1 + 64);
  *(void *)(v22 + 104) = *(void *)(a1 + 80);
  long long v24 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v22 + 40) = v24;
  swift_retain();
  sub_20A7351C0(a1);
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_20A730B70(uint64_t a1, double *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8CD2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v28[-v11];
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_20A8C7DF0();
  __swift_project_value_buffer(v13, (uint64_t)qword_26AC9EC20);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v7 + 16);
  v14(v12, a1, v6);
  uint64_t v33 = a1;
  v14(v9, a1, v6);
  uint64_t v15 = sub_20A8C7DD0();
  os_log_type_t v16 = sub_20A8CEA00();
  int v17 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v32 = v3;
    uint64_t v19 = v18;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v19 = 136315394;
    int v29 = v17;
    uint64_t v20 = sub_20A8CD260();
    uint64_t v34 = sub_20A687610(v20, v21, &v35);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    uint64_t v31 = a2;
    uint64_t v22 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v22(v12, v6);
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v23 = _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
    uint64_t v34 = sub_20A687610(v23, v24, &v35);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    v22(v9, v6);
    a2 = v31;
    _os_log_impl(&dword_20A414000, v15, (os_log_type_t)v29, "Rendering error view for model %s (%s", (uint8_t *)v19, 0x16u);
    uint64_t v25 = v30;
    swift_arrayDestroy();
    MEMORY[0x210528850](v25, -1, -1);
    uint64_t v26 = v19;
    uint64_t v3 = v32;
    MEMORY[0x210528850](v26, -1, -1);
  }
  else
  {
    unint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
    v27(v12, v6);
    v27(v9, v6);
  }

  __swift_project_boxed_opaque_existential_1((void *)(v3 + 72), *(void *)(v3 + 96));
  sub_20A478A34(v33, a2, *(char **)(v3 + 16));
  *(unsigned char *)(v3 + 272) = 1;
}

void *sub_20A730EA8(double *a1)
{
  uint64_t v2 = v1;
  double v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = (void *)*((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  uint64_t v8 = (void *)(v1 + 168);
  uint64_t v10 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  swift_beginAccess();
  unint64_t v11 = *(void *)(v2 + 168);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_20A8CF540();
    if (!v12) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v12) {
      goto LABEL_10;
    }
  }
  if (v12 < 1)
  {
    __break(1u);
    goto LABEL_42;
  }
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x210527700](i, v11);
    }
    else {
      id v14 = *(id *)(v11 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    objc_msgSend(v14, sel_stopAnimation_, 1);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v16 = MEMORY[0x263F8EE78];
  *uint64_t v8 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRelease();
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_20A8C7DF0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AC9EC20);
  uint64_t v18 = sub_20A8C7DD0();
  os_log_type_t v19 = sub_20A8CEA00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_20A414000, v18, v19, "Cancelling all outstanding cancelers.", v20, 2u);
    MEMORY[0x210528850](v20, -1, -1);
  }

  swift_beginAccess();
  unint64_t v21 = *(void *)(v2 + 176);
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_20A8CF540();
    if (!v22) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v22) {
      goto LABEL_23;
    }
  }
  if (v22 < 1)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  for (uint64_t j = 0; j != v22; ++j)
  {
    if ((v21 & 0xC000000000000001) != 0) {
      uint64_t v24 = MEMORY[0x210527700](j, v21);
    }
    else {
      uint64_t v24 = swift_retain();
    }
    *(unsigned char *)(v24 + 16) = 1;
    swift_release();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  *(void *)(v2 + 176) = v16;
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)*((void *)a1 + 2);
  id v26 = objc_msgSend(v25, sel_horizontalSizeClass);
  id v27 = objc_msgSend(v25, sel_verticalSizeClass);
  if ((unint64_t)v26 < 2) {
    goto LABEL_24;
  }
  if (v26 != (id)2)
  {
LABEL_43:
    unint64_t result = (void *)sub_20A8CF520();
    __break(1u);
    return result;
  }
  if (v27 == (id)2)
  {
    unsigned int v29 = 0;
    double v28 = (a1[1] + -768.0) * 0.00390625;
    goto LABEL_25;
  }
LABEL_24:
  double v28 = (a1[1] + -568.0) / 244.0;
  unsigned int v29 = 1;
LABEL_25:
  char v50 = v29;
  sub_20A4BD90C((uint64_t)a1);
  sub_20A8C5D50();
  uint64_t v30 = v55[0];
  *(double *)uint64_t v56 = v3;
  v56[1] = v4;
  v56[2] = v5;
  v56[3] = v6;
  v56[4] = v7;
  v56[5] = v10;
  v56[6] = v9;
  char v57 = v29;
  double v58 = v28;
  char v59 = v55[0];
  char v60 = v25;
  uint64_t v31 = v29;
  uint64_t v32 = *(void *)(v2 + 192);
  uint64_t v33 = *(void **)(v2 + 200);
  uint64_t v48 = *(void *)(v2 + 208);
  uint64_t v49 = *(void *)(v2 + 184);
  uint64_t v34 = *(void *)(v2 + 216);
  uint64_t v35 = *(void *)(v2 + 224);
  uint64_t v37 = *(void *)(v2 + 232);
  uint64_t v36 = *(void *)(v2 + 240);
  long long v47 = *(_OWORD *)(v2 + 248);
  uint64_t v38 = *(void **)(v2 + 264);
  *(double *)(v2 + 184) = v3;
  *(void *)(v2 + 192) = v4;
  *(void *)(v2 + 200) = v5;
  *(void *)(v2 + 208) = v6;
  *(void *)(v2 + 216) = v7;
  *(void *)(v2 + 224) = v10;
  *(void *)(v2 + 232) = v9;
  *(void *)(v2 + 240) = v31;
  *(double *)(v2 + 248) = v28;
  *(void *)(v2 + 256) = v30;
  *(void *)(v2 + 264) = v25;
  sub_20A4BD90C((uint64_t)a1);
  id v52 = v5;
  id v39 = v25;
  sub_20A73506C(v49, v32, v33, v48, v34, v35, v37, v36, v47, *((uint64_t *)&v47 + 1), v38);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), *(void *)(v2 + 56));
  sub_20A658E7C((uint64_t)v54);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 112), *(void *)(v2 + 136));
  sub_20A4BB8DC(v54, (uint64_t)v56, v55);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 72), *(void *)(v2 + 96));
  sub_20A476F50(v54, v50, (uint64_t)v55, *(char **)(v2 + 16));
  swift_retain();
  id v40 = sub_20A8C7DD0();
  os_log_type_t v41 = sub_20A8CEA00();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 134217984;
    sub_20A8C5D50();
    sub_20A8CF1C0();
    swift_release();
    _os_log_impl(&dword_20A414000, v40, v41, "Rendering for key frame %ld", v42, 0xCu);
    MEMORY[0x210528850](v42, -1, -1);
  }
  else
  {

    swift_release();
  }
  sub_20A8C5D50();
  if (v53)
  {
    if (v53 == 1)
    {
      if ((sub_20A8CD330() & 1) != 0 || *(unsigned char *)(v2 + 272) == 1)
      {
        sub_20A731544((uint64_t)v56);
      }
      else
      {
        uint64_t v44 = sub_20A8C7DD0();
        os_log_type_t v45 = sub_20A8CEA00();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl(&dword_20A414000, v44, v45, "Did reveal Page 1.", v46, 2u);
          MEMORY[0x210528850](v46, -1, -1);
        }

        sub_20A732CF0((uint64_t)v56, v54);
        UIAccessibilityPostNotification(*MEMORY[0x263F83200], 0);
      }
    }
  }
  else
  {
    sub_20A7306B4((uint64_t)v56);
  }

  sub_20A7353C4((uint64_t)v55);
  return sub_20A659DB8(v54);
}

uint64_t sub_20A731544(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CC220();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8CC250();
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_20A8C7DF0();
  __swift_project_value_buffer(v11, (uint64_t)qword_26AC9EC20);
  uint64_t v12 = sub_20A8C7DD0();
  os_log_type_t v13 = sub_20A8CEA00();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_20A414000, v12, v13, "Displaying offline message.", v14, 2u);
    MEMORY[0x210528850](v14, -1, -1);
  }

  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v15 = (void *)sub_20A8CEBE0();
  uint64_t v16 = swift_allocObject();
  long long v17 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v16 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v16 + 72) = v17;
  *(_OWORD *)(v16 + 88) = *(_OWORD *)(a1 + 64);
  long long v18 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v16 + 24) = *(_OWORD *)a1;
  *(void *)(v16 + 16) = v2;
  *(void *)(v16 + 104) = *(void *)(a1 + 80);
  *(_OWORD *)(v16 + 40) = v18;
  aBlock[4] = sub_20A735208;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_44;
  os_log_type_t v19 = _Block_copy(aBlock);
  swift_retain();
  sub_20A7351C0(a1);
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A734F78(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A734F78((unint64_t *)&qword_26AC7F7B0, 255, sub_20A44D1C4);
  sub_20A8CF290();
  MEMORY[0x210526F10](0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v22);
}

uint64_t sub_20A731920(uint64_t a1, long long *a2)
{
  if (sub_20A72FD1C()) {
    return sub_20A7319AC(a2);
  }
  sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A7319AC(long long *a1)
{
  uint64_t v2 = v1;
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20A8C7DF0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC9EC20);
  uint64_t v5 = sub_20A8C7DD0();
  os_log_type_t v6 = sub_20A8CEA00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_20A414000, v5, v6, "Starting Page 1 reveal.", v7, 2u);
    MEMORY[0x210528850](v7, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(v2 + 14, v2[17]);
  __swift_project_boxed_opaque_existential_1(v2 + 4, v2[7]);
  sub_20A658E7C((uint64_t)v36);
  uint64_t v8 = (void *)*((void *)a1 + 2);
  char v9 = *((unsigned char *)a1 + 56);
  uint64_t v10 = *((void *)a1 + 8);
  uint64_t v11 = (void *)*((void *)a1 + 10);
  long long v38 = *a1;
  id v39 = v8;
  long long v40 = *(long long *)((char *)a1 + 24);
  long long v41 = *(long long *)((char *)a1 + 40);
  char v42 = v9;
  uint64_t v43 = v10;
  char v44 = 1;
  os_log_type_t v45 = v11;
  id v12 = v8;
  id v13 = v11;
  sub_20A4BB8DC(v36, (uint64_t)&v38, __src);

  sub_20A659DB8(v36);
  sub_20A5A50EC();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v2;
  memcpy((void *)(v14 + 24), __src, 0x310uLL);
  sub_20A42CFF0(0, &qword_26763D910);
  swift_retain();
  sub_20A735244((uint64_t)__src);
  uint64_t v15 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v16 = v15;
  MEMORY[0x2105268E0]();
  if (*(void *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  uint64_t v17 = sub_20A8CECE0();
  swift_release();

  sub_20A5A5144();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v2;
  memcpy((void *)(v18 + 24), __src, 0x310uLL);
  swift_retain();
  sub_20A735244((uint64_t)__src);
  os_log_type_t v19 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v20 = v19;
  MEMORY[0x2105268E0]();
  if (*(void *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  uint64_t v21 = sub_20A8CECE0();
  swift_release();

  sub_20A5A519C();
  uint64_t v22 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v23 = v22;
  MEMORY[0x2105268E0]();
  if (*(void *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  if (qword_2676399B0 != -1) {
    swift_once();
  }
  sub_20A734F78(&qword_26763D918, v24, (void (*)(uint64_t))type metadata accessor for WelcomeViewAnimator);
  sub_20A8C41C0();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v2;
  memcpy((void *)(v25 + 24), __src, 0x310uLL);
  swift_retain();
  sub_20A735244((uint64_t)__src);
  uint64_t v26 = sub_20A8CECE0();
  swift_release();
  type metadata accessor for WelcomeViewAnimator.Canceler();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = 0;
  swift_beginAccess();
  uint64_t v28 = swift_retain();
  MEMORY[0x2105268E0](v28);
  if (*(void *)((v2[22] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v2[22] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
  sub_20A7357C4(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_20A8D8D40;
  *(void *)(v29 + 32) = v17;
  *(void *)(v29 + 40) = v21;
  *(void *)(v29 + 48) = v26;
  sub_20A8CE620();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v30 = (void *)sub_20A8C6450();
  sub_20A7352D0();
  sub_20A734F78(&qword_26763D928, 255, (void (*)(uint64_t))sub_20A7352D0);
  sub_20A8C64C0();
  swift_bridgeObjectRelease();

  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v31 = (void *)sub_20A8CEBE0();
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v27;
  *(void *)(v33 + 24) = v32;
  swift_retain();
  uint64_t v34 = sub_20A8C6500();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_20A7353C4((uint64_t)__src);
  return v34;
}

uint64_t sub_20A7321B4(uint64_t a1)
{
  uint64_t v2 = sub_20A8CC280();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v12 - v7;
  uint64_t v9 = *(void *)(a1 + 160);
  if (sub_20A8CD330())
  {
    sub_20A735500();
    swift_allocError();
    swift_willThrow();
  }
  else if (sub_20A72FD1C())
  {
    sub_20A8CC270();
    MEMORY[0x2105245B0](v5, 1.6);
    uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    uint64_t v9 = sub_20A8C6420();
    v10(v8, v2);
  }
  else
  {
    sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  return v9;
}

uint64_t sub_20A732378()
{
  uint64_t v0 = sub_20A8C6310();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20A8C7DF0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC9EC20);
  uint64_t v5 = sub_20A8C7DD0();
  os_log_type_t v6 = sub_20A8CEA00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_20A414000, v5, v6, "Beginning pre-warming.", v7, 2u);
    MEMORY[0x210528850](v7, -1, -1);
  }

  if (qword_26AC69720 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_20A8C5F10();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AC69708);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CFA8], v0);
  uint64_t v9 = sub_20A8C61E0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v9;
}

uint64_t sub_20A732580(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 32), *(void *)(a1 + 56));
  uint64_t v1 = off_26BE695E0;
  type metadata accessor for WelcomeModelProvider();
  return v1();
}

void sub_20A7325E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v8 = *(_OWORD *)(a1 + 144);
  v36[8] = *(_OWORD *)(a1 + 128);
  v36[9] = v8;
  uint64_t v37 = *(void *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 80);
  v36[4] = *(_OWORD *)(a1 + 64);
  v36[5] = v9;
  long long v10 = *(_OWORD *)(a1 + 112);
  v36[6] = *(_OWORD *)(a1 + 96);
  v36[7] = v10;
  long long v11 = *(_OWORD *)(a1 + 16);
  v36[0] = *(_OWORD *)a1;
  v36[1] = v11;
  long long v12 = *(_OWORD *)(a1 + 48);
  v36[2] = *(_OWORD *)(a1 + 32);
  v36[3] = v12;
  if (sub_20A8CD330())
  {
    sub_20A735500();
    swift_allocError();
    swift_willThrow();
  }
  else if (*(unsigned char *)(a3 + 16))
  {
    if (qword_26AC81218 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_20A8C7DF0();
    __swift_project_value_buffer(v13, (uint64_t)qword_26AC9EC20);
    uint64_t v14 = sub_20A8C7DD0();
    os_log_type_t v15 = sub_20A8CEA00();
    if (os_log_type_enabled(v14, v15))
    {
      id v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v16 = 0;
      MEMORY[0x210528850](v16, -1, -1);
    }
  }
  else if (sub_20A72FD1C())
  {
    if (qword_26AC81218 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_20A8C7DF0();
    __swift_project_value_buffer(v17, (uint64_t)qword_26AC9EC20);
    uint64_t v18 = sub_20A8C7DD0();
    os_log_type_t v19 = sub_20A8CEA00();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      MEMORY[0x210528850](v20, -1, -1);
    }

    uint64_t v21 = sub_20A8C7DD0();
    os_log_type_t v22 = sub_20A8CEA00();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl(&dword_20A414000, v21, v22, "Did reveal Page 1.", v23, 2u);
      MEMORY[0x210528850](v23, -1, -1);
    }

    sub_20A732CF0(a4, (id *)v36);
    UIAccessibilityPostNotification(*MEMORY[0x263F83200], 0);
  }
  else
  {
    long long v24 = *(_OWORD *)(a1 + 144);
    v34[8] = *(_OWORD *)(a1 + 128);
    v34[9] = v24;
    uint64_t v35 = *(void *)(a1 + 160);
    long long v25 = *(_OWORD *)(a1 + 80);
    v34[4] = *(_OWORD *)(a1 + 64);
    v34[5] = v25;
    long long v26 = *(_OWORD *)(a1 + 112);
    v34[6] = *(_OWORD *)(a1 + 96);
    v34[7] = v26;
    long long v27 = *(_OWORD *)(a1 + 16);
    v34[0] = *(_OWORD *)a1;
    v34[1] = v27;
    long long v28 = *(_OWORD *)(a1 + 48);
    v34[2] = *(_OWORD *)(a1 + 32);
    void v34[3] = v28;
    nullsub_1(v34);
    uint64_t v29 = sub_20A7353F0((uint64_t)v34, (uint64_t)v38);
    MEMORY[0x270FA5388](v29);
    sub_20A8C6670();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v30 = (void *)sub_20A8CEBE0();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a2;
    long long v32 = *(_OWORD *)(a4 + 48);
    *(_OWORD *)(v31 + 56) = *(_OWORD *)(a4 + 32);
    *(_OWORD *)(v31 + 72) = v32;
    *(_OWORD *)(v31 + 88) = *(_OWORD *)(a4 + 64);
    *(void *)(v31 + 104) = *(void *)(a4 + 80);
    long long v33 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)(v31 + 24) = *(_OWORD *)a4;
    *(_OWORD *)(v31 + 40) = v33;
    swift_retain();
    sub_20A7351C0(a4);
    sub_20A8C64F0();
    swift_release();
    swift_release();

    swift_release();
  }
}

uint64_t sub_20A732A14(uint64_t a1, uint64_t a2, long long *a3)
{
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20A8C7DF0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26AC9EC20);
  uint64_t v5 = sub_20A8C7DD0();
  os_log_type_t v6 = sub_20A8CEA00();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_20A414000, v5, v6, "Offline error occurred during start animation.", v7, 2u);
    MEMORY[0x210528850](v7, -1, -1);
  }

  sub_20A7319AC(a3);
  swift_release();
  return sub_20A731544((uint64_t)a3);
}

uint64_t sub_20A732B14(uint64_t a1, double *a2)
{
  sub_20A734C78();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CD2C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CD380();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    if (qword_267639AB0 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v6, (uint64_t)qword_267652DC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  }
  sub_20A730B70((uint64_t)v9, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A732CF0(uint64_t a1, id *a2)
{
  uint64_t v3 = v2;
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_20A8C7DF0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26AC9EC20);
  uint64_t v7 = sub_20A8C7DD0();
  os_log_type_t v8 = sub_20A8CEA00();
  if (os_log_type_enabled(v7, v8))
  {
    long long v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v9 = 0;
    _os_log_impl(&dword_20A414000, v7, v8, "Starting Page 2 reveal.", v9, 2u);
    MEMORY[0x210528850](v9, -1, -1);
  }

  __swift_project_boxed_opaque_existential_1(v3 + 14, v3[17]);
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void **)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  char v17 = *(unsigned char *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  os_log_type_t v19 = *(void **)(a1 + 80);
  v66[0] = *(void *)a1;
  uint64_t v10 = v66[0];
  v66[1] = v11;
  v66[2] = v12;
  v66[3] = v13;
  v66[4] = v14;
  _OWORD v66[5] = v15;
  v66[6] = v16;
  char v67 = v17;
  uint64_t v68 = v18;
  char v69 = 1;
  uint64_t v70 = v19;
  id v20 = v12;
  id v21 = v19;
  sub_20A4BB8DC(a2, (uint64_t)v66, v59);

  __swift_project_boxed_opaque_existential_1(v3 + 9, v3[12]);
  os_log_type_t v22 = (char *)v3[2];
  sub_20A476F50(a2, v17, (uint64_t)v59, v22);
  __swift_project_boxed_opaque_existential_1(v3 + 14, v3[17]);
  v61[0] = v10;
  v61[1] = v11;
  v61[2] = v20;
  v61[3] = v13;
  v61[4] = v14;
  void v61[5] = v15;
  v61[6] = v16;
  char v62 = v17;
  uint64_t v63 = v18;
  char v64 = 2;
  id v65 = v21;
  id v23 = v20;
  id v24 = v21;
  sub_20A4BB8DC(a2, (uint64_t)v61, __src);

  sub_20A5A51F4();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v3;
  memcpy((void *)(v25 + 24), __src, 0x310uLL);
  sub_20A42CFF0(0, &qword_26763D910);
  swift_retain();
  sub_20A735244((uint64_t)__src);
  long long v26 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v27 = v26;
  MEMORY[0x2105268E0]();
  if (*(void *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  uint64_t v56 = sub_20A8CECE0();
  swift_release();

  sub_20A5A524C();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v3;
  memcpy((void *)(v28 + 24), __src, 0x310uLL);
  swift_retain();
  sub_20A735244((uint64_t)__src);
  uint64_t v29 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v30 = v29;
  MEMORY[0x2105268E0]();
  if (*(void *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3[21] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  uint64_t v55 = sub_20A8CECE0();
  swift_release();

  __swift_project_boxed_opaque_existential_1(v3 + 9, v3[12]);
  sub_20A7357C4(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_20A8D5CA0;
  *(void *)(v31 + 32) = swift_getKeyPath();
  sub_20A8CE620();
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_11;
    }
  }
  else if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    unint64_t v32 = sub_20A7BA7C4(v31);
    goto LABEL_14;
  }
  unint64_t v32 = MEMORY[0x263F8EE88];
LABEL_14:
  swift_bridgeObjectRelease();
  sub_20A478404(0, v32, __src, v22);
  swift_bridgeObjectRelease();
  if (qword_267639A30 != -1) {
    swift_once();
  }
  sub_20A734F78(&qword_26763D918, v34, (void (*)(uint64_t))type metadata accessor for WelcomeViewAnimator);
  sub_20A8C41C0();
  unint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_20A8D5CA0;
  *(void *)(v35 + 32) = swift_getKeyPath();
  sub_20A8CE620();
  if (!(v35 >> 62))
  {
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (v36) {
LABEL_18:
  }
    sub_20A7BA7C4(v35);
LABEL_20:
  swift_bridgeObjectRelease();
  uint64_t v58 = sub_20A733D70();
  swift_bridgeObjectRelease();
  unint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_20A8D5CA0;
  *(void *)(v37 + 32) = swift_getKeyPath();
  sub_20A8CE620();
  if (!(v37 >> 62))
  {
    if (!*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_24;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (v38) {
LABEL_22:
  }
    sub_20A7BA7C4(v37);
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_20A733D70();
  swift_bridgeObjectRelease();
  unint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_20A8D5CA0;
  *(void *)(v40 + 32) = swift_getKeyPath();
  sub_20A8CE620();
  if (!(v40 >> 62))
  {
    if (!*(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_28;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (v41) {
LABEL_26:
  }
    sub_20A7BA7C4(v40);
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v54 = sub_20A733D70();
  swift_bridgeObjectRelease();
  unint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_20A8D5CA0;
  *(void *)(v42 + 32) = swift_getKeyPath();
  sub_20A8CE620();
  if (!(v42 >> 62))
  {
    if (!*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (v43) {
LABEL_30:
  }
    sub_20A7BA7C4(v42);
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t v57 = sub_20A733D70();
  swift_bridgeObjectRelease();
  unint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_20A8D5CA0;
  *(void *)(v44 + 32) = swift_getKeyPath();
  sub_20A8CE620();
  if (!(v44 >> 62))
  {
    if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (v45) {
LABEL_34:
  }
    sub_20A7BA7C4(v44);
LABEL_36:
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_20A733D70();
  swift_bridgeObjectRelease();
  type metadata accessor for WelcomeViewAnimator.Canceler();
  uint64_t v47 = swift_allocObject();
  *(unsigned char *)(v47 + 16) = 0;
  swift_beginAccess();
  uint64_t v48 = swift_retain();
  MEMORY[0x2105268E0](v48);
  if (*(void *)((v3[22] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3[22] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_20A8ECB60;
  *(void *)(v49 + 32) = v56;
  *(void *)(v49 + 40) = v55;
  *(void *)(v49 + 48) = v58;
  *(void *)(v49 + 56) = v39;
  *(void *)(v49 + 64) = v54;
  *(void *)(v49 + 72) = v57;
  *(void *)(v49 + 80) = v46;
  sub_20A8CE620();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20A8C64D0();
  swift_bridgeObjectRelease();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  char v50 = (void *)sub_20A8CEBE0();
  uint64_t v51 = swift_allocObject();
  swift_weakInit();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = v47;
  *(void *)(v52 + 24) = v51;
  swift_retain();
  sub_20A8C6500();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_20A7353C4((uint64_t)__src);
  return sub_20A7353C4((uint64_t)v59);
}

uint64_t sub_20A733914(uint64_t a1, CGFloat *a2, uint64_t a3, char a4)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 72), *(void *)(a1 + 96));
  sub_20A7357C4(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CA0;
  *(void *)(inited + 32) = swift_getKeyPath();
  sub_20A8CE620();
  unint64_t v8 = inited;
  if (inited >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
LABEL_5:
    unint64_t v9 = MEMORY[0x263F8EE88];
    goto LABEL_6;
  }
  if (!*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  unint64_t v9 = sub_20A7BA7C4(v8);
LABEL_6:
  swift_bridgeObjectRelease();
  sub_20A478404(a4, v9, a2, *(char **)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A733A4C(uint64_t a1, uint64_t a2)
{
  sub_20A7353F0(a1, (uint64_t)v8);
  sub_20A7353F0((uint64_t)v8, (uint64_t)v10);
  sub_20A7353F0(a1, (uint64_t)&v9);
  if (sub_20A735774((uint64_t)&v9) == 1)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a2 + 32), *(void *)(a2 + 56));
    sub_20A8C3190();
    sub_20A8C6670();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v4 = (void *)sub_20A8CEBE0();
    swift_retain();
    uint64_t v5 = sub_20A8C6500();
    swift_release();

    swift_release();
  }
  else
  {
    sub_20A7357C4(0, &qword_26763D940, (uint64_t)&type metadata for WelcomeModel, MEMORY[0x263F7D028]);
    swift_allocObject();
    sub_20A7353F0((uint64_t)v10, (uint64_t)v7);
    sub_20A735810(v7);
    return sub_20A8C6580();
  }
  return v5;
}

uint64_t sub_20A733C00(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v5 = *(_OWORD *)(a1 + 144);
  v19[8] = *(_OWORD *)(a1 + 128);
  v19[9] = v5;
  uint64_t v20 = *(void *)(a1 + 160);
  long long v6 = *(_OWORD *)(a1 + 80);
  v19[4] = *(_OWORD *)(a1 + 64);
  void v19[5] = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  v19[6] = *(_OWORD *)(a1 + 96);
  v19[7] = v7;
  long long v8 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v8;
  long long v9 = *(_OWORD *)(a1 + 48);
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v9;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 112), *(void *)(a2 + 136));
  uint64_t v10 = (void *)*((void *)a3 + 2);
  char v11 = *((unsigned char *)a3 + 56);
  uint64_t v12 = *((void *)a3 + 8);
  uint64_t v13 = (void *)*((void *)a3 + 10);
  long long v21 = *a3;
  os_log_type_t v22 = v10;
  long long v23 = *(long long *)((char *)a3 + 24);
  long long v24 = *(long long *)((char *)a3 + 40);
  char v25 = v11;
  uint64_t v26 = v12;
  char v27 = 2;
  uint64_t v28 = v13;
  id v14 = v10;
  id v15 = v13;
  sub_20A4BB8DC(v19, (uint64_t)&v21, v18);

  __swift_project_boxed_opaque_existential_1((void *)(a2 + 72), *(void *)(a2 + 96));
  sub_20A476F50((id *)v19, v11, (uint64_t)v18, *(char **)(a2 + 16));
  sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v16 = sub_20A8C6580();
  sub_20A7353C4((uint64_t)v18);
  return v16;
}

uint64_t sub_20A733D70()
{
  type metadata accessor for WelcomeViewAnimator.Canceler();
  *(unsigned char *)(swift_allocObject() + 16) = 0;
  swift_beginAccess();
  uint64_t v1 = swift_retain();
  MEMORY[0x2105268E0](v1);
  if (*(void *)((*(void *)(v0 + 176) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 176) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_20A8CE690();
  sub_20A8CE6B0();
  sub_20A8CE620();
  uint64_t v2 = swift_endAccess();
  MEMORY[0x270FA5388](v2);
  sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v3 = sub_20A8C65E0();
  swift_release();
  return v3;
}

void sub_20A733EDC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, const char *a5, uint64_t a6, const char *a7)
{
  if (qword_26AC81218 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_20A8C7DF0();
  __swift_project_value_buffer(v11, (uint64_t)qword_26AC9EC20);
  uint64_t v12 = sub_20A8C7DD0();
  os_log_type_t v13 = sub_20A8CEA00();
  if (os_log_type_enabled(v12, v13))
  {
    id v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v14 = 0;
    _os_log_impl(&dword_20A414000, v12, v13, a4, v14, 2u);
    MEMORY[0x210528850](v14, -1, -1);
  }

  char v15 = *(unsigned char *)(a2 + 16);
  uint64_t v16 = sub_20A8C7DD0();
  os_log_type_t v17 = sub_20A8CEA00();
  BOOL v18 = os_log_type_enabled(v16, v17);
  if (v15)
  {
    if (v18)
    {
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v19 = 0;
      _os_log_impl(&dword_20A414000, v16, v17, a7, v19, 2u);
      MEMORY[0x210528850](v19, -1, -1);
    }
  }
  else
  {
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_20A414000, v16, v17, a5, v20, 2u);
      MEMORY[0x210528850](v20, -1, -1);
    }

    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      sub_20A734BCC();
      sub_20A8C5D80();
      swift_release();
    }
  }
}

uint64_t sub_20A734110(uint64_t a1, uint64_t a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9)
{
  uint64_t v35 = a8;
  uint64_t v36 = a9;
  uint64_t v33 = a7;
  uint64_t v39 = sub_20A8CC220();
  uint64_t v42 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8CC250();
  uint64_t v40 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  MEMORY[0x270FA5388](v15);
  os_log_type_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CC280();
  uint64_t v38 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  long long v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  long long v24 = (char *)&v33 - v23;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a1;
  *(void *)(v25 + 24) = a2;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  swift_retain();
  uint64_t v34 = sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v21, a3);
  unint64_t v37 = *(void (**)(char *, uint64_t))(v19 + 8);
  v37(v21, v18);
  uint64_t v26 = (void *)swift_allocObject();
  id v26[2] = a6;
  v26[3] = sub_20A602E80;
  v26[4] = v25;
  uint64_t v28 = v35;
  char v27 = v36;
  v26[5] = v33;
  v26[6] = v28;
  memcpy(v26 + 7, v27, 0x310uLL);
  aBlock[4] = sub_20A73566C;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_93;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20A735244((uint64_t)v27);
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A734F78(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A734F78((unint64_t *)&qword_26AC7F7B0, 255, sub_20A44D1C4);
  uint64_t v30 = v39;
  sub_20A8CF290();
  unint64_t v31 = (void *)v34;
  MEMORY[0x210526ED0](v24, v17, v14, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v30);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v41);
  return ((uint64_t (*)(char *, uint64_t))v37)(v24, v38);
}

uint64_t sub_20A73457C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20A7345A4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  if (*(unsigned char *)(a1 + 16)) {
    return a2();
  }
  sub_20A5A52A4();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  memcpy(v11 + 4, a6, 0x310uLL);
  sub_20A42CFF0(0, &qword_26763D910);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20A735244((uint64_t)a6);
  uint64_t v12 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v13 = v12;
  MEMORY[0x2105268E0]();
  if (*(void *)((*(void *)(a4 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a4 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_20A8CE690();
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  uint64_t v14 = sub_20A8CECE0();
  swift_release();

  sub_20A5A52FC();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a4;
  v15[3] = a5;
  memcpy(v15 + 4, a6, 0x310uLL);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20A735244((uint64_t)a6);
  uint64_t v16 = (void *)sub_20A8CECF0();
  swift_beginAccess();
  id v17 = v16;
  MEMORY[0x2105268E0]();
  if (*(void *)((*(void *)(a4 + 168) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a4 + 168) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_20A8CE690();
  sub_20A8CE6B0();
  sub_20A8CE620();
  swift_endAccess();
  uint64_t v18 = sub_20A8CECE0();
  swift_release();

  sub_20A7357C4(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
  sub_20A7357C4(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20A8D5C90;
  *(void *)(v19 + 32) = v14;
  *(void *)(v19 + 40) = v18;
  sub_20A8CE620();
  swift_retain();
  swift_retain();
  sub_20A8C64D0();
  swift_bridgeObjectRelease();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v20 = (void *)sub_20A8CEBE0();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = a3;
  swift_retain();
  sub_20A8C6500();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_20A7349A4()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A73506C(*(void *)(v0 + 184), *(void *)(v0 + 192), *(void **)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void **)(v0 + 264));
  return v0;
}

uint64_t sub_20A734A30()
{
  sub_20A7349A4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WelcomeViewAnimator()
{
  return self;
}

uint64_t type metadata accessor for WelcomeViewAnimator.Canceler()
{
  return self;
}

ValueMetadata *type metadata accessor for WelcomeViewAnimator.State()
{
  return &type metadata for WelcomeViewAnimator.State;
}

unsigned char *storeEnumTagSinglePayload for WelcomeViewKeyFrame(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A734B90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewKeyFrame()
{
  return &type metadata for WelcomeViewKeyFrame;
}

unint64_t sub_20A734BCC()
{
  unint64_t result = qword_26763D8F0;
  if (!qword_26763D8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D8F0);
  }
  return result;
}

unint64_t sub_20A734C24()
{
  unint64_t result = qword_26763D8F8;
  if (!qword_26763D8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D8F8);
  }
  return result;
}

void sub_20A734C78()
{
  if (!qword_26763D900)
  {
    sub_20A734CD4();
    unint64_t v0 = sub_20A8CD370();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D900);
    }
  }
}

unint64_t sub_20A734CD4()
{
  unint64_t result = qword_26AC716F0;
  if (!qword_26AC716F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC716F0);
  }
  return result;
}

uint64_t sub_20A734D28(uint64_t a1, uint64_t a2)
{
  sub_20A734C78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A734D8C()
{
  sub_20A734C78();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = sub_20A8CD2C0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_20A734EB0(uint64_t a1, uint64_t a2)
{
  sub_20A734C78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_20A734F14()
{
  sub_20A734C78();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_20A7300E4(v3, v4);
}

uint64_t sub_20A734F78(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A734FC0()
{
  if (!qword_26763D908)
  {
    sub_20A734C78();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D908);
    }
  }
}

void sub_20A735028(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if (a3)
  {
    id v11 = a3;
    id v12 = a11;
  }
}

void sub_20A73506C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if (a3)
  {
  }
}

uint64_t sub_20A7350B0()
{
  return sub_20A731920(*(void *)(v0 + 16), *(long long **)(v0 + 24));
}

uint64_t sub_20A7350CC()
{
  return sub_20A7321B4(v0);
}

uint64_t sub_20A7350E8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20A735110()
{
  return sub_20A732378();
}

uint64_t sub_20A735118()
{
  return sub_20A732580(v0);
}

uint64_t sub_20A735120()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20A735150()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A7351A0(uint64_t a1)
{
  sub_20A7325E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_20A7351C0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  id v3 = *(id *)(a1 + 16);
  id v4 = v2;
  return a1;
}

uint64_t sub_20A7351F8(uint64_t a1)
{
  return sub_20A732A14(a1, *(void *)(v1 + 16), (long long *)(v1 + 24));
}

uint64_t sub_20A735208()
{
  return sub_20A732B14(*(void *)(v0 + 16), (double *)(v0 + 24));
}

uint64_t sub_20A735218()
{
  return sub_20A733914(*(void *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_20A8ECE08, 4);
}

uint64_t sub_20A735244(uint64_t a1)
{
  id v2 = *(id *)(a1 + 184);
  return a1;
}

uint64_t sub_20A735274()
{
  return sub_20A733914(*(void *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_20A8ECE08, 2);
}

uint64_t sub_20A7352A4()
{
  return sub_20A733914(*(void *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_20A8ECDE8, 2);
}

void sub_20A7352D0()
{
  if (!qword_26763D920)
  {
    sub_20A7357C4(255, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
    unint64_t v0 = sub_20A8CE6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D920);
    }
  }
}

uint64_t sub_20A735350()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_20A73538C(uint64_t a1)
{
}

uint64_t sub_20A7353C4(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A7353F0(uint64_t a1, uint64_t a2)
{
  sub_20A7357C4(0, &qword_26763D930, (uint64_t)&type metadata for WelcomeModel, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A735478()
{
  return sub_20A733A4C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t objectdestroy_37Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A7354E0(uint64_t a1)
{
  return sub_20A733C00(a1, *(void *)(v1 + 16), (long long *)(v1 + 24));
}

unint64_t sub_20A735500()
{
  unint64_t result = qword_26763D938;
  if (!qword_26763D938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D938);
  }
  return result;
}

uint64_t objectdestroy_46Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A73559C()
{
  return sub_20A733914(*(void *)(v0 + 16), (CGFloat *)(v0 + 24), (uint64_t)&unk_20A8ECEC8, 2);
}

void sub_20A7355CC(uint64_t a1)
{
}

uint64_t sub_20A735604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A734110(a1, a2, *(double *)(v4 + 16), a3, a4, *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(const void **)(v4 + 48));
}

uint64_t sub_20A735614()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A73566C()
{
  return sub_20A7345A4(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), (const void *)(v0 + 56));
}

id sub_20A735684()
{
  return sub_20A7356E0(1);
}

uint64_t objectdestroy_95Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

id sub_20A7356D8()
{
  return sub_20A7356E0(2);
}

id sub_20A7356E0(char a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 72), *(void *)(v4 + 96));
  return sub_20A478404(a1, v3, (CGFloat *)(v1 + 32), *(char **)(v4 + 16));
}

uint64_t sub_20A73573C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A735774(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_20A73578C()
{
  return sub_20A658DA4(v0);
}

double sub_20A7357A8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_20A658DF4(a1).n128_u64[0];
  return result;
}

void sub_20A7357C4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_20A735810(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  long long v7 = (void *)a1[19];
  long long v8 = (void *)a1[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A7358E8(v2, v3);
  swift_bridgeObjectRetain();
  id v4 = v7;
  id v5 = v8;
  return a1;
}

uint64_t sub_20A7358E8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WelcomeViewAnimator.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A7359C8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewAnimator.Error()
{
  return &type metadata for WelcomeViewAnimator.Error;
}

unsigned char *_s8StocksUI18WelcomeViewVariantOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A735ACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewVariant()
{
  return &type metadata for WelcomeViewVariant;
}

unint64_t sub_20A735B08()
{
  unint64_t result = qword_26763D948;
  if (!qword_26763D948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D948);
  }
  return result;
}

unint64_t sub_20A735B60()
{
  unint64_t result = qword_26763D950;
  if (!qword_26763D950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D950);
  }
  return result;
}

uint64_t sub_20A735BD8()
{
  return sub_20A735120();
}

BOOL static SidebarAppearance.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SidebarAppearance.hash(into:)()
{
  return sub_20A8CF890();
}

uint64_t SidebarAppearance.hashValue.getter()
{
  return sub_20A8CF8C0();
}

unint64_t sub_20A735C90()
{
  unint64_t result = qword_26763D958;
  if (!qword_26763D958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D958);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SidebarAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A735DB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarAppearance()
{
  return &type metadata for SidebarAppearance;
}

uint64_t *sub_20A735DE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    sub_20A494D04();
    uint64_t v7 = *(int *)(v6 + 48);
    long long v8 = (char *)v4 + v7;
    long long v9 = (char *)a2 + v7;
    uint64_t v10 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    id v11 = (int *)type metadata accessor for StockViewModel();
    uint64_t v12 = v11[5];
    id v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v15 = sub_20A8C3E10();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v19 = v11[6];
    uint64_t v20 = &v8[v19];
    uint64_t v21 = &v9[v19];
    uint64_t v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v23 = *((void *)v22 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
    {
      sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v25 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v20, v21, v25);
      uint64_t v26 = v22[5];
      char v27 = &v20[v26];
      uint64_t v28 = &v21[v26];
      *(void *)char v27 = *(void *)v28;
      v27[8] = v28[8];
      uint64_t v29 = v22[6];
      uint64_t v30 = &v20[v29];
      unint64_t v31 = &v21[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      v20[v22[7]] = v21[v22[7]];
      uint64_t v32 = v22[8];
      uint64_t v33 = &v20[v32];
      uint64_t v34 = &v21[v32];
      uint64_t v35 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v36 = v11[7];
    char v62 = v8;
    unint64_t v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    *(void *)unint64_t v37 = *(void *)&v9[v36];
    v37[8] = v9[v36 + 8];
    *((void *)v37 + 2) = *(void *)&v9[v36 + 16];
    v37[24] = v9[v36 + 24];
    *((void *)v37 + 4) = *(void *)&v9[v36 + 32];
    v37[40] = v9[v36 + 40];
    uint64_t v39 = *(void *)&v9[v36 + 56];
    *((void *)v37 + 6) = *(void *)&v9[v36 + 48];
    *((void *)v37 + 7) = v39;
    uint64_t v40 = *(void *)&v9[v36 + 72];
    *((void *)v37 + 8) = *(void *)&v9[v36 + 64];
    *((void *)v37 + 9) = v40;
    uint64_t v41 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v42 = v41[9];
    uint64_t v43 = &v37[v42];
    unint64_t v44 = &v38[v42];
    char v60 = v9;
    uint64_t v61 = v11;
    uint64_t v45 = sub_20A8C2EB0();
    uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v46(v43, v44, v45);
    uint64_t v47 = v41[10];
    uint64_t v48 = &v37[v47];
    uint64_t v49 = &v38[v47];
    uint64_t v50 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    uint64_t v51 = v41[11];
    uint64_t v52 = &v37[v51];
    char v53 = &v38[v51];
    uint64_t v54 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v61[8];
    uint64_t v56 = &v62[v55];
    uint64_t v57 = &v60[v55];
    uint64_t v58 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    v62[v61[9]] = v60[v61[9]];
  }
  return v4;
}

uint64_t sub_20A736334(uint64_t a1)
{
  sub_20A494D04();
  uint64_t v3 = a1 + *(int *)(v2 + 48);
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  int v5 = (int *)type metadata accessor for StockViewModel();
  uint64_t v6 = v3 + v5[5];
  uint64_t v7 = sub_20A8C3E10();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = v3 + v5[6];
  uint64_t v10 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    uint64_t v11 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
    uint64_t v12 = v9 + *(int *)(v10 + 32);
    uint64_t v13 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = v3 + v5[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v16 = v14 + v15[9];
  uint64_t v17 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v14 + v15[10];
  uint64_t v19 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = v14 + v15[11];
  uint64_t v21 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v3 + v5[8];
  uint64_t v23 = sub_20A8C3410();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);

  return v24(v22, v23);
}

void *sub_20A736628(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20A494D04();
  uint64_t v5 = *(int *)(v4 + 48);
  char v59 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for StockViewModel();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = sub_20A8C3E10();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = v9[6];
  uint64_t v17 = &v6[v16];
  uint64_t v18 = &v7[v16];
  uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
    uint64_t v23 = v19[5];
    uint64_t v24 = &v17[v23];
    uint64_t v25 = &v18[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v19[6];
    char v27 = &v17[v26];
    uint64_t v28 = &v18[v26];
    *(void *)char v27 = *(void *)v28;
    v27[8] = v28[8];
    v17[v19[7]] = v18[v19[7]];
    uint64_t v29 = v19[8];
    uint64_t v30 = &v17[v29];
    unint64_t v31 = &v18[v29];
    uint64_t v32 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v33 = v9[7];
  uint64_t v34 = &v6[v33];
  uint64_t v58 = v9;
  uint64_t v35 = &v7[v33];
  *(void *)uint64_t v34 = *(void *)&v7[v33];
  v34[8] = v7[v33 + 8];
  *((void *)v34 + 2) = *(void *)&v7[v33 + 16];
  v34[24] = v7[v33 + 24];
  *((void *)v34 + 4) = *(void *)&v7[v33 + 32];
  v34[40] = v7[v33 + 40];
  uint64_t v36 = *(void *)&v7[v33 + 56];
  *((void *)v34 + 6) = *(void *)&v7[v33 + 48];
  *((void *)v34 + 7) = v36;
  uint64_t v37 = *(void *)&v7[v33 + 72];
  *((void *)v34 + 8) = *(void *)&v7[v33 + 64];
  *((void *)v34 + 9) = v37;
  uint64_t v38 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v39 = v38[9];
  uint64_t v40 = &v34[v39];
  uint64_t v41 = &v35[v39];
  uint64_t v42 = sub_20A8C2EB0();
  uint64_t v57 = v6;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43(v40, v41, v42);
  uint64_t v44 = v38[10];
  uint64_t v45 = &v34[v44];
  uint64_t v46 = &v35[v44];
  uint64_t v47 = sub_20A8C4030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  uint64_t v48 = v38[11];
  uint64_t v49 = &v34[v48];
  uint64_t v50 = &v35[v48];
  uint64_t v51 = sub_20A8C2990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  uint64_t v52 = v58[8];
  char v53 = &v57[v52];
  uint64_t v54 = &v7[v52];
  uint64_t v55 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
  v57[v58[9]] = v7[v58[9]];
  return v59;
}

void *sub_20A736B28(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20A494D04();
  uint64_t v5 = *(int *)(v4 + 48);
  uint64_t v76 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 24))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for StockViewModel();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = sub_20A8C3E10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v9[6];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  uint64_t v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v64 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 24))(v20, v21, v64);
      uint64_t v65 = v22[5];
      id v66 = &v20[v65];
      char v67 = &v21[v65];
      uint64_t v68 = *(void *)v67;
      v66[8] = v67[8];
      *(void *)id v66 = v68;
      uint64_t v69 = v22[6];
      uint64_t v70 = &v20[v69];
      uint64_t v71 = &v21[v69];
      LOBYTE(v68) = v71[8];
      *(void *)uint64_t v70 = *(void *)v71;
      v70[8] = v68;
      v20[v22[7]] = v21[v22[7]];
      uint64_t v72 = v22[8];
      uint64_t v73 = &v20[v72];
      uint64_t v74 = &v21[v72];
      uint64_t v75 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
      goto LABEL_13;
    }
    sub_20A6981E8((uint64_t)v20, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v20, v21, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v27 = sub_20A8CDCD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v20, v21, v27);
  uint64_t v28 = v22[5];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = v22[6];
  uint64_t v33 = &v20[v32];
  uint64_t v34 = &v21[v32];
  LOBYTE(v31) = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v31;
  v20[v22[7]] = v21[v22[7]];
  uint64_t v35 = v22[8];
  uint64_t v36 = &v20[v35];
  uint64_t v37 = &v21[v35];
  uint64_t v38 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  uint64_t v40 = v9[7];
  uint64_t v41 = &v6[v40];
  uint64_t v42 = &v7[v40];
  uint64_t v43 = *(void *)&v7[v40];
  v41[8] = v42[8];
  *(void *)uint64_t v41 = v43;
  uint64_t v44 = *((void *)v42 + 2);
  v41[24] = v42[24];
  *((void *)v41 + 2) = v44;
  uint64_t v45 = *((void *)v42 + 4);
  v41[40] = v42[40];
  *((void *)v41 + 4) = v45;
  *((void *)v41 + 6) = *((void *)v42 + 6);
  *((void *)v41 + 7) = *((void *)v42 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v41 + 8) = *((void *)v42 + 8);
  *((void *)v41 + 9) = *((void *)v42 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v47 = v46[9];
  uint64_t v48 = &v41[v47];
  uint64_t v49 = &v42[v47];
  uint64_t v50 = sub_20A8C2EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = v46[10];
  uint64_t v52 = &v41[v51];
  char v53 = &v42[v51];
  uint64_t v54 = sub_20A8C4030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = v46[11];
  uint64_t v56 = &v41[v55];
  uint64_t v57 = &v42[v55];
  uint64_t v58 = sub_20A8C2990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = v9[8];
  char v60 = &v6[v59];
  uint64_t v61 = &v7[v59];
  uint64_t v62 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  v6[v9[9]] = v7[v9[9]];
  return v76;
}

void *sub_20A737198(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20A494D04();
  uint64_t v5 = *(int *)(v4 + 48);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for StockViewModel();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = sub_20A8C3E10();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = v9[6];
  int v17 = &v6[v16];
  uint64_t v18 = &v7[v16];
  uint64_t v19 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v20 = *((void *)v19 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v17, v18, v22);
    uint64_t v23 = v19[5];
    uint64_t v24 = &v17[v23];
    int v25 = &v18[v23];
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v19[6];
    uint64_t v27 = &v17[v26];
    uint64_t v28 = &v18[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    v17[v19[7]] = v18[v19[7]];
    uint64_t v29 = v19[8];
    uint64_t v30 = &v17[v29];
    uint64_t v31 = &v18[v29];
    uint64_t v32 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    (*(void (**)(char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v33 = v9[7];
  uint64_t v34 = &v6[v33];
  uint64_t v35 = &v7[v33];
  *(void *)uint64_t v34 = *(void *)&v7[v33];
  v34[8] = v7[v33 + 8];
  *((void *)v34 + 2) = *(void *)&v7[v33 + 16];
  v34[24] = v7[v33 + 24];
  *((void *)v34 + 4) = *(void *)&v7[v33 + 32];
  v34[40] = v7[v33 + 40];
  long long v36 = *(_OWORD *)&v7[v33 + 64];
  *((_OWORD *)v34 + 3) = *(_OWORD *)&v7[v33 + 48];
  *((_OWORD *)v34 + 4) = v36;
  uint64_t v37 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v38 = v37[9];
  uint64_t v39 = &v34[v38];
  uint64_t v40 = &v35[v38];
  uint64_t v41 = sub_20A8C2EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  uint64_t v42 = v37[10];
  uint64_t v43 = &v34[v42];
  uint64_t v44 = &v35[v42];
  uint64_t v45 = sub_20A8C4030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = v37[11];
  uint64_t v47 = &v34[v46];
  uint64_t v48 = &v35[v46];
  uint64_t v49 = sub_20A8C2990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  uint64_t v50 = v9[8];
  uint64_t v51 = &v6[v50];
  uint64_t v52 = &v7[v50];
  uint64_t v53 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
  v6[v9[9]] = v7[v9[9]];
  return a1;
}

void *sub_20A73765C(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20A494D04();
  uint64_t v5 = *(int *)(v4 + 48);
  uint64_t v73 = a1;
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 40))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for StockViewModel();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v6[v10];
  uint64_t v12 = &v7[v10];
  uint64_t v13 = sub_20A8C3E10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v9[6];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  uint64_t v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v62 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v20, v21, v62);
      uint64_t v63 = v22[5];
      uint64_t v64 = &v20[v63];
      uint64_t v65 = &v21[v63];
      *(void *)uint64_t v64 = *(void *)v65;
      v64[8] = v65[8];
      uint64_t v66 = v22[6];
      char v67 = &v20[v66];
      uint64_t v68 = &v21[v66];
      *(void *)char v67 = *(void *)v68;
      void v67[8] = v68[8];
      v20[v22[7]] = v21[v22[7]];
      uint64_t v69 = v22[8];
      uint64_t v70 = &v20[v69];
      uint64_t v71 = &v21[v69];
      uint64_t v72 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 40))(v70, v71, v72);
      goto LABEL_13;
    }
    sub_20A6981E8((uint64_t)v20, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
    memcpy(v20, v21, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v27 = sub_20A8CDCD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v20, v21, v27);
  uint64_t v28 = v22[5];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  v29[8] = v30[8];
  uint64_t v31 = v22[6];
  uint64_t v32 = &v20[v31];
  uint64_t v33 = &v21[v31];
  *(void *)uint64_t v32 = *(void *)v33;
  v32[8] = v33[8];
  v20[v22[7]] = v21[v22[7]];
  uint64_t v34 = v22[8];
  uint64_t v35 = &v20[v34];
  long long v36 = &v21[v34];
  uint64_t v37 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  uint64_t v39 = v9[7];
  uint64_t v40 = &v6[v39];
  uint64_t v41 = &v7[v39];
  *(void *)uint64_t v40 = *(void *)&v7[v39];
  v40[8] = v7[v39 + 8];
  *((void *)v40 + 2) = *(void *)&v7[v39 + 16];
  unsigned char v40[24] = v7[v39 + 24];
  *((void *)v40 + 4) = *(void *)&v7[v39 + 32];
  v40[40] = v7[v39 + 40];
  uint64_t v42 = *(void *)&v7[v39 + 56];
  *((void *)v40 + 6) = *(void *)&v7[v39 + 48];
  *((void *)v40 + 7) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *((void *)v41 + 9);
  *((void *)v40 + 8) = *((void *)v41 + 8);
  *((void *)v40 + 9) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v45 = v44[9];
  uint64_t v46 = &v40[v45];
  uint64_t v47 = &v41[v45];
  uint64_t v48 = sub_20A8C2EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = v44[10];
  uint64_t v50 = &v40[v49];
  uint64_t v51 = &v41[v49];
  uint64_t v52 = sub_20A8C4030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
  uint64_t v53 = v44[11];
  uint64_t v54 = &v40[v53];
  uint64_t v55 = &v41[v53];
  uint64_t v56 = sub_20A8C2990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
  uint64_t v57 = v9[8];
  uint64_t v58 = &v6[v57];
  uint64_t v59 = &v7[v57];
  uint64_t v60 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 40))(v58, v59, v60);
  v6[v9[9]] = v7[v9[9]];
  return v73;
}

uint64_t sub_20A737CAC(uint64_t a1, uint64_t a2)
{
  sub_20A494D04();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A737D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A494D04();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t type metadata accessor for TickerModel()
{
  uint64_t result = qword_26AC6CBF8;
  if (!qword_26AC6CBF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A737DE0(uint64_t a1)
{
  uint64_t result = type metadata accessor for StockViewModel();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_20A737EA4()
{
  uint64_t v1 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TickerModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (void *)((char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A73834C(v0, (uint64_t)v6);
  uint64_t v7 = *v6;
  sub_20A494D04();
  sub_20A4C8874((uint64_t)v6 + *(int *)(v8 + 48), (uint64_t)v3);
  v12[1] = v7;
  uint64_t v13 = sub_20A8CF720();
  uint64_t v14 = v9;
  sub_20A8CE3D0();
  sub_20A8C3E20();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v13;
  sub_20A6981E8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  return v10;
}

uint64_t sub_20A737FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A738164(&qword_26AC6CBE0);

  return MEMORY[0x270F7A6F8](a1, a2, v4);
}

uint64_t sub_20A738060()
{
  return sub_20A738164(&qword_26AC6CBF0);
}

uint64_t sub_20A738094()
{
  return sub_20A738164(&qword_26AC6CBE8);
}

uint64_t sub_20A7380C8()
{
  return sub_20A738164(&qword_26AC6CBD8);
}

uint64_t sub_20A7380FC()
{
  return sub_20A738164(&qword_26AC6CBE0);
}

uint64_t sub_20A738130()
{
  return sub_20A738164(&qword_26AC6CBC8);
}

uint64_t sub_20A738164(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TickerModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A7381A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8CB860();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_20A738218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A738258(a1, MEMORY[0x263F7D3D8], MEMORY[0x263F7D3E0], a2);
}

uint64_t sub_20A738238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A738258(a1, MEMORY[0x263F7D3B0], MEMORY[0x263F7D3B8], a2);
}

uint64_t sub_20A738258@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t a4@<X8>)
{
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A73834C(v4, (uint64_t)v9);
  sub_20A494D04();
  uint64_t v11 = (uint64_t)&v9[*(int *)(v10 + 48)];
  uint64_t v12 = *a2;
  uint64_t v13 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a4, v12, v13);
  return sub_20A6981E8(v11, (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A73834C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TickerModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A7383B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - v8;
  sub_20A738530();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = (uint64_t *)((char *)v12 + *(int *)(v13 + 56));
  sub_20A73834C(a1, (uint64_t)v12);
  sub_20A73834C(a2, (uint64_t)v14);
  uint64_t v15 = *v12;
  sub_20A494D04();
  uint64_t v17 = *(int *)(v16 + 48);
  uint64_t v18 = (uint64_t)v12 + v17;
  uint64_t v19 = *v14;
  uint64_t v20 = (uint64_t)v14 + v17;
  sub_20A4C8874(v18, (uint64_t)v9);
  sub_20A4C8874(v20, (uint64_t)v6);
  if (v15 == v19) {
    char v21 = sub_20A619588(v9, v6);
  }
  else {
    char v21 = 0;
  }
  sub_20A6981E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A6981E8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  return v21 & 1;
}

void sub_20A738530()
{
  if (!qword_26AC67880)
  {
    type metadata accessor for TickerModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC67880);
    }
  }
}

uint64_t sub_20A738594(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A73A878(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5A89F0(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
  uint64_t v12 = *(int *)(v11 + 48);
  uint64_t v13 = sub_20A8C3F00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v25 = a1;
  uint64_t v23 = v15;
  v15(v10, a1, v13);
  *(void *)&v10[v12] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(void *)(v1 + 88);
  uint64_t v17 = sub_20A8C6D60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  uint64_t v29 = 0;
  memset(v28, 0, sizeof(v28));
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v10, v16, (uint64_t)v7, (uint64_t)v28, 0, 0, (uint64_t)v26);
  swift_release();
  sub_20A73AFFC((uint64_t)v26, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AFFC((uint64_t)v28, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AFFC((uint64_t)v7, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
  sub_20A73AA24((uint64_t)v10, type metadata accessor for StocksActivity);
  swift_release();
  uint64_t result = MEMORY[0x2105289B0](v1 + 24);
  if (result)
  {
    uint64_t v19 = *(void *)(result + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = (uint64_t)v24;
    v23(v24, v25, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 2, v13);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 88);
    swift_retain();
    v22(v21, ObjectType, v19);
    sub_20A73AA24(v21, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A7389B0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v61 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_20A8CA640();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v52 = (uint64_t *)((char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v51 - v12;
  sub_20A73A878(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v62 = (char *)&v51 - v14;
  uint64_t v15 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v22 = v21 - 8;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v25 = *a3;
  uint64_t v26 = sub_20A8C3F00();
  uint64_t v58 = *(void *)(v26 - 8);
  uint64_t v59 = v26;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  uint64_t v60 = a1;
  uint64_t v56 = v27;
  uint64_t v57 = v58 + 16;
  ((void (*)(char *, uint64_t))v27)(v24, a1);
  *(void *)&v24[*(int *)(v22 + 28)] = a2;
  if (v25)
  {
    uint64_t v62 = v24;
    __swift_project_boxed_opaque_existential_1(v4 + 12, v4[15]);
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_20A8C8DC0();
    if (!v28)
    {
      uint64_t v41 = (uint64_t)v62;
      return sub_20A73AA24(v41, type metadata accessor for StocksActivity.StockFeed.Series);
    }
    uint64_t v29 = (void *)v28;
    uint64_t v51 = v4[10];
    sub_20A73AEAC((uint64_t)v62, (uint64_t)v17, type metadata accessor for StocksActivity.StockFeed.Series);
    sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    *(void *)&v17[*(int *)(v30 + 48)] = 2;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    __swift_project_boxed_opaque_existential_1(v4 + 12, v4[15]);
    id v31 = v29;
    uint64_t v32 = sub_20A8C8DD0();
    if (v25 == 1)
    {

      uint64_t v35 = v52;
      *uint64_t v52 = v32;
      uint64_t v42 = (unsigned int *)MEMORY[0x263F7DCA0];
      uint64_t v24 = v62;
      uint64_t v33 = v55;
      uint64_t v34 = v54;
    }
    else
    {
      uint64_t v33 = v55;
      uint64_t v34 = v54;
      if (v25 == 2)
      {

        uint64_t v35 = v52;
        *uint64_t v52 = 0;
      }
      else
      {
        uint64_t v35 = v52;
        *uint64_t v52 = (uint64_t)v29;
      }
      v35[1] = v32;
      uint64_t v42 = (unsigned int *)MEMORY[0x263F7DCA8];
      uint64_t v24 = v62;
    }
    (*(void (**)(uint64_t *, void, uint64_t))(v34 + 104))(v35, *v42, v33);
    uint64_t v43 = v53;
    (*(void (**)(char *, uint64_t *, uint64_t))(v34 + 32))(v53, v35, v33);
    sub_20A8C8590();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v33);
    sub_20A73AA24((uint64_t)v17, type metadata accessor for StocksActivity);
  }
  else
  {
    sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    uint64_t v37 = *(int *)(v36 + 48);
    sub_20A73AEAC((uint64_t)v24, (uint64_t)v20, type metadata accessor for StocksActivity.StockFeed.Series);
    *(void *)&v20[v37] = 0;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v4[11];
    uint64_t v39 = sub_20A8C6D60();
    uint64_t v40 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v62, 1, 1, v39);
    uint64_t v66 = 0;
    memset(v65, 0, sizeof(v65));
    uint64_t v64 = 0;
    memset(v63, 0, sizeof(v63));
    swift_bridgeObjectRetain();
    swift_retain();
    sub_20A5BFAAC((uint64_t)v20, v38, v40, (uint64_t)v65, 0, 0, (uint64_t)v63);
    swift_release();
    sub_20A73AFFC((uint64_t)v63, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
    sub_20A73AFFC((uint64_t)v65, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
    sub_20A73AFFC(v40, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
    sub_20A73AA24((uint64_t)v20, type metadata accessor for StocksActivity);
    swift_release();
  }
  uint64_t v44 = MEMORY[0x2105289B0](v4 + 3);
  if (v44)
  {
    uint64_t v45 = *(void *)(v44 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v47 = (uint64_t)v61;
    uint64_t v48 = v59;
    v56(v61, v60, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v47, 0, 2, v48);
    uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 88);
    swift_retain();
    v49(v47, ObjectType, v45);
    sub_20A73AA24(v47, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    swift_unknownObjectRelease();
    sub_20A73AA24((uint64_t)v24, type metadata accessor for StocksActivity.StockFeed.Series);
    return swift_release();
  }
  uint64_t v41 = (uint64_t)v24;
  return sub_20A73AA24(v41, type metadata accessor for StocksActivity.StockFeed.Series);
}

uint64_t sub_20A7391A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_20A8C3F00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  *(void *)&v11[*(int *)(v9 + 28)] = a2;
  uint64_t v13 = *(void *)(v2 + 80);
  sub_20A5A89F0(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  uint64_t v15 = *(int *)(v14 + 48);
  sub_20A73AEAC((uint64_t)v11, (uint64_t)v7, type metadata accessor for StocksActivity.StockFeed.Series);
  *(void *)&v7[v15] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(void *)(v2 + 88);
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  v23[4] = v13;
  v23[3] = sub_20A8C4990();
  v23[0] = v16;
  uint64_t v17 = MEMORY[0x263F58868];
  sub_20A73AF88((uint64_t)v24, (uint64_t)v22, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A491224);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v16;
  sub_20A73AF14((uint64_t)v22, v18 + 24, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, v17, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A491224);
  sub_20A491334();
  sub_20A73A7E8((unint64_t *)&qword_26AC69E50, 255, (void (*)(uint64_t))sub_20A491334);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v19 = sub_20A8CBC70();
  swift_release();
  sub_20A73AA24((uint64_t)v23, (uint64_t (*)(void))sub_20A42F348);
  sub_20A73AFFC((uint64_t)v24, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AA24((uint64_t)v7, type metadata accessor for StocksActivity);
  swift_release();
  sub_20A73AA24((uint64_t)v11, type metadata accessor for StocksActivity.StockFeed.Series);
  return v19;
}

uint64_t sub_20A739538()
{
  uint64_t v1 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A73A878(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v21[-v5];
  uint64_t v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A600FA0();
  uint64_t v11 = &v9[*(int *)(v10 + 48)];
  type metadata accessor for ForYouSectionDescriptor();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *MEMORY[0x263F7DB50];
  uint64_t v13 = sub_20A8CA180();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(void *)(v0 + 88);
  uint64_t v15 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  uint64_t v25 = 0;
  memset(v24, 0, sizeof(v24));
  uint64_t v23 = 0;
  memset(v22, 0, sizeof(v22));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v9, v14, (uint64_t)v6, (uint64_t)v24, 0, 0, (uint64_t)v22);
  swift_release();
  sub_20A73AFFC((uint64_t)v22, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AFFC((uint64_t)v24, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AFFC((uint64_t)v6, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
  sub_20A73AA24((uint64_t)v9, type metadata accessor for StocksActivity);
  swift_release();
  uint64_t result = MEMORY[0x2105289B0](v0 + 24);
  if (result)
  {
    uint64_t v17 = *(void *)(result + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = sub_20A8C3F00();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 2, v19);
    uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 88);
    swift_retain();
    v20(v3, ObjectType, v17);
    sub_20A73AA24((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A739914(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC220();
  uint64_t v27 = *(void (***)(char *, uint64_t))(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CC250();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *a1;
  id v15 = objc_msgSend(*a1, sel_view, v11);
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = objc_msgSend(v15, sel_superview);

    if (v17)
    {
      id v18 = objc_msgSend(v14, sel_searchBar);
      objc_msgSend(v18, sel_becomeFirstResponder);

      id v19 = objc_msgSend(v14, sel_searchBar);
      if (a3) {
        uint64_t v20 = sub_20A8CE240();
      }
      else {
        uint64_t v20 = 0;
      }
      uint64_t v27 = (void (**)(char *, uint64_t))v20;
      objc_msgSend(v19, sel_setText_);

      uint64_t v25 = v27;
    }
    else
    {
      sub_20A44D17C();
      uint64_t v21 = (void *)sub_20A8CEBE0();
      uint64_t v22 = (void *)swift_allocObject();
      _OWORD v22[2] = v14;
      void v22[3] = a2;
      v22[4] = a3;
      aBlock[4] = sub_20A73AAC4;
      aBlock[5] = v22;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4713FC;
      aBlock[3] = &block_descriptor_35;
      uint64_t v23 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      id v24 = v14;
      swift_release();
      sub_20A8CC240();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_20A73A7E8(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
      sub_20A73A878(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_20A4F6C4C();
      sub_20A8CF290();
      MEMORY[0x210526F10](0, v13, v8, v23);
      _Block_release(v23);

      v27[1](v8, v6);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_20A739D00(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_msgSend(a1, sel_searchBar);
  objc_msgSend(v5, sel_becomeFirstResponder);

  id v6 = objc_msgSend(a1, sel_searchBar);
  if (a3) {
    uint64_t v7 = sub_20A8CE240();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  objc_msgSend(v6, sel_setText_);
}

uint64_t sub_20A739DC8(uint64_t a1)
{
  sub_20A73A878(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = &v15[-v4];
  uint64_t v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v6);
  id v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A4B2908();
  uint64_t v10 = *(int *)(v9 + 48);
  uint64_t v11 = sub_20A8C3F00();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  *(void *)&v8[v10] = a1;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v13 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  uint64_t v19 = 0;
  memset(v18, 0, sizeof(v18));
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  swift_retain();
  swift_retain();
  sub_20A5BFAAC((uint64_t)v8, v12, (uint64_t)v5, (uint64_t)v18, 0, 0, (uint64_t)v16);
  swift_release();
  sub_20A73AFFC((uint64_t)v16, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AFFC((uint64_t)v18, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A73AFFC((uint64_t)v5, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
  sub_20A73AA24((uint64_t)v8, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_20A73A098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v31 - v12;
  uint64_t v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (void *)((char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A73A8DC(0, (unint64_t *)&qword_26AC6AAD8, MEMORY[0x263F7E030]);
  sub_20A8CB4B0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A600FA0();
      uint64_t v22 = (char *)v16 + *(int *)(v21 + 48);
      sub_20A739538();
      uint64_t v23 = *MEMORY[0x263F7DBA8];
      uint64_t v24 = sub_20A8CA260();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v32, v23, v24);
      uint64_t v25 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v22, v25);
      return sub_20A73AA24((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
    case 2u:
      sub_20A73A9BC((uint64_t)v16, (uint64_t)v13, type metadata accessor for StocksActivity.StockFeed);
      if (qword_26AC69360 != -1) {
        swift_once();
      }
      char v33 = 3;
      swift_retain();
      sub_20A8C5AD0();
      swift_release();
      sub_20A73AEAC((uint64_t)v13, (uint64_t)v10, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A73A9BC((uint64_t)v10, (uint64_t)v3, type metadata accessor for StocksActivity.StockFeed.Series);
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v3, v4);
        sub_20A73AA24((uint64_t)v3, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      }
      sub_20A738594((uint64_t)v7);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      sub_20A73AA24((uint64_t)v13, type metadata accessor for StocksActivity.StockFeed);
      goto LABEL_20;
    case 3u:
      unint64_t v27 = *v16;
      unint64_t v26 = v16[1];
      uint64_t v28 = MEMORY[0x2105289B0](v31[1] + 16);
      if (v28)
      {
        uint64_t v29 = (void *)v28;
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v27;
        *(void *)(v30 + 24) = v26;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_20A8C6380();
        swift_bridgeObjectRelease();

        swift_release();
        swift_release();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
LABEL_20:
      uint64_t v17 = (unsigned int *)MEMORY[0x263F7DBA8];
      goto LABEL_4;
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 0xAu:
    case 0xCu:
      sub_20A73AA24((uint64_t)v16, type metadata accessor for StocksActivity);
      goto LABEL_3;
    case 8u:
      sub_20A485620(*v16);
      goto LABEL_3;
    case 9u:
      sub_20A459CA4(*v16);
      goto LABEL_3;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      sub_20A73AFFC((uint64_t)v16, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
      goto LABEL_3;
    case 0xDu:
      goto LABEL_3;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_3:
      uint64_t v17 = (unsigned int *)MEMORY[0x263F7DBB8];
LABEL_4:
      uint64_t v18 = *v17;
      uint64_t v19 = sub_20A8CA260();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v32, v18, v19);
  }
}

uint64_t sub_20A73A6BC()
{
  swift_unknownObjectWeakDestroy();
  sub_20A4380C4(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockListRouter()
{
  return self;
}

uint64_t sub_20A73A740()
{
  return sub_20A73A7E8((unint64_t *)&unk_26AC6C730, 255, (void (*)(uint64_t))type metadata accessor for StocksActivity);
}

uint64_t sub_20A73A790(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A73A7E8(&qword_26AC6E820, a2, (void (*)(uint64_t))type metadata accessor for StockListRouter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A73A7E8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A73A830()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }

  return swift_deallocObject();
}

void sub_20A73A878(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A73A8DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StocksActivity(255);
    uint64_t v7 = sub_20A73A7E8((unint64_t *)&unk_26AC6C730, 255, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A73A97C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_20A73A9B4(id *a1)
{
  sub_20A739914(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_20A73A9BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A73AA24(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A73AA84()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_20A73AAC4()
{
  sub_20A739D00(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_20A73AAD0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2530();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockListRouteModel();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x263F06EA8];
  uint64_t v10 = MEMORY[0x263F8D8F0];
  sub_20A73A878(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v21 - v15;
  sub_20A73AEAC(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListRouteModel);
  sub_20A73AF14((uint64_t)v8, (uint64_t)v16, (uint64_t)&unk_26AC68C70, v9, v10, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A73A878);
  sub_20A73AF88((uint64_t)v16, (uint64_t)v13, (uint64_t)&unk_26AC68C70, v9, v10, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A73A878);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2) == 1)
  {
    sub_20A73AFFC((uint64_t)v16, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v13, v2);
    id v17 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v18 = (void *)sub_20A8C24D0();
    sub_20A4CFA44(MEMORY[0x263F8EE78]);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_20A73A7E8(&qword_26763B630, 255, type metadata accessor for OpenExternalURLOptionsKey);
    uint64_t v19 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_openURL_options_completionHandler_, v18, v19, 0);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v13 = v16;
  }
  return sub_20A73AFFC((uint64_t)v13, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73A878);
}

uint64_t sub_20A73AEAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A73AF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_20A73AF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

uint64_t sub_20A73AFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A73B05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v36 = a2;
  sub_20A73B574();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v37 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CD1F0();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CD3A0();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v8);
  char v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8CD640();
  uint64_t v10 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D7CAC();
  uint64_t v34 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C7DF0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A43F884();
  sub_20A8CF1A0();
  sub_20A8C7E00();
  uint64_t v20 = sub_20A8C7DD0();
  os_log_type_t v21 = sub_20A8CEA00();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = v7;
    uint64_t v23 = v22;
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl(&dword_20A414000, v20, v21, "Observed audio finished playing, closing player", v22, 2u);
    uint64_t v24 = v23;
    uint64_t v7 = v28;
    MEMORY[0x210528850](v24, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v30, *MEMORY[0x263F59CC0], v29);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v33, *MEMORY[0x263F59C00], v32);
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v7, *MEMORY[0x263F59B78], v5);
  long long v39 = 0u;
  long long v40 = 0u;
  sub_20A8CD540();
  swift_getObjectType();
  sub_20A8CB6F0();
  uint64_t v25 = (uint64_t)v37;
  uint64_t v26 = v34;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v37, v15, v34);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v26);
  sub_20A8C8D40();
  swift_release();
  sub_20A73B5CC(v25);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v26);
}

uint64_t type metadata accessor for AudioTrackCompletionHandler()
{
  return self;
}

void sub_20A73B574()
{
  if (!qword_26763D960)
  {
    sub_20A4D7CAC();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763D960);
    }
  }
}

uint64_t sub_20A73B5CC(uint64_t a1)
{
  sub_20A73B574();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_20A73B628(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI12MastheadView_appNameLabel;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI12MastheadView_dateLabel;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v20.receiver = v12;
  v20.super_class = ObjectType;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC8StocksUI12MastheadView_appNameLabel];
  uint64_t v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC8StocksUI12MastheadView_dateLabel]);
  uint64_t v17 = *MEMORY[0x263F83268];
  id v18 = v15;
  objc_msgSend(v18, sel_setAccessibilityTraits_, v17);

  return v16;
}

uint64_t type metadata accessor for MastheadView()
{
  return self;
}

__n128 sub_20A73B8FC@<Q0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  CGFloat height = COERCE_DOUBLE(sub_20A8C43D0());
  CGFloat v153 = *(double *)(*(void *)&height - 8);
  MEMORY[0x270FA5388](*(void *)&height);
  *(void *)&CGFloat v152 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A73C9F4(0, &qword_26AC68CD0, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  *(void *)&CGFloat v151 = (char *)&v138 - v8;
  CGFloat v150 = COERCE_DOUBLE(sub_20A8C2970());
  uint64_t v147 = *(void *)(*(void *)&v150 - 8);
  MEMORY[0x270FA5388](*(void *)&v150);
  v146 = (char *)&v138 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_20A8C2990();
  uint64_t v144 = *(void *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  v143 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_20A8C28C0();
  uint64_t v11 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  v139 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C2800();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = *a1;
  double v18 = a1[1];
  double v19 = a1[3];
  v158 = a1;
  double v20 = a1[5];
  CGFloat v155 = v17;
  CGFloat v156 = v19;
  double v21 = v17 - v19;
  swift_bridgeObjectRetain();
  id v157 = sub_20A5D1C28();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  if (qword_26AC80B88 != -1) {
    swift_once();
  }
  double v22 = v21 - v20;
  uint64_t v23 = (void *)qword_26AC80B80;
  double v138 = v20;
  if (qword_26AC80B80)
  {
    sub_20A8C27F0();
    uint64_t v24 = (void *)sub_20A8C2730();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    id v25 = objc_msgSend(v23, sel_stringFromDate_, v24);

    uint64_t v26 = sub_20A8CE280();
  }
  else
  {
    uint64_t v26 = 0;
  }
  id v27 = sub_20A5D18E8(v26);
  swift_bridgeObjectRelease();
  id v28 = v157;
  objc_msgSend(v157, sel_boundingRectWithSize_options_context_, 1, 0, v21 - v20, v18);
  double v30 = v29;
  double v32 = v31;
  double v34 = v33;
  double v36 = v35;
  unsigned int v37 = objc_msgSend(v28, sel_su_containsExcessiveLineHeightCharacter);
  uint64_t v38 = (double *)MEMORY[0x263F834E8];
  if (v37)
  {
    objc_msgSend(*((id *)v158 + 6), sel_displayScale);
    objc_msgSend(v28, sel_su_languageAwareOutsetsAtScale_);
    double v40 = v39;
    double v42 = v41;
    double v44 = v43;
    double v46 = v45;
  }
  else
  {
    double v40 = *MEMORY[0x263F834E8];
    double v42 = *(double *)(MEMORY[0x263F834E8] + 8);
    double v44 = *(double *)(MEMORY[0x263F834E8] + 16);
    double v46 = *(double *)(MEMORY[0x263F834E8] + 24);
  }
  double v142 = UIEdgeInsetsInsetRect_0(v30, v32, v34, v36, v40, v42, v44, v46);
  CGFloat v141 = v47;
  double v140 = v22;
  double v149 = v18;
  objc_msgSend(v27, sel_boundingRectWithSize_options_context_, 0, 0, v22, v18);
  double v49 = v48;
  double v51 = v50;
  double v53 = v52;
  double v55 = v54;
  if (objc_msgSend(v27, sel_su_containsExcessiveLineHeightCharacter))
  {
    objc_msgSend(*((id *)v158 + 6), sel_displayScale);
    objc_msgSend(v27, sel_su_languageAwareOutsetsAtScale_);
    double v57 = v56;
    double v59 = v58;
    double v61 = v60;
    double v63 = v62;
  }
  else
  {
    double v57 = *v38;
    double v59 = v38[1];
    double v61 = v38[2];
    double v63 = v38[3];
  }
  double v64 = UIEdgeInsetsInsetRect_0(v49, v51, v53, v55, v57, v59, v61, v63);
  CGFloat v66 = v65;
  char v67 = (void *)sub_20A8CEC60();
  objc_msgSend(v67, sel_ascender);
  double v69 = v68;

  uint64_t v70 = (void *)sub_20A8CEC60();
  objc_msgSend(v70, sel_capHeight);
  double v72 = v71;

  sub_20A73C9F4(0, &qword_26763D978, MEMORY[0x263F8E0F8]);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_20A8D5CB0;
  sub_20A8C28B0();
  sub_20A8C28B0();
  sub_20A8C28B0();
  uint64_t v74 = sub_20A7BB730(v73);
  swift_setDeallocating();
  uint64_t v75 = v148;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v76 = v143;
  sub_20A8C2940();
  uint64_t v77 = v146;
  sub_20A8C2980();
  (*(void (**)(char *, uint64_t))(v144 + 8))(v76, v145);
  uint64_t v78 = *(void *)&v151;
  sub_20A8C2950();
  (*(void (**)(char *, CGFloat))(v147 + 8))(v77, COERCE_CGFLOAT(*(void *)&v150));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v78, 1, v75) == 1)
  {
    swift_bridgeObjectRelease();
    sub_20A73CA54(v78);
    double v79 = 0.0;
  }
  else
  {
    double v80 = v69 - v72;
    uint64_t v81 = (uint64_t)v139;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v139, v78, v75);
    char v82 = sub_20A444828(v81, v74);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v81, v75);
    if (v82) {
      double v79 = v57 - v80;
    }
    else {
      double v79 = 0.0;
    }
  }
  sub_20A8CE980();
  double v84 = fmax(-v83, 5.0);
  double v85 = self;
  sub_20A8CD010();
  CGFloat v86 = v153;
  CGFloat v87 = v152;
  CGFloat v88 = height;
  (*(void (**)(CGFloat, void, CGFloat))(*(void *)&v153 + 104))(COERCE_CGFLOAT(*(void *)&v152), *MEMORY[0x263F7D1A8], COERCE_CGFLOAT(*(void *)&height));
  sub_20A8CD000();
  double v90 = v89;
  (*(void (**)(CGFloat, CGFloat))(*(void *)&v86 + 8))(COERCE_CGFLOAT(*(void *)&v87), COERCE_CGFLOAT(*(void *)&v88));
  id v91 = objc_msgSend(v85, sel_systemFontOfSize_weight_, v90, *MEMORY[0x263F81800]);
  CGFloat v92 = (void *)sub_20A8CEE40();

  objc_msgSend(v92, sel_descender);
  double v94 = v93;

  double v95 = v84 - v94;
  uint64_t v96 = (void *)sub_20A8CEC60();
  objc_msgSend(v96, sel_ascender);
  double v98 = v97;

  double v99 = v149;
  v170.origin.CGFloat y = v149 - v98 - v95;
  CGFloat v100 = v156;
  v170.origin.CGFloat x = v156;
  v170.size.CGFloat width = v64;
  v170.size.CGFloat height = v66;
  CGRect v171 = CGRectIntegral(v170);
  CGFloat x = v171.origin.x;
  CGFloat y = v171.origin.y;
  CGFloat width = v171.size.width;
  CGFloat height = v171.size.height;
  CGFloat MinY = CGRectGetMinY(v171);
  v172.size.CGFloat height = v141;
  v172.origin.CGFloat y = MinY - v79 - v141;
  v172.origin.CGFloat x = v100;
  v172.size.CGFloat width = v142;
  CGRect v173 = CGRectIntegral(v172);
  CGFloat v153 = v173.origin.x;
  CGFloat v152 = v173.origin.y;
  CGFloat v151 = v173.size.width;
  CGFloat v150 = v173.size.height;
  swift_retain();
  char v105 = sub_20A8051B8();
  id v106 = v157;
  if (v105)
  {
    if (qword_26AC82DB0 != -1) {
      swift_once();
    }
    type metadata accessor for ForYouMastheadModel();
    sub_20A73CB28();
    sub_20A8C41C0();
    swift_release();
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    uint64_t v110 = 0;
    if (v159)
    {
      sub_20A8C7960();
      sub_20A8C7930();
      CGFloat v112 = v111;
      double v114 = v113;
      CGFloat v115 = v155 - v111 - v138;
      v174.origin.CGFloat x = x;
      v174.origin.CGFloat y = y;
      v174.size.CGFloat width = width;
      v174.size.CGFloat height = height;
      double MaxY = CGRectGetMaxY(v174);
      v175.origin.CGFloat x = v153;
      v175.origin.CGFloat y = v152;
      v175.size.CGFloat width = v151;
      v175.size.CGFloat height = v150;
      v176.origin.CGFloat y = (MaxY + CGRectGetMinY(v175)) * 0.5 - v114 * 0.5;
      v176.origin.CGFloat x = v115;
      v176.size.CGFloat width = v112;
      v176.size.CGFloat height = v114;
      *(CGRect *)&uint64_t v107 = CGRectIntegral(v176);
    }
  }
  else
  {
    swift_release();
    uint64_t v107 = 0;
    uint64_t v108 = 0;
    uint64_t v109 = 0;
    uint64_t v110 = 0;
  }
  uint64_t v144 = v110;
  uint64_t v145 = v109;
  v146 = v108;
  uint64_t v147 = v107;
  uint64_t v148 = *(void *)&width;
  swift_retain();
  char v117 = sub_20A8051B8();
  swift_release();
  CGFloat v118 = 0.0;
  double v119 = 0.0;
  if ((v117 & 1) == 0)
  {
    objc_msgSend(*((id *)v158 + 6), sel_displayScale);
    CGFloat v118 = v140;
    double v119 = 1.0 / v120;
  }
  CGFloat v121 = v99 + -2.0;
  CGFloat v122 = v156;
  v177.origin.CGFloat x = v156;
  v177.origin.CGFloat y = v121;
  v177.size.CGFloat width = v118;
  v177.size.CGFloat height = v119;
  v178.origin.CGFloat y = CGRectGetMaxY(v177);
  v178.size.CGFloat width = 0.0;
  v178.size.CGFloat height = 0.0;
  v178.origin.CGFloat x = v155;
  CGRectIntegral(v178);
  double v124 = MEMORY[0x270FA5388](v123);
  *((void *)&v138 - 22) = v158;
  CGFloat v125 = v152;
  *(&v138 - 21) = v153;
  *(&v138 - 20) = v125;
  CGFloat v126 = v150;
  *(&v138 - 19) = v151;
  *(&v138 - 18) = v126;
  *(&v138 - 17) = x;
  *(&v138 - 16) = y;
  CGFloat v127 = height;
  *((void *)&v138 - 15) = v148;
  *(&v138 - 14) = v127;
  *(&v138 - 13) = v122;
  *(&v138 - 12) = v121;
  *(&v138 - 11) = v118;
  *(&v138 - 10) = v119;
  v128 = v146;
  *((void *)&v138 - 9) = v147;
  *((void *)&v138 - 8) = v128;
  uint64_t v129 = v144;
  *((void *)&v138 - 7) = v145;
  *((void *)&v138 - 6) = v129;
  *(&v138 - 5) = v124;
  *((void *)&v138 - 4) = v130;
  *((void *)&v138 - 3) = v131;
  *((void *)&v138 - 2) = v132;
  sub_20A8C9690();

  long long v133 = v168;
  *(_OWORD *)(a2 + 128) = v167;
  *(_OWORD *)(a2 + 144) = v133;
  *(_OWORD *)(a2 + 160) = v169;
  long long v134 = v164;
  *(_OWORD *)(a2 + 64) = v163;
  *(_OWORD *)(a2 + 80) = v134;
  long long v135 = v166;
  *(_OWORD *)(a2 + 96) = v165;
  *(_OWORD *)(a2 + 112) = v135;
  long long v136 = v160;
  *(_OWORD *)a2 = v159;
  *(_OWORD *)(a2 + 16) = v136;
  __n128 result = v162;
  *(_OWORD *)(a2 + 32) = v161;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

double sub_20A73C63C@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>, long long a3, uint64_t a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  double v67 = a5;
  uint64_t v66 = a4;
  long long v65 = a3;
  uint64_t v64 = a10;
  uint64_t v63 = a11;
  uint64_t v62 = a12;
  uint64_t v61 = a13;
  uint64_t v58 = a6;
  uint64_t v57 = a7;
  uint64_t v56 = a8;
  uint64_t v55 = a9;
  uint64_t v15 = sub_20A8C8180();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  double v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = *a1;
  uint64_t v59 = a1[1];
  uint64_t v19 = *MEMORY[0x263F7D268];
  double v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v20(v18, v19, v15);
  sub_20A8C8170();
  uint64_t v54 = v21;
  uint64_t v53 = v22;
  uint64_t v52 = v23;
  uint64_t v51 = v24;
  id v25 = *(void (**)(char *, uint64_t))(v16 + 8);
  v25(v18, v15);
  v20(v18, v19, v15);
  sub_20A8C8170();
  uint64_t v50 = v26;
  uint64_t v49 = v27;
  uint64_t v48 = v28;
  uint64_t v47 = v29;
  v25(v18, v15);
  v20(v18, v19, v15);
  sub_20A8C8170();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  v25(v18, v15);
  v20(v18, v19, v15);
  sub_20A8C8170();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  v25(v18, v15);
  *(void *)a2 = v60;
  *(void *)(a2 + 8) = v59;
  *(void *)(a2 + 16) = v54;
  *(void *)(a2 + 24) = v53;
  *(void *)(a2 + 32) = v52;
  *(void *)(a2 + 40) = v51;
  *(void *)(a2 + 48) = v50;
  *(void *)(a2 + 56) = v49;
  *(void *)(a2 + 64) = v48;
  *(void *)(a2 + 72) = v47;
  *(_OWORD *)(a2 + 80) = v65;
  *(void *)(a2 + 96) = v66;
  double result = v67;
  *(double *)(a2 + 104) = v67;
  *(void *)(a2 + 112) = v31;
  *(void *)(a2 + 120) = v33;
  *(void *)(a2 + 128) = v35;
  *(void *)(a2 + 136) = v37;
  *(void *)(a2 + 144) = v39;
  *(void *)(a2 + 152) = v41;
  *(void *)(a2 + 160) = v43;
  *(void *)(a2 + 168) = v45;
  return result;
}

uint64_t type metadata accessor for ForYouFeedMastheadViewLayoutAttributesFactory()
{
  return self;
}

double UIEdgeInsetsInsetRect_0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  return a3 - (a6 + a8);
}

void sub_20A73C9F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_20A8C28C0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A73CA54(uint64_t a1)
{
  sub_20A73C9F4(0, &qword_26AC68CD0, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_20A73CACC@<D0>(uint64_t a1@<X8>)
{
  return sub_20A73C63C(*(uint64_t **)(v1 + 16), a1, *(_OWORD *)(v1 + 88), *(void *)(v1 + 104), *(double *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144), *(void *)(v1 + 152), *(void *)(v1 + 160), *(void *)(v1 + 168), *(void *)(v1 + 176));
}

unint64_t sub_20A73CB28()
{
  unint64_t result = qword_26763A540;
  if (!qword_26763A540)
  {
    type metadata accessor for ForYouMastheadModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763A540);
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedFailedData()
{
  return &type metadata for ForYouFeedFailedData;
}

void *sub_20A73CB90(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v46 = *a2;
    *a1 = *a2;
    a1 = (void *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8CA9F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (_OWORD *)((char *)a1 + v8);
    uint64_t v11 = (_OWORD *)((char *)a2 + v8);
    long long v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (_OWORD *)((char *)a1 + v9);
    uint64_t v14 = (_OWORD *)((char *)a2 + v9);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    double v18 = (_OWORD *)((char *)a1 + v16);
    uint64_t v19 = (_OWORD *)((char *)a2 + v16);
    long long v20 = v19[1];
    *double v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (_OWORD *)((char *)a1 + v17);
    uint64_t v22 = (_OWORD *)((char *)a2 + v17);
    long long v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[9];
    uint64_t v25 = a3[10];
    uint64_t v26 = (_OWORD *)((char *)a1 + v24);
    uint64_t v27 = (_OWORD *)((char *)a2 + v24);
    long long v28 = v27[1];
    _OWORD *v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (_OWORD *)((char *)a1 + v25);
    uint64_t v30 = (_OWORD *)((char *)a2 + v25);
    long long v31 = v30[1];
    _OWORD *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[11];
    uint64_t v33 = a3[12];
    long long v34 = *(_OWORD *)((char *)a2 + v32);
    long long v35 = *(_OWORD *)((char *)a2 + v32 + 16);
    uint64_t v36 = (_OWORD *)((char *)a1 + v32);
    _OWORD *v36 = v34;
    v36[1] = v35;
    memcpy((char *)a1 + v33, (char *)a2 + v33, 0x1A1uLL);
    uint64_t v37 = a3[13];
    uint64_t v38 = a3[14];
    long long v39 = *(_OWORD *)((char *)a2 + v37);
    long long v40 = *(_OWORD *)((char *)a2 + v37 + 16);
    uint64_t v41 = (_OWORD *)((char *)a1 + v37);
    _OWORD *v41 = v39;
    v41[1] = v40;
    uint64_t v42 = (_OWORD *)((char *)a1 + v38);
    uint64_t v43 = (_OWORD *)((char *)a2 + v38);
    long long v44 = v43[1];
    _OWORD *v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = a3[16];
    *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *(void *)((char *)a1 + v45) = *(void *)((char *)a2 + v45);
  }
  return a1;
}

uint64_t sub_20A73CD18(uint64_t a1)
{
  uint64_t v2 = sub_20A8CA9F0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A73CD7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8CA9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  double v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  long long v20 = (_OWORD *)(a1 + v16);
  uint64_t v21 = (_OWORD *)(a2 + v16);
  long long v22 = v21[1];
  *long long v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (_OWORD *)(a1 + v23);
  uint64_t v26 = (_OWORD *)(a2 + v23);
  long long v27 = v26[1];
  _OWORD *v25 = *v26;
  v25[1] = v27;
  long long v28 = (_OWORD *)(a1 + v24);
  uint64_t v29 = (_OWORD *)(a2 + v24);
  long long v30 = v29[1];
  _OWORD *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a3[12];
  long long v33 = *(_OWORD *)(a2 + v31);
  long long v34 = *(_OWORD *)(a2 + v31 + 16);
  long long v35 = (_OWORD *)(a1 + v31);
  *long long v35 = v33;
  v35[1] = v34;
  memcpy((void *)(a1 + v32), (const void *)(a2 + v32), 0x1A1uLL);
  uint64_t v36 = a3[13];
  uint64_t v37 = a3[14];
  long long v38 = *(_OWORD *)(a2 + v36);
  long long v39 = *(_OWORD *)(a2 + v36 + 16);
  long long v40 = (_OWORD *)(a1 + v36);
  _OWORD *v40 = v38;
  v40[1] = v39;
  uint64_t v41 = (_OWORD *)(a1 + v37);
  uint64_t v42 = (_OWORD *)(a2 + v37);
  long long v43 = v42[1];
  _OWORD *v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v44) = *(void *)(a2 + v44);
  return a1;
}

uint64_t sub_20A73CEB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8CA9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  uint64_t v10 = a3[6];
  long long v11 = (void *)(a1 + v10);
  long long v12 = (void *)(a2 + v10);
  *long long v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  uint64_t v13 = a3[7];
  long long v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *long long v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v14[3] = v15[3];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  double v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  uint64_t v19 = a3[9];
  long long v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  *long long v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  v20[3] = v21[3];
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  void *v23 = *v24;
  v23[1] = v24[1];
  id v23[2] = v24[2];
  v23[3] = v24[3];
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v25);
  long long v27 = (void *)(a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  _OWORD v26[2] = v27[2];
  v26[3] = v27[3];
  uint64_t v28 = a3[12];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  *(void *)uint64_t v29 = *(void *)v30;
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  *(void *)(v29 + 24) = *(void *)(v30 + 24);
  *(void *)(v29 + 32) = *(void *)(v30 + 32);
  *(void *)(v29 + 40) = *(void *)(v30 + 40);
  *(void *)(v29 + 48) = *(void *)(v30 + 48);
  *(void *)(v29 + 56) = *(void *)(v30 + 56);
  *(void *)(v29 + 64) = *(void *)(v30 + 64);
  *(void *)(v29 + 72) = *(void *)(v30 + 72);
  *(void *)(v29 + 80) = *(void *)(v30 + 80);
  *(void *)(v29 + 88) = *(void *)(v30 + 88);
  *(void *)(v29 + 96) = *(void *)(v30 + 96);
  *(void *)(v29 + 104) = *(void *)(v30 + 104);
  *(void *)(v29 + 112) = *(void *)(v30 + 112);
  *(void *)(v29 + 120) = *(void *)(v30 + 120);
  *(void *)(v29 + 128) = *(void *)(v30 + 128);
  *(void *)(v29 + 136) = *(void *)(v30 + 136);
  *(void *)(v29 + 144) = *(void *)(v30 + 144);
  *(void *)(v29 + 152) = *(void *)(v30 + 152);
  *(void *)(v29 + 160) = *(void *)(v30 + 160);
  *(void *)(v29 + 168) = *(void *)(v30 + 168);
  *(void *)(v29 + 176) = *(void *)(v30 + 176);
  *(void *)(v29 + 184) = *(void *)(v30 + 184);
  *(void *)(v29 + 192) = *(void *)(v30 + 192);
  *(void *)(v29 + 200) = *(void *)(v30 + 200);
  *(void *)(v29 + 208) = *(void *)(v30 + 208);
  *(void *)(v29 + 216) = *(void *)(v30 + 216);
  *(void *)(v29 + 224) = *(void *)(v30 + 224);
  *(void *)(v29 + 232) = *(void *)(v30 + 232);
  *(void *)(v29 + 240) = *(void *)(v30 + 240);
  *(void *)(v29 + 248) = *(void *)(v30 + 248);
  *(void *)(v29 + 256) = *(void *)(v30 + 256);
  long long v31 = *(_OWORD *)(v30 + 344);
  long long v32 = *(_OWORD *)(v30 + 360);
  long long v33 = *(_OWORD *)(v30 + 376);
  *(_OWORD *)(v29 + 385) = *(_OWORD *)(v30 + 385);
  *(_OWORD *)(v29 + 360) = v32;
  *(_OWORD *)(v29 + 376) = v33;
  *(_OWORD *)(v29 + 344) = v31;
  long long v34 = *(_OWORD *)(v30 + 280);
  long long v35 = *(_OWORD *)(v30 + 296);
  long long v36 = *(_OWORD *)(v30 + 328);
  *(_OWORD *)(v29 + 312) = *(_OWORD *)(v30 + 312);
  *(_OWORD *)(v29 + 328) = v36;
  *(_OWORD *)(v29 + 280) = v34;
  *(_OWORD *)(v29 + 296) = v35;
  *(_OWORD *)(v29 + 264) = *(_OWORD *)(v30 + 264);
  *(void *)(v29 + 408) = *(void *)(v30 + 408);
  *(unsigned char *)(v29 + 416) = *(unsigned char *)(v30 + 416);
  uint64_t v37 = a3[13];
  long long v38 = (void *)(a1 + v37);
  long long v39 = (void *)(a2 + v37);
  *long long v38 = *v39;
  v38[1] = v39[1];
  v38[2] = v39[2];
  void v38[3] = v39[3];
  uint64_t v40 = a3[14];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  void *v41 = *v42;
  v41[1] = v42[1];
  v41[2] = v42[2];
  v41[3] = v42[3];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_20A73D224(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8CA9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  double v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  long long v20 = (_OWORD *)(a1 + v16);
  uint64_t v21 = (_OWORD *)(a2 + v16);
  long long v22 = v21[1];
  *long long v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (_OWORD *)(a1 + v23);
  uint64_t v26 = (_OWORD *)(a2 + v23);
  long long v27 = v26[1];
  _OWORD *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (_OWORD *)(a1 + v24);
  uint64_t v29 = (_OWORD *)(a2 + v24);
  long long v30 = v29[1];
  _OWORD *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a3[12];
  long long v33 = *(_OWORD *)(a2 + v31);
  long long v34 = *(_OWORD *)(a2 + v31 + 16);
  long long v35 = (_OWORD *)(a1 + v31);
  *long long v35 = v33;
  v35[1] = v34;
  memcpy((void *)(a1 + v32), (const void *)(a2 + v32), 0x1A1uLL);
  uint64_t v36 = a3[13];
  uint64_t v37 = a3[14];
  long long v38 = *(_OWORD *)(a2 + v36);
  long long v39 = *(_OWORD *)(a2 + v36 + 16);
  uint64_t v40 = (_OWORD *)(a1 + v36);
  _OWORD *v40 = v38;
  v40[1] = v39;
  uint64_t v41 = (_OWORD *)(a1 + v37);
  uint64_t v42 = (_OWORD *)(a2 + v37);
  long long v43 = v42[1];
  _OWORD *v41 = *v42;
  v41[1] = v43;
  uint64_t v44 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v44) = *(void *)(a2 + v44);
  return a1;
}

uint64_t sub_20A73D35C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8CA9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  long long v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  double v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  long long v20 = (_OWORD *)(a1 + v16);
  uint64_t v21 = (_OWORD *)(a2 + v16);
  long long v22 = v21[1];
  *long long v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = a3[10];
  uint64_t v25 = (_OWORD *)(a1 + v23);
  uint64_t v26 = (_OWORD *)(a2 + v23);
  long long v27 = v26[1];
  _OWORD *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (_OWORD *)(a1 + v24);
  uint64_t v29 = (_OWORD *)(a2 + v24);
  long long v30 = v29[1];
  _OWORD *v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[11];
  uint64_t v32 = a3[12];
  long long v33 = (_OWORD *)(a1 + v31);
  long long v34 = (_OWORD *)(a2 + v31);
  long long v35 = v34[1];
  *long long v33 = *v34;
  v33[1] = v35;
  uint64_t v36 = a1 + v32;
  uint64_t v37 = a2 + v32;
  long long v38 = *(_OWORD *)(v37 + 16);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(_OWORD *)(v36 + 16) = v38;
  long long v39 = *(_OWORD *)(v37 + 48);
  *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
  *(_OWORD *)(v36 + 48) = v39;
  long long v40 = *(_OWORD *)(v37 + 80);
  *(_OWORD *)(v36 + 64) = *(_OWORD *)(v37 + 64);
  *(_OWORD *)(v36 + 80) = v40;
  long long v41 = *(_OWORD *)(v37 + 112);
  *(_OWORD *)(v36 + 96) = *(_OWORD *)(v37 + 96);
  *(_OWORD *)(v36 + 112) = v41;
  long long v42 = *(_OWORD *)(v37 + 144);
  *(_OWORD *)(v36 + 128) = *(_OWORD *)(v37 + 128);
  *(_OWORD *)(v36 + 144) = v42;
  long long v43 = *(_OWORD *)(v37 + 176);
  *(_OWORD *)(v36 + 160) = *(_OWORD *)(v37 + 160);
  *(_OWORD *)(v36 + 176) = v43;
  long long v44 = *(_OWORD *)(v37 + 208);
  *(_OWORD *)(v36 + 192) = *(_OWORD *)(v37 + 192);
  *(_OWORD *)(v36 + 208) = v44;
  long long v45 = *(_OWORD *)(v37 + 240);
  *(_OWORD *)(v36 + 224) = *(_OWORD *)(v37 + 224);
  *(_OWORD *)(v36 + 240) = v45;
  *(void *)(v36 + 256) = *(void *)(v37 + 256);
  long long v46 = *(_OWORD *)(v37 + 264);
  long long v47 = *(_OWORD *)(v37 + 280);
  long long v48 = *(_OWORD *)(v37 + 312);
  *(_OWORD *)(v36 + 296) = *(_OWORD *)(v37 + 296);
  *(_OWORD *)(v36 + 312) = v48;
  *(_OWORD *)(v36 + 264) = v46;
  *(_OWORD *)(v36 + 280) = v47;
  long long v49 = *(_OWORD *)(v37 + 328);
  long long v50 = *(_OWORD *)(v37 + 344);
  *(_OWORD *)(v36 + 385) = *(_OWORD *)(v37 + 385);
  long long v51 = *(_OWORD *)(v37 + 376);
  *(_OWORD *)(v36 + 360) = *(_OWORD *)(v37 + 360);
  *(_OWORD *)(v36 + 376) = v51;
  *(_OWORD *)(v36 + 328) = v49;
  *(_OWORD *)(v36 + 344) = v50;
  *(void *)(v36 + 408) = *(void *)(v37 + 408);
  *(unsigned char *)(v36 + 416) = *(unsigned char *)(v37 + 416);
  uint64_t v52 = a3[13];
  uint64_t v53 = a3[14];
  uint64_t v54 = (_OWORD *)(a1 + v52);
  uint64_t v55 = (_OWORD *)(a2 + v52);
  long long v56 = v55[1];
  _OWORD *v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = (_OWORD *)(a1 + v53);
  uint64_t v58 = (_OWORD *)(a2 + v53);
  long long v59 = v58[1];
  *uint64_t v57 = *v58;
  v57[1] = v59;
  uint64_t v60 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(void *)(a1 + v60) = *(void *)(a2 + v60);
  return a1;
}

uint64_t sub_20A73D514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A73D528);
}

uint64_t sub_20A73D528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CA9F0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 48) + 416);
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_20A73D5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A73D610);
}

uint64_t sub_20A73D610(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8CA9F0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 48) + 416) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for StockFeedMastheadViewLayoutAttributes()
{
  uint64_t result = qword_26AC7D880;
  if (!qword_26AC7D880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A73D71C()
{
  uint64_t result = sub_20A8CA9F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A73D7E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20A8CA9F0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_20A73D84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + *(int *)(a1 + 60)))
  {
    uint64_t v4 = (unsigned int *)MEMORY[0x263F7DE38];
  }
  else
  {
    uint64_t v5 = *MEMORY[0x263F7DE28];
    uint64_t v6 = sub_20A8CAC00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(a2, v5, v6);
    uint64_t v4 = (unsigned int *)MEMORY[0x263F7DE30];
  }
  uint64_t v7 = *v4;
  uint64_t v8 = sub_20A8CAC10();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a2, v7, v8);
}

uint64_t sub_20A73D920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 60));
  uint64_t v5 = sub_20A8CB180();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  uint64_t v7 = (unsigned int *)MEMORY[0x263F7DF68];
  if (v4) {
    uint64_t v7 = (unsigned int *)MEMORY[0x263F7DF60];
  }
  uint64_t v8 = *v7;

  return v6(a2, v8, v5);
}

double sub_20A73D9A8(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_20A73D9BC()
{
  sub_20A73DA7C(&qword_26AC7D870);

  return sub_20A8CACE0();
}

uint64_t sub_20A73DA14()
{
  return sub_20A73DA7C(&qword_26AC7D878);
}

uint64_t sub_20A73DA48()
{
  return sub_20A73DA7C(&qword_26AC7D870);
}

uint64_t sub_20A73DA7C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A73DAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v71 = a2;
  uint64_t v5 = sub_20A8C8800();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C2530();
  uint64_t v74 = *(void *)(v9 - 8);
  uint64_t v75 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v73 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  double v72 = (char *)&v67 - v12;
  uint64_t v13 = sub_20A8C4F60();
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13);
  double v68 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C4AB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v77 = v15;
  uint64_t v78 = v16;
  MEMORY[0x270FA5388](v15);
  double v18 = (uint64_t *)((char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  uint64_t v76 = (char *)&v67 - v20;
  uint64_t v21 = sub_20A8C2510();
  if (v22)
  {
    uint64_t v23 = v22;
    if (v21 == sub_20A8C24A0() && v23 == v24) {
      int v25 = 1;
    }
    else {
      int v25 = sub_20A8CF760();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_20A8C2500();
    uint64_t v28 = v27;
    uint64_t v29 = sub_20A8C2490();
    if (v28)
    {
      if (v26 == v29 && v28 == v30)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_11:
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D440], v5);
        sub_20A8C6060();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      int v32 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 | v32)) {
        goto LABEL_11;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_11;
      }
    }
  }
  __swift_project_boxed_opaque_existential_1(v3 + 3, v3[6]);
  sub_20A73FDCC(0, &qword_26763E410, MEMORY[0x263F58B10], MEMORY[0x263F8E0F8]);
  uint64_t v33 = sub_20A8C4E70();
  uint64_t v34 = *(void *)(v33 - 8);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v34 + 104))(v36 + v35, *MEMORY[0x263F58B08], v33);
  uint64_t v37 = v76;
  sub_20A8C4CE0();
  swift_bridgeObjectRelease();
  uint64_t v39 = v77;
  uint64_t v38 = v78;
  (*(void (**)(uint64_t *, char *, uint64_t))(v78 + 16))(v18, v37, v77);
  int v40 = (*(uint64_t (**)(uint64_t *, uint64_t))(v38 + 88))(v18, v39);
  if (v40 != *MEMORY[0x263F589A0])
  {
    if (v40 == *MEMORY[0x263F58990])
    {
      (*(void (**)(uint64_t *, uint64_t))(v38 + 96))(v18, v39);
      uint64_t v44 = v74;
      uint64_t v45 = (uint64_t)v72;
      long long v46 = v18;
      uint64_t v47 = v75;
      (*(void (**)(char *, uint64_t *, uint64_t))(v74 + 32))(v72, v46, v75);
      __swift_project_boxed_opaque_existential_1(v3 + 8, v3[11]);
      uint64_t v80 = 0;
      memset(v79, 0, sizeof(v79));
      long long v48 = sub_20A5B06E8(v45, (uint64_t)v79);
      sub_20A740010((uint64_t)v79, (uint64_t)&qword_26763AB80, (uint64_t)&qword_26763C420, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(void))sub_20A491224);
      if (v48)
      {
        long long v49 = (void *)MEMORY[0x2105289B0](v3 + 2);
        if (v49)
        {
          long long v50 = v49;
          id v51 = objc_msgSend(v49, sel_splitViewController);

          if (v51)
          {
            objc_msgSend(v51, sel_showViewController_sender_, v48, 0);
          }
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v47);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v39);
    }
    if (v40 == *MEMORY[0x263F58988])
    {
      (*(void (**)(uint64_t *, uint64_t))(v38 + 96))(v18, v39);
      uint64_t v53 = *v18;
      uint64_t v52 = v18[1];
      sub_20A73FD60();
      uint64_t v55 = *(int *)(v54 + 48);
    }
    else
    {
      if (v40 != *MEMORY[0x263F58998])
      {
        if (v40 == *MEMORY[0x263F58980])
        {
          (*(void (**)(uint64_t *, uint64_t))(v38 + 96))(v18, v39);
          swift_bridgeObjectRelease();
        }
        else
        {
          if (v40 != *MEMORY[0x263F58978])
          {
            if (v40 != *MEMORY[0x263F58970])
            {
              uint64_t v66 = *(void (**)(char *, uint64_t))(v38 + 8);
              v66(v37, v39);
              return ((uint64_t (*)(uint64_t *, uint64_t))v66)(v18, v39);
            }
            goto LABEL_14;
          }
          (*(void (**)(uint64_t *, uint64_t))(v38 + 96))(v18, v39);
          swift_bridgeObjectRelease();
          sub_20A73FE30();
          sub_20A740010((uint64_t)v18 + *(int *)(v65 + 48), (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73FDCC);
        }
        sub_20A73E44C(a1);
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v39);
      }
      (*(void (**)(uint64_t *, uint64_t))(v38 + 96))(v18, v39);
      uint64_t v53 = *v18;
      uint64_t v52 = v18[1];
      swift_bridgeObjectRelease();
      sub_20A73FCE4();
      uint64_t v55 = *(int *)(v56 + 64);
    }
    uint64_t v57 = (char *)v18 + v55;
    uint64_t v58 = sub_20A8C5390();
    (*(void (**)(char *, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
    long long v59 = v3;
    uint64_t v61 = v70;
    uint64_t v60 = v71;
    uint64_t v63 = v68;
    uint64_t v62 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v71, v70);
    int v64 = (*(uint64_t (**)(char *, uint64_t))(v62 + 88))(v63, v61);
    if (v64 == *MEMORY[0x263F58B88])
    {
      sub_20A73EE50(v53, v52, v59[13]);
    }
    else if (v64 == *MEMORY[0x263F58B90] || v64 == *MEMORY[0x263F58B78] || v64 == *MEMORY[0x263F58B80])
    {
      sub_20A73E6C4(v53, v52, v60);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
    }
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  }
LABEL_14:
  (*(void (**)(uint64_t *, uint64_t))(v38 + 96))(v18, v39);
  uint64_t v42 = (uint64_t)v73;
  uint64_t v41 = v74;
  uint64_t v43 = v75;
  (*(void (**)(char *, uint64_t *, uint64_t))(v74 + 32))(v73, v18, v75);
  sub_20A73E44C(v42);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v37, v39);
}

void sub_20A73E44C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C2530();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  id v7 = objc_msgSend(self, sel_sharedApplication);
  uint64_t v8 = (void *)sub_20A8C24D0();
  sub_20A4CFA44(MEMORY[0x263F8EE78]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_20A54C664(&qword_26763B630, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v9 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_20A74013C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A73FFBC;
  aBlock[3] = &block_descriptor_36;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_openURL_options_completionHandler_, v8, v9, v12);
  _Block_release(v12);
}

uint64_t sub_20A73E6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a1;
  uint64_t v54 = a3;
  uint64_t v3 = sub_20A8C4F60();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v53 = (char *)&v53 - v6;
  uint64_t v7 = sub_20A8CA640();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (uint64_t *)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (char *)&v53 - v10;
  uint64_t v68 = sub_20A8C5390();
  uint64_t v11 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = MEMORY[0x263F06EA8];
  uint64_t v66 = MEMORY[0x263F8D8F0];
  sub_20A73FDCC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v53 - v15;
  uint64_t v17 = sub_20A8C4B90();
  uint64_t v63 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v65);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42FC8C();
  uint64_t v62 = *(int *)(v22 + 48);
  uint64_t v23 = &v21[*(int *)(v22 + 64)];
  uint64_t v24 = sub_20A8C2530();
  int v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v25(v16, 1, 1, v24);
  swift_bridgeObjectRetain();
  sub_20A8C4B80();
  v25(v16, 1, 1, v24);
  uint64_t v26 = v68;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F58CD8], v68);
  sub_20A8C4D30();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  uint64_t v27 = (uint64_t)v16;
  uint64_t v28 = v70;
  sub_20A740010(v27, (uint64_t)&unk_26AC68C70, v67, v66, (uint64_t (*)(void))sub_20A73FDCC);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v64);
  *((void *)v23 + 4) = 0;
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  *(void *)&v21[v62] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
  uint64_t v29 = sub_20A8C8DC0();
  if (v29)
  {
    uint64_t v30 = (void *)v29;
    uint64_t v69 = v28[14];
    uint64_t v31 = v55;
    int v32 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
    uint64_t v33 = v53;
    uint64_t v34 = v56;
    v32(v53, v54, v56);
    unint64_t v35 = v61;
    v32(v61, (uint64_t)v33, v34);
    int v36 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v35, v34);
    uint64_t v37 = v33;
    if (v36 == *MEMORY[0x263F58B88])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v34);
      uint64_t v38 = v58;
LABEL_4:
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      id v39 = v30;
      sub_20A8C8DD0();

      swift_bridgeObjectRelease();
      int v40 = (unsigned int *)MEMORY[0x263F7DCB0];
      uint64_t v41 = v57;
LABEL_12:
      uint64_t v51 = v59;
      uint64_t v50 = v60;
      (*(void (**)(uint64_t *, void, uint64_t))(v59 + 104))(v41, *v40, v60);
      (*(void (**)(char *, uint64_t *, uint64_t))(v51 + 32))(v38, v41, v50);
      sub_20A8C8590();

      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v50);
      return sub_20A4EF9E0((uint64_t)v21);
    }
    uint64_t v38 = v58;
    if (v36 == *MEMORY[0x263F58B90])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v34);
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      id v42 = v30;
      uint64_t v43 = sub_20A8C8DD0();

      uint64_t v41 = v57;
      *uint64_t v57 = v43;
      int v40 = (unsigned int *)MEMORY[0x263F7DCA0];
      goto LABEL_12;
    }
    if (v36 == *MEMORY[0x263F58B78])
    {
      (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v34);
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      id v44 = v30;
      uint64_t v45 = sub_20A8C8DD0();

      uint64_t v41 = v57;
      *uint64_t v57 = 0;
      v41[1] = v45;
    }
    else
    {
      int v46 = *MEMORY[0x263F58B80];
      uint64_t v47 = *(void (**)(char *, uint64_t))(v31 + 8);
      v47(v37, v34);
      if (v36 != v46)
      {
        v47(v61, v34);
        goto LABEL_4;
      }
      __swift_project_boxed_opaque_existential_1(v28 + 15, v28[18]);
      id v48 = v30;
      uint64_t v49 = sub_20A8C8DD0();
      uint64_t v41 = v57;
      *uint64_t v57 = (uint64_t)v30;
      v41[1] = v49;
    }
    int v40 = (unsigned int *)MEMORY[0x263F7DCA8];
    goto LABEL_12;
  }
  return sub_20A4EF9E0((uint64_t)v21);
}

uint64_t sub_20A73EE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  _OWORD v26[2] = a2;
  uint64_t v34 = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  uint64_t v33 = MEMORY[0x263F8D8F0];
  sub_20A73FDCC(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v35 = (char *)v26 - v6;
  uint64_t v31 = sub_20A8C5390();
  uint64_t v7 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x263F06EA8];
  sub_20A73FDCC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], v4);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v26 - v11;
  uint64_t v29 = sub_20A8C4B90();
  uint64_t v13 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v30);
  uint64_t v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26[1] = *(void *)(v3 + 112);
  sub_20A42FC8C();
  uint64_t v28 = *(int *)(v18 + 48);
  uint64_t v27 = &v17[*(int *)(v18 + 64)];
  uint64_t v19 = sub_20A8C2530();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v12, 1, 1, v19);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20A8C4B80();
  v20(v12, 1, 1, v19);
  uint64_t v21 = v31;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F58CD8], v31);
  sub_20A8C4D30();
  uint64_t v22 = v9;
  uint64_t v23 = (uint64_t)v35;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v21);
  sub_20A740010((uint64_t)v12, (uint64_t)&unk_26AC68C70, v32, v33, (uint64_t (*)(void))sub_20A73FDCC);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v29);
  uint64_t v42 = 0;
  memset(v41, 0, sizeof(v41));
  sub_20A42FD84((uint64_t)v41, (uint64_t)v27);
  *(void *)&v17[v28] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = sub_20A8C6D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v40 = 0;
  memset(v39, 0, sizeof(v39));
  uint64_t v38 = 0;
  memset(v37, 0, sizeof(v37));
  sub_20A5BFAAC((uint64_t)v17, v36, v23, (uint64_t)v39, 0, 0, (uint64_t)v37);
  swift_release();
  sub_20A740010((uint64_t)v37, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A740010((uint64_t)v39, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A740010(v23, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73FDCC);
  sub_20A4EF9E0((uint64_t)v17);
  return swift_release();
}

uint64_t sub_20A73F3E0(uint64_t a1)
{
  uint64_t v54 = sub_20A8C5390();
  uint64_t v57 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A73FDCC(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v47 = (char *)&v44 - v5;
  uint64_t v6 = sub_20A8C4B90();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v6);
  id v48 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v51);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C4AB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = v1[6];
  uint64_t v53 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 3, v17);
  sub_20A8C4CE0();
  uint64_t v18 = *(void (**)(uint64_t *, char *, uint64_t))(v11 + 16);
  uint64_t v55 = v16;
  v18(v13, v16, v10);
  uint64_t v56 = v11;
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 88))(v13, v10);
  if (v19 == *MEMORY[0x263F58988])
  {
    uint64_t v20 = *(void (**)(uint64_t *, uint64_t))(v56 + 96);
    uint64_t v46 = v10;
    v20(v13, v10);
    uint64_t v21 = *v13;
    uint64_t v44 = v13[1];
    uint64_t v45 = v21;
    sub_20A73FD60();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v57 + 8);
    uint64_t v24 = v54;
    v23((char *)v13 + *(int *)(v22 + 48), v54);
LABEL_5:
    uint64_t v58 = v53[14];
    sub_20A42FC8C();
    uint64_t v31 = &v9[*(int *)(v30 + 64)];
    uint64_t v53 = (void *)*(int *)(v30 + 48);
    uint64_t v54 = (uint64_t)v31;
    uint64_t v32 = sub_20A8C2530();
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    uint64_t v34 = (uint64_t)v47;
    v33(v47, 1, 1, v32);
    swift_retain();
    unint64_t v35 = v48;
    sub_20A8C4B80();
    v33((char *)v34, 1, 1, v32);
    uint64_t v36 = v52;
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v52, *MEMORY[0x263F58CD8], v24);
    sub_20A8C4D30();
    v23(v36, v24);
    sub_20A740010(v34, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A73FDCC);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v50);
    uint64_t v37 = v54;
    *(void *)((char *)v53 + (void)v9) = 0;
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    sub_20A42FD84((uint64_t)&v59, v37);
    type metadata accessor for StocksActivity.Article(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_20A491334();
    sub_20A54C664((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
    uint64_t v38 = sub_20A8CBCA0();
    sub_20A4EF9E0((uint64_t)v9);
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v46);
    return v38;
  }
  uint64_t v25 = v57;
  uint64_t v26 = v54;
  if (v19 == *MEMORY[0x263F58998])
  {
    uint64_t v27 = *(void (**)(uint64_t *, uint64_t))(v56 + 96);
    uint64_t v46 = v10;
    v27(v13, v10);
    uint64_t v28 = *v13;
    uint64_t v44 = v13[1];
    uint64_t v45 = v28;
    swift_bridgeObjectRelease();
    sub_20A73FCE4();
    uint64_t v23 = *(void (**)(char *, uint64_t))(v25 + 8);
    uint64_t v24 = v26;
    v23((char *)v13 + *(int *)(v29 + 64), v26);
    goto LABEL_5;
  }
  if ((sub_20A8C2480() & 1) != 0
    && (id v39 = (void *)sub_20A8C24D0(),
        unsigned __int8 v40 = objc_msgSend(v39, sel_fc_isNewsURL),
        v39,
        (v40 & 1) == 0))
  {
    __swift_project_boxed_opaque_existential_1(v53 + 8, v53[11]);
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    uint64_t v38 = (uint64_t)sub_20A5B06E8(a1, (uint64_t)&v59);
    sub_20A740010((uint64_t)&v59, (uint64_t)&qword_26763AB80, (uint64_t)&qword_26763C420, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(void))sub_20A491224);
    uint64_t v42 = *(void (**)(char *, uint64_t))(v56 + 8);
    v42(v55, v10);
    v42((char *)v13, v10);
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, uint64_t))(v56 + 8);
    v41(v55, v10);
    v41((char *)v13, v10);
    return 0;
  }
  return v38;
}

uint64_t sub_20A73FB14()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArticleRouter()
{
  return self;
}

uint64_t sub_20A73FBA0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C4F60();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x263F58B88], v2, v4);
  sub_20A73DAC0(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_20A73FC9C(uint64_t a1, uint64_t a2)
{
  return sub_20A73DAC0(a1, a2);
}

uint64_t sub_20A73FCC0(uint64_t a1)
{
  return sub_20A73F3E0(a1);
}

void sub_20A73FCE4()
{
  if (!qword_26763D980)
  {
    sub_20A4B9D5C();
    sub_20A8C5390();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26763D980);
    }
  }
}

void sub_20A73FD60()
{
  if (!qword_26763D988)
  {
    sub_20A8C5390();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D988);
    }
  }
}

void sub_20A73FDCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A73FE30()
{
  if (!qword_26763D990)
  {
    sub_20A73FDCC(255, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763D990);
    }
  }
}

void sub_20A73FECC(char a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1((void *)(a2 + 64), *(void *)(a2 + 88));
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    uint64_t v5 = sub_20A5B06E8(a3, (uint64_t)v9);
    sub_20A740010((uint64_t)v9, (uint64_t)&qword_26763AB80, (uint64_t)&qword_26763C420, (uint64_t)&protocol descriptor for WebViewCoordinatorType, (uint64_t (*)(void))sub_20A491224);
    if (v5)
    {
      uint64_t v6 = (void *)MEMORY[0x2105289B0](a2 + 16);
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = objc_msgSend(v6, sel_splitViewController);

        if (v8)
        {
          objc_msgSend(v8, sel_showViewController_sender_, v5, 0);
        }
      }
    }
  }
}

uint64_t sub_20A73FFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_20A740010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A740070()
{
  uint64_t v1 = sub_20A8C2530();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_20A74013C(char a1)
{
  uint64_t v3 = *(void *)(sub_20A8C2530() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_20A73FECC(a1, v4, v5);
}

char *sub_20A7401B0(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A7418B4(0, &qword_26763ADA0, (uint64_t (*)(uint64_t))sub_20A45A000, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_symbolLabel;
  id v15 = objc_allocWithZone(MEMORY[0x263F828E0]);
  uint64_t v16 = v5;
  *(void *)&v5[v14] = objc_msgSend(v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_nameLabel;
  *(void *)&v16[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_exchangeLabel;
  *(void *)&v16[v18] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceLabel;
  *(void *)&v16[v19] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceChangeLabel;
  *(void *)&v16[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton;
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  sub_20A45A000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
  sub_20A45A100();
  objc_allocWithZone(v23);
  swift_retain();
  *(void *)&v16[v21] = sub_20A8C9070();
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelectable] = 1;
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected] = 0;
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlightable] = 1;
  v16[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted] = 0;

  v32.receiver = v16;
  v32.super_class = ObjectType;
  uint64_t v24 = (char *)objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_symbolLabel];
  uint64_t v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  uint64_t v27 = *(void **)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_nameLabel];
  objc_msgSend(v26, sel_addSubview_, v27);
  uint64_t v28 = *(void **)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_exchangeLabel];
  objc_msgSend(v26, sel_addSubview_, v28);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceLabel]);
  objc_msgSend(v26, sel_addSubview_, *(void *)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceChangeLabel]);
  uint64_t v29 = *(void **)&v26[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton];
  objc_msgSend(v26, sel_addSubview_, v29);
  objc_msgSend(v27, sel_setNumberOfLines_, 0);
  objc_msgSend(v28, sel_setNumberOfLines_, 0);
  id v30 = v29;
  objc_msgSend(v30, sel_setClipsToBounds_, 1);

  return v26;
}

uint64_t type metadata accessor for StockSearchCellView()
{
  return self;
}

uint64_t sub_20A74066C()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_20A7406B8(char a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4355E0(a1, a2, a3, &OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected);
}

uint64_t (*sub_20A7406C4())()
{
  return j__swift_endAccess;
}

uint64_t sub_20A740724()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_20A740770(char a1, uint64_t a2, uint64_t a3)
{
  return sub_20A4355E0(a1, a2, a3, &OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted);
}

uint64_t (*sub_20A74077C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_20A7407DC()
{
  return sub_20A8C9060();
}

void sub_20A74080C()
{
  sub_20A741150(qword_26AC71530);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A740898()
{
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  if (objc_msgSendSuper2(&v11, sel_isAccessibilityElement))
  {
    id v1 = objc_msgSend(self, sel_currentRequest);
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = objc_msgSend(v1, sel_technology);

      sub_20A7418B4(0, &qword_26763D9E8, (uint64_t (*)(uint64_t))type metadata accessor for AccessibilityTechnology, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
      uint64_t v5 = (void *)*MEMORY[0x263EFABA0];
      *(void *)(inited + 32) = *MEMORY[0x263EFABA0];
      uint64_t v6 = (void *)*MEMORY[0x263EFABA8];
      *(void *)(inited + 40) = *MEMORY[0x263EFABA8];
      id v7 = v5;
      id v8 = v6;
      LOBYTE(v6) = sub_20A5973F8((uint64_t)v3, inited);

      swift_setDeallocating();
      type metadata accessor for AccessibilityTechnology(0);
      swift_arrayDestroy();
      char v9 = v6 ^ 1;
    }
    else
    {
      char v9 = 1;
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

unint64_t sub_20A740A70()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  unint64_t v1 = (unint64_t)objc_msgSendSuper2(&v6, sel_accessibilityTraits);
  sub_20A8C9050();
  if (v5 == 2) {
    goto LABEL_8;
  }
  if (v5)
  {
    char v2 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_5;
    }
LABEL_8:
    if ((*MEMORY[0x263F832A8] & v1) != 0) {
      return v1 & ~*MEMORY[0x263F832A8];
    }
    else {
      return v1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_5:
  uint64_t v3 = *MEMORY[0x263F832A8];
  if ((*MEMORY[0x263F832A8] & ~v1) == 0) {
    uint64_t v3 = 0;
  }
  return v3 | v1;
}

uint64_t sub_20A740D6C()
{
  v16.receiver = v0;
  v16.super_class = (Class)swift_getObjectType();
  id v1 = objc_msgSendSuper2(&v16, sel_accessibilityCustomActions);
  if (v1)
  {
    char v2 = v1;
    sub_20A42CFF0(0, &qword_26AC83118);
    uint64_t v3 = sub_20A8CE5E0();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
  }
  uint64_t v17 = v3;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v6 = objc_msgSend(self, sel_configurationWithPointSize_, 30.0, 0x800000020A90C970);
  id v7 = (void *)sub_20A8CE240();
  id v8 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v7, v6);

  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v10 = objc_allocWithZone(MEMORY[0x263F823A0]);
  swift_retain();
  objc_super v11 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_20A74160C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A53C214;
  aBlock[3] = &block_descriptor_37;
  uint64_t v12 = _Block_copy(aBlock);
  objc_msgSend(v10, sel_initWithName_image_actionHandler_, v11, v8, v12);

  _Block_release(v12);
  swift_release();
  uint64_t v13 = swift_release();
  MEMORY[0x2105268E0](v13);
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  return v17;
}

uint64_t sub_20A74111C()
{
  return sub_20A741150(&qword_26AC67BF8);
}

uint64_t sub_20A741150(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockSearchCellView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A741190()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A7411C8(uint64_t a1, uint64_t a2)
{
  sub_20A7418B4(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v34 - v4;
  uint64_t v6 = sub_20A8C2B70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v34 - v11;
  swift_beginAccess();
  uint64_t v13 = MEMORY[0x2105289B0](a2 + 16);
  if (!v13) {
    return 0;
  }
  id v14 = (id)v13;
  sub_20A42CFF0(0, &qword_26763D868);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  while ((objc_msgSend(v14, sel_isKindOfClass_, ObjCClassFromMetadata) & 1) == 0)
  {
    id v16 = objc_msgSend(v14, sel_superview);

    id v14 = v16;
    if (!v16) {
      return 0;
    }
  }
  uint64_t v36 = v7;
  self;
  uint64_t v18 = swift_dynamicCastObjCClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v35 = v6;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
    uint64_t v20 = swift_getObjCClassFromMetadata();
    id v21 = v14;
    uint64_t v22 = v21;
    while ((objc_msgSend(v22, sel_isKindOfClass_, v20) & 1) == 0)
    {
      id v23 = objc_msgSend(v22, sel_superview);

      uint64_t v22 = v23;
      if (!v23) {
        goto LABEL_18;
      }
    }
    self;
    uint64_t v24 = swift_dynamicCastObjCClass();
    if (!v24)
    {

LABEL_18:
      uint64_t v17 = 0;
      id v14 = v21;
      goto LABEL_24;
    }
    uint64_t v25 = (void *)v24;
    id v14 = v22;
    id v26 = objc_msgSend(v25, sel_indexPathForCell_, v19);
    if (v26)
    {
      uint64_t v27 = v26;
      sub_20A8C2B10();

      uint64_t v28 = v35;
      uint64_t v29 = v36;
      id v30 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v30(v5, v9, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v5, 0, 1, v28);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v28) != 1)
      {
        v30(v12, v5, v28);
        id v31 = objc_msgSend(v25, sel_delegate);
        uint64_t v32 = v36;
        if (v31)
        {
          sub_20A8CA5A0();
          if (swift_dynamicCastClass())
          {
            sub_20A8CA580();
            swift_unknownObjectRelease();

            (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v28);
            uint64_t v17 = 1;
            goto LABEL_24;
          }
          swift_unknownObjectRelease();
        }

        (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v28);
        goto LABEL_23;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v5, 1, 1, v35);
    }

    sub_20A45A238((uint64_t)v5);
  }
LABEL_23:
  uint64_t v17 = 0;
LABEL_24:

  return v17;
}

uint64_t sub_20A74160C(uint64_t a1)
{
  return sub_20A7411C8(a1, v1);
}

void sub_20A741614()
{
  uint64_t v1 = v0;
  sub_20A7418B4(0, &qword_26763ADA0, (uint64_t (*)(uint64_t))sub_20A45A000, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v13 - v3;
  uint64_t v5 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_symbolLabel;
  *(void *)&v1[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_nameLabel;
  *(void *)&v1[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_exchangeLabel;
  *(void *)&v1[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceLabel;
  *(void *)&v1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_priceChangeLabel;
  *(void *)&v1[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton;
  if (qword_26AC6ABF8 != -1) {
    swift_once();
  }
  sub_20A45A000();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_20A45A100();
  objc_allocWithZone(v12);
  swift_retain();
  *(void *)&v1[v10] = sub_20A8C9070();
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelectable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isSelected] = 0;
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlightable] = 1;
  v1[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_isHighlighted] = 0;

  sub_20A8CF520();
  __break(1u);
}

void sub_20A7418B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

ValueMetadata *type metadata accessor for ForYouFeedRelayoutBlueprintModifier()
{
  return &type metadata for ForYouFeedRelayoutBlueprintModifier;
}

uint64_t sub_20A741928(uint64_t a1, void (*a2)(char *))
{
  sub_20A741B50(0, &qword_26AC6A430, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v15 - v7;
  sub_20A4957B0();
  uint64_t v10 = &v8[*(int *)(v9 + 48)];
  sub_20A741B50(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  uint64_t v12 = *MEMORY[0x263F7D528];
  uint64_t v13 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D938], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A741AFC()
{
  unint64_t result = qword_26AC80F80;
  if (!qword_26AC80F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80F80);
  }
  return result;
}

void sub_20A741B50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    v8[2] = sub_20A4950F0(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A4950F0((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t static UIActivityType.copyLink.getter()
{
  return sub_20A8CE240();
}

uint64_t sub_20A741C64(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9390();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C8F70();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A8CB840();
  sub_20A8CB830();
  sub_20A8C3E30();
  uint64_t v11 = sub_20A8C2530();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_20A8C8F60();
  sub_20A8CE240();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v13 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v14 = objc_msgSend(self, sel_ts_link);
  sub_20A8C9380();
  sub_20A8C87D0();
  swift_allocObject();
  return sub_20A8C87C0();
}

uint64_t _s5TeaUI15ContextMenuItemC06StocksB0E8copyLink5stockAC0F4Core5StockV_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C8F40();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C8F70();
  MEMORY[0x270FA5388](v13 - 8);
  sub_20A8CB840();
  v19[1] = sub_20A8CB830();
  sub_20A8C3E30();
  uint64_t v14 = sub_20A8C2530();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 0, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  sub_20A8C8F60();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v17 = objc_msgSend(self, sel_ts_link);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7D600], v2);
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C86B0();
}

uint64_t sub_20A74231C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned __int8 v12 = *a3;
  sub_20A42D93C();
  sub_20A8C8330();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1((void *)(v4 + 48), *(void *)(v4 + 72));
      return sub_20A739538();
    }
  }
  else
  {
    sub_20A470E78((uint64_t)v11, (uint64_t)v8);
    __swift_project_boxed_opaque_existential_1((void *)(v4 + 48), *(void *)(v4 + 72));
    uint64_t v14 = sub_20A82EA50();
    unsigned __int8 v16 = v12;
    sub_20A7389B0((uint64_t)v8, v14, &v16);
    swift_bridgeObjectRelease();
    return sub_20A74326C((uint64_t)v8);
  }
  return result;
}

uint64_t sub_20A7424A4()
{
  uint64_t v1 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    uint64_t v8 = 0;
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    sub_20A470E78((uint64_t)v6, (uint64_t)v3);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 48), *(void *)(v0 + 72));
    uint64_t v9 = sub_20A82EA50();
    uint64_t v8 = sub_20A7391A8((uint64_t)v3, v9);
    swift_bridgeObjectRelease();
    sub_20A74326C((uint64_t)v3);
  }
  return v8;
}

uint64_t type metadata accessor for StockListEventHandler()
{
  return self;
}

uint64_t sub_20A74262C(uint64_t a1)
{
  sub_20A743188(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t v6 = sub_20A8C2B70();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x2105289B0](v1 + 16, v8);
  if (result)
  {
    sub_20A7431EC(a1, (uint64_t)v5, &qword_26AC68D50, MEMORY[0x263F07A30]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_20A7432C8((uint64_t)v5, &qword_26AC68D50, MEMORY[0x263F07A30]);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
      UIAccessibilityNotifications v12 = *MEMORY[0x263F831C0];
      sub_20A8C9BF0();
      uint64_t v13 = (void *)sub_20A8C94C0();
      swift_release();
      uint64_t v14 = (void *)sub_20A8C2B00();
      id v15 = objc_msgSend(v13, sel_cellForItemAtIndexPath_, v14);

      UIAccessibilityPostNotification(v12, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A74288C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CC220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CC250();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A743188(0, &qword_26AC68E18, MEMORY[0x263F7AB98], MEMORY[0x263F8D8F0]);
  double v15 = MEMORY[0x270FA5388](v14 - 8);
  id v17 = (char *)&v27 - v16;
  uint64_t result = MEMORY[0x2105289B0](a3 + 16, v15);
  if (result)
  {
    uint64_t v19 = (void *)result;
    uint64_t v20 = sub_20A8C34C0();
    int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(a1, 1, v20);
    sub_20A7431EC(a2, (uint64_t)v17, &qword_26AC68E18, MEMORY[0x263F7AB98]);
    if (v21 == 1
      && (uint64_t v22 = sub_20A8C3410(),
          (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v17, 1, v22) == 1))
    {
      sub_20A7432C8((uint64_t)v17, &qword_26AC68E18, MEMORY[0x263F7AB98]);
    }
    else
    {
      sub_20A7432C8((uint64_t)v17, &qword_26AC68E18, MEMORY[0x263F7AB98]);
      sub_20A44D17C();
      uint64_t v28 = sub_20A8CEBE0();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v19;
      aBlock[4] = sub_20A742D30;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4713FC;
      aBlock[3] = &block_descriptor_38;
      uint64_t v24 = _Block_copy(aBlock);
      id v25 = v19;
      swift_release();
      sub_20A8CC240();
      aBlock[0] = MEMORY[0x263F8EE78];
      sub_20A62B1BC(&qword_26AC677A0, MEMORY[0x263F8F030]);
      sub_20A743188(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
      sub_20A4F6C4C();
      sub_20A8CF290();
      id v26 = (void *)v28;
      MEMORY[0x210526F10](0, v13, v9, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A742CF8()
{
  return swift_deallocObject();
}

void sub_20A742D30()
{
  sub_20A717BC8(*(void **)(v0 + 16));
}

uint64_t sub_20A742D38(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned __int8 v6 = *a3;
  __swift_project_boxed_opaque_existential_1((void *)(a4 + 48), *(void *)(a4 + 72));
  unsigned __int8 v8 = v6;
  return sub_20A7389B0(a1, a2, &v8);
}

uint64_t sub_20A742D94(uint64_t a1, uint64_t a2)
{
  sub_20A8C3EF0();
  sub_20A743360();
  sub_20A8CB470();
  swift_allocObject();
  sub_20A8CB420();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  swift_retain();
  sub_20A8CB450();
  swift_release();
  swift_release();
  swift_release();
  sub_20A8CB430();

  return swift_release();
}

uint64_t sub_20A742EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x2105289B0](a3 + 16);
  if (result)
  {
    sub_20A742D94(a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A742F34(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x263F07A30];
  sub_20A743188(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - v6;
  swift_getObjectType();
  sub_20A7431EC(a1, (uint64_t)v7, &qword_26AC68D50, v4);
  sub_20A8CB170();
  if ((objc_msgSend(a2, sel_isEditing) & 1) == 0)
  {
    sub_20A8C9BF0();
    unsigned __int8 v8 = (void *)sub_20A8C94C0();
    swift_release();
    sub_20A8CEAD0();
    id v9 = objc_msgSend(v8, sel_collectionViewLayout);
    id v10 = objc_msgSend(v9, sel_ts_visibleBoundsInvalidationContext);

    if (v10)
    {
      id v11 = objc_msgSend(v8, sel_collectionViewLayout);
      objc_msgSend(v11, sel_invalidateLayoutWithContext_, v10);
    }
  }
}

uint64_t sub_20A7430E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A743118(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_20A868038);
}

uint64_t sub_20A743100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A743118(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_20A742F34);
}

uint64_t sub_20A743118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t result = MEMORY[0x2105289B0](a2 + 16);
  if (result)
  {
    a5(a1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_20A743188(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A7431EC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A743188(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A74326C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockListStockModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A7432C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A743188(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A743338(uint64_t a1)
{
  return sub_20A743454(a1);
}

uint64_t sub_20A743358()
{
  return sub_20A717248(*(char **)(v0 + 16));
}

unint64_t sub_20A743360()
{
  unint64_t result = qword_26763D9F0;
  if (!qword_26763D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763D9F0);
  }
  return result;
}

uint64_t sub_20A7433B4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A7433EC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A74342C()
{
  return sub_20A717B20(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A743434(uint64_t a1)
{
  return sub_20A743454(a1);
}

uint64_t sub_20A743454(uint64_t a1)
{
  uint64_t result = MEMORY[0x2105289B0](a1 + 16);
  if (result)
  {
    uint64_t v2 = (void *)result;
    *(void *)(swift_allocObject() + 16) = result;
    id v3 = v2;
    sub_20A8C66A0();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_20A7434E8()
{
  sub_20A71730C(*(void **)(v0 + 16));
}

uint64_t sub_20A7434F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t result = MEMORY[0x2105289B0](a2 + 16, v7);
  if (result)
  {
    uint64_t v9 = (void *)result;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v11 + v10, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    id v12 = v9;
    sub_20A8C66A0();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A743650()
{
  uint64_t v1 = sub_20A8CD2C0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_20A74371C()
{
  uint64_t v1 = *(void *)(sub_20A8CD2C0() - 8);
  uint64_t v2 = *(char **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_20A716950(v2, v3);
}

void sub_20A743780(uint64_t a1)
{
  uint64_t v1 = (void *)MEMORY[0x2105289B0](a1 + 16);
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_isViewLoaded))
  {
    id v3 = objc_msgSend(v2, sel_view);
    if (v3)
    {
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_setNeedsLayout);

      id v5 = objc_msgSend(v2, sel_view);
      if (v5)
      {
        id v6 = v5;
        objc_msgSend(v5, sel_layoutIfNeeded);
        swift_unknownObjectRelease();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return;
  }

  swift_unknownObjectRelease();
}

uint64_t type metadata accessor for WelcomeDataManager()
{
  return self;
}

uint64_t sub_20A7438B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D9D4();
  MEMORY[0x270FA5388](v5 - 8);
  double v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA48(0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A743C28(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  sub_20A8CBB90();
  sub_20A743C28(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v11) == 1)
  {
    uint64_t v14 = (uint64_t (*)(void))sub_20A42D9D4;
    uint64_t v15 = (uint64_t)v7;
LABEL_5:
    sub_20A743D1C(v15, v14);
    uint64_t v19 = sub_20A8C3E10();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  sub_20A8C8920();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
  sub_20A42C4A4();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v16) == 1)
  {
    uint64_t v14 = (uint64_t (*)(void))sub_20A42DA48;
    uint64_t v15 = (uint64_t)v10;
    goto LABEL_5;
  }
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v17);
  sub_20A76BAE4(a1);
  return sub_20A743D1C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A743BE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A743C28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A743BE0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A743BE0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A743D1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void __swiftcall WelcomeModule.createViewController()(UIViewController *__return_ptr retstr)
{
  uint64_t v2 = sub_20A8C7770();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x263F7A6E8], v2, v4);
  sub_20A8C4890();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver + 24));
  type metadata accessor for WelcomeViewController();
  swift_retain();
  uint64_t v7 = sub_20A8C5B80();
  swift_release();
  if (v7) {
    swift_release();
  }
  else {
    __break(1u);
  }
}

uint64_t sub_20A743EFC(void *a1)
{
  return sub_20A8C5A40();
}

uint64_t sub_20A743F54(void *a1)
{
  return sub_20A743EFC(a1);
}

id WelcomeModule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void WelcomeModule.init()()
{
}

id WelcomeModule.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_20A7441C4(uint64_t a1)
{
  unint64_t result = sub_20A7441EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A7441EC()
{
  unint64_t result = qword_26AC6D3B8;
  if (!qword_26AC6D3B8)
  {
    type metadata accessor for WelcomeModule();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D3B8);
  }
  return result;
}

uint64_t type metadata accessor for WelcomeModule()
{
  return self;
}

uint64_t sub_20A7442B0()
{
  uint64_t v1 = sub_20A8C7770();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  (*(void (**)(char *, void, uint64_t, double))(v2 + 104))(v5, *MEMORY[0x263F7A6E8], v1, v3);
  sub_20A8C4890();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  __swift_project_boxed_opaque_existential_1((void *)(v6 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver), *(void *)(v6 + OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver + 24));
  type metadata accessor for WelcomeViewController();
  swift_retain();
  uint64_t v7 = sub_20A8C5B80();
  uint64_t result = swift_release();
  if (v7)
  {
    swift_release();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t method lookup function for WelcomeModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WelcomeModule);
}

uint64_t sub_20A744448@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = a3;
  uint64_t v78 = sub_20A8CAC10();
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v75 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v73 = *(double *)a2;
  CGFloat v81 = *(double *)(a2 + 24);
  double v74 = *(double *)(a2 + 40);
  double v7 = v73 - v81 - v74;
  double v80 = *(double *)&v3;
  uint64_t v9 = v3[5];
  uint64_t v8 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v9);
  double v71 = COERCE_DOUBLE(type metadata accessor for ForYouTitleViewLayoutOptions());
  uint64_t v10 = *(void *)(a2 + *(int *)(*(void *)&v71 + 32));
  uint64_t v11 = *(void *)(v8 + 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8);
  v104[3] = v9;
  v104[4] = v8;
  __swift_allocate_boxed_opaque_existential_1(v104);
  v12(v10, v9, v11);
  uint64_t v13 = (void *)(*(uint64_t (**)(void, void, uint64_t, uint64_t))(v8 + 24))(*a1, a1[1], v9, v8);
  uint64_t v14 = (void *)(*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v8 + 32))(a1[2], a1[3], a1[4], v9, v8);
  double v72 = v7;
  objc_msgSend(v13, sel_boundingRectWithSize_options_context_, 33, 0, v7, 1.79769313e308);
  CGFloat v16 = v15;
  CGFloat v18 = v17;
  CGFloat v68 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  objc_msgSend(v14, sel_boundingRectWithSize_options_context_, 32, 0, v7, 1.79769313e308);
  CGFloat v24 = v23;
  CGFloat v65 = v23;
  CGFloat v26 = v25;
  CGFloat v64 = v25;
  CGFloat v28 = v27;
  CGFloat v63 = v27;
  CGFloat v30 = v29;
  CGFloat v62 = v29;
  sub_20A744A78((_OWORD *)a2, *(uint64_t *)&v80);
  double v80 = *(double *)&v31;
  sub_20A8C7960();
  sub_20A8C7930();
  double v70 = v32;
  double v79 = v33;
  v105.origin.CGFloat x = v16;
  v105.origin.CGFloat y = v18;
  v105.size.CGFloat width = v20;
  v105.size.CGFloat height = v22;
  double Height = CGRectGetHeight(v105);
  v106.origin.CGFloat x = v24;
  v106.origin.CGFloat y = v26;
  v106.size.CGFloat width = v28;
  v106.size.CGFloat height = v30;
  double v35 = Height + CGRectGetHeight(v106);
  if (v35 <= v79) {
    double v35 = v79;
  }
  double v36 = v71;
  double v37 = *(double *)(a2 + *(int *)(*(void *)&v71 + 48));
  CGFloat v38 = v80;
  CGFloat v39 = ceil(*(double *)(a2 + *(int *)(*(void *)&v71 + 52)) + v37 + v80 + v35);
  v107.origin.CGFloat x = v16;
  CGFloat v40 = v68;
  v107.origin.CGFloat y = v68;
  v107.size.CGFloat width = v20;
  v107.size.CGFloat height = v22;
  CGFloat Width = CGRectGetWidth(v107);
  CGFloat v69 = Width;
  v108.origin.CGFloat x = v16;
  v108.origin.CGFloat y = v40;
  v108.size.CGFloat width = v20;
  v108.size.CGFloat height = v22;
  v109.size.CGFloat height = ceil(CGRectGetHeight(v108));
  CGFloat v68 = v109.size.height;
  v109.origin.CGFloat x = v81;
  v109.origin.CGFloat y = v38;
  v109.size.CGFloat width = Width;
  double v67 = ceil(v37 + CGRectGetMaxY(v109));
  CGFloat v42 = v65;
  v110.origin.CGFloat x = v65;
  CGFloat v43 = v64;
  v110.origin.CGFloat y = v64;
  CGFloat v44 = v63;
  v110.size.CGFloat width = v63;
  CGFloat v45 = v62;
  v110.size.CGFloat height = v62;
  CGFloat v66 = CGRectGetWidth(v110);
  v111.origin.CGFloat x = v42;
  v111.origin.CGFloat y = v43;
  v111.size.CGFloat width = v44;
  v111.size.CGFloat height = v45;
  CGFloat v65 = ceil(CGRectGetHeight(v111));
  double v71 = 1.0 / *(double *)(a2 + *(int *)(*(void *)&v36 + 28));
  double v46 = v71;
  v112.origin.CGFloat x = 0.0;
  v112.origin.CGFloat y = 0.0;
  double v47 = v73;
  v112.size.CGFloat width = v73;
  v112.size.CGFloat height = v39;
  CGFloat v64 = CGRectGetHeight(v112) - v46;
  double v48 = v70;
  double v74 = v47 - v70 - v74;
  v113.origin.CGFloat x = 0.0;
  v113.origin.CGFloat y = 0.0;
  v113.size.CGFloat width = v47;
  v113.size.CGFloat height = v39;
  double MaxY = CGRectGetMaxY(v113);
  v114.origin.CGFloat x = 0.0;
  v114.origin.CGFloat y = 0.0;
  v114.size.CGFloat width = v47;
  v114.size.CGFloat height = v39;
  CGFloat v50 = CGRectGetHeight(v114);
  double v51 = v79;
  CGFloat v63 = MaxY + (v79 + v50 + 6.0) * -0.5;
  sub_20A8CED70();
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v60 = v75;
  sub_20A744CE4(a2, v75);
  uint64_t v82 = v53;
  uint64_t v83 = v55;
  uint64_t v84 = v57;
  uint64_t v85 = v59;
  CGFloat v86 = v81;
  uint64_t v87 = *(void *)&v80;
  CGFloat v88 = v69;
  CGFloat v89 = v68;
  CGFloat v90 = v81;
  double v91 = v67;
  CGFloat v92 = v66;
  CGFloat v93 = v65;
  uint64_t v94 = a2;
  CGFloat v95 = v81;
  CGFloat v96 = v64;
  double v97 = v72;
  double v98 = v71;
  uint64_t v99 = v60;
  double v100 = v74;
  CGFloat v101 = v63;
  double v102 = v48;
  double v103 = v51;
  type metadata accessor for ForYouTitleViewLayoutAttributes();
  sub_20A8C9690();

  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v60, v78);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
}

void sub_20A744A78(_OWORD *a1, uint64_t a2)
{
  uint64_t v4 = *(void **)((char *)a1 + *(int *)(type metadata accessor for ForYouTitleViewLayoutOptions() + 32));
  id v5 = objc_msgSend(v4, sel_horizontalSizeClass);
  id v6 = objc_msgSend(v4, sel_verticalSizeClass);
  if ((unint64_t)v5 >= 2)
  {
    if (v5 == (id)2)
    {
      if (v6 == (id)2)
      {
        double v7 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
        long long v8 = *MEMORY[0x263F834E8];
        long long v9 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
        v19[0] = *a1;
        v19[1] = v8;
        void v19[2] = v9;
        CGFloat v20 = v4;
        __swift_project_boxed_opaque_existential_1(v7 + 2, v7[5]);
        id v10 = v4;
        sub_20A485E08((uint64_t)v19, &v17);
        CGRectGetMinY(v18);
        __swift_project_boxed_opaque_existential_1(v7 + 7, v7[10]);
        if (qword_26AC678E8 != -1) {
          swift_once();
        }
        uint64_t v11 = (void *)qword_26AC678D8;
        uint64_t v12 = (void *)unk_26AC678E0;
        swift_bridgeObjectRetain();
        id v13 = sub_20A5A8FE8(v11, v12, v10);
        swift_bridgeObjectRelease();
        uint64_t v14 = (void *)sub_20A8CEC60();

        objc_msgSend(v14, sel_ascender);
        objc_msgSend(v14, sel_capHeight);

        sub_20A71F5B0((uint64_t)&v17);
        double v15 = (void *)sub_20A8CEC60();
        objc_msgSend(v15, sel_ascender);

        CGFloat v16 = (void *)sub_20A8CEC60();
        objc_msgSend(v16, sel_capHeight);
      }
    }
    else
    {
      sub_20A8CF520();
      __break(1u);
    }
  }
}

uint64_t sub_20A744CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ForYouTitleViewLayoutOptions();
  double v5 = MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(*(id *)(a1 + *(int *)(v8 + 32)), sel_horizontalSizeClass, v5);
  if (v9) {
    BOOL v10 = v9 == (id)2;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10)
  {
    uint64_t v11 = *MEMORY[0x263F7DE38];
    uint64_t v12 = sub_20A8CAC10();
    id v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104);
    return v13(a2, v11, v12);
  }
  else
  {
    if (v9 == (id)1)
    {
      int v15 = *(unsigned __int8 *)(a1 + *(int *)(v4 + 40));
      sub_20A745448(a1, (uint64_t)v7);
      if (v15 == 1)
      {
        char v16 = sub_20A8CECD0();
        sub_20A7454AC((uint64_t)v7);
        if (v16)
        {
          long long v17 = (unsigned int *)MEMORY[0x263F7DE40];
LABEL_15:
          uint64_t v18 = *v17;
          uint64_t v19 = sub_20A8CAC10();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a2, v18, v19);
        }
      }
      else
      {
        sub_20A7454AC((uint64_t)v7);
      }
      long long v17 = (unsigned int *)MEMORY[0x263F7DE38];
      goto LABEL_15;
    }
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A744EF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v84 = a2;
  uint64_t v80 = a1;
  uint64_t v85 = a15;
  uint64_t v83 = a14;
  uint64_t v82 = a13;
  uint64_t v81 = a12;
  uint64_t v69 = a4;
  uint64_t v68 = a5;
  uint64_t v67 = a6;
  uint64_t v66 = a7;
  uint64_t v75 = sub_20A8CAC10();
  uint64_t v16 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  double v74 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C8180();
  uint64_t v19 = *(void *)(v18 - 8);
  double v20 = MEMORY[0x270FA5388](v18);
  CGFloat v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *MEMORY[0x263F7D268];
  CGFloat v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v19 + 104);
  v24(v22, v23, v18, v20);
  sub_20A8C8170();
  uint64_t v78 = v26;
  uint64_t v79 = v25;
  uint64_t v76 = v28;
  uint64_t v77 = v27;
  double v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v22, v18);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v22, v23, v18);
  sub_20A8C8170();
  uint64_t v73 = v30;
  uint64_t v72 = v31;
  uint64_t v71 = v32;
  uint64_t v70 = v33;
  v29(v22, v18);
  unsigned int v87 = v23;
  CGFloat v86 = v24;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v22, v23, v18);
  sub_20A8C8170();
  uint64_t v69 = v34;
  uint64_t v68 = v35;
  uint64_t v67 = v36;
  uint64_t v66 = v37;
  v29(v22, v18);
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  uint64_t v41 = 0;
  if (*(unsigned char *)(v80 + *(int *)(type metadata accessor for ForYouTitleViewLayoutOptions() + 44)) == 1)
  {
    ((void (*)(char *, void, uint64_t))v86)(v22, v87, v18);
    sub_20A8C8170();
    uint64_t v38 = v42;
    uint64_t v39 = v43;
    uint64_t v40 = v44;
    uint64_t v41 = v45;
    v29(v22, v18);
  }
  double v46 = v74;
  uint64_t v47 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v74, v84, v75);
  ((void (*)(char *, void, uint64_t))v86)(v22, v87, v18);
  sub_20A8C8170();
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  v29(v22, v18);
  uint64_t v56 = v78;
  *(void *)a3 = v79;
  *((void *)a3 + 1) = v56;
  uint64_t v57 = v76;
  *((void *)a3 + 2) = v77;
  *((void *)a3 + 3) = v57;
  uint64_t v58 = v72;
  *((void *)a3 + 4) = v73;
  *((void *)a3 + 5) = v58;
  uint64_t v59 = v70;
  *((void *)a3 + 6) = v71;
  *((void *)a3 + 7) = v59;
  uint64_t v60 = v68;
  *((void *)a3 + 8) = v69;
  *((void *)a3 + 9) = v60;
  uint64_t v61 = v66;
  *((void *)a3 + 10) = v67;
  *((void *)a3 + 11) = v61;
  *((void *)a3 + 12) = v38;
  *((void *)a3 + 13) = v39;
  *((void *)a3 + 14) = v40;
  *((void *)a3 + 15) = v41;
  uint64_t v62 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&a3[*(int *)(v62 + 32)], v46, v47);
  CGFloat v64 = &a3[*(int *)(v62 + 36)];
  *(void *)CGFloat v64 = v49;
  *((void *)v64 + 1) = v51;
  *((void *)v64 + 2) = v53;
  *((void *)v64 + 3) = v55;
  return result;
}

uint64_t type metadata accessor for ForYouTitleViewLayoutAttributesFactory()
{
  return self;
}

uint64_t sub_20A7453EC@<X0>(char *a1@<X8>)
{
  return sub_20A744EF0(v1[14], v1[19], a1, v1[10], v1[11], v1[12], v1[13], v1[15], v1[16], v1[17], v1[18], v1[20], v1[21], v1[22], v1[23]);
}

uint64_t sub_20A745448(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouTitleViewLayoutOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A7454AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouTitleViewLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A745508()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  double v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4270();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20A8C3F70();
  sub_20A8C3F60();
  sub_20A8C3F50();
  swift_release();
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  v6[15] = 0;
  sub_20A4B00C0();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC69068 = result;
  return result;
}

uint64_t static Settings.UserPreferences.showCurrency.getter()
{
  return sub_20A454F34(&qword_26AC69070);
}

uint64_t sub_20A7456B0()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  double v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C4270();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2BC0();
  double v9 = MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, void, double))(v11 + 104))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7A838], v9);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D110], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  sub_20A745934();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC69078 = result;
  return result;
}

uint64_t static Settings.UserPreferences.chartDateRange.getter()
{
  return sub_20A454F34(&qword_26AC69088);
}

ValueMetadata *type metadata accessor for Settings.UserPreferences()
{
  return &type metadata for Settings.UserPreferences;
}

void sub_20A745934()
{
  if (!qword_26AC692D8)
  {
    sub_20A8C2BC0();
    sub_20A745998();
    unint64_t v0 = sub_20A8C42D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC692D8);
    }
  }
}

unint64_t sub_20A745998()
{
  unint64_t result = qword_26AC68D58;
  if (!qword_26AC68D58)
  {
    sub_20A8C2BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68D58);
  }
  return result;
}

uint64_t type metadata accessor for BilingualFeedCommandHandler()
{
  return self;
}

void sub_20A745A14()
{
}

unint64_t sub_20A745A3C()
{
  unint64_t result = qword_26763DA08;
  if (!qword_26763DA08)
  {
    type metadata accessor for BilingualFeedCommandHandler();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DA08);
  }
  return result;
}

void sub_20A745A90()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 40);
  double v3 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t v4 = *(void *)(v2 - 8);
  double v5 = MEMORY[0x270FA5388](v3);
  double v7 = (char *)&v12[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  sub_20A8C3500();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  sub_20A4342F4(v1, (uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_20A8C3510();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v10 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  MEMORY[0x210527DD0](v10);
}

uint64_t sub_20A745CB0(uint64_t a1)
{
  uint64_t v3 = sub_20A8C4AB0();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C2530();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C3F00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v49 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A746E24(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  double v20 = (char *)&v46 - v19;
  uint64_t v56 = &unk_26BEE0E78;
  uint64_t v21 = swift_dynamicCastObjCProtocolConditional();
  if (!v21) {
    return 0;
  }
  CGFloat v22 = (void *)v21;
  swift_unknownObjectRetain();
  sub_20A74647C(v22, v1, (uint64_t)v20);
  sub_20A44D308((uint64_t)v20, (uint64_t)v17);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12);
  uint64_t v47 = v20;
  uint64_t v48 = a1;
  if (v23 == 1)
  {
    sub_20A746E88((uint64_t)v17, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
    uint64_t v24 = v53;
    id v28 = [v22 URL];
    sub_20A8C24E0();

    uint64_t v29 = sub_20A73F3E0((uint64_t)v8);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v54 + 8);
    v30(v8, v24);
    if (v29)
    {
      __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI21ActionPreviewActivity_handler), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI21ActionPreviewActivity_handler + 24));
      id v31 = objc_msgSend(v22, (SEL)&selRef_blackColor);
      sub_20A8C24E0();

      uint64_t v32 = v52;
      sub_20A8C4CE0();
      v30(v8, v24);
      uint64_t v34 = v50;
      uint64_t v33 = v51;
      int v35 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v32, v51);
      if (v35 == *MEMORY[0x263F58988])
      {
        (*(void (**)(char *, uint64_t))(v34 + 96))(v32, v33);
        swift_bridgeObjectRelease();
        sub_20A73FD60();
        uint64_t v37 = &v32[*(int *)(v36 + 48)];
        uint64_t v38 = sub_20A8C5390();
        (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
        uint64_t v39 = (uint64_t)v47;
      }
      else
      {
        uint64_t v39 = (uint64_t)v47;
        if (v35 != *MEMORY[0x263F58998])
        {
          sub_20A746E88((uint64_t)v47, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
          return v29;
        }
        (*(void (**)(char *, uint64_t))(v34 + 96))(v32, v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_20A73FCE4();
        uint64_t v41 = &v32[*(int *)(v40 + 64)];
        uint64_t v42 = sub_20A8C5390();
        (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
      }
      id v43 = objc_allocWithZone((Class)sub_20A8C95C0());
      uint64_t v29 = sub_20A8C95B0();
      swift_unknownObjectRelease();
      sub_20A746E88(v39, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
    }
    else
    {
      sub_20A746E88((uint64_t)v20, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v25 = v49;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v49, v17, v12);
    uint64_t v46 = v1;
    uint64_t v55 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8StocksUI21ActionPreviewActivity_router) + 112);
    sub_20A4F6DE4();
    uint64_t v27 = *(int *)(v26 + 48);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v11, v25, v12);
    *(void *)&v11[v27] = 0;
    type metadata accessor for StocksActivity.StockFeed(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_20A491334();
    sub_20A4B2B68((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
    swift_retain();
    sub_20A8CBCA0();
    sub_20A4EF9E0((uint64_t)v11);
    swift_release();
    id v44 = objc_allocWithZone((Class)sub_20A8C95C0());
    uint64_t v29 = sub_20A8C95B0();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
    sub_20A746E88((uint64_t)v47, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  }
  return v29;
}

uint64_t sub_20A74647C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v28[1] = a2;
  uint64_t v34 = a3;
  uint64_t v4 = sub_20A8C5E90();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v29 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A746E24(0, (unint64_t *)&unk_26AC676B0, MEMORY[0x263F7CE40], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t v9 = sub_20A8C5ED0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C2530();
  id v13 = objc_msgSend(a1, "URL", MEMORY[0x270FA5388](v12 - 8));
  sub_20A8C24E0();

  sub_20A8C60C0();
  swift_allocObject();
  sub_20A8C60A0();
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E0F8];
  sub_20A746E24(0, (unint64_t *)&qword_26AC7FF00, MEMORY[0x263F7CEF8], MEMORY[0x263F8E0F8]);
  sub_20A8C6150();
  uint64_t v15 = swift_allocObject();
  long long v33 = xmmword_20A8D3DC0;
  *(_OWORD *)(v15 + 16) = xmmword_20A8D3DC0;
  sub_20A746E24(0, &qword_26AC7FEF0, MEMORY[0x263F7CED8], v14);
  uint64_t v16 = *(void *)(sub_20A8C60E0() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v33;
  uint64_t v19 = (void *)(v18 + v17);
  void *v19 = 0x6C6F626D7973;
  v19[1] = 0xE600000000000000;
  (*(void (**)(void))(v16 + 104))();
  unint64_t v20 = sub_20A62F630(MEMORY[0x263F8EE78]);
  MEMORY[0x21051E410](0x736B636F7473, 0xE600000000000000, 0, 0, 0, 0, 0, 0, v18, v20);
  sub_20A8C60B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  CGFloat v22 = v30;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v30, v8, v9);
  int v23 = v29;
  sub_20A8C5EB0();
  uint64_t v24 = sub_20A8C5E80();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
  if (v26)
  {
    uint64_t v35 = v24;
    uint64_t v36 = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_20A8C63F0();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v22, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
    swift_release();
    uint64_t v21 = sub_20A8C3F00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v34, 1, 1, v21);
  }
}

uint64_t type metadata accessor for ActionPreviewActivity()
{
  return self;
}

uint64_t sub_20A746C20()
{
  uint64_t v0 = sub_20A8C4F60();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C2530();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = &unk_26BEE0E78;
  uint64_t result = swift_dynamicCastObjCProtocolConditional();
  if (result)
  {
    uint64_t v9 = (void *)result;
    swift_unknownObjectRetain();
    id v10 = [v9 URL];
    sub_20A8C24E0();

    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F58B88], v0);
    sub_20A73DAC0((uint64_t)v7, (uint64_t)v3);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void sub_20A746E24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A746E88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A746E24(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t dispatch thunk of ScrollRestorationManagerType.userActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScrollRestorationManagerType.userActivity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ScrollRestorationManagerType.userActivity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ScrollRestorationManagerType.popScrollPosition(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void sub_20A746F48(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A746FE4(v2, *a1, (uint64_t)&v9);
  if ((void)v10 == 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    long long v6 = 0uLL;
  }
  else
  {
    uint64_t v4 = v9;
    uint64_t v5 = v11;
    long long v8 = v10;
    swift_beginAccess();
    uint64_t v7 = *(void **)(v2 + 16);
    *(void *)(v2 + 16) = 0;

    long long v6 = v8;
  }
  *(void *)a2 = v4;
  *(_OWORD *)(a2 + 8) = v6;
  *(void *)(a2 + 24) = v5;
}

double sub_20A746FE4@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  sub_20A7474B8();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A747520();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for StocksActivity(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v17 = *(void **)(a1 + 16);
  if (!v17) {
    goto LABEL_5;
  }
  uint64_t v36 = v9;
  id v18 = v17;
  id v19 = objc_msgSend(v18, sel_userInfo);
  if (!v19)
  {

LABEL_5:
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    sub_20A747578((uint64_t)v12, (uint64_t (*)(void))sub_20A747520);
    double result = 0.0;
    *(_OWORD *)a3 = xmmword_20A8EBDD0;
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + 24) = 0;
    return result;
  }
  unint64_t v20 = v19;
  uint64_t v34 = v7;
  int v35 = a2;
  uint64_t v37 = (_OWORD *)a3;
  *(void *)&v38[0] = sub_20A8CE180();

  id v21 = objc_msgSend(v18, sel_activityType);
  uint64_t v22 = sub_20A8CE280();
  uint64_t v24 = v23;

  id v25 = objc_msgSend(v18, sel_interaction);
  sub_20A60E534(v22, v24, *(uint64_t *)&v38[0], v12);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  sub_20A491064((uint64_t)v12, (uint64_t)v16);
  uint64_t v27 = (uint64_t)&v36[*(int *)(v34 + 48)];
  unsigned __int8 v28 = v35;
  unsigned char *v36 = v35;
  int v29 = v28;
  sub_20A491064((uint64_t)v16, v27);
  if (v29 || swift_getEnumCaseMultiPayload())
  {
    uint64_t v30 = v37;
    _OWORD *v37 = xmmword_20A8EBDD0;
    *((void *)v30 + 2) = 0;
    *((void *)v30 + 3) = 0;
    sub_20A747578(v27, type metadata accessor for StocksActivity);
  }
  else
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v27;
    uint64_t v31 = *(void *)(v27 + 16);
    uint64_t v32 = *(void *)(v27 + 24);
    swift_bridgeObjectRelease();
    long long v33 = v37;
    double result = v38[0];
    _OWORD *v37 = *(_OWORD *)v38;
    *((void *)v33 + 2) = v31;
    *((void *)v33 + 3) = v32;
  }
  return result;
}

uint64_t sub_20A747370()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScrollRestorationManager()
{
  return self;
}

void *sub_20A7473D4()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void sub_20A747418(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = a1;
}

uint64_t (*sub_20A747460())()
{
  return j__swift_endAccess;
}

void sub_20A7474B8()
{
  if (!qword_26AC6BA08)
  {
    type metadata accessor for StocksActivity(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6BA08);
    }
  }
}

void sub_20A747520()
{
  if (!qword_26AC6C780)
  {
    type metadata accessor for StocksActivity(255);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6C780);
    }
  }
}

uint64_t sub_20A747578(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A7475D8()
{
  uint64_t v0 = sub_20A8C8DF0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TickerLayoutModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A68FEEC();
  sub_20A8C9150();
  sub_20A747970();
  uint64_t v11 = &v9[*(int *)(v10 + 48)];
  long long v12 = *((_OWORD *)v11 + 9);
  v20[8] = *((_OWORD *)v11 + 8);
  v20[9] = v12;
  uint64_t v21 = *((void *)v11 + 20);
  long long v13 = *((_OWORD *)v11 + 5);
  v20[4] = *((_OWORD *)v11 + 4);
  void v20[5] = v13;
  long long v14 = *((_OWORD *)v11 + 7);
  v20[6] = *((_OWORD *)v11 + 6);
  v20[7] = v14;
  long long v15 = *((_OWORD *)v11 + 1);
  v20[0] = *(_OWORD *)v11;
  v20[1] = v15;
  long long v16 = *((_OWORD *)v11 + 3);
  v20[2] = *((_OWORD *)v11 + 2);
  v20[3] = v16;
  sub_20A4C8874((uint64_t)v9, (uint64_t)v6);
  sub_20A7479DC();
  uint64_t v17 = sub_20A8CEB10();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D598], v0);
  sub_20A8C8F00();
  id v18 = (char *)sub_20A8C8F10();
  sub_20A4C95F4((uint64_t)v6, (double *)v20, v18);

  sub_20A4CB210((uint64_t)v20);
  sub_20A4C88D8((uint64_t)v6);
  return v17;
}

uint64_t sub_20A747814()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TickerBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_20A747878()
{
  return sub_20A8CEB30();
}

uint64_t sub_20A7478B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A7475D8();
  *a1 = result;
  return result;
}

uint64_t sub_20A7478E0()
{
  return sub_20A747A70(&qword_26AC6FF50, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
}

uint64_t sub_20A747928()
{
  return sub_20A747A70(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

void sub_20A747970()
{
  if (!qword_26AC6DA40)
  {
    type metadata accessor for StockViewModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6DA40);
    }
  }
}

void sub_20A7479DC()
{
  if (!qword_26AC6A138)
  {
    type metadata accessor for TickerView();
    sub_20A747A70(&qword_26AC6CA60, (void (*)(uint64_t))type metadata accessor for TickerView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A138);
    }
  }
}

uint64_t sub_20A747A70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A747AB8()
{
  sub_20A4E8B40(0, (unint64_t *)&qword_26AC6AB40, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - v3;
  sub_20A4E8B40(0, (unint64_t *)&unk_26AC6AB78, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9EA00 = result;
  return result;
}

char *sub_20A747BE8(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel;
  id v11 = objc_allocWithZone(MEMORY[0x263F828E0]);
  long long v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI9StockView_companyLabel;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong;
  *(void *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel;
  *(void *)&v12[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI9StockView_priceLabel;
  *(void *)&v12[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton;
  *(void *)&v12[v17] = sub_20A74A2F8();
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI9StockView_sparklineView;
  *(void *)&v12[v18] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockSparklineView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v12[OBJC_IVAR____TtC8StocksUI9StockView_axElement] = 0;
  v12[OBJC_IVAR____TtC8StocksUI9StockView_isSelected] = 0;
  *(void *)&v12[OBJC_IVAR____TtC8StocksUI9StockView_revision] = 0;
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI9StockView_isEditing;
  LOBYTE(v41[0]) = 0;
  sub_20A74A660(0, (unint64_t *)&unk_26AC6AA78, MEMORY[0x263F8D4F8], MEMORY[0x263F7DFF8]);
  swift_allocObject();
  *(void *)&v12[v19] = sub_20A8CB3A0();
  unint64_t v20 = &v12[OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions];
  *(void *)unint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  *(void *)&v12[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString] = 0;
  uint64_t v21 = &v12[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyLabel];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  uint64_t v22 = &v12[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyName];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  v12[OBJC_IVAR____TtC8StocksUI9StockView_accessibilitySymbolLabelSpeechType] = 1;

  v43.receiver = v12;
  v43.super_class = ObjectType;
  int v23 = (char *)objc_msgSendSuper2(&v43, sel_initWithFrame_, a1, a2, a3, a4, v41[0]);
  uint64_t v24 = *(void **)&v23[OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel];
  id v25 = v23;
  objc_msgSend(v25, sel_addSubview_, v24);
  uint64_t v26 = *(void **)&v25[OBJC_IVAR____TtC8StocksUI9StockView_companyLabel];
  objc_msgSend(v25, sel_addSubview_, v26);
  uint64_t v27 = *(void **)&v25[OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong];
  objc_msgSend(v25, sel_addSubview_, v27);
  unsigned __int8 v28 = *(void **)&v25[OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel];
  objc_msgSend(v25, sel_addSubview_, v28);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC8StocksUI9StockView_priceLabel]);
  int v29 = *(void **)&v25[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];
  objc_msgSend(v25, sel_addSubview_, v29);
  objc_msgSend(v25, sel_addSubview_, *(void *)&v25[OBJC_IVAR____TtC8StocksUI9StockView_sparklineView]);
  objc_msgSend(v24, sel_setNumberOfLines_, 0);
  objc_msgSend(v26, sel_setNumberOfLines_, 1);
  objc_msgSend(v27, sel_setNumberOfLines_, 1);
  objc_msgSend(v28, sel_setNumberOfLines_, 0);
  objc_msgSend(v28, sel_setAlpha_, 0.0);
  objc_msgSend(v27, sel_setAlpha_, 0.0);
  id v30 = objc_msgSend(v29, sel_titleLabel);
  if (v30)
  {
    uint64_t v31 = v30;
    objc_msgSend(v30, sel_setTextAlignment_, 1);
  }
  uint64_t v32 = (objc_class *)type metadata accessor for StockView.StockViewAXElement();
  id v33 = objc_allocWithZone(v32);
  swift_unknownObjectWeakInit();
  v42.receiver = v33;
  v42.super_class = v32;
  uint64_t v34 = v25;
  id v35 = objc_msgSendSuper2(&v42, sel_initWithAccessibilityContainer_, v34);
  swift_unknownObjectWeakAssign();

  uint64_t v36 = *(void **)&v34[OBJC_IVAR____TtC8StocksUI9StockView_axElement];
  *(void *)&v34[OBJC_IVAR____TtC8StocksUI9StockView_axElement] = v35;

  uint64_t v37 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v41[4] = sub_20A74A658;
  void v41[5] = v37;
  v41[0] = MEMORY[0x263EF8330];
  v41[1] = 1107296256;
  _OWORD v41[2] = sub_20A748398;
  v41[3] = &block_descriptor_39;
  uint64_t v38 = _Block_copy(v41);
  uint64_t v39 = v34;
  swift_release();
  objc_msgSend(v39, sel_setAccessibilityElementsBlock_, v38);

  _Block_release(v38);
  return v39;
}

void *sub_20A7480F8(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2105289B0](v1);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = (char *)v2;
  id v4 = objc_msgSend(self, sel_currentRequest);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_technology);

    uint64_t v7 = (void *)*MEMORY[0x263EFABA8];
    uint64_t v8 = sub_20A8CE280();
    uint64_t v10 = v9;
    if (v8 == sub_20A8CE280() && v10 == v11)
    {
      id v18 = v7;

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v13 = sub_20A8CF760();
      id v14 = v7;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0) {
        goto LABEL_8;
      }
    }

    return 0;
  }
LABEL_8:
  long long v27 = xmmword_20A8D3DC0;
  uint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC8StocksUI9StockView_axElement];
  if (v15)
  {
    uint64_t v16 = type metadata accessor for StockView.StockViewAXElement();
  }
  else
  {
    uint64_t v16 = 0;
    v28[1] = 0;
    void v28[2] = 0;
  }
  v28[0] = v15;
  v28[3] = v16;
  id v19 = v15;
  sub_20A4BE194((uint64_t)v28, (uint64_t)v26);
  sub_20A443438((uint64_t)v26, (uint64_t)&v23);
  if (v24)
  {
    sub_20A441D28(&v23, v25);
    sub_20A441D28(v25, &v23);
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_20A46E07C(0, v17[2] + 1, 1, v17);
    }
    unint64_t v21 = v17[2];
    unint64_t v20 = v17[3];
    if (v21 >= v20 >> 1) {
      uint64_t v17 = sub_20A46E07C((void *)(v20 > 1), v21 + 1, 1, v17);
    }
    v17[2] = v21 + 1;
    sub_20A441D28(&v23, &v17[4 * v21 + 4]);
  }
  else
  {
    sub_20A44349C((uint64_t)&v23);
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
  }

  sub_20A74A660(0, (unint64_t *)&qword_26AC80170, MEMORY[0x263F8EE58] + 8, MEMORY[0x263F8D8F0]);
  swift_arrayDestroy();
  return v17;
}

id sub_20A748398(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    id v4 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }

  return v4;
}

id sub_20A748604()
{
  return sub_20A7496B8(type metadata accessor for StockView.PriceChangeButton);
}

uint64_t sub_20A748714()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView];
  uint64_t v2 = MEMORY[0x2105289B0](&v0[OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView]);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel);

    id v5 = objc_msgSend(v4, sel_text);
    if (v5)
    {
      uint64_t v6 = sub_20A8CE280();
      uint64_t v8 = v7;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v52 = v6;
    uint64_t v53 = v8;
  }
  else
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
  }
  uint64_t v9 = MEMORY[0x2105289B0](v1);
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    id v11 = *(id *)(v9 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel);

    id v12 = objc_msgSend(v11, sel_text);
    if (v12)
    {
      uint64_t v13 = sub_20A8CE280();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    uint64_t v54 = v13;
    uint64_t v55 = v15;
  }
  else
  {
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  uint64_t v16 = MEMORY[0x2105289B0](v1);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    id v18 = *(id *)(v16 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong);

    id v19 = objc_msgSend(v18, sel_text);
    if (v19)
    {
      uint64_t v20 = sub_20A8CE280();
      uint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      uint64_t v22 = 0;
    }
    uint64_t v56 = v20;
    uint64_t v57 = v22;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v57 = 0;
  }
  uint64_t v23 = MEMORY[0x2105289B0](v1);
  if (v23)
  {
    uint64_t v24 = (void *)v23;
    uint64_t v26 = *(void *)(v23 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyLabel);
    uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyLabel + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v25 = 0;
  }
  uint64_t v58 = v26;
  uint64_t v59 = v25;
  uint64_t v27 = MEMORY[0x2105289B0](v1);
  if (v27)
  {
    unsigned __int8 v28 = (void *)v27;
    uint64_t v30 = *(void *)(v27 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyName);
    uint64_t v29 = *(void *)(v27 + OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyName + 8);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v29 = 0;
  }
  uint64_t v60 = v30;
  uint64_t v61 = v29;
  id v31 = objc_msgSend(v0, sel_accessibilityLabel);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_20A8CE280();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  uint64_t v36 = 0;
  uint64_t v62 = v33;
  uint64_t v63 = v35;
  uint64_t v37 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v39 = &v52 + 2 * v36;
    unint64_t v40 = v39[1];
    if (!v40) {
      goto LABEL_30;
    }
    uint64_t v41 = *v39;
    uint64_t v42 = HIBYTE(v40) & 0xF;
    if ((v40 & 0x2000000000000000) == 0) {
      uint64_t v42 = v41 & 0xFFFFFFFFFFFFLL;
    }
    if (!v42) {
      goto LABEL_30;
    }
    uint64_t v43 = v37[2];
    if (!v43) {
      goto LABEL_42;
    }
    BOOL v44 = v37[4] == v41 && v40 == v37[5];
    if (!v44 && (sub_20A8CF760() & 1) == 0)
    {
      if (v43 == 1) {
        goto LABEL_42;
      }
      if (v37[6] != v41 || v40 != v37[7])
      {
        uint64_t result = sub_20A8CF760();
        if ((result & 1) == 0) {
          break;
        }
      }
    }
LABEL_30:
    if (++v36 == 6)
    {
      sub_20A74A660(0, (unint64_t *)&qword_26AC686A0, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      return (uint64_t)v37;
    }
  }
  if (v43 == 2)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_20A46DEBC(0, v43 + 1, 1, v37);
    }
    unint64_t v46 = v37[2];
    unint64_t v45 = v37[3];
    if (v46 >= v45 >> 1) {
      uint64_t v37 = sub_20A46DEBC((void *)(v45 > 1), v46 + 1, 1, v37);
    }
    _OWORD v37[2] = v46 + 1;
    uint64_t v38 = &v37[2 * v46];
    v38[4] = v41;
    void v38[5] = v40;
    goto LABEL_30;
  }
  uint64_t v48 = v37 + 9;
  uint64_t v49 = 2;
  while (1)
  {
    uint64_t v50 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (*(v48 - 1) == v41 && v40 == *v48) {
      goto LABEL_30;
    }
    uint64_t result = sub_20A8CF760();
    if (result) {
      goto LABEL_30;
    }
    v48 += 2;
    ++v49;
    if (v50 == v43) {
      goto LABEL_42;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A748BB8()
{
  uint64_t v1 = MEMORY[0x2105289B0](v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = *(uint64_t (**)(void))(v1 + OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions);
  sub_20A480ED4((uint64_t)v3);

  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = v3();
  sub_20A459CA4((uint64_t)v3);
  return v4;
}

uint64_t sub_20A748DD0()
{
  uint64_t v1 = MEMORY[0x2105289B0](v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (unsigned char *)v1;
  id v3 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong), sel_text);
  unint64_t v4 = 0x263F08000uLL;
  id v5 = &off_263FDE000;
  if (v3)
  {
    uint64_t v6 = v3;
    sub_20A8CE280();

    id v7 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v8 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, sel_initWithString_, v8);
  }
  else
  {
    id v9 = 0;
  }
  id v11 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel], sel_text);
  if (!v11)
  {
    id v25 = 0;
    goto LABEL_18;
  }
  id v12 = v11;
  sub_20A8CE280();

  sub_20A74A25C(0, (unint64_t *)&qword_26AC80108, (void (*)(uint64_t))sub_20A431D64);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  uint64_t v14 = (void *)*MEMORY[0x263F83220];
  *(void *)(inited + 32) = *MEMORY[0x263F83220];
  *(void *)(inited + 64) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 40) = 1;
  id v15 = v14;
  sub_20A4CF8B0(inited);
  sub_20A74A25C(0, &qword_26763D9E8, type metadata accessor for AccessibilityTechnology);
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_20A8D4540;
  uint64_t v17 = (void *)*MEMORY[0x263EFABB8];
  *(void *)(v16 + 32) = *MEMORY[0x263EFABB8];
  id v18 = (void *)*MEMORY[0x263EFABB0];
  *(void *)(v16 + 40) = *MEMORY[0x263EFABB0];
  id v19 = self;
  id v20 = v17;
  id v21 = v18;
  id v22 = objc_msgSend(v19, sel_currentRequest);
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = objc_msgSend(v22, sel_technology);

    LOBYTE(v23) = sub_20A5973F8((uint64_t)v24, v16);
    swift_setDeallocating();
    type metadata accessor for AccessibilityTechnology(0);
    swift_arrayDestroy();
    if (v23)
    {
      id v5 = &off_263FDE000;
      unint64_t v4 = 0x263F08000;
      if (v2[OBJC_IVAR____TtC8StocksUI9StockView_accessibilitySymbolLabelSpeechType])
      {
        if (v2[OBJC_IVAR____TtC8StocksUI9StockView_accessibilitySymbolLabelSpeechType] != 1)
        {
          swift_bridgeObjectRelease();
          sub_20A4CF8B0(MEMORY[0x263F8EE78]);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = swift_initStackObject();
        uint64_t v43 = (void **)MEMORY[0x263F83230];
        *(_OWORD *)(v42 + 16) = xmmword_20A8D3DC0;
        BOOL v44 = *v43;
        *(void *)(v42 + 32) = v44;
        *(void *)(v42 + 64) = MEMORY[0x263F8D4F8];
        *(unsigned char *)(v42 + 40) = 1;
        id v45 = v44;
        sub_20A4CF8B0(v42);
        sub_20A8CE300();
        swift_bridgeObjectRelease();
      }
      goto LABEL_17;
    }
  }
  else
  {
    swift_setDeallocating();
    type metadata accessor for AccessibilityTechnology(0);
    swift_arrayDestroy();
  }
  id v5 = &off_263FDE000;
  unint64_t v4 = 0x263F08000uLL;
LABEL_17:
  id v26 = objc_allocWithZone(*(Class *)(v4 + 1696));
  uint64_t v27 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A74A2B0((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  unsigned __int8 v28 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v26, sel_initWithString_attributes_, v27, v28);

LABEL_18:
  sub_20A8CB3B0();
  if (v46 != 2
    && (v46 & 1) != 0
    && (id v29 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel], sel_text)) != 0)
  {
    uint64_t v30 = v29;
    sub_20A8CE280();

    id v31 = objc_allocWithZone(*(Class *)(v4 + 1696));
    uint64_t v32 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v31, (SEL)v5[445], v32);
  }
  else
  {
    id v33 = 0;
  }
  id v34 = objc_allocWithZone(*(Class *)(v4 + 1696));
  uint64_t v35 = (void *)sub_20A8CE240();
  id v36 = objc_msgSend(v34, (SEL)v5[445], v35);

  sub_20A74A25C(0, &qword_26AC80100, (void (*)(uint64_t))sub_20A48C4A8);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_20A8D5CB0;
  *(void *)(v37 + 32) = v9;
  *(void *)(v37 + 40) = v25;
  *(void *)(v37 + 48) = v33;
  sub_20A8CE620();
  id v38 = v33;
  id v39 = v9;
  id v40 = v25;
  uint64_t v10 = sub_20A8C82D0();

  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_20A74937C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView;
  uint64_t v2 = MEMORY[0x2105289B0](v0 + OBJC_IVAR____TtCC8StocksUI9StockView18StockViewAXElement_stockView);
  if (v2)
  {
    id v3 = (void *)v2;
    swift_retain();

    sub_20A8CB3B0();
    swift_release();
    if (v26) {
      return 0;
    }
  }
  uint64_t v4 = MEMORY[0x2105289B0](v1);
  if (!v4) {
    return 0;
  }
  id v5 = (char *)v4;
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton;
  id v7 = objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton), sel_accessibilityLabel);
  if (!v7)
  {

    return 0;
  }
  uint64_t v8 = v7;
  sub_20A8CE280();

  id v9 = objc_msgSend(*(id *)&v5[v6], sel_accessibilityValue);
  if (!v9)
  {

LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = v9;
  sub_20A8CE280();

  id v11 = *(void **)&v5[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString];
  if (!v11)
  {

    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v12 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v13 = v11;
  uint64_t v14 = (void *)sub_20A8CE240();
  id v15 = objc_msgSend(v12, sel_initWithString_, v14);

  sub_20A74A25C(0, &qword_26AC80100, (void (*)(uint64_t))sub_20A48C4A8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20A8D5CB0;
  *(void *)(v16 + 32) = v11;
  id v17 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v25 = v13;
  id v18 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithString_, v18);

  *(void *)(v16 + 40) = v19;
  id v20 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v21 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v20, sel_initWithString_, v21);

  *(void *)(v16 + 48) = v22;
  sub_20A8CE620();
  uint64_t v23 = sub_20A8C82D0();

  swift_bridgeObjectRelease();
  return v23;
}

id sub_20A7496A0()
{
  return sub_20A7496B8(type metadata accessor for StockView.StockViewAXElement);
}

id sub_20A7496B8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for StockView()
{
  return self;
}

uint64_t type metadata accessor for StockView.PriceChangeButton()
{
  return self;
}

uint64_t type metadata accessor for StockView.StockViewAXElement()
{
  return self;
}

uint64_t sub_20A749874()
{
  uint64_t v1 = (unsigned __int8 *)(*v0 + OBJC_IVAR____TtC8StocksUI9StockView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_20A7498C0(char a1)
{
  objc_super v3 = (unsigned char *)(*v1 + OBJC_IVAR____TtC8StocksUI9StockView_isSelected);
  uint64_t result = swift_beginAccess();
  *objc_super v3 = a1;
  return result;
}

uint64_t (*sub_20A749910())()
{
  return j__swift_endAccess;
}

uint64_t sub_20A749970(char a1)
{
  swift_getObjectType();
  sub_20A8CB3B0();
  char v3 = v9;
  if (v9 == 2) {
    char v3 = a1;
  }
  if (v3) {
    double v4 = 0.0;
  }
  else {
    double v4 = 1.0;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(double *)(v5 + 24) = v4;
  sub_20A74A2B0(&qword_26AC7F3E8, v6, (void (*)(uint64_t))type metadata accessor for StockView);
  id v7 = v1;
  sub_20A8CB890();
  return swift_release();
}

id sub_20A749A88(uint64_t a1, double a2)
{
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI9StockView_sparklineView), sel_setAlpha_);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI9StockView_priceLabel), sel_setAlpha_, a2);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton), sel_setAlpha_, a2);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel), sel_setAlpha_, a2);
  double v4 = 1.0 - a2;
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel), sel_setAlpha_, v4);
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong);

  return objc_msgSend(v5, sel_setAlpha_, v4);
}

uint64_t sub_20A749B58(char a1)
{
  return sub_20A749970(a1);
}

void sub_20A749B7C(uint64_t a1, uint64_t a2)
{
  sub_20A74A2B0(&qword_26AC7F3F0, a2, (void (*)(uint64_t))type metadata accessor for StockView);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A749BE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(char **)(v0 + OBJC_IVAR____TtC8StocksUI9StockView_sparklineView);
  char v3 = (void *)sub_20A8CDC10();
  objc_msgSend(v3, sel_setImage_, 0);

  double v4 = *(void **)&v2[OBJC_IVAR____TtC8StocksUI18StockSparklineView_baselineIndicatorLayer];
  double v5 = 0.0;
  objc_msgSend(v4, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, sel_setPath_, 0);
  uint64_t v6 = *(char **)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton);
  id v7 = *(id *)&v6[OBJC_IVAR____TtCC8StocksUI9StockView17PriceChangeButton_onTap];

  sub_20A8CB3B0();
  if (v10 != 2)
  {
    if (v10) {
      double v8 = 0.0;
    }
    else {
      double v8 = 1.0;
    }
    if (v10) {
      double v5 = 1.0;
    }
    objc_msgSend(v2, sel_setAlpha_, v8);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_priceLabel), sel_setAlpha_, v8);
    objc_msgSend(v6, sel_setAlpha_, v8);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel), sel_setAlpha_, v8);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel), sel_setAlpha_, v5);
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong), sel_setAlpha_, v5);
  }
  return sub_20A8CB3D0();
}

uint64_t sub_20A749D8C()
{
  return sub_20A749BE8();
}

uint64_t sub_20A749DB0()
{
  uint64_t v1 = *v0 + OBJC_IVAR____TtC8StocksUI9StockView_revision;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_20A749DFC(uint64_t a1)
{
  char v3 = (void *)(*v1 + OBJC_IVAR____TtC8StocksUI9StockView_revision);
  uint64_t result = swift_beginAccess();
  *char v3 = a1;
  return result;
}

uint64_t (*sub_20A749E4C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_20A749F30()
{
  sub_20A8CB3E0();
  if (v5 != 1) {
    return 0;
  }
  id v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8StocksUI9StockView_companyLabel), sel_text);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

unsigned char *storeEnumTagSinglePayload for StockView.AccessibilitySymbolLabelSpeechType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A74A140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockView.AccessibilitySymbolLabelSpeechType()
{
  return &type metadata for StockView.AccessibilitySymbolLabelSpeechType;
}

unint64_t sub_20A74A17C()
{
  unint64_t result = qword_26763DC40;
  if (!qword_26763DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DC40);
  }
  return result;
}

uint64_t sub_20A74A1D0(uint64_t a1, uint64_t a2)
{
  return sub_20A74A2B0(&qword_26AC7F3E8, a2, (void (*)(uint64_t))type metadata accessor for StockView);
}

uint64_t sub_20A74A218()
{
  return swift_deallocObject();
}

id sub_20A74A250()
{
  return sub_20A749A88(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_20A74A25C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF730();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A74A2B0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_20A74A2F8()
{
  type metadata accessor for StockView.PriceChangeButton();
  uint64_t v0 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);
  id v1 = *(id *)&v0[OBJC_IVAR____TtCC8StocksUI9StockView17PriceChangeButton_onTap];
  sub_20A8CB530();

  id v2 = objc_msgSend(v0, sel_titleLabel);
  if (v2)
  {
    int v3 = v2;
    objc_msgSend(v2, sel_setAdjustsFontSizeToFitWidth_, 1);
  }
  id v4 = objc_msgSend(v0, sel_titleLabel);
  if (v4)
  {
    uint64_t v5 = v4;
    objc_msgSend(v4, sel_ts_setWantsUnderlineForAccessibilityButtonShapesEnabled_, 0);
  }
  return v0;
}

void sub_20A74A3CC()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI9StockView_symbolLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI9StockView_companyLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI9StockView_companyLabelLong;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI9StockView_exchangeLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8StocksUI9StockView_priceLabel;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton;
  *(void *)&v0[v6] = sub_20A74A2F8();
  uint64_t v7 = OBJC_IVAR____TtC8StocksUI9StockView_sparklineView;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockSparklineView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI9StockView_axElement] = 0;
  v0[OBJC_IVAR____TtC8StocksUI9StockView_isSelected] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI9StockView_revision] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8StocksUI9StockView_isEditing;
  sub_20A74A660(0, (unint64_t *)&unk_26AC6AA78, MEMORY[0x263F8D4F8], MEMORY[0x263F7DFF8]);
  swift_allocObject();
  *(void *)&v0[v8] = sub_20A8CB3A0();
  char v9 = &v0[OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions];
  *char v9 = 0;
  v9[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityPriceString] = 0;
  char v10 = &v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyLabel];
  *char v10 = 0;
  v10[1] = 0;
  id v11 = &v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilityUserInputCompanyName];
  *id v11 = 0;
  v11[1] = 0;
  v0[OBJC_IVAR____TtC8StocksUI9StockView_accessibilitySymbolLabelSpeechType] = 1;

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A74A620()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void *sub_20A74A658()
{
  return sub_20A7480F8(v0);
}

void sub_20A74A660(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A74A6AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8CF110();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C9830();
  double v8 = MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v12;
  uint64_t v48 = v11;
  (*(void (**)(char *, uint64_t, double))(v12 + 16))(v10, a1, v8);
  sub_20A8C9710();
  double v14 = v13;
  sub_20A8C9710();
  double v16 = v15;
  sub_20A8C9720();
  double v18 = v17;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  id v20 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  unint64_t v21 = sub_20A431DD0();
  swift_bridgeObjectRetain();
  id v22 = v20;
  uint64_t v23 = sub_20A8CEE20();
  *(void *)(inited + 64) = v21;
  *(void *)(inited + 40) = v23;
  sub_20A4CF8B0(inited);
  id v24 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v25 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  char v26 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

  sub_20A8CF0F0();
  unsigned __int8 v28 = (void *)sub_20A8CEE20();
  id v29 = objc_msgSend(self, sel_configurationWithFont_, v28);

  sub_20A8CEF80();
  sub_20A8CF010();
  uint64_t v30 = (void *)sub_20A8CE240();
  id v31 = objc_msgSend(self, sel_systemImageNamed_, v30);

  sub_20A8CF0E0();
  sub_20A8CF030();
  sub_20A8CEFE0();
  uint64_t result = sub_20A8CF0D0();
  if (result)
  {
    id v33 = (void *)result;
    uint64_t result = sub_20A8CEF70();
    if (result)
    {
      id v34 = (void *)result;
      double v35 = v18 - v14 - v16;
      id v36 = objc_msgSend(v33, sel_imageWithConfiguration_, result);

      objc_msgSend(v36, sel_size);
      sub_20A8CEFD0();
      sub_20A8CF000();
      sub_20A8CEC70();
      double v38 = v37;
      sub_20A8CF000();
      CGFloat v41 = v35 + v39 + v40;
      sub_20A8CF000();
      CGFloat v44 = v38 + v42 + v43;
      v51.origin.CGFloat x = 0.0;
      v51.origin.CGFloat y = 0.0;
      v51.size.CGFloat width = v41;
      v51.size.CGFloat height = v44;
      CGFloat Height = CGRectGetHeight(v51);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
      *(CGFloat *)a2 = Height;
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(CGFloat *)(a2 + 24) = v41;
      *(CGFloat *)(a2 + 32) = v44;
      uint64_t WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v49 + 32))(a2 + *(int *)(WatchlistViewLayoutAttributes + 24), v6, v50);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CreateWatchlistViewLayoutAttributesFactory()
{
  return self;
}

double UIEdgeInsets.macUnscaled.getter()
{
  sub_20A8C49E0();
  double v1 = v0;
  sub_20A8C49E0();
  sub_20A8C49E0();
  sub_20A8C49E0();
  return v1;
}

uint64_t sub_20A74ABC8()
{
  sub_20A4C76AC(0);
  sub_20A8C6670();
  swift_retain();
  double v0 = (void *)sub_20A8C6450();
  sub_20A63A2D8(0);
  uint64_t v1 = sub_20A8C64F0();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_20A74AC74(uint64_t *a1, void *a2)
{
  uint64_t v5 = sub_20A8C3190();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v23 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_20A8C59F0();
  uint64_t v8 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  char v10 = (void *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_20A7032A4(*a1);
  uint64_t v21 = v2;
  __swift_project_boxed_opaque_existential_1(a2 + 7, a2[10]);
  uint64_t v12 = sub_20A8C3930();
  uint64_t v24 = v11;
  sub_20A4ACD80(v12);
  uint64_t v13 = a2[10];
  v19[1] = a2[11];
  __swift_project_boxed_opaque_existential_1(a2 + 7, v13);
  __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
  sub_20A8C3AC0();
  sub_20A8C3070();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  *char v10 = v15;
  uint64_t v16 = v20;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7CD70], v20);
  uint64_t v17 = sub_20A8C3940();
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v16);
  return v17;
}

uint64_t sub_20A74AED8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockMetadataRefreshManager()
{
  return self;
}

uint64_t sub_20A74AF4C()
{
  uint64_t v0 = sub_20A8C5CA0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A74AFBC()
{
  sub_20A8C5C70();
  sub_20A63A2D8(0);
  swift_retain();
  sub_20A8C5C20();

  return swift_release();
}

uint64_t sub_20A74B038()
{
  return sub_20A74AF4C();
}

uint64_t sub_20A74B040()
{
  return sub_20A74ABC8();
}

uint64_t sub_20A74B048()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_20A8C3700();
}

uint64_t sub_20A74B094(uint64_t *a1)
{
  return sub_20A74AC74(a1, v1);
}

uint64_t sub_20A74B0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_20A8C2BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a3, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7A838])
  {
    id v10 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
    uint64_t v11 = (void *)sub_20A8C2730();
    id v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    uint64_t v13 = sub_20A8CE280();
    unint64_t v15 = v14;

    uint64_t v46 = v13;
    unint64_t v47 = v15;
    sub_20A8CE3D0();
    id v16 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    uint64_t v17 = (void *)sub_20A8C2730();
    id v18 = objc_msgSend(v16, sel_stringFromDate_, v17);

    sub_20A8CE280();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    id v19 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    uint64_t v20 = (void *)sub_20A8C2730();
    id v21 = objc_msgSend(v19, sel_stringFromDate_, v20);
  }
  else
  {
    if (v9 != *MEMORY[0x263F7A840])
    {
      id v36 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
      double v37 = (void *)sub_20A8C2730();
      id v38 = objc_msgSend(v36, sel_stringFromDate_, v37);

      uint64_t v39 = sub_20A8CE280();
      unint64_t v41 = v40;

      uint64_t v46 = v39;
      unint64_t v47 = v41;
      sub_20A8CE3D0();
      id v42 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
      double v43 = (void *)sub_20A8C2730();
      id v44 = objc_msgSend(v42, sel_stringFromDate_, v43);

      sub_20A8CE280();
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v35 = v46;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return v35;
    }
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_20A8CF3C0();
    id v22 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
    uint64_t v23 = (void *)sub_20A8C2730();
    id v24 = objc_msgSend(v22, sel_stringFromDate_, v23);

    uint64_t v25 = sub_20A8CE280();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();

    uint64_t v46 = v25;
    unint64_t v47 = v27;
    sub_20A8CE3D0();
    id v28 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    id v29 = (void *)sub_20A8C2730();
    id v30 = objc_msgSend(v28, sel_stringFromDate_, v29);

    sub_20A8CE280();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    id v31 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
    uint64_t v32 = (void *)sub_20A8C2730();
    id v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

    sub_20A8CE280();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    id v19 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    uint64_t v20 = (void *)sub_20A8C2730();
    id v21 = objc_msgSend(v19, (SEL)&selRef_scrollViewDidEndDecelerating_, v20);
  }
  id v34 = v21;

  sub_20A8CE280();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  return v46;
}

uint64_t sub_20A74B690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C2BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a2, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  int v10 = *MEMORY[0x263F7A838];
  int v11 = *MEMORY[0x263F7A840];
  id v12 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___dateFormatter, (SEL *)&selRef_setDateStyle_, 2);
  v32[1] = a1;
  uint64_t v13 = (void *)sub_20A8C2730();
  id v14 = objc_msgSend(v12, sel_stringFromDate_, v13);

  uint64_t v15 = sub_20A8CE280();
  uint64_t v17 = v16;

  if (v9 == v10 || v9 == v11)
  {
    uint64_t v19 = v17;
    id v20 = sub_20A74B9B0(&OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter____lazy_storage___timeFormatter, (SEL *)&selRef_setTimeStyle_, 1);
    id v21 = (void *)sub_20A8C2730();
    id v22 = objc_msgSend(v20, sel_stringFromDate_, v21);

    uint64_t v23 = sub_20A8CE280();
    uint64_t v25 = v24;

    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v27 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A43F778();
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_20A8D4540;
    uint64_t v29 = MEMORY[0x263F8D310];
    *(void *)(v28 + 56) = MEMORY[0x263F8D310];
    unint64_t v30 = sub_20A43F830();
    *(void *)(v28 + 32) = v15;
    *(void *)(v28 + 40) = v19;
    *(void *)(v28 + 96) = v29;
    *(void *)(v28 + 104) = v30;
    *(void *)(v28 + 64) = v30;
    *(void *)(v28 + 72) = v23;
    *(void *)(v28 + 80) = v25;
    uint64_t v15 = sub_20A8CE250();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return v15;
}

id sub_20A74B9B0(uint64_t *a1, SEL *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    uint64_t v9 = v3;
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    objc_msgSend(v10, *a2, a3);
    int v11 = (void *)sub_20A8C2AB0();
    objc_msgSend(v10, sel_setTimeZone_, v11);

    id v12 = *(void **)(v9 + v4);
    *(void *)(v9 + v4) = v10;
    id v6 = v10;

    uint64_t v5 = 0;
  }
  id v13 = v5;
  return v6;
}

uint64_t sub_20A74BA70()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI30StockChartCalloutDateFormatter_timezone;
  uint64_t v2 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A74BB30()
{
  return type metadata accessor for StockChartCalloutDateFormatter();
}

uint64_t type metadata accessor for StockChartCalloutDateFormatter()
{
  uint64_t result = qword_26AC79E00;
  if (!qword_26AC79E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A74BB84()
{
  uint64_t result = sub_20A8C2AF0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void *sub_20A74BC20()
{
  unint64_t v1 = v0;
  sub_20A74D05C(0, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
  MEMORY[0x270FA5388](v2 - 8);
  CGFloat v89 = (char *)v85 - v3;
  uint64_t v4 = sub_20A8C9F40();
  uint64_t v86 = *(void *)(v4 - 8);
  uint64_t v87 = v4;
  MEMORY[0x270FA5388](v4);
  CGFloat v88 = (char *)v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v94 = *(void *)(v6 - 8);
  uint64_t v95 = v6;
  MEMORY[0x270FA5388](v6);
  CGFloat v93 = (char *)v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A74D05C(0, &qword_26AC69040, MEMORY[0x263F7AFD8]);
  MEMORY[0x270FA5388](v8 - 8);
  CGFloat v92 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)v85 - v11;
  uint64_t v13 = type metadata accessor for StockViewModel();
  uint64_t v91 = *(void *)(v13 - 8);
  uint64_t v14 = *(void *)(v91 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  double v97 = (char *)v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v85 - v16;
  MEMORY[0x270FA5388](v18);
  id v20 = (char *)v85 - v19;
  uint64_t v21 = type metadata accessor for StockSearchLayoutModel();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A68FE58();
  sub_20A8C9150();
  sub_20A695CD0();
  uint64_t v25 = (uint64_t)&v23[*(int *)(v24 + 48)];
  unint64_t v26 = &v23[*(int *)(v24 + 64)];
  uint64_t v116 = *((void *)v26 + 28);
  long long v27 = *((_OWORD *)v26 + 13);
  long long v114 = *((_OWORD *)v26 + 12);
  long long v115 = v27;
  long long v28 = *((_OWORD *)v26 + 11);
  long long v112 = *((_OWORD *)v26 + 10);
  long long v113 = v28;
  long long v29 = *((_OWORD *)v26 + 9);
  long long v110 = *((_OWORD *)v26 + 8);
  long long v111 = v29;
  long long v30 = *((_OWORD *)v26 + 7);
  long long v108 = *((_OWORD *)v26 + 6);
  long long v109 = v30;
  long long v31 = *((_OWORD *)v26 + 5);
  long long v106 = *((_OWORD *)v26 + 4);
  long long v107 = v31;
  long long v32 = *((_OWORD *)v26 + 1);
  long long v102 = *(_OWORD *)v26;
  long long v103 = v32;
  long long v33 = *((_OWORD *)v26 + 3);
  long long v104 = *((_OWORD *)v26 + 2);
  long long v105 = v33;
  sub_20A4C8874((uint64_t)v23, (uint64_t)v20);
  CGFloat v96 = v12;
  sub_20A692D54(v25, (uint64_t)v12);
  sub_20A74D0B0();
  id v34 = (void *)sub_20A8CEB10();
  id v35 = objc_msgSend(v34, sel_backgroundView);
  double v98 = v20;
  if (v35)
  {
    id v36 = v35;
    swift_beginAccess();
    uint64_t v38 = v1[7];
    uint64_t v37 = v1[8];
    uint64_t v39 = __swift_project_boxed_opaque_existential_1(v1 + 4, v38);
    CGFloat v90 = v85;
    unint64_t v40 = v34;
    uint64_t v41 = *(void *)(v38 - 8);
    double v42 = MEMORY[0x270FA5388](v39);
    id v44 = (char *)v85 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v41 + 16))(v44, v42);
    id v45 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v37 + 16) + 56))(v38);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v38);
    id v34 = v40;
    objc_msgSend(v36, sel_setBackgroundColor_, v45);

    id v20 = v98;
  }
  sub_20A74C6FC(v34);
  uint64_t v46 = swift_allocObject();
  CGFloat v90 = (void *)(v46 + 16);
  swift_unknownObjectUnownedInit();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_release();
  sub_20A4A2540((uint64_t)v20, (uint64_t)v17);
  sub_20A4A2540((uint64_t)v17, (uint64_t)v97);
  unint64_t v47 = (*(unsigned __int8 *)(v91 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
  unint64_t v48 = (v14 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v1;
  sub_20A4C8874((uint64_t)v17, v49 + v47);
  unint64_t v50 = v49 + v48;
  long long v51 = v115;
  *(_OWORD *)(v50 + 192) = v114;
  *(_OWORD *)(v50 + 208) = v51;
  *(void *)(v50 + 224) = v116;
  long long v52 = v111;
  *(_OWORD *)(v50 + 128) = v110;
  *(_OWORD *)(v50 + 144) = v52;
  long long v53 = v113;
  *(_OWORD *)(v50 + 160) = v112;
  *(_OWORD *)(v50 + 176) = v53;
  long long v54 = v107;
  *(_OWORD *)(v50 + 64) = v106;
  *(_OWORD *)(v50 + 80) = v54;
  long long v55 = v109;
  *(_OWORD *)(v50 + 96) = v108;
  *(_OWORD *)(v50 + 112) = v55;
  long long v56 = v103;
  *(_OWORD *)unint64_t v50 = v102;
  *(_OWORD *)(v50 + 16) = v56;
  long long v57 = v105;
  *(_OWORD *)(v50 + 32) = v104;
  *(_OWORD *)(v50 + 48) = v57;
  *(void *)(v49 + ((v48 + 239) & 0xFFFFFFFFFFFFFFF8)) = v46;
  swift_unownedRetain();
  uint64_t v91 = v46;
  swift_retain();
  uint64_t v58 = (void *)sub_20A8C9950();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_20A74D4FC;
  *(void *)(v59 + 24) = v49;
  swift_retain();

  swift_release();
  uint64_t v60 = (void *)sub_20A8C98F0();
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_20A74D4FC;
  *(void *)(v61 + 24) = v49;
  swift_retain();

  swift_release();
  uint64_t v62 = (void *)sub_20A8C9900();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_20A74D4FC;
  *(void *)(v63 + 24) = v49;
  swift_retain();

  swift_release();
  id v64 = v92;
  sub_20A4AF8DC((uint64_t)v96, (uint64_t)v92);
  uint64_t v66 = v94;
  uint64_t v65 = v95;
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v94 + 48))(v64, 1, v95) == 1)
  {
    sub_20A74D618((uint64_t)v64, &qword_26AC69040, MEMORY[0x263F7AFD8]);
  }
  else
  {
    uint64_t v67 = v93;
    (*(void (**)(char *, id, uint64_t))(v66 + 32))(v93, v64, v65);
    uint64_t v68 = (char *)sub_20A8C9920();
    CGFloat v92 = (char *)*(id *)&v68[OBJC_IVAR____TtC8StocksUI19StockSearchCellView_watchlistSelectionButton];

    uint64_t v69 = v1[11];
    v85[1] = v1[12];
    v85[2] = v69;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))(v88, *MEMORY[0x263F7DA50], v87);
    uint64_t v70 = v1[13];
    uint64_t v100 = sub_20A8C4990();
    uint64_t v101 = sub_20A74D5D0((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    uint64_t v99 = v70;
    long long v117 = 0u;
    long long v118 = 0u;
    char v119 = 1;
    sub_20A8C99D0();
    swift_allocObject();
    swift_retain();
    CGFloat v88 = (char *)sub_20A8C99B0();
    uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    uint64_t v72 = v66;
    uint64_t v73 = (uint64_t)v89;
    v71(v89, v67, v65);
    uint64_t v74 = type metadata accessor for WatchlistMembershipCommandContext(0);
    uint64_t v75 = v73 + *(int *)(v74 + 20);
    uint64_t v76 = sub_20A8C3F00();
    uint64_t v77 = v34;
    uint64_t v78 = *(void *)(v76 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 16))(v75, v98, v76);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v76);
    id v34 = v77;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v73, 0, 1, v74);
    id v79 = v92;
    sub_20A8C9090();

    swift_release();
    sub_20A74D618(v73, &qword_26763ACE8, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v93, v95);
  }
  swift_unownedRetainStrong();
  swift_unknownObjectRetain();
  swift_release();
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v81 = (char *)sub_20A8C9920();

  uint64_t v82 = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_20A8C98E0();

  uint64_t v83 = (uint64_t)v97;
  sub_20A856A8C(v97, (double *)&v102, v81, 0);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_unownedRelease();
  sub_20A4C88D8(v83);
  sub_20A74D618((uint64_t)v96, &qword_26AC69040, MEMORY[0x263F7AFD8]);
  sub_20A4C88D8((uint64_t)v98);
  return v34;
}

uint64_t sub_20A74C6FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C8DF0();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v40 = (uint64_t **)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_20A8CB1A0();
  uint64_t v38 = *(void *)(v6 - 8);
  uint64_t v39 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C9A90();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void *)sub_20A8C98C0();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 56);
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v2 + 32), *(void *)(v2 + 56));
  uint64_t v16 = *(void *)(v13 - 8);
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v16 + 16))(v19, v17);
  id v20 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v14 + 16) + 80))(v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v13);
  objc_msgSend(v12, sel_setBackgroundColor_, v20);

  uint64_t v21 = (void *)sub_20A8C98C0();
  sub_20A8C9A80();

  uint64_t v22 = (void *)sub_20A8C98C0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7D8D8], v8);
  sub_20A8C9AA0();

  objc_msgSend(a1, sel_setFocusEffect_, 0);
  uint64_t v23 = (void *)sub_20A8C98C0();
  sub_20A8C9A70();

  uint64_t v24 = (void *)MEMORY[0x2105289B0](v2 + 16);
  if (v24)
  {
    id v25 = objc_msgSend(v24, sel_presentingViewController);
    id v26 = objc_msgSend(v25, sel_splitViewController);
    swift_unknownObjectRelease();
  }
  long long v27 = v37;
  sub_20A8CB190();
  long long v28 = (uint64_t *)swift_allocObject();
  uint64_t v29 = MEMORY[0x263F7DF78];
  uint64_t v30 = v39;
  v28[5] = v39;
  v28[6] = v29;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28 + 2);
  uint64_t v32 = v38;
  (*(void (**)(uint64_t *, char *, uint64_t))(v38 + 16))(boxed_opaque_existential_1, v27, v30);
  id v34 = v40;
  uint64_t v33 = v41;
  void *v40 = v28;
  (*(void (**)(uint64_t **, void, uint64_t))(v33 + 104))(v34, *MEMORY[0x263F7D5A0], v42);
  sub_20A8C9910();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v27, v30);
}

void sub_20A74CB54(uint64_t a1, void *a2, double *a3)
{
  swift_unownedRetainStrong();
  swift_unknownObjectRetain();
  swift_release();
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v7 = (char *)sub_20A8C9920();

  uint64_t v6 = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_20A8C98E0();

  sub_20A856A8C(a2, a3, v7, 0);
  swift_unknownObjectRelease();
}

uint64_t sub_20A74CC10()
{
  sub_20A4380C4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockSearchBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_20A74CC8C()
{
  return sub_20A8CEB30();
}

void *sub_20A74CCC4@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_20A74BC20();
  *a1 = result;
  return result;
}

uint64_t sub_20A74CCF4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_20A42BEBC(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  return sub_20A8CA6E0();
}

uint64_t sub_20A74CE0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_horizontalSizeClass) == (id)2)
  {
    sub_20A53D428();
    uint64_t v6 = *(int *)(v4 + 48);
    sub_20A8CB2F0();
  }
  else
  {
    sub_20A53D428();
    uint64_t v6 = *(int *)(v5 + 48);
    sub_20A8CB2E0();
  }
  swift_beginAccess();
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[8];
  long long v9 = __swift_project_boxed_opaque_existential_1(v2 + 4, v7);
  uint64_t v10 = *(void *)(v7 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v13, v11);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)(v8 + 16) + 144))(v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v7);
  *(void *)(a2 + v6) = v14;
  uint64_t v15 = *MEMORY[0x263F7DFA8];
  uint64_t v16 = sub_20A8CB260();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
}

uint64_t sub_20A74CFCC()
{
  return sub_20A74D5D0(&qword_26AC74170, (void (*)(uint64_t))type metadata accessor for StockSearchLayoutModel);
}

uint64_t sub_20A74D014()
{
  return sub_20A74D5D0(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

void sub_20A74D05C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A74D0B0()
{
  if (!qword_26AC67768)
  {
    type metadata accessor for StockSearchCellView();
    sub_20A74D5D0(qword_26AC71530, (void (*)(uint64_t))type metadata accessor for StockSearchCellView);
    unint64_t v0 = sub_20A8C9960();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC67768);
    }
  }
}

uint64_t sub_20A74D144()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A74D17C()
{
  uint64_t v1 = (int *)type metadata accessor for StockViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_unownedRelease();
  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v3 + v1[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v3 + v1[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v3 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v3 + v1[8];
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_release();

  return swift_deallocObject();
}

void sub_20A74D4FC()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = (double *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_20A74CB54(v3, (void *)(v0 + v2), v4);
}

uint64_t sub_20A74D598()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A74D5D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A74D618(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A74D05C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A74D674()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

id sub_20A74D6B4(uint64_t a1, uint64_t a2)
{
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v5 = result;
    unsigned __int8 v6 = objc_msgSend(result, sel_currentReachabilityStatus);

    if ((v6 & 0x10) != 0) {
      return (id)a1;
    }
    else {
      return (id)a2;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A74D728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C76F0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C7900();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (unint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_6:
    uint64_t v20 = sub_20A8C76E0();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v22 = a2;
    return v21(v22, 1, 1, v20);
  }
  long long v28 = v7;
  uint64_t v29 = v5;
  uint64_t v30 = v4;
  uint64_t v31 = v9;
  uint64_t v33 = a2;
  uint64_t v15 = *(void (**)(unint64_t *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v14 = v9 + 16;
  uint64_t v13 = v15;
  uint64_t v16 = a1;
  uint64_t v17 = a1 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
  int v18 = *MEMORY[0x263F59FE0];
  uint64_t v19 = *(void *)(v14 + 56);
  uint64_t v32 = v16;
  swift_bridgeObjectRetain();
  while (1)
  {
    v13(v11, v17, v8);
    if ((*(unsigned int (**)(unint64_t *, uint64_t))(v14 + 72))(v11, v8) == v18) {
      break;
    }
    (*(void (**)(unint64_t *, uint64_t))(v14 - 8))(v11, v8);
    v17 += v19;
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      a2 = v33;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t *, uint64_t))(v31 + 96))(v11, v8);
  unint64_t v24 = *v11;
  unint64_t v25 = v11[2];
  swift_bridgeObjectRelease();
  if (!v25)
  {
    uint64_t v20 = sub_20A8C76E0();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v22 = v33;
    return v21(v22, 1, 1, v20);
  }
  if (v24 >= 0x15)
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, **((unsigned int **)&unk_263FDD3B8 + v24), v30);
    uint64_t v26 = v33;
    sub_20A8C76C0();
    uint64_t v27 = sub_20A8C76E0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  }
  return result;
}

uint64_t sub_20A74DA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C77E0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C7900();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11)
  {
LABEL_6:
    uint64_t v19 = sub_20A8C77D0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 1, 1, v19);
  }
  uint64_t v27 = v6;
  uint64_t v28 = a2;
  uint64_t v26 = v8;
  uint64_t v14 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v12 = v8 + 16;
  uint64_t v13 = v14;
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
  int v16 = *MEMORY[0x263F59FE8];
  uint64_t v17 = a1;
  uint64_t v18 = *(void *)(v12 + 56);
  uint64_t v29 = v17;
  swift_bridgeObjectRetain();
  while (1)
  {
    v13(v10, v15, v7);
    if ((*(unsigned int (**)(void *, uint64_t))(v12 + 72))(v10, v7) == v16) {
      break;
    }
    (*(void (**)(void *, uint64_t))(v12 - 8))(v10, v7);
    v15 += v18;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      a2 = v28;
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v26 + 96))(v10, v7);
  uint64_t v21 = v10[2];
  uint64_t v23 = v10[5];
  uint64_t v22 = v10[6];
  swift_bridgeObjectRelease();
  uint64_t result = FCFeedGroupType.groupType()(v21, (uint64_t)v27);
  if (v23 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v23 < (uint64_t)0xFFFFFFFF80000000 || v22 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_14;
  }
  if (v22 > 0x7FFFFFFF)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v24 = v28;
  sub_20A8C77B0();
  uint64_t v25 = sub_20A8C77D0();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 0, 1, v25);
}

uint64_t sub_20A74DD64()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_20A74DDA4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A74DE18(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A74DE18(uint64_t a1, uint64_t a2)
{
  uint64_t v76 = a2;
  sub_20A447F18();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v67 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_20A8C2830();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v69 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StocksAudioTrack();
  uint64_t v75 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v66 = (id *)((char *)&v64 - v10);
  sub_20A447E84();
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v71 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (id *)((char *)&v64 - v18);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v64 - v21;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v64 - v24;
  uint64_t v68 = a1;
  sub_20A8C4F70();
  uint64_t v73 = v4;
  sub_20A8C4F70();
  uint64_t v26 = *(int *)(v12 + 56);
  uint64_t v27 = v75;
  uint64_t v28 = (uint64_t)&v14[v26];
  sub_20A7591E4((uint64_t)v25, (uint64_t)v14, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_20A7591E4((uint64_t)v22, v28, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  uint64_t v30 = v27 + 48;
  uint64_t v29 = v31;
  if (v31((uint64_t)v14, 1, v7) == 1)
  {
    sub_20A759174((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A759174((uint64_t)v25, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    if (v29(v28, 1, v7) == 1)
    {
      uint64_t v32 = (uint64_t)v14;
LABEL_14:
      uint64_t result = sub_20A759174(v32, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
      uint64_t v33 = v74;
      uint64_t v34 = v76;
      goto LABEL_26;
    }
    goto LABEL_6;
  }
  sub_20A7591E4((uint64_t)v14, (uint64_t)v19, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  if (v29(v28, 1, v7) == 1)
  {
    sub_20A759174((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A759174((uint64_t)v25, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A7590AC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_6:
    uint64_t v65 = v29;
    sub_20A7590AC((uint64_t)v14, (uint64_t (*)(void))sub_20A447E84);
    uint64_t v33 = v74;
    uint64_t v34 = v76;
LABEL_7:
    if ((sub_20A8C4F80() & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_20A8C48C0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    if (v33[5])
    {
      uint64_t v35 = v33[5];
    }
    else
    {
      uint64_t v35 = v33[4];
      swift_retain();
    }
    type metadata accessor for AudioSessionManager.Session();
    uint64_t v46 = swift_allocObject();
    swift_retain();
    unint64_t v47 = v69;
    sub_20A8C2820();
    uint64_t v48 = sub_20A8C2810();
    uint64_t v50 = v49;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v47, v72);
    *(void *)(v46 + 16) = v48;
    *(void *)(v46 + 24) = v50;
    *(unsigned char *)(v46 + 48) = 1;
    *(void *)(v46 + 56) = 0;
    *(void *)(v46 + 64) = 0;
    *(void *)(v46 + 32) = v35;
    *(void *)(v46 + 40) = 0;
    v33[13] = v46;
    swift_release();
    if ((sub_20A8C4F80() & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      sub_20A8C48B0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v33[5] = 0;
    swift_release();
    uint64_t v51 = (uint64_t)v71;
    sub_20A8C4F70();
    if (v65(v51, 1, v7) == 1)
    {
      uint64_t result = sub_20A759174(v51, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    }
    else
    {
      uint64_t v52 = v51;
      uint64_t v53 = v64;
      sub_20A759268(v52, v64, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      swift_beginAccess();
      long long v54 = (void (*)(uint64_t))v33[14];
      if (v54)
      {
        swift_endAccess();
        swift_retain();
        v54(v53);
        sub_20A459CA4((uint64_t)v54);
        sub_20A7590AC(v53, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      }
      else
      {
        sub_20A7590AC(v53, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
        swift_endAccess();
      }
      uint64_t v56 = v33[14];
      v33[14] = 0;
      v33[15] = 0;
      uint64_t result = sub_20A459CA4(v56);
    }
    goto LABEL_26;
  }
  uint64_t v65 = v29;
  uint64_t v75 = v30;
  uint64_t v36 = v66;
  sub_20A759268(v28, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  id v37 = objc_msgSend(*v19, sel_identifier);
  uint64_t v38 = sub_20A8CE280();
  uint64_t v40 = v39;

  id v41 = objc_msgSend(*v36, sel_identifier);
  uint64_t v42 = sub_20A8CE280();
  uint64_t v44 = v43;

  if (v38 == v42 && v40 == v44)
  {
    swift_bridgeObjectRelease_n();
    sub_20A7590AC((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    sub_20A759174((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A759174((uint64_t)v25, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    sub_20A7590AC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    uint64_t v32 = (uint64_t)v14;
    goto LABEL_14;
  }
  char v55 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20A7590AC((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  sub_20A759174((uint64_t)v22, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_20A759174((uint64_t)v25, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  sub_20A7590AC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t result = sub_20A759174((uint64_t)v14, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  uint64_t v33 = v74;
  uint64_t v34 = v76;
  if ((v55 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_26:
  if (*(unsigned char *)(v33[13] + 48) == 1)
  {
    uint64_t v57 = v67;
    sub_20A75910C(v34, v67, (uint64_t (*)(void))sub_20A447F18);
    if (swift_getEnumCaseMultiPayload())
    {
      return sub_20A7590AC(v57, (uint64_t (*)(void))sub_20A447F18);
    }
    else
    {
      sub_20A63B744();
      uint64_t v59 = *(void *)(v57 + v58[12]);
      uint64_t v60 = v57 + v58[16];
      char v61 = *(unsigned char *)(v57 + v58[20]);
      uint64_t v62 = sub_20A8C4E20();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v60, v62);
      uint64_t result = sub_20A7590AC(v57, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
      if ((v61 & 1) == 0)
      {
        uint64_t v63 = v33[13];
        *(void *)(v63 + 40) = v59;
        *(unsigned char *)(v63 + 48) = 0;
      }
    }
  }
  return result;
}

uint64_t sub_20A74E7D4()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  sub_20A459CA4(*(void *)(v0 + 112));
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  return v0;
}

uint64_t sub_20A74E83C()
{
  sub_20A74E7D4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioSessionManager()
{
  return self;
}

uint64_t type metadata accessor for AudioSessionManager.Session()
{
  return self;
}

uint64_t sub_20A74E8B8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v132 = a3;
  unint64_t v119 = a2;
  unint64_t v115 = a1;
  uint64_t v134 = sub_20A8C6C70();
  uint64_t v117 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v116 = v4;
  long long v133 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6C60();
  uint64_t v130 = *(void *)(v5 - 8);
  uint64_t v131 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v127 = v6;
  long long v136 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C71C0();
  uint64_t v128 = *(void *)(v7 - 8);
  uint64_t v129 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v126 = v8;
  long long v135 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_20A8C6C80();
  uint64_t v104 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  long long v103 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  long long v106 = (char *)&v102 - v12;
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v10);
  MEMORY[0x270FA5388](v13 - 8);
  long long v113 = (char *)&v102 - v14;
  uint64_t v114 = type metadata accessor for StocksAudioTrack();
  uint64_t v112 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  long long v109 = (void (*)())((char *)&v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A447F18();
  uint64_t v125 = v16;
  MEMORY[0x270FA5388](v16);
  long long v105 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v108 = (uint64_t)&v102 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v110 = (uint64_t)&v102 - v21;
  MEMORY[0x270FA5388](v22);
  long long v111 = (char *)&v102 - v23;
  MEMORY[0x270FA5388](v24);
  long long v118 = (char *)&v102 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v123 = (char *)&v102 - v27;
  MEMORY[0x270FA5388](v28);
  double v124 = (char *)&v102 - v29;
  uint64_t v122 = sub_20A8C2800();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_20A8C2830();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_20A8C4880();
  uint64_t v37 = *(void *)(v36 - 8);
  double v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v102 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = *(void *)(v3 + 16);
  (*(void (**)(char *, void, uint64_t, double))(v37 + 104))(v40, *MEMORY[0x263F24E50], v36, v38);
  sub_20A8C2820();
  sub_20A8C2810();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  sub_20A8C27F0();
  uint64_t v41 = (uint64_t)v123;
  sub_20A8C4670();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v31, v122);
  uint64_t v42 = v137;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v36);
  uint64_t v43 = *(void *)(v42 + 104);
  swift_retain();
  uint64_t v44 = (uint64_t)v124;
  sub_20A8C5D50();
  uint64_t v45 = v44;
  sub_20A75910C(v44, v41, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    double v47 = 0.0;
    unint64_t v48 = v119;
    uint64_t v49 = (uint64_t)v118;
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_6;
    }
    sub_20A63B858();
    double v47 = *(double *)(v41 + *(int *)(v50 + 48));
    uint64_t v51 = v41 + *(int *)(v50 + 64);
    uint64_t v52 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
  }
  else
  {
    sub_20A63B744();
    double v47 = *(double *)(v41 + *(int *)(v53 + 48));
    uint64_t v54 = v41 + *(int *)(v53 + 64);
    uint64_t v55 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
    unint64_t v48 = v119;
    uint64_t v49 = (uint64_t)v118;
  }
  sub_20A7590AC(v41, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_6:
  sub_20A7590AC(v45, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned char *)(v43 + 48) & 1) == 0)
  {
    double v56 = v47 - *(double *)(v43 + 40);
    if (v56 <= 0.0) {
      double v56 = 0.0;
    }
    *(double *)(v43 + 56) = *(double *)(v43 + 56) + v56;
    *(double *)(v43 + 64) = v56;
    *(void *)(v43 + 40) = 0;
    *(unsigned char *)(v43 + 48) = 1;
  }
  swift_release();
  sub_20A8C5D50();
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20A7590AC(v49, (uint64_t (*)(void))sub_20A447F18);
LABEL_14:
    uint64_t v65 = v133;
    uint64_t v64 = v134;
    uint64_t v66 = v117;
    unint64_t v67 = v115;
    goto LABEL_15;
  }
  sub_20A63B744();
  uint64_t v58 = v57;
  uint64_t v59 = v49 + *(int *)(v57 + 64);
  uint64_t v60 = sub_20A8C4E20();
  char v61 = *(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8);
  v61(v59, v60);
  sub_20A7590AC(v49, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v62 = (uint64_t)v111;
  sub_20A8C5D50();
  uint64_t v63 = (uint64_t)v113;
  sub_20A8C4F70();
  sub_20A7590AC(v62, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v63, 1, v114) == 1)
  {
    sub_20A759174(v63, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    goto LABEL_14;
  }
  uint64_t v80 = v63;
  uint64_t v81 = v109;
  sub_20A759268(v80, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  double v124 = *(char **)(v137 + 96);
  uint64_t v82 = v110;
  sub_20A8C5D50();
  uint64_t v83 = v108;
  sub_20A75910C(v82, v108, (uint64_t (*)(void))sub_20A447F18);
  int v84 = swift_getEnumCaseMultiPayload();
  if (!v84) {
    goto LABEL_19;
  }
  if (v84 == 1)
  {
    sub_20A63B858();
    uint64_t v58 = v85;
LABEL_19:
    v61(v83 + *(int *)(v58 + 64), v60);
    sub_20A7590AC(v83, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
  sub_20A7590AC(v110, (uint64_t (*)(void))sub_20A447F18);
  objc_msgSend(*(id *)((char *)v81 + *(int *)(v114 + 24)), sel_duration);
  if (sub_20A8C5780())
  {
    uint64_t v86 = v117;
    uint64_t v87 = (uint64_t *)v81;
    uint64_t v88 = (uint64_t)v106;
    uint64_t v89 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v106, v132, v134);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v86 + 56))(v88, 0, 1, v89);
    uint64_t v90 = (uint64_t)v105;
    sub_20A8C5D50();
    unint64_t v67 = v115;
    sub_20A74F808(v115, v48, v88, v87, v90);
    uint64_t v91 = v90;
    uint64_t v64 = v89;
    sub_20A7590AC(v91, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v88, &qword_26763DC88, MEMORY[0x263F79DA0]);
    uint64_t v92 = (uint64_t)v87;
    uint64_t v66 = v86;
  }
  else
  {
    uint64_t v93 = v104;
    uint64_t v94 = v103;
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v103, *MEMORY[0x263F79DC0], v107);
    uint64_t v95 = v117;
    unint64_t v96 = (unint64_t)v106;
    uint64_t v97 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(v117 + 16))(v106, v132, v134);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v95 + 56))(v96, 0, 1, v97);
    unint64_t v98 = (unint64_t)v105;
    sub_20A8C5D50();
    char v138 = 1;
    uint64_t v99 = v94;
    unint64_t v100 = (unint64_t)v94;
    unint64_t v67 = v115;
    sub_20A74FDA4(v100, v115, v48, v96, v81, v98, 0x100000000uLL);
    uint64_t v101 = v98;
    uint64_t v66 = v95;
    sub_20A7590AC(v101, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v96, &qword_26763DC88, MEMORY[0x263F79DA0]);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v99, v107);
    uint64_t v64 = v97;
    uint64_t v92 = (uint64_t)v81;
  }
  sub_20A7590AC(v92, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v65 = v133;
LABEL_15:
  uint64_t v125 = swift_allocObject();
  uint64_t v68 = v137;
  swift_weakInit();
  uint64_t v69 = v128;
  uint64_t v70 = v129;
  (*(void (**)(char *, unint64_t, uint64_t))(v128 + 16))(v135, v67, v129);
  uint64_t v71 = v130;
  unint64_t v72 = v48;
  uint64_t v73 = v131;
  (*(void (**)(char *, unint64_t, uint64_t))(v130 + 16))(v136, v72, v131);
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v132, v64);
  unint64_t v74 = (*(unsigned __int8 *)(v69 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  unint64_t v75 = (v126 + *(unsigned __int8 *)(v71 + 80) + v74) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  unint64_t v76 = (v127 + *(unsigned __int8 *)(v66 + 80) + v75) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = v125;
  (*(void (**)(unint64_t, char *, uint64_t))(v69 + 32))(v77 + v74, v135, v70);
  (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v77 + v75, v136, v73);
  (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v77 + v76, v133, v134);
  swift_beginAccess();
  uint64_t v78 = *(void *)(v68 + 112);
  *(void *)(v68 + 112) = sub_20A75AA0C;
  *(void *)(v68 + 120) = v77;
  return sub_20A459CA4(v78);
}

uint64_t sub_20A74F808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v53 = a5;
  uint64_t v54 = a3;
  uint64_t v55 = a2;
  uint64_t v62 = sub_20A8C6C60();
  uint64_t v60 = *(void *)(v62 - 8);
  uint64_t v56 = *(void *)(v60 + 64);
  MEMORY[0x270FA5388](v62);
  char v61 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v48 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DA0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v51 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v58 = (uint64_t)&v38 - v8;
  sub_20A447F18();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v46 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v57 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StocksAudioTrack();
  uint64_t v12 = v11 - 8;
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v43 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v38 = (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C4020();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v42 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v44 = *a4;
  uint64_t v21 = (char *)a4 + *(int *)(v12 + 28);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t, double))(v15 + 16);
  uint64_t v49 = (char *)&v38 - v19;
  uint64_t v24 = v23;
  uint64_t v41 = v23;
  v22((char *)&v38 - v19, v21, v23, v18);
  uint64_t v45 = *(void *)(v59 + 104);
  uint64_t v50 = *(void *)(v45 + 32);
  uint64_t v39 = type metadata accessor for StocksAudioTrack;
  sub_20A75910C((uint64_t)a4, (uint64_t)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  ((void (*)(char *, char *, uint64_t))v22)((char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v24);
  uint64_t v40 = sub_20A447F18;
  sub_20A75910C(v53, v57, (uint64_t (*)(void))sub_20A447F18);
  sub_20A7591E4(v54, v58, &qword_26763DC88, v48);
  uint64_t v25 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v55, v62);
  unint64_t v26 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v27 = (v13 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (*(unsigned __int8 *)(v15 + 80) + v28 + 8) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v30 = (v16 + *(unsigned __int8 *)(v47 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v31 = (v46 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (*(unsigned __int8 *)(v52 + 80) + v31 + 8) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v33 = (v51 + *(unsigned __int8 *)(v25 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v34 = swift_allocObject();
  sub_20A759268(v38, v34 + v26, (uint64_t (*)(void))v39);
  *(void *)(v34 + v27) = v44;
  *(void *)(v34 + v28) = v59;
  unint64_t v35 = v34 + v29;
  uint64_t v36 = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v35, v42, v41);
  sub_20A759268(v57, v34 + v30, (uint64_t (*)(void))v40);
  *(void *)(v34 + v31) = v45;
  sub_20A7592D0(v58, v34 + v32);
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v34 + v33, v61, v62);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v36);
  return swift_release();
}

uint64_t sub_20A74FDA4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(), unint64_t a6, unint64_t a7)
{
  unint64_t v73 = a6;
  uint64_t v59 = a5;
  unint64_t v72 = a4;
  unint64_t v76 = a3;
  unint64_t v74 = a2;
  uint64_t v86 = sub_20A8C6C60();
  uint64_t v71 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v69 = v9;
  uint64_t v90 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = *(void *)(v67 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v89 = (uint64_t)&v54 - v11;
  uint64_t v87 = sub_20A8C71C0();
  uint64_t v70 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v66 = v12;
  uint64_t v85 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A447F18();
  uint64_t v63 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v64 = v14;
  uint64_t v83 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StocksAudioTrack();
  uint64_t v61 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v62 = v16;
  uint64_t v80 = (uint64_t)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_20A8C4020();
  uint64_t v84 = *(void *)(v88 - 8);
  uint64_t v17 = *(void *)(v84 + 64);
  MEMORY[0x270FA5388](v88);
  id v79 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v82 = (char *)&v54 - v19;
  uint64_t v20 = sub_20A8C6C80();
  uint64_t v21 = *(void **)(v20 - 8);
  uint64_t v22 = v21[8];
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v24 = MEMORY[0x270FA5388](v23);
  unint64_t v26 = (char *)&v54 - v25;
  unint64_t v27 = (void (*)(char *, unint64_t, uint64_t))v21[2];
  unint64_t v75 = a1;
  uint64_t v55 = v27;
  ((void (*)(char *, unint64_t, uint64_t, double))v27)((char *)&v54 - v25, a1, v20, v24);
  uint64_t v65 = v21;
  unint64_t v28 = (uint64_t (*)(char *, uint64_t))v21[11];
  uint64_t v81 = v20;
  uint64_t v29 = v20;
  unint64_t v30 = (uint64_t *)v59;
  int v31 = v28(v26, v29);
  int v32 = *MEMORY[0x263F79DD8];
  unint64_t v77 = a7;
  if (v31 != v32 && v31 != *MEMORY[0x263F79DE8])
  {
    if (v31 == *MEMORY[0x263F79DB8] || v31 == *MEMORY[0x263F79DC0] || v31 == *MEMORY[0x263F79DD0]) {
      goto LABEL_11;
    }
    if (v31 != *MEMORY[0x263F79DC8]
      && v31 != *MEMORY[0x263F79DB0]
      && v31 != *MEMORY[0x263F79DE0]
      && v31 != *MEMORY[0x263F79DA8])
    {
      sub_20A8CF520();
      __break(1u);
LABEL_11:
      sub_20A753FC0(v75, v74, v76, v72, v30, v73, v77 | ((HIDWORD(a7) & 1) << 32));
    }
  }
  uint64_t v56 = *v30;
  unint64_t v33 = (char *)v30 + *(int *)(v15 + 20);
  uint64_t v34 = v84;
  uint64_t v58 = HIDWORD(a7) & 1;
  unint64_t v35 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
  uint64_t v36 = v82;
  uint64_t v37 = v88;
  v35(v82, v33, v88);
  uint64_t v38 = v91;
  uint64_t v57 = *(void *)(v91 + 104);
  uint64_t v60 = *(void *)(v57 + 32);
  uint64_t v54 = type metadata accessor for StocksAudioTrack;
  sub_20A75910C((uint64_t)v30, v80, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  v35(v79, v36, v37);
  uint64_t v59 = sub_20A447F18;
  sub_20A75910C(v73, v83, (uint64_t (*)(void))sub_20A447F18);
  uint64_t v39 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v85, v74, v87);
  v55(v78, v75, v81);
  sub_20A7591E4(v72, v89, &qword_26763DC88, MEMORY[0x263F79DA0]);
  uint64_t v40 = v71;
  (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v90, v76, v86);
  unint64_t v41 = (*(unsigned __int8 *)(v61 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  unint64_t v62 = (v62 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = (v62 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = v38;
  unint64_t v44 = (*(unsigned __int8 *)(v34 + 80) + v42 + 8) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  unint64_t v45 = (v17 + *(unsigned __int8 *)(v63 + 80) + v44) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v46 = (v64 + *(unsigned __int8 *)(v39 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  unint64_t v73 = (v66 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = v65;
  unint64_t v72 = (*((unsigned __int8 *)v65 + 80) + v73 + 8) & ~(unint64_t)*((unsigned __int8 *)v65 + 80);
  unint64_t v74 = (v22 + v72 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v75 = (*(unsigned __int8 *)(v67 + 80) + v74 + 5) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  unint64_t v76 = (v68 + *(unsigned __int8 *)(v40 + 80) + v75) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v48 = swift_allocObject();
  sub_20A759268(v80, v48 + v41, (uint64_t (*)(void))v54);
  *(void *)(v48 + v62) = v56;
  *(void *)(v48 + v42) = v43;
  unint64_t v49 = v48 + v44;
  uint64_t v50 = v84;
  uint64_t v51 = v88;
  (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v49, v79, v88);
  sub_20A759268(v83, v48 + v45, (uint64_t (*)(void))v59);
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v48 + v46, v85, v87);
  *(void *)(v48 + v73) = v57;
  ((void (*)(unint64_t, char *, uint64_t))v47[4])(v48 + v72, v78, v81);
  unint64_t v52 = v48 + v74;
  *(_DWORD *)unint64_t v52 = v77;
  *(unsigned char *)(v52 + 4) = v58;
  sub_20A7592D0(v89, v48 + v75);
  (*(void (**)(unint64_t, char *, uint64_t))(v40 + 32))(v48 + v76, v90, v86);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v82, v51);
  return swift_release();
}

uint64_t sub_20A750794(void (*a1)(), uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  sub_20A447F18();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_20A8C6C80();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, *MEMORY[0x263F79DB8], v15);
    uint64_t v20 = sub_20A8C6C70();
    double v24 = a1;
    unint64_t v25 = a3;
    uint64_t v21 = v20;
    unint64_t v22 = a4;
    uint64_t v23 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v14, a5, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v21);
    sub_20A8C5D50();
    char v26 = 1;
    sub_20A74FDA4((unint64_t)v18, v25, v22, (unint64_t)v14, v24, (unint64_t)v11, 0x100000000uLL);
    swift_release();
    sub_20A7590AC((uint64_t)v11, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174((uint64_t)v14, &qword_26763DC88, MEMORY[0x263F79DA0]);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_20A750A80(unint64_t a1, unint64_t a2)
{
  unint64_t v55 = a1;
  unint64_t v56 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v57 = (char *)&v51 - v5;
  uint64_t v54 = sub_20A8C6C80();
  uint64_t v60 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v59 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v3);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v51 - v8;
  sub_20A447F18();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v51 - v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v51 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v51 - v20;
  uint64_t v22 = type metadata accessor for StocksAudioTrack();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (void (*)())((char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = v2;
  sub_20A8C5D50();
  uint64_t v53 = v11;
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v21, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22) == 1) {
    return sub_20A759174((uint64_t)v9, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  uint64_t v28 = v54;
  unint64_t v27 = v55;
  unint64_t v29 = v56;
  unint64_t v52 = v25;
  sub_20A759268((uint64_t)v9, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v30 = *(void *)(v61 + 104);
  swift_retain();
  sub_20A8C5D50();
  sub_20A75910C((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v32 = (uint64_t)v18;
  uint64_t v33 = (uint64_t)v15;
  if (!EnumCaseMultiPayload)
  {
    sub_20A63B744();
    double v34 = *(double *)&v15[*(int *)(v43 + 48)];
    unint64_t v44 = &v15[*(int *)(v43 + 64)];
    uint64_t v45 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
    unint64_t v35 = v29;
    unint64_t v36 = v27;
    uint64_t v37 = v28;
    unint64_t v38 = (unint64_t)v57;
    uint64_t v39 = v60;
    goto LABEL_7;
  }
  double v34 = 0.0;
  unint64_t v35 = v29;
  unint64_t v36 = v27;
  uint64_t v37 = v28;
  unint64_t v38 = (unint64_t)v57;
  uint64_t v39 = v60;
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A63B858();
    double v34 = *(double *)(v33 + *(int *)(v40 + 48));
    uint64_t v41 = v33 + *(int *)(v40 + 64);
    uint64_t v42 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
LABEL_7:
    sub_20A7590AC(v33, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
  sub_20A7590AC(v32, (uint64_t (*)(void))sub_20A447F18);
  unint64_t v46 = (unint64_t)v59;
  if ((*(unsigned char *)(v30 + 48) & 1) == 0)
  {
    double v47 = v34 - *(double *)(v30 + 40);
    if (v47 <= 0.0) {
      double v47 = 0.0;
    }
    *(double *)(v30 + 56) = *(double *)(v30 + 56) + v47;
    *(double *)(v30 + 64) = v47;
    *(void *)(v30 + 40) = 0;
    *(unsigned char *)(v30 + 48) = 1;
  }
  swift_release();
  (*(void (**)(unint64_t, void, uint64_t))(v39 + 104))(v46, *MEMORY[0x263F79DC0], v37);
  uint64_t v48 = sub_20A8C6C70();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v38, 1, 1, v48);
  unint64_t v49 = (unint64_t)v58;
  sub_20A8C5D50();
  char v62 = 1;
  uint64_t v50 = v52;
  sub_20A74FDA4(v46, v36, v35, v38, v52, v49, 0x100000000uLL);
  sub_20A7590AC(v49, (uint64_t (*)(void))sub_20A447F18);
  sub_20A759174(v38, &qword_26763DC88, MEMORY[0x263F79DA0]);
  (*(void (**)(unint64_t, uint64_t))(v39 + 8))(v46, v37);
  return sub_20A7590AC((uint64_t)v50, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_20A7510CC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v52 = a3;
  unint64_t v53 = a1;
  unint64_t v54 = a2;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v50 = (char *)v39 - v6;
  uint64_t v51 = sub_20A8C6C80();
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v48 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2800();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2830();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4880();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v4);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v39 - v17;
  sub_20A447F18();
  MEMORY[0x270FA5388](v19);
  unint64_t v44 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v39 - v22;
  uint64_t v24 = type metadata accessor for StocksAudioTrack();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (void (*)())((char *)v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39[1] = *(void *)(v3 + 48);
  sub_20A8C5D50();
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v23, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v24) == 1)
  {
    sub_20A759174((uint64_t)v18, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
    return sub_20A74E8B8(v53, v54, v52);
  }
  else
  {
    sub_20A759268((uint64_t)v18, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
    uint64_t v29 = v42;
    uint64_t v30 = v43;
    (*(void (**)(char *, void, uint64_t))(v42 + 104))(v15, *MEMORY[0x263F24E50], v43);
    sub_20A8C2820();
    sub_20A8C2810();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v41);
    int v31 = v45;
    sub_20A8C27F0();
    sub_20A8C4670();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v47);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v30);
    unint64_t v33 = (unint64_t)v48;
    uint64_t v32 = v49;
    uint64_t v34 = v51;
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, *MEMORY[0x263F79DD0], v51);
    uint64_t v35 = sub_20A8C6C70();
    uint64_t v36 = *(void *)(v35 - 8);
    unint64_t v37 = (unint64_t)v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v50, v52, v35);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v36 + 56))(v37, 0, 1, v35);
    unint64_t v38 = (unint64_t)v44;
    sub_20A8C5D50();
    char v55 = 1;
    sub_20A74FDA4(v33, v53, v54, v37, v27, v38, 0x100000000uLL);
    sub_20A7590AC(v38, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v37, &qword_26763DC88, MEMORY[0x263F79DA0]);
    (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v33, v34);
    return sub_20A7590AC((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
}

uint64_t sub_20A751790(unint64_t a1, unint64_t a2)
{
  unint64_t v30 = a1;
  unint64_t v31 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v28 = (char *)&v26 - v5;
  uint64_t v29 = sub_20A8C6C80();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v3);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v26 - v9;
  sub_20A447F18();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = type metadata accessor for StocksAudioTrack();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (void (*)())((char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = v2;
  sub_20A8C5D50();
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v16, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17) == 1) {
    return sub_20A759174((uint64_t)v10, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  sub_20A759268((uint64_t)v10, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v22 = v27;
  uint64_t v23 = v29;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v7, *MEMORY[0x263F79DB0], v29);
  uint64_t v24 = sub_20A8C6C70();
  unint64_t v25 = (unint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, 1, 1, v24);
  sub_20A8C5D50();
  char v33 = 1;
  sub_20A74FDA4((unint64_t)v7, v30, v31, v25, v20, (unint64_t)v13, 0x100000000uLL);
  sub_20A7590AC((uint64_t)v13, (uint64_t (*)(void))sub_20A447F18);
  sub_20A759174(v25, &qword_26763DC88, MEMORY[0x263F79DA0]);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
  return sub_20A7590AC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_20A751BD8(unint64_t a1, uint64_t a2)
{
  uint64_t v88 = a2;
  unint64_t v92 = a1;
  uint64_t v3 = sub_20A8C2800();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v81 = v3;
  uint64_t v82 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v83 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C6C80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v90 = v6;
  uint64_t v91 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v78 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v87 = (char *)&v75 - v11;
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v9);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v75 - v13;
  sub_20A447F18();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v85 = (char *)&v75 - v19;
  MEMORY[0x270FA5388](v20);
  uint64_t v84 = (char *)&v75 - v21;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v75 - v23;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v75 - v26;
  MEMORY[0x270FA5388](v28);
  unint64_t v30 = (char *)&v75 - v29;
  uint64_t v31 = type metadata accessor for StocksAudioTrack();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (uint64_t *)((char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = v2;
  uint64_t v35 = *(void *)(v2 + 48);
  sub_20A8C5D50();
  uint64_t v86 = v16;
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v30, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v14, 1, v31) == 1) {
    return sub_20A759174((uint64_t)v14, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  unint64_t v76 = v34;
  uint64_t v77 = v31;
  unint64_t v37 = v84;
  unint64_t v38 = v85;
  sub_20A759268((uint64_t)v14, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v39 = *(void *)(v89 + 104);
  swift_retain();
  uint64_t v79 = v35;
  sub_20A8C5D50();
  sub_20A75910C((uint64_t)v27, (uint64_t)v24, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v41 = (uint64_t)v24;
  if (EnumCaseMultiPayload)
  {
    double v42 = 0.0;
    uint64_t v43 = (uint64_t)v37;
    uint64_t v44 = (uint64_t)v38;
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_8;
    }
    sub_20A63B858();
    double v42 = *(double *)(v41 + *(int *)(v45 + 48));
    uint64_t v46 = v41 + *(int *)(v45 + 64);
    uint64_t v47 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
  }
  else
  {
    sub_20A63B744();
    double v42 = *(double *)&v24[*(int *)(v48 + 48)];
    uint64_t v49 = &v24[*(int *)(v48 + 64)];
    uint64_t v50 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v49, v50);
    uint64_t v43 = (uint64_t)v37;
    uint64_t v44 = (uint64_t)v38;
  }
  sub_20A7590AC(v41, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_20A7590AC((uint64_t)v27, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned char *)(v39 + 48) & 1) == 0)
  {
    double v51 = v42 - *(double *)(v39 + 40);
    if (v51 <= 0.0) {
      double v51 = 0.0;
    }
    *(double *)(v39 + 56) = *(double *)(v39 + 56) + v51;
    *(double *)(v39 + 64) = v51;
    *(void *)(v39 + 40) = 0;
    *(unsigned char *)(v39 + 48) = 1;
  }
  swift_release();
  sub_20A8C5D50();
  sub_20A75910C(v43, v44, (uint64_t (*)(void))sub_20A447F18);
  int v52 = swift_getEnumCaseMultiPayload();
  unint64_t v53 = (unint64_t)v87;
  if (!v52)
  {
    sub_20A63B744();
    uint64_t v62 = v44 + *(int *)(v61 + 64);
    uint64_t v63 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
    uint64_t v54 = v88;
    uint64_t v56 = v91;
    unint64_t v55 = v92;
    uint64_t v57 = v90;
    goto LABEL_16;
  }
  uint64_t v54 = v88;
  uint64_t v56 = v91;
  unint64_t v55 = v92;
  uint64_t v57 = v90;
  if (v52 == 1)
  {
    sub_20A63B858();
    uint64_t v59 = v44 + *(int *)(v58 + 64);
    uint64_t v60 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
LABEL_16:
    sub_20A7590AC(v44, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
  sub_20A7590AC(v43, (uint64_t (*)(void))sub_20A447F18);
  uint64_t v64 = v76;
  objc_msgSend(*(id *)((char *)v76 + *(int *)(v77 + 24)), sel_duration);
  if (sub_20A8C5780())
  {
    uint64_t v65 = sub_20A8C6C70();
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v53, 1, 1, v65);
    uint64_t v66 = (uint64_t)v80;
    sub_20A8C5D50();
    sub_20A74F808(v55, v54, v53, v64, v66);
    sub_20A7590AC(v66, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v53, &qword_26763DC88, MEMORY[0x263F79DA0]);
  }
  else
  {
    unint64_t v67 = (unint64_t)v78;
    (*(void (**)(char *, void, uint64_t))(v56 + 104))(v78, *MEMORY[0x263F79DC0], v57);
    uint64_t v68 = sub_20A8C6C70();
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v53, 1, 1, v68);
    uint64_t v69 = v57;
    unint64_t v70 = v54;
    unint64_t v71 = (unint64_t)v80;
    sub_20A8C5D50();
    char v93 = 1;
    sub_20A74FDA4(v67, v55, v70, v53, (void (*)())v64, v71, 0x100000000uLL);
    sub_20A7590AC(v71, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v53, &qword_26763DC88, MEMORY[0x263F79DA0]);
    (*(void (**)(unint64_t, uint64_t))(v56 + 8))(v67, v69);
  }
  uint64_t v72 = v81;
  uint64_t v73 = v82;
  unint64_t v74 = v83;
  sub_20A8C27F0();
  sub_20A8C4660();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v74, v72);
  return sub_20A7590AC((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_20A75252C(unint64_t a1, unint64_t a2, double a3)
{
  unint64_t v63 = a1;
  unint64_t v64 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v66 = (char *)&v62 - v7;
  uint64_t v67 = sub_20A8C6C80();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  unint64_t v71 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v62 - v10;
  sub_20A447F18();
  MEMORY[0x270FA5388](v12);
  uint64_t v69 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v72 = (uint64_t)&v62 - v15;
  MEMORY[0x270FA5388](v16);
  unint64_t v70 = (char *)&v62 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v62 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v62 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v27 = type metadata accessor for StocksAudioTrack();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v30 = (void (*)())((char *)&v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = v3;
  sub_20A8C5D50();
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v26, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v27) == 1) {
    return sub_20A759174((uint64_t)v11, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  uint64_t v62 = v30;
  sub_20A759268((uint64_t)v11, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v32 = v68;
  uint64_t v33 = *(void *)(v68 + 104);
  swift_retain();
  sub_20A8C5D50();
  sub_20A75910C((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    double v35 = 0.0;
    unint64_t v37 = (unint64_t)v66;
    uint64_t v36 = v67;
    uint64_t v38 = v65;
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_8;
    }
    sub_20A63B858();
    double v35 = *(double *)&v20[*(int *)(v39 + 48)];
    uint64_t v40 = &v20[*(int *)(v39 + 64)];
    uint64_t v41 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
  }
  else
  {
    sub_20A63B744();
    double v35 = *(double *)&v20[*(int *)(v42 + 48)];
    uint64_t v43 = &v20[*(int *)(v42 + 64)];
    uint64_t v44 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
    unint64_t v37 = (unint64_t)v66;
    uint64_t v36 = v67;
    uint64_t v38 = v65;
  }
  sub_20A7590AC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_20A7590AC((uint64_t)v23, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned char *)(v33 + 48) & 1) == 0)
  {
    double v45 = v35 - *(double *)(v33 + 40);
    if (v45 <= 0.0) {
      double v45 = 0.0;
    }
    *(double *)(v33 + 56) = *(double *)(v33 + 56) + v45;
    *(double *)(v33 + 64) = v45;
    *(void *)(v33 + 40) = 0;
    *(unsigned char *)(v33 + 48) = 1;
  }
  swift_release();
  uint64_t v46 = *(void *)(v32 + 104);
  *(void *)(v46 + 40) = 0;
  *(unsigned char *)(v46 + 48) = 1;
  unint64_t v47 = (unint64_t)v71;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v71, *MEMORY[0x263F79DE0], v36);
  uint64_t v48 = sub_20A8C6C70();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v37, 1, 1, v48);
  unint64_t v49 = (unint64_t)v70;
  sub_20A8C5D50();
  uint64_t v50 = v72;
  sub_20A8C5D50();
  uint64_t v51 = v69;
  sub_20A75910C(v50, v69, (uint64_t (*)(void))sub_20A447F18);
  int v52 = swift_getEnumCaseMultiPayload();
  if (v52)
  {
    double v53 = 0.0;
    uint64_t v54 = v62;
    if (v52 != 1) {
      goto LABEL_17;
    }
    sub_20A63B858();
    double v53 = *(double *)(v51 + *(int *)(v55 + 48));
    uint64_t v56 = v51 + *(int *)(v55 + 64);
    uint64_t v57 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
  }
  else
  {
    sub_20A63B744();
    double v53 = *(double *)(v51 + *(int *)(v58 + 48));
    uint64_t v59 = v51 + *(int *)(v58 + 64);
    uint64_t v60 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
    uint64_t v54 = v62;
  }
  sub_20A7590AC(v51, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_17:
  uint64_t result = sub_20A7590AC(v72, (uint64_t (*)(void))sub_20A447F18);
  double v61 = v53 - a3;
  if (v53 - a3 <= 0.0) {
    double v61 = 0.0;
  }
  if ((~*(void *)&v61 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v61 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v61 < 2147483650.0)
  {
    char v73 = 0;
    sub_20A74FDA4(v47, v63, v64, v37, v54, v49, (int)v61);
    sub_20A7590AC(v49, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v37, &qword_26763DC88, MEMORY[0x263F79DA0]);
    (*(void (**)(unint64_t, uint64_t))(v38 + 8))(v47, v36);
    return sub_20A7590AC((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_20A752D20(unint64_t a1, unint64_t a2, double a3)
{
  unint64_t v67 = a1;
  unint64_t v68 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v70 = (char *)&v65 - v7;
  uint64_t v71 = sub_20A8C6C80();
  uint64_t v77 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  unint64_t v76 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v65 - v10;
  sub_20A447F18();
  MEMORY[0x270FA5388](v12);
  uint64_t v74 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (char *)&v65 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v75 = (char *)&v65 - v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v65 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v65 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v65 - v25;
  uint64_t v27 = type metadata accessor for StocksAudioTrack();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  unint64_t v30 = (void (*)())((char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = v3;
  sub_20A8C5D50();
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v26, (uint64_t (*)(void))sub_20A447F18);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  uint64_t v73 = v27;
  if (v31(v11, 1, v27) == 1) {
    return (id)sub_20A759174((uint64_t)v11, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  uint64_t v66 = v30;
  sub_20A759268((uint64_t)v11, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v33 = v72;
  uint64_t v34 = *(void *)(v72 + 104);
  swift_retain();
  sub_20A8C5D50();
  sub_20A75910C((uint64_t)v23, (uint64_t)v20, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    double v36 = 0.0;
    unint64_t v38 = (unint64_t)v70;
    uint64_t v37 = v71;
    uint64_t v39 = (uint64_t)v69;
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_8;
    }
    sub_20A63B858();
    double v36 = *(double *)&v20[*(int *)(v40 + 48)];
    uint64_t v41 = (uint64_t)v20;
    uint64_t v42 = &v20[*(int *)(v40 + 64)];
    uint64_t v43 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
  }
  else
  {
    sub_20A63B744();
    double v36 = *(double *)&v20[*(int *)(v44 + 48)];
    uint64_t v41 = (uint64_t)v20;
    double v45 = &v20[*(int *)(v44 + 64)];
    uint64_t v46 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v45, v46);
    unint64_t v38 = (unint64_t)v70;
    uint64_t v37 = v71;
    uint64_t v39 = (uint64_t)v69;
  }
  sub_20A7590AC(v41, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_8:
  sub_20A7590AC((uint64_t)v23, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned char *)(v34 + 48) & 1) == 0)
  {
    double v47 = v36 - *(double *)(v34 + 40);
    if (v47 <= 0.0) {
      double v47 = 0.0;
    }
    *(double *)(v34 + 56) = *(double *)(v34 + 56) + v47;
    *(double *)(v34 + 64) = v47;
    *(void *)(v34 + 40) = 0;
    *(unsigned char *)(v34 + 48) = 1;
  }
  swift_release();
  uint64_t v48 = *(void *)(v33 + 104);
  *(void *)(v48 + 40) = 0;
  *(unsigned char *)(v48 + 48) = 1;
  unint64_t v50 = (unint64_t)v76;
  uint64_t v49 = v77;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, *MEMORY[0x263F79DA8], v37);
  uint64_t v51 = sub_20A8C6C70();
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v38, 1, 1, v51);
  unint64_t v52 = (unint64_t)v75;
  sub_20A8C5D50();
  sub_20A8C5D50();
  uint64_t v53 = v74;
  sub_20A75910C(v39, v74, (uint64_t (*)(void))sub_20A447F18);
  int v54 = swift_getEnumCaseMultiPayload();
  if (v54)
  {
    double v55 = 0.0;
    uint64_t v56 = v66;
    if (v54 != 1) {
      goto LABEL_17;
    }
    sub_20A63B858();
    double v55 = *(double *)(v53 + *(int *)(v57 + 48));
    uint64_t v58 = v53 + *(int *)(v57 + 64);
    uint64_t v59 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
  }
  else
  {
    sub_20A63B744();
    double v55 = *(double *)(v53 + *(int *)(v60 + 48));
    uint64_t v61 = v53 + *(int *)(v60 + 64);
    uint64_t v62 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
    uint64_t v56 = v66;
  }
  sub_20A7590AC(v53, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_17:
  sub_20A7590AC(v39, (uint64_t (*)(void))sub_20A447F18);
  double v63 = v55 + a3;
  id result = objc_msgSend(*(id *)((char *)v56 + *(int *)(v73 + 24)), sel_duration);
  if (v64 >= v63) {
    double v64 = v63;
  }
  if ((~*(void *)&v64 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v64 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v64 < 2147483650.0)
  {
    char v78 = 0;
    sub_20A74FDA4(v50, v67, v68, v38, v56, v52, (int)v64);
    sub_20A7590AC(v52, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v38, &qword_26763DC88, MEMORY[0x263F79DA0]);
    (*(void (**)(unint64_t, uint64_t))(v49 + 8))(v50, v37);
    return (id)sub_20A7590AC((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_20A753530(unint64_t a1, unint64_t a2, double a3)
{
  unint64_t v63 = a1;
  unint64_t v64 = a2;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v62 = (unint64_t)&v54 - v7;
  uint64_t v61 = sub_20A8C6C80();
  uint64_t v66 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  unint64_t v60 = (unint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v54 - v10;
  sub_20A447F18();
  uint64_t v13 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v58 = (void (*)(unint64_t, uint64_t, uint64_t))((char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v54 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v54 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v54 - v22;
  uint64_t v24 = type metadata accessor for StocksAudioTrack();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (void (*)())((char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = v3;
  uint64_t v28 = *(void *)(v3 + 48);
  sub_20A8C5D50();
  uint64_t v59 = v13;
  sub_20A8C4F70();
  sub_20A7590AC((uint64_t)v23, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24) == 1) {
    return sub_20A759174((uint64_t)v11, &qword_26AC6B990, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack);
  }
  sub_20A759268((uint64_t)v11, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  uint64_t v30 = *(void *)(v65 + 104);
  swift_retain();
  sub_20A8C5D50();
  sub_20A75910C((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v32 = (uint64_t)v20;
  if (EnumCaseMultiPayload)
  {
    double v33 = 0.0;
    unint64_t v34 = (unint64_t)v58;
    if (EnumCaseMultiPayload != 1) {
      goto LABEL_8;
    }
    sub_20A63B858();
    double v33 = *(double *)&v17[*(int *)(v35 + 48)];
    double v36 = &v17[*(int *)(v35 + 64)];
    uint64_t v37 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
  }
  else
  {
    sub_20A63B744();
    double v33 = *(double *)&v17[*(int *)(v38 + 48)];
    uint64_t v39 = &v17[*(int *)(v38 + 64)];
    uint64_t v40 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
    unint64_t v34 = (unint64_t)v58;
  }
  sub_20A7590AC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
LABEL_8:
  uint64_t v57 = v28;
  uint64_t v59 = v27;
  sub_20A7590AC(v32, (uint64_t (*)(void))sub_20A447F18);
  if ((*(unsigned char *)(v30 + 48) & 1) == 0)
  {
    double v41 = v33 - *(double *)(v30 + 40);
    if (v41 <= 0.0) {
      double v41 = 0.0;
    }
    *(double *)(v30 + 56) = *(double *)(v30 + 56) + v41;
    *(double *)(v30 + 64) = v41;
    *(void *)(v30 + 40) = 0;
    *(unsigned char *)(v30 + 48) = 1;
  }
  swift_release();
  uint64_t v42 = v66;
  uint64_t v43 = *(void *)(v65 + 104);
  *(void *)(v43 + 40) = 0;
  *(unsigned char *)(v43 + 48) = 1;
  uint64_t v44 = *MEMORY[0x263F79DC0];
  uint64_t v58 = *(void (**)(unint64_t, uint64_t, uint64_t))(v42 + 104);
  unint64_t v45 = v60;
  uint64_t v46 = v61;
  v58(v60, v44, v61);
  uint64_t v47 = sub_20A8C6C70();
  uint64_t v48 = *(void *)(v47 - 8);
  double v55 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
  uint64_t v56 = v48 + 56;
  unint64_t v49 = v62;
  v55(v62, 1, 1, v47);
  sub_20A8C5D50();
  char v68 = 1;
  sub_20A74FDA4(v45, v63, v64, v49, v59, v34, 0x100000000uLL);
  sub_20A7590AC(v34, (uint64_t (*)(void))sub_20A447F18);
  sub_20A759174(v49, &qword_26763DC88, MEMORY[0x263F79DA0]);
  unint64_t v50 = *(void (**)(unint64_t, uint64_t))(v42 + 8);
  uint64_t v66 = v42 + 8;
  v50(v45, v46);
  v58(v45, *MEMORY[0x263F79DD0], v46);
  v55(v49, 1, 1, v47);
  uint64_t result = sub_20A8C5D50();
  if ((~*(void *)&a3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (a3 <= -2147483650.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a3 < 2147483650.0)
  {
    char v67 = 0;
    unint64_t v52 = v59;
    unint64_t v51 = v60;
    uint64_t v53 = v62;
    sub_20A74FDA4(v60, v63, v64, v62, v59, v34, (int)a3);
    sub_20A7590AC(v34, (uint64_t (*)(void))sub_20A447F18);
    sub_20A759174(v53, &qword_26763DC88, MEMORY[0x263F79DA0]);
    v50(v51, v61);
    return sub_20A7590AC((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_20A753C94(unint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_20A74E8B8(a1, a2, a3);
}

uint64_t sub_20A753CB8(unint64_t a1, unint64_t a2)
{
  return sub_20A750A80(a1, a2);
}

uint64_t sub_20A753CDC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_20A7510CC(a1, a2, a3);
}

uint64_t sub_20A753D00(unint64_t a1, unint64_t a2)
{
  return sub_20A751790(a1, a2);
}

uint64_t sub_20A753D24(unint64_t a1, uint64_t a2)
{
  return sub_20A751BD8(a1, a2);
}

uint64_t sub_20A753D48(unint64_t a1, unint64_t a2, double a3)
{
  return sub_20A75252C(a1, a2, a3);
}

id sub_20A753D6C(unint64_t a1, unint64_t a2, double a3)
{
  return sub_20A752D20(a1, a2, a3);
}

uint64_t sub_20A753D90(unint64_t a1, unint64_t a2, double a3)
{
  return sub_20A753530(a1, a2, a3);
}

uint64_t sub_20A753DB4()
{
  uint64_t v1 = v0;
  sub_20A8C7620();
  sub_20A75AB48(&qword_26763DD00, MEMORY[0x263F7A570]);
  sub_20A8C4930();
  sub_20A8C76E0();
  sub_20A75AB48((unint64_t *)&qword_26AC69B30, MEMORY[0x263F7A600]);
  sub_20A8C4930();
  sub_20A8C77D0();
  sub_20A75AB48(&qword_26AC67710, MEMORY[0x263F7A700]);
  sub_20A8C4930();
  uint64_t v2 = sub_20A8C4970();
  sub_20A8C7710();
  sub_20A75AB48((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
  sub_20A8C4930();
  *(void *)(v1 + 40) = v2;

  return swift_release();
}

uint64_t sub_20A753F9C()
{
  return sub_20A753DB4();
}

uint64_t sub_20A753FC0(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v67 = a7;
  uint64_t v57 = a6;
  uint64_t v61 = a1;
  unint64_t v62 = a4;
  unint64_t v65 = a3;
  uint64_t v60 = a2;
  uint64_t v79 = sub_20A8C6C60();
  uint64_t v74 = *(void *)(v79 - 8);
  uint64_t v66 = *(void *)(v74 + 64);
  MEMORY[0x270FA5388](v79);
  char v78 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v55 = (uint64_t (*)(uint64_t))MEMORY[0x263F79DA0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  unint64_t v64 = *(void *)(v9 - 8);
  uint64_t v63 = *(void *)(v64 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v76 = (uint64_t)&v43 - v10;
  uint64_t v75 = sub_20A8C6C80();
  uint64_t v70 = *(void *)(v75 - 8);
  uint64_t v56 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](v75);
  uint64_t v73 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_20A8C71C0();
  uint64_t v68 = *(void *)(v72 - 8);
  uint64_t v54 = *(void *)(v68 + 64);
  MEMORY[0x270FA5388](v72);
  uint64_t v71 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A447F18();
  uint64_t v52 = *(void *)(v13 - 8);
  uint64_t v51 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v69 = (uint64_t)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StocksAudioTrack();
  uint64_t v44 = *(void *)(v15 - 8);
  uint64_t v16 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v45 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C4020();
  uint64_t v48 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  unint64_t v49 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = MEMORY[0x270FA5388](v20);
  uint64_t v50 = *a5;
  uint64_t v43 = v18;
  uint64_t v22 = *(void (**)(double))(v18 + 16);
  uint64_t v24 = (char *)&v43 - v23;
  uint64_t v58 = (char *)&v43 - v23;
  v22(v21);
  uint64_t v53 = *(void *)(v77 + 104);
  uint64_t v59 = *(void *)(v53 + 32);
  uint64_t v46 = type metadata accessor for StocksAudioTrack;
  sub_20A75910C((uint64_t)a5, (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  ((void (*)(char *, char *, uint64_t))v22)((char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v17);
  uint64_t v47 = sub_20A447F18;
  sub_20A75910C(v57, v69, (uint64_t (*)(void))sub_20A447F18);
  uint64_t v25 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v71, v60, v72);
  uint64_t v26 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v73, v61, v75);
  sub_20A7591E4(v62, v76, &qword_26763DC88, v55);
  uint64_t v27 = v74;
  (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v78, v65, v79);
  unint64_t v28 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  unint64_t v29 = (v16 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v18 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v32 = (v19 + *(unsigned __int8 *)(v52 + 80) + v31) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v33 = (v51 + *(unsigned __int8 *)(v25 + 80) + v32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v34 = (v54 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (*(unsigned __int8 *)(v26 + 80) + v34 + 8) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v62 = (v56 + v35 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v64 = (*(unsigned __int8 *)(v64 + 80) + v62 + 5) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  unint64_t v65 = (v63 + *(unsigned __int8 *)(v27 + 80) + v64) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v36 = swift_allocObject();
  sub_20A759268(v45, v36 + v28, (uint64_t (*)(void))v46);
  *(void *)(v36 + v29) = v50;
  *(void *)(v36 + v30) = v77;
  unint64_t v37 = v36 + v31;
  uint64_t v38 = v43;
  uint64_t v39 = v48;
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v37, v49, v48);
  sub_20A759268(v69, v36 + v32, (uint64_t (*)(void))v47);
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v36 + v33, v71, v72);
  *(void *)(v36 + v34) = v53;
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v36 + v35, v73, v75);
  unint64_t v40 = v36 + v62;
  char v41 = BYTE4(v67);
  *(_DWORD *)unint64_t v40 = v67;
  *(unsigned char *)(v40 + 4) = v41 & 1;
  sub_20A7592D0(v76, v36 + v64);
  (*(void (**)(unint64_t, char *, uint64_t))(v74 + 32))(v36 + v65, v78, v79);
  swift_retain_n();
  swift_unknownObjectRetain();
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v58, v39);
  return swift_release();
}

id sub_20A7547BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v130 = a8;
  uint64_t v129 = a7;
  uint64_t v136 = a6;
  v139 = a5;
  uint64_t v105 = a4;
  uint64_t v126 = a3;
  uint64_t v145 = a1;
  uint64_t v13 = sub_20A8C6C60();
  uint64_t v116 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v114 = (uint64_t)&v96 - v18;
  sub_20A447F18();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v112 = (uint64_t)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_20A8C6C80();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v134 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8C7070();
  uint64_t v115 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  long long v113 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, (unint64_t *)&unk_26763DC98, MEMORY[0x263F7A508], v16);
  MEMORY[0x270FA5388](v24 - 8);
  unint64_t v100 = (char *)&v96 - v25;
  uint64_t v128 = sub_20A8C7590();
  uint64_t v133 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  long long v106 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_20A8C71C0();
  uint64_t v27 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v131 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_20A8C6A10();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v127 = (char *)&v96 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_20A8C6FA0();
  uint64_t v124 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  uint64_t v123 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_20A8C7800();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v97 = (char *)&v96 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_20A8C6890();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v102 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_20A8C6CB0();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v120 = (uint64_t)&v96 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_20A8C6A60();
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v96 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_20A8C7870();
  uint64_t v138 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  char v41 = (char *)&v96 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
  if ((~*(void *)&v43 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v43 <= -2147483650.0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v43 >= 2147483650.0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v117 = v30;
  uint64_t v118 = v29;
  uint64_t v119 = v27;
  uint64_t v107 = v22;
  uint64_t v108 = v13;
  long long v109 = v15;
  sub_20A5D7A0C((uint64_t)v38);
  sub_20A8C7860();
  sub_20A759EA4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v142 = v44;
  uint64_t v135 = sub_20A8C4620();
  uint64_t v45 = *(void *)(v135 - 8);
  uint64_t v46 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v47 = (v46 + 32) & ~v46;
  uint64_t v140 = v47 + *(void *)(v45 + 72);
  uint64_t v48 = v46 | 7;
  uint64_t v49 = swift_allocObject();
  long long v146 = xmmword_20A8D3DC0;
  *(_OWORD *)(v49 + 16) = xmmword_20A8D3DC0;
  unsigned int v144 = *MEMORY[0x263F24D48];
  uint64_t v50 = *(void (**)(uint64_t))(v45 + 104);
  uint64_t v141 = v45 + 104;
  v50(v49 + v47);
  sub_20A75AB48(&qword_26763DCA8, MEMORY[0x263F7A7C8]);
  uint64_t v137 = "ssionManager.swift";
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v41, v39);
  uint64_t v143 = v47;
  uint64_t v51 = v126;
  swift_getObjectType();
  uint64_t v52 = v120;
  sub_20A670898(v120);
  uint64_t v138 = v48;
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = v146;
  uint64_t v54 = v53 + v47;
  uint64_t v55 = v135;
  ((void (*)(uint64_t, void, uint64_t))v50)(v54, v144, v135);
  sub_20A75AB48((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  unint64_t v101 = 0x800000020A90D4F0;
  uint64_t v56 = v122;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v57 = v52;
  uint64_t v58 = v51;
  (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v57, v56);
  id v59 = objc_msgSend(v51, sel_sourceChannel);
  if (v59)
  {
    uint64_t v60 = v59;
    __swift_project_boxed_opaque_existential_1((void *)(v105 + 56), *(void *)(v105 + 80));
    uint64_t v61 = v102;
    sub_20A661B70(v60);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = v146;
    ((void (*)(uint64_t, void, uint64_t))v50)(v62 + v143, v144, v55);
    sub_20A75AB48((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v63 = v104;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v61, v63);
  }
  if (objc_msgSend(v58, sel_respondsToSelector_, sel_parentIssue))
  {
    id v64 = objc_msgSend(v58, sel_parentIssue);
    if (v64)
    {
      id v65 = v64;
      id v66 = objc_msgSend(v65, sel_identifier);
      sub_20A8CE280();

      uint64_t v67 = v97;
      sub_20A8C77F0();
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v146;
      ((void (*)(uint64_t, void, uint64_t))v50)(v68 + v143, v144, v55);
      sub_20A75AB48(&qword_26AC69B70, MEMORY[0x263F7A748]);
      uint64_t v69 = v99;
      sub_20A8C45B0();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v67, v69);
    }
  }
  uint64_t v70 = v123;
  sub_20A454470();
  v139 = v50;
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = v146;
  uint64_t v72 = v144;
  ((void (*)(uint64_t, void, uint64_t))v139)(v71 + v143, v144, v55);
  sub_20A75AB48(&qword_26AC69A30, MEMORY[0x263F79FB8]);
  uint64_t v73 = v125;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v70, v73);
  uint64_t v74 = v127;
  sub_20A755C30();
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v146;
  ((void (*)(uint64_t, uint64_t, uint64_t))v139)(v75 + v143, v72, v55);
  sub_20A75AB48(&qword_26763DCB0, MEMORY[0x263F79B60]);
  uint64_t v76 = v118;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v76);
  uint64_t v77 = *MEMORY[0x263F7A158];
  uint64_t v78 = v119;
  uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v119 + 104);
  uint64_t v81 = v131;
  uint64_t v80 = v132;
  v79(v131, v77, v132);
  sub_20A75AB48(&qword_26763DCB8, MEMORY[0x263F7A160]);
  uint64_t v82 = v129;
  char v83 = sub_20A8CE210();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v81, v80);
  if (v83)
  {
    sub_20A75AB48(&qword_26763DCC0, MEMORY[0x263F7A508]);
    uint64_t v84 = (uint64_t)v100;
    uint64_t v85 = v128;
    sub_20A8C45A0();
    int v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v84, 1, v85);
    id result = (id)sub_20A759174(v84, (unint64_t *)&unk_26763DC98, MEMORY[0x263F7A508]);
    uint64_t v87 = v144;
    uint64_t v88 = v130;
    if (v86 != 1) {
      goto LABEL_14;
    }
    v79(v131, v77, v132);
    uint64_t v89 = v106;
    sub_20A8C7580();
    sub_20A8C45B0();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v81, v82, v80);
    uint64_t v89 = v106;
    sub_20A8C7580();
    sub_20A75AB48(&qword_26763DCC0, MEMORY[0x263F7A508]);
    uint64_t v85 = v128;
    sub_20A8C45B0();
    uint64_t v87 = v144;
    uint64_t v88 = v130;
  }
  id result = (id)(*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v89, v85);
LABEL_14:
  double v90 = *(double *)(v88 + 56);
  if ((~*(void *)&v90 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v90 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v90 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v91 = *(double *)(v88 + 64);
  if ((~*(void *)&v91 & 0x7FF0000000000000) == 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v91 <= -9.22337204e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v91 >= 9.22337204e18)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v134, a9, v111);
  uint64_t v92 = v112;
  sub_20A75910C(v136, v112, (uint64_t (*)(void))sub_20A447F18);
  if ((a10 & 0x100000000) != 0) {
    sub_20A755DF8();
  }
  sub_20A7590AC(v92, (uint64_t (*)(void))sub_20A447F18);
  sub_20A7591E4(a11, v114, &qword_26763DC88, MEMORY[0x263F79DA0]);
  (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v109, a12, v108);
  swift_bridgeObjectRetain();
  char v93 = v113;
  sub_20A8C7060();
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = v146;
  ((void (*)(uint64_t, uint64_t, uint64_t))v139)(v94 + v143, v87, v135);
  sub_20A75AB48(&qword_26763DCC8, MEMORY[0x263F7A060]);
  uint64_t v95 = v107;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v93, v95);
  sub_20A8C7430();
  sub_20A75AB48(&qword_26763DCD0, MEMORY[0x263F7A398]);
  return (id)sub_20A8C4540();
}

uint64_t sub_20A755C30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C4E20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A447F18();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A75910C(v1, (uint64_t)v8, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A63B744();
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A63B858();
LABEL_5:
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v10 + 64)], v2);
    sub_20A8C4E10();
    sub_20A8C6A00();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_20A7590AC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  }
  return sub_20A8C6A00();
}

uint64_t sub_20A755DF8()
{
  sub_20A447F18();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A75910C(v0, (uint64_t)v3, (uint64_t (*)(void))sub_20A447F18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    double v5 = 0.0;
    if (EnumCaseMultiPayload != 1) {
      return (int)v5;
    }
    sub_20A63B858();
  }
  else
  {
    sub_20A63B744();
  }
  double v5 = *(double *)&v3[*(int *)(v6 + 48)];
  uint64_t v7 = &v3[*(int *)(v6 + 64)];
  uint64_t v8 = sub_20A8C4E20();
  (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t result = sub_20A7590AC((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StocksAudioTrack);
  if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
  {
    if (v5 <= -2147483650.0)
    {
      __break(1u);
    }
    else if (v5 < 2147483650.0)
    {
      return (int)v5;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A755F6C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v169 = a8;
  uint64_t v168 = a7;
  uint64_t v173 = a6;
  uint64_t v163 = a5;
  CGRect v171 = a4;
  long long v160 = a3;
  uint64_t v177 = a1;
  uint64_t v13 = sub_20A8C6B00();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v147 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v148 = (char *)&v120 - v17;
  uint64_t v146 = sub_20A8C40E0();
  uint64_t v145 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  unsigned int v144 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C6AF0();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  double v149 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = sub_20A8C6C60();
  uint64_t v141 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  uint64_t v143 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v138 = (uint64_t)&v120 - v25;
  sub_20A447F18();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v136 = (uint64_t)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_20A8C6C80();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  CGRect v172 = (char *)&v120 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_20A8C7070();
  uint64_t v139 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v137 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, (unint64_t *)&unk_26763DC98, MEMORY[0x263F7A508], v23);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)&v120 - v31;
  uint64_t v167 = sub_20A8C7590();
  uint64_t v170 = *(void *)(v167 - 8);
  MEMORY[0x270FA5388](v167);
  uint64_t v129 = (char *)&v120 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_20A8C71C0();
  uint64_t v164 = *(void *)(v166 - 8);
  MEMORY[0x270FA5388](v166);
  long long v165 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_20A8C49D0();
  uint64_t v162 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  long long v161 = (char *)&v120 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_20A8C6A10();
  uint64_t v158 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  id v157 = (char *)&v120 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_20A8C6FA0();
  uint64_t v155 = *(void *)(v156 - 8);
  MEMORY[0x270FA5388](v156);
  v154 = (char *)&v120 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_20A8C7800();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v121 = (char *)&v120 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_20A8C6890();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v126 = (char *)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_20A8C6CB0();
  uint64_t v152 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  uint64_t v151 = (uint64_t)&v120 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_20A8C6A60();
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v44 = (char *)&v120 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_20A8C7870();
  uint64_t v180 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v47 = (char *)&v120 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
  if ((~*(void *)&v48 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v48 <= -2147483650.0)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v48 >= 2147483650.0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v150 = v35;
  uint64_t v124 = v32;
  uint64_t v130 = v14;
  uint64_t v131 = v20;
  uint64_t v132 = v13;
  uint64_t v133 = v19;
  sub_20A5D7A0C((uint64_t)v44);
  sub_20A8C7860();
  sub_20A759EA4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v183 = v49;
  uint64_t v175 = sub_20A8C4620();
  uint64_t v50 = *(void *)(v175 - 8);
  uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v52 = (v51 + 32) & ~v51;
  uint64_t v53 = v52 + *(void *)(v50 + 72);
  uint64_t v54 = v51 | 7;
  uint64_t v55 = swift_allocObject();
  long long v184 = xmmword_20A8D3DC0;
  *(_OWORD *)(v55 + 16) = xmmword_20A8D3DC0;
  unsigned int v182 = *MEMORY[0x263F24D48];
  v181 = *(void (**)(uint64_t))(v50 + 104);
  uint64_t v176 = v50 + 104;
  v181(v55 + v52);
  sub_20A75AB48(&qword_26763DCA8, MEMORY[0x263F7A7C8]);
  unint64_t v174 = (unint64_t)"ssionManager.swift";
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v180 + 8);
  uint64_t v178 = v54;
  v56(v47, v45);
  uint64_t v57 = v160;
  swift_getObjectType();
  uint64_t v58 = v151;
  sub_20A670898(v151);
  uint64_t v179 = v53;
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v184;
  uint64_t v180 = v52;
  uint64_t v60 = v182;
  uint64_t v61 = v175;
  ((void (*)(uint64_t, void, uint64_t))v181)(v59 + v180, v182, v175);
  sub_20A75AB48((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  unint64_t v125 = 0x800000020A90D4F0;
  uint64_t v62 = v153;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t v63 = v58;
  uint64_t v64 = v60;
  (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v63, v62);
  id v65 = objc_msgSend(v57, sel_sourceChannel);
  if (v65)
  {
    id v66 = v65;
    __swift_project_boxed_opaque_existential_1(v171 + 7, v171[10]);
    uint64_t v67 = v126;
    sub_20A661B70(v66);
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = v184;
    ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v68 + v180, v64, v61);
    sub_20A75AB48((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v69 = v128;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v67, v69);
  }
  uint64_t v70 = v64;
  if (objc_msgSend(v57, sel_respondsToSelector_, sel_parentIssue))
  {
    id v71 = objc_msgSend(v57, sel_parentIssue);
    if (v71)
    {
      id v72 = v71;
      id v73 = objc_msgSend(v72, sel_identifier);
      sub_20A8CE280();

      uint64_t v74 = v121;
      sub_20A8C77F0();
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = v184;
      ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v75 + v180, v64, v175);
      sub_20A75AB48(&qword_26AC69B70, MEMORY[0x263F7A748]);
      uint64_t v76 = v123;
      sub_20A8C45B0();

      swift_bridgeObjectRelease();
      uint64_t v77 = v76;
      uint64_t v70 = v64;
      (*(void (**)(char *, uint64_t))(v122 + 8))(v74, v77);
    }
  }
  uint64_t v78 = v154;
  sub_20A454470();
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = v184;
  uint64_t v80 = v181;
  uint64_t v81 = v70;
  uint64_t v44 = (char *)v175;
  ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v79 + v180, v81, v175);
  sub_20A75AB48(&qword_26AC69A30, MEMORY[0x263F79FB8]);
  uint64_t v82 = v156;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v78, v82);
  char v83 = v157;
  sub_20A755C30();
  uint64_t v84 = v180;
  uint64_t v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = v184;
  uint64_t v35 = v84;
  ((void (*)(uint64_t, void, char *))v80)(v85 + v84, v182, v44);
  sub_20A75AB48(&qword_26763DCB0, MEMORY[0x263F79B60]);
  uint64_t v86 = v159;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v83, v86);
  if (qword_267639C18 != -1) {
    goto LABEL_29;
  }
LABEL_10:
  uint64_t v87 = v150;
  uint64_t v88 = __swift_project_value_buffer(v150, (uint64_t)qword_26763DC50);
  uint64_t v89 = v162;
  double v90 = v161;
  (*(void (**)(char *, uint64_t, uint64_t))(v162 + 16))(v161, v88, v87);
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = v184;
  ((void (*)(uint64_t, void, char *))v181)(v91 + v35, v182, v44);
  sub_20A75AB48((unint64_t *)&unk_26763DCD8, MEMORY[0x263F24E90]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v87);
  uint64_t v92 = *MEMORY[0x263F7A158];
  uint64_t v93 = v164;
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 104);
  uint64_t v95 = v165;
  uint64_t v96 = v166;
  v94(v165, v92, v166);
  sub_20A75AB48(&qword_26763DCB8, MEMORY[0x263F7A160]);
  uint64_t v97 = v168;
  LOBYTE(v87) = sub_20A8CE210();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v96);
  if (v87)
  {
    sub_20A75AB48(&qword_26763DCC0, MEMORY[0x263F7A508]);
    uint64_t v98 = (uint64_t)v124;
    uint64_t v99 = v167;
    sub_20A8C45A0();
    int v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v98, 1, v99);
    uint64_t result = sub_20A759174(v98, (unint64_t *)&unk_26763DC98, MEMORY[0x263F7A508]);
    if (v100 != 1) {
      goto LABEL_15;
    }
    v94(v95, v92, v96);
    uint64_t v102 = v129;
    sub_20A8C7580();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v95, v97, v96);
    uint64_t v102 = v129;
    sub_20A8C7580();
    sub_20A75AB48(&qword_26763DCC0, MEMORY[0x263F7A508]);
    uint64_t v99 = v167;
  }
  sub_20A8C45B0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v170 + 8))(v102, v99);
LABEL_15:
  double v103 = *(double *)(v169 + 56);
  if ((~*(void *)&v103 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v103 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v103 >= 9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  double v104 = *(double *)(v169 + 64);
  if ((~*(void *)&v104 & 0x7FF0000000000000) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v104 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v104 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v172, a9, v135);
  uint64_t v105 = v136;
  sub_20A75910C(v173, v136, (uint64_t (*)(void))sub_20A447F18);
  if ((a10 & 0x100000000) != 0) {
    sub_20A755DF8();
  }
  sub_20A7590AC(v105, (uint64_t (*)(void))sub_20A447F18);
  sub_20A7591E4(a11, v138, &qword_26763DC88, MEMORY[0x263F79DA0]);
  (*(void (**)(char *, uint64_t, uint64_t))(v141 + 16))(v143, a12, v142);
  swift_bridgeObjectRetain();
  long long v106 = v137;
  sub_20A8C7060();
  uint64_t v107 = swift_allocObject();
  *(_OWORD *)(v107 + 16) = v184;
  uint64_t v108 = v181;
  uint64_t v109 = v175;
  ((void (*)(uint64_t, void, uint64_t))v181)(v107 + v180, v182, v175);
  sub_20A75AB48(&qword_26763DCC8, MEMORY[0x263F7A060]);
  v174 |= 0x8000000000000000;
  uint64_t v110 = v140;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v139 + 8))(v106, v110);
  __swift_project_boxed_opaque_existential_1(v171 + 16, v171[19]);
  uint64_t v111 = v144;
  sub_20A8C3600();
  char v112 = sub_20A8C4040();
  uint64_t v113 = v130;
  uint64_t v114 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v112 & 1) == 0) {
    uint64_t v114 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  uint64_t v115 = v148;
  uint64_t v116 = v132;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))(v148, *v114, v132);
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v147, v115, v116);
  uint64_t v117 = v149;
  sub_20A8C6AE0();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v111, v146);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v116);
  uint64_t v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = v184;
  ((void (*)(uint64_t, void, uint64_t))v108)(v118 + v180, v182, v109);
  sub_20A75AB48(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v119 = v133;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v117, v119);
  sub_20A8C6DB0();
  sub_20A75AB48((unint64_t *)&unk_26763DCE8, MEMORY[0x263F79E58]);
  memset(v185, 0, sizeof(v185));
  sub_20A8C45D0();
  return sub_20A7590AC((uint64_t)v185, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t sub_20A757988(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v125 = a8;
  uint64_t v148 = a7;
  double v149 = a3;
  uint64_t v151 = a6;
  uint64_t v152 = a4;
  uint64_t v12 = sub_20A8C6B00();
  uint64_t v132 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v129 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v130 = (char *)&v106 - v15;
  uint64_t v128 = sub_20A8C40E0();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v126 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C6AF0();
  uint64_t v133 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v131 = (char *)&v106 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_20A8C6C60();
  uint64_t v121 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v124 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v118 = (uint64_t)&v106 - v21;
  uint64_t v116 = sub_20A8C6C80();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v117 = (char *)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_20A8C7070();
  uint64_t v120 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v119 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (void *)sub_20A8C49D0();
  uint64_t v147 = *(v24 - 1);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_20A8C6A10();
  uint64_t v146 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v145 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_20A8C6FA0();
  uint64_t v143 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v142 = (char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_20A8C7800();
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v107 = (char *)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_20A8C6890();
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_20A8C6CB0();
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v139 = (uint64_t)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_20A8C6A60();
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)&v106 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_20A8C7870();
  unint64_t v138 = *(void *)(v159 - 8);
  MEMORY[0x270FA5388](v159);
  uint64_t v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(a2 + *(int *)(type metadata accessor for StocksAudioTrack() + 24)), sel_duration);
  if ((~*(void *)&v38 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v38 <= -2147483650.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v38 >= 2147483650.0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v134 = v27;
  uint64_t v135 = a5;
  uint64_t v136 = v26;
  uint64_t v137 = (void (*)(void, void, void))v24;
  uint64_t v113 = v12;
  uint64_t v114 = v17;
  sub_20A5D7A0C((uint64_t)v35);
  sub_20A8C7860();
  sub_20A759EA4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v39 = v37;
  uint64_t v41 = v40;
  uint64_t v42 = sub_20A8C4620();
  uint64_t v161 = v42;
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(void *)(v43 + 72);
  uint64_t v45 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v46 = (v45 + 32) & ~v45;
  uint64_t v150 = v46;
  uint64_t v47 = v45 | 7;
  double v48 = (void *)(v46 + v44);
  uint64_t v49 = swift_allocObject();
  uint64_t v158 = a1;
  long long v160 = xmmword_20A8D3DC0;
  *(_OWORD *)(v49 + 16) = xmmword_20A8D3DC0;
  uint64_t v50 = *MEMORY[0x263F24D48];
  uint64_t v156 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 104);
  uint64_t v157 = v43 + 104;
  v156(v49 + v46, v50, v42);
  sub_20A75AB48(&qword_26763DCA8, MEMORY[0x263F7A7C8]);
  unint64_t v153 = (unint64_t)"ssionManager.swift";
  uint64_t v51 = v159;
  sub_20A8C45B0();
  uint64_t v52 = v41;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v39, v51);
  uint64_t v53 = v149;
  swift_getObjectType();
  uint64_t v54 = v139;
  sub_20A670898(v139);
  uint64_t v159 = v52;
  uint64_t v55 = v47;
  uint64_t v56 = v48;
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = v160;
  uint64_t v58 = v150;
  unsigned int v155 = v50;
  v156(v57 + v150, v50, v161);
  sub_20A75AB48((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  unint64_t v138 = 0x800000020A90D4F0;
  uint64_t v59 = v141;
  sub_20A8C45B0();
  uint64_t v60 = v53;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v54, v59);
  id v61 = objc_msgSend(v53, sel_sourceChannel);
  uint64_t v154 = v55;
  if (v61)
  {
    uint64_t v62 = v61;
    __swift_project_boxed_opaque_existential_1(v152 + 7, v152[10]);
    uint64_t v63 = v110;
    sub_20A661B70(v62);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v160;
    v156(v64 + v58, v155, v161);
    sub_20A75AB48((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v65 = v58;
    uint64_t v66 = v112;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v67 = v66;
    uint64_t v58 = v65;
    (*(void (**)(char *, uint64_t))(v111 + 8))(v63, v67);
  }
  if (objc_msgSend(v60, sel_respondsToSelector_, sel_parentIssue))
  {
    id v68 = objc_msgSend(v60, sel_parentIssue);
    if (v68)
    {
      id v69 = v68;
      id v70 = objc_msgSend(v69, sel_identifier);
      sub_20A8CE280();

      id v71 = v107;
      sub_20A8C77F0();
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = v160;
      v156(v72 + v58, v155, v161);
      sub_20A75AB48(&qword_26AC69B70, MEMORY[0x263F7A748]);
      uint64_t v73 = v109;
      sub_20A8C45B0();

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v71, v73);
    }
  }
  uint64_t v74 = v142;
  sub_20A454470();
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v160;
  uint64_t v76 = v155;
  uint64_t v77 = v56;
  uint64_t v24 = v156;
  v156(v75 + v58, v155, v161);
  sub_20A75AB48(&qword_26AC69A30, MEMORY[0x263F79FB8]);
  unint64_t v78 = v153 | 0x8000000000000000;
  uint64_t v79 = v58;
  uint64_t v80 = v144;
  a1 = v76;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v74, v80);
  uint64_t v81 = v145;
  sub_20A755C30();
  double v149 = v77;
  uint64_t v82 = swift_allocObject();
  *(_OWORD *)(v82 + 16) = v160;
  ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v82 + v79, v76, v161);
  sub_20A75AB48(&qword_26763DCB0, MEMORY[0x263F79B60]);
  uint64_t v144 = v78;
  uint64_t v83 = v134;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v146 + 8))(v81, v83);
  a2 = v79;
  if (qword_267639C18 != -1) {
    goto LABEL_22;
  }
LABEL_10:
  uint64_t v84 = (uint64_t)v137;
  uint64_t v85 = __swift_project_value_buffer((uint64_t)v137, (uint64_t)qword_26763DC50);
  uint64_t v86 = v147;
  uint64_t v87 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v147 + 16))(v136, v85, v84);
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = v160;
  ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v88 + a2, a1, v161);
  sub_20A75AB48((unint64_t *)&unk_26763DCD8, MEMORY[0x263F24E90]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v87, v84);
  uint64_t v90 = v148;
  double v91 = *(double *)(v148 + 56);
  if ((~*(void *)&v91 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v91 <= -9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v91 >= 9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  double v92 = *(double *)(v148 + 64);
  if ((~*(void *)&v92 & 0x7FF0000000000000) == 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v92 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v92 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, void, uint64_t))(v115 + 104))(v117, *MEMORY[0x263F79DD8], v116);
  sub_20A755DF8();
  uint64_t v151 = *(void *)(v90 + 16);
  sub_20A7591E4(v125, v118, &qword_26763DC88, MEMORY[0x263F79DA0]);
  (*(void (**)(char *, uint64_t, uint64_t))(v121 + 16))(v124, a9, v123);
  swift_bridgeObjectRetain();
  uint64_t v93 = v119;
  sub_20A8C7060();
  uint64_t v94 = swift_allocObject();
  *(_OWORD *)(v94 + 16) = v160;
  uint64_t v95 = v150;
  ((void (*)(uint64_t, void, uint64_t))v24)(v94 + v150, v155, v161);
  sub_20A75AB48(&qword_26763DCC8, MEMORY[0x263F7A060]);
  uint64_t v96 = v122;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v120 + 8))(v93, v96);
  __swift_project_boxed_opaque_existential_1(v152 + 16, v152[19]);
  uint64_t v97 = v126;
  sub_20A8C3600();
  char v98 = sub_20A8C4040();
  uint64_t v99 = v132;
  int v100 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v98 & 1) == 0) {
    int v100 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  unint64_t v101 = v130;
  uint64_t v102 = v113;
  (*(void (**)(char *, void, uint64_t))(v132 + 104))(v130, *v100, v113);
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v129, v101, v102);
  double v103 = v131;
  sub_20A8C6AE0();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v97, v128);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v101, v102);
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = v160;
  v156(v104 + v95, v155, v161);
  sub_20A75AB48(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v105 = v114;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v103, v105);
  sub_20A8C7560();
  sub_20A75AB48(&qword_26763DCF8, MEMORY[0x263F7A4C8]);
  memset(v162, 0, sizeof(v162));
  sub_20A8C45D0();
  return sub_20A7590AC((uint64_t)v162, (uint64_t (*)(void))sub_20A42F348);
}

uint64_t sub_20A758F04()
{
  uint64_t v0 = sub_20A8C2800();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v13 - v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = sub_20A8C49D0();
  __swift_allocate_value_buffer(v10, qword_26763DC50);
  __swift_project_value_buffer(v10, (uint64_t)qword_26763DC50);
  sub_20A8C27F0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
  v11(v6, v9, v0);
  v11(v3, v9, v0);
  sub_20A8C49C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v9, v0);
}

uint64_t type metadata accessor for NoopAudioSessionManager()
{
  return self;
}

uint64_t sub_20A7590AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A75910C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A759174(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A759EA4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A7591E4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A759EA4(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A759268(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7592D0(uint64_t a1, uint64_t a2)
{
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A759364(uint64_t a1)
{
  return sub_20A759B54(a1, (uint64_t (*)(uint64_t, unint64_t, void, void, unint64_t, unint64_t, unint64_t, void, unint64_t, unint64_t, unint64_t, unint64_t))sub_20A755F6C);
}

uint64_t objectdestroyTm_11()
{
  uint64_t v1 = (int *)type metadata accessor for StocksAudioTrack();
  uint64_t v61 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v61 + 16) & ~v61;
  unint64_t v3 = (((*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_20A8C4020();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  sub_20A447F18();
  unint64_t v51 = v6;
  uint64_t v60 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  unint64_t v9 = (v6 + v7 + v60) & ~v60;
  uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v11 = sub_20A8C71C0();
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  unint64_t v50 = v9;
  unint64_t v53 = (v9 + v10 + *(unsigned __int8 *)(v48 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v12 = (*(void *)(v48 + 64) + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v56 = sub_20A8C6C80();
  uint64_t v54 = *(void *)(v56 - 8);
  unint64_t v52 = (v12 + *(unsigned __int8 *)(v54 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  unint64_t v13 = (*(void *)(v54 + 64) + v52 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  uint64_t v15 = *(unsigned __int8 *)(*(void *)(v14 - 8) + 80);
  uint64_t v16 = v13 + v15 + 5;
  uint64_t v58 = *(void *)(*(void *)(v14 - 8) + 64);
  uint64_t v59 = sub_20A8C6C60();
  uint64_t v57 = *(void *)(v59 - 8);
  uint64_t v55 = *(unsigned __int8 *)(v57 + 80);
  uint64_t v17 = v0 + v2;
  swift_unknownObjectRelease();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v18(v17 + v1[5], v4);

  uint64_t v19 = v17 + v1[12];
  sub_20A8C4CD0();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A4D2C0C();
    uint64_t v22 = v19 + *(int *)(v21 + 48);
    uint64_t v23 = sub_20A8C5450();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  }
  uint64_t v24 = v16 & ~v15;
  swift_unknownObjectRelease();
  swift_release();
  v18(v0 + v51, v4);
  uint64_t v25 = v0 + v50;
  int v26 = swift_getEnumCaseMultiPayload();
  if (v26 == 1)
  {
    swift_unknownObjectRelease();
    v18(v25 + v1[5], v4);

    uint64_t v37 = v25 + v1[12];
    int v38 = swift_getEnumCaseMultiPayload();
    swift_release();
    if (v38 == 1)
    {
      sub_20A4D2C0C();
      uint64_t v40 = v37 + *(int *)(v39 + 48);
      uint64_t v41 = sub_20A8C5450();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
    }
    sub_20A63B858();
    uint64_t v43 = v25 + *(int *)(v42 + 64);
    uint64_t v44 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
    uint64_t v28 = v48;
    uint64_t v27 = v49;
  }
  else
  {
    uint64_t v28 = v48;
    uint64_t v27 = v49;
    if (!v26)
    {
      swift_unknownObjectRelease();
      v18(v25 + v1[5], v4);

      uint64_t v29 = v25 + v1[12];
      int v30 = swift_getEnumCaseMultiPayload();
      swift_release();
      if (v30 == 1)
      {
        sub_20A4D2C0C();
        uint64_t v32 = v29 + *(int *)(v31 + 48);
        uint64_t v33 = sub_20A8C5450();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
      }
      sub_20A63B744();
      uint64_t v35 = v25 + *(int *)(v34 + 64);
      uint64_t v36 = sub_20A8C4E20();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    }
  }
  (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v0 + v53, v27);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v54 + 8))(v0 + v52, v56);
  uint64_t v45 = sub_20A8C6C70();
  uint64_t v46 = *(void *)(v45 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v0 + v24, 1, v45)) {
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v0 + v24, v45);
  }
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v0 + ((v24 + v58 + v55) & ~v55), v59);

  return swift_deallocObject();
}

uint64_t sub_20A759B3C(uint64_t a1)
{
  return sub_20A759B54(a1, (uint64_t (*)(uint64_t, unint64_t, void, void, unint64_t, unint64_t, unint64_t, void, unint64_t, unint64_t, unint64_t, unint64_t))sub_20A7547BC);
}

uint64_t sub_20A759B54(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, void, void, unint64_t, unint64_t, unint64_t, void, unint64_t, unint64_t, unint64_t, unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for StocksAudioTrack() - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v22 = (*(void *)(v3 + 64) + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_20A8C4020() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  sub_20A447F18();
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(*(void *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v10 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v11 = *(void *)(sub_20A8C71C0() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(sub_20A8C6C80() - 8);
  unint64_t v15 = (v13 + *(unsigned __int8 *)(v14 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = (*(void *)(v14 + 64) + v15 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  unint64_t v18 = (v16 + *(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 5) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
  uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 64);
  uint64_t v20 = *(void *)(sub_20A8C6C60() - 8);
  return a2(a1, v2 + v23, *(void *)(v2 + v22), *(void *)(v2 + v4), v2 + v6, v2 + v9, v2 + v12, *(void *)(v2 + v13), v2 + v15, *(unsigned int *)(v2 + v16) | ((unint64_t)*(unsigned __int8 *)(v2 + v16 + 4) << 32), v2 + v18, v2 + ((v18 + v19 + *(unsigned __int8 *)(v20 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80)));
}

void sub_20A759EA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A759F08()
{
  uint64_t v1 = (int *)type metadata accessor for StocksAudioTrack();
  uint64_t v42 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v42 + 16) & ~v42;
  unint64_t v3 = (((*(void *)(*((void *)v1 - 1) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_20A8C4020();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  sub_20A447F18();
  uint64_t v48 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  unint64_t v9 = (v6 + v7 + v48) & ~v48;
  unint64_t v10 = (*(void *)(*(void *)(v8 - 8) + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  uint64_t v12 = *(unsigned __int8 *)(*(void *)(v11 - 8) + 80);
  uint64_t v43 = v10 + v12 + 8;
  uint64_t v46 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v47 = sub_20A8C6C60();
  uint64_t v44 = *(unsigned __int8 *)(*(void *)(v47 - 8) + 80);
  uint64_t v45 = *(void *)(v47 - 8);
  uint64_t v13 = v0 + v2;
  swift_unknownObjectRelease();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v14(v13 + v1[5], v4);

  uint64_t v15 = v13 + v1[12];
  sub_20A8C4CD0();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A4D2C0C();
    uint64_t v18 = v15 + *(int *)(v17 + 48);
    uint64_t v19 = sub_20A8C5450();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  uint64_t v20 = v43 & ~v12;
  swift_unknownObjectRelease();
  swift_release();
  v14(v0 + v6, v4);
  uint64_t v21 = v0 + v9;
  int v22 = swift_getEnumCaseMultiPayload();
  if (v22 == 1)
  {
    swift_unknownObjectRelease();
    v14(v21 + v1[5], v4);

    uint64_t v31 = v21 + v1[12];
    int v32 = swift_getEnumCaseMultiPayload();
    swift_release();
    if (v32 == 1)
    {
      sub_20A4D2C0C();
      uint64_t v34 = v31 + *(int *)(v33 + 48);
      uint64_t v35 = sub_20A8C5450();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
    }
    sub_20A63B858();
    uint64_t v37 = v21 + *(int *)(v36 + 64);
    uint64_t v38 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
  }
  else if (!v22)
  {
    swift_unknownObjectRelease();
    v14(v21 + v1[5], v4);

    uint64_t v23 = v21 + v1[12];
    int v24 = swift_getEnumCaseMultiPayload();
    swift_release();
    if (v24 == 1)
    {
      sub_20A4D2C0C();
      uint64_t v26 = v23 + *(int *)(v25 + 48);
      uint64_t v27 = sub_20A8C5450();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    }
    sub_20A63B744();
    uint64_t v29 = v21 + *(int *)(v28 + 64);
    uint64_t v30 = sub_20A8C4E20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
  }
  swift_release();
  uint64_t v39 = sub_20A8C6C70();
  uint64_t v40 = *(void *)(v39 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v0 + v20, 1, v39)) {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v0 + v20, v39);
  }
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v0 + ((v20 + v46 + v44) & ~v44), v47);

  return swift_deallocObject();
}

uint64_t sub_20A75A598(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StocksAudioTrack() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_20A8C4020() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  sub_20A447F18();
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(*(void *)(v10 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  unint64_t v12 = (*(void *)(*(void *)(v10 - 8) + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_20A759EA4(0, &qword_26763DC88, MEMORY[0x263F79DA0], MEMORY[0x263F8D8F0]);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v15 = *(void *)(*(void *)(v13 - 8) + 64);
  uint64_t v16 = *(void *)(sub_20A8C6C60() - 8);
  return sub_20A757988(a1, v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + v6), v1 + v8, v1 + v11, *(void *)(v1 + v12), v1 + v14, v1 + ((v14 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)));
}

uint64_t sub_20A75A7F4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A75A82C()
{
  uint64_t v12 = sub_20A8C71C0();
  uint64_t v1 = *(void *)(v12 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v11 = sub_20A8C6C60();
  uint64_t v4 = *(void *)(v11 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_20A8C6C70();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v12);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v11);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);

  return swift_deallocObject();
}

uint64_t sub_20A75AA0C(void (*a1)())
{
  uint64_t v3 = *(void *)(sub_20A8C71C0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C6C60() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_20A8C6C70() - 8);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = v1 + ((v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_20A750794(a1, v10, v1 + v4, v1 + v7, v11);
}

uint64_t sub_20A75AB48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A75AB90()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CommandObserver()
{
  return self;
}

ValueMetadata *type metadata accessor for WatchlistRenameErrorAlert()
{
  return &type metadata for WatchlistRenameErrorAlert;
}

uint64_t sub_20A75AC18()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_20A75AD40()
{
  return sub_20A75AC18();
}

uint64_t sub_20A75AD4C()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A75AE08()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

unsigned char *_s8StocksUI20WatchlistRenameErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A75AFC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistRenameError()
{
  return &type metadata for WatchlistRenameError;
}

unint64_t sub_20A75AFFC()
{
  unint64_t result = qword_26763DD08;
  if (!qword_26763DD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DD08);
  }
  return result;
}

uint64_t sub_20A75B050(uint64_t a1, double *a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI28StockSearchSectionHeaderView_watchlistSwitcherButton];
  objc_msgSend(v8, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  uint64_t v9 = (void *)(v3 + 16);
  swift_beginAccess();
  uint64_t v10 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v12 = *(void *)(*v10 + 40);
  uint64_t v11 = *(void *)(*v10 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v10 + 16), v12);
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v11 + 16) + 56))(v12);
  objc_msgSend(a3, sel_setBackgroundColor_, v13);

  sub_20A75B28C(a1 + 16, (uint64_t)v18);
  sub_20A75B28C((uint64_t)v18, (uint64_t)&v19);
  uint64_t v14 = v20;
  if (v20)
  {
    uint64_t v15 = v19;
    __swift_project_boxed_opaque_existential_1(v9, *(void *)(v4 + 40));
    uint64_t v16 = type metadata accessor for StockSearchSectionHeaderViewLayoutAttributes();
    sub_20A79BDAC(v8, v15, v14, *(void **)((char *)a2 + *(int *)(v16 + 28)));
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();

  return swift_release();
}

uint64_t type metadata accessor for StockSearchSectionHeaderViewRenderer()
{
  return self;
}

unint64_t sub_20A75B210(uint64_t a1)
{
  unint64_t result = sub_20A75B238();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A75B238()
{
  unint64_t result = qword_26AC7D4D8;
  if (!qword_26AC7D4D8)
  {
    type metadata accessor for StockSearchSectionHeaderViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7D4D8);
  }
  return result;
}

uint64_t sub_20A75B28C(uint64_t a1, uint64_t a2)
{
  sub_20A75B2F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A75B2F0()
{
  if (!qword_26763DD10)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DD10);
    }
  }
}

uint64_t sub_20A75B348()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

double sub_20A75B380@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3[5];
  uint64_t v7 = v3[6];
  __swift_project_boxed_opaque_existential_1(v3 + 2, v6);
  uint64_t v8 = (void *)sub_20A8C9750();
  uint64_t v9 = *(void *)(v7 + 8);
  uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 8);
  v29[3] = v6;
  v29[4] = v7;
  uint64_t v28 = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  v10(v8, v6, v9);

  uint64_t v12 = a2 + *(int *)(type metadata accessor for QuoteDetailViewLayoutOptions() + 20);
  uint64_t v13 = *(void *)(v12 + 8);
  uint64_t v15 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v12 + 24);
  if (*(unsigned char *)(v12 + 80))
  {
    sub_20A75ED98(a1, a2, *(void *)v12, (uint64_t)boxed_opaque_existential_1, (uint64_t)&unk_26BE5E7B8, v27, v6, v28, v30, *(double *)(v12 + 8), *(double *)(v12 + 16), *(double *)(v12 + 24));
  }
  else
  {
    v46[0] = *(void *)v12;
    v46[1] = v13;
    v46[2] = v15;
    v46[3] = v14;
    long long v16 = *(_OWORD *)(v12 + 48);
    long long v47 = *(_OWORD *)(v12 + 32);
    long long v48 = v16;
    long long v49 = *(_OWORD *)(v12 + 64);
    sub_20A75DBD4(a1, a2, v46, (uint64_t)boxed_opaque_existential_1, (uint64_t)&unk_26BE5E7B8, v27, v6, v28, v30);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  char v17 = v45;
  uint64_t v18 = v33;
  char v19 = v31;
  LOBYTE(v29[0]) = v40;
  long long v20 = v30[1];
  *(_OWORD *)a3 = v30[0];
  *(_OWORD *)(a3 + 16) = v20;
  long long v21 = v30[3];
  *(_OWORD *)(a3 + 32) = v30[2];
  *(_OWORD *)(a3 + 48) = v21;
  *(unsigned char *)(a3 + 64) = v19;
  *(_OWORD *)(a3 + 72) = v32;
  *(void *)(a3 + 88) = v18;
  long long v22 = v35;
  *(_OWORD *)(a3 + 96) = v34;
  *(_OWORD *)(a3 + 112) = v22;
  long long v23 = v37;
  *(_OWORD *)(a3 + 128) = v36;
  *(_OWORD *)(a3 + 144) = v23;
  long long v24 = v39;
  *(_OWORD *)(a3 + 160) = v38;
  *(_OWORD *)(a3 + 176) = v24;
  *(unsigned char *)(a3 + 192) = v29[0];
  *(_OWORD *)(a3 + 200) = v41;
  *(_OWORD *)(a3 + 216) = v42;
  *(_OWORD *)(a3 + 232) = v43;
  double result = *(double *)&v44;
  *(_OWORD *)(a3 + 248) = v44;
  *(unsigned char *)(a3 + 264) = v17;
  return result;
}

uint64_t sub_20A75B55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>)
{
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A760840(0, &qword_26AC68DA0, MEMORY[0x263F7A890], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v84 - v12;
  sub_20A760840(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], v10);
  MEMORY[0x270FA5388](v14 - 8);
  long long v16 = (char *)&v84 - v15;
  uint64_t v17 = type metadata accessor for QuoteDetailViewModel();
  sub_20A55AF00(a1 + *(int *)(v17 + 20), (uint64_t)v13);
  uint64_t v18 = sub_20A8C2CB0();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
  {
    sub_20A7603A4((uint64_t)v13, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    uint64_t v20 = sub_20A8C2530();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
LABEL_4:
    uint64_t result = sub_20A7603A4((uint64_t)v16, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    long long v23 = 0uLL;
    char v24 = 1;
    CGFloat v25 = 0.0;
    CGFloat v26 = 0.0;
    CGFloat v27 = 0.0;
    CGFloat v28 = 0.0;
    long long v29 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    goto LABEL_12;
  }
  sub_20A8C2BD0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v18);
  uint64_t v21 = sub_20A8C2530();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v16, 1, v21) == 1) {
    goto LABEL_4;
  }
  sub_20A7603A4((uint64_t)v16, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  sub_20A8C9820();
  double v33 = v32;
  sub_20A8C96D0();
  CGFloat v35 = v34;
  sub_20A8C96D0();
  long long v36 = __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  *(void *)&long long v85 = a1 + *(int *)(v17 + 24);
  *(void *)&long long v84 = *(void *)v85;
  long long v37 = (void *)*v36;
  sub_20A760840(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  long long v39 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v40 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v41 = v39;
  *(void *)(inited + 40) = sub_20A8CEE20();
  long long v42 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v40;
  *(void *)(inited + 72) = v42;
  long long v43 = v37 + 2;
  uint64_t v44 = v37[5];
  uint64_t v45 = v37[6];
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v46 = *(void *)(v45 + 16);
  long long v47 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 96);
  id v48 = v42;
  uint64_t v49 = v47(v44, v46);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v49;
  sub_20A4CF8B0(inited);
  id v50 = objc_allocWithZone(MEMORY[0x263F086A0]);
  unint64_t v51 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  unint64_t v52 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v53 = objc_msgSend(v50, sel_initWithString_attributes_, v51, v52);

  objc_msgSend(v53, sel_boundingRectWithSize_options_context_, 1, 0, v33, 1.79769313e308);
  CGFloat x = v88.origin.x;
  CGFloat y = v88.origin.y;
  CGFloat width = v88.size.width;
  CGFloat height = v88.size.height;
  double v58 = CGRectGetWidth(v88);
  uint64_t v59 = *(void **)(v85 + 16);
  double v60 = 0.0;
  double v61 = 0.0;
  if (v59) {
    objc_msgSend(v59, sel_size, 0.0);
  }
  CGFloat v62 = v58 + v61;
  v89.origin.CGFloat x = x;
  v89.origin.CGFloat y = y;
  v89.size.CGFloat width = width;
  v89.size.CGFloat height = height;
  v90.size.CGFloat height = CGRectGetHeight(v89);
  v90.origin.CGFloat y = 0.0;
  v90.origin.CGFloat x = v35;
  v90.size.CGFloat width = v62;
  CGRect v91 = CGRectIntegral(v90);
  CGFloat v63 = v91.origin.x;
  CGFloat v64 = v91.origin.y;
  CGFloat v65 = v91.size.width;
  CGFloat v66 = v91.size.height;
  sub_20A8C9720();
  if (v67 > 990.0)
  {
    sub_20A8C9710();
    double v69 = v68;
    sub_20A8C96D0();
    double v60 = v69 - v70;
  }
  sub_20A8C9720();
  double v72 = v71;
  sub_20A8C9720();
  double v74 = v73;
  if (v72 > 990.0)
  {
    sub_20A8C9710();
    double v76 = v74 - v75;
    sub_20A8C9710();
    double v78 = v76 - v77;
    sub_20A8C96D0();
    double v80 = v79;
    sub_20A8C96D0();
    double v74 = v78 + v80 + v81;
  }
  v92.origin.CGFloat x = v63;
  v92.origin.CGFloat y = v64;
  v92.size.CGFloat width = v65;
  v92.size.CGFloat height = v66;
  v93.size.CGFloat height = CGRectGetHeight(v92);
  v93.origin.CGFloat x = v60;
  v93.origin.CGFloat y = a4;
  v93.size.CGFloat width = v74;
  CGRect v94 = CGRectIntegral(v93);
  CGFloat v25 = v94.origin.x;
  CGFloat v26 = v94.origin.y;
  CGFloat v27 = v94.size.width;
  CGFloat v28 = v94.size.height;
  MEMORY[0x270FA5388](v82);
  *((CGFloat *)&v84 - 4) = v63;
  *((CGFloat *)&v84 - 3) = v64;
  *((CGFloat *)&v84 - 2) = v65;
  *((CGFloat *)&v84 - 1) = v66;
  type metadata accessor for CGRect(0);
  sub_20A8C9690();

  long long v85 = v86;
  long long v84 = v87;
  uint64_t result = type metadata accessor for QuoteDetailViewLayoutOptions();
  long long v29 = v84;
  long long v23 = v85;
  char v24 = 0;
  uint64_t v83 = (long long *)(a2 + *(int *)(result + 28));
  long long v30 = *v83;
  long long v31 = v83[1];
LABEL_12:
  *(_OWORD *)a3 = v23;
  *(_OWORD *)(a3 + 16) = v29;
  *(CGFloat *)(a3 + 32) = v25;
  *(CGFloat *)(a3 + 40) = v26;
  *(CGFloat *)(a3 + 48) = v27;
  *(CGFloat *)(a3 + 56) = v28;
  *(_OWORD *)(a3 + 64) = v30;
  *(_OWORD *)(a3 + 80) = v31;
  *(unsigned char *)(a3 + 96) = v24;
  return result;
}

void sub_20A75BC7C(CGRect *a1@<X8>)
{
  uint64_t v2 = sub_20A8C8180();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v3 + 104))(v6, *MEMORY[0x263F7D268], v2, v4);
  sub_20A8C8170();
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v16.origin.CGFloat x = v8;
  v16.origin.CGFloat y = v10;
  v16.size.CGFloat width = v12;
  v16.size.CGFloat height = v14;
  *a1 = CGRectIntegral(v16);
}

uint64_t sub_20A75BDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, double a13, uint64_t a14, double a15, double a16, uint64_t a17, double a18)
{
  int v56 = a3;
  double v53 = a12;
  double v52 = a10;
  double v51 = a9;
  double v50 = a8;
  uint64_t v55 = a17;
  uint64_t v54 = a14;
  sub_20A5B3AE8(a2, (uint64_t)v58);
  long long v49 = v58[0];
  long long v48 = v58[1];
  long long v47 = v58[2];
  long long v46 = v58[3];
  long long v45 = v58[4];
  uint64_t v44 = v59;
  uint64_t v43 = v60;
  int v42 = v61;
  uint64_t v24 = sub_20A8C2990();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  CGFloat v27 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_20A76048C(v28, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_20A76048C(v30, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_20A75FBE0(v32, a1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_20A8C2940();
  char v34 = sub_20A8C2840();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  double v36 = -a16;
  char v57 = v42;
  if (v34) {
    double v36 = a13 - a11 + a18;
  }
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  double v37 = 0.0;
  if ((v34 & 1) == 0) {
    double v37 = a15;
  }
  double v38 = v50;
  *(double *)(a4 + 16) = a7;
  *(double *)(a4 + 24) = v38;
  *(double *)(a4 + 32) = v51;
  *(double *)(a4 + 40) = v52;
  *(double *)(a4 + 48) = a11;
  *(double *)(a4 + 56) = v53;
  *(unsigned char *)(a4 + 64) = 1;
  *(void *)(a4 + 72) = v29;
  *(void *)(a4 + 80) = v31;
  *(void *)(a4 + 88) = v33;
  *(_OWORD *)(a4 + 96) = v49;
  *(_OWORD *)(a4 + 112) = v48;
  *(_OWORD *)(a4 + 128) = v47;
  *(_OWORD *)(a4 + 144) = v46;
  *(_OWORD *)(a4 + 160) = v45;
  uint64_t v39 = v43;
  *(void *)(a4 + 176) = v44;
  *(void *)(a4 + 184) = v39;
  *(unsigned char *)(a4 + 192) = v57;
  uint64_t v40 = v54;
  *(double *)(a4 + 200) = a13;
  *(void *)(a4 + 208) = v40;
  *(double *)(a4 + 216) = a15;
  *(double *)(a4 + 224) = a16;
  *(void *)(a4 + 232) = v55;
  *(double *)(a4 + 240) = a18;
  *(double *)(a4 + 248) = v36;
  *(double *)(a4 + 256) = v37;
  *(unsigned char *)(a4 + 264) = v56;
  return result;
}

uint64_t sub_20A75C144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W5>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>, uint64_t a13, uint64_t a14, double a15, double a16, uint64_t a17, uint64_t a18)
{
  int v56 = a3;
  double v51 = a12;
  double v50 = a11;
  uint64_t v55 = a18;
  uint64_t v54 = a17;
  uint64_t v53 = a14;
  uint64_t v52 = a13;
  sub_20A5B3AE8(a2, (uint64_t)v58);
  long long v49 = v58[0];
  long long v48 = v58[1];
  long long v47 = v58[2];
  long long v46 = v58[3];
  long long v45 = v58[4];
  uint64_t v44 = v59;
  uint64_t v43 = v60;
  int v42 = v61;
  uint64_t v26 = sub_20A8C2990();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v30 = swift_bridgeObjectRetain();
  uint64_t v31 = sub_20A76048C(v30, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = sub_20A76048C(v32, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_20A75FBE0(v34, a1);
  swift_bridgeObjectRelease();
  swift_release();
  sub_20A8C2940();
  LOBYTE(a1) = sub_20A8C2840();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  double v37 = -a16;
  char v57 = v42;
  double v38 = 0.0;
  if (a1) {
    double v37 = 0.0;
  }
  else {
    double v38 = a15;
  }
  *(double *)a4 = a5;
  *(double *)(a4 + 8) = a6;
  *(double *)(a4 + 16) = a7;
  *(double *)(a4 + 24) = a8;
  *(double *)(a4 + 32) = a9;
  *(double *)(a4 + 40) = a10;
  *(double *)(a4 + 48) = v50;
  *(double *)(a4 + 56) = v51;
  *(unsigned char *)(a4 + 64) = 0;
  *(void *)(a4 + 72) = v31;
  *(void *)(a4 + 80) = v33;
  *(void *)(a4 + 88) = v35;
  *(_OWORD *)(a4 + 96) = v49;
  *(_OWORD *)(a4 + 112) = v48;
  *(_OWORD *)(a4 + 128) = v47;
  *(_OWORD *)(a4 + 144) = v46;
  *(_OWORD *)(a4 + 160) = v45;
  uint64_t v39 = v43;
  *(void *)(a4 + 176) = v44;
  *(void *)(a4 + 184) = v39;
  *(unsigned char *)(a4 + 192) = v57;
  *(void *)(a4 + 200) = v52;
  *(void *)(a4 + 208) = v53;
  *(double *)(a4 + 216) = a15;
  uint64_t v40 = v54;
  *(double *)(a4 + 224) = a16;
  *(void *)(a4 + 232) = v40;
  *(void *)(a4 + 240) = v55;
  *(double *)(a4 + 248) = v37;
  *(double *)(a4 + 256) = v38;
  *(unsigned char *)(a4 + 264) = v56;
  return result;
}

uint64_t sub_20A75C4B8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QuoteDetailViewLayoutAttributesFactory()
{
  return self;
}

size_t sub_20A75C514(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouSection();
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 16);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  sub_20A760840(0, &qword_26AC7FEA8, MEMORY[0x263F7AF50], MEMORY[0x263F8E0F8]);
  uint64_t v6 = *(void *)(sub_20A8C4020() - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  double v9 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v9);
  if (v7)
  {
    if (result - v8 != 0x8000000000000000 || v7 != -1)
    {
      _OWORD v9[2] = v5;
      v9[3] = 2 * ((uint64_t)(result - v8) / v7);
      sub_20A760900(a1, (uint64_t)v4);
      uint64_t v12 = sub_20A75CD94(&v14, (uint64_t)v9 + v8, v5);
      swift_release();
      if (v12 == v5) {
        return (size_t)v9;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_20A75C6B4(unint64_t a1)
{
  return sub_20A75C6E4(a1, (void (*)(void *, uint64_t, unint64_t))sub_20A4AD794);
}

void *sub_20A75C6CC(unint64_t a1)
{
  return sub_20A75C6E4(a1, (void (*)(void *, uint64_t, unint64_t))sub_20A4AD9DC);
}

void *sub_20A75C6E4(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      sub_20A7607BC(0, (unint64_t *)&qword_26AC80140, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

void *sub_20A75C810(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_20A7607BC(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_20A75D05C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_20A6BDA0C();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_20A75C918(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_20A75C980(a1, a2, a3, a4, (unint64_t *)&qword_26AC7FEA0, MEMORY[0x263F7AF08], MEMORY[0x263F7AF08]);
}

uint64_t sub_20A75C94C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_20A75C980(a1, a2, a3, a4, &qword_26AC7FEA8, MEMORY[0x263F7AF50], MEMORY[0x263F7AF50]);
}

uint64_t sub_20A75C980(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  unint64_t v7 = a4 >> 1;
  uint64_t v8 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v8) {
    return MEMORY[0x263F8EE78];
  }
  if (v8 <= 0)
  {
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    if (v7 != a3)
    {
LABEL_10:
      if (v8 < 0) {
        goto LABEL_24;
      }
      uint64_t v18 = *(void *)(a7(0) - 8);
      uint64_t v19 = (char *)v15 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      uint64_t v20 = *(void *)(v18 + 72);
      unint64_t v21 = a2 + v20 * a3;
      uint64_t v22 = v20 * v8;
      long long v23 = &v19[v22];
      unint64_t v24 = v21 + v22;
      if (v21 < (unint64_t)v23 && (unint64_t)v19 < v24) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v15;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_20A760840(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v12 = *(void *)(a7(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (void *)swift_allocObject();
  size_t v16 = _swift_stdlib_malloc_size(v15);
  if (v13)
  {
    if (v16 - v14 == 0x8000000000000000 && v13 == -1) {
      goto LABEL_23;
    }
    v15[2] = v8;
    v15[3] = 2 * ((uint64_t)(v16 - v14) / v13);
    if (v7 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A75CBE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_20A75C980(a1, a2, a3, a4, &qword_26AC7FFE8, MEMORY[0x263F7DB68], MEMORY[0x263F7DB68]);
}

uint64_t sub_20A75CC18(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  int64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        CGFloat v10 = v8 + 4;
        if (a2 + a3 < (unint64_t)v8 + v5 + 32 && (unint64_t)v10 < a2 + a3 + v5) {
          goto LABEL_17;
        }
        memcpy(v10, (const void *)(a2 + a3), v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_20A7607BC(0, &qword_26AC80060, (uint64_t)&type metadata for QuoteDetailViewComponent, MEMORY[0x263F8E0F8]);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * v9 - 64;
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A75CD94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_20A760840(0, &qword_26AC69020, MEMORY[0x263F7AF50], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  size_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_20A8C4020();
  uint64_t v27 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v26 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = *(void *)(v3 + 16);
  *(void *)(v12 + 24) = 0;
  sub_20A57F15C();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_20A57F154;
  *(void *)(v13 + 24) = v12;
  swift_bridgeObjectRetain();
  uint64_t result = sub_20A7608A4(v3);
  uint64_t v15 = 0;
  if (!a2 || !a3)
  {
LABEL_12:
    *a1 = v13;
    return v15;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    unint64_t v24 = a1;
    (*(void (**)(uint64_t))(v13 + 16))(result);
    uint64_t v16 = v27 + 48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v9, 1, v10) == 1)
    {
      uint64_t v15 = 0;
LABEL_9:
      sub_20A7603A4((uint64_t)v9, &qword_26AC69020, MEMORY[0x263F7AF50]);
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v17 = a3;
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v16 - 16);
      uint64_t v23 = v17;
      uint64_t v25 = v17 - 1;
      uint64_t v19 = v27;
      while (1)
      {
        uint64_t v20 = v26;
        v18(v26, v9, v10);
        uint64_t v21 = ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a2, v20, v10);
        if (v25 == v15) {
          break;
        }
        a2 += *(void *)(v19 + 72);
        (*(void (**)(uint64_t))(v13 + 16))(v21);
        ++v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v10) == 1) {
          goto LABEL_9;
        }
      }
      uint64_t v15 = v23;
    }
    a1 = v24;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A75D05C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  int64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *int64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_20A75D25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10)
{
  uint64_t v129 = type metadata accessor for QuoteDetailViewStyler();
  uint64_t v130 = &off_26BE712D8;
  v128[0] = a4;
  swift_retain();
  sub_20A8C96D0();
  sub_20A8C96D0();
  sub_20A8C9820();
  double v20 = v19;
  sub_20A8CE970();
  double v22 = v21;
  sub_20A8C9820();
  uint64_t v24 = *(void *)(a5 + 16);
  if (!v24)
  {
    sub_20A4D3F80(MEMORY[0x263F8EE78]);
LABEL_17:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v128);
    return a6;
  }
  double v25 = v23;
  uint64_t v103 = a2;
  uint64_t v104 = a3;
  double v105 = a8;
  double v106 = a9;
  uint64_t v107 = a7;
  uint64_t v108 = a6;
  double v110 = (v20 - v22 - a9) / (double)a6;
  uint64_t v123 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v118 = (void *)*MEMORY[0x263F814F0];
  uint64_t v116 = (void *)*MEMORY[0x263F81500];
  swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  uint64_t v27 = MEMORY[0x263F8EE80];
  uint64_t v124 = a5;
  uint64_t v125 = a1;
  uint64_t v122 = v24;
  do
  {
    uint64_t v127 = v27;
    uint64_t v28 = a5 + v26++;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 32);
    unsigned __int8 v126 = *(unsigned char *)(v28 + 32);
    uint64_t v30 = __swift_project_boxed_opaque_existential_1(v128, v129);
    sub_20A577278(v29, 0);
    uint64_t v31 = (void *)*v30;
    sub_20A760840(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
    *(void *)(inited + 32) = v118;
    swift_bridgeObjectRetain();
    id v121 = v118;
    *(void *)(inited + 40) = sub_20A8CEE30();
    *(void *)(inited + 64) = v123;
    *(void *)(inited + 72) = v116;
    uint64_t v33 = v31 + 2;
    uint64_t v34 = v31[5];
    uint64_t v35 = v31[6];
    __swift_project_boxed_opaque_existential_1(v33, v34);
    uint64_t v36 = *(void *)(v35 + 16);
    double v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 40);
    id v120 = v116;
    uint64_t v38 = v37(v34, v36);
    uint64_t v39 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(inited + 104) = v39;
    *(void *)(inited + 80) = v38;
    sub_20A4CF8B0(inited);
    id v40 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v41 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A4393AC();
    int v42 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v43 = objc_msgSend(v40, sel_initWithString_attributes_, v41, v42);
    swift_bridgeObjectRelease();

    a5 = v124;
    objc_msgSend(v43, sel_boundingRectWithSize_options_context_, 0, 0, v25, 1.79769313e308);
    CGFloat x = v131.origin.x;
    CGFloat y = v131.origin.y;
    CGFloat width = v131.size.width;
    CGFloat height = v131.size.height;
    double v48 = ceil(CGRectGetWidth(v131));
    v132.origin.CGFloat x = x;
    v132.origin.CGFloat y = y;
    v132.size.CGFloat width = width;
    v132.size.CGFloat height = height;
    double v49 = ceil(CGRectGetHeight(v132));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_20A7A3FB8((uint64_t)v43, v126, isUniquelyReferenced_nonNull_native, v48, v49);
    uint64_t v27 = v127;
    swift_bridgeObjectRelease();
  }
  while (v122 != v26);
  uint64_t v115 = v39;
  swift_bridgeObjectRelease();
  unint64_t v51 = sub_20A4D3F80(MEMORY[0x263F8EE78]);
  unint64_t result = swift_bridgeObjectRetain();
  uint64_t v53 = 0;
  double v114 = v25;
  uint64_t v55 = v120;
  uint64_t v54 = v121;
  while (1)
  {
    if (!*(void *)(v27 + 16))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    char v59 = *(unsigned char *)(a5 + v53 + 32);
    unint64_t result = sub_20A4D1C34(v59);
    if ((v60 & 1) == 0) {
      goto LABEL_19;
    }
    unint64_t v119 = v51;
    double v61 = v110 - *(double *)(*(void *)(v27 + 56) + 24 * result) - a10;
    sub_20A5766F0(v59);
    unsigned __int8 v117 = v59;
    CGFloat v62 = (void *)*__swift_project_boxed_opaque_existential_1(v128, v129);
    uint64_t v63 = swift_initStackObject();
    *(_OWORD *)(v63 + 16) = xmmword_20A8D4540;
    *(void *)(v63 + 32) = v54;
    swift_bridgeObjectRetain();
    id v113 = v54;
    *(void *)(v63 + 40) = sub_20A8CEE20();
    *(void *)(v63 + 64) = v123;
    *(void *)(v63 + 72) = v55;
    CGFloat v64 = v62 + 2;
    uint64_t v66 = v62[5];
    uint64_t v65 = v62[6];
    __swift_project_boxed_opaque_existential_1(v64, v66);
    uint64_t v67 = *(void *)(v65 + 16);
    double v68 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 184);
    id v112 = v55;
    uint64_t v69 = v68(v66, v67);
    *(void *)(v63 + 104) = v115;
    *(void *)(v63 + 80) = v69;
    sub_20A4CF8B0(v63);
    id v70 = objc_allocWithZone(MEMORY[0x263F086A0]);
    double v71 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    double v72 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v73 = objc_msgSend(v70, sel_initWithString_attributes_, v71, v72);

    objc_msgSend(v73, sel_boundingRectWithSize_options_context_, 0, 0, v25, 1.79769313e308);
    CGFloat v74 = v133.origin.x;
    CGFloat v75 = v133.origin.y;
    CGFloat v76 = v133.size.width;
    CGFloat v77 = v133.size.height;
    double v78 = ceil(CGRectGetWidth(v133));
    v134.origin.CGFloat x = v74;
    v134.origin.CGFloat y = v75;
    v134.size.CGFloat width = v76;
    v134.size.CGFloat height = v77;
    double v79 = CGRectGetHeight(v134);
    if (v78 >= v61) {
      break;
    }
    double v56 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v57 = v73;
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    sub_20A7A3FB8((uint64_t)v57, v117, v58, v78, ceil(v56));
    unint64_t v51 = v119;
LABEL_6:

    unint64_t result = swift_bridgeObjectRelease();
    a5 = v124;
    ++v53;
    uint64_t v54 = v121;
    uint64_t v27 = v127;
    double v25 = v114;
    uint64_t v55 = v120;
    if (v122 == v53)
    {
      swift_bridgeObjectRelease();
      a6 = v108;
      goto LABEL_17;
    }
  }
  uint64_t v109 = v73;
  double v80 = (void *)*__swift_project_boxed_opaque_existential_1(v128, v129);
  uint64_t v81 = swift_initStackObject();
  *(_OWORD *)(v81 + 16) = xmmword_20A8D4540;
  *(void *)(v81 + 32) = v113;
  swift_bridgeObjectRetain();
  id v82 = v113;
  *(void *)(v81 + 40) = sub_20A8CEE20();
  *(void *)(v81 + 64) = v123;
  *(void *)(v81 + 72) = v112;
  uint64_t v83 = v80 + 2;
  uint64_t v84 = v80[5];
  uint64_t v85 = v80[6];
  __swift_project_boxed_opaque_existential_1(v83, v84);
  uint64_t v86 = *(void *)(v85 + 16);
  long long v87 = *(uint64_t (**)(uint64_t, uint64_t))(v86 + 184);
  id v88 = v112;
  uint64_t v89 = v87(v84, v86);
  *(void *)(v81 + 104) = v115;
  *(void *)(v81 + 80) = v89;
  sub_20A4CF8B0(v81);
  id v90 = objc_allocWithZone(MEMORY[0x263F086A0]);
  CGRect v91 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  CGRect v92 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v93 = objc_msgSend(v90, sel_initWithString_attributes_, v91, v92);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  objc_msgSend(v93, sel_boundingRectWithSize_options_context_, 0, 0, v114, 1.79769313e308);
  CGFloat v94 = v135.origin.x;
  CGFloat v95 = v135.origin.y;
  CGFloat v96 = v135.size.width;
  CGFloat v97 = v135.size.height;
  double v98 = ceil(CGRectGetWidth(v135));
  v136.origin.CGFloat x = v94;
  v136.origin.CGFloat y = v95;
  v136.size.CGFloat width = v96;
  v136.size.CGFloat height = v97;
  double v99 = CGRectGetHeight(v136);
  if (v98 < v61 || v108 == 1)
  {
    double v100 = ceil(v99);
    id v57 = v93;
    char v101 = swift_isUniquelyReferenced_nonNull_native();
    sub_20A7A3FB8((uint64_t)v57, v117, v101, v98, v100);
    unint64_t v51 = v119;

    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if (!__OFSUB__(v108, 1))
  {
    uint64_t v102 = __swift_project_boxed_opaque_existential_1(v128, v129);
    a6 = sub_20A75D25C(v125, v103, v104, *v102, v124, v108 - 1, v107, v105, v106, a10);

    goto LABEL_17;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_20A75DBD4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v255 = a7;
  uint64_t v256 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v254);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(boxed_opaque_existential_1, a4, a7);
  sub_20A8C9820();
  int64_t v17 = *(void *)(a5 + 16);
  uint64_t v18 = MEMORY[0x263F8EE80];
  uint64_t v220 = a2;
  v221 = a3;
  uint64_t v232 = a1;
  if (!v17)
  {
    double v243 = 0.0;
    uint64_t v244 = MEMORY[0x263F8EE80];
    uint64_t v83 = MEMORY[0x263F8EE80];
    double v72 = 0.0;
    uint64_t v93 = *a3;
    if (*a3) {
      goto LABEL_25;
    }
LABEL_59:
    __break(1u);
LABEL_60:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v117 = 0.0;
    uint64_t v176 = MEMORY[0x263F8EE80];
    double v249 = 0.0;
LABEL_62:
    swift_bridgeObjectRelease();
    uint64_t v177 = v176 + 64;
    uint64_t v178 = 1 << *(unsigned char *)(v176 + 32);
    uint64_t v179 = -1;
    if (v178 < 64) {
      uint64_t v179 = ~(-1 << v178);
    }
    unint64_t v180 = v179 & *(void *)(v176 + 64);
    int64_t v181 = (unint64_t)(v178 + 63) >> 6;
    swift_bridgeObjectRetain_n();
    int64_t v182 = 0;
    double v183 = 0.0;
    while (1)
    {
      if (v180)
      {
        unint64_t v184 = __clz(__rbit64(v180));
        v180 &= v180 - 1;
        unint64_t v185 = v184 | (v182 << 6);
      }
      else
      {
        int64_t v187 = v182 + 1;
        if (__OFADD__(v182, 1)) {
          goto LABEL_112;
        }
        if (v187 >= v181)
        {
LABEL_89:
          swift_release();
          swift_bridgeObjectRelease();
          sub_20A8C9720();
          double v190 = 0.0;
          if (v191 > 990.0)
          {
            sub_20A8C9710();
            double v193 = v192;
            sub_20A8C96D0();
            double v190 = v193 - v194;
          }
          sub_20A8C9720();
          double v196 = v195;
          sub_20A8C9720();
          double v198 = v197;
          if (v196 > 990.0)
          {
            sub_20A8C9710();
            double v200 = v198 - v199;
            sub_20A8C9710();
            double v202 = v200 - v201;
            sub_20A8C96D0();
            double v204 = v203;
            sub_20A8C96D0();
            double v198 = v202 + v204 + v205;
          }
          v286.size.CGFloat height = v183 + 15.0 + 15.0;
          v286.origin.CGFloat y = 0.0;
          v286.origin.CGFloat x = v190;
          v286.size.CGFloat width = v198;
          CGRect v287 = CGRectIntegral(v286);
          CGFloat x = v287.origin.x;
          CGFloat y = v287.origin.y;
          CGFloat width = v287.size.width;
          CGFloat height = v287.size.height;
          uint64_t v210 = type metadata accessor for QuoteDetailViewLayoutOptions();
          sub_20A75B55C(v232, v220, (uint64_t)v257, v117 + 15.0 + v249 + *(double *)(v220 + *(int *)(v210 + 24)));
          sub_20A8C9720();
          CGFloat v212 = v211;
          sub_20A5B3AE8((uint64_t)v257, (uint64_t)v258);
          CGFloat v213 = x;
          CGFloat v214 = y;
          CGFloat v215 = width;
          CGFloat v216 = height;
          if ((v259 & 1) == 0)
          {
            CGFloat v213 = *(double *)&v258[4];
            CGFloat v214 = *(double *)&v258[5];
            CGFloat v215 = *(double *)&v258[6];
            CGFloat v216 = *(double *)&v258[7];
          }
          v288.size.CGFloat height = CGRectGetMaxY(*(CGRect *)&v213);
          v288.origin.CGFloat x = 0.0;
          v288.origin.CGFloat y = 0.0;
          v288.size.CGFloat width = v212;
          CGRectIntegral(v288);
          *(CGFloat *)(a6 + 56) = v212;
          *(unsigned char *)(a6 + 64) = 0;
          MEMORY[0x270FA5388](v217);
          sub_20A8C9690();
          memcpy(a9, v250, 0x109uLL);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v254);
          return;
        }
        unint64_t v188 = *(void *)(v177 + 8 * v187);
        ++v182;
        if (!v188)
        {
          int64_t v182 = v187 + 1;
          if (v187 + 1 >= v181) {
            goto LABEL_89;
          }
          unint64_t v188 = *(void *)(v177 + 8 * v182);
          if (!v188)
          {
            int64_t v182 = v187 + 2;
            if (v187 + 2 >= v181) {
              goto LABEL_89;
            }
            unint64_t v188 = *(void *)(v177 + 8 * v182);
            if (!v188)
            {
              int64_t v182 = v187 + 3;
              if (v187 + 3 >= v181) {
                goto LABEL_89;
              }
              unint64_t v188 = *(void *)(v177 + 8 * v182);
              if (!v188)
              {
                int64_t v182 = v187 + 4;
                if (v187 + 4 >= v181) {
                  goto LABEL_89;
                }
                unint64_t v188 = *(void *)(v177 + 8 * v182);
                if (!v188)
                {
                  int64_t v182 = v187 + 5;
                  if (v187 + 5 >= v181) {
                    goto LABEL_89;
                  }
                  unint64_t v188 = *(void *)(v177 + 8 * v182);
                  if (!v188)
                  {
                    int64_t v189 = v187 + 6;
                    if (v189 >= v181) {
                      goto LABEL_89;
                    }
                    unint64_t v188 = *(void *)(v177 + 8 * v189);
                    if (!v188)
                    {
                      while (1)
                      {
                        int64_t v182 = v189 + 1;
                        if (__OFADD__(v189, 1)) {
                          goto LABEL_114;
                        }
                        if (v182 >= v181) {
                          goto LABEL_89;
                        }
                        unint64_t v188 = *(void *)(v177 + 8 * v182);
                        ++v189;
                        if (v188) {
                          goto LABEL_88;
                        }
                      }
                    }
                    int64_t v182 = v189;
                  }
                }
              }
            }
          }
        }
LABEL_88:
        unint64_t v180 = (v188 - 1) & v188;
        unint64_t v185 = __clz(__rbit64(v188)) + (v182 << 6);
      }
      double MaxY = CGRectGetMaxY(*(CGRect *)(*(void *)(v176 + 56) + 48 * v185));
      if (v183 <= MaxY) {
        double v183 = MaxY;
      }
    }
  }
  double v19 = v16;
  v226 = (unsigned __int8 *)(a5 + 32);
  uint64_t v247 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  v228 = (void *)*MEMORY[0x263F814F0];
  v223 = (void *)*MEMORY[0x263F81500];
  swift_bridgeObjectRetain();
  uint64_t v20 = 0;
  uint64_t v21 = MEMORY[0x263F8EE80];
  int64_t v245 = v17;
  do
  {
    uint64_t v248 = v21;
    uint64_t v233 = v20 + 1;
    char v22 = *(unsigned char *)(a5 + v20 + 32);
    unsigned __int8 v229 = v22;
    double v23 = __swift_project_boxed_opaque_existential_1(v254, v255);
    sub_20A5766F0(v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)*v23;
    sub_20A760840(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_20A8D4540;
    *(void *)(v25 + 32) = v228;
    swift_bridgeObjectRetain();
    id v242 = v228;
    *(void *)(v25 + 40) = sub_20A8CEE20();
    *(void *)(v25 + 64) = v247;
    *(void *)(v25 + 72) = v223;
    uint64_t v26 = v24 + 2;
    uint64_t v27 = v24[5];
    uint64_t v28 = v24[6];
    __swift_project_boxed_opaque_existential_1(v26, v27);
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v30 = a5;
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 184);
    id v240 = v223;
    uint64_t v32 = v31(v27, v29);
    a5 = v30;
    uint64_t v33 = v32;
    uint64_t v238 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(v25 + 104) = v238;
    *(void *)(v25 + 80) = v33;
    sub_20A4CF8B0(v25);
    id v34 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v35 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A4393AC();
    uint64_t v36 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v37 = objc_msgSend(v34, sel_initWithString_attributes_, v35, v36);
    swift_bridgeObjectRelease();

    objc_msgSend(v37, sel_boundingRectWithSize_options_context_, 0, 0, v19, 1.79769313e308);
    CGFloat v38 = v270.origin.x;
    CGFloat v39 = v270.origin.y;
    CGFloat v40 = v270.size.width;
    CGFloat v41 = v270.size.height;
    double v42 = ceil(CGRectGetWidth(v270));
    v271.origin.CGFloat x = v38;
    v271.origin.CGFloat y = v39;
    v271.size.CGFloat width = v40;
    v271.size.CGFloat height = v41;
    double v43 = ceil(CGRectGetHeight(v271));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v250[0] = v248;
    sub_20A7A3FB8((uint64_t)v37, v229, isUniquelyReferenced_nonNull_native, v42, v43);
    uint64_t v21 = v248;
    swift_bridgeObjectRelease();
    uint64_t v20 = v233;
  }
  while (v245 != v233);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v224 = v30;
  uint64_t v45 = 0;
  uint64_t v46 = MEMORY[0x263F8EE80];
  do
  {
    uint64_t v234 = v45 + 1;
    uint64_t v47 = *(unsigned __int8 *)(v224 + v45 + 32);
    unsigned __int8 v230 = *(unsigned char *)(v224 + v45 + 32);
    double v48 = __swift_project_boxed_opaque_existential_1(v254, v255);
    sub_20A577278(v47, 0);
    double v49 = (void *)*v48;
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_20A8D4540;
    *(void *)(v50 + 32) = v242;
    swift_bridgeObjectRetain();
    id v51 = v242;
    *(void *)(v50 + 40) = sub_20A8CEE30();
    *(void *)(v50 + 64) = v247;
    *(void *)(v50 + 72) = v240;
    uint64_t v52 = v49 + 2;
    uint64_t v54 = v49[5];
    uint64_t v53 = v49[6];
    __swift_project_boxed_opaque_existential_1(v52, v54);
    uint64_t v55 = *(void *)(v53 + 16);
    double v56 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 40);
    id v57 = v240;
    uint64_t v58 = v55;
    int64_t v59 = v245;
    uint64_t v60 = v56(v54, v58);
    *(void *)(v50 + 104) = v238;
    *(void *)(v50 + 80) = v60;
    sub_20A4CF8B0(v50);
    id v61 = objc_allocWithZone(MEMORY[0x263F086A0]);
    CGFloat v62 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    uint64_t v63 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v64 = objc_msgSend(v61, sel_initWithString_attributes_, v62, v63);
    swift_bridgeObjectRelease();

    objc_msgSend(v64, sel_boundingRectWithSize_options_context_, 0, 0, v19, 1.79769313e308);
    CGFloat v65 = v272.origin.x;
    CGFloat v66 = v272.origin.y;
    CGFloat v67 = v272.size.width;
    CGFloat v68 = v272.size.height;
    double v69 = ceil(CGRectGetWidth(v272));
    v273.origin.CGFloat x = v65;
    v273.origin.CGFloat y = v66;
    v273.size.CGFloat width = v67;
    v273.size.CGFloat height = v68;
    double v70 = ceil(CGRectGetHeight(v273));
    char v71 = swift_isUniquelyReferenced_nonNull_native();
    v250[0] = v46;
    sub_20A7A3FB8((uint64_t)v64, v230, v71, v69, v70);
    swift_bridgeObjectRelease();
    uint64_t v45 = v234;
  }
  while (v245 != v234);
  a5 = v224;
  swift_bridgeObjectRelease();
  double v72 = 0.0;
  id v73 = v226;
  a3 = v221;
  do
  {
    if (!*(void *)(v248 + 16)) {
      goto LABEL_104;
    }
    uint64_t v244 = v46;
    unsigned __int8 v75 = *v73++;
    unsigned __int8 v74 = v75;
    unint64_t v76 = sub_20A4D1C34(v75);
    if ((v77 & 1) == 0) {
      goto LABEL_105;
    }
    if (!*(void *)(v46 + 16)) {
      goto LABEL_106;
    }
    double v78 = *(double *)(*(void *)(v248 + 56) + 24 * v76);
    unint64_t v79 = sub_20A4D1C34(v74);
    if ((v80 & 1) == 0) {
      goto LABEL_107;
    }
    uint64_t v81 = *(void *)(v46 + 56);
    if (v72 <= v78 + *(double *)(v81 + 24 * v79)) {
      double v72 = v78 + *(double *)(v81 + 24 * v79);
    }
    --v59;
  }
  while (v59);
  double v243 = 0.0;
  int64_t v17 = v245;
  int64_t v82 = v245;
  uint64_t v83 = v248;
  uint64_t v18 = MEMORY[0x263F8EE80];
  do
  {
    if (!*(void *)(v248 + 16)) {
      goto LABEL_108;
    }
    unsigned __int8 v85 = *v226;
    unsigned __int8 v84 = *v226++;
    unint64_t v86 = sub_20A4D1C34(v85);
    if ((v87 & 1) == 0) {
      goto LABEL_109;
    }
    if (!*(void *)(v244 + 16)) {
      goto LABEL_110;
    }
    double v88 = *(double *)(*(void *)(v248 + 56) + 24 * v86 + 8);
    unint64_t v89 = sub_20A4D1C34(v84);
    if ((v90 & 1) == 0) {
      goto LABEL_111;
    }
    double v91 = *(double *)(*(void *)(v244 + 56) + 24 * v89 + 8);
    if (v88 > v91) {
      double v91 = v88;
    }
    double v92 = v243;
    if (v243 <= v91) {
      double v92 = v91;
    }
    double v243 = v92;
    --v82;
  }
  while (v82);
  uint64_t v93 = *v221;
  if (!*v221) {
    goto LABEL_59;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v225 = sub_20A75FDDC(0, v17, v93, a5, a3);
  swift_bridgeObjectRelease();
  double v94 = *((double *)a3 + 3);
  if (*((double *)a3 + 2) > v72 + *((double *)a3 + 4)) {
    double v95 = *((double *)a3 + 2);
  }
  else {
    double v95 = v72 + *((double *)a3 + 4);
  }
  sub_20A8C96D0();
  double v97 = v96;
  sub_20A8C96D0();
  double v99 = v98;
  sub_20A8C9720();
  double v101 = v100;
  sub_20A8C9720();
  double v103 = v102;
  if (v101 > 990.0)
  {
    sub_20A8C9710();
    double v105 = v103 - v104;
    sub_20A8C9710();
    double v107 = v105 - v106;
    sub_20A8C96D0();
    double v109 = v108;
    sub_20A8C96D0();
    double v103 = v107 + v109 + v110;
  }
  uint64_t v111 = v225;
  uint64_t v112 = *(void *)(v225 + 16);
  uint64_t v231 = v112;
  double v113 = (double)(v112 - 1);
  double v114 = v103 - v97 - v99 - (v95 * (double)v112 + v94 * v113);
  uint64_t v115 = v244;
  if (v114 > 0.0)
  {
    double v95 = v95 + v114 * 0.666666667 / (double)v112;
    double v94 = v94 + v114 * 0.333333333 / v113;
  }
  uint64_t v253 = v18;
  uint64_t v252 = v18;
  v251 = (void *)MEMORY[0x263F8EE78];
  if (!v112) {
    goto LABEL_60;
  }
  double v227 = v94 + v95;
  double v222 = v94 * 0.5;
  swift_bridgeObjectRetain();
  unint64_t v116 = 0;
  double v117 = 0.0;
  double v249 = 0.0;
  double v118 = 0.0;
  double v235 = v95;
LABEL_36:
  if (v116 >= *(void *)(v111 + 16)) {
    goto LABEL_113;
  }
  uint64_t v120 = *(void *)(v225 + 32 + 8 * v116);
  uint64_t v241 = *(void *)(v120 + 16);
  if (!v241) {
    goto LABEL_53;
  }
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  double v237 = *((double *)a3 + 1);
  swift_bridgeObjectRetain();
  uint64_t v121 = 0;
  double v122 = 0.0;
  uint64_t v239 = v120;
  double v236 = v118;
  while (1)
  {
    unsigned __int8 v123 = *(unsigned char *)(v120 + v121 + 32);
    double v124 = v118;
    double v125 = v95;
    double v126 = v243;
    CGRect v274 = CGRectIntegral(*(CGRect *)(&v122 - 1));
    if (!*(void *)(v83 + 16)) {
      break;
    }
    CGFloat v127 = v274.origin.x;
    CGFloat v128 = v274.origin.y;
    CGFloat v129 = v274.size.width;
    CGFloat v130 = v274.size.height;
    unint64_t v131 = sub_20A4D1C34(v123);
    if ((v132 & 1) == 0) {
      goto LABEL_97;
    }
    double v246 = v117;
    uint64_t v133 = *(void *)(v83 + 56) + 24 * v131;
    CGFloat v135 = *(double *)v133;
    double v134 = *(double *)(v133 + 8);
    id v136 = *(id *)(v133 + 16);
    v275.origin.CGFloat x = v127;
    v275.origin.CGFloat y = v128;
    v275.size.CGFloat width = v129;
    v275.size.CGFloat height = v130;
    CGFloat MinX = CGRectGetMinX(v275);
    v276.origin.CGFloat x = v127;
    v276.origin.CGFloat y = v128;
    v276.size.CGFloat width = v129;
    v276.size.CGFloat height = v130;
    v277.origin.CGFloat y = CGRectGetMaxY(v276) - v134;
    v277.origin.CGFloat x = MinX;
    v277.size.CGFloat width = v135;
    v277.size.CGFloat height = v134;
    CGRect v278 = CGRectIntegral(v277);
    *(CGFloat *)&long long v265 = v278.origin.x;
    *((void *)&v265 + 1) = *(void *)&v278.origin.y;
    CGFloat v266 = v278.size.width;
    CGFloat v267 = v278.size.height;
    id v268 = v136;
    unint64_t v269 = v116;
    uint64_t v138 = v116;
    id v139 = v136;
    char v140 = swift_isUniquelyReferenced_nonNull_native();
    v250[0] = v253;
    sub_20A7A3E5C(&v265, v123, v140);
    swift_bridgeObjectRelease();
    if (!*(void *)(v115 + 16)) {
      goto LABEL_98;
    }
    unint64_t v141 = sub_20A4D1C34(v123);
    if ((v142 & 1) == 0) {
      goto LABEL_99;
    }
    uint64_t v143 = *(void *)(v115 + 56) + 24 * v141;
    double v144 = *(double *)v143;
    double v145 = *(double *)(v143 + 8);
    id v146 = *(id *)(v143 + 16);
    v279.origin.CGFloat x = v127;
    v279.origin.CGFloat y = v128;
    v279.size.CGFloat width = v129;
    v279.size.CGFloat height = v130;
    CGFloat v147 = CGRectGetMaxX(v279) - v144;
    v280.origin.CGFloat x = v127;
    v280.origin.CGFloat y = v128;
    v280.size.CGFloat width = v129;
    v280.size.CGFloat height = v130;
    v281.origin.CGFloat y = CGRectGetMaxY(v280) - v145;
    v281.origin.CGFloat x = v147;
    v281.size.CGFloat width = v144;
    v281.size.CGFloat height = v145;
    CGRect v282 = CGRectIntegral(v281);
    *(CGFloat *)&long long v260 = v282.origin.x;
    *((void *)&v260 + 1) = *(void *)&v282.origin.y;
    CGFloat v261 = v282.size.width;
    CGFloat v262 = v282.size.height;
    id v263 = v146;
    uint64_t v264 = v138;
    id v148 = v146;
    char v149 = swift_isUniquelyReferenced_nonNull_native();
    v250[0] = v252;
    sub_20A7A3E5C(&v260, v123, v149);
    swift_bridgeObjectRelease();
    if (!*(void *)(v253 + 16)) {
      goto LABEL_100;
    }
    unint64_t v150 = sub_20A4D1C34(v123);
    if ((v151 & 1) == 0) {
      goto LABEL_101;
    }
    double MinY = CGRectGetMinY(*(CGRect *)(*(void *)(v253 + 56) + 48 * v150));
    unint64_t v153 = (void *)sub_20A8CEE20();
    objc_msgSend(v153, sel_ascender);
    double v155 = v154;

    uint64_t v156 = (void *)sub_20A8CEE20();
    objc_msgSend(v156, sel_capHeight);
    double v158 = v157;

    double v159 = v249;
    if (MinY + v155 - v158 < v249) {
      double v159 = MinY + v155 - v158;
    }
    double v249 = v159;
    if (!*(void *)(v253 + 16)) {
      goto LABEL_102;
    }
    unint64_t v160 = sub_20A4D1C34(v123);
    if ((v161 & 1) == 0) {
      goto LABEL_103;
    }
    ++v121;
    double v162 = CGRectGetMaxY(*(CGRect *)(*(void *)(v253 + 56) + 48 * v160));
    uint64_t v163 = (void *)sub_20A8CEE20();
    objc_msgSend(v163, sel_descender);
    double v165 = v164;

    double v117 = v246;
    if (v246 <= v162 + v165) {
      double v117 = v162 + v165;
    }
    v283.origin.CGFloat x = v127;
    v283.origin.CGFloat y = v128;
    v283.size.CGFloat width = v129;
    v283.size.CGFloat height = v130;
    double v166 = CGRectGetMaxY(v283);

    double v118 = v236;
    double v122 = v237 + v166;
    double v95 = v235;
    uint64_t v115 = v244;
    unint64_t v116 = v138;
    uint64_t v120 = v239;
    if (v241 == v121)
    {
      swift_bridgeObjectRelease();
      a3 = v221;
      uint64_t v111 = v225;
LABEL_53:
      if (v118 > 0.0)
      {
        sub_20A8C9700();
        v284.origin.CGFloat y = v249;
        v284.size.CGFloat height = v117 - v249;
        v284.size.CGFloat width = 1.0 / v167;
        v284.origin.CGFloat x = v118 - v222;
        CGRect v285 = CGRectIntegral(v284);
        CGFloat v168 = v285.origin.x;
        CGFloat v169 = v285.origin.y;
        CGFloat v170 = v285.size.width;
        CGFloat v171 = v285.size.height;
        CGRect v172 = v251;
        unint64_t v173 = v116;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          CGRect v172 = sub_20A46D464(0, v251[2] + 1, 1, v251);
        }
        unint64_t v175 = v172[2];
        unint64_t v174 = v172[3];
        if (v175 >= v174 >> 1) {
          CGRect v172 = sub_20A46D464((void *)(v174 > 1), v175 + 1, 1, v172);
        }
        v172[2] = v175 + 1;
        unint64_t v119 = (CGFloat *)&v172[4 * v175];
        v119[4] = v168;
        v119[5] = v169;
        v119[6] = v170;
        v119[7] = v171;
        v251 = v172;
        uint64_t v115 = v244;
        unint64_t v116 = v173;
      }
      ++v116;
      double v118 = v227 + v118;
      if (v116 == v231)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v176 = v252;
        goto LABEL_62;
      }
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
}

void sub_20A75ED98(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>)
{
  uint64_t v181 = a7;
  uint64_t v182 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v180);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(boxed_opaque_existential_1, a4, a7);
  double v23 = __swift_project_boxed_opaque_existential_1(v180, v181);
  uint64_t v156 = a1;
  double v167 = a10;
  int64_t v174 = sub_20A75D25C(a1, a2, a3, *v23, a5, a3, a6, a10, a11, a12);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  sub_20A8C96D0();
  sub_20A8C96D0();
  sub_20A8C9720();
  double v29 = v28;
  sub_20A8C9720();
  double v31 = v30;
  if (v29 > 990.0)
  {
    sub_20A8C9710();
    double v33 = v31 - v32;
    sub_20A8C9710();
    double v35 = v33 - v34;
    sub_20A8C96D0();
    double v37 = v36;
    sub_20A8C96D0();
    double v31 = v35 + v37 + v38;
  }
  uint64_t v164 = a2;
  uint64_t v157 = a6;
  sub_20A8CE970();
  double v40 = v39;
  uint64_t v41 = *(void *)(a5 + 16);
  if (v41)
  {
    double v42 = (unsigned __int8 *)(a5 + 32);
    double v170 = 0.0;
    uint64_t v43 = *(void *)(a5 + 16);
    while (*(void *)(v25 + 16))
    {
      unsigned __int8 v45 = *v42++;
      unsigned __int8 v44 = v45;
      unint64_t v46 = sub_20A4D1C34(v45);
      if ((v47 & 1) == 0) {
        goto LABEL_91;
      }
      if (!*(void *)(v27 + 16)) {
        goto LABEL_92;
      }
      double v48 = *(double *)(*(void *)(v25 + 56) + 24 * v46 + 8);
      unint64_t v49 = sub_20A4D1C34(v44);
      if ((v50 & 1) == 0) {
        goto LABEL_93;
      }
      double v51 = *(double *)(*(void *)(v27 + 56) + 24 * v49 + 8);
      if (v48 > v51) {
        double v51 = v48;
      }
      double v52 = v170;
      if (v170 <= v51) {
        double v52 = v51;
      }
      double v170 = v52;
      if (!--v43) {
        goto LABEL_16;
      }
    }
    goto LABEL_90;
  }
  double v170 = 0.0;
LABEL_16:
  double v53 = ceil((double)v41 / (double)v174);
  if ((~*(void *)&v53 & 0x7FF0000000000000) == 0) {
    goto LABEL_96;
  }
  if (v53 <= -9.22337204e18)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (v53 >= 9.22337204e18)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  if ((v174 & 0x8000000000000000) == 0)
  {
    double v54 = (v31 - v40 - a11) / (double)v174;
    uint64_t v55 = (uint64_t)v53;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_20A75F9A8(0, v174, a5, v55);
    swift_bridgeObjectRelease();
    uint64_t v178 = MEMORY[0x263F8EE80];
    uint64_t v179 = MEMORY[0x263F8EE80];
    uint64_t v177 = (void *)MEMORY[0x263F8EE78];
    double v57 = 0.0;
    uint64_t v161 = *(void *)(v56 + 16);
    if (!v161)
    {
      double v172 = 0.0;
      double v173 = 0.0;
LABEL_48:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v116 = v178 + 64;
      uint64_t v117 = 1 << *(unsigned char *)(v178 + 32);
      uint64_t v118 = -1;
      if (v117 < 64) {
        uint64_t v118 = ~(-1 << v117);
      }
      unint64_t v119 = v118 & *(void *)(v178 + 64);
      int64_t v120 = (unint64_t)(v117 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      int64_t v121 = 0;
      while (1)
      {
        if (v119)
        {
          unint64_t v122 = __clz(__rbit64(v119));
          v119 &= v119 - 1;
          unint64_t v123 = v122 | (v121 << 6);
        }
        else
        {
          int64_t v125 = v121 + 1;
          if (__OFADD__(v121, 1)) {
            goto LABEL_94;
          }
          if (v125 >= v120)
          {
LABEL_75:
            swift_release();
            swift_bridgeObjectRelease();
            sub_20A8C9720();
            double v128 = 0.0;
            if (v129 > 990.0)
            {
              sub_20A8C9710();
              double v131 = v130;
              sub_20A8C96D0();
              double v128 = v131 - v132;
            }
            sub_20A8C9720();
            double v134 = v133;
            sub_20A8C9720();
            double v136 = v135;
            if (v134 > 990.0)
            {
              sub_20A8C9710();
              double v138 = v136 - v137;
              sub_20A8C9710();
              double v140 = v138 - v139;
              sub_20A8C96D0();
              double v142 = v141;
              sub_20A8C96D0();
              double v136 = v140 + v142 + v143;
            }
            v210.size.CGFloat height = v57 + 15.0 + 15.0;
            v210.origin.CGFloat y = 0.0;
            v210.origin.CGFloat x = v128;
            v210.size.CGFloat width = v136;
            CGRect v211 = CGRectIntegral(v210);
            CGFloat x = v211.origin.x;
            CGFloat y = v211.origin.y;
            CGFloat width = v211.size.width;
            CGFloat height = v211.size.height;
            uint64_t v148 = type metadata accessor for QuoteDetailViewLayoutOptions();
            sub_20A75B55C(v156, v164, (uint64_t)v183, v172 + 15.0 + v173 + *(double *)(v164 + *(int *)(v148 + 24)));
            sub_20A8C9720();
            CGFloat v150 = v149;
            sub_20A5B3AE8((uint64_t)v183, (uint64_t)v184);
            CGFloat v151 = x;
            CGFloat v152 = y;
            CGFloat v153 = width;
            CGFloat v154 = height;
            if ((v185 & 1) == 0)
            {
              CGFloat v151 = *(double *)&v184[4];
              CGFloat v152 = *(double *)&v184[5];
              CGFloat v153 = *(double *)&v184[6];
              CGFloat v154 = *(double *)&v184[7];
            }
            v212.size.CGFloat height = CGRectGetMaxY(*(CGRect *)&v151);
            v212.origin.CGFloat x = 0.0;
            v212.origin.CGFloat y = 0.0;
            v212.size.CGFloat width = v150;
            CGRectIntegral(v212);
            *(CGFloat *)(v157 + 56) = v150;
            *(unsigned char *)(v157 + 64) = 0;
            MEMORY[0x270FA5388](v155);
            sub_20A8C9690();
            memcpy(a9, v176, 0x109uLL);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v180);
            return;
          }
          unint64_t v126 = *(void *)(v116 + 8 * v125);
          ++v121;
          if (!v126)
          {
            int64_t v121 = v125 + 1;
            if (v125 + 1 >= v120) {
              goto LABEL_75;
            }
            unint64_t v126 = *(void *)(v116 + 8 * v121);
            if (!v126)
            {
              int64_t v121 = v125 + 2;
              if (v125 + 2 >= v120) {
                goto LABEL_75;
              }
              unint64_t v126 = *(void *)(v116 + 8 * v121);
              if (!v126)
              {
                int64_t v121 = v125 + 3;
                if (v125 + 3 >= v120) {
                  goto LABEL_75;
                }
                unint64_t v126 = *(void *)(v116 + 8 * v121);
                if (!v126)
                {
                  int64_t v121 = v125 + 4;
                  if (v125 + 4 >= v120) {
                    goto LABEL_75;
                  }
                  unint64_t v126 = *(void *)(v116 + 8 * v121);
                  if (!v126)
                  {
                    int64_t v121 = v125 + 5;
                    if (v125 + 5 >= v120) {
                      goto LABEL_75;
                    }
                    unint64_t v126 = *(void *)(v116 + 8 * v121);
                    if (!v126)
                    {
                      int64_t v127 = v125 + 6;
                      if (v127 >= v120) {
                        goto LABEL_75;
                      }
                      unint64_t v126 = *(void *)(v116 + 8 * v127);
                      if (!v126)
                      {
                        while (1)
                        {
                          int64_t v121 = v127 + 1;
                          if (__OFADD__(v127, 1)) {
                            goto LABEL_100;
                          }
                          if (v121 >= v120) {
                            goto LABEL_75;
                          }
                          unint64_t v126 = *(void *)(v116 + 8 * v121);
                          ++v127;
                          if (v126) {
                            goto LABEL_74;
                          }
                        }
                      }
                      int64_t v121 = v127;
                    }
                  }
                }
              }
            }
          }
LABEL_74:
          unint64_t v119 = (v126 - 1) & v126;
          unint64_t v123 = __clz(__rbit64(v126)) + (v121 << 6);
        }
        double MaxY = CGRectGetMaxY(*(CGRect *)(*(void *)(v178 + 56) + 48 * v123));
        if (v57 <= MaxY) {
          double v57 = MaxY;
        }
      }
    }
    double v160 = v54 + a11;
    uint64_t v162 = v56 + 32;
    swift_bridgeObjectRetain();
    unint64_t v58 = 0;
    double v172 = 0.0;
    double v173 = 0.0;
    double v171 = 0.0;
    uint64_t v163 = v25;
    double v166 = (v31 - v40 - a11) / (double)v174;
    uint64_t v159 = v56;
    uint64_t v165 = v27;
    while (1)
    {
      if (v58 >= *(void *)(v56 + 16)) {
        goto LABEL_95;
      }
      uint64_t v59 = *(void *)(v162 + 8 * v58);
      uint64_t v169 = *(void *)(v59 + 16);
      if (v169) {
        break;
      }
LABEL_23:
      ++v58;
      double v171 = v160 + v171;
      if (v58 == v161)
      {
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
    }
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    swift_bridgeObjectRetain();
    uint64_t v60 = 0;
    double v61 = 0.0;
    uint64_t v168 = v59;
    while (1)
    {
      unsigned __int8 v64 = *(unsigned char *)(v59 + v60 + 32);
      v197.size.CGFloat height = v170;
      v197.origin.CGFloat x = v171;
      v197.origin.CGFloat y = v61;
      v197.size.CGFloat width = v54;
      CGRect v198 = CGRectIntegral(v197);
      if (!*(void *)(v25 + 16)) {
        break;
      }
      CGFloat v65 = v198.origin.x;
      CGFloat v66 = v198.origin.y;
      CGFloat v67 = v198.size.width;
      CGFloat v68 = v198.size.height;
      unint64_t v69 = sub_20A4D1C34(v64);
      if ((v70 & 1) == 0) {
        goto LABEL_83;
      }
      uint64_t v71 = *(void *)(v25 + 56) + 24 * v69;
      CGFloat v72 = *(double *)v71;
      double v73 = *(double *)(v71 + 8);
      id v74 = *(id *)(v71 + 16);
      v199.origin.CGFloat x = v65;
      v199.origin.CGFloat y = v66;
      v199.size.CGFloat width = v67;
      v199.size.CGFloat height = v68;
      CGFloat MinX = CGRectGetMinX(v199);
      v200.origin.CGFloat x = v65;
      v200.origin.CGFloat y = v66;
      v200.size.CGFloat width = v67;
      v200.size.CGFloat height = v68;
      v201.origin.CGFloat y = CGRectGetMaxY(v200) - v73;
      v201.origin.CGFloat x = MinX;
      v201.size.CGFloat width = v72;
      v201.size.CGFloat height = v73;
      CGRect v202 = CGRectIntegral(v201);
      *(CGFloat *)&long long v191 = v202.origin.x;
      *((void *)&v191 + 1) = *(void *)&v202.origin.y;
      CGFloat v192 = v202.size.width;
      CGFloat v193 = v202.size.height;
      id v194 = v74;
      unint64_t v195 = v58;
      id v76 = v74;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v176[0] = v179;
      sub_20A7A3E5C(&v191, v64, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      if (!*(void *)(v27 + 16)) {
        goto LABEL_84;
      }
      unint64_t v78 = sub_20A4D1C34(v64);
      if ((v79 & 1) == 0) {
        goto LABEL_85;
      }
      uint64_t v80 = *(void *)(v27 + 56) + 24 * v78;
      double v81 = *(double *)v80;
      double v82 = *(double *)(v80 + 8);
      id v83 = *(id *)(v80 + 16);
      v203.origin.CGFloat x = v65;
      v203.origin.CGFloat y = v66;
      v203.size.CGFloat width = v67;
      v203.size.CGFloat height = v68;
      CGFloat v84 = CGRectGetMaxX(v203) - v81;
      v204.origin.CGFloat x = v65;
      v204.origin.CGFloat y = v66;
      v204.size.CGFloat width = v67;
      v204.size.CGFloat height = v68;
      v205.origin.CGFloat y = CGRectGetMaxY(v204) - v82;
      v205.origin.CGFloat x = v84;
      v205.size.CGFloat width = v81;
      v205.size.CGFloat height = v82;
      CGRect v206 = CGRectIntegral(v205);
      *(CGFloat *)&long long v186 = v206.origin.x;
      *((void *)&v186 + 1) = *(void *)&v206.origin.y;
      CGFloat v187 = v206.size.width;
      CGFloat v188 = v206.size.height;
      id v189 = v83;
      unint64_t v190 = v58;
      unint64_t v85 = v58;
      id v86 = v83;
      char v87 = swift_isUniquelyReferenced_nonNull_native();
      v176[0] = v178;
      sub_20A7A3E5C(&v186, v64, v87);
      swift_bridgeObjectRelease();
      if (!*(void *)(v179 + 16)) {
        goto LABEL_86;
      }
      unint64_t v88 = sub_20A4D1C34(v64);
      if ((v89 & 1) == 0) {
        goto LABEL_87;
      }
      CGFloat v175 = v66;
      double v90 = v61;
      double MinY = CGRectGetMinY(*(CGRect *)(*(void *)(v179 + 56) + 48 * v88));
      double v92 = (void *)sub_20A8CEE20();
      objc_msgSend(v92, sel_ascender);
      double v94 = v93;

      double v95 = (void *)sub_20A8CEE20();
      objc_msgSend(v95, sel_capHeight);
      double v97 = v96;

      double v98 = MinY + v94 - v97;
      double v99 = v173;
      if (v98 < v173) {
        double v99 = v98;
      }
      if (!*(void *)(v179 + 16)) {
        goto LABEL_88;
      }
      unint64_t v100 = sub_20A4D1C34(v64);
      if ((v101 & 1) == 0) {
        goto LABEL_89;
      }
      double v173 = v99;
      double v102 = CGRectGetMaxY(*(CGRect *)(*(void *)(v179 + 56) + 48 * v100));
      double v103 = (void *)sub_20A8CEE20();
      objc_msgSend(v103, sel_descender);
      double v105 = v104;

      double v106 = v172;
      if (v172 <= v102 + v105) {
        double v106 = v102 + v105;
      }
      double v172 = v106;
      if (v60)
      {
        v207.origin.CGFloat x = v65;
        v207.origin.CGFloat y = v175;
        v207.size.CGFloat width = v67;
        v207.size.CGFloat height = v68;
        CGFloat v107 = CGRectGetWidth(v207);
        sub_20A8C9700();
        v208.size.CGFloat height = 1.0 / v108;
        v208.origin.CGFloat x = v171;
        v208.origin.CGFloat y = v90 - v167 * 0.5;
        v208.size.CGFloat width = v107;
        CGRect v209 = CGRectIntegral(v208);
        CGFloat v109 = v209.origin.x;
        CGFloat v110 = v209.origin.y;
        CGFloat v111 = v209.size.width;
        CGFloat v112 = v209.size.height;
        double v113 = v177;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v113 = sub_20A46D464(0, v177[2] + 1, 1, v177);
        }
        unint64_t v115 = v113[2];
        unint64_t v114 = v113[3];
        if (v115 >= v114 >> 1) {
          double v113 = sub_20A46D464((void *)(v114 > 1), v115 + 1, 1, v113);
        }
        v113[2] = v115 + 1;
        CGFloat v62 = (CGFloat *)&v113[4 * v115];
        v62[4] = v109;
        void v62[5] = v110;
        v62[6] = v111;
        v62[7] = v112;
        uint64_t v177 = v113;
        uint64_t v25 = v163;
      }
      ++v60;
      v196.origin.CGFloat x = v65;
      v196.origin.CGFloat y = v175;
      v196.size.CGFloat width = v67;
      v196.size.CGFloat height = v68;
      double v63 = CGRectGetMaxY(v196);

      double v54 = v166;
      double v61 = v63 + v167;
      uint64_t v59 = v168;
      unint64_t v58 = v85;
      uint64_t v27 = v165;
      if (v169 == v60)
      {
        swift_bridgeObjectRelease();
        double v57 = 0.0;
        uint64_t v56 = v159;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
}

uint64_t sub_20A75F9A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - result;
  if (!__OFSUB__(a2, result))
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v8 = a2;
    uint64_t v9 = result;
    uint64_t v23 = MEMORY[0x263F8EE78];
    unint64_t result = sub_20A68C454(0, v4 & ~(v4 >> 63), 0);
    if (a4 < 0) {
      goto LABEL_40;
    }
    if (v8 < v9 || v4 < 0) {
      goto LABEL_41;
    }
    uint64_t v5 = v23;
    uint64_t v10 = *(void *)(a3 + 16);
    uint64_t v21 = v10;
    uint64_t v22 = v8;
    while (v8 != v9)
    {
      uint64_t v11 = v9 * a4;
      if ((unsigned __int128)(v9 * (__int128)a4) >> 64 != (v9 * a4) >> 63) {
        goto LABEL_34;
      }
      if (v11 < 0) {
        goto LABEL_35;
      }
      if (v10 >= v11) {
        uint64_t v12 = v9 * a4;
      }
      else {
        uint64_t v12 = v10;
      }
      if (v11) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      if (!a4 || v10 - v13 < 0 || (uint64_t v14 = v10, v10 - v13 >= a4))
      {
        uint64_t v14 = v13 + a4;
        if (__OFADD__(v13, a4)) {
          goto LABEL_38;
        }
      }
      if (v14 < v13) {
        goto LABEL_36;
      }
      if (v10 < v14) {
        goto LABEL_37;
      }
      uint64_t v15 = a4;
      sub_20A8CF790();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v16 = swift_dynamicCastClass();
      if (!v16)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = MEMORY[0x263F8EE78];
      }
      uint64_t v17 = *(void *)(v16 + 16);
      swift_release();
      if (v17 == v14 - v13)
      {
        uint64_t v18 = swift_dynamicCastClass();
        a4 = v15;
        if (!v18)
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_20A75CC18(a3, a3 + 32, v13, (2 * v14) | 1);
        a4 = v15;
      }
      unint64_t result = swift_bridgeObjectRelease();
      unint64_t v20 = *(void *)(v23 + 16);
      unint64_t v19 = *(void *)(v23 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t result = sub_20A68C454(v19 > 1, v20 + 1, 1);
      }
      *(void *)(v23 + 16) = v20 + 1;
      *(void *)(v23 + 8 * v20 + 32) = v18;
      ++v9;
      uint64_t v10 = v21;
      uint64_t v8 = v22;
      if (v22 == v9) {
        return v5;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_20A75FBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v30 = sub_20A8C8180();
  uint64_t v4 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    v27[1] = v2;
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_20A68C414(0, v7, 0);
    uint64_t v8 = v32;
    unsigned int v29 = *MEMORY[0x263F7D268];
    uint64_t v10 = *(void (**)(char *, void, uint64_t))(v4 + 104);
    uint64_t v9 = v4 + 104;
    double v28 = v10;
    uint64_t v11 = (void (**)(char *, uint64_t))(v9 - 96);
    uint64_t v12 = a1 + 56;
    do
    {
      uint64_t v13 = v30;
      uint64_t v14 = v9;
      v28(v6, v29, v30);
      sub_20A8C8170();
      uint64_t v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      (*v11)(v6, v13);
      uint64_t v32 = v8;
      unint64_t v24 = *(void *)(v8 + 16);
      unint64_t v23 = *(void *)(v8 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C414(v23 > 1, v24 + 1, 1);
        uint64_t v8 = v32;
      }
      *(void *)(v8 + 16) = v24 + 1;
      uint64_t v25 = (void *)(v8 + 32 * v24);
      v25[4] = v16;
      void v25[5] = v18;
      v25[6] = v20;
      v25[7] = v22;
      v12 += 32;
      --v7;
      uint64_t v9 = v14;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_20A75FDDC(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = a3;
  int64_t v8 = a1;
  int64_t v9 = 0;
  int64_t v10 = a1;
  while (1)
  {
    BOOL v11 = v10 <= a2;
    if (a3 > 0) {
      BOOL v11 = v10 >= a2;
    }
    if (v11) {
      break;
    }
    BOOL v12 = __OFADD__(v10, a3);
    v10 += a3;
    if (v12) {
      int64_t v10 = (v10 >> 63) ^ 0x8000000000000000;
    }
    BOOL v12 = __OFADD__(v9++, 1);
    if (v12)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v49 = MEMORY[0x263F8EE78];
  sub_20A68C454(0, v9, 0);
  uint64_t result = v49;
  double v42 = a5;
  if (v9)
  {
    uint64_t v43 = *(void *)(a4 + 16);
    uint64_t v44 = *a5;
    uint64_t v41 = a4 + 32;
    int64_t v14 = a2;
    while (1)
    {
      BOOL v15 = v8 <= v14;
      if (v7 > 0) {
        BOOL v15 = v8 >= v14;
      }
      if (v15) {
        break;
      }
      if (__OFADD__(v8, v7)) {
        int64_t v16 = ((v8 + v7) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v16 = v8 + v7;
      }
      if (__OFADD__(v8, v44)) {
        goto LABEL_73;
      }
      if (v43 >= v8 + v44) {
        uint64_t v17 = v8 + v44;
      }
      else {
        uint64_t v17 = v43;
      }
      uint64_t v18 = v17 - v8;
      if (v17 < v8) {
        goto LABEL_74;
      }
      if (v8 < 0) {
        goto LABEL_75;
      }
      uint64_t v47 = result;
      uint64_t v19 = v7;
      sub_20A8CF790();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v20 = swift_dynamicCastClass();
      if (!v20)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x263F8EE78];
      }
      uint64_t v21 = *(void *)(v20 + 16);
      swift_release();
      if (v21 == v18)
      {
        uint64_t v22 = (void *)swift_dynamicCastClass();
        uint64_t v7 = v19;
        int64_t v14 = a2;
        if (!v22)
        {
          swift_bridgeObjectRelease();
          uint64_t v22 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = (void *)MEMORY[0x263F8EE78];
        uint64_t v7 = v19;
        int64_t v14 = a2;
        if (v17 != v8)
        {
          if (v18 < 1)
          {
            if (v18 < 0) {
              goto LABEL_79;
            }
          }
          else
          {
            sub_20A7607BC(0, &qword_26AC80060, (uint64_t)&type metadata for QuoteDetailViewComponent, MEMORY[0x263F8E0F8]);
            uint64_t v22 = (void *)swift_allocObject();
            size_t v25 = _swift_stdlib_malloc_size(v22);
            _OWORD v22[2] = v18;
            void v22[3] = 2 * v25 - 64;
          }
          uint64_t v26 = v22 + 4;
          if (v41 + v8 < (unint64_t)v22 + v18 + 32 && (unint64_t)v26 < v41 + v17) {
            goto LABEL_79;
          }
          memcpy(v26, (const void *)(v41 + v8), v17 - v8);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v47;
      unint64_t v24 = *(void *)(v47 + 16);
      unint64_t v23 = *(void *)(v47 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C454(v23 > 1, v24 + 1, 1);
        int64_t v14 = a2;
        uint64_t result = v47;
      }
      *(void *)(result + 16) = v24 + 1;
      *(void *)(result + 8 * v24 + 32) = v22;
      int64_t v8 = v16;
      if (!--v9) {
        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  else
  {
    int64_t v16 = v8;
    int64_t v14 = a2;
LABEL_41:
    BOOL v27 = v16 <= v14;
    if (v7 > 0) {
      BOOL v27 = v16 >= v14;
    }
    if (v27) {
      return result;
    }
    uint64_t v48 = *v42;
    uint64_t v45 = a4 + 32;
    while (1)
    {
      int64_t v28 = __OFADD__(v16, v7) ? ((v16 + v7) >> 63) ^ 0x8000000000000000 : v16 + v7;
      if (__OFADD__(v16, v48)) {
        break;
      }
      if (*(void *)(a4 + 16) >= v16 + v48) {
        uint64_t v29 = v16 + v48;
      }
      else {
        uint64_t v29 = *(void *)(a4 + 16);
      }
      uint64_t v30 = v29 - v16;
      if (v29 < v16) {
        goto LABEL_77;
      }
      if (v16 < 0) {
        goto LABEL_78;
      }
      uint64_t v31 = result;
      sub_20A8CF790();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      uint64_t v32 = swift_dynamicCastClass();
      if (!v32)
      {
        swift_bridgeObjectRelease();
        uint64_t v32 = MEMORY[0x263F8EE78];
      }
      uint64_t v33 = *(void *)(v32 + 16);
      swift_release();
      if (v33 == v30)
      {
        double v34 = (void *)swift_dynamicCastClass();
        if (!v34)
        {
          swift_bridgeObjectRelease();
          double v34 = (void *)MEMORY[0x263F8EE78];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        double v34 = (void *)MEMORY[0x263F8EE78];
        if (v29 != v16)
        {
          if (v30 < 1)
          {
            if (v30 < 0) {
              goto LABEL_79;
            }
          }
          else
          {
            sub_20A7607BC(0, &qword_26AC80060, (uint64_t)&type metadata for QuoteDetailViewComponent, MEMORY[0x263F8E0F8]);
            double v34 = (void *)swift_allocObject();
            size_t v39 = _swift_stdlib_malloc_size(v34);
            v34[2] = v30;
            void v34[3] = 2 * v39 - 64;
          }
          double v40 = v34 + 4;
          if (v45 + v16 < (unint64_t)v34 + v30 + 32 && (unint64_t)v40 < v45 + v29) {
            goto LABEL_79;
          }
          memcpy(v40, (const void *)(v45 + v16), v29 - v16);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = v31;
      uint64_t v50 = v31;
      unint64_t v36 = *(void *)(v31 + 16);
      unint64_t v35 = *(void *)(v31 + 24);
      int64_t v37 = a2;
      if (v36 >= v35 >> 1)
      {
        sub_20A68C454(v35 > 1, v36 + 1, 1);
        int64_t v37 = a2;
        uint64_t result = v50;
      }
      *(void *)(result + 16) = v36 + 1;
      *(void *)(result + 8 * v36 + 32) = v34;
      BOOL v38 = v28 <= v37;
      if (v7 > 0) {
        BOOL v38 = v28 >= v37;
      }
      int64_t v16 = v28;
      if (v38) {
        return result;
      }
    }
  }
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

uint64_t sub_20A760328(uint64_t a1)
{
  return sub_20A760438(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, double, double, double, double, double, double, double, double, double, double, double, double, double, double))sub_20A75BDD0);
}

void sub_20A760340()
{
  if (!qword_26AC7FD50)
  {
    sub_20A4D4100();
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FD50);
    }
  }
}

uint64_t sub_20A7603A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A760840(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A760414(CGRect *a1@<X8>)
{
}

uint64_t sub_20A760420(uint64_t a1)
{
  return sub_20A760438(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, double, double, double, double, double, double, double, double, double, double, double, double, double, double))sub_20A75C144);
}

uint64_t sub_20A760438(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, double, double, double, double, double, double, double, double, double, double, double, double, double, double))
{
  return a2(a1, *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104), *(unsigned __int8 *)(v2 + 160), *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56), *(double *)(v2 + 64), *(double *)(v2 + 72), *(double *)(v2 + 112), *(double *)(v2 + 120), *(double *)(v2 + 128), *(double *)(v2 + 136), *(double *)(v2 + 144),
           *(double *)(v2 + 152));
}

uint64_t sub_20A76048C(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a2;
  uint64_t v47 = sub_20A8C8180();
  uint64_t v3 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unint64_t v46 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A760340();
  uint64_t result = sub_20A8CF550();
  int64_t v6 = 0;
  uint64_t v48 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v39 = v8;
  int64_t v40 = (unint64_t)(v10 + 63) >> 6;
  unsigned int v44 = *MEMORY[0x263F7D268];
  double v42 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v43 = (void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v41 = result + 64;
  uint64_t v45 = result;
  int64_t v14 = v46;
  uint64_t v13 = v47;
  if ((v11 & v7) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  int64_t v50 = v6;
  for (unint64_t i = v15 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v19 << 6))
  {
    char v21 = *(unsigned char *)(*(void *)(v48 + 48) + i);
    uint64_t v22 = *(void *)(v48 + 56) + 48 * i;
    unint64_t v23 = *(void **)(v22 + 32);
    uint64_t v24 = *(void *)(v22 + 40);
    (*v43)(v14, v44, v13);
    id v25 = v23;
    sub_20A8C8170();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    (*v42)(v14, v13);
    *(void *)(v41 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = v45;
    *(unsigned char *)(*(void *)(v45 + 48) + i) = v21;
    double v34 = (void *)(*(void *)(result + 56) + 48 * i);
    void *v34 = v27;
    v34[1] = v29;
    v34[2] = v31;
    void v34[3] = v33;
    v34[4] = v25;
    v34[5] = v24;
    uint64_t v35 = *(void *)(result + 16);
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(result + 16) = v37;
    int64_t v6 = v50;
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v40) {
      return result;
    }
    unint64_t v18 = *(void *)(v39 + 8 * v17);
    int64_t v19 = v6 + 1;
    if (!v18)
    {
      int64_t v19 = v6 + 2;
      if (v6 + 2 >= v40) {
        return result;
      }
      unint64_t v18 = *(void *)(v39 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v6 + 3;
        if (v6 + 3 >= v40) {
          return result;
        }
        unint64_t v18 = *(void *)(v39 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v18 - 1) & v18;
    int64_t v50 = v19;
  }
  uint64_t v20 = v6 + 4;
  if (v6 + 4 >= v40) {
    return result;
  }
  unint64_t v18 = *(void *)(v39 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v6 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v40) {
      return result;
    }
    unint64_t v18 = *(void *)(v39 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_20A7607BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A760808()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_20A760840(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A7608A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ForYouSection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A760900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouSection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for QuoteDetailViewLayoutAttributesFactory.SizedComponent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v3;
  id v4 = v3;
  return a1;
}

void destroy for WelcomeViewAnimatorOptions(uint64_t a1)
{
}

void *assignWithCopy for QuoteDetailViewLayoutAttributesFactory.SizedComponent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = (void *)a2[2];
  id v4 = (void *)a1[2];
  a1[2] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for QuoteDetailViewLayoutAttributesFactory.SizedComponent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for QuoteDetailViewLayoutAttributesFactory.SizedComponent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for QuoteDetailViewLayoutAttributesFactory.SizedComponent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuoteDetailViewLayoutAttributesFactory.SizedComponent()
{
  return &type metadata for QuoteDetailViewLayoutAttributesFactory.SizedComponent;
}

uint64_t type metadata accessor for SortWatchlistCommandHandler()
{
  return self;
}

uint64_t sub_20A760AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A761848(a4);
}

uint64_t sub_20A760B10@<X0>(uint64_t a1@<X3>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_20A761A18(a1);
  *a2 = result & 1;
  return result;
}

void sub_20A760B44(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3480();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v55 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v55 - v6;
  MEMORY[0x270FA5388](v7);
  double v57 = (char *)&v55 - v8;
  MEMORY[0x270FA5388](v9);
  unint64_t v58 = (char *)&v55 - v10;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v55 - v12;
  MEMORY[0x270FA5388](v14);
  uint64_t v59 = (char *)&v55 - v15;
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v55 - v17;
  MEMORY[0x270FA5388](v19);
  uint64_t v60 = (char *)&v55 - v20;
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (char *)&v55 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v55 - v25;
  uint64_t v27 = sub_20A8C34C0();
  uint64_t v28 = *(void *)(v27 - 8);
  double v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v28 + 16))(v31, a1, v27, v29);
  int v32 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v31, v27);
  if (v32 == *MEMORY[0x263F7ABB8])
  {
    (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v26, v31, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v23, v26, v2);
    int v33 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v23, v2);
    if (v33 == *MEMORY[0x263F7ABE0] || v33 == *MEMORY[0x263F7ABD8])
    {
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v37 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_20A8C2370();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v26, v2);
    }
    else
    {
      unsigned int v44 = *(void (**)(char *, uint64_t))(v3 + 8);
      v44(v26, v2);
      v44(v23, v2);
    }
    goto LABEL_32;
  }
  if (v32 != *MEMORY[0x263F7ABC8])
  {
    if (v32 == *MEMORY[0x263F7AC00])
    {
      (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
      uint64_t v38 = v3;
      uint64_t v39 = v59;
      uint64_t v40 = v2;
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v59, v31, v2);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v13, v39, v2);
      int v41 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v13, v2);
      if (v41 == *MEMORY[0x263F7ABE0] || v41 == *MEMORY[0x263F7ABD8])
      {
LABEL_24:
        type metadata accessor for Localized();
        uint64_t v48 = swift_getObjCClassFromMetadata();
        id v49 = objc_msgSend(self, sel_bundleForClass_, v48);
        sub_20A8C2370();

        (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
        goto LABEL_32;
      }
      int64_t v50 = *(void (**)(char *, uint64_t))(v3 + 8);
      v50(v39, v2);
      double v51 = v13;
    }
    else
    {
      if (v32 == *MEMORY[0x263F7ABF8])
      {
        (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
        uint64_t v38 = v3;
        uint64_t v39 = v58;
        uint64_t v40 = v2;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v58, v31, v2);
        uint64_t v45 = v57;
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v57, v39, v2);
        int v46 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v45, v2);
        if (v46 == *MEMORY[0x263F7ABE0] || v46 == *MEMORY[0x263F7ABD8]) {
          goto LABEL_24;
        }
      }
      else
      {
        if (v32 != *MEMORY[0x263F7ABD0])
        {
          if (v32 == *MEMORY[0x263F7ABF0])
          {
            type metadata accessor for Localized();
            uint64_t v52 = swift_getObjCClassFromMetadata();
            id v53 = objc_msgSend(self, sel_bundleForClass_, v52);
            sub_20A8C2370();
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
          }
          goto LABEL_32;
        }
        (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
        uint64_t v38 = v3;
        uint64_t v39 = v56;
        uint64_t v40 = v2;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v56, v31, v2);
        uint64_t v45 = v55;
        (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v55, v39, v2);
        int v47 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v45, v2);
        if (v47 == *MEMORY[0x263F7ABE0] || v47 == *MEMORY[0x263F7ABD8]) {
          goto LABEL_24;
        }
      }
      int64_t v50 = *(void (**)(char *, uint64_t))(v38 + 8);
      v50(v39, v40);
      double v51 = v45;
    }
    v50(v51, v40);
    goto LABEL_32;
  }
  (*(void (**)(char *, uint64_t))(v28 + 96))(v31, v27);
  double v34 = v60;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v60, v31, v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v18, v34, v2);
  int v35 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v18, v2);
  if (v35 == *MEMORY[0x263F7ABE0] || v35 == *MEMORY[0x263F7ABD8])
  {
    type metadata accessor for Localized();
    uint64_t v42 = swift_getObjCClassFromMetadata();
    id v43 = objc_msgSend(self, sel_bundleForClass_, v42);
    sub_20A8C2370();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v34, v2);
LABEL_32:
    double v54 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    MEMORY[0x210527DD0](v54);

    return;
  }
  sub_20A8CF750();
  __break(1u);
}

uint64_t sub_20A761848(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C34C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *(unsigned char *)(a1 + *(int *)(v11 + 24));
  sub_20A76200C(a1, (uint64_t)v10);
  if (v12)
  {
    sub_20A762070((uint64_t)v10, type metadata accessor for SortWatchlistCommandContext);
  }
  else
  {
    sub_20A8C40D0();
    char v13 = sub_20A8C3440();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t result = sub_20A762070((uint64_t)v10, type metadata accessor for SortWatchlistCommandContext);
    if (v13) {
      return result;
    }
  }
  sub_20A760B44(a1 + *(int *)(v8 + 20));
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  sub_20A8C3650();
  return swift_release();
}

uint64_t sub_20A761A18(uint64_t a1)
{
  uint64_t v3 = sub_20A8C3480();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  int v46 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)v41 - v6;
  uint64_t v7 = sub_20A8C34C0();
  uint64_t v49 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  double v51 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A484450(0);
  MEMORY[0x270FA5388](v9 - 8);
  int64_t v50 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C40E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v41 - v16;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v18 = sub_20A8C3690();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v42 = v17;
    uint64_t v43 = v7;
    uint64_t v44 = v12;
    uint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    uint64_t v20 = v12 + 16;
    uint64_t v52 = v21;
    uint64_t v53 = a1;
    unint64_t v22 = v18 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
    uint64_t v23 = *(void *)(v20 + 56);
    v41[1] = v18;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v24 = v11;
      v52(v14, v22, v11);
      uint64_t v25 = sub_20A8C4050();
      uint64_t v27 = v26;
      if (v25 == sub_20A8C4050() && v27 == v28) {
        break;
      }
      char v29 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_11;
      }
      uint64_t v11 = v24;
      (*(void (**)(char *, uint64_t))(v20 - 8))(v14, v24);
      v22 += v23;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v30 = 1;
        a1 = v53;
        uint64_t v7 = v43;
        uint64_t v12 = v44;
        uint64_t v17 = v42;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v12 = v44;
    uint64_t v31 = (uint64_t)v50;
    uint64_t v11 = v24;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v50, v14, v24);
    uint64_t v30 = 0;
    a1 = v53;
    uint64_t v17 = v42;
    uint64_t v7 = v43;
    int v32 = v51;
  }
  else
  {
    uint64_t v30 = 1;
LABEL_9:
    uint64_t v31 = (uint64_t)v50;
    int v32 = v51;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v31, v30, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v31, 1, v11) == 1)
  {
    sub_20A762070(v31, (uint64_t (*)(void))sub_20A484450);
    char v33 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v17, v31, v11);
    int v34 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for SortWatchlistCommandContext(0) + 24));
    sub_20A8C40D0();
    if (v34 == 1)
    {
      int v35 = v17;
      BOOL v36 = v45;
      sub_20A8C3490();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v7);
      id v37 = v46;
      sub_20A8C3490();
      sub_20A761FB4();
      uint64_t v38 = v48;
      sub_20A8CE570();
      sub_20A8CE570();
      char v33 = v55 == v54;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v47 + 8);
      v39(v37, v38);
      v39(v36, v38);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v35, v11);
    }
    else
    {
      char v33 = sub_20A8C3440();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v7);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  return v33 & 1;
}

unint64_t sub_20A761FB4()
{
  unint64_t result = qword_26763DD18;
  if (!qword_26763DD18)
  {
    sub_20A8C3480();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DD18);
  }
  return result;
}

uint64_t sub_20A76200C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SortWatchlistCommandContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A762070(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for AdComponentTrackerFactory()
{
  return self;
}

uint64_t sub_20A7620F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  sub_20A4342F4(v3 + 24, (uint64_t)v8);
  uint64_t v5 = type metadata accessor for AdComponentTracker();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  sub_20A42BEBC(v8, v6 + 24);
  a1[3] = v5;
  a1[4] = sub_20A76217C();
  *a1 = v6;
  return swift_retain();
}

unint64_t sub_20A76217C()
{
  unint64_t result = qword_26AC70098[0];
  if (!qword_26AC70098[0])
  {
    type metadata accessor for AdComponentTracker();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AC70098);
  }
  return result;
}

uint64_t sub_20A7621D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7621E8);
}

uint64_t sub_20A7621E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A762254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A762268);
}

uint64_t sub_20A762268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CreateWatchlistViewLayoutOptions()
{
  uint64_t result = qword_26763DD20;
  if (!qword_26763DD20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedRelayoutBlueprintModifier()
{
  return &type metadata for StockFeedRelayoutBlueprintModifier;
}

uint64_t sub_20A762334(uint64_t a1, void (*a2)(char *))
{
  sub_20A7625EC(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v15 - v7;
  sub_20A4C7E5C();
  uint64_t v10 = &v8[*(int *)(v9 + 48)];
  sub_20A7625EC(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v8, a1, v11);
  uint64_t v12 = *MEMORY[0x263F7D528];
  uint64_t v13 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v10, v12, v13);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D938], v5);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_20A762508()
{
  unint64_t result = qword_26AC80F70;
  if (!qword_26AC80F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80F70);
  }
  return result;
}

uint64_t sub_20A76255C()
{
  return sub_20A743BE0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A7625A4()
{
  return sub_20A743BE0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void sub_20A7625EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    long long v8[2] = sub_20A743BE0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A743BE0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A7626E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7626F4);
}

uint64_t sub_20A7626F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A762760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A762774);
}

uint64_t sub_20A762774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockFeedEarningsViewLayoutOptions()
{
  uint64_t result = qword_26AC7C9B0;
  if (!qword_26AC7C9B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A762830()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) != 1
    || UIAccessibilityIsReduceMotionEnabled()
    || UIAccessibilityIsVoiceOverRunning())
  {
    uint64_t v1 = OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink;
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink);
    if (v2)
    {
      objc_msgSend(v2, sel_invalidate);
      uint64_t v2 = *(void **)(v0 + v1);
    }
    *(void *)(v0 + v1) = 0;
  }
  else
  {
    uint64_t v3 = OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink;
    if (*(void *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink)) {
      return;
    }
    id v4 = objc_msgSend(self, sel_displayLinkWithTarget_selector_, v0, sel_autoScrollWithDisplayWithDisplayLink_);
    uint64_t v5 = *(void **)(v0 + v3);
    *(void *)(v0 + v3) = v4;

    unint64_t v6 = *(void **)(v0 + v3);
    if (!v6) {
      return;
    }
    objc_msgSend(v6, sel_setPreferredFramesPerSecond_, 60);
    uint64_t v7 = *(void **)(v0 + v3);
    if (!v7) {
      return;
    }
    uint64_t v8 = self;
    id v9 = v7;
    id v10 = objc_msgSend(v8, sel_currentRunLoop);
    objc_msgSend(v9, sel_addToRunLoop_forMode_, v10, *MEMORY[0x263EFF588]);

    uint64_t v2 = v10;
  }
}

double sub_20A762994()
{
  uint64_t v1 = (unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta + 8) & 1) == 0) {
    return *(double *)v1;
  }
  *(void *)uint64_t v1 = 0x402E000000000000;
  v1[8] = 0;
  return 15.0;
}

void sub_20A7629C4(void *a1)
{
  id v3 = objc_msgSend(v1, sel_window);

  if (v3)
  {
    objc_msgSend(v1, sel_contentSize);
    if (v4 != 0.0)
    {
      double v5 = sub_20A762994();
      objc_msgSend(a1, sel_duration);
      double v7 = fmax(v5 * v6, 0.25);
      id v8 = objc_msgSend(v1, sel_effectiveUserInterfaceLayoutDirection);
      objc_msgSend(v1, sel_contentOffset);
      double v10 = v9;
      objc_msgSend(v1, sel_contentOffset);
      double v11 = -v7;
      if (v8 != (id)1) {
        double v11 = v7;
      }
      double v12 = v10 + v11;
      objc_msgSend(v1, sel_setContentOffset_, v12);
    }
  }
  else
  {
    *((unsigned char *)v1 + OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling) = 0;
    sub_20A762830();
  }
}

id sub_20A762C44(void *a1, double a2, double a3, double a4, double a5)
{
  double v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v6[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling] = 0;
  uint64_t v13 = &v6[OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta];
  *(void *)uint64_t v13 = 0;
  v13[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_minimumScrollDelta] = 0x3FD0000000000000;
  *(void *)&v6[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink] = 0;
  *(void *)&v6[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_preferredFrameRate] = 60;
  uint64_t v14 = &v6[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_tickerCollectionModel];
  uint64_t v15 = self;
  uint64_t v16 = v6;
  id v17 = objc_msgSend(v15, sel_sharedApplication);
  unsigned __int8 v18 = objc_msgSend(v17, sel_isRunningPerformanceTest);

  *(void *)uint64_t v14 = 0x4008000000000000;
  *((void *)v14 + 1) = 4;
  v14[16] = v18;

  v30.receiver = v16;
  v30.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v30, sel_initWithFrame_collectionViewLayout_, a1, a2, a3, a4, a5);
  uint64_t v20 = self;
  id v21 = v19;
  id v22 = objc_msgSend(v20, sel_defaultCenter);
  objc_msgSend(v22, sel_addObserver_selector_name_object_, v21, sel_handleAccessibilitySettingsChangedWithNotification_, *MEMORY[0x263F831F0], 0);
  objc_msgSend(v22, sel_addObserver_selector_name_object_, v21, sel_handleAccessibilitySettingsChangedWithNotification_, *MEMORY[0x263F832E8], 0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v24 = self;
  id v25 = v21;
  id v26 = objc_msgSend(v24, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v27 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setAccessibilityLabel_, v27, 0x800000020A90DD80);

  id v28 = v25;
  objc_msgSend(v28, sel_setAccessibilityContainerType_, 4);

  return v28;
}

id sub_20A762F98()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x263F831F0], 0);

  id v4 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x263F832E8], 0);

  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_20A7630A8()
{
  uint64_t v1 = (double *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_tickerCollectionModel];
  char v2 = v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_tickerCollectionModel + 16];
  id result = (id)UIAccessibilityIsVoiceOverRunning();
  if ((result & 1) == 0 && (v2 & 1) == 0)
  {
    objc_msgSend(v0, sel_contentSize);
    double v5 = v4;
    objc_msgSend(v0, sel_bounds);
    double v7 = v6;
    double v8 = *v1;
    id result = (id)UIAccessibilityIsVoiceOverRunning();
    double v9 = result ? 1.0 : v8;
    if (v7 * v9 <= v5)
    {
      objc_msgSend(v0, sel_contentOffset);
      double v11 = v10;
      double v13 = v12;
      objc_msgSend(v0, sel_contentSize);
      double v15 = v14;
      objc_msgSend(v0, sel_bounds);
      double v17 = (v15 - v16) * 0.5;
      objc_msgSend(v0, sel_contentSize);
      double v19 = v18;
      id result = (id)UIAccessibilityIsVoiceOverRunning();
      double v20 = result ? 1.0 : v8;
      double v21 = v19 / v20;
      if (v21 <= vabdd_f64(v11, v17))
      {
        if (v11 - v17 > 0.0) {
          double v21 = -v21;
        }
        double v22 = v17 + v11 - v17 + v21;
        return objc_msgSend(v0, sel_setContentOffset_, v22, v13);
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for TickerCollectionView()
{
  return self;
}

void sub_20A763284()
{
  v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_autoScrolling] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView____lazy_storage___delta];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_minimumScrollDelta] = 0x3FD0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_displayLink] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_preferredFrameRate] = 60;
  char v2 = &v0[OBJC_IVAR____TtC8StocksUI20TickerCollectionView_tickerCollectionModel];
  id v3 = objc_msgSend(self, sel_sharedApplication);
  unsigned __int8 v4 = objc_msgSend(v3, sel_isRunningPerformanceTest);

  *(void *)char v2 = 0x4008000000000000;
  *((void *)v2 + 1) = 4;
  v2[16] = v4;

  sub_20A8CF520();
  __break(1u);
}

void *sub_20A763390(void *a1, void *a2, uint64_t a3)
{
  id v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
        double v8 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v9 = v8[5];
        double v10 = (char *)a1 + v9;
        double v11 = (char *)v3 + v9;
        uint64_t v12 = sub_20A8C3E10();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_20A42C470(0);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        uint64_t v53 = v8[6];
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)v3 + v53;
        uint64_t v56 = sub_20A8C3D00();
        uint64_t v57 = *(void *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        {
          sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
          memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
        }
        unint64_t v195 = v8;
        uint64_t v75 = v8[7];
        id v76 = (char *)a1 + v75;
        char v77 = (char *)v3 + v75;
        *(void *)id v76 = *(void *)((char *)v3 + v75);
        v76[8] = *((unsigned char *)v3 + v75 + 8);
        *((void *)v76 + 2) = *(void *)((char *)v3 + v75 + 16);
        v76[24] = *((unsigned char *)v3 + v75 + 24);
        *((void *)v76 + 4) = *(void *)((char *)v3 + v75 + 32);
        v76[40] = *((unsigned char *)v3 + v75 + 40);
        uint64_t v78 = *(void *)((char *)v3 + v75 + 56);
        *((void *)v76 + 6) = *(void *)((char *)v3 + v75 + 48);
        *((void *)v76 + 7) = v78;
        uint64_t v79 = *(void *)((char *)v3 + v75 + 72);
        *((void *)v76 + 8) = *(void *)((char *)v3 + v75 + 64);
        *((void *)v76 + 9) = v79;
        uint64_t v80 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v81 = v80[9];
        CGRect v196 = &v77[v81];
        CGRect v200 = &v76[v81];
        uint64_t v82 = sub_20A8C2EB0();
        id v83 = *(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        CGFloat v84 = v196;
        uint64_t v197 = v82;
        CGFloat v192 = v83;
        v83(v200, v84, v82);
        uint64_t v85 = v80[10];
        id v86 = &v76[v85];
        char v87 = &v77[v85];
        uint64_t v88 = sub_20A8C4030();
        id v189 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        v189(v86, v87, v88);
        CGRect v201 = v80;
        uint64_t v89 = v80[11];
        double v90 = &v76[v89];
        double v91 = &v77[v89];
        uint64_t v92 = sub_20A8C2990();
        char v185 = *(void (**)(char *, char *))(*(void *)(v92 - 8) + 16);
        uint64_t v187 = v92;
        v185(v90, v91);
        uint64_t v93 = type metadata accessor for QuoteViewModel();
        uint64_t v94 = *(int *)(v93 + 20);
        double v95 = &v76[v94];
        double v96 = &v77[v94];
        uint64_t v97 = sub_20A8C3410();
        uint64_t v181 = *(void (**)(char *, char *))(*(void *)(v97 - 8) + 16);
        uint64_t v183 = v97;
        v181(v95, v96);
        uint64_t v98 = *(int *)(v93 + 24);
        double v99 = &v76[v98];
        unint64_t v100 = &v77[v98];
        uint64_t v101 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v102 = *(void *)(v101 - 8);
        uint64_t v179 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
        if (v179(v100, 1, v101))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
        }
        else
        {
          uint64_t v172 = v93;
          uint64_t v177 = v102;
          uint64_t v133 = sub_20A8C2BC0();
          uint64_t v134 = *(void *)(v133 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v100, 3, v133))
          {
            uint64_t v102 = v177;
            memcpy(v99, v100, *(void *)(v177 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v134 + 16))(v99, v100, v133);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v99, 0, 3, v133);
            uint64_t v102 = v177;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
          uint64_t v93 = v172;
        }
        uint64_t v137 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        double v138 = &v76[v137];
        double v139 = &v77[v137];
        uint64_t v140 = *(void *)(v93 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48))(&v77[v137], 1, v93)) {
          goto LABEL_46;
        }
        uint64_t v171 = v140;
        uint64_t v178 = v102;
        *(void *)double v138 = *(void *)v139;
        v138[8] = v139[8];
        *((void *)v138 + 2) = *((void *)v139 + 2);
        v138[24] = v139[24];
        *((void *)v138 + 4) = *((void *)v139 + 4);
        v138[40] = v139[40];
        uint64_t v142 = *((void *)v139 + 7);
        *((void *)v138 + 6) = *((void *)v139 + 6);
        *((void *)v138 + 7) = v142;
        uint64_t v143 = *((void *)v139 + 9);
        *((void *)v138 + 8) = *((void *)v139 + 8);
        *((void *)v138 + 9) = v143;
        uint64_t v174 = v101;
        double v144 = v201;
        uint64_t v145 = v201[9];
        id v146 = &v138[v145];
        uint64_t v147 = v93;
        uint64_t v148 = &v139[v145];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v192(v146, v148, v197);
        v189(&v138[v144[10]], &v139[v144[10]], v88);
        ((void (*)(char *, char *, uint64_t))v185)(&v138[v144[11]], &v139[v144[11]], v187);
        ((void (*)(char *, char *, uint64_t))v181)(&v138[*(int *)(v147 + 20)], &v139[*(int *)(v147 + 20)], v183);
        uint64_t v149 = v147;
        uint64_t v150 = *(int *)(v147 + 24);
        CGFloat v151 = &v138[v150];
        CGFloat v152 = &v139[v150];
        if (v179(&v139[v150], 1, v174)) {
          goto LABEL_48;
        }
        uint64_t v164 = sub_20A8C2BC0();
        uint64_t v165 = *(void *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v152, 3, v164))
        {
          uint64_t v166 = v178;
          memcpy(v151, v152, *(void *)(v178 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v165 + 16))(v151, v152, v164);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v165 + 56))(v151, 0, 3, v164);
          uint64_t v166 = v178;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v166 + 56))(v151, 0, 1, v174);
        goto LABEL_60;
      case 1u:
        uint64_t v17 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, v3, v17);
        double v18 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v19 = v18[5];
        double v20 = (char *)a1 + v19;
        double v21 = (char *)v3 + v19;
        uint64_t v22 = sub_20A8C3E10();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_20A42C470(0);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v59 = v18[6];
        uint64_t v60 = (char *)a1 + v59;
        double v61 = (char *)v3 + v59;
        uint64_t v62 = sub_20A8C3D00();
        uint64_t v63 = *(void *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
        {
          sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
          memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v61, v62);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        unint64_t v195 = v18;
        uint64_t v104 = v18[7];
        double v105 = (char *)a1 + v104;
        CGFloat v193 = v3;
        double v106 = (char *)v3 + v104;
        *(void *)double v105 = *(void *)((char *)v3 + v104);
        v105[8] = *((unsigned char *)v3 + v104 + 8);
        *((void *)v105 + 2) = *(void *)((char *)v3 + v104 + 16);
        v105[24] = *((unsigned char *)v3 + v104 + 24);
        *((void *)v105 + 4) = *(void *)((char *)v3 + v104 + 32);
        v105[40] = *((unsigned char *)v3 + v104 + 40);
        uint64_t v107 = *(void *)((char *)v3 + v104 + 56);
        *((void *)v105 + 6) = *(void *)((char *)v3 + v104 + 48);
        *((void *)v105 + 7) = v107;
        uint64_t v108 = *(void *)((char *)v3 + v104 + 72);
        *((void *)v105 + 8) = *(void *)((char *)v3 + v104 + 64);
        *((void *)v105 + 9) = v108;
        CGFloat v109 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v110 = v109[9];
        CGRect v198 = &v106[v110];
        CGRect v202 = &v105[v110];
        uint64_t v111 = sub_20A8C2EB0();
        CGFloat v112 = *(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        double v113 = v198;
        uint64_t v199 = v111;
        long long v191 = v112;
        v112(v202, v113, v111);
        uint64_t v114 = v109[10];
        unint64_t v115 = &v105[v114];
        uint64_t v116 = &v106[v114];
        uint64_t v117 = sub_20A8C4030();
        CGFloat v188 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        v188(v115, v116, v117);
        CGRect v203 = v109;
        uint64_t v118 = v109[11];
        unint64_t v119 = &v105[v118];
        int64_t v120 = &v106[v118];
        uint64_t v121 = sub_20A8C2990();
        unint64_t v184 = *(void (**)(char *, char *))(*(void *)(v121 - 8) + 16);
        uint64_t v186 = v121;
        v184(v119, v120);
        uint64_t v122 = type metadata accessor for QuoteViewModel();
        uint64_t v123 = *(int *)(v122 + 20);
        double v124 = &v105[v123];
        int64_t v125 = &v106[v123];
        uint64_t v126 = sub_20A8C3410();
        unint64_t v180 = *(void (**)(char *, char *))(*(void *)(v126 - 8) + 16);
        uint64_t v182 = v126;
        v180(v124, v125);
        uint64_t v127 = *(int *)(v122 + 24);
        double v128 = &v105[v127];
        double v129 = &v106[v127];
        uint64_t v130 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v131 = *(void *)(v130 - 8);
        uint64_t v176 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48);
        uint64_t v190 = v117;
        if (v176(v129, 1, v130))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v128, v129, *(void *)(*(void *)(v132 - 8) + 64));
          id v3 = v193;
        }
        else
        {
          uint64_t v170 = v122;
          uint64_t v173 = v131;
          uint64_t v135 = sub_20A8C2BC0();
          uint64_t v136 = *(void *)(v135 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v129, 3, v135))
          {
            uint64_t v131 = v173;
            memcpy(v128, v129, *(void *)(v173 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v128, v129, v135);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v128, 0, 3, v135);
            uint64_t v131 = v173;
          }
          id v3 = v193;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v128, 0, 1, v130);
          uint64_t v122 = v170;
        }
        uint64_t v154 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        double v138 = &v105[v154];
        double v139 = &v106[v154];
        uint64_t v155 = *(void *)(v122 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(&v106[v154], 1, v122))
        {
LABEL_46:
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          uint64_t v171 = v155;
          uint64_t v175 = v131;
          *(void *)double v138 = *(void *)v139;
          v138[8] = v139[8];
          *((void *)v138 + 2) = *((void *)v139 + 2);
          v138[24] = v139[24];
          *((void *)v138 + 4) = *((void *)v139 + 4);
          v138[40] = v139[40];
          uint64_t v156 = *((void *)v139 + 7);
          *((void *)v138 + 6) = *((void *)v139 + 6);
          *((void *)v138 + 7) = v156;
          uint64_t v157 = *((void *)v139 + 9);
          *((void *)v138 + 8) = *((void *)v139 + 8);
          *((void *)v138 + 9) = v157;
          uint64_t v194 = v130;
          double v158 = v203;
          uint64_t v159 = v203[9];
          double v160 = &v138[v159];
          uint64_t v161 = v122;
          uint64_t v162 = &v139[v159];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v191(v160, v162, v199);
          v188(&v138[v158[10]], &v139[v158[10]], v190);
          ((void (*)(char *, char *, uint64_t))v184)(&v138[v158[11]], &v139[v158[11]], v186);
          ((void (*)(char *, char *, uint64_t))v180)(&v138[*(int *)(v161 + 20)], &v139[*(int *)(v161 + 20)], v182);
          uint64_t v149 = v161;
          uint64_t v163 = *(int *)(v161 + 24);
          CGFloat v151 = &v138[v163];
          CGFloat v152 = &v139[v163];
          if (v176(&v139[v163], 1, v194))
          {
LABEL_48:
            sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
            memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
          }
          else
          {
            uint64_t v167 = sub_20A8C2BC0();
            uint64_t v168 = *(void *)(v167 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v168 + 48))(v152, 3, v167))
            {
              uint64_t v169 = v175;
              memcpy(v151, v152, *(void *)(v175 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v168 + 16))(v151, v152, v167);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v151, 0, 3, v167);
              uint64_t v169 = v175;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v169 + 56))(v151, 0, 1, v194);
          }
LABEL_60:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v138, 0, 1, v149);
        }
        *((unsigned char *)a1 + v195[8]) = *((unsigned char *)v3 + v195[8]);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v25 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, v3, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v26 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, v3, v26);
        sub_20A42C53C();
        uint64_t v28 = v27;
        uint64_t v29 = *(int *)(v27 + 48);
        objc_super v30 = (char *)a1 + v29;
        uint64_t v31 = (char *)v3 + v29;
        uint64_t v32 = sub_20A8C3E10();
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          sub_20A42C470(0);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        uint64_t v65 = *(int *)(v28 + 64);
        CGFloat v66 = (char *)a1 + v65;
        CGFloat v67 = (char *)v3 + v65;
        uint64_t v68 = sub_20A8C2CB0();
        uint64_t v69 = *(void *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          sub_20A42C43C(0);
          memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v35 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, v3, v35);
        BOOL v36 = (int *)type metadata accessor for StockEarningsModel();
        uint64_t v37 = v36[5];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)v3 + v37;
        uint64_t v40 = sub_20A8C2800();
        uint64_t v41 = *(void *)(v40 - 8);
        uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
        v42(v38, v39, v40);
        uint64_t v43 = v36[6];
        uint64_t v44 = (char *)a1 + v43;
        uint64_t v45 = (char *)v3 + v43;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))((char *)v3 + v43, 1, v40))
        {
          sub_20A764CC8(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          v42(v44, v45, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v44, 0, 1, v40);
        }
        uint64_t v71 = v36[7];
        CGFloat v72 = (char *)a1 + v71;
        double v73 = (char *)v3 + v71;
        uint64_t v74 = sub_20A8C2AF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
        *((unsigned char *)a1 + v36[8]) = *((unsigned char *)v3 + v36[8]);
        *((unsigned char *)a1 + v36[9]) = *((unsigned char *)v3 + v36[9]);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v47 = v3[1];
        *a1 = *v3;
        a1[1] = v47;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        sub_20A456468();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, v3, v48);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v49 = v3[1];
        *a1 = *v3;
        a1[1] = v49;
        a1[2] = v3[2];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        uint64_t v50 = sub_20A8CD2C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(a1, v3, v50);
        sub_20A46CF6C();
        *(void *)((char *)a1 + *(int *)(v51 + 48)) = *(void *)((char *)v3 + *(int *)(v51 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        uint64_t v52 = sub_20A8CD080();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, v3, v52);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, v3, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_20A764CC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A764D2C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
      uint64_t v3 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      unsigned __int8 v4 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v5 = a1 + v4[5];
      uint64_t v6 = sub_20A8C3E10();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      uint64_t v8 = a1 + v4[6];
      uint64_t v9 = sub_20A8C3D00();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      uint64_t v11 = a1 + v4[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v13 = v11 + v12[9];
      uint64_t v14 = sub_20A8C2EB0();
      uint64_t v51 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
      uint64_t v52 = v14;
      v51(v13);
      uint64_t v15 = v11 + v12[10];
      uint64_t v16 = sub_20A8C4030();
      uint64_t v50 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      v50(v15, v16);
      uint64_t v17 = v11 + v12[11];
      uint64_t v18 = sub_20A8C2990();
      uint64_t v49 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v49(v17, v18);
      uint64_t v19 = type metadata accessor for QuoteViewModel();
      uint64_t v20 = v11 + *(int *)(v19 + 20);
      uint64_t v21 = sub_20A8C3410();
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
      v48(v20, v21);
      uint64_t v22 = v11 + *(int *)(v19 + 24);
      uint64_t v23 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
      if (!v47(v22, 1, v23))
      {
        uint64_t v24 = sub_20A8C2BC0();
        uint64_t v25 = *(void *)(v24 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 3, v24)) {
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
        }
      }
      uint64_t v26 = v11 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v26, 1, v19);
      if (!result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v51)(v26 + v12[9], v52);
        v50(v26 + v12[10], v16);
        v49(v26 + v12[11], v18);
        v48(v26 + *(int *)(v19 + 20), v21);
        uint64_t v27 = v26 + *(int *)(v19 + 24);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v47)(v27, 1, v23);
        if (!result)
        {
          uint64_t v28 = sub_20A8C2BC0();
          uint64_t v53 = *(void *)(v28 - 8);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v27, 3, v28);
          goto LABEL_16;
        }
      }
      return result;
    case 2:
      uint64_t v29 = sub_20A8C3F00();
      goto LABEL_31;
    case 3:
      uint64_t v30 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a1, v30);
      sub_20A42C53C();
      uint64_t v32 = v31;
      uint64_t v33 = a1 + *(int *)(v31 + 48);
      uint64_t v34 = sub_20A8C3E10();
      uint64_t v35 = *(void *)(v34 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      }
      uint64_t v27 = a1 + *(int *)(v32 + 64);
      uint64_t v28 = sub_20A8C2CB0();
      uint64_t v53 = *(void *)(v28 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v27, 1, v28);
LABEL_16:
      if (result) {
        return result;
      }
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 8);
      uint64_t v46 = v27;
      uint64_t v45 = v28;
      goto LABEL_32;
    case 4:
      uint64_t v36 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(a1, v36);
      uint64_t v37 = (int *)type metadata accessor for StockEarningsModel();
      uint64_t v38 = a1 + v37[5];
      uint64_t v39 = sub_20A8C2800();
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v41(v38, v39);
      uint64_t v42 = a1 + v37[6];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v42, 1, v39)) {
        v41(v42, v39);
      }
      a1 += v37[7];
      uint64_t v29 = sub_20A8C2AF0();
      goto LABEL_31;
    case 5:
      return swift_bridgeObjectRelease();
    case 6:
      sub_20A456468();
      goto LABEL_31;
    case 7:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    case 8:
      uint64_t v43 = sub_20A8CD2C0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(a1, v43);
      sub_20A46CF6C();
LABEL_27:
      return swift_release();
    case 9:
      uint64_t v29 = sub_20A8CD080();
LABEL_31:
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8);
      uint64_t v45 = v29;
      uint64_t v46 = a1;
LABEL_32:
      uint64_t result = v44(v46, v45);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_20A765608(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_20A8C3E10();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_20A42C470(0);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v50 = v7[6];
      uint64_t v51 = (char *)a1 + v50;
      uint64_t v52 = (char *)a2 + v50;
      uint64_t v53 = sub_20A8C3D00();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      CGRect v206 = v7;
      CGRect v209 = a1;
      uint64_t v72 = v7[7];
      double v73 = (char *)a1 + v72;
      CGRect v203 = a2;
      uint64_t v74 = (char *)a2 + v72;
      *(void *)double v73 = *(void *)((char *)a2 + v72);
      v73[8] = *((unsigned char *)a2 + v72 + 8);
      *((void *)v73 + 2) = *(void *)((char *)a2 + v72 + 16);
      v73[24] = *((unsigned char *)a2 + v72 + 24);
      *((void *)v73 + 4) = *(void *)((char *)a2 + v72 + 32);
      v73[40] = *((unsigned char *)a2 + v72 + 40);
      uint64_t v75 = *(void *)((char *)a2 + v72 + 56);
      *((void *)v73 + 6) = *(void *)((char *)a2 + v72 + 48);
      *((void *)v73 + 7) = v75;
      uint64_t v76 = *(void *)((char *)a2 + v72 + 72);
      *((void *)v73 + 8) = *(void *)((char *)a2 + v72 + 64);
      *((void *)v73 + 9) = v76;
      char v77 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v78 = v77[9];
      uint64_t v79 = &v73[v78];
      uint64_t v80 = &v74[v78];
      uint64_t v81 = sub_20A8C2EB0();
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      CGRect v198 = v82;
      uint64_t v199 = v81;
      v82(v79, v80, v81);
      uint64_t v83 = v77[10];
      CGFloat v84 = &v73[v83];
      uint64_t v85 = &v74[v83];
      uint64_t v86 = sub_20A8C4030();
      char v87 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
      v87(v84, v85, v86);
      CGRect v201 = v77;
      uint64_t v88 = v77[11];
      uint64_t v89 = &v73[v88];
      double v90 = &v74[v88];
      uint64_t v91 = sub_20A8C2990();
      CGFloat v192 = *(void (**)(char *, char *))(*(void *)(v91 - 8) + 16);
      uint64_t v193 = v91;
      v192(v89, v90);
      uint64_t v92 = type metadata accessor for QuoteViewModel();
      uint64_t v93 = *(int *)(v92 + 20);
      uint64_t v94 = &v73[v93];
      double v95 = &v74[v93];
      uint64_t v96 = sub_20A8C3410();
      CGFloat v188 = *(void (**)(char *, char *))(*(void *)(v96 - 8) + 16);
      uint64_t v189 = v96;
      v188(v94, v95);
      uint64_t v97 = *(int *)(v92 + 24);
      uint64_t v98 = &v73[v97];
      double v99 = &v74[v97];
      uint64_t v100 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v101 = *(void *)(v100 - 8);
      unint64_t v184 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48);
      CGRect v196 = v87;
      if (v184(v99, 1, v100))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
        a1 = v209;
        uint64_t v103 = v203;
      }
      else
      {
        uint64_t v179 = v92;
        uint64_t v180 = v101;
        uint64_t v134 = sub_20A8C2BC0();
        uint64_t v135 = *(void *)(v134 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v135 + 48))(v99, 3, v134))
        {
          uint64_t v101 = v180;
          memcpy(v98, v99, *(void *)(v180 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v98, v99, v134);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v98, 0, 3, v134);
          uint64_t v101 = v180;
        }
        a1 = v209;
        uint64_t v103 = v203;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        uint64_t v92 = v179;
      }
      uint64_t v138 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      double v139 = &v73[v138];
      uint64_t v140 = &v74[v138];
      uint64_t v141 = *(void *)(v92 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(&v74[v138], 1, v92))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v139, v140, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        uint64_t v205 = v141;
        uint64_t v182 = v101;
        *(void *)double v139 = *(void *)v140;
        v139[8] = v140[8];
        *((void *)v139 + 2) = *((void *)v140 + 2);
        v139[24] = v140[24];
        *((void *)v139 + 4) = *((void *)v140 + 4);
        v139[40] = v140[40];
        uint64_t v143 = *((void *)v140 + 7);
        *((void *)v139 + 6) = *((void *)v140 + 6);
        *((void *)v139 + 7) = v143;
        uint64_t v144 = *((void *)v140 + 9);
        *((void *)v139 + 8) = *((void *)v140 + 8);
        *((void *)v139 + 9) = v144;
        uint64_t v211 = v100;
        uint64_t v145 = v201;
        uint64_t v146 = v201[9];
        uint64_t v147 = &v139[v146];
        uint64_t v148 = v92;
        uint64_t v149 = &v140[v146];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v198(v147, v149, v199);
        v196(&v139[v145[10]], &v140[v145[10]], v86);
        ((void (*)(char *, char *, uint64_t))v192)(&v139[v145[11]], &v140[v145[11]], v193);
        ((void (*)(char *, char *, uint64_t))v188)(&v139[*(int *)(v148 + 20)], &v140[*(int *)(v148 + 20)], v189);
        uint64_t v150 = v148;
        uint64_t v151 = *(int *)(v148 + 24);
        CGFloat v152 = &v139[v151];
        uint64_t v153 = &v140[v151];
        if (v184(&v140[v151], 1, v211))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          uint64_t v172 = sub_20A8C2BC0();
          uint64_t v173 = *(void *)(v172 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v173 + 48))(v153, 3, v172))
          {
            uint64_t v174 = v182;
            memcpy(v152, v153, *(void *)(v182 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v152, v153, v172);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v173 + 56))(v152, 0, 3, v172);
            uint64_t v174 = v182;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v174 + 56))(v152, 0, 1, v211);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v205 + 56))(v139, 0, 1, v150);
      }
      *((unsigned char *)a1 + v206[8]) = *((unsigned char *)v103 + v206[8]);
      goto LABEL_64;
    case 1u:
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_20A8C3E10();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_20A42C470(0);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v56 = v15[6];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_20A8C3D00();
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      CGRect v204 = v15;
      uint64_t v104 = v15[7];
      CGRect v210 = a1;
      double v105 = (char *)a1 + v104;
      double v106 = (char *)a2 + v104;
      *(void *)double v105 = *(void *)((char *)a2 + v104);
      v105[8] = *((unsigned char *)a2 + v104 + 8);
      *((void *)v105 + 2) = *(void *)((char *)a2 + v104 + 16);
      v105[24] = *((unsigned char *)a2 + v104 + 24);
      *((void *)v105 + 4) = *(void *)((char *)a2 + v104 + 32);
      v105[40] = *((unsigned char *)a2 + v104 + 40);
      uint64_t v107 = *(void *)((char *)a2 + v104 + 56);
      *((void *)v105 + 6) = *(void *)((char *)a2 + v104 + 48);
      *((void *)v105 + 7) = v107;
      uint64_t v108 = *(void *)((char *)a2 + v104 + 72);
      *((void *)v105 + 8) = *(void *)((char *)a2 + v104 + 64);
      *((void *)v105 + 9) = v108;
      CGFloat v109 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v110 = v109[9];
      CGRect v207 = &v105[v110];
      uint64_t v111 = &v106[v110];
      uint64_t v112 = sub_20A8C2EB0();
      double v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      CGRect v200 = v113;
      uint64_t v202 = v112;
      v113(v207, v111, v112);
      uint64_t v114 = v109[10];
      unint64_t v115 = &v105[v114];
      uint64_t v116 = &v106[v114];
      uint64_t v117 = sub_20A8C4030();
      uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
      v118(v115, v116, v117);
      CGRect v208 = v109;
      uint64_t v119 = v109[11];
      int64_t v120 = &v105[v119];
      uint64_t v121 = &v106[v119];
      uint64_t v122 = sub_20A8C2990();
      uint64_t v194 = *(void (**)(char *, char *))(*(void *)(v122 - 8) + 16);
      uint64_t v195 = v122;
      v194(v120, v121);
      uint64_t v123 = type metadata accessor for QuoteViewModel();
      uint64_t v124 = *(int *)(v123 + 20);
      int64_t v125 = &v105[v124];
      uint64_t v126 = &v106[v124];
      uint64_t v127 = sub_20A8C3410();
      uint64_t v190 = *(void (**)(char *, char *))(*(void *)(v127 - 8) + 16);
      uint64_t v191 = v127;
      v190(v125, v126);
      uint64_t v128 = *(int *)(v123 + 24);
      double v129 = &v105[v128];
      uint64_t v130 = &v106[v128];
      uint64_t v131 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v132 = *(void *)(v131 - 8);
      uint64_t v187 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48);
      uint64_t v197 = v118;
      if (v187(v130, 1, v131))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v129, v130, *(void *)(*(void *)(v133 - 8) + 64));
        a1 = v210;
      }
      else
      {
        uint64_t v181 = v123;
        uint64_t v185 = v132;
        uint64_t v136 = sub_20A8C2BC0();
        uint64_t v137 = *(void *)(v136 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v130, 3, v136))
        {
          uint64_t v132 = v185;
          memcpy(v129, v130, *(void *)(v185 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v129, v130, v136);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v129, 0, 3, v136);
          uint64_t v132 = v185;
        }
        a1 = v210;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
        uint64_t v123 = v181;
      }
      uint64_t v155 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v156 = &v105[v155];
      uint64_t v157 = &v106[v155];
      uint64_t v158 = *(void *)(v123 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(&v106[v155], 1, v123))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v156, v157, *(void *)(*(void *)(v159 - 8) + 64));
      }
      else
      {
        uint64_t v183 = v158;
        uint64_t v186 = v132;
        *(void *)uint64_t v156 = *(void *)v157;
        v156[8] = v157[8];
        *((void *)v156 + 2) = *((void *)v157 + 2);
        v156[24] = v157[24];
        *((void *)v156 + 4) = *((void *)v157 + 4);
        v156[40] = v157[40];
        uint64_t v160 = *((void *)v157 + 7);
        *((void *)v156 + 6) = *((void *)v157 + 6);
        *((void *)v156 + 7) = v160;
        uint64_t v161 = *((void *)v157 + 9);
        *((void *)v156 + 8) = *((void *)v157 + 8);
        *((void *)v156 + 9) = v161;
        uint64_t v212 = v131;
        uint64_t v162 = v208;
        uint64_t v163 = v208[9];
        uint64_t v164 = &v156[v163];
        uint64_t v165 = v123;
        uint64_t v166 = &v157[v163];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v200(v164, v166, v202);
        v197(&v156[v162[10]], &v157[v162[10]], v117);
        ((void (*)(char *, char *, uint64_t))v194)(&v156[v162[11]], &v157[v162[11]], v195);
        ((void (*)(char *, char *, uint64_t))v190)(&v156[*(int *)(v165 + 20)], &v157[*(int *)(v165 + 20)], v191);
        uint64_t v167 = v165;
        uint64_t v168 = *(int *)(v165 + 24);
        uint64_t v169 = &v156[v168];
        uint64_t v170 = &v157[v168];
        if (v187(&v157[v168], 1, v212))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          uint64_t v175 = sub_20A8C2BC0();
          uint64_t v176 = *(void *)(v175 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48))(v170, 3, v175))
          {
            uint64_t v177 = v186;
            memcpy(v169, v170, *(void *)(v186 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v169, v170, v175);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v169, 0, 3, v175);
            uint64_t v177 = v186;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v169, 0, 1, v212);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(v156, 0, 1, v167);
      }
      *((unsigned char *)a1 + v204[8]) = *((unsigned char *)a2 + v204[8]);
      goto LABEL_64;
    case 2u:
      uint64_t v22 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_64;
    case 3u:
      uint64_t v23 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
      sub_20A42C53C();
      uint64_t v25 = v24;
      uint64_t v26 = *(int *)(v24 + 48);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_20A8C3E10();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_20A42C470(0);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v62 = *(int *)(v25 + 64);
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = sub_20A8C2CB0();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_20A42C43C(0);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      goto LABEL_64;
    case 4u:
      uint64_t v32 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
      uint64_t v33 = (int *)type metadata accessor for StockEarningsModel();
      uint64_t v34 = v33[5];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = sub_20A8C2800();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
      v39(v35, v36, v37);
      uint64_t v40 = v33[6];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)a2 + v40, 1, v37))
      {
        sub_20A764CC8(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        v39(v41, v42, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      }
      uint64_t v68 = v33[7];
      uint64_t v69 = (char *)a1 + v68;
      uint64_t v70 = (char *)a2 + v68;
      uint64_t v71 = sub_20A8C2AF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      *((unsigned char *)a1 + v33[8]) = *((unsigned char *)a2 + v33[8]);
      *((unsigned char *)a1 + v33[9]) = *((unsigned char *)a2 + v33[9]);
      goto LABEL_64;
    case 5u:
      uint64_t v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 6u:
      sub_20A456468();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
      goto LABEL_64;
    case 7u:
      uint64_t v46 = a2[1];
      *a1 = *a2;
      a1[1] = v46;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_64;
    case 8u:
      uint64_t v47 = sub_20A8CD2C0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
      sub_20A46CF6C();
      *(void *)((char *)a1 + *(int *)(v48 + 48)) = *(void *)((char *)a2 + *(int *)(v48 + 48));
      swift_retain();
      goto LABEL_64;
    case 9u:
      uint64_t v49 = sub_20A8CD080();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
LABEL_64:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_20A766EEC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A76F8E0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_20A8C3E10();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_20A42C470(0);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v48 = v7[6];
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        uint64_t v51 = sub_20A8C3D00();
        uint64_t v52 = *(void *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
          memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        CGRect v201 = v7;
        uint64_t v70 = v7[7];
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = *(void *)((char *)a2 + v70);
        v71[8] = v72[8];
        *(void *)uint64_t v71 = v73;
        uint64_t v74 = *((void *)v72 + 2);
        v71[24] = v72[24];
        *((void *)v71 + 2) = v74;
        uint64_t v75 = *((void *)v72 + 4);
        v71[40] = v72[40];
        *((void *)v71 + 4) = v75;
        *((void *)v71 + 6) = *((void *)v72 + 6);
        *((void *)v71 + 7) = *((void *)v72 + 7);
        *((void *)v71 + 8) = *((void *)v72 + 8);
        *((void *)v71 + 9) = *((void *)v72 + 9);
        uint64_t v76 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v77 = v76[9];
        CGRect v203 = &v72[v77];
        CGRect v207 = &v71[v77];
        uint64_t v78 = sub_20A8C2EB0();
        uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v80 = v203;
        uint64_t v204 = v78;
        uint64_t v199 = v79;
        v79(v207, v80, v78);
        uint64_t v81 = v76[10];
        uint64_t v82 = &v71[v81];
        uint64_t v83 = &v72[v81];
        uint64_t v84 = sub_20A8C4030();
        uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16);
        v197(v82, v83, v84);
        CGRect v208 = v76;
        uint64_t v85 = v76[11];
        uint64_t v86 = &v71[v85];
        char v87 = &v72[v85];
        uint64_t v88 = sub_20A8C2990();
        uint64_t v193 = *(void (**)(char *, char *))(*(void *)(v88 - 8) + 16);
        uint64_t v195 = v88;
        v193(v86, v87);
        uint64_t v89 = type metadata accessor for QuoteViewModel();
        uint64_t v90 = *(int *)(v89 + 20);
        uint64_t v91 = &v71[v90];
        uint64_t v92 = &v72[v90];
        uint64_t v93 = sub_20A8C3410();
        uint64_t v189 = *(void (**)(char *, char *))(*(void *)(v93 - 8) + 16);
        uint64_t v191 = v93;
        v189(v91, v92);
        uint64_t v94 = *(int *)(v89 + 24);
        double v95 = &v71[v94];
        uint64_t v96 = &v72[v94];
        uint64_t v97 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v98 = *(void *)(v97 - 8);
        uint64_t v187 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
        if (v187(v96, 1, v97))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          uint64_t v179 = v89;
          uint64_t v183 = v98;
          uint64_t v130 = sub_20A8C2BC0();
          uint64_t v131 = *(void *)(v130 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v96, 3, v130))
          {
            uint64_t v98 = v183;
            memcpy(v95, v96, *(void *)(v183 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v95, v96, v130);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v95, 0, 3, v130);
            uint64_t v98 = v183;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
          uint64_t v89 = v179;
        }
        uint64_t v134 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v135 = &v71[v134];
        uint64_t v136 = &v72[v134];
        uint64_t v137 = *(void *)(v89 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(&v72[v134], 1, v89))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          uint64_t v177 = v137;
          uint64_t v185 = v98;
          uint64_t v139 = *(void *)v136;
          v135[8] = v136[8];
          *(void *)uint64_t v135 = v139;
          uint64_t v140 = *((void *)v136 + 2);
          v135[24] = v136[24];
          *((void *)v135 + 2) = v140;
          uint64_t v141 = *((void *)v136 + 4);
          v135[40] = v136[40];
          *((void *)v135 + 4) = v141;
          *((void *)v135 + 6) = *((void *)v136 + 6);
          *((void *)v135 + 7) = *((void *)v136 + 7);
          *((void *)v135 + 8) = *((void *)v136 + 8);
          *((void *)v135 + 9) = *((void *)v136 + 9);
          uint64_t v181 = v97;
          uint64_t v142 = v208;
          uint64_t v143 = v208[9];
          uint64_t v144 = &v135[v143];
          uint64_t v145 = v89;
          uint64_t v146 = &v136[v143];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v199(v144, v146, v204);
          v197(&v135[v142[10]], &v136[v142[10]], v84);
          ((void (*)(char *, char *, uint64_t))v193)(&v135[v142[11]], &v136[v142[11]], v195);
          ((void (*)(char *, char *, uint64_t))v189)(&v135[*(int *)(v145 + 20)], &v136[*(int *)(v145 + 20)], v191);
          uint64_t v147 = v145;
          uint64_t v148 = *(int *)(v145 + 24);
          uint64_t v149 = &v135[v148];
          uint64_t v150 = &v136[v148];
          if (v187(&v136[v148], 1, v181))
          {
            sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
            memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            uint64_t v170 = sub_20A8C2BC0();
            uint64_t v171 = *(void *)(v170 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v150, 3, v170))
            {
              uint64_t v172 = v185;
              memcpy(v149, v150, *(void *)(v185 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v149, v150, v170);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v149, 0, 3, v170);
              uint64_t v172 = v185;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v149, 0, 1, v181);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v135, 0, 1, v147);
        }
        *((unsigned char *)a1 + v201[8]) = *((unsigned char *)a2 + v201[8]);
        goto LABEL_65;
      case 1u:
        uint64_t v14 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v16 = v15[5];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_20A8C3E10();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_20A42C470(0);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v54 = v15[6];
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = sub_20A8C3D00();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        uint64_t v202 = v15;
        uint64_t v100 = v15[7];
        uint64_t v101 = (char *)a1 + v100;
        uint64_t v102 = (char *)a2 + v100;
        uint64_t v103 = *(void *)((char *)a2 + v100);
        v101[8] = v102[8];
        *(void *)uint64_t v101 = v103;
        uint64_t v104 = *((void *)v102 + 2);
        v101[24] = v102[24];
        *((void *)v101 + 2) = v104;
        uint64_t v105 = *((void *)v102 + 4);
        v101[40] = v102[40];
        *((void *)v101 + 4) = v105;
        *((void *)v101 + 6) = *((void *)v102 + 6);
        *((void *)v101 + 7) = *((void *)v102 + 7);
        *((void *)v101 + 8) = *((void *)v102 + 8);
        *((void *)v101 + 9) = *((void *)v102 + 9);
        double v106 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v107 = v106[9];
        uint64_t v205 = &v102[v107];
        CGRect v209 = &v101[v107];
        uint64_t v108 = sub_20A8C2EB0();
        CGFloat v109 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v110 = v205;
        uint64_t v206 = v108;
        CGRect v200 = v109;
        v109(v209, v110, v108);
        uint64_t v111 = v106[10];
        uint64_t v112 = &v101[v111];
        double v113 = &v102[v111];
        uint64_t v114 = sub_20A8C4030();
        CGRect v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
        v198(v112, v113, v114);
        CGRect v210 = v106;
        uint64_t v115 = v106[11];
        uint64_t v116 = &v101[v115];
        uint64_t v117 = &v102[v115];
        uint64_t v118 = sub_20A8C2990();
        uint64_t v194 = *(void (**)(char *, char *))(*(void *)(v118 - 8) + 16);
        uint64_t v196 = v118;
        v194(v116, v117);
        uint64_t v119 = type metadata accessor for QuoteViewModel();
        uint64_t v120 = *(int *)(v119 + 20);
        uint64_t v121 = &v101[v120];
        uint64_t v122 = &v102[v120];
        uint64_t v123 = sub_20A8C3410();
        uint64_t v190 = *(void (**)(char *, char *))(*(void *)(v123 - 8) + 16);
        uint64_t v192 = v123;
        v190(v121, v122);
        uint64_t v124 = *(int *)(v119 + 24);
        int64_t v125 = &v101[v124];
        uint64_t v126 = &v102[v124];
        uint64_t v127 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v128 = *(void *)(v127 - 8);
        CGFloat v188 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48);
        if (v188(v126, 1, v127))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
        }
        else
        {
          uint64_t v180 = v119;
          uint64_t v184 = v128;
          uint64_t v132 = sub_20A8C2BC0();
          uint64_t v133 = *(void *)(v132 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v133 + 48))(v126, 3, v132))
          {
            uint64_t v128 = v184;
            memcpy(v125, v126, *(void *)(v184 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v125, v126, v132);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v133 + 56))(v125, 0, 3, v132);
            uint64_t v128 = v184;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
          uint64_t v119 = v180;
        }
        uint64_t v152 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v153 = &v101[v152];
        uint64_t v154 = &v102[v152];
        uint64_t v155 = *(void *)(v119 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48))(&v102[v152], 1, v119))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v153, v154, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          uint64_t v178 = v155;
          uint64_t v186 = v128;
          uint64_t v157 = *(void *)v154;
          v153[8] = v154[8];
          *(void *)uint64_t v153 = v157;
          uint64_t v158 = *((void *)v154 + 2);
          v153[24] = v154[24];
          *((void *)v153 + 2) = v158;
          uint64_t v159 = *((void *)v154 + 4);
          v153[40] = v154[40];
          *((void *)v153 + 4) = v159;
          *((void *)v153 + 6) = *((void *)v154 + 6);
          *((void *)v153 + 7) = *((void *)v154 + 7);
          *((void *)v153 + 8) = *((void *)v154 + 8);
          *((void *)v153 + 9) = *((void *)v154 + 9);
          uint64_t v182 = v127;
          uint64_t v160 = v210;
          uint64_t v161 = v210[9];
          uint64_t v162 = &v153[v161];
          uint64_t v163 = v119;
          uint64_t v164 = &v154[v161];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v200(v162, v164, v206);
          v198(&v153[v160[10]], &v154[v160[10]], v114);
          ((void (*)(char *, char *, uint64_t))v194)(&v153[v160[11]], &v154[v160[11]], v196);
          ((void (*)(char *, char *, uint64_t))v190)(&v153[*(int *)(v163 + 20)], &v154[*(int *)(v163 + 20)], v192);
          uint64_t v165 = v163;
          uint64_t v166 = *(int *)(v163 + 24);
          uint64_t v167 = &v153[v166];
          uint64_t v168 = &v154[v166];
          if (v188(&v154[v166], 1, v182))
          {
            sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
            memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            uint64_t v173 = sub_20A8C2BC0();
            uint64_t v174 = *(void *)(v173 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48))(v168, 3, v173))
            {
              uint64_t v175 = v186;
              memcpy(v167, v168, *(void *)(v186 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v167, v168, v173);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v174 + 56))(v167, 0, 3, v173);
              uint64_t v175 = v186;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v167, 0, 1, v182);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v153, 0, 1, v165);
        }
        *((unsigned char *)a1 + v202[8]) = *((unsigned char *)a2 + v202[8]);
        goto LABEL_65;
      case 2u:
        uint64_t v22 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_65;
      case 3u:
        uint64_t v23 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        sub_20A42C53C();
        uint64_t v25 = v24;
        uint64_t v26 = *(int *)(v24 + 48);
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = sub_20A8C3E10();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_20A42C470(0);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        uint64_t v60 = *(int *)(v25 + 64);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = sub_20A8C2CB0();
        uint64_t v64 = *(void *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          sub_20A42C43C(0);
          memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        goto LABEL_65;
      case 4u:
        uint64_t v32 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        uint64_t v33 = (int *)type metadata accessor for StockEarningsModel();
        uint64_t v34 = v33[5];
        uint64_t v35 = (char *)a1 + v34;
        uint64_t v36 = (char *)a2 + v34;
        uint64_t v37 = sub_20A8C2800();
        uint64_t v38 = *(void *)(v37 - 8);
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
        v39(v35, v36, v37);
        uint64_t v40 = v33[6];
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))((char *)a2 + v40, 1, v37))
        {
          sub_20A764CC8(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
          memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v37);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
        }
        uint64_t v66 = v33[7];
        uint64_t v67 = (char *)a1 + v66;
        uint64_t v68 = (char *)a2 + v66;
        uint64_t v69 = sub_20A8C2AF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
        *((unsigned char *)a1 + v33[8]) = *((unsigned char *)a2 + v33[8]);
        *((unsigned char *)a1 + v33[9]) = *((unsigned char *)a2 + v33[9]);
        goto LABEL_65;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_65;
      case 6u:
        sub_20A456468();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(a1, a2, v44);
        goto LABEL_65;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_65;
      case 8u:
        uint64_t v45 = sub_20A8CD2C0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
        sub_20A46CF6C();
        *(void *)((char *)a1 + *(int *)(v46 + 48)) = *(void *)((char *)a2 + *(int *)(v46 + 48));
        swift_retain();
        goto LABEL_65;
      case 9u:
        uint64_t v47 = sub_20A8CD080();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
LABEL_65:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for StockFeedModel()
{
  uint64_t result = qword_26AC6D898;
  if (!qword_26AC6D898) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_20A768880(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_20A8C3E10();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_20A42C470(0);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v48 = v7[6];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = &a2[v48];
      uint64_t v51 = sub_20A8C3D00();
      uint64_t v52 = *(void *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
      {
        sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v191 = v7;
      uint64_t v70 = v7[7];
      uint64_t v71 = &a1[v70];
      uint64_t v72 = &a2[v70];
      *(void *)uint64_t v71 = *(void *)&a2[v70];
      v71[8] = a2[v70 + 8];
      *((void *)v71 + 2) = *(void *)&a2[v70 + 16];
      v71[24] = a2[v70 + 24];
      *((void *)v71 + 4) = *(void *)&a2[v70 + 32];
      v71[40] = a2[v70 + 40];
      long long v73 = *(_OWORD *)&a2[v70 + 64];
      *((_OWORD *)v71 + 3) = *(_OWORD *)&a2[v70 + 48];
      *((_OWORD *)v71 + 4) = v73;
      uint64_t v74 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v75 = v74[9];
      uint64_t v76 = &v71[v75];
      uint64_t v77 = &v72[v75];
      uint64_t v78 = sub_20A8C2EB0();
      uint64_t v183 = *(void (**)(char *, char *))(*(void *)(v78 - 8) + 32);
      uint64_t v185 = v78;
      v183(v76, v77);
      uint64_t v79 = v74[10];
      uint64_t v80 = &v71[v79];
      uint64_t v81 = &v72[v79];
      uint64_t v82 = sub_20A8C4030();
      uint64_t v179 = *(void (**)(char *, char *))(*(void *)(v82 - 8) + 32);
      uint64_t v181 = v82;
      v179(v80, v81);
      uint64_t v187 = v74;
      uint64_t v83 = v74[11];
      uint64_t v84 = &v71[v83];
      uint64_t v85 = &v72[v83];
      uint64_t v86 = sub_20A8C2990();
      uint64_t v175 = *(void (**)(char *, char *))(*(void *)(v86 - 8) + 32);
      uint64_t v177 = v86;
      v175(v84, v85);
      uint64_t v87 = type metadata accessor for QuoteViewModel();
      uint64_t v88 = *(int *)(v87 + 20);
      uint64_t v89 = &v71[v88];
      uint64_t v90 = &v72[v88];
      uint64_t v91 = sub_20A8C3410();
      uint64_t v171 = *(void (**)(char *, char *))(*(void *)(v91 - 8) + 32);
      uint64_t v173 = v91;
      v171(v89, v90);
      uint64_t v92 = *(int *)(v87 + 24);
      uint64_t v93 = &v71[v92];
      uint64_t v94 = &v72[v92];
      uint64_t v95 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v189 = *(void *)(v95 - 8);
      uint64_t v169 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48);
      if (v169(v94, 1, v95))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        uint64_t v163 = v87;
        uint64_t v165 = v95;
        uint64_t v124 = sub_20A8C2BC0();
        uint64_t v125 = *(void *)(v124 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v94, 3, v124))
        {
          uint64_t v126 = v189;
          memcpy(v93, v94, *(void *)(v189 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v93, v94, v124);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v93, 0, 3, v124);
          uint64_t v126 = v189;
        }
        uint64_t v130 = *(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56);
        uint64_t v95 = v165;
        v130(v93, 0, 1, v165);
        uint64_t v87 = v163;
      }
      uint64_t v131 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v132 = &v71[v131];
      uint64_t v133 = &v72[v131];
      uint64_t v134 = *(void *)(v87 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(&v72[v131], 1, v87))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        uint64_t v167 = v134;
        *(void *)uint64_t v132 = *(void *)v133;
        v132[8] = v133[8];
        *((void *)v132 + 2) = *((void *)v133 + 2);
        v132[24] = v133[24];
        *((void *)v132 + 4) = *((void *)v133 + 4);
        v132[40] = v133[40];
        long long v136 = *((_OWORD *)v133 + 4);
        *((_OWORD *)v132 + 3) = *((_OWORD *)v133 + 3);
        *((_OWORD *)v132 + 4) = v136;
        uint64_t v137 = v187;
        ((void (*)(char *, char *, uint64_t))v183)(&v132[v187[9]], &v133[v187[9]], v185);
        ((void (*)(char *, char *, uint64_t))v179)(&v132[v137[10]], &v133[v137[10]], v181);
        ((void (*)(char *, char *, uint64_t))v175)(&v132[v137[11]], &v133[v137[11]], v177);
        ((void (*)(char *, char *, uint64_t))v171)(&v132[*(int *)(v87 + 20)], &v133[*(int *)(v87 + 20)], v173);
        uint64_t v138 = *(int *)(v87 + 24);
        uint64_t v139 = &v132[v138];
        uint64_t v140 = &v133[v138];
        if (v169(&v133[v138], 1, v95))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          uint64_t v154 = v95;
          uint64_t v155 = sub_20A8C2BC0();
          uint64_t v156 = *(void *)(v155 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v140, 3, v155))
          {
            uint64_t v157 = v189;
            memcpy(v139, v140, *(void *)(v189 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v156 + 32))(v139, v140, v155);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(v139, 0, 3, v155);
            uint64_t v157 = v189;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v139, 0, 1, v154);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v132, 0, 1, v87);
      }
      a1[v191[8]] = a2[v191[8]];
      goto LABEL_62;
    case 1u:
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v16 = v15[5];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_20A8C3E10();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_20A42C470(0);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v54 = v15[6];
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      uint64_t v57 = sub_20A8C3D00();
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
      {
        sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      uint64_t v192 = v15;
      uint64_t v97 = v15[7];
      uint64_t v98 = &a1[v97];
      uint64_t v99 = &a2[v97];
      *(void *)uint64_t v98 = *(void *)&a2[v97];
      v98[8] = a2[v97 + 8];
      *((void *)v98 + 2) = *(void *)&a2[v97 + 16];
      v98[24] = a2[v97 + 24];
      *((void *)v98 + 4) = *(void *)&a2[v97 + 32];
      v98[40] = a2[v97 + 40];
      long long v100 = *(_OWORD *)&a2[v97 + 64];
      *((_OWORD *)v98 + 3) = *(_OWORD *)&a2[v97 + 48];
      *((_OWORD *)v98 + 4) = v100;
      uint64_t v101 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v102 = v101[9];
      uint64_t v103 = &v98[v102];
      uint64_t v104 = &v99[v102];
      uint64_t v105 = sub_20A8C2EB0();
      uint64_t v184 = *(void (**)(char *, char *))(*(void *)(v105 - 8) + 32);
      uint64_t v186 = v105;
      v184(v103, v104);
      uint64_t v106 = v101[10];
      uint64_t v107 = &v98[v106];
      uint64_t v108 = &v99[v106];
      uint64_t v109 = sub_20A8C4030();
      uint64_t v180 = *(void (**)(char *, char *))(*(void *)(v109 - 8) + 32);
      uint64_t v182 = v109;
      v180(v107, v108);
      CGFloat v188 = v101;
      uint64_t v110 = v101[11];
      uint64_t v111 = &v98[v110];
      uint64_t v112 = &v99[v110];
      uint64_t v113 = sub_20A8C2990();
      uint64_t v176 = *(void (**)(char *, char *))(*(void *)(v113 - 8) + 32);
      uint64_t v178 = v113;
      v176(v111, v112);
      uint64_t v114 = type metadata accessor for QuoteViewModel();
      uint64_t v115 = *(int *)(v114 + 20);
      uint64_t v116 = &v98[v115];
      uint64_t v117 = &v99[v115];
      uint64_t v118 = sub_20A8C3410();
      uint64_t v172 = *(void (**)(char *, char *))(*(void *)(v118 - 8) + 32);
      uint64_t v174 = v118;
      v172(v116, v117);
      uint64_t v119 = *(int *)(v114 + 24);
      uint64_t v120 = &v98[v119];
      uint64_t v121 = &v99[v119];
      uint64_t v122 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v190 = *(void *)(v122 - 8);
      uint64_t v170 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48);
      if (v170(v121, 1, v122))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
      }
      else
      {
        uint64_t v164 = v114;
        uint64_t v166 = v122;
        uint64_t v127 = sub_20A8C2BC0();
        uint64_t v128 = *(void *)(v127 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v121, 3, v127))
        {
          uint64_t v129 = v190;
          memcpy(v120, v121, *(void *)(v190 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v120, v121, v127);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v120, 0, 3, v127);
          uint64_t v129 = v190;
        }
        uint64_t v142 = *(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56);
        uint64_t v122 = v166;
        v142(v120, 0, 1, v166);
        uint64_t v114 = v164;
      }
      uint64_t v143 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v144 = &v98[v143];
      uint64_t v145 = &v99[v143];
      uint64_t v146 = *(void *)(v114 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(&v99[v143], 1, v114))
      {
        sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
      }
      else
      {
        uint64_t v168 = v146;
        *(void *)uint64_t v144 = *(void *)v145;
        v144[8] = v145[8];
        *((void *)v144 + 2) = *((void *)v145 + 2);
        v144[24] = v145[24];
        *((void *)v144 + 4) = *((void *)v145 + 4);
        v144[40] = v145[40];
        long long v148 = *((_OWORD *)v145 + 4);
        *((_OWORD *)v144 + 3) = *((_OWORD *)v145 + 3);
        *((_OWORD *)v144 + 4) = v148;
        uint64_t v149 = v188;
        ((void (*)(char *, char *, uint64_t))v184)(&v144[v188[9]], &v145[v188[9]], v186);
        ((void (*)(char *, char *, uint64_t))v180)(&v144[v149[10]], &v145[v149[10]], v182);
        ((void (*)(char *, char *, uint64_t))v176)(&v144[v149[11]], &v145[v149[11]], v178);
        ((void (*)(char *, char *, uint64_t))v172)(&v144[*(int *)(v114 + 20)], &v145[*(int *)(v114 + 20)], v174);
        uint64_t v150 = *(int *)(v114 + 24);
        uint64_t v151 = &v144[v150];
        uint64_t v152 = &v145[v150];
        if (v170(&v145[v150], 1, v122))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          uint64_t v158 = v122;
          uint64_t v159 = sub_20A8C2BC0();
          uint64_t v160 = *(void *)(v159 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v152, 3, v159))
          {
            uint64_t v161 = v190;
            memcpy(v151, v152, *(void *)(v190 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v160 + 32))(v151, v152, v159);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v151, 0, 3, v159);
            uint64_t v161 = v190;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(v151, 0, 1, v158);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v168 + 56))(v144, 0, 1, v114);
      }
      a1[v192[8]] = a2[v192[8]];
      goto LABEL_62;
    case 2u:
      uint64_t v22 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      goto LABEL_62;
    case 3u:
      uint64_t v23 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      sub_20A42C53C();
      uint64_t v25 = v24;
      uint64_t v26 = *(int *)(v24 + 48);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = sub_20A8C3E10();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        sub_20A42C470(0);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v60 = *(int *)(v25 + 64);
      uint64_t v61 = &a1[v60];
      uint64_t v62 = &a2[v60];
      uint64_t v63 = sub_20A8C2CB0();
      uint64_t v64 = *(void *)(v63 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
      {
        sub_20A42C43C(0);
        memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      }
      goto LABEL_62;
    case 4u:
      uint64_t v32 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
      uint64_t v33 = (int *)type metadata accessor for StockEarningsModel();
      uint64_t v34 = v33[5];
      uint64_t v35 = &a1[v34];
      uint64_t v36 = &a2[v34];
      uint64_t v37 = sub_20A8C2800();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v39(v35, v36, v37);
      uint64_t v40 = v33[6];
      uint64_t v41 = &a1[v40];
      uint64_t v42 = &a2[v40];
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v38 + 48))(&a2[v40], 1, v37))
      {
        sub_20A764CC8(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        v39(v41, v42, v37);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
      }
      uint64_t v66 = v33[7];
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      uint64_t v69 = sub_20A8C2AF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
      a1[v33[8]] = a2[v33[8]];
      a1[v33[9]] = a2[v33[9]];
      goto LABEL_62;
    case 6u:
      sub_20A456468();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(a1, a2, v44);
      goto LABEL_62;
    case 8u:
      uint64_t v45 = sub_20A8CD2C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
      sub_20A46CF6C();
      *(void *)&a1[*(int *)(v46 + 48)] = *(void *)&a2[*(int *)(v46 + 48)];
      goto LABEL_62;
    case 9u:
      uint64_t v47 = sub_20A8CD080();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
LABEL_62:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *sub_20A76A068(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A76F8E0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_20A8C3E10();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_20A42C470(0);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v48 = v7[6];
        uint64_t v49 = &a1[v48];
        uint64_t v50 = &a2[v48];
        uint64_t v51 = sub_20A8C3D00();
        uint64_t v52 = *(void *)(v51 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
          memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v49, v50, v51);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
        }
        uint64_t v193 = v7;
        uint64_t v70 = v7[7];
        uint64_t v71 = &a1[v70];
        uint64_t v72 = &a2[v70];
        *(void *)uint64_t v71 = *(void *)&a2[v70];
        v71[8] = a2[v70 + 8];
        *((void *)v71 + 2) = *(void *)&a2[v70 + 16];
        v71[24] = a2[v70 + 24];
        *((void *)v71 + 4) = *(void *)&a2[v70 + 32];
        v71[40] = a2[v70 + 40];
        long long v73 = *(_OWORD *)&a2[v70 + 64];
        *((_OWORD *)v71 + 3) = *(_OWORD *)&a2[v70 + 48];
        *((_OWORD *)v71 + 4) = v73;
        uint64_t v74 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v75 = v74[9];
        uint64_t v76 = &v71[v75];
        uint64_t v77 = &v72[v75];
        uint64_t v78 = sub_20A8C2EB0();
        uint64_t v185 = *(void (**)(char *, char *))(*(void *)(v78 - 8) + 32);
        uint64_t v187 = v78;
        v185(v76, v77);
        uint64_t v79 = v74[10];
        uint64_t v80 = &v71[v79];
        uint64_t v81 = &v72[v79];
        uint64_t v82 = sub_20A8C4030();
        uint64_t v181 = *(void (**)(char *, char *))(*(void *)(v82 - 8) + 32);
        uint64_t v183 = v82;
        v181(v80, v81);
        uint64_t v189 = v74;
        uint64_t v83 = v74[11];
        uint64_t v84 = &v71[v83];
        uint64_t v85 = &v72[v83];
        uint64_t v86 = sub_20A8C2990();
        uint64_t v177 = *(void (**)(char *, char *))(*(void *)(v86 - 8) + 32);
        uint64_t v179 = v86;
        v177(v84, v85);
        uint64_t v87 = type metadata accessor for QuoteViewModel();
        uint64_t v88 = *(int *)(v87 + 20);
        uint64_t v89 = &v71[v88];
        uint64_t v90 = &v72[v88];
        uint64_t v91 = sub_20A8C3410();
        uint64_t v173 = *(void (**)(char *, char *))(*(void *)(v91 - 8) + 32);
        uint64_t v175 = v91;
        v173(v89, v90);
        uint64_t v92 = *(int *)(v87 + 24);
        uint64_t v93 = &v71[v92];
        uint64_t v94 = &v72[v92];
        uint64_t v95 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v191 = *(void *)(v95 - 8);
        uint64_t v171 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48);
        if (v171(v94, 1, v95))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          uint64_t v165 = v87;
          uint64_t v167 = v95;
          uint64_t v124 = sub_20A8C2BC0();
          uint64_t v125 = *(void *)(v124 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v94, 3, v124))
          {
            uint64_t v126 = v191;
            memcpy(v93, v94, *(void *)(v191 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v93, v94, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v93, 0, 3, v124);
            uint64_t v126 = v191;
          }
          uint64_t v130 = *(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56);
          uint64_t v95 = v167;
          v130(v93, 0, 1, v167);
          uint64_t v87 = v165;
        }
        uint64_t v131 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v132 = &v71[v131];
        uint64_t v133 = &v72[v131];
        uint64_t v134 = *(void *)(v87 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(&v72[v131], 1, v87))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          uint64_t v169 = v134;
          *(void *)uint64_t v132 = *(void *)v133;
          v132[8] = v133[8];
          *((void *)v132 + 2) = *((void *)v133 + 2);
          v132[24] = v133[24];
          *((void *)v132 + 4) = *((void *)v133 + 4);
          v132[40] = v133[40];
          long long v136 = *((_OWORD *)v133 + 4);
          *((_OWORD *)v132 + 3) = *((_OWORD *)v133 + 3);
          *((_OWORD *)v132 + 4) = v136;
          uint64_t v137 = v189;
          ((void (*)(char *, char *, uint64_t))v185)(&v132[v189[9]], &v133[v189[9]], v187);
          ((void (*)(char *, char *, uint64_t))v181)(&v132[v137[10]], &v133[v137[10]], v183);
          ((void (*)(char *, char *, uint64_t))v177)(&v132[v137[11]], &v133[v137[11]], v179);
          ((void (*)(char *, char *, uint64_t))v173)(&v132[*(int *)(v87 + 20)], &v133[*(int *)(v87 + 20)], v175);
          uint64_t v138 = *(int *)(v87 + 24);
          uint64_t v139 = &v132[v138];
          uint64_t v140 = &v133[v138];
          if (v171(&v133[v138], 1, v95))
          {
            sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
            memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
            uint64_t v142 = v169;
          }
          else
          {
            uint64_t v155 = v95;
            uint64_t v156 = sub_20A8C2BC0();
            uint64_t v157 = *(void *)(v156 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v140, 3, v156))
            {
              uint64_t v158 = v191;
              memcpy(v139, v140, *(void *)(v191 + 64));
              uint64_t v159 = v155;
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v157 + 32))(v139, v140, v156);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v139, 0, 3, v156);
              uint64_t v159 = v155;
              uint64_t v158 = v191;
            }
            uint64_t v142 = v169;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v139, 0, 1, v159);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v132, 0, 1, v87);
        }
        a1[v193[8]] = a2[v193[8]];
        goto LABEL_63;
      case 1u:
        uint64_t v14 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v16 = v15[5];
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_20A8C3E10();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_20A42C470(0);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v54 = v15[6];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = sub_20A8C3D00();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          sub_20A764CC8(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        uint64_t v194 = v15;
        uint64_t v97 = v15[7];
        uint64_t v98 = &a1[v97];
        uint64_t v99 = &a2[v97];
        *(void *)uint64_t v98 = *(void *)&a2[v97];
        v98[8] = a2[v97 + 8];
        *((void *)v98 + 2) = *(void *)&a2[v97 + 16];
        v98[24] = a2[v97 + 24];
        *((void *)v98 + 4) = *(void *)&a2[v97 + 32];
        v98[40] = a2[v97 + 40];
        long long v100 = *(_OWORD *)&a2[v97 + 64];
        *((_OWORD *)v98 + 3) = *(_OWORD *)&a2[v97 + 48];
        *((_OWORD *)v98 + 4) = v100;
        uint64_t v101 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v102 = v101[9];
        uint64_t v103 = &v98[v102];
        uint64_t v104 = &v99[v102];
        uint64_t v105 = sub_20A8C2EB0();
        uint64_t v186 = *(void (**)(char *, char *))(*(void *)(v105 - 8) + 32);
        uint64_t v188 = v105;
        v186(v103, v104);
        uint64_t v106 = v101[10];
        uint64_t v107 = &v98[v106];
        uint64_t v108 = &v99[v106];
        uint64_t v109 = sub_20A8C4030();
        uint64_t v182 = *(void (**)(char *, char *))(*(void *)(v109 - 8) + 32);
        uint64_t v184 = v109;
        v182(v107, v108);
        uint64_t v190 = v101;
        uint64_t v110 = v101[11];
        uint64_t v111 = &v98[v110];
        uint64_t v112 = &v99[v110];
        uint64_t v113 = sub_20A8C2990();
        uint64_t v178 = *(void (**)(char *, char *))(*(void *)(v113 - 8) + 32);
        uint64_t v180 = v113;
        v178(v111, v112);
        uint64_t v114 = type metadata accessor for QuoteViewModel();
        uint64_t v115 = *(int *)(v114 + 20);
        uint64_t v116 = &v98[v115];
        uint64_t v117 = &v99[v115];
        uint64_t v118 = sub_20A8C3410();
        uint64_t v174 = *(void (**)(char *, char *))(*(void *)(v118 - 8) + 32);
        uint64_t v176 = v118;
        v174(v116, v117);
        uint64_t v119 = *(int *)(v114 + 24);
        uint64_t v120 = &v98[v119];
        uint64_t v121 = &v99[v119];
        uint64_t v122 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v192 = *(void *)(v122 - 8);
        uint64_t v172 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v192 + 48);
        if (v172(v121, 1, v122))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          uint64_t v166 = v114;
          uint64_t v168 = v122;
          uint64_t v127 = sub_20A8C2BC0();
          uint64_t v128 = *(void *)(v127 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v121, 3, v127))
          {
            uint64_t v129 = v192;
            memcpy(v120, v121, *(void *)(v192 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v128 + 32))(v120, v121, v127);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v120, 0, 3, v127);
            uint64_t v129 = v192;
          }
          uint64_t v143 = *(void (**)(char *, void, uint64_t, uint64_t))(v129 + 56);
          uint64_t v122 = v168;
          v143(v120, 0, 1, v168);
          uint64_t v114 = v166;
        }
        uint64_t v144 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v145 = &v98[v144];
        uint64_t v146 = &v99[v144];
        uint64_t v147 = *(void *)(v114 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v147 + 48))(&v99[v144], 1, v114))
        {
          sub_20A764CC8(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
          memcpy(v145, v146, *(void *)(*(void *)(v148 - 8) + 64));
        }
        else
        {
          uint64_t v170 = v147;
          *(void *)uint64_t v145 = *(void *)v146;
          v145[8] = v146[8];
          *((void *)v145 + 2) = *((void *)v146 + 2);
          v145[24] = v146[24];
          *((void *)v145 + 4) = *((void *)v146 + 4);
          v145[40] = v146[40];
          long long v149 = *((_OWORD *)v146 + 4);
          *((_OWORD *)v145 + 3) = *((_OWORD *)v146 + 3);
          *((_OWORD *)v145 + 4) = v149;
          uint64_t v150 = v190;
          ((void (*)(char *, char *, uint64_t))v186)(&v145[v190[9]], &v146[v190[9]], v188);
          ((void (*)(char *, char *, uint64_t))v182)(&v145[v150[10]], &v146[v150[10]], v184);
          ((void (*)(char *, char *, uint64_t))v178)(&v145[v150[11]], &v146[v150[11]], v180);
          ((void (*)(char *, char *, uint64_t))v174)(&v145[*(int *)(v114 + 20)], &v146[*(int *)(v114 + 20)], v176);
          uint64_t v151 = *(int *)(v114 + 24);
          uint64_t v152 = &v145[v151];
          uint64_t v153 = &v146[v151];
          if (v172(&v146[v151], 1, v122))
          {
            sub_20A764CC8(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
            memcpy(v152, v153, *(void *)(*(void *)(v154 - 8) + 64));
          }
          else
          {
            uint64_t v160 = v122;
            uint64_t v161 = sub_20A8C2BC0();
            uint64_t v162 = *(void *)(v161 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v153, 3, v161))
            {
              uint64_t v163 = v192;
              memcpy(v152, v153, *(void *)(v192 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v152, v153, v161);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v152, 0, 3, v161);
              uint64_t v163 = v192;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v152, 0, 1, v160);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v145, 0, 1, v114);
        }
        a1[v194[8]] = a2[v194[8]];
        goto LABEL_63;
      case 2u:
        uint64_t v22 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        goto LABEL_63;
      case 3u:
        uint64_t v23 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        sub_20A42C53C();
        uint64_t v25 = v24;
        uint64_t v26 = *(int *)(v24 + 48);
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = sub_20A8C3E10();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_20A42C470(0);
          memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
        uint64_t v60 = *(int *)(v25 + 64);
        uint64_t v61 = &a1[v60];
        uint64_t v62 = &a2[v60];
        uint64_t v63 = sub_20A8C2CB0();
        uint64_t v64 = *(void *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          sub_20A42C43C(0);
          memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        goto LABEL_63;
      case 4u:
        uint64_t v32 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        uint64_t v33 = (int *)type metadata accessor for StockEarningsModel();
        uint64_t v34 = v33[5];
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        uint64_t v37 = sub_20A8C2800();
        uint64_t v38 = *(void *)(v37 - 8);
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v39(v35, v36, v37);
        uint64_t v40 = v33[6];
        uint64_t v41 = &a1[v40];
        uint64_t v42 = &a2[v40];
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v38 + 48))(&a2[v40], 1, v37))
        {
          sub_20A764CC8(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
          memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          v39(v41, v42, v37);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v37);
        }
        uint64_t v66 = v33[7];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        uint64_t v69 = sub_20A8C2AF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        a1[v33[8]] = a2[v33[8]];
        a1[v33[9]] = a2[v33[9]];
        goto LABEL_63;
      case 6u:
        sub_20A456468();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v44 - 8) + 32))(a1, a2, v44);
        goto LABEL_63;
      case 8u:
        uint64_t v45 = sub_20A8CD2C0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
        sub_20A46CF6C();
        *(void *)&a1[*(int *)(v46 + 48)] = *(void *)&a2[*(int *)(v46 + 48)];
        goto LABEL_63;
      case 9u:
        uint64_t v47 = sub_20A8CD080();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
LABEL_63:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_20A76B87C()
{
  uint64_t v0 = type metadata accessor for StockFeedMastheadModel();
  if (v1 <= 0x3F)
  {
    uint64_t v15 = *(void *)(v0 - 8) + 64;
    uint64_t v16 = v15;
    uint64_t v2 = sub_20A8C3F00();
    if (v3 <= 0x3F)
    {
      uint64_t v17 = *(void *)(v2 - 8) + 64;
      sub_20A42C470(319);
      if (v4 <= 0x3F)
      {
        sub_20A42C43C(319);
        if (v5 <= 0x3F)
        {
          swift_getTupleTypeLayout3();
          uint64_t v18 = &v14;
          uint64_t v6 = type metadata accessor for StockEarningsModel();
          if (v7 <= 0x3F)
          {
            uint64_t v19 = *(void *)(v6 - 8) + 64;
            uint64_t v20 = &unk_20A8EE7F8;
            sub_20A456468();
            if (v9 <= 0x3F)
            {
              uint64_t v21 = *(void *)(v8 - 8) + 64;
              uint64_t v22 = &unk_20A8EE810;
              sub_20A8CD2C0();
              if (v10 <= 0x3F)
              {
                swift_getTupleTypeLayout2();
                uint64_t v23 = &v13;
                uint64_t v11 = sub_20A8CD080();
                if (v12 <= 0x3F)
                {
                  uint64_t v24 = *(void *)(v11 - 8) + 64;
                  swift_initEnumMetadataMultiPayload();
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_20A76BAE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v7);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v12 = sub_20A8C3F00();
      goto LABEL_9;
    case 3u:
      sub_20A42C53C();
      uint64_t v14 = (uint64_t)&v6[*(int *)(v13 + 64)];
      sub_20A76F940((uint64_t)&v6[*(int *)(v13 + 48)], a1, (uint64_t (*)(void))sub_20A42C470);
      sub_20A76F8E0(v14, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v15 = sub_20A8C3F00();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v6, v15);
    case 4u:
      unint64_t v10 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5u:
    case 6u:
    case 7u:
    case 9u:
      unint64_t v10 = type metadata accessor for StockFeedModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v6, (uint64_t (*)(void))v10);
      goto LABEL_10;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v12 = sub_20A8CD2C0();
LABEL_9:
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v6, v12);
      goto LABEL_10;
    case 0xAu:
LABEL_10:
      uint64_t v16 = sub_20A8C3E10();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
      break;
    default:
      sub_20A76F940((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A76F9A8((uint64_t)&v9[*(int *)(v7 + 20)], a1, (uint64_t (*)(void))sub_20A42C470);
      uint64_t result = sub_20A76F8E0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      break;
  }
  return result;
}

uint64_t sub_20A76BDF0(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      sub_20A8C4020();
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A76BE88()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CD080();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CD2C0();
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A76F9A8(v1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t v16 = 0xD000000000000013;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A76F8E0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v16 = 0x6563697270;
      break;
    case 2u:
      uint64_t v17 = sub_20A8C3F00();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
      uint64_t v16 = 0x7472616863;
      break;
    case 3u:
      sub_20A42C53C();
      uint64_t v19 = (uint64_t)v15 + *(int *)(v18 + 48);
      sub_20A76F8E0((uint64_t)v15 + *(int *)(v18 + 64), (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v19, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v20 = sub_20A8C3F00();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v20 - 8) + 8))(v15, v20);
      uint64_t v16 = 0x74654465746F7571;
      break;
    case 4u:
      sub_20A76F8E0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
      uint64_t v16 = 0x73676E696E726165;
      break;
    case 5u:
      swift_bridgeObjectRelease();
      uint64_t v16 = 0x64726163616C70;
      break;
    case 6u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v15, v9);
      uint64_t v16 = sub_20A8CCF30();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      break;
    case 7u:
      uint64_t v16 = *v15;
      swift_release();
      break;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v21 = v24;
      (*(void (**)(char *, uint64_t *, uint64_t))(v24 + 32))(v7, v15, v5);
      uint64_t v16 = sub_20A8CD260();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
      break;
    case 9u:
      uint64_t v22 = v25;
      (*(void (**)(char *, uint64_t *, uint64_t))(v25 + 32))(v4, v15, v2);
      uint64_t v16 = sub_20A8CD050();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
      break;
    case 0xAu:
      return v16;
    default:
      sub_20A76F8E0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v16 = 0x646165687473616DLL;
      break;
  }
  return v16;
}

uint64_t sub_20A76C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A7716CC(&qword_26AC6D880, (void (*)(uint64_t))type metadata accessor for StockFeedModel);

  return MEMORY[0x270F7A6F8](a1, a2, v4);
}

uint64_t sub_20A76C458()
{
  return sub_20A7716CC(&qword_26AC6D890, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A76C4A0()
{
  return sub_20A7716CC(&qword_26AC6D888, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A76C4E8()
{
  return sub_20A7716CC(&qword_26AC6D878, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A76C530()
{
  return sub_20A7716CC(&qword_26AC6D880, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A76C578()
{
  return sub_20A7716CC(&qword_26AC6D848, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A76C5C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v76 = a1;
  sub_20A764CC8(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v69 = (char *)&v64 - v2;
  uint64_t v3 = sub_20A8C4020();
  uint64_t v66 = *(void *)(v3 - 8);
  uint64_t v67 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v65 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v64 = (char *)&v64 - v6;
  sub_20A5C36A4();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v72 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v70 = *(void *)(v9 - 8);
  uint64_t v71 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v68 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C43C(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v75 = (uint64_t)&v64 - v14;
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v74 = (uint64_t)&v64 - v19;
  uint64_t v20 = sub_20A8C3F00();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v64 - v25;
  uint64_t v27 = sub_20A8C2D10();
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v28 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v64 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v77, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v30, v20);
      goto LABEL_11;
    case 3:
      sub_20A42C53C();
      uint64_t v40 = &v30[*(int *)(v39 + 48)];
      uint64_t v41 = (uint64_t)&v30[*(int *)(v39 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v30, v20);
      uint64_t v42 = (uint64_t)v40;
      uint64_t v43 = v74;
      sub_20A76F940(v42, v74, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v44 = v75;
      sub_20A76F940(v41, v75, (uint64_t (*)(void))sub_20A42C43C);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v26, v20);
      sub_20A8C2D00();
      uint64_t v45 = v43;
      sub_20A76F9A8(v43, (uint64_t)v17, (uint64_t (*)(void))sub_20A42C470);
      sub_20A76F9A8(v44, v73, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v46 = sub_20A8C33D0();
      uint64_t v47 = v76;
      v76[3] = v46;
      v47[4] = sub_20A7716CC(&qword_26AC67570, MEMORY[0x263F7AB50]);
      __swift_allocate_boxed_opaque_existential_1(v47);
      sub_20A8C33C0();
      sub_20A76F8E0(v44, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v45, (uint64_t (*)(void))sub_20A42C470);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    case 4:
      uint64_t v35 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5:
    case 7:
    case 9:
      uint64_t v35 = type metadata accessor for StockFeedModel;
LABEL_7:
      uint64_t result = sub_20A76F8E0((uint64_t)v30, (uint64_t (*)(void))v35);
      goto LABEL_11;
    case 6:
      uint64_t v49 = v70;
      uint64_t v48 = v71;
      uint64_t v50 = v68;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v68, v30, v71);
      uint64_t v51 = v64;
      sub_20A8CCF50();
      sub_20A8C3F80();
      uint64_t v52 = *(void (**)(char *, uint64_t))(v66 + 8);
      uint64_t v53 = v51;
      uint64_t v54 = v67;
      v52(v53, v67);
      uint64_t v55 = v65;
      sub_20A8CCF50();
      sub_20A8C3F80();
      v52(v55, v54);
      swift_getObjectType();
      sub_20A8CECA0();
      swift_unknownObjectRelease();
      uint64_t v56 = (uint64_t)v72;
      sub_20A8C4C20();
      uint64_t v57 = sub_20A8C4C40();
      uint64_t v58 = *(void *)(v57 - 8);
      int v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57);
      uint64_t v60 = v76;
      if (v59 == 1)
      {
        (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v48);
        uint64_t result = sub_20A76F8E0(v56, (uint64_t (*)(void))sub_20A5C36A4);
        *(_OWORD *)uint64_t v60 = 0u;
        *((_OWORD *)v60 + 1) = 0u;
        v60[4] = 0;
      }
      else
      {
        v76[3] = v57;
        v60[4] = sub_20A7716CC(&qword_26AC81268, MEMORY[0x263F58A10]);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v60);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 32))(boxed_opaque_existential_1, v56, v57);
        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v50, v48);
      }
      return result;
    case 8:
      sub_20A46CF6C();
      swift_release();
      uint64_t v61 = sub_20A8CD2C0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v61 - 8) + 8))(v30, v61);
      goto LABEL_11;
    case 10:
LABEL_11:
      uint64_t v62 = v76;
      v76[4] = 0;
      *(_OWORD *)uint64_t v62 = 0u;
      *((_OWORD *)v62 + 1) = 0u;
      break;
    default:
      sub_20A76F940((uint64_t)v30, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v33, v20);
      sub_20A8C2D00();
      sub_20A76F9A8((uint64_t)&v33[*(int *)(v31 + 20)], v74, (uint64_t (*)(void))sub_20A42C470);
      sub_20A76F8E0((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v36 = sub_20A8C2CB0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v75, 1, 1, v36);
      uint64_t v37 = sub_20A8C33D0();
      uint64_t v38 = v76;
      v76[3] = v37;
      v38[4] = sub_20A7716CC(&qword_26AC67570, MEMORY[0x263F7AB50]);
      __swift_allocate_boxed_opaque_existential_1(v38);
      uint64_t result = sub_20A8C33C0();
      break;
  }
  return result;
}

uint64_t sub_20A76D020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_20A456468();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_4;
    case 3u:
      sub_20A42C53C();
      uint64_t v14 = (uint64_t)&v11[*(int *)(v13 + 48)];
      sub_20A76F8E0((uint64_t)&v11[*(int *)(v13 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v14, (uint64_t (*)(void))sub_20A42C470);
LABEL_4:
      uint64_t v15 = sub_20A8C3F00();
      goto LABEL_9;
    case 4u:
      uint64_t v12 = type metadata accessor for StockEarningsModel;
      goto LABEL_11;
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 6u:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      sub_20A8CCF50();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v16 = sub_20A8C4020();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_12;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v15 = sub_20A8CD2C0();
LABEL_9:
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v11, v15);
      goto LABEL_12;
    case 9u:
      uint64_t v12 = type metadata accessor for StockFeedModel;
      goto LABEL_11;
    case 0xAu:
      goto LABEL_12;
    default:
      uint64_t v12 = type metadata accessor for StockFeedMastheadModel;
LABEL_11:
      sub_20A76F8E0((uint64_t)v11, (uint64_t (*)(void))v12);
LABEL_12:
      uint64_t v18 = sub_20A8C4020();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_20A76D368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C4020();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A456468();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A76F9A8(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_4;
    case 3u:
      sub_20A42C53C();
      uint64_t v18 = (uint64_t)&v15[*(int *)(v17 + 48)];
      sub_20A76F8E0((uint64_t)&v15[*(int *)(v17 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v18, (uint64_t (*)(void))sub_20A42C470);
LABEL_4:
      uint64_t v19 = sub_20A8C3F00();
      goto LABEL_6;
    case 4u:
      uint64_t v16 = type metadata accessor for StockEarningsModel;
      goto LABEL_13;
    case 5u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 6u:
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v15, v9);
      sub_20A8CCF70();
      if (v23[15] == 1)
      {
        sub_20A8CCF50();
        Headline.dragItem.getter(a1);
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        uint64_t v22 = sub_20A8CB860();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a1, 1, 1, v22);
      }
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_14;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v19 = sub_20A8CD2C0();
LABEL_6:
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v19 - 8) + 8))(v15, v19);
      goto LABEL_14;
    case 9u:
      uint64_t v16 = type metadata accessor for StockFeedModel;
      goto LABEL_13;
    case 0xAu:
      goto LABEL_14;
    default:
      uint64_t v16 = type metadata accessor for StockFeedMastheadModel;
LABEL_13:
      sub_20A76F8E0((uint64_t)v15, (uint64_t (*)(void))v16);
LABEL_14:
      uint64_t v20 = sub_20A8CB860();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
}

uint64_t sub_20A76D78C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  unint64_t v31 = a2;
  unint64_t v40 = a2;
  uint64_t v41 = a3;
  unint64_t v36 = a4;
  uint64_t v37 = a5;
  unint64_t v42 = a4;
  uint64_t v43 = a5;
  uint64_t v38 = a6;
  uint64_t v39 = a7;
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  unint64_t v35 = a8;
  unint64_t v46 = a8;
  uint64_t v47 = a9;
  uint64_t v10 = sub_20A8C7E50();
  uint64_t v32 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v30 - v11);
  sub_20A456468();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v30 - v19;
  uint64_t v21 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v9, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t v24 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_5;
    case 3u:
      sub_20A42C53C();
      uint64_t v27 = (uint64_t)&v23[*(int *)(v26 + 48)];
      sub_20A76F8E0((uint64_t)&v23[*(int *)(v26 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v27, (uint64_t (*)(void))sub_20A42C470);
LABEL_5:
      uint64_t v28 = sub_20A8C3F00();
      goto LABEL_10;
    case 4u:
      uint64_t v25 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5u:
    case 7u:
    case 9u:
      uint64_t v25 = type metadata accessor for StockFeedModel;
      goto LABEL_7;
    case 6u:
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v23, v14);
      sub_20A8C80C0();
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
      (*(void (**)(void *, uint64_t, uint64_t))(v32 + 16))(v12, v33, v10);
      uint64_t v24 = sub_20A5DF264((uint64_t)v17, v12, v31, v34, v36, v37, v38, v39, v35, a9);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      return v24;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v28 = sub_20A8CD2C0();
LABEL_10:
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v23, v28);
      return 0;
    case 0xAu:
      return v24;
    default:
      uint64_t v25 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v23, (uint64_t (*)(void))v25);
      return 0;
  }
}

uint64_t sub_20A76DB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v45 = a5;
  uint64_t v46 = a8;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v44 = a9;
  uint64_t v49 = a3;
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v15 = sub_20A8CBB70();
  uint64_t v43 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - v16;
  uint64_t v18 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v9, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t v21 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_4;
    case 3u:
      sub_20A42C53C();
      uint64_t v24 = (uint64_t)&v20[*(int *)(v23 + 48)];
      sub_20A76F8E0((uint64_t)&v20[*(int *)(v23 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v24, (uint64_t (*)(void))sub_20A42C470);
LABEL_4:
      uint64_t v25 = sub_20A8C3F00();
      goto LABEL_11;
    case 4u:
      uint64_t v22 = type metadata accessor for StockEarningsModel;
      goto LABEL_13;
    case 5u:
      swift_bridgeObjectRelease();
      return 0;
    case 6u:
      sub_20A764CC8(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, MEMORY[0x263F8E0F8]);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_20A8D3DC0;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_20A8D5CB0;
      uint64_t v27 = sub_20A8C8720();
      uint64_t v28 = sub_20A8C86E0();
      if (v28)
      {
        uint64_t v29 = MEMORY[0x263F7D410];
        uint64_t v30 = v27;
      }
      else
      {
        uint64_t v30 = 0;
        uint64_t v29 = 0;
        *(void *)(v26 + 40) = 0;
        *(void *)(v26 + 48) = 0;
      }
      uint64_t v40 = v42 + 32;
      *(void *)(v26 + 32) = v28;
      *(void *)(v26 + 56) = v30;
      *(void *)(v26 + 64) = v29;
      uint64_t v41 = v27;
      uint64_t v32 = sub_20A8C86D0();
      if (v32)
      {
        uint64_t v33 = MEMORY[0x263F7D410];
        uint64_t v34 = v41;
      }
      else
      {
        uint64_t v34 = 0;
        uint64_t v33 = 0;
        *(void *)(v26 + 80) = 0;
        *(void *)(v26 + 88) = 0;
      }
      *(void *)(v26 + 72) = v32;
      *(void *)(v26 + 96) = v34;
      *(void *)(v26 + 104) = v33;
      uint64_t v48 = a2;
      uint64_t v49 = a3;
      uint64_t v50 = a4;
      uint64_t v51 = v45;
      uint64_t v52 = a6;
      uint64_t v53 = a7;
      uint64_t v54 = v46;
      uint64_t v55 = v44;
      sub_20A8C7E50();
      sub_20A8C7E40();
      type metadata accessor for StockFeedServiceConfig();
      sub_20A7716CC(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
      uint64_t v35 = sub_20A8CBAF0();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v15);
      sub_20A8C7E20();
      uint64_t v36 = v41;
      uint64_t v37 = sub_20A8C86C0();
      swift_bridgeObjectRelease();
      sub_20A55E55C(v35);
      if (v37)
      {
        uint64_t v38 = v36;
        uint64_t v39 = MEMORY[0x263F7D410];
      }
      else
      {
        uint64_t v38 = 0;
        uint64_t v39 = 0;
        *(void *)(v26 + 120) = 0;
        *(void *)(v26 + 128) = 0;
      }
      *(void *)(v26 + 112) = v37;
      *(void *)(v26 + 136) = v38;
      *(void *)(v26 + 144) = v39;
      sub_20A8C80C0();
      sub_20A8C8A70();
      sub_20A8C8A30();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_20A8C8080();
      sub_20A76F8E0((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      return v21;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v25 = sub_20A8CD2C0();
LABEL_11:
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v20, v25);
      return 0;
    case 9u:
      uint64_t v22 = type metadata accessor for StockFeedModel;
      goto LABEL_13;
    case 0xAu:
      return v21;
    default:
      uint64_t v22 = type metadata accessor for StockFeedMastheadModel;
LABEL_13:
      sub_20A76F8E0((uint64_t)v20, (uint64_t (*)(void))v22);
      return 0;
  }
}

uint64_t sub_20A76E100(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  return sub_20A76D78C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_20A76E10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_20A76DB80(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_20A76E118()
{
  uint64_t v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_5;
    case 3:
      sub_20A42C53C();
      uint64_t v8 = (uint64_t)&v3[*(int *)(v7 + 48)];
      sub_20A76F8E0((uint64_t)&v3[*(int *)(v7 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v8, (uint64_t (*)(void))sub_20A42C470);
LABEL_5:
      uint64_t v9 = sub_20A8C3F00();
      goto LABEL_10;
    case 4:
      uint64_t v6 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5:
    case 7:
    case 9:
      uint64_t v6 = type metadata accessor for StockFeedModel;
      goto LABEL_7;
    case 6:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      return 1;
    case 8:
      sub_20A46CF6C();
      swift_release();
      uint64_t v9 = sub_20A8CD2C0();
LABEL_10:
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      return 0;
    case 10:
      return result;
    default:
      uint64_t v6 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))v6);
      return 0;
  }
}

uint64_t sub_20A76E328()
{
  uint64_t v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_5;
    case 3:
      sub_20A42C53C();
      uint64_t v8 = (uint64_t)&v3[*(int *)(v7 + 48)];
      sub_20A76F8E0((uint64_t)&v3[*(int *)(v7 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v8, (uint64_t (*)(void))sub_20A42C470);
LABEL_5:
      uint64_t v9 = sub_20A8C3F00();
      goto LABEL_10;
    case 4:
      uint64_t v6 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5:
    case 7:
    case 9:
      uint64_t v6 = type metadata accessor for StockFeedModel;
      goto LABEL_7;
    case 6:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      return 1;
    case 8:
      sub_20A46CF6C();
      swift_release();
      uint64_t v9 = sub_20A8CD2C0();
LABEL_10:
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      return 0;
    case 10:
      return result;
    default:
      uint64_t v6 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))v6);
      return 0;
  }
}

uint64_t sub_20A76E538()
{
  uint64_t v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_7;
    case 3:
      sub_20A42C53C();
      uint64_t v9 = (uint64_t)&v3[*(int *)(v8 + 48)];
      sub_20A76F8E0((uint64_t)&v3[*(int *)(v8 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v9, (uint64_t (*)(void))sub_20A42C470);
LABEL_7:
      uint64_t v10 = sub_20A8C3F00();
      goto LABEL_11;
    case 4:
      uint64_t v7 = type metadata accessor for StockEarningsModel;
      goto LABEL_9;
    case 5:
    case 7:
      uint64_t v6 = type metadata accessor for StockFeedModel;
      goto LABEL_4;
    case 6:
    case 9:
      uint64_t v7 = type metadata accessor for StockFeedModel;
LABEL_9:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))v7);
      return 1;
    case 8:
      sub_20A46CF6C();
      swift_release();
      uint64_t v10 = sub_20A8CD2C0();
LABEL_11:
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
      return 0;
    case 10:
      return result;
    default:
      uint64_t v6 = type metadata accessor for StockFeedMastheadModel;
LABEL_4:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))v6);
      return 0;
  }
}

uint64_t sub_20A76E748@<X0>(uint64_t a1@<X8>)
{
  return sub_20A76E784(MEMORY[0x263F7D3D8], MEMORY[0x263F7D3E0], MEMORY[0x263F7D3D0], a1);
}

uint64_t sub_20A76E784@<X0>(unsigned int *a1@<X0>, uint64_t (*a2)(void)@<X1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = v4;
  uint64_t v10 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_5;
    case 3u:
      sub_20A42C53C();
      uint64_t v15 = (uint64_t)&v12[*(int *)(v14 + 48)];
      sub_20A76F8E0((uint64_t)&v12[*(int *)(v14 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v15, (uint64_t (*)(void))sub_20A42C470);
LABEL_5:
      uint64_t v16 = sub_20A8C3F00();
      goto LABEL_10;
    case 4u:
      uint64_t v13 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5u:
    case 7u:
    case 9u:
      uint64_t v13 = type metadata accessor for StockFeedModel;
      goto LABEL_7;
    case 6u:
      uint64_t v17 = *a1;
      uint64_t v18 = a2(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a4, v17, v18);
      return sub_20A76F8E0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v16 = sub_20A8CD2C0();
LABEL_10:
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v12, v16);
      break;
    case 0xAu:
      break;
    default:
      uint64_t v13 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v12, (uint64_t (*)(void))v13);
      break;
  }
  uint64_t v20 = *a3;
  uint64_t v21 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a4, v20, v21);
}

uint64_t sub_20A76EA2C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A76E784(MEMORY[0x263F7D3B0], MEMORY[0x263F7D3B8], MEMORY[0x263F7D3A8], a1);
}

uint64_t sub_20A76EA68()
{
  uint64_t v1 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_5;
    case 3:
      sub_20A42C53C();
      uint64_t v8 = (uint64_t)&v3[*(int *)(v7 + 48)];
      sub_20A76F8E0((uint64_t)&v3[*(int *)(v7 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v8, (uint64_t (*)(void))sub_20A42C470);
LABEL_5:
      uint64_t v9 = sub_20A8C3F00();
      goto LABEL_10;
    case 4:
      uint64_t v6 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5:
    case 6:
    case 9:
      uint64_t v6 = type metadata accessor for StockFeedModel;
      goto LABEL_7;
    case 7:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      return 1;
    case 8:
      sub_20A46CF6C();
      swift_release();
      uint64_t v9 = sub_20A8CD2C0();
LABEL_10:
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      return 0;
    case 10:
      return result;
    default:
      uint64_t v6 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v3, (uint64_t (*)(void))v6);
      return 0;
  }
}

uint64_t sub_20A76EC78@<X0>(uint64_t a1@<X8>)
{
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v5, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = sub_20A8CD080();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  if (EnumCaseMultiPayload == 9)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v4, v7);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v7);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
    return sub_20A76F8E0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  }
}

uint64_t sub_20A76EDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8CD080();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A76EE68()
{
  uint64_t v1 = sub_20A8C4020();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v0, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_4;
    case 3u:
      sub_20A42C53C();
      uint64_t v15 = (uint64_t)&v12[*(int *)(v14 + 48)];
      sub_20A76F8E0((uint64_t)&v12[*(int *)(v14 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v15, (uint64_t (*)(void))sub_20A42C470);
LABEL_4:
      uint64_t v16 = sub_20A8C3F00();
      goto LABEL_11;
    case 4u:
      uint64_t v13 = type metadata accessor for StockEarningsModel;
      goto LABEL_13;
    case 5u:
      swift_bridgeObjectRelease();
      return sub_20A76BE88();
    case 6u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
      sub_20A8CCF50();
      uint64_t v17 = (void *)sub_20A8C3F80();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      id v18 = objc_msgSend(v17, sel_title);
      swift_unknownObjectRelease();
      if (v18)
      {
        sub_20A8CE280();
      }
      v29[0] = sub_20A8CCF30();
      v29[1] = v21;
      sub_20A8CE3D0();
      uint64_t v22 = sub_20A771590(36);
      uint64_t v24 = v23;
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      MEMORY[0x210526650](v22, v24, v26, v28);
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A8CE3D0();
      uint64_t v19 = v29[0];
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v19;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      return sub_20A76BE88();
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v16 = sub_20A8CD2C0();
LABEL_11:
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v12, v16);
      return sub_20A76BE88();
    case 9u:
      uint64_t v13 = type metadata accessor for StockFeedModel;
      goto LABEL_13;
    case 0xAu:
      return sub_20A76BE88();
    default:
      uint64_t v13 = type metadata accessor for StockFeedMastheadModel;
LABEL_13:
      sub_20A76F8E0((uint64_t)v12, (uint64_t (*)(void))v13);
      return sub_20A76BE88();
  }
}

uint64_t sub_20A76F2CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CD2C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v2, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_4;
    case 3u:
      sub_20A42C53C();
      uint64_t v18 = (uint64_t)&v15[*(int *)(v17 + 48)];
      sub_20A76F8E0((uint64_t)&v15[*(int *)(v17 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v18, (uint64_t (*)(void))sub_20A42C470);
LABEL_4:
      uint64_t v19 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v15, v19);
      goto LABEL_8;
    case 4u:
      uint64_t v16 = type metadata accessor for StockEarningsModel;
      goto LABEL_7;
    case 5u:
      uint64_t v16 = type metadata accessor for StockFeedModel;
      goto LABEL_7;
    case 6u:
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
      sub_20A455EF8(a1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v20 = (unsigned int *)MEMORY[0x263F59AB0];
      goto LABEL_9;
    case 7u:
      sub_20A76F8E0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      sub_20A76BE88();
      sub_20A8CCED0();
      uint64_t v20 = (unsigned int *)MEMORY[0x263F59A98];
      goto LABEL_9;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v15, v4);
      sub_20A8CD260();
      _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
      _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
      sub_20A8CC4E0();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v20 = (unsigned int *)MEMORY[0x263F59A58];
      goto LABEL_9;
    case 9u:
      uint64_t v24 = sub_20A8CD080();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, v15, v24);
      uint64_t v20 = (unsigned int *)MEMORY[0x263F59AA8];
      goto LABEL_9;
    case 0xAu:
      goto LABEL_8;
    default:
      uint64_t v16 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A76F8E0((uint64_t)v15, (uint64_t (*)(void))v16);
LABEL_8:
      uint64_t v20 = (unsigned int *)MEMORY[0x263F59AA0];
LABEL_9:
      uint64_t v21 = *v20;
      uint64_t v22 = sub_20A8CCF10();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(a1, v21, v22);
  }
}

uint64_t sub_20A76F748()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CD080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A76F9A8(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v9 = sub_20A8CD060();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_20A76F8E0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
    return 0;
  }
  return v9;
}

uint64_t sub_20A76F8E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A76F940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A76F9A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A76FA10(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v229 = (char *)a1;
  uint64_t v230 = a2;
  uint64_t v2 = type metadata accessor for StockEarningsModel();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v204 = (uint64_t)&v182 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v203 = (uint64_t)&v182 - v5;
  uint64_t v6 = sub_20A8CD080();
  uint64_t v221 = *(void *)(v6 - 8);
  uint64_t v222 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v202 = (char *)&v182 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  CGRect v201 = (char *)&v182 - v9;
  uint64_t v10 = sub_20A8CD2C0();
  uint64_t v219 = *(void *)(v10 - 8);
  uint64_t v220 = v10;
  MEMORY[0x270FA5388](v10);
  CGRect v200 = (char *)&v182 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v199 = (char *)&v182 - v13;
  sub_20A456468();
  uint64_t v217 = *(void *)(v14 - 8);
  uint64_t v218 = v14;
  MEMORY[0x270FA5388](v14);
  CGRect v198 = (char *)&v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v197 = (char *)&v182 - v17;
  uint64_t v189 = sub_20A8C2CB0();
  uint64_t v187 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  uint64_t v183 = (char *)&v182 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77162C(0);
  uint64_t v186 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v188 = (uint64_t)&v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_20A8C3E10();
  uint64_t v193 = *(void *)(v192 - 8);
  MEMORY[0x270FA5388](v192);
  uint64_t v185 = (char *)&v182 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5C6360();
  uint64_t v191 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v194 = (uint64_t)&v182 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C43C(0);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v184 = (uint64_t)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v206 = (uint64_t)&v182 - v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v205 = (uint64_t)&v182 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v207 = (uint64_t)&v182 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v209 = (uint64_t)&v182 - v33;
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v190 = (uint64_t)&v182 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v210 = (uint64_t)&v182 - v37;
  MEMORY[0x270FA5388](v38);
  uint64_t v211 = (uint64_t)&v182 - v39;
  MEMORY[0x270FA5388](v40);
  uint64_t v214 = (uint64_t)&v182 - v41;
  MEMORY[0x270FA5388](v42);
  uint64_t v208 = (uint64_t)&v182 - v43;
  uint64_t v44 = sub_20A8C3F00();
  uint64_t v227 = *(void *)(v44 - 8);
  uint64_t v228 = v44;
  MEMORY[0x270FA5388](v44);
  CGFloat v215 = (char *)&v182 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  CGFloat v216 = (char *)&v182 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v196 = (char *)&v182 - v49;
  MEMORY[0x270FA5388](v50);
  uint64_t v195 = (char *)&v182 - v51;
  uint64_t v52 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v52 - 8);
  uint64_t v212 = (uint64_t)&v182 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v54);
  uint64_t v213 = (uint64_t)&v182 - v55;
  uint64_t v56 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v56);
  uint64_t v225 = (char *)&v182 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v58);
  uint64_t v224 = (uint64_t)&v182 - v59;
  MEMORY[0x270FA5388](v60);
  uint64_t v226 = (uint64_t)&v182 - v61;
  MEMORY[0x270FA5388](v62);
  uint64_t v64 = (char *)&v182 - v63;
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = (uint64_t *)((char *)&v182 - v66);
  MEMORY[0x270FA5388](v68);
  uint64_t v70 = (char *)&v182 - v69;
  MEMORY[0x270FA5388](v71);
  uint64_t v223 = (uint64_t)&v182 - v72;
  MEMORY[0x270FA5388](v73);
  uint64_t v75 = (char *)&v182 - v74;
  MEMORY[0x270FA5388](v76);
  uint64_t v78 = (char *)&v182 - v77;
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = (char *)&v182 - v80;
  sub_20A77164C(0);
  MEMORY[0x270FA5388](v82 - 8);
  uint64_t v84 = (char *)&v182 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = (uint64_t)&v84[*(int *)(v85 + 56)];
  sub_20A76F9A8((uint64_t)v229, (uint64_t)v84, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  uint64_t v87 = v230;
  uint64_t v230 = v86;
  sub_20A76F9A8(v87, v86, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v88 = v230;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v90 = (uint64_t)v78;
        goto LABEL_45;
      }
      uint64_t v153 = type metadata accessor for StockFeedMastheadModel;
      uint64_t v154 = (uint64_t)v78;
      goto LABEL_36;
    case 2u:
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v91 = v230;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v92 = v227;
        uint64_t v93 = v228;
        uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v227 + 32);
        uint64_t v95 = v195;
        v94(v195, v75, v228);
        uint64_t v96 = v196;
        v94(v196, (char *)v91, v93);
        char v97 = MEMORY[0x21051C160](v95, v96);
        uint64_t v98 = *(void (**)(char *, uint64_t))(v92 + 8);
        v98(v96, v93);
        v98(v95, v93);
        uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
        goto LABEL_43;
      }
      (*(void (**)(char *, uint64_t))(v227 + 8))(v75, v228);
      goto LABEL_42;
    case 3u:
      unsigned __int8 v229 = v84;
      uint64_t v100 = v223;
      sub_20A76F9A8((uint64_t)v84, v223, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      sub_20A42C53C();
      uint64_t v102 = *(int *)(v101 + 48);
      uint64_t v103 = v100 + v102;
      uint64_t v104 = *(int *)(v101 + 64);
      uint64_t v105 = v100 + v104;
      uint64_t v106 = v230;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_20A76F8E0(v100 + v104, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v100 + v102, (uint64_t (*)(void))sub_20A42C470);
        (*(void (**)(uint64_t, uint64_t))(v227 + 8))(v100, v228);
        uint64_t v84 = v229;
        goto LABEL_42;
      }
      uint64_t v107 = v106 + v104;
      uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t))(v227 + 32);
      uint64_t v109 = v216;
      uint64_t v110 = v100;
      uint64_t v111 = v228;
      v108(v216, v110, v228);
      uint64_t v112 = v215;
      v108(v215, v106, v111);
      uint64_t v113 = v208;
      sub_20A76F940(v103, v208, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v114 = v209;
      sub_20A76F940(v105, v209, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v115 = v214;
      sub_20A76F940(v106 + v102, v214, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v116 = v107;
      uint64_t v117 = v207;
      sub_20A76F940(v116, v207, (uint64_t (*)(void))sub_20A42C43C);
      LOBYTE(v111) = MEMORY[0x21051C160](v109, v112);
      uint64_t v118 = v211;
      sub_20A76F9A8(v113, v211, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v119 = v210;
      sub_20A76F9A8(v115, v210, (uint64_t (*)(void))sub_20A42C470);
      if ((v111 & 1) == 0)
      {
        sub_20A76F8E0(v119, (uint64_t (*)(void))sub_20A42C470);
        sub_20A76F8E0(v118, (uint64_t (*)(void))sub_20A42C470);
        uint64_t v84 = v229;
        uint64_t v125 = v205;
        uint64_t v126 = v206;
LABEL_53:
        uint64_t v127 = v227;
        sub_20A76F9A8(v114, v125, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F9A8(v117, v126, (uint64_t (*)(void))sub_20A42C43C);
LABEL_54:
        sub_20A76F8E0(v126, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v125, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v117, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v214, (uint64_t (*)(void))sub_20A42C470);
        sub_20A76F8E0(v114, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v113, (uint64_t (*)(void))sub_20A42C470);
        uint64_t v161 = *(void (**)(char *, uint64_t))(v127 + 8);
        uint64_t v162 = v228;
        v161(v215, v228);
        v161(v216, v162);
LABEL_55:
        char v97 = 0;
        uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
        goto LABEL_43;
      }
      uint64_t v120 = v194;
      uint64_t v121 = v194 + *(int *)(v191 + 48);
      sub_20A76F9A8(v118, v194, (uint64_t (*)(void))sub_20A42C470);
      sub_20A76F9A8(v119, v121, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v122 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v193 + 48);
      uint64_t v123 = v192;
      if (v122(v120, 1, v192) == 1)
      {
        sub_20A76F8E0(v119, (uint64_t (*)(void))sub_20A42C470);
        sub_20A76F8E0(v118, (uint64_t (*)(void))sub_20A42C470);
        uint64_t v120 = v194;
        int v124 = v122(v121, 1, v123);
        uint64_t v84 = v229;
        uint64_t v125 = v205;
        uint64_t v126 = v206;
        if (v124 == 1)
        {
          sub_20A76F8E0(v120, (uint64_t (*)(void))sub_20A42C470);
          sub_20A76F9A8(v114, v125, (uint64_t (*)(void))sub_20A42C43C);
          sub_20A76F9A8(v117, v126, (uint64_t (*)(void))sub_20A42C43C);
          uint64_t v127 = v227;
          goto LABEL_57;
        }
        goto LABEL_52;
      }
      uint64_t v160 = v190;
      sub_20A76F9A8(v120, v190, (uint64_t (*)(void))sub_20A42C470);
      if (v122(v121, 1, v123) == 1)
      {
        sub_20A76F8E0(v210, (uint64_t (*)(void))sub_20A42C470);
        sub_20A76F8E0(v211, (uint64_t (*)(void))sub_20A42C470);
        (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v160, v123);
        uint64_t v84 = v229;
        uint64_t v125 = v205;
        uint64_t v126 = v206;
LABEL_52:
        sub_20A76F8E0(v120, (uint64_t (*)(void))sub_20A5C6360);
        goto LABEL_53;
      }
      uint64_t v163 = v193;
      uint64_t v164 = v185;
      (*(void (**)(char *, uint64_t, uint64_t))(v193 + 32))(v185, v121, v123);
      sub_20A7716CC((unint64_t *)&unk_26AC68FA0, MEMORY[0x263F7AEF0]);
      LODWORD(v230) = sub_20A8CE210();
      uint64_t v165 = *(void (**)(char *, uint64_t))(v163 + 8);
      v165(v164, v123);
      sub_20A76F8E0(v210, (uint64_t (*)(void))sub_20A42C470);
      sub_20A76F8E0(v211, (uint64_t (*)(void))sub_20A42C470);
      v165((char *)v160, v123);
      sub_20A76F8E0(v120, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v125 = v205;
      sub_20A76F9A8(v114, v205, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v126 = v206;
      sub_20A76F9A8(v117, v206, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v84 = v229;
      uint64_t v127 = v227;
      if ((v230 & 1) == 0) {
        goto LABEL_54;
      }
LABEL_57:
      uint64_t v166 = v188;
      uint64_t v167 = v188 + *(int *)(v186 + 48);
      sub_20A76F9A8(v125, v188, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F9A8(v126, v167, (uint64_t (*)(void))sub_20A42C43C);
      uint64_t v168 = v187;
      uint64_t v169 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
      uint64_t v170 = v189;
      if (v169(v166, 1, v189) != 1)
      {
        uint64_t v174 = v184;
        sub_20A76F9A8(v166, v184, (uint64_t (*)(void))sub_20A42C43C);
        if (v169(v167, 1, v170) != 1)
        {
          uint64_t v177 = v183;
          (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v183, v167, v170);
          sub_20A7716CC((unint64_t *)&unk_26AC68D90, MEMORY[0x263F7A890]);
          uint64_t v178 = v168;
          char v97 = sub_20A8CE210();
          uint64_t v179 = *(void (**)(char *, uint64_t))(v178 + 8);
          v179(v177, v170);
          sub_20A76F8E0(v206, (uint64_t (*)(void))sub_20A42C43C);
          sub_20A76F8E0(v205, (uint64_t (*)(void))sub_20A42C43C);
          sub_20A76F8E0(v207, (uint64_t (*)(void))sub_20A42C43C);
          sub_20A76F8E0(v214, (uint64_t (*)(void))sub_20A42C470);
          sub_20A76F8E0(v209, (uint64_t (*)(void))sub_20A42C43C);
          sub_20A76F8E0(v208, (uint64_t (*)(void))sub_20A42C470);
          uint64_t v180 = *(void (**)(char *, uint64_t))(v127 + 8);
          uint64_t v181 = v228;
          v180(v215, v228);
          v180(v216, v181);
          v179((char *)v174, v170);
          sub_20A76F8E0(v166, (uint64_t (*)(void))sub_20A42C43C);
          uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
          uint64_t v84 = v229;
          goto LABEL_43;
        }
        sub_20A76F8E0(v206, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v125, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v207, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v214, (uint64_t (*)(void))sub_20A42C470);
        sub_20A76F8E0(v209, (uint64_t (*)(void))sub_20A42C43C);
        sub_20A76F8E0(v208, (uint64_t (*)(void))sub_20A42C470);
        uint64_t v175 = *(void (**)(char *, uint64_t))(v127 + 8);
        uint64_t v176 = v228;
        v175(v215, v228);
        v175(v216, v176);
        (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v174, v170);
        uint64_t v84 = v229;
        goto LABEL_62;
      }
      sub_20A76F8E0(v126, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v125, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v207, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v214, (uint64_t (*)(void))sub_20A42C470);
      sub_20A76F8E0(v209, (uint64_t (*)(void))sub_20A42C43C);
      sub_20A76F8E0(v208, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v171 = *(void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v172 = v228;
      v171(v215, v228);
      v171(v216, v172);
      unsigned int v173 = v169(v167, 1, v170);
      uint64_t v84 = v229;
      if (v173 != 1)
      {
LABEL_62:
        sub_20A76F8E0(v166, (uint64_t (*)(void))sub_20A77162C);
        goto LABEL_55;
      }
      sub_20A76F8E0(v166, (uint64_t (*)(void))sub_20A42C43C);
LABEL_23:
      char v97 = 1;
      uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
LABEL_43:
      sub_20A76F8E0((uint64_t)v84, v99);
      return v97 & 1;
    case 4u:
      uint64_t v81 = v225;
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v225, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v128 = v230;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v129 = v203;
        sub_20A76F940((uint64_t)v81, v203, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
        uint64_t v130 = v128;
        uint64_t v131 = v204;
        sub_20A76F940(v130, v204, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
        char v97 = sub_20A850840(v129, v131);
        uint64_t v132 = type metadata accessor for StockEarningsModel;
        goto LABEL_46;
      }
      uint64_t v89 = type metadata accessor for StockEarningsModel;
      goto LABEL_35;
    case 5u:
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v134 = *v67;
      uint64_t v133 = v67[1];
      uint64_t v135 = (uint64_t *)v230;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      uint64_t v136 = *v135;
      uint64_t v137 = v135[1];
      if (v134 == v136 && v133 == v137) {
        char v97 = 1;
      }
      else {
        char v97 = sub_20A8CF760();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
      goto LABEL_43;
    case 6u:
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v70, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v138 = v230;
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v140 = v217;
        uint64_t v139 = v218;
        uint64_t v141 = *(void (**)(char *, char *, uint64_t))(v217 + 32);
        uint64_t v142 = v197;
        v141(v197, v70, v218);
        uint64_t v143 = v198;
        v141(v198, (char *)v138, v139);
        sub_20A8C4020();
        uint64_t v144 = (void (*)(uint64_t))MEMORY[0x263F7AF50];
        sub_20A7716CC((unint64_t *)&unk_26AC69010, MEMORY[0x263F7AF50]);
        sub_20A7716CC((unint64_t *)&unk_26AC69000, v144);
        char v145 = sub_20A8CCF40();
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v217 + 8))(v70, v218);
      goto LABEL_42;
    case 7u:
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      swift_bridgeObjectRelease();
      swift_release();
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_42;
      }
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_23;
    case 8u:
      uint64_t v146 = v226;
      sub_20A76F9A8((uint64_t)v84, v226, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      sub_20A46CF6C();
      swift_release();
      uint64_t v147 = v230;
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        swift_release();
        uint64_t v140 = v219;
        uint64_t v139 = v220;
        uint64_t v148 = *(void (**)(char *, uint64_t, uint64_t))(v219 + 32);
        uint64_t v142 = v199;
        v148(v199, v146, v220);
        uint64_t v143 = v200;
        v148(v200, v147, v139);
        char v145 = MEMORY[0x2105255A0](v142, v143);
        goto LABEL_28;
      }
      uint64_t v156 = v219;
      uint64_t v155 = v220;
      goto LABEL_41;
    case 9u:
      uint64_t v146 = v224;
      sub_20A76F9A8((uint64_t)v84, v224, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v149 = v230;
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v140 = v221;
        uint64_t v139 = v222;
        uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t))(v221 + 32);
        uint64_t v142 = v201;
        v150(v201, v146, v222);
        uint64_t v143 = v202;
        v150(v202, v149, v139);
        char v145 = MEMORY[0x210525390](v142, v143);
LABEL_28:
        char v97 = v145;
        uint64_t v151 = *(void (**)(char *, uint64_t))(v140 + 8);
        v151(v143, v139);
        v151(v142, v139);
        uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
        goto LABEL_43;
      }
      uint64_t v156 = v221;
      uint64_t v155 = v222;
LABEL_41:
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v146, v155);
      goto LABEL_42;
    case 0xAu:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
      if (EnumCaseMultiPayload != 10) {
        goto LABEL_42;
      }
      char v97 = 1;
      goto LABEL_43;
    default:
      sub_20A76F9A8((uint64_t)v84, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
      uint64_t v88 = v230;
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v89 = type metadata accessor for StockFeedMastheadModel;
LABEL_35:
        uint64_t v153 = v89;
        uint64_t v154 = (uint64_t)v81;
LABEL_36:
        sub_20A76F8E0(v154, (uint64_t (*)(void))v153);
LABEL_42:
        char v97 = 0;
        uint64_t v99 = (uint64_t (*)(void))sub_20A77164C;
      }
      else
      {
        uint64_t v90 = (uint64_t)v81;
LABEL_45:
        uint64_t v129 = v213;
        sub_20A76F940(v90, v213, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
        uint64_t v158 = v88;
        uint64_t v131 = v212;
        sub_20A76F940(v158, v212, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
        char v97 = sub_20A6FC658(v129, v131);
        uint64_t v132 = type metadata accessor for StockFeedMastheadModel;
LABEL_46:
        uint64_t v159 = v132;
        sub_20A76F8E0(v131, (uint64_t (*)(void))v132);
        sub_20A76F8E0(v129, (uint64_t (*)(void))v159);
        uint64_t v99 = (uint64_t (*)(void))type metadata accessor for StockFeedModel;
      }
      goto LABEL_43;
  }
}

uint64_t sub_20A771590(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_20A8CE3C0();
    return sub_20A8CE490();
  }
  return result;
}

void sub_20A77162C(uint64_t a1)
{
}

void sub_20A77164C(uint64_t a1)
{
}

void sub_20A77166C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A7716CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A771714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_20A447F18();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StocksAudioTrack();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A771900(v2, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A63B744();
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A63B858();
LABEL_5:
    uint64_t v12 = *(void *)&v6[*(int *)(v11 + 48)];
    uint64_t v13 = &v6[*(int *)(v11 + 64)];
    sub_20A4480FC((uint64_t)v6, (uint64_t)v9);
    uint64_t v14 = sub_20A8C4E20();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
    sub_20A447E1C();
    uint64_t v16 = v15;
    uint64_t v17 = *(int *)(v15 + 48);
    sub_20A4480FC((uint64_t)v9, a1);
    *(void *)(a1 + v17) = v12;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 0, 1, v16);
  }
  sub_20A447E1C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 1, 1, v19);
}

uint64_t sub_20A771900(uint64_t a1, uint64_t a2)
{
  sub_20A447F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A771964()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 280);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 328);
  return v0;
}

uint64_t sub_20A7719D4()
{
  sub_20A771964();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_20A771A2C()
{
  return sub_20A77AD98(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A771A74()
{
  return sub_20A77AD98(&qword_26AC7BBA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
}

uint64_t sub_20A771ABC()
{
  return sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
}

uint64_t sub_20A771B04()
{
  return sub_20A77AD98((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

uint64_t sub_20A771B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v127 = a1;
  uint64_t v126 = a3;
  sub_20A77A6C4(0);
  MEMORY[0x270FA5388](v5 - 8);
  int v124 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_20A8C9EA0();
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v125 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_20A8C9830();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v123 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_20A8CADF0();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v115 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_20A8CCD20();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v111 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_20A8C43D0();
  uint64_t v11 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v108 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_20A8C43C0();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  uint64_t v107 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C43A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C334(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8CCF20();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = v3;
  uint64_t v105 = *(void *)(v3 + 256);
  sub_20A77A810(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v114 = v25;
  uint64_t v103 = sub_20A8CBA50();
  uint64_t v104 = v26;
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_26AC6D3C8;
  uint64_t v28 = *MEMORY[0x263F59AC0];
  uint64_t v100 = v22;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 104);
  uint64_t v102 = v24;
  v29(v24, v28, v21);
  uint64_t v30 = sub_20A8CCFE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v20, 1, 1, v30);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F7D190], v14);
  id v101 = v27;
  sub_20A8C9720();
  sub_20A8CEDC0();
  uint64_t v97 = v31;
  uint64_t v96 = v32;
  sub_20A8C9720();
  uint64_t v95 = v33;
  uint64_t v94 = v34;
  sub_20A8C9760();
  uint64_t v92 = v35;
  uint64_t v91 = v36;
  sub_20A8C96F0();
  uint64_t v90 = v37;
  uint64_t v89 = v38;
  sub_20A8C9770();
  uint64_t v88 = v39;
  uint64_t v87 = v40;
  sub_20A8C9750();
  uint64_t v93 = v20;
  uint64_t v41 = v17;
  sub_20A8C9710();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  sub_20A8C9740();
  uint64_t v99 = v21;
  sub_20A8C97B0();
  uint64_t v98 = v14;
  sub_20A8C9730();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v108, *MEMORY[0x263F7D1A8], v106);
  v85[6] = 0;
  v85[7] = 0;
  v85[10] = v55;
  v85[11] = v57;
  v85[8] = v51;
  v85[9] = v53;
  v85[4] = v47;
  v85[5] = v49;
  v85[2] = v43;
  void v85[3] = v45;
  v85[1] = v87;
  v85[0] = v88;
  uint64_t v58 = v107;
  sub_20A8C43B0();
  uint64_t v59 = v111;
  uint64_t v60 = v116;
  sub_20A772848(v116, v111);
  uint64_t v61 = v102;
  uint64_t v62 = (uint64_t)v93;
  uint64_t v108 = (char *)sub_20A8CC6B0();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v59, v113);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v58, v110);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v98);
  sub_20A77A718(v62, (uint64_t (*)(void))sub_20A42C334);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v99);
  sub_20A8C9710();
  uint64_t v63 = sub_20A8CE960();
  MEMORY[0x210526C50](v63, 0.0, v64, v65, v66, v67);
  uint64_t v68 = __swift_project_boxed_opaque_existential_1((void *)(v60 + 216), *(void *)(v60 + 240));
  sub_20A8C9720();
  uint64_t v70 = v69;
  uint64_t v72 = v71;
  uint64_t v73 = (void *)sub_20A8C9750();
  uint64_t v74 = v115;
  sub_20A8C96E0();
  uint64_t v75 = (void *)*v68;
  v130[0] = v70;
  v130[1] = v72;
  long long v76 = *(_OWORD *)(MEMORY[0x263F834E8] + 16);
  long long v131 = *MEMORY[0x263F834E8];
  long long v132 = v76;
  uint64_t v133 = v73;
  __swift_project_boxed_opaque_existential_1(v75 + 2, v75[5]);
  id v77 = v73;
  sub_20A485E08((uint64_t)v130, &v128);
  CGRectGetMinY(v129);
  __swift_project_boxed_opaque_existential_1(v75 + 7, v75[10]);
  if (qword_26AC678E8 != -1) {
    swift_once();
  }
  uint64_t v78 = (void *)qword_26AC678D8;
  uint64_t v79 = (void *)unk_26AC678E0;
  swift_bridgeObjectRetain();
  id v80 = sub_20A5A8FE8(v78, v79, v77);
  swift_bridgeObjectRelease();
  uint64_t v81 = (void *)sub_20A8CEC60();

  objc_msgSend(v81, sel_ascender);
  objc_msgSend(v81, sel_capHeight);

  sub_20A71F5B0((uint64_t)&v128);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v118);
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 16))(v123, a2, v120);
  (*(void (**)(char *, void, uint64_t))(v121 + 104))(v125, *MEMORY[0x263F7D9E0], v122);
  uint64_t v82 = (uint64_t)v124;
  uint64_t v83 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v114 - 8) + 16))(v124, v127);
  MEMORY[0x270FA5388](v83);
  sub_20A7796A4(v82, (void (*)(uint64_t, char *))sub_20A77A700, (uint64_t)v85);
  sub_20A77A718(v82, (uint64_t (*)(void))sub_20A77A6C4);
  type metadata accessor for ForYouFeedLayoutSectionDescriptor(0);
  type metadata accessor for ForYouFeedLayoutModel();
  sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
  sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
  sub_20A8C8600();
  return swift_release();
}

uint64_t sub_20A772848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v25 = a2;
  uint64_t v2 = sub_20A8CCD10();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8CCC40();
  uint64_t v4 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CCC60();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_20A8CCC80();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_20A8CCCB0();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_20A8CCCD0();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A77A7AC(0, &qword_26AC812F8, MEMORY[0x263F599C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = sub_20A8CCCE0();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v22 + 272))
  {
    sub_20A8CCCC0();
    uint64_t v19 = sub_20A8CCC90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v18, *MEMORY[0x263F599D0], v14);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x263F599D0], v14, v16);
    uint64_t v20 = sub_20A8CCC90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
    sub_20A8CCCC0();
  }
  sub_20A8CCC70();
  sub_20A8CCC70();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F599C0], v23);
  sub_20A8CCC50();
  sub_20A8CCD00();
  return sub_20A8CCCF0();
}

uint64_t sub_20A772CCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, CGFloat a8@<D1>, double a9@<D2>, CGFloat a10@<D3>, double a11@<D5>)
{
  uint64_t v400 = a5;
  v402 = a4;
  uint64_t v406 = a3;
  uint64_t v360 = a1;
  uint64_t v404 = a6;
  uint64_t v415 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v415);
  v412 = (char *)&v339 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CCE00();
  uint64_t v414 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v339 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A683664();
  double v411 = v21;
  uint64_t v413 = *(uint64_t *)(*(void *)&v21 - 8);
  MEMORY[0x270FA5388](*(void *)&v21);
  *(void *)&double v409 = (char *)&v339 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  *(void *)&double v408 = (char *)&v339 - v24;
  MEMORY[0x270FA5388](v25);
  *(void *)&double v410 = (char *)&v339 - v26;
  sub_20A4F4FFC(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v382 = (uint64_t)&v339 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v381 = (uint64_t)&v339 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter(0);
  MEMORY[0x270FA5388](v31 - 8);
  v371 = (char *)&v339 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77AAC8(0);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v389 = (uint64_t)&v339 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = type metadata accessor for StockTitleViewLayoutOptions();
  MEMORY[0x270FA5388](v363);
  v364 = (CGFloat *)((char *)&v339 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v348 = type metadata accessor for StockTitleViewLayoutAttributes();
  MEMORY[0x270FA5388](v348);
  v387 = (CGRect *)((char *)&v339 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = type metadata accessor for StockTitleViewModel();
  MEMORY[0x270FA5388](v37 - 8);
  v386 = (uint64_t *)((char *)&v339 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v380 = sub_20A8C9830();
  uint64_t v357 = *(void *)(v380 - 8);
  MEMORY[0x270FA5388](v380);
  v356 = (char *)&v339 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v361 = (uint64_t)&v339 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v392 = (uint64_t)&v339 - v43;
  uint64_t v385 = sub_20A8C3F00();
  uint64_t v384 = *(void *)(v385 - 8);
  MEMORY[0x270FA5388](v385);
  uint64_t v391 = (uint64_t)&v339 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v403 = sub_20A8CAE30();
  uint64_t v405 = *(void *)(v403 - 8);
  MEMORY[0x270FA5388](v403);
  v378 = (char *)&v339 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  v376 = (char *)&v339 - v47;
  MEMORY[0x270FA5388](v48);
  v379 = (char *)&v339 - v49;
  MEMORY[0x270FA5388](v50);
  v370 = (char *)&v339 - v51;
  MEMORY[0x270FA5388](v52);
  v393 = (char *)&v339 - v53;
  uint64_t v407 = type metadata accessor for ForYouFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v407);
  v375 = (char *)&v339 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v55);
  v374 = (char *)&v339 - v56;
  MEMORY[0x270FA5388](v57);
  uint64_t v377 = (uint64_t)&v339 - v58;
  MEMORY[0x270FA5388](v59);
  uint64_t v394 = (uint64_t)&v339 - v60;
  uint64_t v366 = sub_20A8CA9F0();
  uint64_t v365 = *(void *)(v366 - 8);
  MEMORY[0x270FA5388](v366);
  v367 = (char *)&v339 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F5030(0);
  MEMORY[0x270FA5388](v62 - 8);
  uint64_t v383 = (uint64_t)&v339 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v64);
  uint64_t v368 = (uint64_t)&v339 - v65;
  uint64_t v395 = sub_20A8CC470();
  uint64_t v397 = *(void *)(v395 - 8);
  MEMORY[0x270FA5388](v395);
  double v67 = (char *)&v339 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v68);
  v349 = (char *)&v339 - v69;
  MEMORY[0x270FA5388](v70);
  v350 = (char *)&v339 - v71;
  uint64_t v401 = sub_20A8CC650();
  uint64_t v399 = *(void *)(v401 - 8);
  MEMORY[0x270FA5388](v401);
  v354 = (char *)&v339 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v73);
  uint64_t v75 = (char *)&v339 - v74;
  MEMORY[0x270FA5388](v76);
  uint64_t v373 = (uint64_t)&v339 - v77;
  MEMORY[0x270FA5388](v78);
  v362 = (char *)&v339 - v79;
  uint64_t v352 = sub_20A8CADF0();
  uint64_t v351 = *(void *)(v352 - 8);
  MEMORY[0x270FA5388](v352);
  v341 = (char *)&v339 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v81);
  v344 = (char *)&v339 - v82;
  uint64_t v353 = type metadata accessor for ForYouTitleViewLayoutOptions();
  MEMORY[0x270FA5388](v353);
  v342 = (char *)&v339 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v84);
  v345 = (char *)&v339 - v85;
  uint64_t v347 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  MEMORY[0x270FA5388](v347);
  uint64_t v343 = (uint64_t)&v339 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v87);
  uint64_t v346 = (uint64_t)&v339 - v88;
  uint64_t v89 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v89 - 8);
  uint64_t v91 = (uint64_t *)((char *)&v339 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v390 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader(0);
  uint64_t v372 = *(void *)(v390 - 8);
  MEMORY[0x270FA5388](v390);
  uint64_t v358 = (uint64_t)&v339 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v93);
  uint64_t v340 = (uint64_t)&v339 - v94;
  MEMORY[0x270FA5388](v95);
  uint64_t v355 = (uint64_t)&v339 - v96;
  MEMORY[0x270FA5388](v97);
  uint64_t v388 = (uint64_t)&v339 - v98;
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v99 - 8);
  v369 = (char *)&v339 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v101);
  uint64_t v398 = (uint64_t)&v339 - v102;
  MEMORY[0x270FA5388](v103);
  uint64_t v359 = (uint64_t)&v339 - v104;
  MEMORY[0x270FA5388](v105);
  uint64_t v396 = (uint64_t)&v339 - v106;
  uint64_t v107 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v107);
  uint64_t v109 = (char *)&v339 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77A810(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v110 = a2;
  sub_20A8C8820();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v339 = a2;
      sub_20A61E760();
      uint64_t v180 = (uint64_t)&v109[*(int *)(v179 + 48)];
      uint64_t v181 = (uint64_t)&v109[*(int *)(v179 + 64)];
      (*(void (**)(uint64_t, char *, uint64_t))(v384 + 32))(v391, v109, v385);
      sub_20A77AC78(v180, v392, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A77AC78(v181, v398, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v182 = v357;
      uint64_t v183 = *(void (**)(char *, uint64_t, uint64_t))(v357 + 16);
      uint64_t v184 = v356;
      uint64_t v185 = v380;
      uint64_t v414 = v357 + 16;
      uint64_t v413 = (uint64_t)v183;
      v183(v356, v406, v380);
      if (v360)
      {
        (*(void (**)(char *, uint64_t))(v182 + 8))(v184, v185);
      }
      else
      {
        uint64_t v192 = (void *)sub_20A8C9750();
        id v193 = objc_msgSend(v192, sel_horizontalSizeClass);

        (*(void (**)(char *, uint64_t))(v182 + 8))(v184, v185);
        if (v193 == (id)1)
        {
          uint64_t v194 = v402;
          uint64_t v195 = v402[38];
          uint64_t v196 = v402[39];
          __swift_project_boxed_opaque_existential_1(v402 + 35, v195);
          AttributionProviderType.source.getter(v195, v196);
          uint64_t v197 = v194[40];
          sub_20A4342F4((uint64_t)(v194 + 41), (uint64_t)&v416);
          swift_unknownObjectRetain();
          sub_20A60A4FC(v91, v197, &v416, (uint64_t *)&v418);
          sub_20A4342F4((uint64_t)(v194 + 17), (uint64_t)&v416);
          __swift_project_boxed_opaque_existential_1(&v416, v417);
          sub_20A8C9820();
          v412 = v198;
          uint64_t v200 = v199;
          double v410 = a7;
          double v409 = a8;
          double v408 = a9;
          double v411 = a10;
          sub_20A8CE960();
          uint64_t v202 = v201;
          uint64_t v204 = v203;
          uint64_t v206 = v205;
          uint64_t v208 = v207;
          uint64_t v209 = v341;
          sub_20A8C96E0();
          sub_20A8C9700();
          uint64_t v211 = v210;
          uint64_t v212 = sub_20A8C9750();
          uint64_t v213 = sub_20A8C97B0();
          int v214 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v397 + 48))(v398, 1, v395);
          BOOL v215 = v214 == 1;
          if (v214 == 1) {
            double v216 = 14.0;
          }
          else {
            double v216 = 4.0;
          }
          uint64_t v217 = v342;
          *(void *)v342 = v412;
          *((void *)v217 + 1) = v200;
          *((void *)v217 + 2) = v202;
          *((void *)v217 + 3) = v204;
          *((void *)v217 + 4) = v206;
          *((void *)v217 + 5) = v208;
          uint64_t v218 = (int *)v353;
          (*(void (**)(char *, char *, uint64_t))(v351 + 32))(&v217[*(int *)(v353 + 24)], v209, v352);
          *(void *)&v217[v218[7]] = v211;
          *(void *)&v217[v218[8]] = v212;
          *(void *)&v217[v218[9]] = v213;
          v217[v218[10]] = 0;
          v217[v218[11]] = v215;
          *(void *)&v217[v218[12]] = 0x4000000000000000;
          *(double *)&v217[v218[13]] = v216;
          uint64_t v219 = v343;
          sub_20A744448(&v418, (uint64_t)v217, v343);
          sub_20A77A718((uint64_t)v217, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutOptions);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v416);
          sub_20A77ACE0(0, &qword_26AC71950, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
          uint64_t v221 = v340;
          uint64_t v222 = v340 + *(int *)(v220 + 48);
          sub_20A60A9EC((uint64_t)&v418, v340);
          sub_20A77AC10(v219, v222, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
          swift_storeEnumTagMultiPayload();
          unint64_t v223 = sub_20A46E52C(0, 1, 1, MEMORY[0x263F8EE78]);
          unint64_t v225 = *(void *)(v223 + 16);
          unint64_t v224 = *(void *)(v223 + 24);
          if (v225 >= v224 >> 1) {
            unint64_t v223 = sub_20A46E52C(v224 > 1, v225 + 1, 1, v223);
          }
          v412 = (char *)v223;
          *(void *)(v223 + 16) = v225 + 1;
          sub_20A77AC78(v221, v223+ ((*(unsigned __int8 *)(v372 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v372 + 80))+ *(void *)(v372 + 72) * v225, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
          sub_20A77A718(v219, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
          sub_20A473E10((uint64_t)&v418);
          a10 = v411;
          a8 = v409;
          a9 = v408;
          a7 = v410;
          goto LABEL_48;
        }
      }
      v412 = (char *)MEMORY[0x263F8EE78];
LABEL_48:
      uint64_t v226 = v406;
      uint64_t v227 = (void *)sub_20A8C9750();
      id v228 = objc_msgSend(v227, sel_horizontalSizeClass);

      if (v228 == (id)1) {
        double v229 = 0.0;
      }
      else {
        double v229 = a11;
      }
      uint64_t v230 = v392;
      uint64_t v231 = v361;
      sub_20A77AC10(v392, v361, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      uint64_t v232 = v402;
      __swift_project_boxed_opaque_existential_1(v402 + 41, v402[44]);
      char v233 = sub_20A8C3870();
      uint64_t v234 = v386;
      sub_20A4BE20C(v231, v233 & 1, v386);
      __swift_project_boxed_opaque_existential_1(v232 + 7, v232[10]);
      uint64_t v235 = v363;
      double v236 = v364;
      ((void (*)(char *, uint64_t, uint64_t))v413)((char *)v364 + *(int *)(v363 + 20), v226, v380);
      *double v236 = a7;
      v236[1] = a8;
      v236[2] = a9;
      v236[3] = a10;
      double v237 = (CGFloat *)((char *)v236 + *(int *)(v235 + 24));
      *double v237 = v229;
      *((unsigned char *)v237 + 8) = v228 == (id)1;
      *(CGFloat *)((char *)v236 + *(int *)(v235 + 28)) = 0.0;
      uint64_t v238 = v387;
      sub_20A721F00(v234, v236, (uint64_t)v387);
      sub_20A77A718((uint64_t)v236, (uint64_t (*)(void))type metadata accessor for StockTitleViewLayoutOptions);
      sub_20A4F5814();
      uint64_t v240 = v358;
      uint64_t v241 = v358 + *(int *)(v239 + 48);
      sub_20A77AC10(v230, v358, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A77AC10((uint64_t)v238, v241, (uint64_t (*)(void))type metadata accessor for StockTitleViewLayoutAttributes);
      swift_storeEnumTagMultiPayload();
      unint64_t v242 = (unint64_t)v412;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v242 = sub_20A46E52C(0, *(void *)(v242 + 16) + 1, 1, v242);
      }
      uint64_t v243 = v401;
      uint64_t v244 = (uint64_t)v369;
      unint64_t v246 = *(void *)(v242 + 16);
      unint64_t v245 = *(void *)(v242 + 24);
      uint64_t v247 = (uint64_t)v402;
      if (v246 >= v245 >> 1) {
        unint64_t v242 = sub_20A46E52C(v245 > 1, v246 + 1, 1, v242);
      }
      *(void *)(v242 + 16) = v246 + 1;
      sub_20A77AC78(v240, v242+ ((*(unsigned __int8 *)(v372 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v372 + 80))+ *(void *)(v372 + 72) * v246, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
      uint64_t MaxY = CGRectGetMaxY(*v238);
      sub_20A77AC10(v398, v244, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v249 = v397;
      uint64_t v250 = v395;
      int v251 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v397 + 48))(v244, 1, v395);
      uint64_t v252 = v400;
      if (v251 == 1)
      {
        sub_20A77A718(v244, (uint64_t (*)(void))sub_20A42C764);
        uint64_t v253 = 1;
        uint64_t v254 = (uint64_t)v371;
        uint64_t v255 = v389;
        uint64_t v256 = v339;
      }
      else
      {
        unint64_t v257 = v242;
        uint64_t v258 = (uint64_t)v349;
        (*(void (**)(char *, uint64_t, uint64_t))(v249 + 32))(v349, v244, v250);
        uint64_t v255 = v389;
        uint64_t v256 = v339;
        sub_20A7762F0(v258, v339, v252, 0, MaxY, 0, MaxY, v389, 0);
        uint64_t v259 = v258;
        unint64_t v242 = v257;
        (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v259, v250);
        uint64_t v253 = 0;
        uint64_t v254 = (uint64_t)v371;
      }
      uint64_t v260 = v399;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v399 + 56))(v255, v253, 1, v243);
      sub_20A777B40(v255, v391, v247, v406, v254);
      uint64_t v414 = sub_20A778618(v255, v252, v256);
      sub_20A778D24(v398, v255, v383);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v255, 1, v243) == 1)
      {
        CGFloat v261 = (unsigned int *)MEMORY[0x263F7DED8];
        uint64_t v262 = v394;
        id v263 = v370;
      }
      else
      {
        uint64_t v264 = *MEMORY[0x263F7DEB8];
        uint64_t v265 = sub_20A8CAE10();
        id v263 = v370;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v265 - 8) + 104))(v370, v264, v265);
        CGFloat v261 = (unsigned int *)MEMORY[0x263F7DEC0];
        uint64_t v262 = v394;
      }
      uint64_t v266 = v405;
      uint64_t v267 = v403;
      (*(void (**)(char *, void, uint64_t))(v405 + 104))(v263, *v261, v403);
      sub_20A4F56D4(0, &qword_26AC684A0, sub_20A4F50C8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
      uint64_t v269 = *(int *)(v268 + 48);
      uint64_t v270 = v262 + *(int *)(v268 + 64);
      uint64_t v271 = v383;
      sub_20A77AC10(v383, v262, (uint64_t (*)(void))sub_20A4F5030);
      *(void *)(v262 + v269) = v242;
      sub_20A77AC10(v254, v270, type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v393, v263, v267);
      sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
      sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      uint64_t v272 = v404;
      sub_20A8C9860();
      (*(void (**)(char *, uint64_t))(v266 + 8))(v263, v267);
      sub_20A77A718(v271, (uint64_t (*)(void))sub_20A4F5030);
      sub_20A77A718(v254, type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
      sub_20A77A718(v389, (uint64_t (*)(void))sub_20A77AAC8);
      sub_20A77A718((uint64_t)v387, (uint64_t (*)(void))type metadata accessor for StockTitleViewLayoutAttributes);
      sub_20A77A718((uint64_t)v386, (uint64_t (*)(void))type metadata accessor for StockTitleViewModel);
      sub_20A77A718(v392, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      (*(void (**)(uint64_t, uint64_t))(v384 + 8))(v391, v385);
      uint64_t v273 = v398;
      goto LABEL_76;
    case 2u:
      uint64_t v153 = v381;
      sub_20A77AC78((uint64_t)v109, v381, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v154 = v373;
      sub_20A7762F0(v153, a2, v400, 0, 0, 1, 0, v373, 1u);
      (*(void (**)(char *, uint64_t, uint64_t))(v397 + 16))(v67, v153, v395);
      uint64_t v155 = v401;
      (*(void (**)(char *, uint64_t, uint64_t))(v399 + 16))(v75, v154, v401);
      uint64_t v156 = v382;
      sub_20A77722C((uint64_t)v67, (uint64_t)v75, v382);
      sub_20A77AC10(v156, v377, (uint64_t (*)(void))sub_20A4F4FFC);
      swift_storeEnumTagMultiPayload();
      uint64_t v157 = *MEMORY[0x263F7DEB8];
      uint64_t v158 = sub_20A8CAE10();
      uint64_t v159 = v379;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v158 - 8) + 104))(v379, v157, v158);
      (*(void (**)(char *, void, uint64_t))(v405 + 104))(v159, *MEMORY[0x263F7DEC0], v403);
      *(double *)&uint64_t v160 = COERCE_DOUBLE(sub_20A8CC610());
      int64_t v161 = *(void *)(v160 + 16);
      if (v161)
      {
        *(void *)&long long v418 = MEMORY[0x263F8EE78];
        sub_20A68E25C(0, v161, 0);
        uint64_t v162 = *(void (**)(char *, unint64_t, uint64_t))(v414 + 16);
        unint64_t v163 = (*(unsigned __int8 *)(v414 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v414 + 80);
        double v408 = *(double *)&v160;
        unint64_t v164 = v160 + v163;
        double v409 = *(double *)(v414 + 72);
        v414 += 16;
        uint64_t v165 = (void (**)(char *, uint64_t))(v414 - 8);
        do
        {
          v162(v20, v164, v18);
          v162(v412, (unint64_t)v20, v18);
          swift_storeEnumTagMultiPayload();
          sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
          sub_20A8C9140();
          (*v165)(v20, v18);
          uint64_t v166 = v418;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68E25C(0, *(void *)(v166 + 16) + 1, 1);
            uint64_t v166 = v418;
          }
          unint64_t v168 = *(void *)(v166 + 16);
          unint64_t v167 = *(void *)(v166 + 24);
          if (v168 >= v167 >> 1)
          {
            sub_20A68E25C(v167 > 1, v168 + 1, 1);
            uint64_t v166 = v418;
          }
          *(void *)(v166 + 16) = v168 + 1;
          (*(void (**)(unint64_t, double, double))(v413 + 32))(v166+ ((*(unsigned __int8 *)(v413 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v413 + 80))+ *(void *)(v413 + 72) * v168, COERCE_DOUBLE(*(void *)&v410), COERCE_DOUBLE(*(void *)&v411));
          *(void *)&long long v418 = v166;
          v164 += *(void *)&v409;
          --v161;
        }
        while (v161);
        swift_bridgeObjectRelease();
        uint64_t v187 = v404;
        uint64_t v155 = v401;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v187 = v404;
      }
      sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
      sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      sub_20A8C9860();
      sub_20A77A718(v382, (uint64_t (*)(void))sub_20A4F4FFC);
      (*(void (**)(uint64_t, uint64_t))(v399 + 8))(v373, v155);
      sub_20A77A718(v381, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      goto LABEL_38;
    case 3u:
      double v408 = *(double *)&v109;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t))(v405 + 104))(v378, *MEMORY[0x263F7DED8], v403);
      sub_20A77AAFC();
      long long v418 = 0u;
      long long v419 = 0u;
      *(void *)&long long v420 = 0;
      uint64_t v169 = v354;
      sub_20A8CC690();
      sub_20A77A718((uint64_t)&v418, (uint64_t (*)(void))sub_20A42CCB0);
      uint64_t v170 = sub_20A8CC610();
      (*(void (**)(char *, uint64_t))(v399 + 8))(v169, v401);
      int64_t v171 = *(void *)(v170 + 16);
      if (v171)
      {
        *(void *)&long long v418 = MEMORY[0x263F8EE78];
        sub_20A68E25C(0, v171, 0);
        uint64_t v172 = *(void (**)(char *, unint64_t, uint64_t))(v414 + 16);
        unint64_t v173 = (*(unsigned __int8 *)(v414 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v414 + 80);
        uint64_t v406 = v170;
        unint64_t v174 = v170 + v173;
        double v410 = *(double *)(v414 + 72);
        v414 += 16;
        uint64_t v175 = (void (**)(char *, uint64_t))(v414 - 8);
        do
        {
          v172(v20, v174, v18);
          v172(v412, (unint64_t)v20, v18);
          swift_storeEnumTagMultiPayload();
          sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
          sub_20A8C9140();
          (*v175)(v20, v18);
          uint64_t v176 = v418;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68E25C(0, *(void *)(v176 + 16) + 1, 1);
            uint64_t v176 = v418;
          }
          unint64_t v178 = *(void *)(v176 + 16);
          unint64_t v177 = *(void *)(v176 + 24);
          if (v178 >= v177 >> 1)
          {
            sub_20A68E25C(v177 > 1, v178 + 1, 1);
            uint64_t v176 = v418;
          }
          *(void *)(v176 + 16) = v178 + 1;
          (*(void (**)(unint64_t, double, double))(v413 + 32))(v176+ ((*(unsigned __int8 *)(v413 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v413 + 80))+ *(void *)(v413 + 72) * v178, COERCE_DOUBLE(*(void *)&v409), COERCE_DOUBLE(*(void *)&v411));
          *(void *)&long long v418 = v176;
          v174 += *(void *)&v410;
          --v171;
        }
        while (v171);
      }
      swift_bridgeObjectRelease();
      sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
      sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      uint64_t v190 = v404;
      sub_20A8C9860();
      sub_20A46F504();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v190, 0, 1, v191);
      return sub_20A77A718(*(uint64_t *)&v408, (uint64_t (*)(void))type metadata accessor for ForYouFeedSectionDescriptor);
    case 4u:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t))(v405 + 104))(v376, *MEMORY[0x263F7DED8], v403);
      sub_20A77AAFC();
      *(double *)&uint64_t v144 = COERCE_DOUBLE(sub_20A8CC680());
      int64_t v145 = *(void *)(v144 + 16);
      if (v145)
      {
        *(void *)&long long v418 = MEMORY[0x263F8EE78];
        sub_20A68E25C(0, v145, 0);
        uint64_t v146 = *(void (**)(char *, unint64_t, uint64_t))(v414 + 16);
        unint64_t v147 = (*(unsigned __int8 *)(v414 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v414 + 80);
        double v409 = *(double *)&v144;
        unint64_t v148 = v144 + v147;
        double v410 = *(double *)(v414 + 72);
        v414 += 16;
        uint64_t v149 = (void (**)(char *, uint64_t))(v414 - 8);
        do
        {
          v146(v20, v148, v18);
          v146(v412, (unint64_t)v20, v18);
          swift_storeEnumTagMultiPayload();
          sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
          sub_20A8C9140();
          (*v149)(v20, v18);
          uint64_t v150 = v418;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_20A68E25C(0, *(void *)(v150 + 16) + 1, 1);
            uint64_t v150 = v418;
          }
          unint64_t v152 = *(void *)(v150 + 16);
          unint64_t v151 = *(void *)(v150 + 24);
          if (v152 >= v151 >> 1)
          {
            sub_20A68E25C(v151 > 1, v152 + 1, 1);
            uint64_t v150 = v418;
          }
          *(void *)(v150 + 16) = v152 + 1;
          (*(void (**)(unint64_t, double, double))(v413 + 32))(v150+ ((*(unsigned __int8 *)(v413 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v413 + 80))+ *(void *)(v413 + 72) * v152, COERCE_DOUBLE(*(void *)&v408), COERCE_DOUBLE(*(void *)&v411));
          *(void *)&long long v418 = v150;
          v148 += *(void *)&v410;
          --v145;
        }
        while (v145);
      }
      swift_bridgeObjectRelease();
      uint64_t v187 = v404;
      sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
      sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      goto LABEL_35;
    case 5u:
      swift_storeEnumTagMultiPayload();
      uint64_t v186 = (*(uint64_t (**)(char *, void, uint64_t))(v405 + 104))(v393, *MEMORY[0x263F7DED8], v403);
      MEMORY[0x270FA5388](v186);
      uint64_t v337 = (uint64_t)v402;
      uint64_t v338 = v406;
      sub_20A44B33C((void (*)(char *))sub_20A77ABF0, (uint64_t)(&v339 - 4));
      sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
      sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      uint64_t v187 = v404;
LABEL_35:
      sub_20A8C9860();
LABEL_38:
      sub_20A46F504();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v188 - 8) + 56))(v187, 0, 1, v188);
    default:
      sub_20A77AC78((uint64_t)v109, v396, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v111 = (void *)sub_20A8C9750();
      id v112 = objc_msgSend(v111, sel_horizontalSizeClass);

      uint64_t v339 = v110;
      if (v112 && v112 != (id)2)
      {
        uint64_t v142 = v405;
        if (v112 != (id)1)
        {
          LODWORD(v338) = 0;
          uint64_t v337 = 159;
          sub_20A8CF520();
          __break(1u);
          JUMPOUT(0x20A7762D8);
        }
        CGRect v274 = v402;
        uint64_t v275 = v402[38];
        uint64_t v276 = v402[39];
        __swift_project_boxed_opaque_existential_1(v402 + 35, v275);
        AttributionProviderType.source.getter(v275, v276);
        uint64_t v277 = v274[40];
        sub_20A4342F4((uint64_t)(v274 + 41), (uint64_t)&v416);
        swift_unknownObjectRetain();
        sub_20A60A4FC(v91, v277, &v416, (uint64_t *)&v418);
        sub_20A4342F4((uint64_t)(v274 + 17), (uint64_t)&v416);
        __swift_project_boxed_opaque_existential_1(&v416, v417);
        sub_20A8C9820();
        uint64_t v279 = v278;
        uint64_t v281 = v280;
        sub_20A8CE960();
        uint64_t v283 = v282;
        uint64_t v285 = v284;
        uint64_t v287 = v286;
        uint64_t v289 = v288;
        v290 = v344;
        sub_20A8C96E0();
        sub_20A8C9700();
        uint64_t v292 = v291;
        uint64_t v293 = sub_20A8C9750();
        uint64_t v294 = sub_20A8C97B0();
        uint64_t v143 = v395;
        int v295 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v397 + 48))(v396, 1, v395);
        BOOL v296 = v295 == 1;
        if (v295 == 1) {
          double v297 = 14.0;
        }
        else {
          double v297 = 4.0;
        }
        v298 = v345;
        *(void *)v345 = v279;
        *((void *)v298 + 1) = v281;
        *((void *)v298 + 2) = v283;
        *((void *)v298 + 3) = v285;
        *((void *)v298 + 4) = v287;
        *((void *)v298 + 5) = v289;
        v299 = (int *)v353;
        (*(void (**)(char *, char *, uint64_t))(v351 + 32))(&v298[*(int *)(v353 + 24)], v290, v352);
        *(void *)&v298[v299[7]] = v292;
        *(void *)&v298[v299[8]] = v293;
        *(void *)&v298[v299[9]] = v294;
        v298[v299[10]] = 1;
        v298[v299[11]] = v296;
        *(void *)&v298[v299[12]] = 0x4000000000000000;
        *(double *)&v298[v299[13]] = v297;
        uint64_t v300 = v346;
        sub_20A744448(&v418, (uint64_t)v298, v346);
        sub_20A77A718((uint64_t)v298, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutOptions);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v416);
        sub_20A77ACE0(0, &qword_26AC71950, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
        uint64_t v120 = v388;
        uint64_t v302 = v388 + *(int *)(v301 + 48);
        long long v303 = v422;
        *(void *)(v388 + 80) = v423;
        long long v304 = v420;
        *(_OWORD *)(v120 + 48) = v421;
        *(_OWORD *)(v120 + 64) = v303;
        long long v305 = v419;
        *(_OWORD *)uint64_t v120 = v418;
        *(_OWORD *)(v120 + 16) = v305;
        *(_OWORD *)(v120 + 32) = v304;
        sub_20A77AC78(v300, v302, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        double v410 = a7;
        uint64_t v113 = __swift_project_boxed_opaque_existential_1(v402 + 2, v402[5]);
        if (qword_26AC80C70 != -1) {
          swift_once();
        }
        uint64_t v114 = qword_26AC9EBE0;
        uint64_t v115 = *(void *)algn_26AC9EBE8;
        sub_20A8C9820();
        double v117 = v116;
        uint64_t v414 = *(void *)&v116;
        v412 = v118;
        uint64_t v119 = (void *)sub_20A8C9750();
        sub_20A77ACE0(0, &qword_26AC80C78, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes);
        uint64_t v120 = v388;
        __swift_project_boxed_opaque_existential_1((void *)(*v113 + 16), *(void *)(*v113 + 40));
        uint64_t v121 = (void *)sub_20A58E900(v114, v115, v119);
        uint64_t v122 = (void *)sub_20A8CEC60();
        objc_msgSend(v122, sel_ascender);
        double v124 = v123;

        uint64_t v125 = (void *)sub_20A8CEC60();
        objc_msgSend(v125, sel_capHeight);
        double v127 = v126;

        double v128 = a11 - (v124 - v127);
        double v409 = v128;
        *(double *)&uint64_t v413 = v117 - a8 - a10;
        objc_msgSend(v121, sel_boundingRectWithSize_options_context_, 33, 0);
        CGFloat x = v424.origin.x;
        CGFloat y = v424.origin.y;
        double v411 = a10;
        CGFloat width = v424.size.width;
        uint64_t v132 = *(void *)&a8;
        CGFloat height = v424.size.height;
        double v134 = v128 + CGRectGetHeight(v424) + a9;
        v425.origin.CGFloat x = x;
        v425.origin.CGFloat y = y;
        v425.size.CGFloat width = width;
        v425.size.CGFloat height = height;
        CGFloat v135 = CGRectGetWidth(v425);
        v426.origin.CGFloat x = x;
        v426.origin.CGFloat y = y;
        v426.size.CGFloat width = width;
        v426.size.CGFloat height = height;
        CGRectGetHeight(v426);
        *(double *)&uint64_t v137 = MEMORY[0x270FA5388](v136);
        uint64_t v138 = (uint64_t)v412;
        *(&v339 - 14) = v414;
        *(&v339 - 13) = v138;
        uint64_t v139 = *(void *)&v410;
        *((double *)&v339 - 12) = v134;
        *(&v339 - 11) = v139;
        *(&v339 - 10) = v132;
        *((double *)&v339 - 9) = a9;
        uint64_t v140 = v413;
        *((double *)&v339 - 8) = v411;
        *(&v339 - 7) = v140;
        *(&v339 - 6) = v138;
        *(&v339 - 5) = v132;
        *((double *)&v339 - 4) = v409;
        *((CGFloat *)&v339 - 3) = v135;
        uint64_t v337 = v137;
        type metadata accessor for SectionHeaderViewLayoutAttributes();
        sub_20A8C9690();

        uint64_t v141 = *(void *)algn_26AC9EBE8;
        *(void *)uint64_t v120 = qword_26AC9EBE0;
        *(void *)(v120 + 8) = v141;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        uint64_t v142 = v405;
        uint64_t v143 = v395;
      }
      uint64_t v306 = v355;
      sub_20A77AC10(v120, v355, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v308 = v339;
      uint64_t v309 = (uint64_t)v362;
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          sub_20A77ACE0(0, &qword_26AC80C78, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes);
          uint64_t v311 = v306 + *(int *)(v310 + 48);
          *((void *)&v419 + 1) = type metadata accessor for SectionHeaderViewLayoutAttributes();
          *(void *)&long long v420 = sub_20A77AD98(&qword_26AC80F50, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes);
          boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v418);
          sub_20A77AC78(v311, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for SectionHeaderViewLayoutAttributes);
        }
        else
        {
          sub_20A4F5814();
          uint64_t v317 = v306 + *(int *)(v316 + 48);
          *((void *)&v419 + 1) = v348;
          *(void *)&long long v420 = sub_20A77AD98(&qword_26AC7A160, (void (*)(uint64_t))type metadata accessor for StockTitleViewLayoutAttributes);
          v318 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v418);
          sub_20A77AC78(v317, (uint64_t)v318, (uint64_t (*)(void))type metadata accessor for StockTitleViewLayoutAttributes);
          sub_20A77A718(v306, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        }
      }
      else
      {
        sub_20A77ACE0(0, &qword_26AC71950, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
        uint64_t v314 = v306 + *(int *)(v313 + 48);
        *((void *)&v419 + 1) = v347;
        *(void *)&long long v420 = sub_20A77AD98(&qword_26AC7A5C8, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
        v315 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v418);
        sub_20A77AC78(v314, (uint64_t)v315, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
        sub_20A473E10(v306);
      }
      __swift_project_boxed_opaque_existential_1(&v418, *((uint64_t *)&v419 + 1));
      sub_20A8CACA0();
      uint64_t v319 = CGRectGetMaxY(v427);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v418);
      uint64_t v320 = v359;
      sub_20A77AC10(v396, v359, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v321 = v397;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v397 + 48))(v320, 1, v143) == 1)
      {
        uint64_t v322 = sub_20A77A718(v320, (uint64_t (*)(void))sub_20A42C764);
        MEMORY[0x270FA5388](v322);
        uint64_t v337 = v308;
        sub_20A8CC660();
      }
      else
      {
        uint64_t v323 = (uint64_t)v350;
        (*(void (**)(char *, uint64_t, uint64_t))(v321 + 32))(v350, v320, v143);
        sub_20A7762F0(v323, v308, v400, 0, v319, 0, v319, v309, 0);
        (*(void (**)(uint64_t, uint64_t))(v321 + 8))(v323, v143);
      }
      uint64_t v414 = sub_20A776BC0();
      uint64_t v324 = v368;
      uint64_t v325 = v396;
      sub_20A776F2C(v396, v309, v368);
      (*(void (**)(char *, void, uint64_t))(v365 + 104))(v367, *MEMORY[0x263F7DD70], v366);
      sub_20A8CC640();
      CGRectGetMaxY(v428);
      sub_20A8CDAD0();
      swift_allocObject();
      uint64_t v326 = sub_20A8CDAC0();
      sub_20A4F56D4(0, &qword_26AC7BAA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader, MEMORY[0x263F59E28]);
      uint64_t v328 = v394;
      uint64_t v329 = v394 + *(int *)(v327 + 48);
      uint64_t v330 = v309;
      uint64_t v331 = *(int *)(v327 + 64);
      sub_20A77AC10(v324, v394, (uint64_t (*)(void))sub_20A4F5030);
      uint64_t v332 = v388;
      sub_20A77AC10(v388, v329, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
      *(void *)(v328 + v331) = v326;
      swift_storeEnumTagMultiPayload();
      uint64_t v333 = *MEMORY[0x263F7DEB8];
      uint64_t v334 = sub_20A8CAE10();
      v335 = v393;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v334 - 8) + 104))(v393, v333, v334);
      (*(void (**)(char *, void, uint64_t))(v142 + 104))(v335, *MEMORY[0x263F7DEC0], v403);
      sub_20A77AD98(&qword_26AC7BBA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
      sub_20A77AD98((unint64_t *)&unk_26AC72B50, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      uint64_t v272 = v404;
      sub_20A8C9860();
      sub_20A77A718(v324, (uint64_t (*)(void))sub_20A4F5030);
      (*(void (**)(uint64_t, uint64_t))(v399 + 8))(v330, v401);
      sub_20A77A718(v332, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
      uint64_t v273 = v325;
LABEL_76:
      sub_20A77A718(v273, (uint64_t (*)(void))sub_20A42C764);
      sub_20A46F504();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v336 - 8) + 56))(v272, 0, 1, v336);
  }
}

uint64_t sub_20A7762F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X7>, uint64_t a8@<X8>, unsigned __int8 a9)
{
  v48[1] = a7;
  uint64_t v56 = a4;
  uint64_t v57 = a5;
  uint64_t v58 = a3;
  v48[3] = a2;
  uint64_t v55 = a8;
  int v49 = a9;
  int v50 = a6;
  sub_20A77A7AC(0, &qword_26AC69310, MEMORY[0x263F7D1B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v54 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)v48 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v52 = (char *)v48 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v51 = (char *)v48 - v17;
  uint64_t v18 = sub_20A8CD480();
  MEMORY[0x270FA5388](v18 - 8);
  v48[0] = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CBB8(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8CC470();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CBEC(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CC20(0);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_20A8CD300();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)v48 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CC450();
  uint64_t v37 = sub_20A8CC500();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v32, 1, 1, v37);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v48[2] = a1;
  v38(v26, a1, v23);
  sub_20A8CCBC0();
  uint64_t v39 = sub_20A8CCBD0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v29, 0, 1, v39);
  uint64_t v40 = sub_20A8CC910();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v22, 1, 1, v40);
  sub_20A77A810(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  sub_20A77AD98((unint64_t *)&unk_26AC776E0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A77AD98(&qword_26AC6E170, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
  sub_20A8C88E0();
  sub_20A77A718((uint64_t)v22, (uint64_t (*)(void))sub_20A42CBB8);
  sub_20A77A718((uint64_t)v29, (uint64_t (*)(void))sub_20A42CBEC);
  uint64_t v41 = (uint64_t)v32;
  uint64_t v42 = v33;
  sub_20A77A718(v41, (uint64_t (*)(void))sub_20A42CC20);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
  v43(v36, v33);
  if ((v49 & 1) == 0)
  {
    sub_20A77A7AC(0, &qword_26AC80020, MEMORY[0x263F59BA0], MEMORY[0x263F8E0F8]);
    sub_20A8CD220();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20A8D3DC0;
    sub_20A8CD460();
    sub_20A8CD210();
  }
  sub_20A8CC450();
  uint64_t v44 = sub_20A8CDA20();
  swift_bridgeObjectRelease();
  v43(v36, v42);
  void v59[3] = sub_20A8CD8A0();
  v59[4] = MEMORY[0x263F59D30];
  v59[0] = v44;
  uint64_t v45 = sub_20A8C4410();
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
  v46(v51, 1, 1, v45);
  v46(v52, 1, 1, v45);
  v46(v53, 1, 1, v45);
  v46(v54, 1, 1, v45);
  sub_20A8C4400();
  swift_allocObject();
  swift_retain();
  sub_20A8C43F0();
  sub_20A8CC6A0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_20A77A718((uint64_t)v59, (uint64_t (*)(void))sub_20A42CCB0);
}

uint64_t sub_20A776B1C()
{
  sub_20A77A810(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  sub_20A77AAFC();
  memset(v1, 0, sizeof(v1));
  uint64_t v2 = 0;
  sub_20A8CC690();
  return sub_20A77A718((uint64_t)v1, (uint64_t (*)(void))sub_20A42CCB0);
}

uint64_t sub_20A776BC0()
{
  uint64_t v27 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v27);
  uint64_t v26 = (char *)v20 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_20A8CCE00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A683664();
  uint64_t v25 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CC610();
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_20A68E25C(0, v10, 0);
    uint64_t v12 = *(void (**)(void, void, void))(v2 + 16);
    uint64_t v11 = v2 + 16;
    unint64_t v13 = v9 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v22 = *(void *)(v11 + 56);
    uint64_t v23 = v12;
    uint64_t v21 = (void (**)(char *, uint64_t))(v11 - 8);
    v20[0] = v9;
    v20[1] = v6 + 32;
    uint64_t v24 = v8;
    uint64_t v14 = (void (*)(char *, unint64_t, uint64_t))v12;
    do
    {
      v14(v4, v13, v1);
      uint64_t v15 = v11;
      v14(v26, (unint64_t)v4, v1);
      swift_storeEnumTagMultiPayload();
      sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
      sub_20A8C9140();
      (*v21)(v4, v1);
      uint64_t v16 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E25C(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v28;
      }
      unint64_t v18 = *(void *)(v16 + 16);
      unint64_t v17 = *(void *)(v16 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_20A68E25C(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v28;
      }
      *(void *)(v16 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v18, v24, v25);
      uint64_t v28 = v16;
      v13 += v22;
      --v10;
      uint64_t v11 = v15;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v16;
}

uint64_t sub_20A776F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v5 = sub_20A8CC650();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CC470();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)&v22 - v17;
  sub_20A77AC10(a1, (uint64_t)v11, (uint64_t (*)(void))sub_20A42C764);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_20A77A718((uint64_t)v11, (uint64_t (*)(void))sub_20A42C764);
    sub_20A4F4FFC(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v23, v5);
    sub_20A77722C((uint64_t)v15, (uint64_t)v8, a3);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    sub_20A4F4FFC(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a3, 0, 1, v21);
  }
}

uint64_t sub_20A77722C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header(0);
  uint64_t v81 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_20A8CCE80();
  uint64_t v9 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v11 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v82 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v78 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_20A8CC850();
  uint64_t v68 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v84 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration(0);
  uint64_t v83 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v86 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8CA9F0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8CC470();
  uint64_t v73 = *(void *)(v21 - 8);
  uint64_t v74 = v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v73 + 16);
  uint64_t v75 = a1;
  v22(a3, a1);
  uint64_t v23 = *MEMORY[0x263F7DD78];
  uint64_t v70 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
  uint64_t v71 = v18 + 104;
  v70(v20, v23, v17);
  uint64_t v24 = sub_20A8CC630();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v25 = v18 + 8;
  uint64_t v72 = v20;
  uint64_t v69 = v26;
  v26(v20, v17);
  int64_t v27 = *(void *)(v24 + 16);
  uint64_t v76 = a2;
  uint64_t v77 = a3;
  uint64_t v67 = v9;
  if (v27)
  {
    v65[1] = v25;
    uint64_t v66 = v17;
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_20A68E34C(0, v27, 0);
    uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v28 = v9 + 16;
    uint64_t v29 = v30;
    unint64_t v31 = (*(unsigned __int8 *)(v28 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 64);
    v65[0] = v24;
    unint64_t v32 = v24 + v31;
    uint64_t v79 = *(void *)(v28 + 56);
    uint64_t v80 = v8;
    do
    {
      uint64_t v33 = v87;
      v29(v11, v32, v87);
      v29(v8, (unint64_t)v11, v33);
      (*(void (**)(char *, uint64_t))(v28 - 8))(v11, v33);
      uint64_t v34 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E34C(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v88;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_20A68E34C(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v88;
      }
      *(void *)(v34 + 16) = v36 + 1;
      uint64_t v8 = v80;
      sub_20A77AC78((uint64_t)v80, v34+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ *(void *)(v81 + 72) * v36, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
      v32 += v79;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v17 = v66;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE78];
  }
  sub_20A4F4FFC(0);
  uint64_t v38 = v37;
  *(void *)(a3 + *(int *)(v37 + 28)) = v34;
  uint64_t v39 = v72;
  v70(v72, *MEMORY[0x263F7DD70], v17);
  uint64_t v40 = sub_20A8CC630();
  v69(v39, v17);
  int64_t v41 = *(void *)(v40 + 16);
  uint64_t v80 = (char *)v38;
  if (v41)
  {
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_20A68E2FC(0, v41, 0);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    uint64_t v43 = *(unsigned __int8 *)(v67 + 80);
    uint64_t v79 = v40;
    uint64_t v44 = v40 + ((v43 + 32) & ~v43);
    uint64_t v81 = *(void *)(v67 + 72);
    uint64_t v45 = (void (**)(char *, uint64_t))(v67 + 8);
    uint64_t v46 = (uint64_t)v78;
    do
    {
      uint64_t v47 = v87;
      v42(v11, v44, v87);
      v42((char *)v46, (uint64_t)v11, v47);
      (*v45)(v11, v47);
      uint64_t v48 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E2FC(0, *(void *)(v48 + 16) + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      unint64_t v50 = *(void *)(v48 + 16);
      unint64_t v49 = *(void *)(v48 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_20A68E2FC(v49 > 1, v50 + 1, 1);
        uint64_t v46 = (uint64_t)v78;
        uint64_t v48 = v88;
      }
      *(void *)(v48 + 16) = v50 + 1;
      sub_20A77AC78(v46, v48+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v50, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
      v44 += v81;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v48 = MEMORY[0x263F8EE78];
  }
  *(void *)(a3 + *(int *)(v38 + 32)) = v48;
  uint64_t v51 = sub_20A8CC620();
  int64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = MEMORY[0x263F8EE78];
  if (v52)
  {
    uint64_t v88 = MEMORY[0x263F8EE78];
    sub_20A68E2AC(0, v52, 0);
    uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    uint64_t v55 = *(unsigned __int8 *)(v68 + 80);
    uint64_t v82 = v51;
    uint64_t v56 = v51 + ((v55 + 32) & ~v55);
    uint64_t v87 = *(void *)(v68 + 72);
    uint64_t v57 = (void (**)(char *, uint64_t))(v68 + 8);
    uint64_t v58 = (uint64_t)v86;
    do
    {
      uint64_t v60 = v84;
      uint64_t v59 = v85;
      v54(v84, v56, v85);
      v54((char *)v58, (uint64_t)v60, v59);
      (*v57)(v60, v59);
      uint64_t v53 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68E2AC(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v88;
      }
      unint64_t v62 = *(void *)(v53 + 16);
      unint64_t v61 = *(void *)(v53 + 24);
      uint64_t v58 = (uint64_t)v86;
      if (v62 >= v61 >> 1)
      {
        sub_20A68E2AC(v61 > 1, v62 + 1, 1);
        uint64_t v58 = (uint64_t)v86;
        uint64_t v53 = v88;
      }
      *(void *)(v53 + 16) = v62 + 1;
      sub_20A77AC78(v58, v53+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v62, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Decoration);
      v56 += v87;
      --v52;
    }
    while (v52);
    a2 = v76;
    a3 = v77;
    uint64_t v38 = (uint64_t)v80;
  }
  uint64_t v63 = sub_20A8CC650();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(a2, v63);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v74);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a3 + *(int *)(v38 + 36)) = v53;
  return result;
}

uint64_t sub_20A777B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v95 = a4;
  uint64_t v93 = a3;
  uint64_t v83 = a2;
  uint64_t v94 = sub_20A8C9830();
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v91 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C4030();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v89 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v90 = (uint64_t)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C3410();
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v88 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v101 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v100 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v103 = (uint64_t)&v79 - v19;
  uint64_t v84 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v84);
  uint64_t v85 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C3F00();
  uint64_t v98 = *(void *)(v21 - 8);
  uint64_t v99 = v21;
  MEMORY[0x270FA5388](v21);
  uint64_t v102 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v97 = (char *)&v79 - v24;
  uint64_t v25 = type metadata accessor for StockSectionFooterViewModel();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v86 = (uint64_t)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77ADE0(0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_20A8CCE80();
  uint64_t v81 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v80 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_20A8CA9F0();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  unint64_t v35 = (char *)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77AAC8(0);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v79 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77AC10(a1, (uint64_t)v38, (uint64_t (*)(void))sub_20A77AAC8);
  uint64_t v39 = sub_20A8CC650();
  uint64_t v40 = *(void *)(v39 - 8);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39);
  uint64_t v96 = (char *)a5;
  if (v41 == 1)
  {
    uint64_t v42 = sub_20A77AAC8;
    uint64_t v43 = (uint64_t)v38;
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v33 + 104))(v35, *MEMORY[0x263F7DD70], v32);
    uint64_t v44 = sub_20A8CC630();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
    if (*(void *)(v44 + 16))
    {
      uint64_t v45 = v81;
      (*(void (**)(char *, unint64_t, uint64_t))(v81 + 16))(v29, v44 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80)), v30);
      uint64_t v46 = 0;
    }
    else
    {
      uint64_t v46 = 1;
      uint64_t v45 = v81;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v29, v46, 1, v30);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v29, 1, v30) != 1)
    {
      uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v77 = v80;
      v76(v80, v29, v30);
      v76(v96, v77, v30);
      goto LABEL_10;
    }
    uint64_t v42 = sub_20A77ADE0;
    uint64_t v43 = (uint64_t)v29;
  }
  sub_20A77A718(v43, (uint64_t (*)(void))v42);
  uint64_t v47 = v97;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
  uint64_t v49 = v99;
  v48(v97, v83, v99);
  v48(v102, (uint64_t)v47, v49);
  uint64_t v50 = sub_20A8C3E10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v103, 1, 1, v50);
  uint64_t v51 = type metadata accessor for StockSparklineViewModel(0);
  uint64_t v52 = v100;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v100, 1, 1, v51);
  uint64_t v54 = v87;
  uint64_t v53 = v88;
  uint64_t v55 = v101;
  (*(void (**)(char *, void, uint64_t))(v87 + 104))(v101, *MEMORY[0x263F7AB78], v88);
  uint64_t v56 = (uint64_t)v85;
  v48(v85, (uint64_t)v102, v49);
  uint64_t v57 = (int *)v84;
  uint64_t v58 = v103;
  sub_20A77AC10(v103, v56 + *(int *)(v84 + 20), (uint64_t (*)(void))sub_20A42C470);
  sub_20A77AC10(v52, v56 + v57[6], (uint64_t (*)(void))sub_20A609C6C);
  (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v56 + v57[8], v55, v53);
  *(unsigned char *)(v56 + v57[9]) = 0;
  uint64_t v59 = v82;
  sub_20A77AC10(v58, v82, (uint64_t (*)(void))sub_20A42C470);
  uint64_t v60 = v89;
  unint64_t v61 = v102;
  sub_20A8C3E70();
  uint64_t v62 = v90;
  sub_20A5EC850(v59, v60, 9666786, 0xA300000000000000, v90);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v101, v53);
  sub_20A77A718(v100, (uint64_t (*)(void))sub_20A609C6C);
  sub_20A77A718(v103, (uint64_t (*)(void))sub_20A42C470);
  uint64_t v63 = v99;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v98 + 8);
  v64(v61, v99);
  sub_20A77AC78(v62, v56 + v57[7], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  v64(v97, v63);
  uint64_t v65 = v86;
  sub_20A77AC78(v56, v86, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A4F522C();
  uint64_t v67 = &v96[*(int *)(v66 + 48)];
  sub_20A77AC10(v65, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for StockSectionFooterViewModel);
  __swift_project_boxed_opaque_existential_1((void *)(v93 + 96), *(void *)(v93 + 120));
  uint64_t v68 = (uint64_t)v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v95, v94);
  sub_20A7B1CA0(v68, (uint64_t)v104);
  sub_20A554060(*(double *)&v65, v104, (uint64_t)v105);
  sub_20A77AE14((uint64_t)v104);
  sub_20A77A718(v65, (uint64_t (*)(void))type metadata accessor for StockSectionFooterViewModel);
  long long v69 = v105[7];
  long long v70 = v105[9];
  *((_OWORD *)v67 + 8) = v105[8];
  *((_OWORD *)v67 + 9) = v70;
  long long v71 = v105[3];
  long long v72 = v105[5];
  long long v73 = v105[6];
  *((_OWORD *)v67 + 4) = v105[4];
  *((_OWORD *)v67 + 5) = v72;
  *((_OWORD *)v67 + 6) = v73;
  *((_OWORD *)v67 + 7) = v69;
  long long v74 = v105[1];
  long long v75 = v105[2];
  *(_OWORD *)uint64_t v67 = v105[0];
  *((_OWORD *)v67 + 1) = v74;
  *((void *)v67 + 20) = v106;
  *((_OWORD *)v67 + 2) = v75;
  *((_OWORD *)v67 + 3) = v71;
LABEL_10:
  type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A778618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a3;
  uint64_t v51 = a2;
  uint64_t v54 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CCE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A683664();
  uint64_t v52 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v50 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v44 - v13;
  sub_20A77AAC8(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8CC650();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77AC10(a1, (uint64_t)v17, (uint64_t (*)(void))sub_20A77AAC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_20A77A718((uint64_t)v17, (uint64_t (*)(void))sub_20A77AAC8);
    sub_20A77A810(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    sub_20A77AAFC();
    uint64_t v22 = sub_20A8CC680();
    int64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v55 = MEMORY[0x263F8EE78];
      sub_20A68E25C(0, v23, 0);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v24 = v6 + 16;
      uint64_t v25 = v26;
      unint64_t v27 = v22 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
      uint64_t v49 = *(void *)(v24 + 56);
      uint64_t v50 = v14;
      uint64_t v51 = v24;
      uint64_t v28 = (void (**)(char *, uint64_t))(v24 - 8);
      uint64_t v47 = (char *)v22;
      uint64_t v48 = v10 + 32;
      do
      {
        v25(v8, v27, v5);
        v25(v53, (unint64_t)v8, v5);
        swift_storeEnumTagMultiPayload();
        sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
        sub_20A8C9140();
        (*v28)(v8, v5);
        uint64_t v29 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68E25C(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v55;
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        if (v31 >= v30 >> 1)
        {
          sub_20A68E25C(v30 > 1, v31 + 1, 1);
          uint64_t v29 = v55;
        }
        *(void *)(v29 + 16) = v31 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v29+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v31, v50, v52);
        uint64_t v55 = v29;
        v27 += v49;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    uint64_t v47 = v21;
    uint64_t v32 = sub_20A8CC610();
    int64_t v33 = *(void *)(v32 + 16);
    if (v33)
    {
      uint64_t v45 = v19;
      uint64_t v46 = v18;
      uint64_t v55 = MEMORY[0x263F8EE78];
      sub_20A68E25C(0, v33, 0);
      uint64_t v36 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v34 = v6 + 16;
      unint64_t v35 = v36;
      unint64_t v37 = (*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64);
      uint64_t v44 = v32;
      unint64_t v38 = v32 + v37;
      uint64_t v39 = *(void *)(v34 + 56);
      uint64_t v51 = v34;
      uint64_t v40 = (void (**)(char *, uint64_t))(v34 - 8);
      uint64_t v48 = v10 + 32;
      uint64_t v49 = v39;
      do
      {
        v35(v8, v38, v5);
        v35(v53, (unint64_t)v8, v5);
        swift_storeEnumTagMultiPayload();
        sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
        sub_20A8C9140();
        (*v40)(v8, v5);
        uint64_t v29 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_20A68E25C(0, *(void *)(v29 + 16) + 1, 1);
          uint64_t v29 = v55;
        }
        unint64_t v42 = *(void *)(v29 + 16);
        unint64_t v41 = *(void *)(v29 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_20A68E25C(v41 > 1, v42 + 1, 1);
          uint64_t v29 = v55;
        }
        *(void *)(v29 + 16) = v42 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v29+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v42, v50, v52);
        uint64_t v55 = v29;
        v38 += v49;
        --v33;
      }
      while (v33);
      swift_bridgeObjectRelease();
      uint64_t v19 = v45;
      uint64_t v18 = v46;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = MEMORY[0x263F8EE78];
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v47, v18);
  }
  return v29;
}

uint64_t sub_20A778D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v33 = a3;
  sub_20A77AAC8(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CC650();
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v30 - v11;
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8CC470();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v30 - v21;
  sub_20A77AC10(a1, (uint64_t)v15, (uint64_t (*)(void))sub_20A42C764);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    int64_t v23 = sub_20A42C764;
    uint64_t v24 = (uint64_t)v15;
LABEL_5:
    sub_20A77A718(v24, (uint64_t (*)(void))v23);
    sub_20A4F4FFC(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v33, 1, 1, v26);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
  sub_20A77AC10(v31, (uint64_t)v6, (uint64_t (*)(void))sub_20A77AAC8);
  uint64_t v25 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    int64_t v23 = sub_20A77AAC8;
    uint64_t v24 = (uint64_t)v6;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v12, v6, v7);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v16);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v9, v12, v7);
  uint64_t v28 = v33;
  sub_20A77722C((uint64_t)v19, (uint64_t)v9, v33);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v7);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  sub_20A4F4FFC(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
}

uint64_t sub_20A779148@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  v33[1] = a2;
  uint64_t v3 = type metadata accessor for ForYouFeedLayoutModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C9830();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void *)((char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A44D7C8(0);
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    sub_20A8C9820();
    double v16 = v15;
    sub_20A8C9820();
    sub_20A8C9710();
    double v18 = v17;
    double v20 = v19;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_20A431DD0();
    uint64_t v21 = (void *)sub_20A8CEE20();
    id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81658]), sel_init);
    sub_20A8CE380();
    double v24 = v23;
    CGFloat v26 = v25;

    CGFloat v27 = v18 + (v16 - v18 - v20) * 0.5 - v24 * 0.5;
    v34.origin.CGFloat x = v27;
    v34.origin.CGFloat y = 100.0;
    v34.size.CGFloat width = v24;
    v34.size.CGFloat height = v26;
    v35.size.CGFloat height = CGRectGetMaxY(v34);
    v35.origin.CGFloat x = 0.0;
    v35.origin.CGFloat y = 0.0;
    v35.size.CGFloat width = v16;
    CGRect v36 = CGRectIntegral(v35);
    CGFloat x = v36.origin.x;
    CGFloat y = v36.origin.y;
    CGFloat width = v36.size.width;
    CGFloat height = v36.size.height;
    v36.origin.CGFloat x = v27;
    v36.origin.CGFloat y = 100.0;
    v36.size.CGFloat width = v24;
    v36.size.CGFloat height = v26;
    CGRect v37 = CGRectIntegral(v36);
    *(void *)uint64_t v5 = v13;
    *((void *)v5 + 1) = v14;
    *((CGFloat *)v5 + 2) = x;
    *((CGFloat *)v5 + 3) = y;
    *((CGFloat *)v5 + 4) = width;
    *((CGFloat *)v5 + 5) = height;
    *(CGRect *)(v5 + 48) = v37;
    swift_storeEnumTagMultiPayload();
    sub_20A77AD98((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
    return sub_20A8C9140();
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77950C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_20A771B4C(a1, a2, a3);
}

uint64_t sub_20A779530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, long long *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(a13 + 352) = a14;
  *(void *)(a13 + 360) = a15;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a13 + 328));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(boxed_opaque_existential_1, a12, a14);
  *(void *)(a13 + 40) = type metadata accessor for SectionHeaderViewLayoutAttributesFactory();
  *(void *)(a13 + 48) = &off_26BE71870;
  *(void *)(a13 + 16) = a1;
  *(void *)(a13 + 80) = type metadata accessor for StockTitleViewLayoutAttributesFactory();
  *(void *)(a13 + 88) = &off_26BE6C868;
  *(void *)(a13 + 56) = a2;
  *(void *)(a13 + 120) = type metadata accessor for StockSectionFooterViewLayoutAttributesFactory();
  *(void *)(a13 + 128) = &off_26BE645E8;
  *(void *)(a13 + 96) = a3;
  *(void *)(a13 + 160) = type metadata accessor for ForYouTitleViewLayoutAttributesFactory();
  *(void *)(a13 + 168) = &off_26BE6D6A8;
  *(void *)(a13 + 136) = a4;
  *(void *)(a13 + 200) = type metadata accessor for PlacardViewLayoutAttributesFactory();
  *(void *)(a13 + 208) = &off_26BE6FB40;
  *(void *)(a13 + 176) = a5;
  *(void *)(a13 + 240) = type metadata accessor for MastheadMetricsFactory();
  *(void *)(a13 + 248) = &off_26BE71B00;
  *(void *)(a13 + 216) = a6;
  *(void *)(a13 + 256) = a7;
  *(void *)(a13 + 264) = a8;
  *(unsigned char *)(a13 + 272) = a9 & 1;
  sub_20A42BEBC(a10, a13 + 280);
  *(void *)(a13 + 320) = a11;
  return a13;
}

uint64_t sub_20A7796A4(uint64_t a1, void (*a2)(uint64_t, char *), uint64_t a3)
{
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  sub_20A77A778(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v79 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A46F504();
  uint64_t v88 = v6;
  uint64_t v66 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v65 = &v63[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = &v63[-v9];
  sub_20A77A810(0, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
  uint64_t v85 = v10;
  unint64_t v90 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v86 = &v63[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v84 = &v63[-v13];
  sub_20A77A904();
  uint64_t v83 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v82 = &v63[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = &v63[-v17];
  sub_20A77A810(0, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v22 = &v63[-v21];
  sub_20A77A6C4(0);
  MEMORY[0x270FA5388](v23 - 8);
  double v25 = &v63[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A77A98C(0);
  uint64_t v27 = v26 - 8;
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = &v63[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A77AC10(a1, (uint64_t)v25, (uint64_t (*)(void))sub_20A77A6C4);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v20 + 32))(v22, v25, v19);
  sub_20A77AA68((unint64_t *)&unk_26AC6AD10);
  sub_20A8CE4B0();
  uint64_t v30 = *(int *)(v27 + 44);
  *(void *)&v29[v30] = 0;
  sub_20A77A9C8(0, (unint64_t *)&qword_26AC7FD10, (unint64_t *)&unk_26AC6AD20, MEMORY[0x263F7E0B8], MEMORY[0x263F8DE58]);
  uint64_t v32 = (uint64_t *)&v29[*(int *)(v31 + 36)];
  uint64_t v33 = v19;
  uint64_t v34 = sub_20A77AA68((unint64_t *)&unk_26AC6AD20);
  uint64_t v35 = *v32;
  uint64_t v87 = v29;
  sub_20A8CE8A0();
  if (v35 == v89[0])
  {
    unint64_t v90 = MEMORY[0x263F8EE78];
    uint64_t v36 = (uint64_t)v87;
LABEL_3:
    sub_20A77A718(v36, (uint64_t (*)(void))sub_20A77A98C);
    return v90;
  }
  else
  {
    uint64_t v76 = (void (**)(unsigned char *))(v90 + 16);
    uint64_t v77 = v30;
    long long v74 = (void (**)(unsigned char *, uint64_t))(v20 + 8);
    long long v75 = (void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 16);
    long long v73 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v90 + 32);
    uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
    uint64_t v67 = (void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 32);
    unint64_t v90 = MEMORY[0x263F8EE78];
    unint64_t v38 = v86;
    uint64_t v36 = (uint64_t)v87;
    long long v72 = v22;
    long long v71 = v32;
    uint64_t v70 = v34;
    uint64_t v69 = v33;
    while (1)
    {
      uint64_t v40 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v41 = v85;
      (*v76)(v38);
      v40(v89, 0);
      (*v75)(v22, v36, v33);
      sub_20A8CE8B0();
      (*v74)(v22, v33);
      unint64_t v42 = (uint64_t (*)(unsigned char *, unsigned char *, uint64_t))*v73;
      uint64_t v43 = v84;
      (*v73)(v84, v38, v41);
      uint64_t v44 = v83;
      uint64_t v45 = &v82[*(int *)(v83 + 48)];
      uint64_t v46 = v77;
      uint64_t v47 = *(void *)(v36 + v77);
      uint64_t result = v42(v45, v43, v41);
      if (__OFADD__(v47, 1)) {
        break;
      }
      *(void *)(v36 + v46) = v47 + 1;
      uint64_t v48 = *(int *)(v44 + 48);
      uint64_t v49 = v41;
      uint64_t v50 = (uint64_t)v78;
      uint64_t v51 = (char *)v78 + v48;
      void *v78 = v47;
      v42((unsigned char *)(v50 + v48), v45, v49);
      uint64_t v52 = (uint64_t)v79;
      v80(v47, v51);
      sub_20A77A718(v50, (uint64_t (*)(void))sub_20A77A904);
      uint64_t v53 = v88;
      if ((*v68)(v52, 1, v88) == 1)
      {
        sub_20A77A718(v52, (uint64_t (*)(void))sub_20A77A778);
        uint64_t v33 = v69;
        id v22 = v72;
        uint64_t v36 = (uint64_t)v87;
      }
      else
      {
        uint64_t v54 = (void (*)(unsigned char *, unsigned char *, uint64_t))*v67;
        uint64_t v55 = v64;
        (*v67)(v64, v52, v53);
        uint64_t v56 = v65;
        v54(v65, v55, v53);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v33 = v69;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v90 = sub_20A46E4E4(0, *(void *)(v90 + 16) + 1, 1, v90);
        }
        id v22 = v72;
        unint64_t v59 = *(void *)(v90 + 16);
        unint64_t v58 = *(void *)(v90 + 24);
        uint64_t v60 = v66;
        uint64_t v36 = (uint64_t)v87;
        if (v59 >= v58 >> 1)
        {
          uint64_t v62 = sub_20A46E4E4(v58 > 1, v59 + 1, 1, v90);
          uint64_t v60 = v66;
          unint64_t v90 = v62;
        }
        unint64_t v61 = v90;
        *(void *)(v90 + 16) = v59 + 1;
        v54((unsigned char *)(v61+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(void *)(v60 + 72) * v59), v56, v88);
      }
      uint64_t v39 = *v71;
      sub_20A8CE8A0();
      unint64_t v38 = v86;
      if (v39 == v89[0]) {
        goto LABEL_3;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_20A779F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, long long *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v96 = a8;
  uint64_t v95 = a7;
  uint64_t v86 = a6;
  uint64_t v84 = a5;
  uint64_t v82 = a4;
  uint64_t v80 = a3;
  uint64_t v94 = a10;
  uint64_t v93 = a11;
  uint64_t v92 = a12;
  uint64_t v85 = a13;
  uint64_t v83 = a27;
  uint64_t v79 = a26;
  uint64_t v81 = a23;
  uint64_t v91 = a24;
  uint64_t v89 = a17;
  uint64_t v88 = *(void *)(a17 - 8);
  int v90 = a9 & 1;
  MEMORY[0x270FA5388](a1);
  uint64_t v87 = (char *)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = a14;
  uint64_t v114 = v30;
  uint64_t v31 = __swift_allocate_boxed_opaque_existential_1(&v112);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a14 - 8) + 32))(v31, a1, a14);
  uint64_t v110 = a18;
  uint64_t v111 = a25;
  uint64_t v32 = __swift_allocate_boxed_opaque_existential_1(&v109);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a18 - 8) + 32))(v32, a2, a18);
  uint64_t v107 = a15;
  uint64_t v108 = a22;
  uint64_t v33 = __swift_allocate_boxed_opaque_existential_1(&v106);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a15 - 8) + 32))(v33, v80, a15);
  uint64_t v104 = a19;
  uint64_t v105 = v79;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v103);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a19 - 8) + 32))(boxed_opaque_existential_1, v82, a19);
  uint64_t v101 = a16;
  uint64_t v102 = v81;
  uint64_t v35 = __swift_allocate_boxed_opaque_existential_1(v100);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a16 - 8) + 32))(v35, v84, a16);
  uint64_t v98 = a20;
  uint64_t v99 = v83;
  uint64_t v36 = __swift_allocate_boxed_opaque_existential_1(v97);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a20 - 8) + 32))(v36, v86, a20);
  uint64_t v37 = swift_allocObject();
  uint64_t v38 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v112, v113);
  double v39 = MEMORY[0x270FA5388](v38);
  uint64_t v41 = (uint64_t *)((char *)&v78 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v42 + 16))(v41, v39);
  uint64_t v43 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v109, v110);
  double v44 = MEMORY[0x270FA5388](v43);
  uint64_t v46 = (uint64_t *)((char *)&v78 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v47 + 16))(v46, v44);
  uint64_t v48 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v106, v107);
  double v49 = MEMORY[0x270FA5388](v48);
  uint64_t v51 = (uint64_t *)((char *)&v78 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v52 + 16))(v51, v49);
  uint64_t v53 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v103, v104);
  double v54 = MEMORY[0x270FA5388](v53);
  uint64_t v56 = (uint64_t *)((char *)&v78 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v57 + 16))(v56, v54);
  uint64_t v58 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v100, v101);
  double v59 = MEMORY[0x270FA5388](v58);
  unint64_t v61 = (uint64_t *)((char *)&v78 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v62 + 16))(v61, v59);
  uint64_t v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v97, v98);
  double v64 = MEMORY[0x270FA5388](v63);
  uint64_t v66 = (uint64_t *)((char *)&v78 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v67 + 16))(v66, v64);
  uint64_t v68 = *v41;
  uint64_t v69 = *v46;
  uint64_t v70 = *v51;
  uint64_t v71 = *v56;
  uint64_t v72 = *v61;
  uint64_t v73 = *v66;
  uint64_t v74 = (uint64_t)v87;
  uint64_t v75 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v92, v89);
  uint64_t v76 = sub_20A779530(v68, v69, v70, v71, v72, v73, v95, v96, v90, v94, v93, v74, v37, v75, v91);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v112);
  return v76;
}

void sub_20A77A6C4(uint64_t a1)
{
}

uint64_t sub_20A77A700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_20A772CCC(a1, a2, *(void *)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 80), a3, *(double *)(v3 + 32), *(CGFloat *)(v3 + 40), *(double *)(v3 + 48), *(CGFloat *)(v3 + 56), *(double *)(v3 + 72));
}

uint64_t sub_20A77A718(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A77A778(uint64_t a1)
{
}

void sub_20A77A7AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A77A810(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for ForYouFeedSectionDescriptor();
    v8[1] = type metadata accessor for ForYouFeedModel();
    long long v8[2] = sub_20A77AD98(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    v8[3] = sub_20A77AD98((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A77A904()
{
  if (!qword_26AC7F860)
  {
    sub_20A77A810(255, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F860);
    }
  }
}

void sub_20A77A98C(uint64_t a1)
{
}

void sub_20A77A9C8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_20A77A810(255, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
    uint64_t v10 = v9;
    uint64_t v11 = sub_20A77AA68(a3);
    unint64_t v12 = a5(a1, v10, v11);
    if (!v13) {
      atomic_store(v12, a2);
    }
  }
}

uint64_t sub_20A77AA68(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A77A810(255, (unint64_t *)&qword_26AC6AD30, MEMORY[0x263F7E0A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A77AAC8(uint64_t a1)
{
}

unint64_t sub_20A77AAFC()
{
  unint64_t result = qword_26AC69E88;
  if (!qword_26AC69E88)
  {
    sub_20A77A810(255, (unint64_t *)&qword_26AC69EB0, MEMORY[0x263F7D450]);
    sub_20A77AD98((unint64_t *)&unk_26AC776E0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
    sub_20A77AD98(&qword_26AC6E170, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69E88);
  }
  return result;
}

uint64_t sub_20A77ABF0@<X0>(uint64_t a1@<X8>)
{
  return sub_20A779148(*(void *)(v1 + 24), a1);
}

uint64_t sub_20A77AC10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A77AC78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A77ACE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

double sub_20A77AD50@<D0>(uint64_t a1@<X8>)
{
  return sub_20A858850(a1, *(double *)(v1 + 16), *(double *)(v1 + 32));
}

uint64_t sub_20A77AD90()
{
  return sub_20A776B1C();
}

uint64_t sub_20A77AD98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A77ADE0(uint64_t a1)
{
}

uint64_t sub_20A77AE14(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for ProvideFeedbackCommandHandler()
{
  return self;
}

uint64_t sub_20A77AE68()
{
  return sub_20A77AEE4();
}

uint64_t sub_20A77AE8C@<X0>(BOOL *a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v1 + 24), *(void *)(*(void *)v1 + 48));
  uint64_t result = sub_20A8C3820();
  *a1 = (result & 1) == 0;
  return result;
}

uint64_t sub_20A77AEE4()
{
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v5, 0, (uint64_t)v2, (uint64_t)v11, 0, 0, (uint64_t)v9);
  swift_release();
  sub_20A49127C((uint64_t)v9, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v11, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A592D44((uint64_t)v2, (uint64_t (*)(void))sub_20A556CDC);
  sub_20A592D44((uint64_t)v5, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_20A77B124(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_20A42CFF0(0, (unint64_t *)&qword_26763B268);
  sub_20A49A2A4();
  uint64_t v14 = sub_20A8CE7F0();
  id v15 = a4;
  id v16 = a1;
  sub_20A77B1F4(v14, (uint64_t)a4, a5, a6, a7, a8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A77B1F4(uint64_t a1, uint64_t a2, SEL *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  v23[1] = a4;
  unint64_t v8 = v6;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_20A8CC220();
  uint64_t v27 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A8CC250();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  id v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CFF0(0, (unint64_t *)&qword_26763B268);
  sub_20A49A2A4();
  uint64_t v17 = (void *)sub_20A8CE7E0();
  v29.receiver = v8;
  v29.super_class = ObjectType;
  objc_msgSendSuper2(&v29, *a3, v17, a2);

  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v18 = (void *)sub_20A8CEBE0();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v8;
  aBlock[4] = v24;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = v25;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v8;
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A77B7BC(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A77B7BC((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  sub_20A8CF290();
  MEMORY[0x210526F10](0, v16, v13, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v26);
}

void sub_20A77B53C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_msgSend(a1, sel_setAlpha_);
  uint64_t v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  v11[4] = a3;
  v11[5] = v8;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_20A4713FC;
  v11[3] = a4;
  uint64_t v9 = _Block_copy(v11);
  id v10 = a1;
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_animations_, v9, 0.25);
  _Block_release(v9);
}

uint64_t type metadata accessor for TapDimmingTextView()
{
  return self;
}

uint64_t sub_20A77B740()
{
  return swift_deallocObject();
}

void sub_20A77B778()
{
  sub_20A77B53C(*(void **)(v0 + 16), (uint64_t)&unk_26BE6DD68, (uint64_t)sub_20A77B8DC, (uint64_t)&block_descriptor_6_0);
}

uint64_t sub_20A77B7BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A77B804()
{
  sub_20A77B53C(*(void **)(v0 + 16), (uint64_t)&unk_26BE6DE08, (uint64_t)sub_20A77B848, (uint64_t)&block_descriptor_18_0);
}

id sub_20A77B848()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 1.0);
}

void sub_20A77B85C()
{
  sub_20A77B53C(*(void **)(v0 + 16), (uint64_t)&unk_26BE6DEA8, (uint64_t)sub_20A77B8A0, (uint64_t)&block_descriptor_30);
}

id sub_20A77B8A0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_setAlpha_, 0.5);
}

void sub_20A77B8F4(uint64_t a1, uint64_t a2, double *a3, char *a4)
{
  uint64_t v5 = v4;
  id v10 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_backgroundView];
  objc_msgSend(v10, sel_setFrame_, a3[4], a3[5], a3[6], a3[7]);
  uint64_t v11 = *(void **)&a4[OBJC_IVAR____TtC8StocksUI17SectionHeaderView_titleLabel];
  objc_msgSend(v11, sel_setFrame_, a3[8], a3[9], a3[10], a3[11]);
  swift_beginAccess();
  sub_20A4342F4(v4 + 16, (uint64_t)v19);
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  id v12 = objc_msgSend(a4, sel_traitCollection);
  uint64_t v13 = (void *)sub_20A58E900(a1, a2, v12);

  objc_msgSend(v11, sel_setAttributedText_, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  id v14 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a4, sel_setBackgroundColor_, v14);

  uint64_t v15 = __swift_project_boxed_opaque_existential_1((void *)(v5 + 16), *(void *)(v5 + 40));
  uint64_t v16 = *(void *)(*v15 + 80);
  uint64_t v17 = *(void *)(*v15 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(*v15 + 56), v16);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  objc_msgSend(v10, sel_setBackgroundColor_, v18);
}

uint64_t type metadata accessor for SectionHeaderViewRenderer()
{
  return self;
}

unint64_t sub_20A77BADC(uint64_t a1)
{
  unint64_t result = sub_20A77BB04();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A77BB04()
{
  unint64_t result = qword_26AC76578;
  if (!qword_26AC76578)
  {
    type metadata accessor for SectionHeaderViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC76578);
  }
  return result;
}

uint64_t *sub_20A77BB58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C40E0();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_20A77BC60(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_20A77BCEC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_20A77BDA4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_20A77BE64(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_20A77BEFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20A77BFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A77BFB8);
}

uint64_t sub_20A77BFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A77C068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A77C07C);
}

uint64_t sub_20A77C07C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C40E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier()
{
  uint64_t result = qword_26763DD60;
  if (!qword_26763DD60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A77C170()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A77C214(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v38 = a3;
  double v39 = a2;
  uint64_t v5 = sub_20A8C8B80();
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77C798(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - v9;
  sub_20A4B9B70();
  MEMORY[0x270FA5388](v11 - 8);
  sub_20A77C798(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v12);
  id v14 = (char *)&v31 - v13;
  uint64_t updated = type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier();
  uint64_t v16 = sub_20A8C4070();
  uint64_t v18 = v17;
  uint64_t v19 = sub_20A8C4050();
  uint64_t v20 = *(void *)(v3 + *(int *)(updated + 24));
  v40[0] = v16;
  v40[1] = v18;
  v40[2] = v19;
  v40[3] = v21;
  v40[4] = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_20A77C858(a1, v40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A77C798(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v25 = v24;
  uint64_t v26 = sub_20A77C754((unint64_t *)&unk_26AC69F20, (unint64_t *)&qword_26AC69F48, v23);
  uint64_t v27 = sub_20A77C754(&qword_26AC69F18, (unint64_t *)&qword_26AC69F48, v23);
  MEMORY[0x21051E250](v22, v25, v26, v27);
  type metadata accessor for StockListModel(0);
  sub_20A42D40C();
  sub_20A77C70C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8CBB20();
  uint64_t v29 = v34;
  uint64_t v28 = v35;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v7, *MEMORY[0x263F7D528], v35);
  sub_20A4FBD1C();
  sub_20A8C9B50();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v28);
  v39(v10);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v33);
}

uint64_t sub_20A77C67C()
{
  return sub_20A77C70C(&qword_26763DD70, (void (*)(uint64_t))type metadata accessor for StockListWatchlistPickerUpdateBlueprintModifier);
}

uint64_t sub_20A77C6C4()
{
  return sub_20A77C70C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A77C70C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A77C754(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A77C798(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A77C798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    long long v8[2] = sub_20A42D40C();
    v8[3] = sub_20A77C70C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A77C858(uint64_t a1, void *a2)
{
  uint64_t v34 = *a2;
  uint64_t v33 = a2[1];
  uint64_t v31 = a2[2];
  uint64_t v32 = (long long *)(a2 + 2);
  uint64_t v30 = a2[3];
  uint64_t v35 = a2;
  uint64_t v29 = a2[4];
  sub_20A4AE540();
  MEMORY[0x270FA5388](v3 - 8);
  void v28[2] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A77C798(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v28 - v11;
  uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A77C798(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v15 = v14;
  uint64_t v16 = sub_20A77C754((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v13);
  uint64_t v60 = v15;
  uint64_t v17 = sub_20A8CE880();
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (!v17) {
    return v18;
  }
  uint64_t v19 = v17;
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_20A68CCBC(0, v17 & ~(v17 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v19 & 0x8000000000000000) == 0)
  {
    uint64_t v40 = v16;
    uint64_t v21 = (void (**)(char *))(v7 + 16);
    uint64_t v37 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v36 = v7 + 32;
    uint64_t v39 = a1;
    uint64_t v38 = v12;
    while (1)
    {
      uint64_t v22 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v23 = *v21;
      (*v21)(v9);
      v22(&v47, 0);
      sub_20A8C8820();
      if (v52)
      {
        if (v52 != 1)
        {
          ((void (*)(char *, char *, uint64_t, uint64_t, uint64_t))v23)(v12, v9, v6, v50, v51);
          goto LABEL_10;
        }
        sub_20A475B64(v47, v48, v49, v50, v51, 1u);
        uint64_t v41 = v34;
        uint64_t v42 = v33;
        uint64_t v43 = v31;
        uint64_t v44 = v30;
        uint64_t v45 = v29;
        char v46 = 1;
        long long v24 = *(_OWORD *)v35;
        long long v58 = *v32;
        long long v59 = v24;
        uint64_t v57 = v35[4];
        sub_20A455C74((uint64_t)&v59);
        sub_20A455C74((uint64_t)&v58);
        uint64_t v25 = &v57;
      }
      else
      {
        sub_20A475B64(v47, v48, v49, v50, v51, 0);
        uint64_t v41 = v34;
        uint64_t v42 = v33;
        uint64_t v43 = v31;
        uint64_t v44 = v30;
        uint64_t v45 = v29;
        char v46 = 0;
        long long v56 = *(_OWORD *)v35;
        long long v55 = *v32;
        uint64_t v54 = v35[4];
        sub_20A455C74((uint64_t)&v56);
        sub_20A455C74((uint64_t)&v55);
        uint64_t v25 = &v54;
      }
      sub_20A455CA0((uint64_t)v25);
      sub_20A8C8870();
      type metadata accessor for StockListModel(0);
      sub_20A42D40C();
      sub_20A77C70C(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
      sub_20A8C8810();
LABEL_10:
      (*v37)(v9, v6);
      uint64_t v18 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68CCBC(0, *(void *)(v18 + 16) + 1, 1);
        uint64_t v18 = v53;
      }
      unint64_t v27 = *(void *)(v18 + 16);
      unint64_t v26 = *(void *)(v18 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_20A68CCBC(v26 > 1, v27 + 1, 1);
        uint64_t v18 = v53;
      }
      *(void *)(v18 + 16) = v27 + 1;
      uint64_t v12 = v38;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v27, v38, v6);
      uint64_t v53 = v18;
      sub_20A8CE8B0();
      if (!--v19) {
        return v18;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TickerBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_20A77CE64()
{
  return sub_20A77D5D8(&qword_26AC6FF50, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
}

uint64_t sub_20A77CEAC()
{
  return sub_20A77D5D8(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

uint64_t sub_20A77CEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CAE30();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v9 = *MEMORY[0x263F7DED0];
  uint64_t v10 = sub_20A8CAE20();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7DEC8], v5);
  uint64_t v13 = a2;
  uint64_t v14 = a3;
  sub_20A44BA40((void (*)(char *))sub_20A77D620, (uint64_t)v12);
  type metadata accessor for TickerLayoutModel();
  sub_20A52A6A0();
  sub_20A77D5D8(&qword_26AC6FF58, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
  return sub_20A8C9860();
}

uint64_t sub_20A77D0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TickerLayoutModel();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TickerViewLayoutOptions();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TickerModel();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DF90(0);
  sub_20A8C8330();
  sub_20A494D04();
  sub_20A4C8874((uint64_t)&v16[*(int *)(v17 + 48)], (uint64_t)v13);
  uint64_t v18 = sub_20A8C9830();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v10, a2, v18);
  __swift_project_boxed_opaque_existential_1((void *)(a3 + 16), *(void *)(a3 + 40));
  sub_20A4579E4((uint64_t)v13, (uint64_t)v10, (uint64_t)v27);
  sub_20A747970();
  uint64_t v20 = &v7[*(int *)(v19 + 48)];
  sub_20A4A2540((uint64_t)v13, (uint64_t)v7);
  long long v21 = v27[9];
  *((_OWORD *)v20 + 8) = v27[8];
  *((_OWORD *)v20 + 9) = v21;
  *((void *)v20 + 20) = v28;
  long long v22 = v27[5];
  *((_OWORD *)v20 + 4) = v27[4];
  *((_OWORD *)v20 + 5) = v22;
  long long v23 = v27[7];
  *((_OWORD *)v20 + 6) = v27[6];
  *((_OWORD *)v20 + 7) = v23;
  long long v24 = v27[1];
  *(_OWORD *)uint64_t v20 = v27[0];
  *((_OWORD *)v20 + 1) = v24;
  long long v25 = v27[3];
  *((_OWORD *)v20 + 2) = v27[2];
  *((_OWORD *)v20 + 3) = v25;
  sub_20A77D5D8(&qword_26AC6FF50, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
  sub_20A8C9140();
  sub_20A77D640((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TickerViewLayoutOptions);
  return sub_20A77D640((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockViewModel);
}

uint64_t sub_20A77D3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9EA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_20A8C9830();
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = *v2;
  (*(void (**)(unsigned char *, uint64_t, double))(v12 + 16))(&v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v9);
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D9D8], v4);
  uint64_t v15 = a2;
  uint64_t v16 = v11;
  sub_20A44B6F8((void (*)(char *))sub_20A77D5B8, (uint64_t)v14);
  type metadata accessor for TickerLayoutModel();
  sub_20A52A6A0();
  sub_20A77D5D8(&qword_26AC6FF58, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
  return sub_20A8C8600();
}

uint64_t sub_20A77D5B8(uint64_t a1)
{
  return sub_20A77CEF4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_20A77D5D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A77D620(uint64_t a1)
{
  return sub_20A77D0DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_20A77D640(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void __swiftcall StockSearchModule.createSearchController()(UISearchController *__return_ptr retstr)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI17StockSearchModule_resolver), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI17StockSearchModule_resolver + 24));
  type metadata accessor for StockSearchViewController(0);
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  swift_retain();
  uint64_t v2 = (char *)sub_20A8C5B80();
  swift_release_n();
  if (v2)
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82BA0]), sel_initWithSearchResultsController_, v2);
    objc_msgSend(v3, sel_setDelegate_, v2);
    id v4 = objc_msgSend(v3, sel_searchBar);
    objc_msgSend(v4, sel_setDelegate_, v2);

    id v5 = objc_msgSend(v3, sel_searchBar);
    objc_msgSend(v5, sel_setLookToDictateEnabled_, 1);

    uint64_t v6 = (char *)objc_msgSend(v3, sel_searchBar);
    uint64_t v7 = &v2[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar];
    uint64_t v8 = swift_unknownObjectWeakAssign();
    double v9 = (void *)MEMORY[0x2105289B0](v8);
    if (v9)
    {
      uint64_t v10 = v9;
      objc_msgSend(v9, sel_setAutocorrectionType_, 1);
    }
    uint64_t v11 = (char *)MEMORY[0x2105289B0](v7);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_setAutocapitalizationType_, 0);

      uint64_t v2 = v6;
      uint64_t v6 = v12;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A77D87C()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A77D8B4(void *a1)
{
  uint64_t v2 = sub_20A8C7770();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_20A4342F4((uint64_t)Strong + OBJC_IVAR____TtC8StocksUI17StockSearchModule_contextBuilder, (uint64_t)v10);

  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_20A8CC050();
  sub_20A443124();
  sub_20A8C5A50();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_retain();

  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7A6D0], v2);
  sub_20A8C4890();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_20A8C4990();
  sub_20A8C5A40();
  return swift_release();
}

uint64_t sub_20A77DAE8(void *a1)
{
  return sub_20A77D8B4(a1);
}

id StockSearchModule.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void StockSearchModule.init()()
{
}

id StockSearchModule.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_20A77DC18(UISearchController *a1@<X8>)
{
}

uint64_t dispatch thunk of StockSearchModuleType.createSearchController()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for StockSearchModule()
{
  return self;
}

uint64_t method lookup function for StockSearchModule(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for StockSearchModule);
}

uint64_t sub_20A77DC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3190();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = sub_20A8C3080();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    char v9 = sub_20A8C3060();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v9 & 1) == 0)
    {
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
      uint64_t v16 = (void *)sub_20A8CF180();
      sub_20A8CEA00();
      sub_20A8C7D90();

      objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_backgroundFetchScheduler), sel_setMinimumBackgroundFetchInterval_, *MEMORY[0x263F83310]);
      goto LABEL_6;
    }
  }
  sub_20A43F778();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  sub_20A8C30A0();
  uint64_t v11 = MEMORY[0x263F8D5B8];
  *(void *)(v10 + 56) = MEMORY[0x263F8D538];
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 32) = v12;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  uint64_t v13 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_backgroundFetchScheduler);
  sub_20A8C30A0();
  objc_msgSend(v14, sel_setMinimumBackgroundFetchInterval_, v15);
LABEL_6:
  sub_20A5FC0C8();
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A77DF1C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_group;
  uint64_t v2 = sub_20A8C5F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_appConfigurationManager);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_20A77DFDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_group;
  uint64_t v4 = sub_20A8C5F10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_20A77E05C()
{
  __swift_project_boxed_opaque_existential_1((void *)(*v0 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_appConfigurationManager), *(void *)(*v0 + OBJC_IVAR____TtC8StocksUI38BackgroundFetchRegistrationStartupTask_appConfigurationManager + 24));
  sub_20A8C3AD0();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v1 = (void *)sub_20A8CEBE0();
  swift_retain();
  uint64_t v2 = sub_20A8C64F0();
  swift_release();

  swift_release();
  return v2;
}

uint64_t sub_20A77E128()
{
  uint64_t v0 = sub_20A8C5F10();
  __swift_allocate_value_buffer(v0, qword_26AC696E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC696E0);
  return sub_20A8C5F00();
}

uint64_t static StartupTaskGroup.backgroundFetchRegistration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AC69700 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20A8C5F10();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26AC696E0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_20A77E234()
{
  return type metadata accessor for BackgroundFetchRegistrationStartupTask();
}

uint64_t type metadata accessor for BackgroundFetchRegistrationStartupTask()
{
  uint64_t result = qword_26AC7DA08;
  if (!qword_26AC7DA08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A77E288()
{
  uint64_t result = sub_20A8C5F10();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A77E32C(uint64_t a1)
{
  return sub_20A77DC8C(a1, v1);
}

BOOL static StockChartHighlightStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StockChartHighlightStyle.hash(into:)()
{
  return sub_20A8CF890();
}

uint64_t StockChartHighlightStyle.hashValue.getter()
{
  return sub_20A8CF8C0();
}

unint64_t sub_20A77E3D8()
{
  unint64_t result = qword_26763DD90;
  if (!qword_26763DD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DD90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockChartHighlightStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A77E4F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockChartHighlightStyle()
{
  return &type metadata for StockChartHighlightStyle;
}

uint64_t sub_20A77E530@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    unsigned int v6 = (objc_class *)type metadata accessor for WelcomeModule();
    uint64_t v7 = (char *)objc_allocWithZone(v6);
    sub_20A4342F4((uint64_t)v10, (uint64_t)&v7[OBJC_IVAR____TtC8StocksUI13WelcomeModule_resolver]);
    *(void *)&v7[OBJC_IVAR____TtC8StocksUI13WelcomeModule_tracker] = v5;
    v9.receiver = v7;
    v9.super_class = v6;
    id v8 = objc_msgSendSuper2(&v9, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    a2[3] = v6;
    uint64_t result = sub_20A78125C(&qword_26AC6D3C0, (void (*)(uint64_t))type metadata accessor for WelcomeModule);
    a2[4] = result;
    *a2 = v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77E638(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6B220);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A780734();
    id v3 = objc_allocWithZone(v2);
    return sub_20A8CD360();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77E6C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A78022C(a1, (uint64_t (*)(void))type metadata accessor for WelcomeFlowProvider, (uint64_t)&off_26BE60558, a2);
}

uint64_t sub_20A77E6E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v3 = type metadata accessor for WelcomeFlowProvider();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    a2[3] = v3;
    uint64_t result = sub_20A78125C(&qword_26AC813D8, (void (*)(uint64_t))type metadata accessor for WelcomeFlowProvider);
    a2[4] = result;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77E790()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WelcomeViewController();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC813B8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC813B0);
  sub_20A8C62A0();
  type metadata accessor for WelcomeRouter();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC81598);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC81570);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC81578);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC813C0);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC815B8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC81668);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC817E0);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for WelcomeViewAnimator();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC815C0);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC815A8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC815B0);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for WelcomeFlowProvider();
  sub_20A8C6290();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D010], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20A77ECC8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC813B8);
  uint64_t result = sub_20A8C5BB0();
  if (!v34)
  {
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC81598);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v31;
  if (!v31)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = v32;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC815B0);
  uint64_t result = sub_20A8C5BB0();
  if (!v30)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC815A8);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6A150);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v25;
  if (!v25)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = v26;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC697A0);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    double v7 = MEMORY[0x270FA5388](v6);
    objc_super v9 = (uint64_t *)&v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
    uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
    double v12 = MEMORY[0x270FA5388](v11);
    uint64_t v14 = (uint64_t *)&v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
    uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
    double v17 = MEMORY[0x270FA5388](v16);
    uint64_t v19 = (uint64_t *)&v23[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
    long long v21 = sub_20A780A4C(*v9, v3, v4, *v14, *v19, v5, v22, (uint64_t)v23);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return (uint64_t)v21;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_20A77F138@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for WelcomeStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_20A431A50((uint64_t)v10, v5, v4, v6);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE63F50;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77F298@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4(a1, (uint64_t)v6);
  uint64_t v3 = type metadata accessor for WelcomeRouter();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t result = sub_20A42BEBC(v6, v4 + 24);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_26BE6AD88;
  *a2 = v4;
  return result;
}

void sub_20A77F314(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WelcomeViewController();
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A77F394@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC81570);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v22;
  if (!v22)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC813B0);
  uint64_t result = sub_20A8C5BB0();
  if (!v21)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC813C0);
  uint64_t result = sub_20A8C5BB0();
  if (v19)
  {
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v19);
    double v13 = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (uint64_t **)&v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t **, double))(v16 + 16))(v15, v13);
    double v17 = sub_20A78030C(v5, v6, *v10, *v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *a2 = v17;
    a2[1] = &off_26BE71408;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A77F63C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC81578);
  uint64_t result = sub_20A8C5BB0();
  if (v8)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26763DDA0);
    uint64_t result = sub_20A8C5BB0();
    if (v6)
    {
      type metadata accessor for WelcomeInteractor();
      uint64_t v5 = (void *)swift_allocObject();
      v5[3] = 0;
      uint64_t result = swift_unknownObjectWeakInit();
      v5[4] = v8;
      v5[5] = v9;
      v5[6] = v6;
      v5[7] = v7;
      *a2 = v5;
      a2[1] = &off_26BE70A70;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A77F760@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for WelcomeDataManager();
  uint64_t result = swift_allocObject();
  *a1 = result;
  a1[1] = (uint64_t)&off_26BE6D690;
  return result;
}

uint64_t sub_20A77F7A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for WelcomeTracker();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    swift_retain();
    sub_20A8C48E0();
    uint64_t result = swift_release();
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE62650;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77F858@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_20A77FA1C(a1, (uint64_t (*)(void))type metadata accessor for WelcomeViewRenderer, (uint64_t)&off_26BE61450, a2);
}

uint64_t sub_20A77F878@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for WelcomeViewStylerFactory();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    uint64_t v8 = *(void *)(v4 - 8);
    double v9 = MEMORY[0x270FA5388](v7);
    uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = sub_20A7AB3EC((uint64_t)v11, v5, v4, v6);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v4);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = &off_26BE6EF20;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77F9FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_20A77FA1C(a1, (uint64_t (*)(void))type metadata accessor for WelcomeViewLayoutAttributesFactory, (uint64_t)&off_26BE623B0, a2);
}

uint64_t sub_20A77FA1C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC81668);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
    double v9 = MEMORY[0x270FA5388](v8);
    uint64_t v11 = (void *)((char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
    uint64_t v13 = *v11;
    uint64_t v14 = type metadata accessor for WelcomeViewStylerFactory();
    v23[3] = v14;
    v23[4] = &off_26BE6EF20;
    v23[0] = v13;
    uint64_t v15 = a2(0);
    uint64_t v16 = (void *)swift_allocObject();
    uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v14);
    double v18 = MEMORY[0x270FA5388](v17);
    uint64_t v20 = (void *)((char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
    uint64_t v22 = *v20;
    v16[5] = v14;
    void v16[6] = &off_26BE6EF20;
    _OWORD v16[2] = v22;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    a4[3] = v15;
    a4[4] = a3;
    *a4 = v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A77FC54(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC815C0);
  uint64_t result = sub_20A8C5BB0();
  if (!v27)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC815B8);
  uint64_t result = sub_20A8C5BB0();
  if (!v25)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC817E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v23)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C61F0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A780734();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    double v6 = MEMORY[0x270FA5388](v5);
    uint64_t v8 = (uint64_t *)&v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (uint64_t *)&v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    double v16 = MEMORY[0x270FA5388](v15);
    double v18 = (uint64_t *)&v22[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_20A780ED0(*v8, *v13, *v18, v3, v4);
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return v20;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A78001C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (v22)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v5 = v19;
    if (v19)
    {
      uint64_t v6 = type metadata accessor for WelcomeModelProvider();
      uint64_t v7 = v20;
      uint64_t v8 = __swift_project_boxed_opaque_existential_1(v18, v19);
      v17[3] = v5;
      v17[4] = v7;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
      uint64_t v10 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v5 - 8) + 16);
      uint64_t v11 = ((uint64_t (*)(uint64_t *, void *, uint64_t))v10)(boxed_opaque_existential_1, v8, v5);
      double v12 = MEMORY[0x270FA5388](v11);
      uint64_t v14 = (char *)&v17[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      v10(v14, boxed_opaque_existential_1, v5, v12);
      uint64_t v15 = sub_20A4486E8(&v21, (uint64_t)v14, v6, v5, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_26BE695D8;
      *a2 = v15;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A7801EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A78022C(a1, (uint64_t (*)(void))type metadata accessor for WelcomeViewAnimator, (uint64_t)&off_26BE6CB98, a2);
}

uint64_t sub_20A78020C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A78022C(a1, (uint64_t (*)(void))type metadata accessor for WelcomeViewAnimator, (uint64_t)&off_26BE6CB88, a2);
}

uint64_t sub_20A78022C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = a2(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A7802B0()
{
  type metadata accessor for WelcomeFlowProvider();

  return swift_allocObject();
}

uint64_t type metadata accessor for WelcomeAssembly()
{
  return self;
}

void *sub_20A78030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v9 = type metadata accessor for WelcomeRouter();
  v30[3] = v9;
  _OWORD v30[4] = &off_26BE6AD88;
  v30[0] = a3;
  uint64_t v28 = v8;
  uint64_t v29 = &off_26BE62650;
  v27[0] = a4;
  type metadata accessor for WelcomeEventHandler();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v9);
  double v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)&v25[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (void *)((char *)&v25[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
  uint64_t v21 = *v14;
  uint64_t v22 = *v19;
  void v26[3] = v9;
  v26[4] = &off_26BE6AD88;
  v25[4] = &off_26BE62650;
  v26[0] = v21;
  void v25[3] = v8;
  v25[0] = v22;
  void v10[3] = 0;
  swift_unknownObjectWeakInit();
  void v10[4] = a1;
  v10[5] = a2;
  sub_20A4342F4((uint64_t)v26, (uint64_t)(v10 + 6));
  sub_20A4342F4((uint64_t)v25, (uint64_t)(v10 + 11));
  *(void *)(v10[4] + 24) = &off_26BE71400;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return v10;
}

uint64_t sub_20A78057C()
{
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC70090);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A780734();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC815A0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC812A0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();

  return swift_release();
}

void sub_20A780734()
{
  if (!qword_26AC6B200)
  {
    sub_20A734CD4();
    unint64_t v0 = sub_20A8CD390();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B200);
    }
  }
}

char *sub_20A780790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned char *a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  void v34[3] = type metadata accessor for WelcomeStyler();
  v34[4] = &off_26BE63F50;
  v34[0] = a1;
  uint64_t v32 = type metadata accessor for WelcomeViewAnimator();
  uint64_t v33 = &off_26BE6CB88;
  v31[0] = a4;
  v30[3] = v32;
  _OWORD v30[4] = &off_26BE6CB98;
  v30[0] = a5;
  a9[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_allowRendering] = 0;
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI21WelcomeViewController_statusBarView;
  id v19 = objc_allocWithZone((Class)sub_20A8C8480());
  uint64_t v20 = a9;
  *(void *)&a9[v18] = objc_msgSend(v19, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_20A4342F4((uint64_t)v34, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_styler]);
  uint64_t v21 = &v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_eventHandler];
  *(void *)uint64_t v21 = a2;
  *((void *)v21 + 1) = a3;
  sub_20A4342F4((uint64_t)v31, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_viewProvider]);
  sub_20A4342F4((uint64_t)v30, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_viewAnimator]);
  uint64_t v22 = &v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_toolbarManager];
  *(void *)uint64_t v22 = a6;
  *((void *)v22 + 1) = a7;
  sub_20A4342F4(a8, (uint64_t)&v20[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_sceneStateManager]);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  v29.receiver = v20;
  v29.super_class = ObjectType;
  uint64_t v23 = (char *)objc_msgSendSuper2(&v29, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v23[OBJC_IVAR____TtC8StocksUI21WelcomeViewController_eventHandler] + 24) = &off_26BE71840;
  swift_unknownObjectWeakAssign();
  uint64_t v24 = *(void **)(*(void *)(*__swift_project_boxed_opaque_existential_1(v31, v32) + 16)
                 + OBJC_IVAR____TtC8StocksUI11WelcomeView_continueButton);
  uint64_t v25 = v23;
  objc_msgSend(v24, sel_addTarget_action_forControlEvents_, v25, sel_didTapContinueButton, 64);
  uint64_t v26 = *(void **)(*(void *)(*__swift_project_boxed_opaque_existential_1(v31, v32) + 16)
                 + OBJC_IVAR____TtC8StocksUI11WelcomeView_onPrivacyTap);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v27 = v26;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return v25;
}

char *sub_20A780A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v42 = type metadata accessor for WelcomeStyler();
  uint64_t v43 = &off_26BE63F50;
  v41[0] = a1;
  uint64_t v39 = type metadata accessor for WelcomeViewAnimator();
  uint64_t v40 = &off_26BE6CB88;
  v38[0] = a4;
  uint64_t v36 = v39;
  uint64_t v37 = &off_26BE6CB98;
  v35[0] = a5;
  uint64_t v16 = objc_allocWithZone((Class)type metadata accessor for WelcomeViewController());
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
  double v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (void *)((char *)&v35[-1] - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v21 + 16))(v20, v18);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  double v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (void *)((char *)&v35[-1] - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v26 + 16))(v25, v23);
  uint64_t v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  double v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (void *)((char *)&v35[-1] - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v31 + 16))(v30, v28);
  uint64_t v32 = sub_20A780790(*v20, a2, a3, *v25, *v30, a6, a7, a8, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return v32;
}

uint64_t sub_20A780D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  v17[3] = type metadata accessor for WelcomeModelProvider();
  v17[4] = &off_26BE695D8;
  v17[0] = a1;
  v16[3] = type metadata accessor for WelcomeViewRenderer();
  v16[4] = &off_26BE61450;
  v16[0] = a2;
  v15[3] = type metadata accessor for WelcomeViewLayoutAttributesFactory();
  v15[4] = &off_26BE623B0;
  v15[0] = a3;
  *(void *)(a6 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for WelcomeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_20A781184();
  swift_allocObject();
  *(void *)(a6 + 24) = sub_20A8C5D40();
  uint64_t v12 = MEMORY[0x263F8EE78];
  *(void *)(a6 + 168) = MEMORY[0x263F8EE78];
  *(void *)(a6 + 176) = v12;
  *(_OWORD *)(a6 + 200) = 0u;
  *(_OWORD *)(a6 + 216) = 0u;
  *(_OWORD *)(a6 + 232) = 0u;
  *(_OWORD *)(a6 + 248) = 0u;
  *(_OWORD *)(a6 + 184) = 0u;
  *(_OWORD *)(a6 + 257) = 0u;
  *(unsigned char *)(a6 + 273) = 2;
  sub_20A4342F4((uint64_t)v17, a6 + 32);
  sub_20A4342F4((uint64_t)v16, a6 + 72);
  sub_20A4342F4((uint64_t)v15, a6 + 112);
  *(void *)(a6 + 152) = a4;
  *(void *)(a6 + 160) = a5;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  id v13 = a5;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return a6;
}

uint64_t sub_20A780ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v36 = type metadata accessor for WelcomeModelProvider();
  uint64_t v37 = &off_26BE695D8;
  v35[0] = a1;
  uint64_t v33 = type metadata accessor for WelcomeViewRenderer();
  uint64_t v34 = &off_26BE61450;
  v32[0] = a2;
  uint64_t v30 = type metadata accessor for WelcomeViewLayoutAttributesFactory();
  uint64_t v31 = &off_26BE623B0;
  v29[0] = a3;
  type metadata accessor for WelcomeViewAnimator();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  double v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)&v29[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  double v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (void *)((char *)&v29[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
  uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  double v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (void *)((char *)&v29[-1] - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
  uint64_t v26 = sub_20A780D14(*v14, *v19, *v24, a4, a5, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return v26;
}

void sub_20A781184()
{
  if (!qword_26763DD98)
  {
    unint64_t v0 = sub_20A8C5D90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DD98);
    }
  }
}

uint64_t sub_20A7811DC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A781214(uint64_t a1)
{
  return sub_20A72FD54(a1, v1);
}

uint64_t sub_20A78121C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A781254()
{
  sub_20A857624(v0);
}

uint64_t sub_20A78125C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A7812A4()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_20A794128(319);
    if (v1 <= 0x3F)
    {
      sub_20A79415C(319);
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_20A781408@<X0>(uint64_t a1@<X8>)
{
  v124[1] = a1;
  uint64_t v139 = sub_20A8C3D00();
  unint64_t v167 = *(char **)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  uint64_t v130 = (char *)v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v138 = (uint64_t)v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v146 = (uint64_t)v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v137 = (char *)v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v136 = (char *)v124 - v10;
  uint64_t v147 = sub_20A8C2800();
  uint64_t v166 = *(char **)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  CGRect v129 = (char *)v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v132 = (char *)v124 - v13;
  uint64_t v14 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v148 = (uint64_t)v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v165);
  double v17 = (char *)v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v19 = v18;
  int64_t v161 = *(void (***)(char *, uint64_t))(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v164 = (char *)v124 - v23;
  sub_20A5123C0();
  uint64_t v159 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v158 = (char *)v124 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v153 = (uint64_t)v124 - v27;
  uint64_t v169 = (void (**)(char *))MEMORY[0x263F7E0A8];
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v29 = v28;
  uint64_t v30 = *(char ***)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v157 = (char *)v124 - v31;
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v33 = v32;
  unint64_t v163 = *(void (***)(void, void))(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)v124 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v156 = (char *)v124 - v37;
  sub_20A42D51C();
  uint64_t v39 = v38 - 8;
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)v124 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v43 = MEMORY[0x270FA5388](v42);
  uint64_t v160 = (uint64_t)v124 - v44;
  unint64_t v168 = v30;
  uint64_t v45 = v30[2];
  uint64_t v155 = v30 + 2;
  uint64_t v154 = v45;
  ((void (*)(char *, uint64_t, uint64_t, double))v45)(v41, v1, v29, v43);
  uint64_t v46 = sub_20A794C90((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, (uint64_t (*)(uint64_t, void *))v169);
  sub_20A8CE840();
  *(double *)&v41[*(int *)(v39 + 44)] = v170;
  uint64_t v47 = v160;
  sub_20A7974A8((uint64_t)v41, v160, (uint64_t (*)(void))sub_20A42D51C);
  uint64_t v48 = (uint64_t *)(v47 + *(int *)(v39 + 44));
  uint64_t v49 = *v48;
  sub_20A8CE8A0();
  if (v49 != *(void *)&v170)
  {
    uint64_t v169 = (void (**)(char *))(v163 + 2);
    uint64_t v149 = (void (**)(char *, uint64_t))(v168 + 1);
    unint64_t v168 = (char **)(v163 + 1);
    uint64_t v162 = (void (**)(char *, char *, uint64_t))(v161 + 4);
    unint64_t v163 = (void (**)(void, void))(v161 + 2);
    ++v161;
    int64_t v145 = (uint64_t *)(v166 + 56);
    double v134 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48);
    double v126 = (void (**)(char *, uint64_t, uint64_t))(v166 + 32);
    uint64_t v125 = (void (**)(char *))(v166 + 8);
    double v128 = (void (**)(char *, uint64_t, uint64_t))(v167 + 16);
    double v127 = (void (**)(char *, uint64_t))(v167 + 8);
    long long v131 = (void *)MEMORY[0x263F8EE78];
    CGFloat v135 = (void *)MEMORY[0x263F8EE78];
    uint64_t v50 = v160;
    uint64_t v152 = v29;
    uint64_t v151 = v46;
    uint64_t v144 = v17;
    uint64_t v150 = v48;
    uint64_t v143 = v21;
    uint64_t v142 = v35;
    while (1)
    {
      unint64_t v167 = (char *)sub_20A8CE8C0();
      uint64_t v66 = *v169;
      uint64_t v67 = v50;
      uint64_t v68 = v156;
      (*v169)(v156);
      ((void (*)(double *, void))v167)(&v170, 0);
      uint64_t v69 = v157;
      ((void (*)(char *, uint64_t, uint64_t))v154)(v157, v67, v29);
      sub_20A8CE8B0();
      (*v149)(v69, v29);
      uint64_t v70 = (uint64_t)v158;
      unint64_t v167 = (char *)v66;
      ((void (*)(char *, char *, uint64_t))v66)(v158, v68, v33);
      sub_20A794C90(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
      sub_20A8CE840();
      uint64_t v166 = *v168;
      ((void (*)(char *, uint64_t))v166)(v68, v33);
      uint64_t v71 = v159;
      *(double *)(v70 + *(int *)(v159 + 36)) = v170;
      uint64_t v72 = v153;
      sub_20A7974A8(v70, v153, (uint64_t (*)(void))sub_20A5123C0);
      uint64_t v73 = (uint64_t *)(v72 + *(int *)(v71 + 36));
      uint64_t v74 = *v73;
      sub_20A8CE8A0();
      if (v74 != *(void *)&v170) {
        break;
      }
LABEL_25:
      sub_20A7978D4(v72, (uint64_t (*)(void))sub_20A5123C0);
      uint64_t v65 = *v150;
      uint64_t v50 = v160;
      uint64_t v29 = v152;
      sub_20A8CE8A0();
      if (v65 == *(void *)&v170) {
        goto LABEL_3;
      }
    }
    uint64_t v75 = (uint64_t)v144;
    uint64_t v76 = v143;
    uint64_t v77 = v142;
    while (1)
    {
      uint64_t v79 = (void (*)(double *, void))sub_20A8CE8C0();
      uint64_t v80 = v164;
      ((void (*)(char *))*v163)(v164);
      v79(&v170, 0);
      ((void (*)(char *, uint64_t, uint64_t))v167)(v77, v72, v33);
      sub_20A8CE8B0();
      ((void (*)(char *, uint64_t))v166)(v77, v33);
      (*v162)(v76, v80, v19);
      sub_20A8C8330();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 1) {
        break;
      }
      (*v161)(v76, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t v78 = *v73;
      sub_20A8CE8A0();
      if (v78 == *(void *)&v170) {
        goto LABEL_25;
      }
    }
    if (EnumCaseMultiPayload == 2)
    {
LABEL_32:
      (*v161)(v76, v19);
      goto LABEL_29;
    }
    uint64_t v82 = v148;
    sub_20A7974A8(v75, v148, type metadata accessor for StockListStockModel);
    uint64_t v141 = type metadata accessor for StockViewModel();
    uint64_t v83 = v82 + *(int *)(v141 + 20);
    uint64_t v84 = v146;
    sub_20A797934(v83, v146, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v85 = sub_20A8C3E10();
    uint64_t v140 = *(void *)(v85 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v84, 1, v85) == 1)
    {
      sub_20A7978D4(v84, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v86 = (uint64_t)v136;
      uint64_t v140 = *v145;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v140)(v136, 1, 1, v147);
    }
    else
    {
      uint64_t v133 = v85;
      uint64_t v87 = v136;
      sub_20A8C3DA0();
      uint64_t v86 = (uint64_t)v87;
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v146, v133);
      uint64_t v88 = v87;
      uint64_t v89 = v147;
      uint64_t v140 = *v145;
      ((void (*)(char *, void, uint64_t, uint64_t))v140)(v88, 0, 1, v147);
      if ((*v134)(v86, 1, v89) != 1)
      {
        (*v126)(v132, v86, v89);
        sub_20A8C2770();
        double v91 = v90;
        uint64_t v92 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v92 = sub_20A46D5E8(0, v92[2] + 1, 1, v92);
        }
        unint64_t v94 = v92[2];
        unint64_t v93 = v92[3];
        unint64_t v95 = v94 + 1;
        if (v94 >= v93 >> 1)
        {
          uint64_t v112 = sub_20A46D5E8((void *)(v93 > 1), v94 + 1, 1, v92);
          unint64_t v95 = v94 + 1;
          uint64_t v92 = v112;
        }
        v92[2] = v95;
        long long v131 = v92;
        *(double *)&v92[v94 + 4] = fabs(v91);
        (*v125)(v132);
        goto LABEL_42;
      }
    }
    sub_20A7978D4(v86, (uint64_t (*)(void))sub_20A42D040);
LABEL_42:
    uint64_t v96 = v138;
    sub_20A797934(v148 + *(int *)(v141 + 24), v138, (uint64_t (*)(void))sub_20A609C6C);
    uint64_t v97 = type metadata accessor for StockSparklineViewModel(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 48))(v96, 1, v97) == 1)
    {
      sub_20A7978D4(v96, (uint64_t (*)(void))sub_20A609C6C);
      uint64_t v98 = (uint64_t)v137;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v140)(v137, 1, 1, v147);
LABEL_45:
      sub_20A7978D4(v148, type metadata accessor for StockListStockModel);
      (*v161)(v76, v19);
      sub_20A7978D4(v98, (uint64_t (*)(void))sub_20A42D040);
      goto LABEL_29;
    }
    uint64_t v99 = v96 + *(int *)(v97 + 32);
    uint64_t v100 = v130;
    (*v128)(v130, v99, v139);
    sub_20A7978D4(v96, type metadata accessor for StockSparklineViewModel);
    uint64_t v101 = v137;
    sub_20A8C3C50();
    uint64_t v102 = v100;
    uint64_t v98 = (uint64_t)v101;
    (*v127)(v102, v139);
    uint64_t v103 = v101;
    uint64_t v104 = v147;
    ((void (*)(char *, void, uint64_t, uint64_t))v140)(v103, 0, 1, v147);
    if ((*v134)(v98, 1, v104) == 1) {
      goto LABEL_45;
    }
    (*v126)(v129, v98, v147);
    sub_20A8C2770();
    double v106 = v105;
    uint64_t v107 = v135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v107 = sub_20A46D5E8(0, v107[2] + 1, 1, v107);
    }
    uint64_t v108 = v107;
    unint64_t v109 = v107[2];
    CGFloat v135 = v108;
    unint64_t v110 = v108[3];
    if (v109 >= v110 >> 1) {
      CGFloat v135 = sub_20A46D5E8((void *)(v110 > 1), v109 + 1, 1, v135);
    }
    uint64_t v111 = v135;
    v135[2] = v109 + 1;
    *(double *)&v111[v109 + 4] = fabs(v106);
    (*v125)(v129);
    sub_20A7978D4(v148, type metadata accessor for StockListStockModel);
    goto LABEL_32;
  }
  CGFloat v135 = (void *)MEMORY[0x263F8EE78];
  long long v131 = (void *)MEMORY[0x263F8EE78];
  uint64_t v50 = v160;
LABEL_3:
  sub_20A7978D4(v50, (uint64_t (*)(void))sub_20A42D51C);
  sub_20A50D384();
  uint64_t v51 = (double *)v131;
  swift_bridgeObjectRetain();
  sub_20A8CE650();
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)&v170 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_76;
  }
  if (v170 <= -2147483650.0)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (v170 >= 2147483650.0)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v53 = (double *)v135;
  swift_bridgeObjectRetain();
  sub_20A8CE650();
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)&v170 & 0x7FF0000000000000) == 0)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (v170 <= -2147483650.0)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  if (v170 >= 2147483650.0)
  {
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  uint64_t v54 = *((void *)v51 + 2);
  if (!v54)
  {
    double v60 = 0.0;
    goto LABEL_52;
  }
  double v55 = v51[4];
  uint64_t v56 = v54 - 1;
  if (v54 != 1)
  {
    uint64_t v57 = v51 + 5;
    do
    {
      double v58 = *v57++;
      double v59 = v58;
      if (v58 < v55) {
        double v55 = v59;
      }
      --v56;
    }
    while (v56);
  }
  if ((~*(void *)&v55 & 0x7FF0000000000000) == 0) {
    goto LABEL_91;
  }
  if (v55 <= -2147483650.0) {
    goto LABEL_81;
  }
  if (v55 >= 2147483650.0)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  double v60 = v51[4];
  uint64_t v61 = v54 - 1;
  if (v61)
  {
    uint64_t v62 = v51 + 5;
    do
    {
      double v63 = *v62++;
      double v64 = v63;
      if (v60 < v63) {
        double v60 = v64;
      }
      --v61;
    }
    while (v61);
  }
LABEL_52:
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)&v60 & 0x7FF0000000000000) == 0)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  if (v60 <= -2147483650.0)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  if (v60 >= 2147483650.0)
  {
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  uint64_t v113 = *((void *)v53 + 2);
  if (!v113)
  {
    double v119 = 0.0;
    goto LABEL_71;
  }
  double v114 = v53[4];
  uint64_t v115 = v113 - 1;
  if (v113 != 1)
  {
    double v116 = v53 + 5;
    do
    {
      double v117 = *v116++;
      double v118 = v117;
      if (v117 < v114) {
        double v114 = v118;
      }
      --v115;
    }
    while (v115);
  }
  if ((~*(void *)&v114 & 0x7FF0000000000000) == 0) {
    goto LABEL_92;
  }
  if (v114 <= -2147483650.0) {
    goto LABEL_86;
  }
  if (v114 >= 2147483650.0)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  double v119 = v53[4];
  uint64_t v120 = v113 - 1;
  if (v120)
  {
    uint64_t v121 = v53 + 5;
    do
    {
      double v122 = *v121++;
      double v123 = v122;
      if (v119 < v122) {
        double v119 = v123;
      }
      --v120;
    }
    while (v120);
  }
LABEL_71:
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)&v119 & 0x7FF0000000000000) == 0)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (v119 > -2147483650.0)
  {
    if (v119 < 2147483650.0) {
      return sub_20A8C6EB0();
    }
    goto LABEL_90;
  }
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
  return result;
}

uint64_t sub_20A782880(uint64_t a1)
{
  sub_20A4AE540();
  MEMORY[0x270FA5388](v2 - 8);
  double v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v47 = v4;
  uint64_t v38 = *(void (***)(char *, uint64_t))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v37 - v13;
  sub_20A42D51C();
  uint64_t v16 = v15 - 8;
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x263F8EE78];
  uint64_t v40 = (void (**)(char *, uint64_t))v12;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  uint64_t v45 = v12 + 16;
  v44(v14, a1, v11, v17);
  sub_20A794C90((unint64_t *)&unk_26AC6ACD0, (unint64_t *)&qword_26AC6ACF0, v9);
  sub_20A8CE4B0();
  uint64_t v20 = &v19[*(int *)(v16 + 44)];
  uint64_t v21 = sub_20A794C90((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v9);
  uint64_t v22 = *(void *)v20;
  sub_20A8CE8A0();
  if (v22 != v48[0])
  {
    ++v40;
    uint64_t v41 = (void (**)(char *))(v38 + 2);
    uint64_t v23 = (void (**)(char *, char *, uint64_t))(v38 + 4);
    ++v38;
    uint64_t v39 = v23;
    uint64_t v42 = v21;
    uint64_t v24 = v47;
    do
    {
      uint64_t v25 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      (*v41)(v8);
      v25(v48, 0);
      ((void (*)(char *, char *, uint64_t))v44)(v14, v19, v11);
      sub_20A8CE8B0();
      (*v40)(v14, v11);
      uint64_t v26 = v20;
      uint64_t v27 = v19;
      uint64_t v28 = v14;
      uint64_t v29 = v8;
      uint64_t v30 = v46;
      (*v39)(v46, v29, v24);
      swift_getKeyPath();
      uint64_t v31 = v11;
      uint64_t v32 = v43;
      swift_getAtKeyPath();
      swift_release();
      uint64_t v33 = v30;
      uint64_t v8 = v29;
      uint64_t v14 = v28;
      uint64_t v19 = v27;
      uint64_t v20 = v26;
      (*v38)(v33, v24);
      uint64_t v34 = (uint64_t)v32;
      uint64_t v11 = v31;
      sub_20A4AC0CC(v34);
      uint64_t v35 = *(void *)v26;
      sub_20A8CE8A0();
    }
    while (v35 != v48[0]);
  }
  sub_20A7978D4((uint64_t)v19, (uint64_t (*)(void))sub_20A42D51C);
  return v49;
}

BOOL sub_20A782D24()
{
  uint64_t v1 = sub_20A8C40E0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  __swift_project_boxed_opaque_existential_1((void *)(v5 + 32), *(void *)(v5 + 56));
  sub_20A8C3600();
  uint64_t v6 = sub_20A8C40B0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v7 = *(void *)(v6 + 16);
  swift_bridgeObjectRelease();
  return v7 == 0;
}

uint64_t sub_20A782E40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v91 = *v1;
  sub_20A42C470(0);
  uint64_t v82 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v77 = (uint64_t)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for StockListToolbarModel();
  MEMORY[0x270FA5388](v88);
  uint64_t v89 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v78 = (uint64_t)&v69 - v8;
  uint64_t v81 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v81);
  uint64_t v80 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v79 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v87 = v12;
  uint64_t v85 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v84 = (char *)&v69 - v13;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v86 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v83 = v16;
  uint64_t v90 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C3F00();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for StockListSelectionModel();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v23 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v69 - v27;
  sub_20A797934(a1, (uint64_t)&v69 - v27, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v28, 2, v19);
  if (v29)
  {
    if (v29 == 1)
    {
      uint64_t v30 = MEMORY[0x2105289B0](v2 + 2);
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = (uint64_t)v89;
        swift_storeEnumTagMultiPayload();
        sub_20A7430E8(v32, v31, v91, (uint64_t)&off_26BE6E190);
        swift_unknownObjectRelease();
        sub_20A7978D4(v32, (uint64_t (*)(void))type metadata accessor for StockListToolbarModel);
      }
    }
    return sub_20A78F354(a1);
  }
  else
  {
    uint64_t v70 = v24;
    uint64_t v71 = (uint64_t)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v72 = v18;
    uint64_t v75 = v19;
    uint64_t v76 = a1;
    uint64_t v74 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v28, v19);
    sub_20A8C8BE0();
    uint64_t v73 = v2;
    uint64_t v92 = v93;
    uint64_t v34 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v34);
    uint64_t v35 = v84;
    sub_20A8C9490();
    swift_release();
    sub_20A8C3E20();
    uint64_t v37 = (uint64_t)v86;
    uint64_t v36 = v87;
    sub_20A8CBA60();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v36);
    uint64_t v38 = v90;
    uint64_t v39 = v83;
    uint64_t v40 = v22;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v37, 1, v83) == 1)
    {
      sub_20A7978D4(v37, (uint64_t (*)(void))sub_20A42D908);
      uint64_t v41 = v73;
      uint64_t v42 = MEMORY[0x2105289B0](v73 + 2);
      uint64_t v43 = v91;
      if (v42)
      {
        uint64_t v44 = v42;
        uint64_t v45 = (uint64_t)v89;
        swift_storeEnumTagMultiPayload();
        sub_20A7430E8(v45, v44, v43, (uint64_t)&off_26BE6E190);
        swift_unknownObjectRelease();
        uint64_t v42 = sub_20A7978D4(v45, (uint64_t (*)(void))type metadata accessor for StockListToolbarModel);
      }
      MEMORY[0x270FA5388](v42);
      *(&v69 - 2) = (uint64_t)v41;
      *(&v69 - 1) = (uint64_t)v22;
      sub_20A8C6670();
      sub_20A44D17C();
      uint64_t v46 = (void *)sub_20A8CEBE0();
      uint64_t v47 = v71;
      sub_20A797934(v76, v71, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
      unint64_t v48 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = *(void *)(v43 + 80);
      *(void *)(v49 + 24) = *(void *)(v43 + 88);
      sub_20A7974A8(v47, v49 + v48, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
      *(void *)(v49 + ((v25 + v48 + 7) & 0xFFFFFFFFFFFFFFF8)) = v41;
      swift_retain();
      sub_20A8C6520();
      swift_release();
      swift_release();

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v40, v75);
    }
    else
    {
      uint64_t v50 = v73;
      uint64_t v51 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v72, v37, v39);
      uint64_t v52 = (uint64_t)v80;
      sub_20A8C8330();
      if (swift_getEnumCaseMultiPayload())
      {
        sub_20A7978D4(v52, type metadata accessor for StockListModel);
        uint64_t v53 = MEMORY[0x2105289B0](v50 + 2);
        uint64_t v55 = v75;
        uint64_t v54 = v76;
        uint64_t v56 = v91;
        uint64_t v57 = v74;
        if (v53)
        {
          uint64_t v58 = v53;
          uint64_t v59 = v38;
          uint64_t v60 = (uint64_t)v89;
          swift_storeEnumTagMultiPayload();
          sub_20A7430E8(v60, v58, v56, (uint64_t)&off_26BE6E190);
          swift_unknownObjectRelease();
          uint64_t v61 = v60;
          uint64_t v38 = v59;
          uint64_t v51 = v72;
          sub_20A7978D4(v61, (uint64_t (*)(void))type metadata accessor for StockListToolbarModel);
        }
      }
      else
      {
        uint64_t v62 = v39;
        uint64_t v63 = v79;
        sub_20A7974A8(v52, v79, type metadata accessor for StockListStockModel);
        uint64_t v64 = type metadata accessor for StockViewModel();
        uint64_t v65 = v77;
        sub_20A797934(v63 + *(int *)(v64 + 20), v77, (uint64_t (*)(void))sub_20A42C470);
        uint64_t v55 = v75;
        uint64_t v54 = v76;
        uint64_t v66 = v91;
        uint64_t v57 = v74;
        if (qword_26AC692B8 != -1) {
          swift_once();
        }
        swift_getWitnessTable();
        sub_20A8C41C0();
        uint64_t v67 = v78;
        sub_20A87AAC0(v65, v93, v78);
        uint64_t v68 = MEMORY[0x2105289B0](v50 + 2);
        if (v68)
        {
          sub_20A7430E8(v67, v68, v66, (uint64_t)&off_26BE6E190);
          swift_unknownObjectRelease();
        }
        sub_20A7978D4(v67, (uint64_t (*)(void))type metadata accessor for StockListToolbarModel);
        sub_20A7978D4(v79, type metadata accessor for StockListStockModel);
        uint64_t v39 = v62;
        uint64_t v38 = v90;
        uint64_t v51 = v72;
      }
      sub_20A78F354(v54);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v51, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v40, v55);
    }
  }
}

uint64_t sub_20A7838D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  (*(void (**)(uint64_t, uint64_t))(v1 + 48))(v2, v1);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v2;
  v4[3] = v1;
  v4[4] = v3;
  uint64_t v5 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
  sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v5);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20A783A64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v65 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_20A8C72A0();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v54 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C6BF0();
  uint64_t v59 = *(void *)(v6 - 8);
  *(void *)&long long v60 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_20A8C40E0();
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C3410();
  uint64_t v66 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = *(void **)((char *)v0 + *(void *)(v2 + 120));
  sub_20A4821E4(&v70);
  uint64_t v57 = v73;
  __swift_project_boxed_opaque_existential_1(&v70, v72);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = v2;
  uint64_t v19 = v15;
  uint64_t v63 = *(void *)(v18 + 80);
  v17[2] = v63;
  uint64_t v61 = *(void *)(v18 + 88);
  v17[3] = v61;
  v17[4] = v16;
  sub_20A8CBEC0();
  swift_release();
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
  __swift_project_boxed_opaque_existential_1(v19 + 4, v19[7]);
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v64);
  uint64_t v20 = v66;
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  uint64_t v22 = v53;
  uint64_t v64 = (uint64_t)v14;
  v21(v53, v14, v10);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t))(v20 + 88);
  uint64_t v62 = v10;
  int v24 = v23(v22, v10);
  int v25 = *MEMORY[0x263F7AB90];
  uint64_t v57 = v15 + 4;
  if (v24 == v25)
  {
    uint64_t v26 = (unsigned int *)MEMORY[0x263F7A210];
LABEL_7:
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, *v26, v56);
    uint64_t v27 = v58;
    sub_20A8C6BE0();
    sub_20A794190(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v28 = sub_20A8C4620();
    uint64_t v29 = *(void *)(v28 - 8);
    unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x263F24D40], v28);
    sub_20A795AFC(&qword_26AC699B8, MEMORY[0x263F79D48]);
    uint64_t v32 = v60;
    sub_20A8C4940();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v32);
    uint64_t v33 = (void *)((char *)v1 + *(void *)(*v1 + 184));
    uint64_t v34 = v33[3];
    uint64_t v35 = v33[4];
    __swift_project_boxed_opaque_existential_1(v33, v34);
    uint64_t v36 = (uint64_t)v65;
    AttributionProviderType.source.getter(v34, v35);
    uint64_t v37 = v33[3];
    uint64_t v38 = v33[4];
    __swift_project_boxed_opaque_existential_1(v33, v37);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    uint64_t v39 = swift_allocObject();
    swift_weakInit();
    uint64_t v40 = (void *)swift_allocObject();
    uint64_t v41 = v63;
    uint64_t v42 = v61;
    v40[2] = v63;
    v40[3] = v42;
    v40[4] = v39;
    uint64_t v43 = (void *)sub_20A8C6450();
    sub_20A8C5DC0();
    swift_release();
    swift_release();

    __swift_project_boxed_opaque_existential_1(&v70, v72);
    sub_20A8C59C0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    __swift_project_boxed_opaque_existential_1(v57, v19[7]);
    sub_20A795AFC(&qword_26AC72458, (void (*)(uint64_t))type metadata accessor for StockListDataManager);
    sub_20A8C3670();
    __swift_project_boxed_opaque_existential_1(v19 + 9, v19[12]);
    sub_20A795AFC(&qword_26AC72460, (void (*)(uint64_t))type metadata accessor for StockListDataManager);
    sub_20A8C39C0();
    sub_20A8C9430();
    uint64_t v44 = *(void *)((char *)v1 + *(void *)(*v1 + 160) + 8);
    uint64_t ObjectType = swift_getObjectType();
    LOBYTE(v67) = 0;
    (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t))(v44 + 32))(&v70, &v67, ObjectType, v44);
    uint64_t v67 = v70;
    long long v60 = v71;
    long long v68 = v71;
    uint64_t v69 = v72;
    uint64_t v46 = v64;
    uint64_t v47 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 40))(&v67, v64, v36, v41, v42);
    swift_bridgeObjectRelease();
    uint64_t v70 = v47;
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    uint64_t v49 = (void *)swift_allocObject();
    v49[2] = v41;
    v49[3] = v42;
    v49[4] = v48;
    uint64_t v50 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v50);
    swift_retain();
    sub_20A8C8C00();
    swift_release();
    sub_20A7978D4(v36, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v46, v62);
    swift_release();
    return swift_release();
  }
  if (v24 == *MEMORY[0x263F7AB78])
  {
    uint64_t v26 = (unsigned int *)MEMORY[0x263F7A208];
    goto LABEL_7;
  }
  if (v24 == *MEMORY[0x263F7AB88])
  {
    uint64_t v26 = (unsigned int *)MEMORY[0x263F7A218];
    goto LABEL_7;
  }
  uint64_t result = sub_20A8CF750();
  __break(1u);
  return result;
}

uint64_t sub_20A7844F4(uint64_t a1)
{
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(*(void *)result + 232);
    uint64_t v30 = *(void *)(result + v7);
    sub_20A7975A0(0, (unint64_t *)&qword_26AC812D0, (uint64_t (*)(void))sub_20A795BE0, (uint64_t)&type metadata for StockListRefreshBlocker, MEMORY[0x263F7D288]);
    sub_20A795C34((unint64_t *)&unk_26AC812B0);
    swift_retain();
    sub_20A8CE840();
    uint64_t result = sub_20A8CE8A0();
    if (v26 & 1) != 0 || (v29)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = v24;
    uint64_t v9 = v27;
    int v10 = v28;
    int v11 = v25;
    swift_release();
    if (v11 == v10)
    {
      if (v8 == v9)
      {
        sub_20A784930(a1);
        swift_release();
        return swift_release();
      }
      if (qword_26AC675A8 == -1)
      {
LABEL_8:
        uint64_t v12 = sub_20A8C7DF0();
        __swift_project_value_buffer(v12, (uint64_t)qword_26AC9E888);
        swift_retain_n();
        uint64_t v13 = sub_20A8C7DD0();
        os_log_type_t v14 = sub_20A8CEA00();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          uint64_t v16 = swift_slowAlloc();
          uint64_t v23 = a1;
          uint64_t v24 = v16;
          *(_DWORD *)uint64_t v15 = 136315138;
          uint64_t v22 = v15 + 4;
          uint64_t v27 = *(void *)(v6 + v7);
          sub_20A795C34((unint64_t *)&unk_26AC812C0);
          uint64_t v17 = sub_20A8CF720();
          uint64_t v27 = sub_20A687610(v17, v18, &v24);
          a1 = v23;
          sub_20A8CF1C0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_20A414000, v13, v14, "Stock list update priceChangeDisplay will be queued while refresh is blocked by: %s", v15, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x210528850](v16, -1, -1);
          MEMORY[0x210528850](v15, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v19 = sub_20A8C3410();
        uint64_t v20 = *(void *)(v19 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v4, a1, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v4, 0, 1, v19);
        uint64_t v21 = v6 + *(void *)(*(void *)v6 + 248);
        swift_beginAccess();
        sub_20A796030((uint64_t)v4, v21, (uint64_t (*)(void))sub_20A79415C);
        swift_endAccess();
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_20A784930(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_20A8C8520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v20 - v9;
  sub_20A8C8BE0();
  sub_20A8C8C40();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D388], v4);
  sub_20A795AFC(&qword_26AC67740, MEMORY[0x263F7D390]);
  char v11 = sub_20A8CE210();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v12(v10, v4);
  if (v11)
  {
    sub_20A796DBC(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    uint64_t v15 = *(void *)(v3 + 80);
    uint64_t v14 = *(void *)(v3 + 88);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 56))(a1, v15, v14);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = swift_weakInit();
    MEMORY[0x270FA5388](v18);
    *(&v20 - 4) = v15;
    *(&v20 - 3) = v14;
    *(&v20 - 2) = v17;
    *(&v20 - 1) = v16;
    sub_20A796DBC(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v13 = sub_20A8C65E0();
    swift_release();
    swift_release();
  }
  return v13;
}

uint64_t sub_20A784C58(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A784CB8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A784CB8(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 96))(a1, *(void *)(*(void *)v1 + 80));
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
  sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v2);
  sub_20A8C8C00();
  return swift_release();
}

void sub_20A784DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v88 = a4;
  uint64_t v85 = a3;
  uint64_t v5 = sub_20A8CD2C0();
  uint64_t v86 = *(void *)(v5 - 8);
  uint64_t v87 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v77 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v76 = (char *)&v74 - v8;
  sub_20A7975A0(0, &qword_26AC6B1D8, (uint64_t (*)(void))sub_20A797608, (uint64_t)&type metadata for StockListOfflineModel, MEMORY[0x263F59BF0]);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v74 - v13;
  uint64_t v15 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v81 = *(void *)(v18 - 8);
  uint64_t v82 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v74 - v19;
  uint64_t v21 = sub_20A8C9B80();
  uint64_t v22 = *(char **)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v83 = v23;
  uint64_t v84 = (char *)&v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  char v26 = (void **)((char *)&v74 - v25);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v28 = Strong;
    char v29 = (void (*)(char *, uint64_t, uint64_t))*((void *)v22 + 2);
    uint64_t v80 = a1;
    uint64_t v79 = v22 + 16;
    uint64_t v78 = v29;
    v29((char *)v26, a1, v21);
    int v30 = (*((uint64_t (**)(void **, uint64_t))v22 + 11))(v26, v21);
    if (v30 == *MEMORY[0x263F7D960])
    {
      (*((void (**)(void **, uint64_t))v22 + 12))(v26, v21);
      uint64_t v31 = *v26;
      swift_retain();
      id v32 = v31;
      sub_20A8C9430();
      swift_release();
      sub_20A8CD380();
      uint64_t v34 = v86;
      uint64_t v33 = v87;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v11, 1, v87) == 1)
      {
        uint64_t v35 = MEMORY[0x2105289B0](v28 + 16);
        uint64_t v36 = v85;
        uint64_t v37 = v80;
        if (v35)
        {
          uint64_t v38 = v35;
          uint64_t v39 = qword_267639C98;
          swift_retain();
          if (v39 != -1) {
            swift_once();
          }
          uint64_t v40 = __swift_project_value_buffer(v87, (uint64_t)qword_2676530F8);
          type metadata accessor for StockListInteractor();
          sub_20A7434F0(v40, v38);
          swift_unknownObjectRelease();
          swift_release();
        }
      }
      else
      {
        uint64_t v75 = v21;
        uint64_t v47 = (uint64_t)v77;
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v77, v11, v33);
        uint64_t v48 = MEMORY[0x2105289B0](v28 + 16);
        uint64_t v36 = v85;
        uint64_t v37 = v80;
        if (v48)
        {
          uint64_t v49 = v48;
          type metadata accessor for StockListInteractor();
          swift_retain();
          sub_20A7434F0(v47, v49);
          swift_release();
          swift_unknownObjectRelease();
        }
        uint64_t v50 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        swift_release();
        uint64_t v51 = (void *)swift_allocObject();
        uint64_t v52 = v88;
        v51[2] = v36;
        v51[3] = v52;
        v51[4] = v50;

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v47, v87);
        uint64_t v21 = v75;
      }
    }
    else
    {
      BOOL v41 = v30 == *MEMORY[0x263F7D958];
      uint64_t v77 = v22;
      if (v41)
      {
        uint64_t v75 = v21;
        swift_retain();
        sub_20A8C8BE0();
        uint64_t v90 = aBlock[0];
        uint64_t v42 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
        sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
        sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v42);
        sub_20A8C9490();
        swift_release();
        type metadata accessor for StockListModel(0);
        sub_20A42D40C();
        sub_20A795AFC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
        sub_20A8C9400();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v82);
        sub_20A8C9430();
        swift_release();
        sub_20A8CD380();
        uint64_t v44 = v86;
        uint64_t v43 = v87;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v14, 1, v87) == 1)
        {
          uint64_t v45 = MEMORY[0x2105289B0](v28 + 16);
          uint64_t v36 = v85;
          if (v45)
          {
            uint64_t v46 = v45;
            type metadata accessor for StockListInteractor();
            swift_retain();
            sub_20A743338(v46);
            swift_release();
            swift_unknownObjectRelease();
          }
          uint64_t v37 = v80;
          uint64_t v21 = v75;
          uint64_t v22 = v77;
          if (qword_26AC69360 != -1) {
            swift_once();
          }
          LOBYTE(aBlock[0]) = 2;
          swift_retain();
          sub_20A8C5AD0();
          swift_release();
          goto LABEL_33;
        }
        uint64_t v57 = (uint64_t)v76;
        (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v76, v14, v43);
        uint64_t v58 = MEMORY[0x2105289B0](v28 + 16);
        uint64_t v36 = v85;
        uint64_t v21 = v75;
        if (v58)
        {
          uint64_t v59 = v58;
          type metadata accessor for StockListInteractor();
          swift_retain();
          sub_20A7434F0(v57, v59);
          swift_release();
          swift_unknownObjectRelease();
        }
        uint64_t v60 = swift_allocObject();
        swift_beginAccess();
        swift_weakLoadStrong();
        swift_weakInit();
        swift_release();
        uint64_t v61 = (void *)swift_allocObject();
        uint64_t v62 = v88;
        v61[2] = v36;
        v61[3] = v62;
        v61[4] = v60;

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v57, v87);
        uint64_t v37 = v80;
      }
      else
      {
        if (v30 != *MEMORY[0x263F7D968])
        {
          sub_20A8CF520();
          __break(1u);
          return;
        }
        swift_retain();
        sub_20A8C8BE0();
        uint64_t v90 = aBlock[0];
        uint64_t v53 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
        sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
        sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v53);
        sub_20A8C9490();
        swift_release();
        type metadata accessor for StockListModel(0);
        sub_20A42D40C();
        sub_20A795AFC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
        sub_20A8C9400();
        (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v82);
        sub_20A8C9430();
        swift_release();
        sub_20A8C5D50();
        sub_20A782E40((uint64_t)v17);
        sub_20A7978D4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
        if (qword_26AC69360 != -1) {
          swift_once();
        }
        LOBYTE(aBlock[0]) = 2;
        swift_retain();
        sub_20A8C5AD0();
        swift_release();
        char v54 = sub_20A785C68();
        uint64_t v55 = MEMORY[0x2105289B0](v28 + 16);
        uint64_t v56 = v55;
        uint64_t v36 = v85;
        uint64_t v37 = v80;
        uint64_t v22 = v77;
        if (v54)
        {
          if (v55)
          {
            type metadata accessor for StockListInteractor();
            swift_retain();
            sub_20A743338(v56);
            swift_release();
            swift_unknownObjectRelease();
          }
          goto LABEL_33;
        }
        if (v55)
        {
          type metadata accessor for StockListInteractor();
          swift_retain();
          sub_20A743434(v56);
          swift_release();
          swift_unknownObjectRelease();
        }
        uint64_t v63 = *(void *)(*(void *)(v28 + *(void *)(*(void *)v28 + 120)) + 120);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v63 + 24);
        swift_unknownObjectRetain();
        v65(ObjectType, v63);
        swift_unknownObjectRelease();
        swift_release();
      }
      uint64_t v22 = v77;
    }
LABEL_33:
    id v66 = objc_msgSend(self, sel_sharedApplication);
    uint64_t v67 = v84;
    v78(v84, v37, v21);
    long long v68 = v22;
    unint64_t v69 = (v22[80] + 32) & ~(unint64_t)v22[80];
    unint64_t v70 = (v83 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = v88;
    *(void *)(v71 + 16) = v36;
    *(void *)(v71 + 24) = v72;
    (*((void (**)(unint64_t, char *, uint64_t))v68 + 4))(v71 + v69, v67, v21);
    *(void *)(v71 + v70) = v28;
    aBlock[4] = sub_20A79770C;
    aBlock[5] = v71;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4713FC;
    aBlock[3] = &block_descriptor_130;
    uint64_t v73 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v66, sel_su_performBlockAfterCATransactionCommits_, v73);
    _Block_release(v73);
    swift_release();
  }
}

uint64_t sub_20A785C68()
{
  uint64_t v80 = (void (*)(char *, uint64_t))type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v80);
  uint64_t v73 = (uint64_t)v72 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v74 = (char *)v72 - v3;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v75 = (uint64_t)v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A47113C();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v78 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v86 = (char *)v72 - v9;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v72 - v11;
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v77 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v85 = (char *)v72 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)v72 - v20;
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v23 = v22;
  uint64_t v87 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v88 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)v72 - v26;
  uint64_t v84 = *(void *)(v0 + 32);
  sub_20A8C8BE0();
  uint64_t v89 = v90;
  uint64_t v28 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
  uint64_t v30 = v29;
  uint64_t v31 = sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v28);
  uint64_t v83 = v30;
  uint64_t v32 = v31;
  sub_20A8C9490();
  swift_release();
  sub_20A8CBB90();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v34 = v21;
  uint64_t v35 = v15 + 8;
  uint64_t v36 = v87;
  uint64_t v82 = v14;
  v33(v34, v14);
  uint64_t v38 = v36 + 48;
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v37((uint64_t)v12, 1, v23) == 1)
  {
    uint64_t v79 = v36 + 48;
    uint64_t v80 = v33;
    uint64_t v81 = v37;
    sub_20A7978D4((uint64_t)v12, (uint64_t (*)(void))sub_20A47113C);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v27, v12, v23);
    sub_20A794C90(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    sub_20A8CE840();
    sub_20A8CE8A0();
    uint64_t v40 = v89;
    uint64_t v39 = v90;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v88, v27, v23);
    if (v39 == v40)
    {
      BOOL v41 = *(void (**)(char *, uint64_t))(v36 + 8);
      v41(v88, v23);
      v41(v27, v23);
      return 1;
    }
    uint64_t v81 = v37;
    v72[1] = v35;
    uint64_t v43 = v75;
    sub_20A6852BC(v75);
    sub_20A42D93C();
    uint64_t v45 = v44;
    uint64_t v46 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v43, 1, v44) == 1)
    {
      uint64_t v79 = v36 + 48;
      uint64_t v80 = v33;
      uint64_t v47 = *(void (**)(char *, uint64_t))(v36 + 8);
      v47(v88, v23);
      v47(v27, v23);
      sub_20A7978D4(v43, (uint64_t (*)(void))sub_20A42D908);
    }
    else
    {
      uint64_t v76 = v23;
      uint64_t v48 = v36;
      uint64_t v49 = (uint64_t)v74;
      sub_20A8C8330();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v43, v45);
      uint64_t v50 = v73;
      sub_20A797934(v49, v73, type metadata accessor for StockListModel);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v52 = type metadata accessor for StockListStockModel;
      if (EnumCaseMultiPayload)
      {
        uint64_t v53 = v88;
        if (EnumCaseMultiPayload != 1)
        {
          sub_20A7978D4(v49, type metadata accessor for StockListModel);
          unint64_t v69 = *(void (**)(char *, uint64_t))(v48 + 8);
          unint64_t v70 = v53;
          uint64_t v71 = v76;
          v69(v70, v76);
          v69(v27, v71);
          return 1;
        }
        uint64_t v52 = type metadata accessor for StockListModel;
      }
      else
      {
        uint64_t v53 = v88;
      }
      uint64_t v79 = v38;
      uint64_t v80 = v33;
      sub_20A7978D4(v50, v52);
      sub_20A7978D4(v49, type metadata accessor for StockListModel);
      char v54 = *(void (**)(char *, uint64_t))(v48 + 8);
      uint64_t v55 = v53;
      uint64_t v56 = v76;
      v54(v55, v76);
      v54(v27, v56);
      uint64_t v23 = v56;
    }
  }
  v72[2] = v32;
  uint64_t v76 = v23;
  sub_20A8C8BE0();
  uint64_t v89 = v90;
  uint64_t v57 = v85;
  sub_20A8C9490();
  swift_release();
  uint64_t v58 = (uint64_t)v86;
  uint64_t v59 = v82;
  sub_20A8CBB90();
  uint64_t v60 = v57;
  uint64_t v61 = v59;
  uint64_t v62 = v80;
  v80(v60, v59);
  BOOL v42 = 1;
  uint64_t v63 = v81;
  unsigned int v64 = v81(v58, 1, v23);
  sub_20A7978D4(v58, (uint64_t (*)(void))sub_20A47113C);
  if (v64 != 1)
  {
    sub_20A8C8BE0();
    uint64_t v89 = v90;
    uint64_t v65 = v61;
    id v66 = v77;
    sub_20A8C9490();
    swift_release();
    uint64_t v67 = (uint64_t)v78;
    sub_20A8CBB90();
    v62(v66, v65);
    BOOL v42 = v63(v67, 1, v76) != 1;
    sub_20A7978D4(v67, (uint64_t (*)(void))sub_20A47113C);
  }
  return v42;
}

uint64_t sub_20A786534(uint64_t a1)
{
  uint64_t v2 = sub_20A8C8520();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - v7;
  sub_20A7975A0(0, &qword_26AC6B1D8, (uint64_t (*)(void))sub_20A797608, (uint64_t)&type metadata for StockListOfflineModel, MEMORY[0x263F59BF0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v17 - v10;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A7977A4(a1, (uint64_t)v11);
    uint64_t v13 = sub_20A8CD2C0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13) == 1)
    {
      sub_20A797840((uint64_t)v11);
      sub_20A8C8BE0();
      sub_20A8C8C40();
      swift_release();
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7D380], v2);
      sub_20A795AFC(&qword_26AC67740, MEMORY[0x263F7D390]);
      char v14 = sub_20A8CE210();
      uint64_t v15 = *(void (**)(char *, uint64_t))(v3 + 8);
      v15(v5, v2);
      uint64_t v16 = ((uint64_t (*)(char *, uint64_t))v15)(v8, v2);
      if ((v14 & 1) == 0) {
        sub_20A783A64(v16);
      }
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_20A797840((uint64_t)v11);
    }
  }
  return result;
}

void sub_20A7867F4(uint64_t a1)
{
  sub_20A7975A0(0, &qword_26AC6B1D8, (uint64_t (*)(void))sub_20A797608, (uint64_t)&type metadata for StockListOfflineModel, MEMORY[0x263F59BF0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - v3;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_20A7977A4(a1, (uint64_t)v4);
    uint64_t v5 = sub_20A8CD2C0();
    int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
    sub_20A797840((uint64_t)v4);
    if (v6 == 1)
    {
      swift_retain();
      unint64_t v7 = sub_20A8C9420();
      if (v7 >> 62)
      {
        if (v7 >> 62 == 1)
        {
          swift_release();
          if (qword_26AC675A8 != -1) {
            swift_once();
          }
          uint64_t v8 = sub_20A8C7DF0();
          __swift_project_value_buffer(v8, (uint64_t)qword_26AC9E888);
          uint64_t v9 = sub_20A8C7DD0();
          os_log_type_t v10 = sub_20A8CEA00();
          if (os_log_type_enabled(v9, v10))
          {
            uint64_t v11 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v11 = 0;
            _os_log_impl(&dword_20A414000, v9, v10, "Stock list will not reattempt prewarm because it has already finished", v11, 2u);
            MEMORY[0x210528850](v11, -1, -1);
            swift_release();

            return;
          }
          goto LABEL_13;
        }
      }
      else
      {
        sub_20A6A0568((id)v7);
      }
      uint64_t v15 = swift_release();
      sub_20A783A64(v15);
      goto LABEL_16;
    }
    if (qword_26AC675A8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_20A8C7DF0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26AC9E888);
    uint64_t v9 = sub_20A8C7DD0();
    os_log_type_t v13 = sub_20A8CEA00();
    if (os_log_type_enabled(v9, v13))
    {
      char v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v14 = 0;
      _os_log_impl(&dword_20A414000, v9, v13, "Stock list will not reattempt prewarm because new state is offline", v14, 2u);
      MEMORY[0x210528850](v14, -1, -1);
    }
LABEL_13:

LABEL_16:
    swift_release();
  }
}

uint64_t sub_20A786AF4(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9B80();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = MEMORY[0x270FA5388](v2);
  int v6 = (id *)&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(id *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  int v7 = (*(uint64_t (**)(id *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x263F7D960])
  {
    (*(void (**)(id *, uint64_t))(v3 + 96))(v6, v2);

    sub_20A879550();
  }
  else
  {
    if (v7 != *MEMORY[0x263F7D958] && v7 != *MEMORY[0x263F7D968])
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
    sub_20A879490();
  }
  if (qword_26AC69360 != -1) {
    swift_once();
  }
  v10[15] = 0;
  swift_retain();
  sub_20A8C5AD0();
  return swift_release();
}

uint64_t sub_20A786D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v26 - v14;
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = MEMORY[0x2105289B0](result + 16);
    if (v21)
    {
      uint64_t v27 = *(void *)(*(void *)v20 + 120);
      uint64_t v28 = a3;
      uint64_t v22 = *(void *)(v20 + v27);
      uint64_t v29 = a4;
      uint64_t v30 = v21;
      __swift_project_boxed_opaque_existential_1((void *)(v22 + 32), *(void *)(v22 + 56));
      swift_retain();
      sub_20A8C3600();
      sub_20A8C40D0();
      uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
      v23(v15, v9);
      uint64_t v24 = sub_20A8C34C0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v20 + v27) + 32), *(void *)(*(void *)(v20 + v27) + 56));
      sub_20A8C3600();
      sub_20A8C4060();
      v23(v12, v9);
      uint64_t v25 = sub_20A8C3410();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 0, 1, v25);
      type metadata accessor for StockListInteractor();
      sub_20A74288C((uint64_t)v18, (uint64_t)v8, v30);
      swift_unknownObjectRelease();
      swift_release_n();
      sub_20A7978D4((uint64_t)v8, (uint64_t (*)(void))sub_20A79415C);
      return sub_20A7978D4((uint64_t)v18, (uint64_t (*)(void))sub_20A5726A4);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A787088()
{
  uint64_t v1 = v0;
  sub_20A797510(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v38 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = sub_20A8C9F40();
  v30[0] = *(void *)(ObjectType - 8);
  MEMORY[0x270FA5388](ObjectType);
  uint64_t v35 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C3410();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v37 = (char *)v30 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v30 - v15;
  uint64_t v17 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
  uint64_t v18 = *(void *)(v17 + 56);
  uint64_t v33 = v17;
  uint64_t v34 = (void *)(v17 + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v17 + 32), v18);
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v36);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v36 = (uint64_t)v16;
  v30[1] = v9 + 16;
  v21(v11, v16, v19);
  int v22 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v19);
  uint64_t v23 = *MEMORY[0x263F7AB90];
  if (v22 == v23)
  {
    uint64_t v23 = *MEMORY[0x263F7AB88];
  }
  else if (v22 != *MEMORY[0x263F7AB78])
  {
    uint64_t v23 = *MEMORY[0x263F7AB78];
    if (v22 != *MEMORY[0x263F7AB88])
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
      return result;
    }
  }
  uint64_t v32 = (void (*)(uint64_t, char *, uint64_t))v21;
  uint64_t v24 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v37, v23, v19);
  (*(void (**)(char *, void, uint64_t))(v30[0] + 104))(v35, *MEMORY[0x263F7DA50], ObjectType);
  uint64_t v25 = *(void *)(v1 + *(void *)(*(void *)v1 + 128));
  uint64_t v40 = sub_20A8C4990();
  uint64_t v41 = sub_20A795AFC((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
  uint64_t v39 = v25;
  long long v42 = 0u;
  long long v43 = 0u;
  char v44 = 1;
  sub_20A8C99D0();
  swift_allocObject();
  swift_retain();
  sub_20A8C99B0();
  uint64_t v35 = *(char **)(v1 + *(void *)(*(void *)v1 + 136) + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (qword_26AC6AC08 != -1) {
    swift_once();
  }
  __swift_project_boxed_opaque_existential_1(v34, *(void *)(v33 + 56));
  uint64_t v26 = (uint64_t)v38;
  sub_20A8C3600();
  uint64_t v27 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  v32(v26 + *(int *)(v27 + 20), v24, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
  swift_retain();
  sub_20A8C8CD0();
  swift_release_n();
  sub_20A7978D4(v26, (uint64_t (*)(void))sub_20A797510);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v20 + 8);
  v28(v24, v19);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v36, v19);
}

uint64_t sub_20A7876B0()
{
  uint64_t v17 = sub_20A8C7720();
  uint64_t v1 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C7710();
  uint64_t v4 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C6820();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v16 - v12;
  sub_20A7879B4((uint64_t)v16 - v12);
  v16[1] = *(void *)(v0 + *(void *)(*(void *)v0 + 128));
  sub_20A8CAA70();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7A648], v17);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  sub_20A8C7700();
  sub_20A795AFC((unint64_t *)&unk_26AC69B50, MEMORY[0x263F7A640]);
  uint64_t v14 = v18;
  sub_20A8C4940();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_20A7879B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8CABF0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CAA90();
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x263F7DE08])
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x263F79A58];
LABEL_9:
    uint64_t v9 = *v7;
    uint64_t v10 = sub_20A8C6820();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
    uint64_t v12 = a1;
    uint64_t v13 = v9;
    return v11(v12, v13, v10);
  }
  if (v6 == *MEMORY[0x263F7DE18] || v6 == *MEMORY[0x263F7DE20])
  {
    uint64_t v7 = (unsigned int *)MEMORY[0x263F79A48];
    goto LABEL_9;
  }
  if (v6 != *MEMORY[0x263F7DE10])
  {
    uint64_t v17 = *MEMORY[0x263F79A48];
    uint64_t v18 = sub_20A8C6820();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a1, v17, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v15 = sub_20A8CAA80();
  uint64_t v10 = sub_20A8C6820();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104);
  if (v15) {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F79A28];
  }
  else {
    uint64_t v16 = (unsigned int *)MEMORY[0x263F79A58];
  }
  uint64_t v13 = *v16;
  uint64_t v12 = a1;
  return v11(v12, v13, v10);
}

uint64_t sub_20A787BE0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_20A8CA320();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = (char *)swift_allocObject();
  *((void *)v9 + 2) = *(void *)(v3 + 80);
  *((void *)v9 + 3) = *(void *)(v3 + 88);
  *((void *)v9 + 4) = v7;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[v8], (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  sub_20A8C48E0();
  swift_release();
  return swift_release();
}

uint64_t sub_20A787DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v4 = sub_20A8C2800();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v74 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C6EC0();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v71 = (uint64_t)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  MEMORY[0x270FA5388](v9);
  long long v68 = (char *)v51 - v10;
  uint64_t v11 = sub_20A8C7760();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v66 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CABF0();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v58 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C6940();
  uint64_t v63 = *(void *)(v15 - 8);
  uint64_t v64 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v61 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C6B00();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v51 - v22;
  uint64_t v54 = sub_20A8C40E0();
  uint64_t v24 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v26 = (char *)v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_20A8C6AF0();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v52 = v5;
    uint64_t v53 = v4;
    uint64_t v29 = *(void *)(*(void *)result + 120);
    v51[2] = result;
    uint64_t v30 = *(void *)(result + v29);
    v51[1] = a1;
    __swift_project_boxed_opaque_existential_1((void *)(v30 + 32), *(void *)(v30 + 56));
    sub_20A8C3600();
    char v31 = sub_20A8C4040();
    uint64_t v32 = (unsigned int *)MEMORY[0x263F79CB8];
    if ((v31 & 1) == 0) {
      uint64_t v32 = (unsigned int *)MEMORY[0x263F79CB0];
    }
    (*(void (**)(char *, void, uint64_t))(v18 + 104))(v23, *v32, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v23, v17);
    uint64_t v33 = v55;
    sub_20A8C6AE0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v54);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
    sub_20A794190(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v34 = sub_20A8C4620();
    uint64_t v35 = *(void *)(v34 - 8);
    unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, *MEMORY[0x263F24D48], v34);
    sub_20A795AFC(&qword_26AC699A0, MEMORY[0x263F79CA8]);
    uint64_t v38 = v57;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v38);
    uint64_t v39 = v58;
    sub_20A8CA2F0();
    int v40 = (*(uint64_t (**)(char *, uint64_t))(v59 + 88))(v39, v60);
    if (v40 == *MEMORY[0x263F7DE08])
    {
      uint64_t v41 = (unsigned int *)MEMORY[0x263F7A688];
    }
    else
    {
      uint64_t v41 = (unsigned int *)MEMORY[0x263F7A690];
      if (v40 != *MEMORY[0x263F7DE18] && v40 != *MEMORY[0x263F7DE20] && v40 != *MEMORY[0x263F7DE10])
      {
        uint64_t result = sub_20A8CF520();
        __break(1u);
        return result;
      }
    }
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v62, *v41, v66);
    long long v42 = v61;
    sub_20A8C6930();
    sub_20A795AFC((unint64_t *)&unk_26AC69940, MEMORY[0x263F79B20]);
    uint64_t v43 = v64;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v43);
    sub_20A8C8BE0();
    uint64_t v75 = v76;
    char v44 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
    sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v44);
    uint64_t v45 = v68;
    sub_20A8C9490();
    swift_release();
    uint64_t v46 = v71;
    sub_20A781408(v71);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v70);
    sub_20A795AFC(&qword_26AC676F0, MEMORY[0x263F79F38]);
    uint64_t v47 = v73;
    sub_20A8C45B0();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v46, v47);
    sub_20A8C7040();
    uint64_t v48 = v74;
    sub_20A8CA310();
    sub_20A795AFC(&qword_26AC69A50, MEMORY[0x263F7A040]);
    sub_20A8C4570();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v52 + 8);
    uint64_t v50 = v53;
    v49(v48, v53);
    sub_20A8CA300();
    sub_20A8C4580();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v49)(v48, v50);
  }
  return result;
}

uint64_t sub_20A7888E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v37 = *v2;
  sub_20A796E0C(0, (unint64_t *)&unk_26AC6A168, MEMORY[0x263F7D640]);
  uint64_t v5 = v4;
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v36 = (char *)&v30 - v6;
  uint64_t v7 = type metadata accessor for StockListStockModel(0);
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v33 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v34 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v39 = (uint64_t)&v30 - v10;
  uint64_t v11 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  sub_20A8C9100();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result)
  {
    if (result == 1) {
      return sub_20A7978D4((uint64_t)v13, type metadata accessor for StockListModel);
    }
  }
  else
  {
    char v31 = type metadata accessor for StockListStockModel;
    uint64_t v20 = v39;
    sub_20A7974A8((uint64_t)v13, v39, type metadata accessor for StockListStockModel);
    uint64_t v32 = *(uint64_t *)((char *)v2 + *(void *)(*v2 + 128));
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = v20;
    uint64_t v23 = v34;
    sub_20A797934(v22, v34, type metadata accessor for StockListStockModel);
    uint64_t v24 = v38;
    uint64_t v25 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v36, v35, v5);
    unint64_t v26 = (*(unsigned __int8 *)(v33 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    unint64_t v27 = (v8 + *(unsigned __int8 *)(v24 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v28 = (char *)swift_allocObject();
    uint64_t v29 = v37;
    *((void *)v28 + 2) = *(void *)(v37 + 80);
    *((void *)v28 + 3) = *(void *)(v29 + 88);
    *((void *)v28 + 4) = v21;
    sub_20A7974A8(v23, (uint64_t)&v28[v26], v31);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v28[v27], v25, v5);
    swift_retain();
    sub_20A8C48E0();
    swift_release();
    sub_20A7978D4(v39, type metadata accessor for StockListStockModel);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A788D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v146 = a4;
  uint64_t v155 = a1;
  sub_20A42D93C();
  uint64_t v135 = v5;
  uint64_t v133 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v138 = (char *)&v109 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v151 = v7;
  uint64_t v132 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v150 = (char *)&v109 - v8;
  uint64_t v136 = sub_20A8C6DE0();
  uint64_t v9 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  double v134 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_20A8C6B00();
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  double v117 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  double v118 = (char *)&v109 - v13;
  uint64_t v123 = sub_20A8C6AF0();
  uint64_t v122 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v121 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_20A8C40E0();
  uint64_t v147 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  double v116 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v156 = (char *)&v109 - v17;
  sub_20A484450(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v137 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_20A8C3D00();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  double v124 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A609C6C(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v145 = (uint64_t)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C2800();
  uint64_t v153 = *(void *)(v23 - 8);
  uint64_t v154 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v152 = (char *)&v109 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v144 = (uint64_t)&v109 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_20A8C6D20();
  uint64_t v140 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v139 = (char *)&v109 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20A8C6810();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v109 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = (char *)sub_20A8C4030();
  uint64_t v31 = *((void *)v148 - 1);
  MEMORY[0x270FA5388](v148);
  uint64_t v33 = (char *)&v109 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_20A8C3F00();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v109 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_20A8C6800();
  uint64_t v142 = *(void *)(v38 - 8);
  uint64_t v143 = v38;
  MEMORY[0x270FA5388](v38);
  int v40 = (char *)&v109 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v149 = result;
  if (result)
  {
    uint64_t v110 = v9;
    long long v42 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    uint64_t v115 = a3;
    v42(v37, a3, v34);
    sub_20A8C3EC0();
    sub_20A8C3E70();
    sub_20A5D54EC((uint64_t)v30);
    (*(void (**)(char *, char *))(v31 + 8))(v33, v148);
    sub_20A8C3EE0();
    sub_20A8C67E0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    sub_20A794190(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v44 = v43;
    uint64_t v45 = sub_20A8C4620();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(unsigned __int8 *)(v46 + 80);
    uint64_t v48 = (v47 + 32) & ~v47;
    uint64_t v49 = v48 + *(void *)(v46 + 72);
    uint64_t v112 = v44;
    uint64_t v131 = v49;
    uint64_t v130 = v47 | 7;
    uint64_t v50 = swift_allocObject();
    long long v127 = xmmword_20A8D3DC0;
    *(_OWORD *)(v50 + 16) = xmmword_20A8D3DC0;
    uint64_t v111 = v48;
    uint64_t v51 = *(void (**)(void))(v46 + 104);
    unsigned int v129 = *MEMORY[0x263F24D48];
    uint64_t v114 = v45;
    uint64_t v113 = v46 + 104;
    double v128 = (void (*)(uint64_t, void, uint64_t))v51;
    v51(v50 + v48);
    sub_20A795AFC(&qword_26AC69918, MEMORY[0x263F799D0]);
    uint64_t v148 = "stInteractor.swift";
    uint64_t v52 = v143;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v40, v52);
    uint64_t v53 = type metadata accessor for StockViewModel();
    uint64_t v54 = v115;
    uint64_t v55 = v144;
    sub_20A797934(v115 + *(int *)(v53 + 20), v144, (uint64_t (*)(void))sub_20A42C470);
    uint64_t v56 = sub_20A8C3E10();
    uint64_t v57 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56) == 1)
    {
      uint64_t result = sub_20A7978D4(v55, (uint64_t (*)(void))sub_20A42C470);
      double v58 = 0.0;
    }
    else
    {
      uint64_t v59 = v152;
      sub_20A8C3DA0();
      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
      sub_20A8C2770();
      double v58 = v60;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v59, v154);
    }
    uint64_t v61 = v157;
    uint64_t v62 = v147;
    uint64_t v63 = v145;
    double v64 = fabs(v58);
    if ((~*(void *)&v64 & 0x7FF0000000000000) != 0)
    {
      if (v64 > -2147483650.0)
      {
        if (v64 < 2147483650.0)
        {
          sub_20A797934(v54 + *(int *)(v53 + 24), v145, (uint64_t (*)(void))sub_20A609C6C);
          uint64_t v65 = type metadata accessor for StockSparklineViewModel(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v63, 1, v65) == 1)
          {
            uint64_t result = sub_20A7978D4(v63, (uint64_t (*)(void))sub_20A609C6C);
            double v66 = 0.0;
          }
          else
          {
            uint64_t v67 = v125;
            long long v68 = v124;
            uint64_t v69 = v126;
            (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v124, v63 + *(int *)(v65 + 32), v126);
            sub_20A7978D4(v63, type metadata accessor for StockSparklineViewModel);
            uint64_t v70 = v152;
            sub_20A8C3C50();
            (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v69);
            sub_20A8C2770();
            double v66 = v71;
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v70, v154);
          }
          double v72 = fabs(v66);
          if ((~*(void *)&v72 & 0x7FF0000000000000) != 0)
          {
            if (v72 > -2147483650.0)
            {
              if (v72 < 2147483650.0)
              {
                uint64_t v73 = v139;
                sub_20A8C6D10();
                sub_20A795AFC(&qword_26AC676E8, MEMORY[0x263F79E20]);
                uint64_t v74 = v141;
                sub_20A8C45B0();
                (*(void (**)(char *, uint64_t))(v140 + 8))(v73, v74);
                uint64_t v75 = *(void *)(v149 + *(void *)(*(void *)v149 + 120));
                __swift_project_boxed_opaque_existential_1((void *)(v75 + 32), *(void *)(v75 + 56));
                uint64_t v76 = sub_20A8C3690();
                uint64_t v77 = *(void *)(v76 + 16);
                if (v77)
                {
                  unint64_t v78 = v76
                      + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
                  uint64_t v79 = (void *)(v54 + *(int *)(type metadata accessor for StockListStockModel(0) + 24));
                  uint64_t v81 = v62 + 16;
                  uint64_t v80 = *(void (**)(char *, unint64_t, uint64_t))(v62 + 16);
                  uint64_t v82 = (void (**)(char *, uint64_t))(v62 + 8);
                  uint64_t v83 = *(void *)(v81 + 56);
                  swift_bridgeObjectRetain();
                  uint64_t v84 = v156;
                  while (1)
                  {
                    v80(v84, v78, v61);
                    if (sub_20A8C4050() == *v79 && v85 == v79[1])
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v89 = v138;
                      goto LABEL_27;
                    }
                    char v87 = sub_20A8CF760();
                    swift_bridgeObjectRelease();
                    if (v87) {
                      break;
                    }
                    uint64_t v84 = v156;
                    uint64_t v61 = v157;
                    (*v82)(v156, v157);
                    v78 += v83;
                    if (!--v77)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v88 = 1;
                      uint64_t v62 = v147;
                      goto LABEL_24;
                    }
                  }
                  uint64_t v89 = v138;
                  uint64_t v61 = v157;
LABEL_27:
                  swift_bridgeObjectRelease();
                  uint64_t v62 = v147;
                  uint64_t v90 = (uint64_t)v137;
                  (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v137, v156, v61);
                  uint64_t v88 = 0;
                }
                else
                {
                  uint64_t v88 = 1;
LABEL_24:
                  uint64_t v89 = v138;
                  uint64_t v90 = (uint64_t)v137;
                }
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v90, v88, 1, v61);
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v90, 1, v61) == 1)
                {
                  sub_20A7978D4(v90, (uint64_t (*)(void))sub_20A484450);
                  uint64_t v91 = v114;
                  uint64_t v92 = v111;
                }
                else
                {
                  uint64_t v93 = v116;
                  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v116, v90, v61);
                  char v94 = sub_20A8C4040();
                  uint64_t v95 = v119;
                  uint64_t v96 = (unsigned int *)MEMORY[0x263F79CB8];
                  if ((v94 & 1) == 0) {
                    uint64_t v96 = (unsigned int *)MEMORY[0x263F79CB0];
                  }
                  uint64_t v97 = v61;
                  uint64_t v98 = v118;
                  uint64_t v99 = v120;
                  (*(void (**)(char *, void, uint64_t))(v119 + 104))(v118, *v96, v120);
                  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v117, v98, v99);
                  uint64_t v100 = v121;
                  sub_20A8C6AE0();
                  (*(void (**)(char *, uint64_t))(v62 + 8))(v93, v97);
                  (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v99);
                  uint64_t v101 = swift_allocObject();
                  *(_OWORD *)(v101 + 16) = v127;
                  uint64_t v92 = v111;
                  uint64_t v91 = v114;
                  v128(v101 + v111, v129, v114);
                  sub_20A795AFC(&qword_26AC699A0, MEMORY[0x263F79CA8]);
                  uint64_t v102 = v123;
                  sub_20A8C45B0();
                  swift_bridgeObjectRelease();
                  (*(void (**)(char *, uint64_t))(v122 + 8))(v100, v102);
                }
                sub_20A796E0C(0, (unint64_t *)&unk_26AC6A168, MEMORY[0x263F7D640]);
                sub_20A8C9120();
                sub_20A8C9100();
                sub_20A795AFC(&qword_26AC6D948, (void (*)(uint64_t))type metadata accessor for StockListModel);
                uint64_t result = sub_20A8CBB50();
                if (result >= (uint64_t)0xFFFFFFFF80000000)
                {
                  if (result <= 0x7FFFFFFF)
                  {
                    uint64_t v103 = v134;
                    sub_20A8C6DD0();
                    (*(void (**)(char *, uint64_t))(v133 + 8))(v89, v135);
                    (*(void (**)(char *, uint64_t))(v132 + 8))(v150, v151);
                    uint64_t v104 = swift_allocObject();
                    *(_OWORD *)(v104 + 16) = v127;
                    v128(v104 + v92, v129, v91);
                    sub_20A795AFC(&qword_26AC69A00, MEMORY[0x263F79E78]);
                    uint64_t v105 = v136;
                    sub_20A8C45B0();
                    swift_bridgeObjectRelease();
                    (*(void (**)(char *, uint64_t))(v110 + 8))(v103, v105);
                    sub_20A8C7110();
                    double v106 = v152;
                    sub_20A8C9130();
                    sub_20A795AFC(&qword_26AC69A80, MEMORY[0x263F7A0B8]);
                    sub_20A8C4570();
                    uint64_t v107 = v154;
                    uint64_t v108 = *(void (**)(char *, uint64_t))(v153 + 8);
                    v108(v106, v154);
                    sub_20A8C9110();
                    sub_20A8C4580();
                    swift_release();
                    return ((uint64_t (*)(char *, uint64_t))v108)(v106, v107);
                  }
LABEL_44:
                  __break(1u);
                  return result;
                }
LABEL_43:
                __break(1u);
                goto LABEL_44;
              }
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
LABEL_41:
            __break(1u);
            goto LABEL_42;
          }
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_20A78A1DC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EngagementEvent();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (void (*)(char *, uint64_t))((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A795AFC((unint64_t *)&qword_26AC75290, (void (*)(uint64_t))type metadata accessor for StockListSelectionModel);
  sub_20A8C5D80();
  sub_20A797934(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  uint64_t v9 = sub_20A8C3F00();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 2, v9);
  if (result)
  {
    if (result != 1) {
      return result;
    }
    __swift_project_boxed_opaque_existential_1((void *)(v1 + *(void *)(*(void *)v1 + 208)), *(void *)(v1 + *(void *)(*(void *)v1 + 208) + 24));
    uint64_t v11 = *MEMORY[0x263F7A610];
    uint64_t v12 = sub_20A8C76F0();
    (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v5, v11, v12);
    swift_storeEnumTagMultiPayload();
    sub_20A8ADC64(v5);
    uint64_t v13 = type metadata accessor for EngagementEvent;
    uint64_t v14 = (uint64_t)v5;
  }
  else
  {
    uint64_t v13 = type metadata accessor for StockListSelectionModel;
    uint64_t v14 = (uint64_t)v8;
  }
  return sub_20A7978D4(v14, (uint64_t (*)(void))v13);
}

uint64_t sub_20A78A428()
{
  uint64_t v1 = type metadata accessor for EngagementEvent();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (void (*)(char *, uint64_t))((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(void *)(*(void *)v0 + 208)), *(void *)(v0 + *(void *)(*(void *)v0 + 208) + 24));
  uint64_t v4 = *MEMORY[0x263F7A610];
  uint64_t v5 = sub_20A8C76F0();
  (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  sub_20A8ADC64(v3);
  return sub_20A7978D4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
}

uint64_t sub_20A78A540()
{
  uint64_t v1 = type metadata accessor for EngagementEvent();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (void (*)(char *, uint64_t))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(void *)(*(void *)v0 + 208)), *(void *)(v0 + *(void *)(*(void *)v0 + 208) + 24));
  swift_storeEnumTagMultiPayload();
  sub_20A8ADC64(v3);
  return sub_20A7978D4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for EngagementEvent);
}

uint64_t sub_20A78A610()
{
  return sub_20A8C5D20();
}

uint64_t sub_20A78A648()
{
  v21[1] = *(void *)v0;
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockListRouteModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5D50();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v13, 2, v1))
  {
    uint64_t result = MEMORY[0x2105289B0](v0 + 16);
    if (result)
    {
      uint64_t v15 = (void *)(v0 + *(void *)(*(void *)v0 + 176));
      uint64_t v16 = v15[3];
      uint64_t v17 = v15[4];
      __swift_project_boxed_opaque_existential_1(v15, v16);
      AttributionProviderType.source.getter(v16, v17);
      sub_20A797934((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v10, (uint64_t (*)(void))sub_20A4845D0);
      sub_20A7978D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for AttributionSource);
      swift_storeEnumTagMultiPayload();
      sub_20A73AAD0((uint64_t)v10);
      swift_unknownObjectRelease();
      return sub_20A7978D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockListRouteModel);
    }
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 32))(v4, v13, v1);
    MEMORY[0x270FA5388](v18);
    v21[-2] = v0;
    v21[-1] = v4;
    sub_20A4845D0(0);
    sub_20A8C6670();
    sub_20A44D17C();
    uint64_t v19 = (void *)sub_20A8CEBE0();
    sub_20A796DBC(0, (unint64_t *)&qword_26AC823B8, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8D8F0]);
    sub_20A8C6520();
    swift_release();

    uint64_t v20 = (void *)sub_20A8CEBE0();
    sub_20A8C6560();
    swift_release();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return result;
}

uint64_t sub_20A78AA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StockListRouteModel();
  double v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x2105289B0](a2 + 16, v7);
  uint64_t v11 = result;
  if (result)
  {
    sub_20A797934(a1, (uint64_t)v9, (uint64_t (*)(void))sub_20A4845D0);
    swift_storeEnumTagMultiPayload();
    sub_20A73AAD0((uint64_t)v9);
    swift_unknownObjectRelease();
    uint64_t result = sub_20A7978D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockListRouteModel);
  }
  *a3 = v11 == 0;
  return result;
}

uint64_t sub_20A78AB88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockListRouteModel();
  double v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x2105289B0](a2 + 16, v7);
  if (result)
  {
    uint64_t v11 = (void *)(a2 + *(void *)(*(void *)a2 + 176));
    uint64_t v12 = v11[3];
    uint64_t v13 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v12);
    AttributionProviderType.source.getter(v12, v13);
    sub_20A797934((uint64_t)&v5[*(int *)(v3 + 20)], (uint64_t)v9, (uint64_t (*)(void))sub_20A4845D0);
    sub_20A7978D4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    swift_storeEnumTagMultiPayload();
    sub_20A73AAD0((uint64_t)v9);
    swift_unknownObjectRelease();
    return sub_20A7978D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockListRouteModel);
  }
  return result;
}

uint64_t sub_20A78AD24(uint64_t a1, int a2)
{
  LODWORD(v140) = a2;
  uint64_t v135 = *v2;
  uint64_t v136 = v2;
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v123 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A60A078(0);
  MEMORY[0x270FA5388](v6 - 8);
  double v128 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_20A8C9F40();
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v131 = (char *)&v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_20A8C2B70();
  uint64_t v139 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v138 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_20A8C3F00();
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v122 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v125 = (uint64_t)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  long long v127 = (char *)&v117 - v14;
  uint64_t v15 = sub_20A8C91A0();
  uint64_t v142 = *(void *)(v15 - 8);
  unint64_t v143 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v126 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v137 = (char *)&v117 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v132 = (char *)&v117 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v144 = (char *)&v117 - v22;
  uint64_t v23 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v27 = v26;
  uint64_t v28 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for StockListStockModel(0);
  uint64_t v124 = *(void *)(v31 - 8);
  uint64_t v32 = *(void *)(v124 + 64);
  MEMORY[0x270FA5388](v31 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v117 - v34;
  sub_20A8CA3C0();
  sub_20A8C8330();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20A7978D4((uint64_t)v25, type metadata accessor for StockListModel);
    return sub_20A8CA3E0();
  }
  uint64_t v120 = v32;
  uint64_t v121 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v137;
  uint64_t v38 = v138;
  char v39 = (char)v140;
  uint64_t v40 = v139;
  sub_20A7974A8((uint64_t)v25, (uint64_t)v35, type metadata accessor for StockListStockModel);
  uint64_t v41 = v144;
  uint64_t v42 = a1;
  sub_20A8CA3D0();
  uint64_t v43 = v142;
  unint64_t v44 = v143;
  uint64_t v119 = *(uint64_t (**)(char *, unint64_t))(v142 + 88);
  int v45 = v119(v41, v143);
  uint64_t v46 = v41;
  uint64_t v47 = v42;
  uint64_t v48 = v43;
  if (v45 == *MEMORY[0x263F7D658])
  {
    uint64_t v49 = *(void (**)(char *, unint64_t))(v43 + 96);
    uint64_t v50 = v46;
    v49(v46, v44);
    sub_20A5EA80C();
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v38, &v50[*(int *)(v51 + 48)], v141);
    uint64_t v52 = sub_20A8C2B50();
    uint64_t v54 = *(void *)(v135 + 80);
    uint64_t v53 = *(void *)(v135 + 88);
    uint64_t v145 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 88))(v35, v52, v47, v54, v53);
    uint64_t v55 = swift_allocObject();
    swift_weakInit();
    uint64_t v56 = (void *)swift_allocObject();
    v56[2] = v54;
    v56[3] = v53;
    v56[4] = v55;
    uint64_t v57 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v57);
    swift_retain();
    sub_20A8C8C00();
    swift_release();
    double v58 = *(void (**)(char *, uint64_t))(v40 + 8);
    uint64_t v59 = v141;
    v58(v38, v141);
    sub_20A7978D4((uint64_t)v35, type metadata accessor for StockListStockModel);
    swift_release();
    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v58)(v144, v59);
  }
  BOOL v60 = v45 == *MEMORY[0x263F7D668];
  uint64_t v118 = v47;
  if (v60)
  {
    if (v39)
    {
      uint64_t v61 = (uint64_t)v127;
      sub_20A8C5D50();
      uint64_t v62 = v125;
      sub_20A797934(v61, v125, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
      uint64_t v63 = v133;
      uint64_t v64 = v134;
      int v65 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v62, 2, v134);
      if (v65)
      {
        uint64_t v66 = (uint64_t)v121;
        if (v65 == 1)
        {
          unint64_t v143 = 0xE500000000000000;
          uint64_t v67 = 0x7961646F74;
        }
        else
        {
          unint64_t v143 = 0xE400000000000000;
          uint64_t v67 = 1701736302;
        }
        uint64_t v142 = v67;
        uint64_t v103 = v135;
      }
      else
      {
        uint64_t v101 = v122;
        (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v122, v62, v64);
        uint64_t v142 = sub_20A8C3E20();
        unint64_t v143 = v102;
        (*(void (**)(char *, uint64_t))(v63 + 8))(v101, v64);
        uint64_t v103 = v135;
        uint64_t v66 = (uint64_t)v121;
      }
      uint64_t v104 = v120;
      uint64_t v105 = v124;
      sub_20A7978D4(v61, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
      uint64_t v107 = *(void *)(v103 + 80);
      uint64_t v106 = *(void *)(v103 + 88);
      uint64_t v108 = v118;
      uint64_t v144 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v106 + 80))(v118, v107, v106);
      uint64_t v145 = (uint64_t)v144;
      uint64_t v109 = swift_allocObject();
      swift_weakInit();
      double v117 = v35;
      sub_20A797934((uint64_t)v35, v66, type metadata accessor for StockListStockModel);
      uint64_t v110 = v108;
      unint64_t v111 = (*(unsigned __int8 *)(v105 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
      unint64_t v112 = (v104 + v111 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v113 = (void *)swift_allocObject();
      v113[2] = v107;
      v113[3] = v106;
      v113[4] = v109;
      sub_20A7974A8(v66, (uint64_t)v113 + v111, type metadata accessor for StockListStockModel);
      *(void *)((char *)v113 + v112) = v110;
      uint64_t v114 = (void *)((char *)v113 + ((v112 + 15) & 0xFFFFFFFFFFFFFFF8));
      unint64_t v115 = v143;
      *uint64_t v114 = v142;
      v114[1] = v115;
      double v116 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
      sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
      sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v116);
      swift_retain();
      swift_retain();
      sub_20A8C8C00();
      swift_release();
      sub_20A7978D4((uint64_t)v117, type metadata accessor for StockListStockModel);
      swift_release();
      return swift_release();
    }
    else
    {
      uint64_t v87 = MEMORY[0x2105289B0](v136 + 2);
      if (v87)
      {
        sub_20A742EC4((uint64_t)v35, v118, v87);
        swift_unknownObjectRelease();
      }
      return sub_20A7978D4((uint64_t)v35, type metadata accessor for StockListStockModel);
    }
  }
  else
  {
    double v117 = v35;
    long long v68 = *(void (**)(char *, char *, unint64_t))(v43 + 16);
    uint64_t v69 = v132;
    uint64_t v140 = v68;
    v68(v132, v46, v44);
    uint64_t v70 = v37;
    void *v37 = 0x6D79536572616853;
    v37[1] = 0xEB000000006C6F62;
    double v71 = *(void (**)(void *))(v48 + 104);
    LODWORD(v141) = *MEMORY[0x263F7D660];
    v71((char *)v70);
    uint64_t v72 = v48;
    uint64_t v139 = sub_20A795AFC(&qword_26763DDB0, MEMORY[0x263F7D678]);
    char v73 = sub_20A8CE210();
    uint64_t v76 = *(void (**)(void *, unint64_t))(v72 + 8);
    uint64_t v75 = v72 + 8;
    uint64_t v74 = (void (*)(char *, unint64_t))v76;
    v76((char *)v70, v44);
    v76(v69, v44);
    if (v73)
    {
      uint64_t v141 = (uint64_t)v74;
      uint64_t v142 = v75;
      uint64_t v77 = v144;
      (*(void (**)(char *, void, uint64_t))(v129 + 104))(v131, *MEMORY[0x263F7DA40], v130);
      uint64_t v78 = *(void *)((char *)v136 + *(void *)(*v136 + 128));
      uint64_t v146 = sub_20A8C4990();
      uint64_t v147 = sub_20A795AFC((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
      uint64_t v145 = v78;
      swift_retain();
      sub_20A8CA390();
      long long v148 = 0u;
      long long v149 = 0u;
      char v150 = 1;
      sub_20A8C99D0();
      swift_allocObject();
      sub_20A8C99B0();
      swift_getObjectType();
      if (qword_26AC6AB90 != -1) {
        swift_once();
      }
      sub_20A58B96C();
      uint64_t v80 = (uint64_t)v128;
      uint64_t v81 = (uint64_t)&v128[*(int *)(v79 + 48)];
      uint64_t v82 = *(int *)(v79 + 64);
      uint64_t v83 = (uint64_t)v117;
      (*(void (**)(char *, char *, uint64_t))(v133 + 16))(v128, v117, v134);
      uint64_t v84 = type metadata accessor for StockViewModel();
      sub_20A797934(v83 + *(int *)(v84 + 20), v81, (uint64_t (*)(void))sub_20A42C470);
      *(unsigned char *)(v80 + v82) = 2;
      uint64_t v85 = type metadata accessor for CommandShareContent(0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v80, 0, 1, v85);
      swift_retain();
      sub_20A8C8CD0();
      uint64_t v86 = v77;
      swift_release_n();
      uint64_t v99 = (uint64_t (*)(char *, unint64_t))v141;
      sub_20A7978D4(v80, (uint64_t (*)(void))sub_20A60A078);
      uint64_t v100 = v83;
LABEL_30:
      sub_20A7978D4(v100, type metadata accessor for StockListStockModel);
      return v99(v86, v143);
    }
    uint64_t v88 = (void (*)(void *, void, unint64_t))v71;
    uint64_t v89 = v126;
    uint64_t v90 = v144;
    v140(v126, v144, v44);
    char *v70 = 0x61576567616E614DLL;
    v70[1] = 0xEF7473696C686374;
    int v91 = v141;
    v88((char *)v70, v141, v44);
    LOBYTE(v88) = sub_20A8CE210();
    v74((char *)v70, v44);
    v74(v89, v44);
    if (v88)
    {
      uint64_t v141 = (uint64_t)v74;
      uint64_t v142 = v75;
      (*(void (**)(char *, void, uint64_t))(v129 + 104))(v131, *MEMORY[0x263F7DA40], v130);
      uint64_t v92 = *(void *)((char *)v136 + *(void *)(*v136 + 128));
      uint64_t v146 = sub_20A8C4990();
      uint64_t v147 = sub_20A795AFC((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
      uint64_t v145 = v92;
      swift_retain();
      sub_20A8CA390();
      long long v148 = 0u;
      long long v149 = 0u;
      char v150 = 1;
      sub_20A8C99D0();
      swift_allocObject();
      sub_20A8C99B0();
      swift_getObjectType();
      uint64_t v93 = (uint64_t)v117;
      if (qword_26AC6AC40 != -1) {
        swift_once();
      }
      uint64_t v94 = v133;
      uint64_t v95 = (uint64_t)v123;
      uint64_t v96 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v123, v93, v134);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v94 + 56))(v95, 0, 1, v96);
      swift_retain();
      sub_20A8C8CD0();
      uint64_t v86 = v90;
      swift_release_n();
      uint64_t v99 = (uint64_t (*)(char *, unint64_t))v141;
      sub_20A7978D4(v95, (uint64_t (*)(void))sub_20A4D4A5C);
      uint64_t v100 = v93;
      goto LABEL_30;
    }
    int v97 = v119(v90, v44);
    uint64_t v98 = (uint64_t)v117;
    if (v97 == v91)
    {
      (*(void (**)(char *, unint64_t))(v142 + 96))(v90, v44);
      swift_bridgeObjectRelease();
LABEL_29:
      sub_20A8CA3E0();
      return sub_20A7978D4(v98, type metadata accessor for StockListStockModel);
    }
    if (v97 == *MEMORY[0x263F7D670]) {
      goto LABEL_29;
    }
    sub_20A8CA3E0();
    sub_20A7978D4(v98, type metadata accessor for StockListStockModel);
    return ((uint64_t (*)(char *, unint64_t))v74)(v90, v44);
  }
}

uint64_t sub_20A78C0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v39 = a7;
  uint64_t v40 = a8;
  uint64_t v42 = a5;
  uint64_t v43 = a6;
  uint64_t v44 = a4;
  uint64_t v38 = a3;
  uint64_t v9 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v37 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v12 = v11;
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StockListStockModel(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C9B80();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (id *)((char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v24 = result;
    (*(void (**)(id *, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
    int v25 = (*(uint64_t (**)(id *, uint64_t))(v20 + 88))(v22, v19);
    if (v25 == *MEMORY[0x263F7D960])
    {
      (*(void (**)(id *, uint64_t))(v20 + 96))(v22, v19);
    }
    else if (v25 != *MEMORY[0x263F7D958])
    {
      if (v25 != *MEMORY[0x263F7D968])
      {
        uint64_t result = sub_20A8CF520();
        __break(1u);
        return result;
      }
      sub_20A797934(v38, (uint64_t)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StockListStockModel);
      unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      unint64_t v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v28 = swift_allocObject();
      uint64_t v29 = v40;
      *(void *)(v28 + 16) = v39;
      *(void *)(v28 + 24) = v29;
      sub_20A7974A8((uint64_t)v18, v28 + v26, type metadata accessor for StockListStockModel);
      *(void *)(v28 + v27) = v24;
      swift_retain();
      sub_20A8C48E0();
      swift_release();
      if (sub_20A785C68()) {
        sub_20A78CDEC();
      }
      sub_20A8CA3C0();
      uint64_t v30 = sub_20A8C82F0();
      uint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
      if (v30 == v42 && v32 == v43)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v33 = sub_20A8CF760();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0) {
          return swift_release();
        }
      }
      uint64_t v34 = sub_20A8C3F00();
      uint64_t v35 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v37, 2, 2, v34);
      sub_20A795AFC((unint64_t *)&qword_26AC75290, (void (*)(uint64_t))type metadata accessor for StockListSelectionModel);
      sub_20A8C5D80();
      sub_20A7978D4(v35, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
      return swift_release();
    }
    sub_20A8CA3E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A78C5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a1;
  uint64_t v56 = a3;
  uint64_t v62 = sub_20A8C6B00();
  uint64_t v59 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  BOOL v60 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v57 = (char *)v44 - v6;
  uint64_t v61 = sub_20A8C40E0();
  uint64_t v58 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v53 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C6AF0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v63 = v8;
  uint64_t v64 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C6810();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_20A8C4030();
  uint64_t v14 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C3F00();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C6800();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v51 = v21;
  uint64_t v52 = v22;
  double v23 = MEMORY[0x270FA5388](v21);
  int v25 = (char *)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v20, a2, v17, v23);
  sub_20A8C3EC0();
  sub_20A8C3E70();
  sub_20A5D54EC((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v50);
  sub_20A8C3EE0();
  sub_20A8C67E0();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  sub_20A794190(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v50 = v26;
  uint64_t v27 = sub_20A8C4620();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = (v29 + 32) & ~v29;
  uint64_t v49 = v30 + *(void *)(v28 + 72);
  uint64_t v48 = v29 | 7;
  uint64_t v31 = swift_allocObject();
  long long v47 = xmmword_20A8D3DC0;
  *(_OWORD *)(v31 + 16) = xmmword_20A8D3DC0;
  unsigned int v46 = *MEMORY[0x263F24D48];
  int v45 = *(void (**)(uint64_t))(v28 + 104);
  v45(v31 + v30);
  sub_20A795AFC(&qword_26AC69918, MEMORY[0x263F799D0]);
  v44[1] = 0x800000020A90E1F0;
  uint64_t v32 = v51;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v32);
  uint64_t v33 = *(void *)(v56 + *(void *)(*(void *)v56 + 120));
  __swift_project_boxed_opaque_existential_1((void *)(v33 + 32), *(void *)(v33 + 56));
  uint64_t v34 = v53;
  sub_20A8C3600();
  char v35 = sub_20A8C4040();
  uint64_t v36 = v59;
  uint64_t v37 = (unsigned int *)MEMORY[0x263F79CB8];
  if ((v35 & 1) == 0) {
    uint64_t v37 = (unsigned int *)MEMORY[0x263F79CB0];
  }
  uint64_t v38 = v57;
  uint64_t v39 = v62;
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v57, *v37, v62);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v60, v38, v39);
  uint64_t v40 = v54;
  sub_20A8C6AE0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v61);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v39);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v47;
  ((void (*)(uint64_t, void, uint64_t))v45)(v41 + v30, v46, v27);
  sub_20A795AFC(&qword_26AC699A0, MEMORY[0x263F79CA8]);
  uint64_t v42 = v63;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v42);
  sub_20A8C7030();
  sub_20A795AFC(&qword_26763C718, MEMORY[0x263F7A030]);
  memset(v65, 0, 32);
  sub_20A8C45D0();
  return sub_20A44349C((uint64_t)v65);
}

uint64_t sub_20A78CDEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_20A785C68();
  if (result)
  {
    uint64_t v7 = *(void *)(*v0 + 184);
    uint64_t v8 = (uint64_t *)((char *)v0 + v7);
    uint64_t v9 = *(uint64_t *)((char *)v0 + v7 + 24);
    uint64_t v10 = *(uint64_t *)((char *)v1 + v7 + 32);
    __swift_project_boxed_opaque_existential_1(v8, *(uint64_t *)((char *)v1 + v7 + 24));
    AttributionProviderType.source.getter(v9, v10);
    uint64_t v11 = (*(uint64_t (**)(char *, void))(*(void *)(v2 + 88) + 120))(v5, *(void *)(v2 + 80));
    sub_20A7978D4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    v14[1] = v11;
    uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v12);
    sub_20A8C8C00();
    uint64_t v13 = MEMORY[0x2105289B0](v1 + 2);
    if (v13)
    {
      sub_20A743338(v13);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A78CFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_20A8CC220();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_20A8CC250();
  uint64_t v10 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D17C();
  uint64_t v19 = sub_20A8CEBE0();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v14 = (void *)swift_allocObject();
  void v14[2] = a3;
  v14[3] = a4;
  v14[4] = v13;
  aBlock[4] = sub_20A796D18;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_100;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A795AFC(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A795AFC((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  sub_20A8CF290();
  uint64_t v16 = (void *)v19;
  MEMORY[0x210526F10](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

uint64_t sub_20A78D31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a2;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C3F00();
  uint64_t v51 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v44 - v13;
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v16 = v15;
  uint64_t v50 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unsigned int v46 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v44 - v19;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v21 - 8);
  double v23 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v52 = *(void *)(v24 - 8);
  uint64_t v53 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v54 = (char *)v44 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v27 = result;
    uint64_t v49 = v16;
    void v44[2] = a3;
    int v45 = v6;
    sub_20A8C8BE0();
    uint64_t v55 = v56;
    uint64_t v28 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
    sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
    uint64_t v30 = v29;
    v44[0] = sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v28);
    v44[1] = v30;
    sub_20A8C9490();
    swift_release();
    sub_20A8C5D50();
    sub_20A797934((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    uint64_t v31 = v51;
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v11, 2, v7))
    {
      uint64_t v32 = v48;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v48, v11, v7);
      sub_20A8C3E20();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v7);
    }
    uint64_t v33 = v49;
    uint64_t v34 = v50;
    sub_20A7978D4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    sub_20A8CBA60();
    swift_bridgeObjectRelease();
    char v35 = *(void (**)(char *, uint64_t))(v34 + 8);
    v35(v20, v33);
    uint64_t v37 = v52;
    uint64_t v36 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v23, 1, v53) == 1)
    {
      swift_release();
      return sub_20A7978D4((uint64_t)v23, (uint64_t (*)(void))sub_20A42D908);
    }
    else
    {
      uint64_t v38 = v54;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v54, v23, v36);
      uint64_t v39 = MEMORY[0x2105289B0](v27 + 16);
      if (v39)
      {
        uint64_t v40 = v39;
        swift_retain();
        sub_20A8C8BE0();
        uint64_t v55 = v56;
        uint64_t v41 = v46;
        sub_20A8C9490();
        swift_release();
        uint64_t v42 = (uint64_t)v45;
        sub_20A8CBB40();
        v35(v41, v33);
        uint64_t v43 = type metadata accessor for StockListInteractor();
        sub_20A743100(v42, v40, v43, (uint64_t)&off_26BE6E190);
        swift_unknownObjectRelease();
        swift_release_n();
        sub_20A7978D4(v42, (uint64_t (*)(void))sub_20A469FF4);
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v54, v36);
      }
      else
      {
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v36);
      }
    }
  }
  return result;
}

void sub_20A78D968(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  unint64_t v5 = sub_20A8C9420();
  if (v5 >> 62 == 1)
  {
    v6[0] = v1;
    v6[1] = v2;
    long long v6[2] = v3;
    v6[3] = v4;
    sub_20A78DA0C(v6);
  }
  else
  {
    sub_20A6A0568((id)v5);
  }
}

uint64_t sub_20A78DA0C(uint64_t *a1)
{
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  uint64_t v20 = v12;
  uint64_t v21 = v10;
  uint64_t v14 = *v1;
  uint64_t v22 = *(uint64_t *)((char *)v1 + *(void *)(*v1 + 168));
  __swift_project_boxed_opaque_existential_1((void *)(*(uint64_t *)((char *)v1 + *(void *)(v14 + 120)) + 32), *(void *)(*(uint64_t *)((char *)v1 + *(void *)(v14 + 120)) + 56));
  swift_bridgeObjectRetain();
  sub_20A8C3600();
  uint64_t v15 = sub_20A8C4050();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *uint64_t v9 = v21;
  v9[1] = v11;
  _OWORD v9[2] = v20;
  v9[3] = v13;
  v9[4] = v15;
  v9[5] = v17;
  swift_storeEnumTagMultiPayload();
  sub_20A8C92D0();
  return sub_20A7978D4((uint64_t)v9, type metadata accessor for StocksActivity);
}

uint64_t sub_20A78DBFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v49 = a4;
  uint64_t v51 = a2;
  uint64_t v56 = a1;
  uint64_t v46 = *v4;
  uint64_t v6 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v41 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_20A8C91C0();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v47 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C91A0();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v43 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v55 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v15;
  uint64_t v16 = sub_20A8C2B70();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  double v19 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16);
  v21(v20, a3, v16, v19);
  unint64_t v22 = (*(unsigned __int8 *)(v17 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v54;
  uint64_t v25 = v46;
  uint64_t v46 = *(void *)(v46 + 80);
  *(void *)(v23 + 16) = v46;
  uint64_t v40 = *(void *)(v25 + 88);
  *(void *)(v23 + 24) = v40;
  *(void *)(v23 + 32) = v24;
  *(unsigned char *)(v23 + 40) = v49;
  unint64_t v26 = v23 + v22;
  uint64_t v27 = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v26, v20, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v56, v55);
  sub_20A5EA80C();
  uint64_t v29 = v43;
  uint64_t v30 = &v43[*(int *)(v28 + 48)];
  ((void (*)(char *, uint64_t, uint64_t))v21)(v43, v51, v16);
  uint64_t v51 = v27;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v30, v27, v16);
  (*(void (**)(char *, void, uint64_t))(v44 + 104))(v29, *MEMORY[0x263F7D658], v45);
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, *MEMORY[0x263F7D698], v50);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_20A796214;
  *(void *)(v31 + 24) = v23;
  sub_20A79627C(0, &qword_26763D8A0, MEMORY[0x263F7DC18]);
  swift_allocObject();
  swift_retain();
  swift_retain();
  uint64_t v32 = (uint64_t)v52;
  uint64_t v33 = sub_20A8CA3B0();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_release();
  }
  else
  {
    uint64_t v36 = v41;
    sub_20A7974A8(v32, v41, type metadata accessor for StockListStockModel);
    uint64_t v37 = sub_20A8C2B50();
    uint64_t v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 88))(v36, v37, v33, v46);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_20A796214;
    *(void *)(v38 + 24) = v23;
    uint64_t v39 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v39);
    swift_retain();
    sub_20A8C8C00();
    swift_release();
    swift_release();
    swift_release();
    sub_20A7978D4(v36, type metadata accessor for StockListStockModel);
  }
  return swift_release();
}

uint64_t sub_20A78E2B0(uint64_t *a1, int a2, uint64_t a3)
{
  int v22 = a2;
  uint64_t v4 = *a1;
  uint64_t v24 = sub_20A8CC220();
  uint64_t v27 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_20A8CC250();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_20A8C2B70();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A44D17C();
  uint64_t v23 = sub_20A8CEBE0();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = *(void *)(v4 + 80);
  *(void *)(v16 + 24) = *(void *)(v4 + 88);
  *(void *)(v16 + 32) = v14;
  *(unsigned char *)(v16 + 40) = v22;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v11 + 32))(v16 + v15, v13, v10);
  aBlock[4] = sub_20A7963E8;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_82;
  uint64_t v17 = _Block_copy(aBlock);
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A795AFC(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A795AFC((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  uint64_t v18 = v24;
  sub_20A8CF290();
  double v19 = (void *)v23;
  MEMORY[0x210526F10](0, v9, v6, v17);
  _Block_release(v17);

  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v6, v18);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v9, v26);
}

uint64_t sub_20A78E6AC(uint64_t a1, char a2, uint64_t a3)
{
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    if (a2)
    {
      uint64_t v10 = MEMORY[0x2105289B0](result + 16);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_20A8C2B70();
        uint64_t v13 = *(void *)(v12 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, a3, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
        uint64_t v14 = type metadata accessor for StockListInteractor();
        swift_retain();
        sub_20A743100((uint64_t)v7, v11, v14, (uint64_t)&off_26BE6E190);
        swift_unknownObjectRelease();
        swift_release();
        sub_20A7978D4((uint64_t)v7, (uint64_t (*)(void))sub_20A469FF4);
      }
    }
    if (MEMORY[0x2105289B0](v9 + 16))
    {
      uint64_t v15 = sub_20A8C2B70();
      uint64_t v16 = *(void *)(v15 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v7, a3, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
      sub_20A74262C((uint64_t)v7);
      swift_release();
      swift_unknownObjectRelease();
      return sub_20A7978D4((uint64_t)v7, (uint64_t (*)(void))sub_20A469FF4);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A78E948(char a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *v3;
  uint64_t v34 = v6;
  uint64_t v7 = sub_20A8CC220();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CC250();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)((char *)v4 + *(void *)(v6 + 232));
  char v41 = 0;
  aBlock[0] = v13;
  sub_20A7975A0(0, (unint64_t *)&qword_26AC812D0, (uint64_t (*)(void))sub_20A795BE0, (uint64_t)&type metadata for StockListRefreshBlocker, MEMORY[0x263F7D288]);
  sub_20A795C34(&qword_26763DDA8);
  swift_retain();
  uint64_t v14 = sub_20A8CE500();
  if (v14 == 2)
  {
    MEMORY[0x270FA5388](v14);
    *(&v34 - 2) = (uint64_t)&v41;
    char v15 = sub_20A8538E4((uint64_t (*)(uint64_t *))sub_20A796190, (uint64_t)(&v34 - 4));
    uint64_t result = swift_release();
    if ((v15 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    char v18 = v14;
    uint64_t result = swift_release();
    if ((v18 & 1) == 0)
    {
LABEL_3:
      if ((a1 & 1) == 0)
      {
        uint64_t v17 = v39;
        if (!v39) {
          return result;
        }
        return v17(result);
      }
      goto LABEL_8;
    }
  }
  if ((a1 & 1) == 0)
  {
    if (qword_26AC675A8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_20A8C7DF0();
    __swift_project_value_buffer(v23, (uint64_t)qword_26AC9E888);
    uint64_t v24 = sub_20A8C7DD0();
    os_log_type_t v25 = sub_20A8CEA00();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_20A414000, v24, v25, "Stock list coming out of editing state", v26, 2u);
      MEMORY[0x210528850](v26, -1, -1);
    }

    sub_20A78EF6C(0, 0, 0);
    sub_20A44D17C();
    uint64_t v27 = (void *)sub_20A8CEBE0();
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = (void *)swift_allocObject();
    uint64_t v30 = v34;
    void v29[2] = *(void *)(v34 + 80);
    uint64_t v32 = v38;
    uint64_t v31 = (uint64_t)v39;
    void v29[3] = *(void *)(v30 + 88);
    v29[4] = v31;
    uint64_t v29[5] = v32;
    v29[6] = v28;
    aBlock[4] = sub_20A796200;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4713FC;
    aBlock[3] = &block_descriptor_41;
    uint64_t v33 = _Block_copy(aBlock);
    sub_20A480ED4(v31);
    swift_release();
    sub_20A8CC240();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_20A795AFC(&qword_26AC677A0, MEMORY[0x263F8F030]);
    sub_20A44D1C4(0);
    sub_20A795AFC((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
    sub_20A8CF290();
    MEMORY[0x210526F10](0, v12, v9, v33);
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  }
LABEL_8:
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_20A8C7DF0();
  __swift_project_value_buffer(v19, (uint64_t)qword_26AC9E888);
  uint64_t v20 = sub_20A8C7DD0();
  os_log_type_t v21 = sub_20A8CEA00();
  if (os_log_type_enabled(v20, v21))
  {
    int v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v22 = 0;
    _os_log_impl(&dword_20A414000, v20, v21, "Stock list entering editing state", v22, 2u);
    MEMORY[0x210528850](v22, -1, -1);
  }

  uint64_t result = sub_20A78F9A0(0);
  uint64_t v17 = v39;
  if (v39) {
    return v17(result);
  }
  return result;
}

uint64_t sub_20A78EF6C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_20A8C7DF0();
  __swift_project_value_buffer(v8, (uint64_t)qword_26AC9E888);
  uint64_t v9 = sub_20A8C7DD0();
  os_log_type_t v10 = sub_20A8CEA00();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v19 = a3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v20 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v13 = 0xD000000000000012;
      }
      else {
        uint64_t v13 = 0x6E696C6C6F726373;
      }
      if (a1 == 1) {
        unint64_t v14 = 0x800000020A8F80F0;
      }
      else {
        unint64_t v14 = 0xE900000000000067;
      }
    }
    else
    {
      unint64_t v14 = 0xE700000000000000;
      uint64_t v13 = 0x676E6974696465;
    }
    sub_20A687610(v13, v14, &v20);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v15 = sub_20A8CE760();
    sub_20A687610(v15, v16, &v20);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A414000, v9, v10, "Stock list refresh blocker will be removed: %s after delay: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210528850](v12, -1, -1);
    MEMORY[0x210528850](v11, -1, -1);

    a3 = v19;
  }
  else
  {
  }
  LOBYTE(v20) = a1;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = v4;
  swift_retain();
  sub_20A480ED4(a2);
  swift_retain();
  sub_20A8C8250();
  swift_release();
  return swift_release();
}

uint64_t sub_20A78F254(void (*a1)(double))
{
  uint64_t v2 = type metadata accessor for StockListSelectionModel();
  double v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    a1(v3);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A8C5D50();
    sub_20A78F354((uint64_t)v5);
    swift_release();
    return sub_20A7978D4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  }
  return result;
}

uint64_t sub_20A78F354(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v41 = *v1;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v42 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v10 = v9;
  uint64_t v47 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v38 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)v37 - v13;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v40 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[1] = v1[4];
  sub_20A8C8BE0();
  uint64_t v48 = v49;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
  uint64_t v22 = v21;
  sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v20);
  v37[0] = v22;
  uint64_t v23 = v43;
  sub_20A8C9490();
  swift_release();
  sub_20A797934(v44, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 2, v4))
  {
    uint64_t v24 = v39;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v39, v8, v4);
    sub_20A8C3E20();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v4);
  }
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  os_log_type_t v25 = *(void (**)(char *, uint64_t))(v47 + 8);
  v25(v14, v10);
  uint64_t v27 = v45;
  uint64_t v26 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v17, 1, v46) == 1)
  {
    sub_20A7978D4((uint64_t)v17, (uint64_t (*)(void))sub_20A42D908);
    uint64_t result = MEMORY[0x2105289B0](v1 + 2);
    if (result)
    {
      uint64_t v29 = result;
      uint64_t v30 = sub_20A8C2B70();
      uint64_t v31 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v42, 1, 1, v30);
      sub_20A743100(v31, v29, v41, (uint64_t)&off_26BE6E190);
      swift_unknownObjectRelease();
      return sub_20A7978D4(v31, (uint64_t (*)(void))sub_20A469FF4);
    }
  }
  else
  {
    uint64_t v32 = v40;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v40, v17, v26);
    uint64_t v33 = MEMORY[0x2105289B0](v1 + 2);
    if (v33)
    {
      uint64_t v34 = v33;
      sub_20A8C8BE0();
      uint64_t v48 = v49;
      uint64_t v35 = v38;
      sub_20A8C9490();
      swift_release();
      uint64_t v36 = (uint64_t)v42;
      sub_20A8CBB40();
      v25(v35, v10);
      sub_20A743100(v36, v34, v41, (uint64_t)&off_26BE6E190);
      swift_unknownObjectRelease();
      sub_20A7978D4(v36, (uint64_t (*)(void))sub_20A469FF4);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v32, v26);
  }
  return result;
}

uint64_t sub_20A78F9A0(char a1)
{
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20A8C7DF0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26AC9E888);
  uint64_t v3 = sub_20A8C7DD0();
  os_log_type_t v4 = sub_20A8CEA00();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v10 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v7 = 0xD000000000000012;
      }
      else {
        uint64_t v7 = 0x6E696C6C6F726373;
      }
      if (a1 == 1) {
        unint64_t v8 = 0x800000020A8F80F0;
      }
      else {
        unint64_t v8 = 0xE900000000000067;
      }
    }
    else
    {
      unint64_t v8 = 0xE700000000000000;
      uint64_t v7 = 0x676E6974696465;
    }
    sub_20A687610(v7, v8, &v10);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A414000, v3, v4, "Stock list refreshing will be blocked by: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210528850](v6, -1, -1);
    MEMORY[0x210528850](v5, -1, -1);
  }

  LOBYTE(v10) = a1;
  swift_retain();
  sub_20A8C8240();
  return swift_release();
}

uint64_t sub_20A78FBA0(char *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9 = *a1;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 17) = a2;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(void *)(v10 + 40) = a5;
  sub_20A480ED4(a3);
  swift_retain();
  sub_20A8C66A0();

  return swift_release();
}

void sub_20A78FC4C(unsigned __int8 a1, char a2, void (*a3)(void), uint64_t a4, uint64_t *a5)
{
  int v10 = a1;
  uint64_t v97 = *a5;
  uint64_t v11 = sub_20A8C3410();
  uint64_t v102 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v100 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C2EF0();
  uint64_t v103 = *(void *)(v13 - 8);
  uint64_t v104 = v13;
  uint64_t v14 = *(void *)(v103 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v96 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v99 = (char *)&v91 - v16;
  sub_20A795B70();
  uint64_t v101 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v10 == 3)
  {
    if (qword_26AC675A8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_20A8C7DF0();
    __swift_project_value_buffer(v23, (uint64_t)qword_26AC9E888);
    uint64_t v24 = sub_20A8C7DD0();
    os_log_type_t v25 = sub_20A8CEA00();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v108 = v27;
      *(_DWORD *)uint64_t v26 = 136315138;
      if (a2)
      {
        if (a2 == 1) {
          uint64_t v28 = 0xD000000000000012;
        }
        else {
          uint64_t v28 = 0x6E696C6C6F726373;
        }
        if (a2 == 1) {
          unint64_t v29 = 0x800000020A8F80F0;
        }
        else {
          unint64_t v29 = 0xE900000000000067;
        }
      }
      else
      {
        uint64_t v28 = 0x676E6974696465;
        unint64_t v29 = 0xE700000000000000;
      }
      uint64_t v105 = sub_20A687610(v28, v29, &v108);
      sub_20A8CF1C0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20A414000, v24, v25, "Attempted to remove refresh blocker %s, but it was already removed", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210528850](v27, -1, -1);
      MEMORY[0x210528850](v26, -1, -1);

      if (!a3) {
        return;
      }
LABEL_37:
      a3();
      return;
    }
LABEL_36:

    if (!a3) {
      return;
    }
    goto LABEL_37;
  }
  uint64_t v98 = a4;
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v95 = a3;
  uint64_t v30 = sub_20A8C7DF0();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_26AC9E888);
  swift_retain_n();
  uint64_t v94 = v31;
  uint64_t v32 = sub_20A8C7DD0();
  os_log_type_t v33 = sub_20A8CEA00();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v93 = v11;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v108 = v36;
    *(_DWORD *)uint64_t v35 = 136315394;
    uint64_t v92 = v36;
    if (a1)
    {
      if (a1 == 1) {
        uint64_t v37 = 0xD000000000000012;
      }
      else {
        uint64_t v37 = 0x6E696C6C6F726373;
      }
      if (a1 == 1) {
        unint64_t v38 = 0x800000020A8F80F0;
      }
      else {
        unint64_t v38 = 0xE900000000000067;
      }
    }
    else
    {
      uint64_t v37 = 0x676E6974696465;
      unint64_t v38 = 0xE700000000000000;
    }
    uint64_t v105 = sub_20A687610(v37, v38, &v108);
    sub_20A8CF1C0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    uint64_t v105 = *(uint64_t *)((char *)a5 + *(void *)(*a5 + 232));
    sub_20A7975A0(0, (unint64_t *)&qword_26AC812D0, (uint64_t (*)(void))sub_20A795BE0, (uint64_t)&type metadata for StockListRefreshBlocker, MEMORY[0x263F7D288]);
    sub_20A795C34((unint64_t *)&unk_26AC812C0);
    uint64_t v39 = sub_20A8CF720();
    uint64_t v105 = sub_20A687610(v39, v40, &v108);
    sub_20A8CF1C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A414000, v32, v33, "Stock list is removing refresh blocker: %s.\nCurrent refresh blockers are: %s", (uint8_t *)v35, 0x16u);
    uint64_t v41 = v92;
    swift_arrayDestroy();
    MEMORY[0x210528850](v41, -1, -1);
    MEMORY[0x210528850](v35, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v111 = *(uint64_t *)((char *)a5 + *(void *)(*a5 + 232));
  sub_20A7975A0(0, (unint64_t *)&qword_26AC812D0, (uint64_t (*)(void))sub_20A795BE0, (uint64_t)&type metadata for StockListRefreshBlocker, MEMORY[0x263F7D288]);
  sub_20A795C34((unint64_t *)&unk_26AC812B0);
  swift_retain();
  sub_20A8CE840();
  sub_20A8CE8A0();
  uint64_t v42 = v98;
  if (v110 & 1) != 0 || (v107)
  {
LABEL_48:
    __break(1u);
    return;
  }
  uint64_t v43 = v108;
  uint64_t v44 = v105;
  int v45 = v106;
  int v46 = v109;
  swift_release();
  if (v46 != v45)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v43 == v44)
  {
    uint64_t v47 = (uint64_t)a5 + *(void *)(*a5 + 248);
    swift_beginAccess();
    sub_20A797934(v47, (uint64_t)v22, (uint64_t (*)(void))sub_20A79415C);
    uint64_t v48 = (uint64_t)a5 + *(void *)(*a5 + 240);
    swift_beginAccess();
    uint64_t v49 = (uint64_t)&v19[*(int *)(v101 + 48)];
    sub_20A7974A8((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))sub_20A79415C);
    sub_20A797934(v48, v49, (uint64_t (*)(void))sub_20A794128);
    uint64_t v50 = v102;
    uint64_t v51 = v93;
    int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v102 + 48))(v19, 1, v93);
    int v53 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v49, 1, v104);
    int v54 = v53;
    a3 = v95;
    if (v52 != 1)
    {
      uint64_t v62 = v100;
      uint64_t v63 = (*(uint64_t (**)(char *, char *, uint64_t))(v50 + 32))(v100, v19, v51);
      if (v54 == 1)
      {
        MEMORY[0x270FA5388](v63);
        *(&v91 - 2) = (uint64_t)a5;
        *(&v91 - 1) = (uint64_t)v62;
        sub_20A8C6670();
        uint64_t v64 = (void *)swift_allocObject();
        v64[2] = a5;
        v64[3] = a3;
        v64[4] = v42;
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = sub_20A795CEC;
        *(void *)(v65 + 24) = v64;
        swift_retain();
        sub_20A480ED4((uint64_t)a3);
        uint64_t v66 = (void *)sub_20A8C6450();
        sub_20A8C6500();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v50 + 8))(v62, v51);
      }
      else
      {
        uint64_t v74 = v103;
        uint64_t v75 = *(uint64_t (**)(void))(v103 + 32);
        uint64_t v76 = v99;
        uint64_t v77 = v104;
        uint64_t v78 = v75();
        MEMORY[0x270FA5388](v78);
        *(&v91 - 2) = (uint64_t)a5;
        *(&v91 - 1) = (uint64_t)v62;
        uint64_t v101 = MEMORY[0x263F8EE60] + 8;
        uint64_t v94 = sub_20A8C6670();
        uint64_t v79 = v96;
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v96, v76, v77);
        unint64_t v80 = (*(unsigned __int8 *)(v74 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
        uint64_t v81 = (void *)swift_allocObject();
        uint64_t v82 = v97;
        v81[2] = *(void *)(v97 + 80);
        uint64_t v81[3] = *(void *)(v82 + 88);
        v81[4] = a5;
        uint64_t v83 = v79;
        uint64_t v84 = v77;
        ((void (*)(char *, char *, uint64_t))v75)((char *)v81 + v80, v83, v77);
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = sub_20A795D48;
        *(void *)(v85 + 24) = v81;
        swift_retain();
        uint64_t v86 = (void *)sub_20A8C6450();
        sub_20A8C64F0();
        swift_release();
        swift_release();

        uint64_t v87 = (void *)swift_allocObject();
        uint64_t v88 = (uint64_t)v95;
        v87[2] = a5;
        v87[3] = v88;
        void v87[4] = v98;
        uint64_t v89 = swift_allocObject();
        *(void *)(v89 + 16) = sub_20A795DB0;
        *(void *)(v89 + 24) = v87;
        swift_retain();
        sub_20A480ED4(v88);
        uint64_t v90 = (void *)sub_20A8C6450();
        sub_20A8C6500();
        swift_release();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v74 + 8))(v99, v84);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v51);
      }
      return;
    }
    if (v53 != 1)
    {
      uint64_t v68 = v103;
      uint64_t v67 = v104;
      uint64_t v69 = v99;
      uint64_t v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v103 + 32))(v99, v49, v104);
      MEMORY[0x270FA5388](v70);
      *(&v91 - 2) = (uint64_t)a5;
      *(&v91 - 1) = (uint64_t)v69;
      sub_20A8C6670();
      double v71 = (void *)swift_allocObject();
      v71[2] = a5;
      v71[3] = a3;
      v71[4] = v42;
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = sub_20A797CA4;
      *(void *)(v72 + 24) = v71;
      swift_retain();
      sub_20A480ED4((uint64_t)a3);
      char v73 = (void *)sub_20A8C6450();
      sub_20A8C6500();
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v67);
      return;
    }
    uint64_t v24 = sub_20A8C7DD0();
    os_log_type_t v55 = sub_20A8CEA00();
    if (os_log_type_enabled(v24, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_20A414000, v24, v55, "No update data to refresh after removal of all refreshBlockers", v56, 2u);
      MEMORY[0x210528850](v56, -1, -1);
    }
    goto LABEL_36;
  }
  uint64_t v57 = sub_20A8C7DD0();
  os_log_type_t v58 = sub_20A8CEA00();
  BOOL v59 = os_log_type_enabled(v57, v58);
  BOOL v60 = v95;
  if (v59)
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl(&dword_20A414000, v57, v58, "All refreshBlockers are not removed", v61, 2u);
    MEMORY[0x210528850](v61, -1, -1);
  }

  if (v60) {
    v60();
  }
}

uint64_t sub_20A790AA0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_20A8C8520();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v20 - v9;
  sub_20A8C8BE0();
  sub_20A8C8C40();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D388], v4);
  sub_20A795AFC(&qword_26AC67740, MEMORY[0x263F7D390]);
  char v11 = sub_20A8CE210();
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v7, v4);
  v12(v10, v4);
  if (v11)
  {
    sub_20A796DBC(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    uint64_t v15 = *(void *)(v3 + 80);
    uint64_t v14 = *(void *)(v3 + 88);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 72))(a1, v15, v14);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = swift_weakInit();
    MEMORY[0x270FA5388](v18);
    *(&v20 - 6) = v15;
    *(&v20 - 5) = v14;
    *(&v20 - 4) = v17;
    *(&v20 - 3) = v16;
    *(&v20 - 2) = a1;
    sub_20A796DBC(0, (unint64_t *)&qword_26AC698E0, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7D028]);
    swift_allocObject();
    uint64_t v13 = sub_20A8C65E0();
    swift_release();
    swift_release();
  }
  return v13;
}

uint64_t sub_20A790DD0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_20A790E00(uint64_t a1, uint64_t a2)
{
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = a1 + *(void *)(*(void *)a1 + 248);
  swift_beginAccess();
  sub_20A796030((uint64_t)v6, v8, (uint64_t (*)(void))sub_20A79415C);
  swift_endAccess();
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_20A8C7DF0();
  __swift_project_value_buffer(v9, (uint64_t)qword_26AC9E888);
  int v10 = sub_20A8C7DD0();
  os_log_type_t v11 = sub_20A8CEA00();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_20A414000, v10, v11, "Stock list is being refreshed with queued price data", v12, 2u);
    MEMORY[0x210528850](v12, -1, -1);
  }

  return sub_20A790AA0(a2);
}

uint64_t sub_20A790FD4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_20A794128(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C2EF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = a1 + *(void *)(*(void *)a1 + 240);
  swift_beginAccess();
  sub_20A796030((uint64_t)v6, v8, (uint64_t (*)(void))sub_20A794128);
  uint64_t result = swift_endAccess();
  if (a2) {
    return a2(result);
  }
  return result;
}

uint64_t sub_20A7910F0(uint64_t a1, uint64_t a2, const char *a3, uint64_t (*a4)(uint64_t))
{
  if (qword_26AC675A8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_20A8C7DF0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26AC9E888);
  uint64_t v8 = sub_20A8C7DD0();
  os_log_type_t v9 = sub_20A8CEA00();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_20A414000, v8, v9, a3, v10, 2u);
    MEMORY[0x210528850](v10, -1, -1);
  }

  return a4(a2);
}

uint64_t sub_20A7911FC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = a1 + *(void *)(*(void *)a1 + 248);
  swift_beginAccess();
  sub_20A796030((uint64_t)v6, v8, (uint64_t (*)(void))sub_20A79415C);
  uint64_t result = swift_endAccess();
  if (a2) {
    return a2(result);
  }
  return result;
}

uint64_t sub_20A791318()
{
  uint64_t v1 = sub_20A8C40E0();
  uint64_t v2 = *(void *)(v1 - 8);
  double v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x2105289B0](v0 + 16, v3);
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(v0 + *(void *)(*(void *)v0 + 120));
    __swift_project_boxed_opaque_existential_1((void *)(v8 + 32), *(void *)(v8 + 56));
    sub_20A8C3600();
    os_log_type_t v9 = (void *)MEMORY[0x2105289B0](v7 + 16);
    if (v9)
    {
      sub_20A794CD4((uint64_t)v5, v9);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_20A79145C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C3410();
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v0 + v1[14];
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + v1[15]) + 32), *(void *)(*(void *)(v0 + v1[15]) + 56));
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  os_log_type_t v11 = (void *)(v0 + *(void *)(*(void *)v0 + 184));
  uint64_t v12 = v11[3];
  uint64_t v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  AttributionProviderType.source.getter(v12, v13);
  uint64_t v14 = v1[11];
  uint64_t v15 = v1[10];
  uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t, uint64_t))(v14 + 104))(v10, v4, v15, v14);
  sub_20A7978D4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AttributionSource);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  uint64_t v24 = v16;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v15;
  void v18[3] = v14;
  v18[4] = v17;
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
  sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v19);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20A79180C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (sub_20A785C68())
    {
      sub_20A78CDEC();
    }
    else
    {
      uint64_t v2 = MEMORY[0x2105289B0](v1 + 16);
      if (v2)
      {
        uint64_t v3 = v2;
        type metadata accessor for StockListInteractor();
        swift_retain();
        sub_20A743434(v3);
        swift_release();
        swift_unknownObjectRelease();
      }
    }
    sub_20A8C5D20();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A7918F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v13 = swift_allocObject();
    swift_weakInit();
    uint64_t v14 = (void *)swift_allocObject();
    void v14[2] = a7;
    v14[3] = a8;
    v14[4] = v13;
    void v14[5] = sub_20A797C3C;
    v14[6] = v12;
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    swift_retain();
    swift_retain();
    sub_20A8C8C00();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_20A791ABC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v26 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = MEMORY[0x2105289B0](result + 16);
    if (v20)
    {
      uint64_t v25 = v20;
      uint64_t v21 = sub_20A8C34C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
      uint64_t v22 = *(void *)(v19 + *(void *)(*(void *)v19 + 120));
      v24[1] = a6;
      _OWORD v24[2] = a5;
      __swift_project_boxed_opaque_existential_1((void *)(v22 + 32), *(void *)(v22 + 56));
      swift_retain();
      sub_20A8C3600();
      sub_20A8C4060();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
      uint64_t v23 = sub_20A8C3410();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v14, 0, 1, v23);
      type metadata accessor for StockListInteractor();
      sub_20A74288C((uint64_t)v17, (uint64_t)v14, v25);
      swift_unknownObjectRelease();
      swift_release();
      sub_20A7978D4((uint64_t)v14, (uint64_t (*)(void))sub_20A79415C);
      uint64_t v20 = sub_20A7978D4((uint64_t)v17, (uint64_t (*)(void))sub_20A5726A4);
    }
    a3(v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A791DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v51 = a3;
  uint64_t v45 = a1;
  uint64_t v5 = *a4;
  uint64_t v48 = a4;
  uint64_t v49 = v5;
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v46 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockListToolbarModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v43 - v18;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v43 - v21;
  sub_20A8C5D50();
  sub_20A797934((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  uint64_t v44 = v11;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v24 = v23(v19, 2, v10);
  uint64_t v50 = a2;
  if (v24)
  {
    if (v24 == 1)
    {
      unint64_t v25 = 0xE500000000000000;
      uint64_t v26 = 0x7961646F74;
    }
    else
    {
      unint64_t v25 = 0xE400000000000000;
      uint64_t v26 = 1701736302;
    }
  }
  else
  {
    uint64_t v27 = v13;
    uint64_t v28 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v27, v19, v10);
    uint64_t v26 = sub_20A8C3E20();
    unint64_t v25 = v29;
    uint64_t v30 = v28;
    uint64_t v13 = v27;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v10);
  }
  sub_20A7978D4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  uint64_t v31 = v51;
  sub_20A797934(v51, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  int v32 = v23(v16, 2, v10);
  if (!v32)
  {
    uint64_t v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v13, v16, v10);
    uint64_t v35 = sub_20A8C3E20();
    unint64_t v33 = v36;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v10);
    goto LABEL_12;
  }
  if (v32 != 1)
  {
    unint64_t v33 = 0xE400000000000000;
    uint64_t v35 = 1701736302;
LABEL_12:
    if (v26 != v35) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  unint64_t v33 = 0xE500000000000000;
  if (v26 != 0x7961646F74)
  {
LABEL_15:
    char v37 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v37 & 1) == 0) {
      return result;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (v25 != v33) {
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_16:
  uint64_t v39 = v46;
  sub_20A797934(v45, v46, (uint64_t (*)(void))sub_20A42C470);
  if (qword_26AC692B8 != -1) {
    swift_once();
  }
  uint64_t v40 = v49;
  swift_getWitnessTable();
  sub_20A8C41C0();
  uint64_t v41 = v47;
  sub_20A87AAC0(v39, v52, v47);
  uint64_t v42 = MEMORY[0x2105289B0](v50 + 16);
  if (v42)
  {
    sub_20A7430E8(v41, v42, v40, (uint64_t)&off_26BE6E190);
    swift_unknownObjectRelease();
  }
  sub_20A78F354(v31);
  return sub_20A7978D4(v41, (uint64_t (*)(void))type metadata accessor for StockListToolbarModel);
}

uint64_t sub_20A7922F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = a8;
  uint64_t v13 = sub_20A8C2EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = *(void *)(Strong + 32);
    uint64_t v27 = a9;
    uint64_t v28 = v18;
    uint64_t v30 = a6;
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v13);
    unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v21 = (char *)swift_allocObject();
    uint64_t v22 = v27;
    *((void *)v21 + 2) = v29;
    *((void *)v21 + 3) = v22;
    *((void *)v21 + 4) = v19;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v20], (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    uint64_t v23 = (uint64_t (**)())&v21[(v15 + v20 + 7) & 0xFFFFFFFFFFFFFFF8];
    char *v23 = sub_20A795E84;
    v23[1] = (uint64_t (*)())v16;
    int v24 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v24);
    swift_retain();
    swift_retain();
    sub_20A8C8C00();
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_20A792594(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v49 = a5;
  uint64_t v50 = a4;
  uint64_t v7 = type metadata accessor for StockListToolbarModel();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v47 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v44 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_20A8C3E10();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v48 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C3F00();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v25 = result;
    sub_20A8C5D50();
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 2, v17);
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v23, v17);
      uint64_t v27 = sub_20A8C2EE0();
      uint64_t v28 = sub_20A8C3EC0();
      if (*(void *)(v27 + 16) && (unint64_t v30 = sub_20A4D1B24(v28, v29), (v31 & 1) != 0))
      {
        uint64_t v32 = v15;
        (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v13, *(void *)(v27 + 56) + *(void *)(v15 + 72) * v30, v14);
        unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v33(v13, 0, 1, v14);
      }
      else
      {
        uint64_t v32 = v15;
        unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v33(v13, 1, 1, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v13, 1, v14) == 1)
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
        uint64_t v26 = sub_20A7978D4((uint64_t)v13, (uint64_t (*)(void))sub_20A42C470);
      }
      else
      {
        uint64_t v34 = v32;
        uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        unint64_t v36 = v48;
        v35(v48, v13, v14);
        char v37 = v33;
        uint64_t v38 = (uint64_t)v44;
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v44, v36, v14);
        v37((char *)v38, 0, 1, v14);
        if (qword_26AC692B8 != -1) {
          swift_once();
        }
        uint64_t v39 = type metadata accessor for StockListInteractor();
        swift_getWitnessTable();
        sub_20A8C41C0();
        uint64_t v40 = v47;
        sub_20A87AAC0(v38, v51, v47);
        uint64_t v41 = MEMORY[0x2105289B0](v25 + 16);
        if (v41)
        {
          uint64_t v42 = v41;
          swift_retain();
          sub_20A7430E8(v40, v42, v39, (uint64_t)&off_26BE6E190);
          swift_unknownObjectRelease();
          swift_release();
        }
        sub_20A7978D4(v40, (uint64_t (*)(void))type metadata accessor for StockListToolbarModel);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v48, v14);
        uint64_t v26 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      }
    }
    v50(v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A792B04(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t v18 = *v1;
  uint64_t v19 = sub_20A8C2E80();
  uint64_t v2 = *(void *)(v19 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v19);
  uint64_t v17 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C6230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC69360 != -1) {
    swift_once();
  }
  char v21 = 2;
  sub_20A794190(0, &qword_26AC7FF08, MEMORY[0x263F7CF48], MEMORY[0x263F8E0F8]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D4540;
  swift_retain();
  sub_20A8C6220();
  sub_20A8C6210();
  uint64_t v20 = v8;
  sub_20A795AFC(&qword_26AC676C0, MEMORY[0x263F7CF48]);
  sub_20A797A48(0);
  sub_20A795AFC((unint64_t *)&qword_26AC7F760, sub_20A797A48);
  sub_20A8CF290();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = v17;
  uint64_t v11 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v17, v16, v19);
  unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  uint64_t v14 = v18;
  *((void *)v13 + 2) = *(void *)(v18 + 80);
  *((void *)v13 + 3) = *(void *)(v14 + 88);
  *((void *)v13 + 4) = v9;
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v13[v12], v10, v11);
  swift_retain();
  sub_20A8C5AE0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_release();
}

uint64_t sub_20A792EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 64))(a2, a3, a4);
    uint64_t v8 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
    sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
    sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v8);
    swift_retain();
    sub_20A8C8C00();
    swift_release();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_20A793010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C9B80();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v9);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v11, v7);
  int v12 = *MEMORY[0x263F7D968];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if (a1 == v12)
  {
    if (sub_20A785C68())
    {
      return sub_20A78CDEC();
    }
    else
    {
      uint64_t v14 = MEMORY[0x2105289B0](a2 + 16);
      if (v14)
      {
        sub_20A743434(v14);
        swift_unknownObjectRelease();
      }
      sub_20A8C5D50();
      sub_20A782E40((uint64_t)v6);
      return sub_20A7978D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    }
  }
  return result;
}

uint64_t sub_20A793228()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = sub_20A8C40E0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = (char *)v0 + v1[14];
  uint64_t v6 = *(void *)((char *)v0 + v1[15]);
  __swift_project_boxed_opaque_existential_1((void *)(v6 + 32), *(void *)(v6 + 56));
  sub_20A8C3600();
  __swift_project_boxed_opaque_existential_1((void *)(v6 + 32), *(void *)(v6 + 56));
  uint64_t v7 = sub_20A8C3690();
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, void))(v1[11] + 112))(v5, v7, v1[10]);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v11[1] = v8;
  double v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A796E0C(0, (unint64_t *)&qword_26AC69FC0, MEMORY[0x263F7D538]);
  sub_20A794C90(&qword_26AC69FB8, (unint64_t *)&qword_26AC69FC0, v9);
  sub_20A8C8C00();
  return swift_release();
}

void sub_20A793458()
{
  sub_20A8C2EF0();
  sub_20A8C6670();
  id v0 = (id)sub_20A8C6450();
  sub_20A8C6510();
  swift_release();
  swift_release();
}

uint64_t sub_20A793534()
{
  v51[1] = *v0;
  uint64_t v1 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v54 = (uint64_t)v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = (uint64_t)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v69 = (uint64_t)v51 - v5;
  sub_20A51238C(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v68 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C3F00();
  uint64_t v57 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v64 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v56 = (char *)v51 - v18;
  MEMORY[0x270FA5388](v19);
  int v53 = (char *)v51 - v20;
  sub_20A796E0C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v51 - v24;
  unsigned __int8 v52 = v0;
  sub_20A8C8BE0();
  uint64_t v70 = v71;
  uint64_t v26 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A796E0C(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
  uint64_t v63 = v27;
  sub_20A794C90((unint64_t *)&qword_26AC6A040, &qword_26AC6A048, v26);
  sub_20A8C9490();
  swift_release();
  uint64_t v28 = sub_20A782880((uint64_t)v25);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  uint64_t v29 = *(void *)(v28 + 16);
  if (v29)
  {
    char v31 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
    uint64_t v30 = v13 + 16;
    unint64_t v32 = v28 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
    os_log_type_t v55 = (void (**)(char *, char *, uint64_t))(v57 + 16);
    uint64_t v62 = *(void *)(v30 + 56);
    uint64_t v63 = v31;
    BOOL v60 = (void (**)(char *, uint64_t))(v30 - 8);
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56);
    os_log_type_t v58 = (void (**)(char *, char *, uint64_t))(v57 + 32);
    BOOL v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    v51[0] = v28;
    swift_bridgeObjectRetain();
    uint64_t v33 = MEMORY[0x263F8EE78];
    uint64_t v34 = v30;
    do
    {
      uint64_t v35 = v34;
      v63(v67, v32, v68);
      uint64_t v36 = v69;
      sub_20A8C8330();
      sub_20A797934(v36, v66, type metadata accessor for StockListModel);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v38 = type metadata accessor for StockViewModel();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v8, 1, 1, v38);
      }
      else
      {
        uint64_t v39 = v54;
        sub_20A7974A8(v66, v54, type metadata accessor for StockListStockModel);
        sub_20A797934(v39, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A7978D4(v39, type metadata accessor for StockListStockModel);
        uint64_t v38 = type metadata accessor for StockViewModel();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v8, 0, 1, v38);
      }
      sub_20A7978D4(v69, type metadata accessor for StockListModel);
      type metadata accessor for StockViewModel();
      uint64_t v40 = 1;
      int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v8, 1, v38);
      uint64_t v42 = (uint64_t (*)(void))sub_20A51238C;
      if (v41 != 1)
      {
        (*v55)(v11, v8, v15);
        uint64_t v40 = 0;
        uint64_t v42 = (uint64_t (*)(void))type metadata accessor for StockViewModel;
      }
      sub_20A7978D4((uint64_t)v8, v42);
      (*v61)(v11, v40, 1, v15);
      (*v60)(v67, v68);
      if ((*v59)(v11, 1, v15) == 1)
      {
        sub_20A7978D4((uint64_t)v11, (uint64_t (*)(void))sub_20A4D4A5C);
      }
      else
      {
        uint64_t v43 = *v58;
        uint64_t v44 = v56;
        (*v58)(v56, v11, v15);
        v43(v64, v44, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = sub_20A46DD9C(0, *(void *)(v33 + 16) + 1, 1, v33);
        }
        unint64_t v46 = *(void *)(v33 + 16);
        unint64_t v45 = *(void *)(v33 + 24);
        if (v46 >= v45 >> 1) {
          uint64_t v33 = sub_20A46DD9C(v45 > 1, v46 + 1, 1, v33);
        }
        *(void *)(v33 + 16) = v46 + 1;
        v43((char *)(v33+ ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))+ *(void *)(v57 + 72) * v46), v64, v15);
      }
      v32 += v62;
      --v29;
      uint64_t v34 = v35;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x263F8EE78];
  }
  uint64_t v47 = v57;
  uint64_t v48 = (uint64_t)v53;
  if (!*(void *)(v33 + 16)) {
    return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v53, v33 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80)), v15);
  uint64_t v49 = MEMORY[0x2105289B0](v52 + 2);
  if (v49)
  {
    LOBYTE(v71) = 0;
    sub_20A742D38(v48, v33, (unsigned __int8 *)&v71, v49);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 8))(v48, v15);
}

uint64_t *sub_20A793E2C()
{
  uint64_t v1 = *v0;
  sub_20A4380C4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 176));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 184));
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 208));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0 + *(void *)(*v0 + 216));
  swift_bridgeObjectRelease();
  swift_release();
  sub_20A7978D4((uint64_t)v0 + *(void *)(*v0 + 240), (uint64_t (*)(void))sub_20A794128);
  sub_20A7978D4((uint64_t)v0 + *(void *)(*v0 + 248), (uint64_t (*)(void))sub_20A79415C);
  return v0;
}

uint64_t sub_20A7940B8()
{
  sub_20A793E2C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockListInteractor()
{
  return __swift_instantiateGenericMetadata();
}

void sub_20A794128(uint64_t a1)
{
}

void sub_20A79415C(uint64_t a1)
{
}

void sub_20A794190(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockListRefreshBlocker(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A7942C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockListRefreshBlocker()
{
  return &type metadata for StockListRefreshBlocker;
}

uint64_t sub_20A794348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a1;
  uint64_t v5 = v3 + 2;
  uint64_t v43 = *v3;
  sub_20A484450(0);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v42 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C40E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v35 - v16;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v35 - v19;
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79145C();
  uint64_t v24 = MEMORY[0x2105289B0](v3 + 2);
  if (v24)
  {
    uint64_t v39 = v8;
    uint64_t v40 = v3 + 2;
    uint64_t v25 = v41;
    uint64_t v35 = (void *)(v41 + 32);
    uint64_t v36 = v24;
    uint64_t v44 = v11;
    __swift_project_boxed_opaque_existential_1((void *)(v41 + 32), *(void *)(v41 + 56));
    sub_20A8C3600();
    sub_20A8C40D0();
    uint64_t v37 = a3;
    uint64_t v38 = v14;
    uint64_t v26 = v12;
    uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
    v27(v20, v44);
    uint64_t v28 = sub_20A8C34C0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v23, 0, 1, v28);
    uint64_t v29 = *(void *)(v25 + 56);
    uint64_t v5 = v40;
    __swift_project_boxed_opaque_existential_1(v35, v29);
    uint64_t v11 = v44;
    unint64_t v8 = v39;
    sub_20A8C3600();
    uint64_t v30 = (uint64_t)v42;
    sub_20A8C4060();
    v27(v17, v11);
    uint64_t v12 = v26;
    a3 = v37;
    uint64_t v14 = v38;
    uint64_t v31 = sub_20A8C3410();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    sub_20A74288C((uint64_t)v23, v30, v36);
    swift_unknownObjectRelease();
    sub_20A7978D4(v30, (uint64_t (*)(void))sub_20A79415C);
    sub_20A7978D4((uint64_t)v23, (uint64_t (*)(void))sub_20A5726A4);
  }
  sub_20A797934(a3, (uint64_t)v8, (uint64_t (*)(void))sub_20A484450);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1) {
    return sub_20A7978D4((uint64_t)v8, (uint64_t (*)(void))sub_20A484450);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v8, v11);
  uint64_t v33 = MEMORY[0x2105289B0](v5);
  if (v33)
  {
    uint64_t v34 = (void *)MEMORY[0x2105289B0](v33 + 16);
    if (v34)
    {
      sub_20A794CD4((uint64_t)v14, v34);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_20A7947DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A794FB4(a3);
}

uint64_t sub_20A7947E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A795368(a3);
}

uint64_t sub_20A7947F0()
{
  uint64_t result = MEMORY[0x2105289B0](v0 + 16);
  if (result)
  {
    sub_20A743780(result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A794878()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + *(void *)(*(void *)v0 + 120)) + 120);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);

  return swift_release();
}

uint64_t sub_20A7948E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A44EF90(*a1, *a2);
}

uint64_t sub_20A7948F0()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A79499C()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A794A34()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A794ADC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A797BF0();
  *a1 = result;
  return result;
}

void sub_20A794B0C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0x800000020A8F80F0;
  unint64_t v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6E696C6C6F726373;
    unint64_t v4 = 0xE900000000000067;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E6974696465;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A794B74()
{
  unint64_t v1 = 0xD000000000000012;
  if (*v0 != 1) {
    unint64_t v1 = 0x6E696C6C6F726373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E6974696465;
  }
}

unint64_t sub_20A794BDC()
{
  unint64_t result = qword_26AC81588;
  if (!qword_26AC81588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81588);
  }
  return result;
}

uint64_t sub_20A794C30()
{
  return swift_getWitnessTable();
}

uint64_t sub_20A794C4C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A794C84(uint64_t a1)
{
  return sub_20A786D20(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_20A794C90(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A796E0C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A794CD4(uint64_t a1, void *a2)
{
  v15[0] = a1;
  uint64_t v3 = sub_20A8C1FA0();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2F70();
  id v9 = objc_msgSend(a2, sel_view, MEMORY[0x270FA5388](v8));
  if (v9)
  {
    uint64_t v10 = v9;
    sub_20A8CEE60();

    id v11 = objc_msgSend(a2, sel_view);
    if (v11)
    {
      uint64_t v12 = v11;
      (*(void (**)(char *, void, uint64_t))(v5 + 16))(v7, v15[0], v4);
      sub_20A8C2F60();
      v15[1] = MEMORY[0x263F8EE78];
      sub_20A795AFC((unint64_t *)&unk_26AC81220, MEMORY[0x263EFB6A0]);
      sub_20A4F58BC(0);
      sub_20A795AFC(&qword_26AC81800, sub_20A4F58BC);
      sub_20A8CF290();
      id v13 = objc_allocWithZone((Class)sub_20A8C7D10());
      sub_20A795AFC(&qword_26AC81238, MEMORY[0x263F7AA98]);
      uint64_t v14 = (void *)sub_20A8C7D00();
      sub_20A8CEE70();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_20A794FB4(uint64_t a1)
{
  int v2 = v1;
  v29[1] = *v1;
  uint64_t v4 = sub_20A8C2E80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79415C(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)v29 - v12;
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v29 - v18;
  sub_20A8C2E30();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    sub_20A793228();
    goto LABEL_9;
  }
  sub_20A8C2E40();
  uint64_t v22 = sub_20A8C34C0();
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v19, 1, v22);
  sub_20A7978D4((uint64_t)v19, (uint64_t (*)(void))sub_20A5726A4);
  if (v23 != 1)
  {
    sub_20A793458();
    goto LABEL_9;
  }
  sub_20A8C2E50();
  uint64_t v24 = sub_20A8C3410();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v13, 1, v24);
  sub_20A7978D4((uint64_t)v13, (uint64_t (*)(void))sub_20A79415C);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    char v26 = sub_20A8C2E20();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v26 & 1) == 0) {
      goto LABEL_9;
    }
  }
  sub_20A792B04(a1);
LABEL_9:
  uint64_t result = MEMORY[0x2105289B0](v2 + 2);
  if (result)
  {
    uint64_t v28 = result;
    sub_20A8C2E40();
    sub_20A8C2E50();
    sub_20A74288C((uint64_t)v16, (uint64_t)v10, v28);
    swift_unknownObjectRelease();
    sub_20A7978D4((uint64_t)v10, (uint64_t (*)(void))sub_20A79415C);
    return sub_20A7978D4((uint64_t)v16, (uint64_t (*)(void))sub_20A5726A4);
  }
  return result;
}

uint64_t sub_20A795368(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  sub_20A794128(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v28 - v7;
  uint64_t v9 = sub_20A8C2EF0();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(*(void *)v1 + 232);
  uint64_t v40 = *(void *)(v1 + v11);
  sub_20A7975A0(0, (unint64_t *)&qword_26AC812D0, (uint64_t (*)(void))sub_20A795BE0, (uint64_t)&type metadata for StockListRefreshBlocker, MEMORY[0x263F7D288]);
  sub_20A795C34((unint64_t *)&unk_26AC812B0);
  swift_retain();
  sub_20A8CE840();
  uint64_t result = sub_20A8CE8A0();
  if (v39 & 1) != 0 || (v36)
  {
    __break(1u);
    return result;
  }
  uint64_t v13 = v37;
  uint64_t v14 = v34;
  int v15 = v35;
  int v16 = v38;
  swift_release();
  if (v16 == v15)
  {
    if (v13 == v14)
    {
      sub_20A790AA0(v33);
      return swift_release();
    }
    if (qword_26AC675A8 == -1) {
      goto LABEL_7;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_7:
  uint64_t v17 = sub_20A8C7DF0();
  __swift_project_value_buffer(v17, (uint64_t)qword_26AC9E888);
  swift_retain_n();
  uint64_t v18 = sub_20A8C7DD0();
  os_log_type_t v19 = sub_20A8CEA00();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v29 = v5;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v37 = v21;
    v28[1] = v20 + 4;
    uint64_t v34 = *(void *)(v2 + v11);
    sub_20A795C34((unint64_t *)&unk_26AC812C0);
    uint64_t v22 = sub_20A8CF720();
    uint64_t v34 = sub_20A687610(v22, v23, &v37);
    uint64_t v5 = v29;
    sub_20A8CF1C0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20A414000, v18, v19, "Stock list update price data will be queued while refresh is blocked by: %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210528850](v21, -1, -1);
    MEMORY[0x210528850](v20, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v24 = v32;
  uint64_t v25 = v2 + *(void *)(*(void *)v2 + 240);
  swift_beginAccess();
  sub_20A797934(v25, (uint64_t)v8, (uint64_t (*)(void))sub_20A794128);
  uint64_t v26 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v24) == 1)
  {
    sub_20A7978D4((uint64_t)v8, (uint64_t (*)(void))sub_20A794128);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v5, v33, v24);
  }
  else
  {
    uint64_t v27 = v30;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v30, v8, v24);
    sub_20A8C2ED0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v24);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v5, 0, 1, v24);
  swift_beginAccess();
  sub_20A796030((uint64_t)v5, v25, (uint64_t (*)(void))sub_20A794128);
  return swift_endAccess();
}

uint64_t sub_20A795894()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (uint64_t (*)(uint64_t))off_26BE61880[0];
  type metadata accessor for StockListDataManager();
  return v2(v1);
}

uint64_t sub_20A795914()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockListSelectionModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 2, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A795A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockListSelectionModel() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_20A791DD4(a1, a2, v2 + v6, *(uint64_t **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_20A795AFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A795B48(char *a1)
{
  return sub_20A78FBA0(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_20A795B5C()
{
  sub_20A78FC4C(*(unsigned char *)(v0 + 16), *(unsigned char *)(v0 + 17), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

void sub_20A795B70()
{
  if (!qword_26AC81240)
  {
    sub_20A79415C(255);
    sub_20A794128(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC81240);
    }
  }
}

unint64_t sub_20A795BE0()
{
  unint64_t result = qword_26AC81580;
  if (!qword_26AC81580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81580);
  }
  return result;
}

uint64_t sub_20A795C34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A7975A0(255, (unint64_t *)&qword_26AC812D0, (uint64_t (*)(void))sub_20A795BE0, (uint64_t)&type metadata for StockListRefreshBlocker, MEMORY[0x263F7D288]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A795CB0()
{
  return sub_20A7910F0(*(void *)(v0 + 16), *(void *)(v0 + 24), "Stock list is being refreshed with queued priceChangeDisplay", sub_20A784930);
}

uint64_t sub_20A795CEC()
{
  return sub_20A7911FC(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_20A795CF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A795D30()
{
  return objectdestroy_25Tm(MEMORY[0x263F7AA20]);
}

uint64_t sub_20A795D48()
{
  uint64_t v1 = *(void *)(sub_20A8C2EF0() - 8);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A790E00(v2, v3);
}

uint64_t sub_20A795DB0()
{
  return sub_20A790FD4(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_20A795DD0()
{
  return sub_20A7910F0(*(void *)(v0 + 16), *(void *)(v0 + 24), "Stock list is being refreshed with queued price data", sub_20A790AA0);
}

uint64_t objectdestroy_19Tm()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_20A795E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A7922F4(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[2], v4[3]);
}

uint64_t sub_20A795E84()
{
  return sub_20A73457C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_20A795E8C()
{
  uint64_t v1 = sub_20A8C2EF0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A795F78(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(sub_20A8C2EF0() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + v6;
  uint64_t v9 = (char *)v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(uint64_t))v9;
  uint64_t v11 = *((void *)v9 + 1);

  return sub_20A792594(a1, v7, v8, v10, v11, v3, v4);
}

uint64_t sub_20A796030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A796098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A7918F4(a1, a2, a3, a4, v4[4], v4[5], v4[2], v4[3]);
}

uint64_t sub_20A7960A4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A7960E4(uint64_t a1)
{
  return sub_20A791ABC(a1, *(void *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_20A7960F8()
{
  return sub_20A795AFC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A796140()
{
  return sub_20A8C8870();
}

uint64_t sub_20A796190(unsigned __int8 *a1)
{
  return sub_20A853E94(*a1, **(unsigned char **)(v1 + 16)) & 1;
}

uint64_t sub_20A7961B8()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A796200()
{
  return sub_20A78F254(*(void (**)(double))(v0 + 32));
}

uint64_t sub_20A796214()
{
  uint64_t v1 = *(void *)(sub_20A8C2B70() - 8);
  uint64_t v2 = *(uint64_t **)(v0 + 32);
  int v3 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A78E2B0(v2, v3, v4);
}

void sub_20A79627C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StockListModel(255);
    uint64_t v7 = sub_20A795AFC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t objectdestroy_68Tm()
{
  uint64_t v1 = sub_20A8C2B70();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A7963E8()
{
  uint64_t v1 = *(void *)(sub_20A8C2B70() - 8);
  uint64_t v2 = *(void *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A78E6AC(v2, v3, v4);
}

uint64_t sub_20A79646C(uint64_t a1)
{
  return sub_20A78CFEC(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_20A796478()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StockListStockModel(0) - 8) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v1 + 40) & ~v1);
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for StockViewModel();
  uint64_t v5 = v2 + v4[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v2 + v4[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v2 + v4[8];
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A79682C(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = *(void *)(type metadata accessor for StockListStockModel(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[4];
  uint64_t v9 = *(void *)((char *)v1 + v7);
  uint64_t v10 = (uint64_t)v1 + v6;
  uint64_t v11 = (void *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  return sub_20A78C0B8(a1, v8, v10, v9, v12, v13, v3, v4);
}

uint64_t sub_20A7968F0()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StockListStockModel(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 32) & ~v1);
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for StockViewModel();
  uint64_t v5 = v2 + v4[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v2 + v4[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v2 + v4[8];
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A796C7C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListStockModel(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_20A78C5F8(a1, v1 + v4, v5);
}

uint64_t sub_20A796D18()
{
  return sub_20A78D31C(v0[4], v0[2], v0[3]);
}

uint64_t sub_20A796D24()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (uint64_t (*)(uint64_t))off_26BE61888[0];
  type metadata accessor for StockListDataManager();
  return v2(v1);
}

uint64_t sub_20A796DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  return sub_20A78AA80(a1, a2, a3);
}

void sub_20A796DBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A796E0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    long long v8[2] = sub_20A42D40C();
    v8[3] = sub_20A795AFC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A796ECC()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockListStockModel(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v29 = *(void *)(v1 + 64);
  sub_20A796E0C(0, (unint64_t *)&unk_26AC6A168, MEMORY[0x263F7D640]);
  uint64_t v30 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_20A8C3F00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v2, v7);
  uint64_t v8 = (int *)type metadata accessor for StockViewModel();
  unint64_t v9 = v0 + v2 + v8[5];
  uint64_t v10 = sub_20A8C3E10();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v6 + v8[6];
  uint64_t v13 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
    uint64_t v15 = v12 + *(int *)(v13 + 32);
    uint64_t v16 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  unint64_t v17 = (v2 + v29 + v5) & ~v5;
  uint64_t v18 = v6 + v8[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v20 = v18 + v19[9];
  uint64_t v21 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  uint64_t v22 = v18 + v19[10];
  uint64_t v23 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = v18 + v19[11];
  uint64_t v25 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  uint64_t v26 = v6 + v8[8];
  uint64_t v27 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v17, v30);

  return swift_deallocObject();
}

uint64_t sub_20A797300(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListStockModel(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_20A796E0C(0, (unint64_t *)&unk_26AC6A168, MEMORY[0x263F7D640]);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = v1
     + ((v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));

  return sub_20A788D38(a1, v7, v1 + v4, v8);
}

uint64_t sub_20A797408()
{
  return objectdestroy_25Tm(MEMORY[0x263F7DBE0]);
}

uint64_t sub_20A797420(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8CA320() - 8);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A787DA4(a1, v4, v5);
}

uint64_t sub_20A7974A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A797510(uint64_t a1)
{
}

uint64_t sub_20A797544()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A79757C(uint64_t a1)
{
  return sub_20A7844F4(a1);
}

uint64_t sub_20A797588(uint64_t a1)
{
  return sub_20A784C58(a1);
}

void sub_20A797594(uint64_t a1)
{
  sub_20A784DCC(a1, v1[4], v1[2], v1[3]);
}

void sub_20A7975A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_20A797608()
{
  unint64_t result = qword_26AC73500;
  if (!qword_26AC73500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73500);
  }
  return result;
}

void sub_20A79765C(uint64_t a1)
{
}

uint64_t sub_20A797668()
{
  uint64_t v1 = sub_20A8C9B80();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A79770C()
{
  uint64_t v1 = *(void *)(sub_20A8C9B80() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A786AF4(v2);
}

uint64_t sub_20A797798(uint64_t a1)
{
  return sub_20A786534(a1);
}

uint64_t sub_20A7977A4(uint64_t a1, uint64_t a2)
{
  sub_20A7975A0(0, &qword_26AC6B1D8, (uint64_t (*)(void))sub_20A797608, (uint64_t)&type metadata for StockListOfflineModel, MEMORY[0x263F59BF0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A797840(uint64_t a1)
{
  sub_20A7975A0(0, &qword_26AC6B1D8, (uint64_t (*)(void))sub_20A797608, (uint64_t)&type metadata for StockListOfflineModel, MEMORY[0x263F59BF0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A7978D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A797934(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A79799C()
{
  return sub_20A79180C();
}

uint64_t sub_20A7979A8()
{
  uint64_t v0 = off_26BE61890[0];
  type metadata accessor for StockListDataManager();
  return v0();
}

uint64_t sub_20A797A1C(uint64_t a1)
{
  return sub_20A790AA0(a1);
}

void sub_20A797A48(uint64_t a1)
{
}

uint64_t sub_20A797A7C()
{
  return objectdestroy_25Tm(MEMORY[0x263F7A990]);
}

uint64_t objectdestroy_25Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A797B68()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = *(void *)(sub_20A8C2E80() - 8);
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A792EC4(v4, v5, v1, v2);
}

uint64_t sub_20A797BE8(uint64_t a1)
{
  return sub_20A793010(a1, v1);
}

uint64_t sub_20A797BF0()
{
  unint64_t v0 = sub_20A8CF5B0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_20A797C84()
{
  return sub_20A70E70C();
}

uint64_t sub_20A797CA8()
{
  return sub_20A795CB0();
}

uint64_t sub_20A797CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C2800();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v54 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C22A0();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6);
  int v53 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2AF0();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v49 = (char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C2A80();
  uint64_t v57 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  unsigned __int8 v52 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7983F4(0, &qword_26AC68EC8, MEMORY[0x263F7ADC0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = sub_20A8C3A40();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = a2;
  uint64_t v23 = v20;
  sub_20A8C3C00();
  uint64_t v24 = v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_20A798368((uint64_t)v14);
  }
  else
  {
    v47[1] = ObjectType;
    v47[2] = v19;
    v47[3] = v23;
    uint64_t v48 = v10;
    uint64_t v25 = v18;
    uint64_t v26 = v18;
    uint64_t v27 = v15;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v26, v14, v15);
    uint64_t v28 = v52;
    sub_20A8C2A40();
    uint64_t v29 = type metadata accessor for StockEarningsModel();
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v22 + *(int *)(v29 + 28), v51);
    sub_20A8C2A50();
    sub_20A7983F4(0, (unint64_t *)&qword_26AC7FE70, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
    uint64_t v30 = sub_20A8C2A60();
    uint64_t v31 = *(void *)(v30 - 8);
    unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v31 + 104))(v33 + v32, *MEMORY[0x263F07870], v30);
    sub_20A7BA4B0(v33);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v34 = v54;
    sub_20A8C3A20();
    uint64_t v35 = v53;
    sub_20A8C29C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v56);
    uint64_t v36 = sub_20A8C2230();
    uint64_t v37 = v28;
    uint64_t v38 = v24;
    char v39 = v25;
    if (v40)
    {
      (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v59);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v48);
    }
    else
    {
      uint64_t v42 = v58;
      uint64_t v41 = v59;
      uint64_t v43 = v48;
      uint64_t v44 = v57;
      if (v36 < 1)
      {
        v47[0] = v39;
        uint64_t v45 = sub_20A8C3A30();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v41);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v43);
        (*(void (**)(void, uint64_t))(v38 + 8))(v47[0], v27);
        return v45;
      }
      sub_20A8C3BE0();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v41);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v37, v43);
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v27);
  }
  return 0;
}

uint64_t type metadata accessor for StockFeedEarningsViewModelFactory()
{
  return self;
}

uint64_t sub_20A798368(uint64_t a1)
{
  sub_20A7983F4(0, &qword_26AC68EC8, MEMORY[0x263F7ADC0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A7983F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A798458(uint64_t a1, unsigned __int8 *a2)
{
  double v116 = (char *)a1;
  sub_20A564720(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v96 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v107 = (char *)&v92 - v6;
  uint64_t v105 = sub_20A8CD1F0();
  uint64_t v104 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v106 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_20A8CD3A0();
  uint64_t v100 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v103 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_20A8CD640();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v101 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55CD34();
  uint64_t v108 = v10;
  uint64_t v113 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v114 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v12 - 8);
  int v109 = (uint64_t *)((char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v111 = sub_20A8CA640();
  uint64_t v95 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v94 = (uint64_t *)((char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v93 = (char *)&v92 - v16;
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v17 - 8);
  char v110 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v92 - v23;
  uint64_t v25 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (uint64_t *)((char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28);
  uint64_t v112 = (uint64_t)&v92 - v29;
  MEMORY[0x270FA5388](v30);
  unint64_t v32 = (uint64_t *)((char *)&v92 - v31);
  MEMORY[0x270FA5388](v33);
  uint64_t v115 = (uint64_t)&v92 - v34;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v92 - v36;
  uint64_t v38 = type metadata accessor for ForYouFeedRouteModel();
  MEMORY[0x270FA5388](v38);
  uint64_t v97 = (uint64_t)&v92 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v92 - v41;
  int v43 = *a2;
  sub_20A79A4A0((uint64_t)v116, (uint64_t)&v92 - v41, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
  double v116 = (char *)v38;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    LODWORD(v111) = v43;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v45 = v112;
      sub_20A79A580((uint64_t)v42, v112, type metadata accessor for StocksActivity.Article);
      sub_20A79A4A0(v45, (uint64_t)v27, type metadata accessor for StocksActivity.Article);
      uint64_t v46 = swift_getEnumCaseMultiPayload();
      if (v46 == 1)
      {
        uint64_t v47 = *v27;
      }
      else
      {
        sub_20A42FC8C();
        uint64_t v63 = (uint64_t)v27 + *(int *)(v62 + 64);
        uint64_t v64 = (void (*)(void, void, void, void))v109;
        sub_20A79A580((uint64_t)v27, (uint64_t)v109, MEMORY[0x263F58AA8]);
        uint64_t v47 = sub_20A8C4D70();
        sub_20A79A440((uint64_t)v64, MEMORY[0x263F58AA8]);
        uint64_t v46 = sub_20A49127C(v63, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40);
        if (!v47)
        {
          uint64_t v85 = v97;
          sub_20A79A4A0(v45, v97, type metadata accessor for StocksActivity.Article);
          swift_storeEnumTagMultiPayload();
          LOBYTE(v120[0]) = v111;
          sub_20A798458(v85, v120);
          sub_20A79A440(v85, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
          goto LABEL_14;
        }
      }
      uint64_t v65 = v117;
      MEMORY[0x270FA5388](v46);
      *(&v92 - 2) = v65;
      *(&v92 - 1) = v45;
      sub_20A8C6670();
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = v47;
      *(void *)(v66 + 24) = v65;
      swift_unknownObjectRetain();
      swift_retain();
      uint64_t v67 = (void *)sub_20A8C6450();
      sub_20A8C6500();
      swift_release();
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v68 = v45;
      return sub_20A79A440(v68, type metadata accessor for StocksActivity.Article);
    }
    uint64_t v60 = v115;
    sub_20A79A580((uint64_t)v42, v115, type metadata accessor for StocksActivity.Article);
    sub_20A79A4A0(v60, (uint64_t)v32, type metadata accessor for StocksActivity.Article);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v61 = *v32;
    }
    else
    {
      sub_20A42FC8C();
      uint64_t v70 = (uint64_t)v32 + *(int *)(v69 + 64);
      uint64_t v71 = (void (*)(void, void, void, void))v109;
      sub_20A79A580((uint64_t)v32, (uint64_t)v109, MEMORY[0x263F58AA8]);
      uint64_t v61 = sub_20A8C4D70();
      sub_20A79A440((uint64_t)v71, MEMORY[0x263F58AA8]);
      sub_20A49127C(v70, (unint64_t *)&qword_26AC79B50, (unint64_t *)&unk_26AC79B40);
      if (!v61)
      {
        uint64_t v80 = v115;
        uint64_t v86 = v97;
        sub_20A79A4A0(v115, v97, type metadata accessor for StocksActivity.Article);
        swift_storeEnumTagMultiPayload();
        LOBYTE(v120[0]) = v111;
        sub_20A798458(v86, v120);
        sub_20A79A440(v86, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
        goto LABEL_22;
      }
    }
    uint64_t v112 = v61;
    *(void *)&v118[0] = v61;
    (*(void (**)(char *, void, uint64_t))(v98 + 104))(v101, *MEMORY[0x263F59CC0], v99);
    (*(void (**)(char *, void, uint64_t))(v100 + 104))(v103, *MEMORY[0x263F59C08], v102);
    (*(void (**)(char *, void, uint64_t))(v104 + 104))(v106, *MEMORY[0x263F59B58], v105);
    memset(v120, 0, sizeof(v120));
    sub_20A4549BC();
    swift_unknownObjectRetain();
    uint64_t v72 = v114;
    sub_20A8CD540();
    uint64_t ObjectType = swift_getObjectType();
    sub_20A8CB790();
    uint64_t v74 = v113;
    uint64_t v75 = (uint64_t)v107;
    uint64_t v76 = v108;
    uint64_t v106 = *(char **)(v113 + 16);
    ((void (*)(char *, char *, uint64_t))v106)(v107, v72, v108);
    int v109 = *(void **)(v74 + 56);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v109)(v75, 0, 1, v76);
    char v110 = (char *)ObjectType;
    char v77 = sub_20A8C8D00();
    swift_release();
    sub_20A79A440(v75, (uint64_t (*)(void))sub_20A564720);
    if (v77)
    {
      sub_20A8CB790();
      uint64_t v78 = (uint64_t)v96;
      uint64_t v79 = v114;
      ((void (*)(char *, char *, uint64_t))v106)(v96, v114, v76);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v109)(v78, 0, 1, v76);
      sub_20A8C8D40();
      swift_unknownObjectRelease();
      swift_release();
      sub_20A79A440(v78, (uint64_t (*)(void))sub_20A564720);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v79, v76);
      uint64_t v68 = v115;
      return sub_20A79A440(v68, type metadata accessor for StocksActivity.Article);
    }
    uint64_t v80 = v115;
    uint64_t v81 = v97;
    sub_20A79A4A0(v115, v97, type metadata accessor for StocksActivity.Article);
    swift_storeEnumTagMultiPayload();
    LOBYTE(v120[0]) = v111;
    sub_20A798458(v81, v120);
    swift_unknownObjectRelease();
    sub_20A79A440(v81, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v114, v76);
LABEL_22:
    uint64_t v68 = v80;
    return sub_20A79A440(v68, type metadata accessor for StocksActivity.Article);
  }
  uint64_t v48 = (uint64_t)v110;
  uint64_t v49 = v111;
  double v116 = v21;
  sub_20A79A580((uint64_t)v42, (uint64_t)v37, type metadata accessor for StocksActivity.Article);
  if (v43)
  {
    uint64_t v50 = v117;
    uint64_t v51 = (void *)(v117 + 280);
    __swift_project_boxed_opaque_existential_1((void *)(v117 + 280), *(void *)(v117 + 304));
    uint64_t v52 = sub_20A8C8DC0();
    if (v52)
    {
      int v53 = (void *)v52;
      sub_20A79A4A0((uint64_t)v37, (uint64_t)v116, type metadata accessor for StocksActivity.Article);
      swift_storeEnumTagMultiPayload();
      __swift_project_boxed_opaque_existential_1(v51, *(void *)(v50 + 304));
      id v54 = v53;
      uint64_t v55 = sub_20A8C8DD0();
      uint64_t v56 = v55;
      if (v43 == 1)
      {

        uint64_t v59 = v94;
        *uint64_t v94 = v56;
        uint64_t v87 = (unsigned int *)MEMORY[0x263F7DCA0];
        uint64_t v57 = v49;
        uint64_t v58 = v95;
      }
      else
      {
        uint64_t v57 = v49;
        uint64_t v58 = v95;
        if (v43 == 2)
        {

          uint64_t v59 = v94;
          *uint64_t v94 = 0;
          v59[1] = v56;
        }
        else
        {
          uint64_t v88 = v94;
          *uint64_t v94 = (uint64_t)v53;
          v88[1] = v55;
          uint64_t v59 = v88;
        }
        uint64_t v87 = (unsigned int *)MEMORY[0x263F7DCA8];
      }
      uint64_t v89 = v93;
      (*(void (**)(uint64_t *, void, uint64_t))(v58 + 104))(v59, *v87, v57);
      (*(void (**)(char *, uint64_t *, uint64_t))(v58 + 32))(v89, v59, v57);
      uint64_t v90 = (uint64_t)v116;
      sub_20A8C8590();

      (*(void (**)(char *, uint64_t))(v58 + 8))(v89, v57);
      sub_20A79A440(v90, type metadata accessor for StocksActivity);
    }
  }
  else
  {
    uint64_t v82 = v117;
    sub_20A79A4A0((uint64_t)v37, (uint64_t)v24, type metadata accessor for StocksActivity.Article);
    swift_storeEnumTagMultiPayload();
    uint64_t v83 = *(void *)(v82 + 144);
    uint64_t v84 = sub_20A8C6D60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v48, 1, 1, v84);
    sub_20A4342F4(v82 + 152, (uint64_t)v120);
    uint64_t v119 = 0;
    memset(v118, 0, sizeof(v118));
    swift_retain();
    sub_20A5BFAAC((uint64_t)v24, v83, v48, (uint64_t)v120, 0, 0, (uint64_t)v118);
    swift_release();
    sub_20A49127C((uint64_t)v118, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
    sub_20A49127C((uint64_t)v120, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
    sub_20A79A440(v48, (uint64_t (*)(void))sub_20A556CDC);
    sub_20A79A440((uint64_t)v24, type metadata accessor for StocksActivity);
    swift_release();
  }
  uint64_t v68 = (uint64_t)v37;
  return sub_20A79A440(v68, type metadata accessor for StocksActivity.Article);
}

uint64_t sub_20A7994B0(uint64_t a1, uint64_t a2)
{
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A79A4A0(a2, (uint64_t)v9, type metadata accessor for StocksActivity.Article);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(void *)(a1 + 144);
  uint64_t v11 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_20A4342F4(a1 + 152, (uint64_t)v15);
  sub_20A4342F4(a1 + 40, (uint64_t)v14);
  swift_retain();
  uint64_t v12 = sub_20A5BFAAC((uint64_t)v9, v10, (uint64_t)v6, (uint64_t)v15, 0, 0, (uint64_t)v14);
  sub_20A49127C((uint64_t)v14, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v15, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A79A440((uint64_t)v6, (uint64_t (*)(void))sub_20A556CDC);
  sub_20A79A440((uint64_t)v9, type metadata accessor for StocksActivity);
  swift_release();
  return v12;
}

uint64_t sub_20A7996D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a3;
  sub_20A564720(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v35 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)&v34 - v7;
  uint64_t v8 = sub_20A8CD1F0();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = (char *)v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v37 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = (void (*)(char *, char *, uint64_t))sub_20A8CD3A0();
  uint64_t v10 = *((void *)v36 - 1);
  MEMORY[0x270FA5388](v36);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CD640();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55CD34();
  uint64_t v18 = v17;
  uint64_t v43 = *(void *)(v17 - 8);
  double v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = a2;
  (*(void (**)(char *, void, uint64_t, double))(v14 + 104))(v16, *MEMORY[0x263F59CC0], v13, v19);
  (*(void (**)(char *, void, void *))(v10 + 104))(v12, *MEMORY[0x263F59C08], v36);
  (*(void (**)(char *, void, char *))(v38 + 104))(v37, *MEMORY[0x263F59B58], v39);
  long long v44 = 0u;
  long long v45 = 0u;
  sub_20A4549BC();
  swift_unknownObjectRetain();
  sub_20A8CD540();
  uint64_t v22 = *(void *)(v42 + 96);
  uint64_t ObjectType = swift_getObjectType();
  sub_20A8CB790();
  uint64_t v24 = v43;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
  uint64_t v26 = (uint64_t)v40;
  uint64_t v39 = v21;
  uint64_t v36 = v25;
  v25(v40, v21, v18);
  uint64_t v27 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56);
  uint64_t v42 = v18;
  v27(v26, 0, 1, v18);
  uint64_t v28 = v26;
  uint64_t v37 = (char *)ObjectType;
  uint64_t v38 = v22;
  LOBYTE(v26) = sub_20A8C8D00();
  swift_release();
  sub_20A79A440(v28, (uint64_t (*)(void))sub_20A564720);
  if (v26)
  {
    sub_20A8CB790();
    uint64_t v29 = (uint64_t)v35;
    uint64_t v30 = v39;
    uint64_t v31 = v42;
    v36(v35, v39, v42);
    v27(v29, 0, 1, v31);
    unint64_t v32 = v41;
    sub_20A8C8D40();
    swift_release();
    if (v32) {

    }
    sub_20A79A440(v29, (uint64_t (*)(void))sub_20A564720);
  }
  else
  {
    uint64_t v30 = v39;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v30, v42);
}

uint64_t sub_20A799B98(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ForYouFeedRouteModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_20A747520();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = type metadata accessor for StocksActivity(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_20A79A4A0(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
  if (swift_getEnumCaseMultiPayload() >= 2)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    sub_20A79A440((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ForYouFeedRouteModel);
  }
  else
  {
    sub_20A79A580((uint64_t)v5, (uint64_t)v8, type metadata accessor for StocksActivity.Article);
    sub_20A79A580((uint64_t)v8, (uint64_t)v11, type metadata accessor for StocksActivity.Article);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  }
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_20A79A440((uint64_t)v11, (uint64_t (*)(void))sub_20A747520);
    return 0;
  }
  else
  {
    sub_20A79A580((uint64_t)v11, (uint64_t)v15, type metadata accessor for StocksActivity);
    uint64_t v17 = *(void *)(v1 + 80);
    uint64_t v18 = *(void *)(v1 + 144);
    sub_20A4342F4(v1 + 152, (uint64_t)v24);
    v23[4] = v17;
    v23[3] = sub_20A8C4990();
    v23[0] = v18;
    sub_20A4B2A1C((uint64_t)v24, (uint64_t)v22);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    sub_20A4B2AE0((uint64_t)v22, v19 + 24);
    sub_20A491334();
    sub_20A4B2B68((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
    swift_retain_n();
    swift_retain();
    uint64_t v16 = sub_20A8CBC70();
    swift_release();
    sub_20A79A440((uint64_t)v23, (uint64_t (*)(void))sub_20A42F348);
    sub_20A49127C((uint64_t)v24, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
    swift_release();
    sub_20A79A440((uint64_t)v15, type metadata accessor for StocksActivity);
  }
  return v16;
}

uint64_t sub_20A799FE4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F6DE4();
  uint64_t v12 = *(int *)(v11 + 48);
  uint64_t v13 = sub_20A8C3F00();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v25 = a1;
  uint64_t v23 = v15;
  v15(v10, a1, v13);
  *(void *)&v10[v12] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(void *)(v1 + 144);
  uint64_t v17 = sub_20A8C6D60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  sub_20A4342F4(v1 + 152, (uint64_t)v28);
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v10, v16, (uint64_t)v7, (uint64_t)v28, 0, 0, (uint64_t)v26);
  swift_release();
  sub_20A49127C((uint64_t)v26, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
  sub_20A49127C((uint64_t)v28, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
  sub_20A79A440((uint64_t)v7, (uint64_t (*)(void))sub_20A556CDC);
  sub_20A79A440((uint64_t)v10, type metadata accessor for StocksActivity);
  swift_release();
  uint64_t result = MEMORY[0x2105289B0](v1 + 24);
  if (result)
  {
    uint64_t v19 = *(void *)(result + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = (uint64_t)v24;
    v23(v24, v25, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 2, v13);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 96);
    swift_retain();
    v22(v21, ObjectType, v19);
    sub_20A79A440(v21, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A79A370()
{
  swift_unknownObjectWeakDestroy();
  sub_20A4380C4(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  __swift_destroy_boxed_opaque_existential_1(v0 + 192);
  __swift_destroy_boxed_opaque_existential_1(v0 + 232);

  __swift_destroy_boxed_opaque_existential_1(v0 + 280);
  return v0;
}

uint64_t sub_20A79A3E8()
{
  sub_20A79A370();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedRouter()
{
  return self;
}

uint64_t sub_20A79A440(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A79A4A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A79A508()
{
  return sub_20A7994B0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A79A524()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A79A564(uint64_t a1)
{
  return sub_20A7996D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_20A79A580(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A79A5E8()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }

  return swift_deallocObject();
}

uint64_t sub_20A79A630()
{
  return 0;
}

uint64_t sub_20A79A63C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_20A79A66C(uint64_t a1)
{
  unint64_t v2 = sub_20A79AC34();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A79A6A8(uint64_t a1)
{
  unint64_t v2 = sub_20A79AC34();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A79A6E4(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_20A79A70C(void *a1)
{
  sub_20A79ABD8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A79AC34();
  sub_20A8CF8F0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_20A79A818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_20A8CCD40();
  uint64_t v1 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79AB70();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v23 - v8;
  uint64_t v10 = sub_20A8CCC20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C2830();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2820();
  uint64_t v18 = sub_20A8C2810();
  v23[0] = v19;
  v23[1] = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F599B0], v10);
  uint64_t v20 = sub_20A8C6610();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v9, 1, 1, v20);
  v21(v6, 1, 1, v20);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F599E0], v24);
  sub_20A4FF550();
  sub_20A4FF5A4();
  return sub_20A8CC570();
}

void sub_20A79AB70()
{
  if (!qword_26AC82450)
  {
    sub_20A8C6610();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82450);
    }
  }
}

ValueMetadata *type metadata accessor for NewsPlacardStockFeedGroupConfigData()
{
  return &type metadata for NewsPlacardStockFeedGroupConfigData;
}

void sub_20A79ABD8()
{
  if (!qword_26763DDC0)
  {
    sub_20A79AC34();
    unint64_t v0 = sub_20A8CF6F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DDC0);
    }
  }
}

unint64_t sub_20A79AC34()
{
  unint64_t result = qword_26763DDC8;
  if (!qword_26763DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DDC8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsPlacardStockFeedGroupConfigData.CodingKeys()
{
  return &type metadata for NewsPlacardStockFeedGroupConfigData.CodingKeys;
}

unint64_t sub_20A79AC9C()
{
  unint64_t result = qword_26763DDD0;
  if (!qword_26763DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DDD0);
  }
  return result;
}

unint64_t sub_20A79ACF4()
{
  unint64_t result = qword_26763DDD8;
  if (!qword_26763DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DDD8);
  }
  return result;
}

uint64_t (*sub_20A79AD48())(uint64_t a1)
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = (uint64_t (*)(uint64_t))v1;
  if (v1 == 1)
  {
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v2 = sub_20A79B904;
    *(void *)(v0 + 64) = sub_20A79B904;
    *(void *)(v0 + 72) = v3;
    swift_retain();
    sub_20A79B8A4(v4);
  }
  sub_20A79B8B4(v1);
  return v2;
}

uint64_t (*sub_20A79ADF8())(uint64_t a1)
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = (uint64_t (*)(uint64_t))v1;
  if (v1 == 1)
  {
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    uint64_t v4 = *(void *)(v0 + 80);
    uint64_t v2 = sub_20A79B880;
    *(void *)(v0 + 80) = sub_20A79B880;
    *(void *)(v0 + 88) = v3;
    swift_retain();
    sub_20A79B8A4(v4);
  }
  sub_20A79B8B4(v1);
  return v2;
}

uint64_t sub_20A79AEA8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    id v8 = sub_20A79AF80();
    objc_msgSend(v8, sel_setPersonalizedAds_, a3 & 1);

    *(unsigned char *)(v7 + 57) = a4;
    sub_20A8C4170();
    type metadata accessor for OnboardingPersonalizedAdsStep();
    sub_20A79B8C4((unint64_t *)&unk_26763DDE0);
    sub_20A8C42F0();
    swift_release();
    sub_20A79B570();
    return swift_release();
  }
  return result;
}

id sub_20A79AF80()
{
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    id v2 = *(id *)(v0 + 96);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F51788]), sel_init);
    uint64_t v4 = *(void **)(v0 + 96);
    *(void *)(v0 + 96) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_20A79AFEC()
{
  uint64_t v1 = v0;
  sub_20A8C4170();
  sub_20A79B8C4(&qword_26AC68220);
  sub_20A8C41C0();
  swift_release();
  if (v30 == 1)
  {
    if (qword_26AC69CA0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_20A8C7DF0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26AC69C80);
    id v3 = sub_20A8C7DD0();
    os_log_type_t v4 = sub_20A8CEA00();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v5 = 0;
      _os_log_impl(&dword_20A414000, v3, v4, "Force showing due to showPersonalizedAdsOnNextLaunch being set", v5, 2u);
      MEMORY[0x210528850](v5, -1, -1);
    }

    return 1;
  }
  id v7 = sub_20A79AF80();
  id v8 = objc_msgSend(v7, sel_acknowledgedVersionForPersonalizedAds);

  id v9 = sub_20A79AF80();
  id v10 = objc_msgSend(v9, sel_latestVersionForPersonalizedAdsConsent);

  if ((uint64_t)v8 >= (uint64_t)v10)
  {
    if (qword_26AC69CA0 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_20A8C7DF0();
    __swift_project_value_buffer(v18, (uint64_t)qword_26AC69C80);
    swift_retain_n();
    uint64_t v19 = sub_20A8C7DD0();
    os_log_type_t v20 = sub_20A8CEA00();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 134349056;
      id v22 = sub_20A79AF80();
      objc_msgSend(v22, sel_acknowledgedVersionForPersonalizedAds);
      swift_release();

      sub_20A8CF1C0();
      swift_release();
      _os_log_impl(&dword_20A414000, v19, v20, "Not showing due to version: %{public}ld", v21, 0xCu);
      MEMORY[0x210528850](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
  id v11 = objc_msgSend(self, sel_sharedAccount);
  unsigned int v12 = objc_msgSend(v11, sel_isContentStoreFrontSupported);

  if (!v12)
  {
    if (qword_26AC69CA0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_20A8C7DF0();
    __swift_project_value_buffer(v23, (uint64_t)qword_26AC69C80);
    uint64_t v14 = sub_20A8C7DD0();
    os_log_type_t v15 = sub_20A8CEA00();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_23;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    uint64_t v17 = "Not showing due to unsupported storefront";
    goto LABEL_22;
  }
  if (*(unsigned char *)(v1 + 56))
  {
    if (qword_26AC69CA0 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_20A8C7DF0();
    __swift_project_value_buffer(v13, (uint64_t)qword_26AC69C80);
    uint64_t v14 = sub_20A8C7DD0();
    os_log_type_t v15 = sub_20A8CEA00();
    if (!os_log_type_enabled(v14, v15)) {
      goto LABEL_23;
    }
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    uint64_t v17 = "Not showing due non-apple news source";
LABEL_22:
    _os_log_impl(&dword_20A414000, v14, v15, v17, v16, 2u);
    MEMORY[0x210528850](v16, -1, -1);
LABEL_23:

    return 0;
  }
  id v25 = sub_20A79AF80();
  id v6 = objc_msgSend(v25, sel_shouldPresentPersonalizedAdsOnboarding);

  if (qword_26AC69CA0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_20A8C7DF0();
  __swift_project_value_buffer(v26, (uint64_t)qword_26AC69C80);
  uint64_t v27 = sub_20A8C7DD0();
  os_log_type_t v28 = sub_20A8CEA00();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 67109120;
    sub_20A8CF1C0();
    _os_log_impl(&dword_20A414000, v27, v28, "Should present personalized ads onboarding: %{BOOL}d", v29, 8u);
    MEMORY[0x210528850](v29, -1, -1);
  }

  return (uint64_t)v6;
}

void sub_20A79B570()
{
  id v0 = sub_20A79AF80();
  id v1 = objc_msgSend(v0, sel_latestVersionForPersonalizedAdsConsent);

  id v2 = sub_20A79AF80();
  objc_msgSend(v2, sel_setAcknowledgedVersionForPersonalizedAds_, v1);

  if (qword_26AC69CA0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_20A8C7DF0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26AC69C80);
  swift_retain_n();
  os_log_type_t v4 = sub_20A8C7DD0();
  os_log_type_t v5 = sub_20A8CEA00();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v6 = 134349056;
    id v7 = sub_20A79AF80();
    objc_msgSend(v7, sel_acknowledgedVersionForPersonalizedAds);
    swift_release();

    sub_20A8CF1C0();
    swift_release();
    _os_log_impl(&dword_20A414000, v4, v5, "Set acknowledgedVersion to %{public}ld", v6, 0xCu);
    MEMORY[0x210528850](v6, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_20A79B720()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_20A79B8A4(*(void *)(v0 + 64));
  sub_20A79B8A4(*(void *)(v0 + 80));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for OnboardingPersonalizedAdsStep()
{
  return self;
}

uint64_t sub_20A79B794()
{
  return sub_20A79AFEC() & 1;
}

uint64_t sub_20A79B7BC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A4342F4(*v1 + 16, a1);
}

uint64_t (*sub_20A79B7CC())(uint64_t a1)
{
  return sub_20A79AD48();
}

uint64_t (*sub_20A79B7F0())(uint64_t a1)
{
  return sub_20A79ADF8();
}

uint64_t sub_20A79B814()
{
  return sub_20A79B8C4(&qword_26AC68220);
}

uint64_t sub_20A79B848()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A79B880(uint64_t a1)
{
  return sub_20A79AEA8(a1, v1, 0, 0);
}

uint64_t sub_20A79B8A4(uint64_t result)
{
  if (result != 1) {
    return sub_20A459CA4(result);
  }
  return result;
}

uint64_t sub_20A79B8B4(uint64_t result)
{
  if (result != 1) {
    return sub_20A480ED4(result);
  }
  return result;
}

uint64_t sub_20A79B8C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for OnboardingPersonalizedAdsStep();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A79B904(uint64_t a1)
{
  return sub_20A79AEA8(a1, v1, 1, 1);
}

uint64_t type metadata accessor for NoopForYouFeedTitleViewAnimator()
{
  return self;
}

id sub_20A79B94C(int a1, id a2, double a3, void *a4)
{
  objc_msgSend(a2, sel_setAlpha_, 1.0 - a3);
  objc_msgSend(a2, sel_frame);
  objc_msgSend(a4, sel_setFrame_);

  return objc_msgSend(a4, sel_setAlpha_, 1.0);
}

uint64_t sub_20A79B9CC(char a1, void *a2, void *a3)
{
  return sub_20A79B9D4(a1 & 1, a2, a3);
}

uint64_t sub_20A79B9D4(char a1, id a2, void *a3)
{
  uint64_t v5 = a1 & 1;
  if (a1) {
    double v6 = 0.0;
  }
  else {
    double v6 = 1.0;
  }
  if (a1) {
    double v7 = 1.0;
  }
  else {
    double v7 = 0.0;
  }
  objc_msgSend(a2, sel_setAlpha_, v6);
  objc_msgSend(a2, sel_frame);
  objc_msgSend(a3, sel_setFrame_);
  objc_msgSend(a3, sel_setAlpha_, v7);
  return v5;
}

void *sub_20A79BA60(uint64_t a1)
{
  id v2 = v1;
  uint64_t v39 = *v1;
  uint64_t v5 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v5);
  uint64_t v38 = v4;
  uint64_t v6 = *(void *)(v4 + 8);
  double v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  v42[3] = v5;
  v42[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v42);
  v7(a1, v5, v6);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v2[10]);
  uint64_t v37 = v8;
  uint64_t v10 = *(void *)(v8 + 8);
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  void v41[3] = v9;
  v41[4] = v8;
  uint64_t v35 = __swift_allocate_boxed_opaque_existential_1(v41);
  v11(a1, v9, v10);
  uint64_t v13 = v1[15];
  uint64_t v12 = v1[16];
  __swift_project_boxed_opaque_existential_1(v2 + 12, v2[15]);
  uint64_t v14 = *(void *)(v12 + 8);
  os_log_type_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8);
  v40[3] = v13;
  v40[4] = v12;
  uint64_t v16 = __swift_allocate_boxed_opaque_existential_1(v40);
  uint64_t v17 = v15(a1, v13, v14);
  double v18 = MEMORY[0x270FA5388](v17);
  os_log_type_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v21 + 16))(v20, boxed_opaque_existential_1, v5, v18);
  double v23 = MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v26 + 16))(v25, v35, v9, v23);
  double v28 = MEMORY[0x270FA5388](v27);
  char v30 = (char *)&v34 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v31 + 16))(v30, v16, v13, v28);
  unint64_t v32 = sub_20A79BF38((uint64_t)v20, (uint64_t)v25, (uint64_t)v30, v39, v5, v13, v9, v38, v12, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v32;
}

id sub_20A79BDAC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_20A48CB98();
  double v9 = MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a4, sel_userInterfaceIdiom, v9) == (id)5)
  {
    int v12 = 0;
  }
  else
  {
    objc_msgSend(a4, sel_horizontalSizeClass);
    int v12 = 1;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 96), *(void *)(v4 + 120));
  sub_20A430C8C(a2, v12, (uint64_t)v11);
  uint64_t v13 = sub_20A8CF110();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 0, 1, v13);
  sub_20A8CF130();
  return objc_msgSend(a1, sel_setPreferredBehavioralStyle_, 1);
}

uint64_t type metadata accessor for StockSearchSectionHeaderViewStyler()
{
  return self;
}

void *sub_20A79BF0C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_20A79BA60(a1);
  *a2 = result;
  return result;
}

void *sub_20A79BF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a5;
  uint64_t v36 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  uint64_t v32 = a7;
  uint64_t v33 = a10;
  uint64_t v17 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(v17, a2, a7);
  uint64_t v29 = a6;
  uint64_t v30 = a9;
  double v18 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v18, a3, a6);
  uint64_t v19 = (void *)swift_allocObject();
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v29);
  double v21 = MEMORY[0x270FA5388](v20);
  double v23 = (uint64_t *)((char *)&v28[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
  uint64_t v25 = *v23;
  v19[15] = type metadata accessor for WatchlistSwitcherStyler();
  v19[16] = &off_26BE5FBF8;
  v19[12] = v25;
  sub_20A42BEBC(&v34, (uint64_t)(v19 + 2));
  sub_20A42BEBC(&v31, (uint64_t)(v19 + 7));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v19;
}

uint64_t type metadata accessor for BrandingTitleViewRenderer()
{
  return self;
}

unint64_t sub_20A79C160(uint64_t a1)
{
  unint64_t result = sub_20A79C188();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_20A79C188()
{
  unint64_t result = qword_26AC75F80;
  if (!qword_26AC75F80)
  {
    type metadata accessor for BrandingTitleViewRenderer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC75F80);
  }
  return result;
}

unint64_t sub_20A79C1DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v4 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v5 = v4;
  uint64_t v6 = sub_20A8B9ED4(v2, (uint64_t)&off_26BE6EA00);
  uint64_t v7 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v6;
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  double v9 = v1 + 2;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  id v14 = v8;
  uint64_t v15 = v13(v11, v12);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  return sub_20A4CF8B0(inited);
}

unint64_t sub_20A79C31C(uint64_t (*a1)(uint64_t, _UNKNOWN **))
{
  uint64_t v3 = v1;
  uint64_t v4 = *v1;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v6 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v7 = v6;
  uint64_t v8 = a1(v4, &off_26BE6EA00);
  uint64_t v9 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v8;
  uint64_t v10 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = v3 + 2;
  uint64_t v12 = v3[5];
  uint64_t v13 = v3[6];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 88);
  id v16 = v10;
  uint64_t v17 = v15(v12, v14);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v17;
  return sub_20A4CF8B0(inited);
}

unint64_t sub_20A79C464()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v4 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v5 = v4;
  uint64_t v6 = sub_20A8B9F00(v2, (uint64_t)&off_26BE6EA00);
  uint64_t v7 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v6;
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  uint64_t v9 = v1 + 2;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 184);
  id v14 = v8;
  uint64_t v15 = v13(v11, v12);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  return sub_20A4CF8B0(inited);
}

uint64_t type metadata accessor for TodayViewStyler()
{
  return self;
}

id sub_20A79C5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_bridgeObjectRetain();
  if (a5) {
    sub_20A79C31C((uint64_t (*)(uint64_t, _UNKNOWN **))sub_20A8B9ED4);
  }
  else {
    sub_20A79C1DC();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v8 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  return v9;
}

id sub_20A79C6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  swift_bridgeObjectRetain();
  if (a5) {
    sub_20A79C31C((uint64_t (*)(uint64_t, _UNKNOWN **))sub_20A8B9F00);
  }
  else {
    sub_20A79C464();
  }
  id v6 = objc_allocWithZone(MEMORY[0x263F089B8]);
  uint64_t v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v8 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

  return v9;
}

uint64_t sub_20A79C7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

unint64_t sub_20A79C8F0()
{
  unint64_t result = qword_26AC6D778;
  if (!qword_26AC6D778)
  {
    type metadata accessor for StockFeedGroup();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6D778);
  }
  return result;
}

uint64_t sub_20A79C948(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = sub_20A8C4020();
  uint64_t v4 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  id v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79CD78(a1, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A79D194((uint64_t)v12, (uint64_t)v9);
    uint64_t v13 = *((void *)v9 + 2);
    swift_bridgeObjectRetain();
    sub_20A79D1F8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    uint64_t v14 = *(void *)(v13 + 16);
    if (!v14)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      uint64_t v15 = (void *)MEMORY[0x263F8EE78];
      goto LABEL_12;
    }
  }
  else
  {
    sub_20A79D1F8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    uint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v14) {
      goto LABEL_3;
    }
  }
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v16 = v4 + 16;
  long long v34 = v17;
  uint64_t v18 = v13 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
  uint64_t v19 = *(void *)(v16 + 56);
  void v32[2] = a2;
  uint64_t v33 = v19;
  uint64_t v20 = (void (**)(char *, uint64_t))(v16 - 8);
  v32[1] = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v21 = v35;
    v34(v6, v18, v35);
    uint64_t v22 = sub_20A8C3F90();
    uint64_t v24 = v23;
    (*v20)(v6, v21);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_20A46DEBC(0, v15[2] + 1, 1, v15);
    }
    unint64_t v26 = v15[2];
    unint64_t v25 = v15[3];
    if (v26 >= v25 >> 1) {
      uint64_t v15 = sub_20A46DEBC((void *)(v25 > 1), v26 + 1, 1, v15);
    }
    void v15[2] = v26 + 1;
    uint64_t v27 = &v15[2 * v26];
    v27[4] = v22;
    v27[5] = v24;
    v18 += v33;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease_n();
LABEL_12:
  uint64_t v28 = sub_20A873528((uint64_t)v15);
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v28;
  uint64_t v29 = (void *)sub_20A8C6450();
  uint64_t v30 = sub_20A8C6500();
  swift_release();

  return v30;
}

uint64_t sub_20A79CCB8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a1;
  char v6 = a1[16];
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_20A79CDDC(v7, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a3 = v5;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v6;
  return result;
}

uint64_t sub_20A79CD48@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A79C948(a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_20A79CD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A79CDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_20A8C4020();
  MEMORY[0x270FA5388](v5);
  uint64_t v46 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v49 = MEMORY[0x263F8EE78];
  uint64_t v44 = *(void *)(a1 + 16);
  if (v44)
  {
    v38[1] = v2;
    uint64_t v13 = 0;
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
    uint64_t v14 = v8 + 16;
    unint64_t v40 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    uint64_t v41 = a1 + v40;
    uint64_t v42 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    uint64_t v47 = a2 + 56;
    uint64_t v48 = v16;
    uint64_t v39 = (void (**)(char *, uint64_t))(v14 - 8);
    long long v45 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v43 = v14;
    while (1)
    {
      uint64_t v17 = v5;
      v42(v11, v41 + v48 * v13, v5, v9);
      uint64_t v18 = sub_20A8C3F90();
      uint64_t v20 = v19;
      uint64_t v21 = a2;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
      uint64_t v22 = v18;
      sub_20A8CF880();
      sub_20A8CE360();
      uint64_t v23 = sub_20A8CF8C0();
      uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v25 = v23 & ~v24;
      if (((*(void *)(v47 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v26 = *(void *)(v21 + 48);
      uint64_t v27 = (void *)(v26 + 16 * v25);
      BOOL v28 = *v27 == v22 && v27[1] == v20;
      if (!v28 && (sub_20A8CF760() & 1) == 0) {
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      uint64_t v5 = v17;
      (*v39)(v11, v17);
LABEL_4:
      ++v13;
      a2 = v21;
      if (v13 == v44) {
        return v49;
      }
    }
    unint64_t v29 = v25 + 1;
    uint64_t v30 = ~v24;
    for (unint64_t i = v29 & ~v24; ((*(void *)(v47 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v30)
    {
      uint64_t v32 = (void *)(v26 + 16 * i);
      BOOL v33 = *v32 == v22 && v32[1] == v20;
      if (v33 || (sub_20A8CF760() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    long long v34 = *v45;
    uint64_t v5 = v17;
    (*v45)(v46, v11, v17);
    uint64_t v35 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_20A68C5E4(0, *(void *)(v35 + 16) + 1, 1);
      uint64_t v35 = v49;
    }
    unint64_t v37 = *(void *)(v35 + 16);
    unint64_t v36 = *(void *)(v35 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_20A68C5E4(v36 > 1, v37 + 1, 1);
      uint64_t v35 = v49;
    }
    *(void *)(v35 + 16) = v37 + 1;
    v34((char *)(v35 + v40 + v37 * v48), v46, v17);
    uint64_t v49 = v35;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_20A79D140()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A79D178@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A79CCB8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_20A79D194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsStockFeedGroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A79D1F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A79D25C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StockFeedPoolHeadlines(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for StockFeedPoolHeadlines(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedPoolHeadlines(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedPoolHeadlines(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedPoolHeadlines()
{
  return &type metadata for StockFeedPoolHeadlines;
}

ValueMetadata *type metadata accessor for StockFeedPool()
{
  return &type metadata for StockFeedPool;
}

uint64_t sub_20A79D3E4(uint64_t a1)
{
  return sub_20A79D508(a1, 0x616E614D61746144, 0xEB00000000726567, &qword_26AC6DC48);
}

uint64_t sub_20A79D40C()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_20A8CE280();
  }
  sub_20A43F884();
  uint64_t result = sub_20A8CF190();
  qword_26AC6D3C8 = result;
  return result;
}

uint64_t sub_20A79D4E0(uint64_t a1)
{
  return sub_20A79D508(a1, 0x6665526563697250, 0xEC00000068736572, &qword_26AC6ED70);
}

uint64_t sub_20A79D508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5 = objc_msgSend(self, sel_mainBundle);
  id v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (v6)
  {
    sub_20A8CE280();
  }
  sub_20A43F884();
  uint64_t result = sub_20A8CF190();
  *a4 = result;
  return result;
}

uint64_t sub_20A79D5DC()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_20A8CE280();
  }
  sub_20A43F884();
  uint64_t result = sub_20A8CF190();
  qword_26AC6CF88 = result;
  return result;
}

uint64_t sub_20A79D6B0()
{
  uint64_t v0 = sub_20A8C7DF0();
  __swift_allocate_value_buffer(v0, qword_26AC9EC20);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9EC20);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_20A8CE280();
  }
  return sub_20A8C7DE0();
}

uint64_t sub_20A79D7A0()
{
  uint64_t v0 = sub_20A8C7DF0();
  __swift_allocate_value_buffer(v0, qword_267652FC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_267652FC0);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_20A8CE280();
  }
  return sub_20A8C7DE0();
}

uint64_t sub_20A79D890()
{
  uint64_t v0 = sub_20A8C7DF0();
  __swift_allocate_value_buffer(v0, qword_26AC9E888);
  __swift_project_value_buffer(v0, (uint64_t)qword_26AC9E888);
  id v1 = objc_msgSend(self, sel_mainBundle);
  id v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_20A8CE280();
  }
  return sub_20A8C7DE0();
}

uint64_t *sub_20A79D97C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    __n128 v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C40E0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
  }
  swift_retain();
  return v4;
}

uint64_t sub_20A79DA88(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

void *sub_20A79DB14(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  __n128 v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  swift_retain();
  return a1;
}

void *sub_20A79DBD4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_20A79DCA0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_20A79DD40(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_release();
  return a1;
}

uint64_t sub_20A79DDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A79DE04);
}

uint64_t sub_20A79DE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A79DEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A79DEC8);
}

uint64_t sub_20A79DEC8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C40E0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier()
{
  uint64_t result = qword_26763DDF0;
  if (!qword_26763DDF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A79DFBC()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A79E070(void (*a1)(char *), void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  sub_20A79EA9C(0, &qword_26763BA70, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (void *)((char *)v36 - v7);
  uint64_t v47 = sub_20A8CA4C0();
  uint64_t v41 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  unint64_t v40 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79EA9C(0, (unint64_t *)&qword_26763D180, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v46 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v45 = (char *)v36 - v12;
  sub_20A79EC0C(0, (unint64_t *)&qword_26763BA78, (uint64_t (*)(uint64_t))sub_20A42D680, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v36 - v14;
  sub_20A42D680();
  uint64_t v49 = *(void *)(v16 - 8);
  uint64_t v50 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v43 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A540774();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A79EA9C(0, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v42 = (char *)v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)v36 - v26;
  uint64_t v44 = v11;
  uint64_t v39 = a1;
  sub_20A8CBB90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22) == 1)
  {
    sub_20A79EB5C((uint64_t)v20);
    sub_20A79EBB8();
    *uint64_t v8 = swift_allocError();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D930], v5);
    v52(v8);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v37 = v6;
    uint64_t v38 = v5;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v27, v20, v22);
    type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier();
    sub_20A8C4050();
    sub_20A8C8920();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v15, 1, v50) == 1)
    {
      sub_20A725C70((uint64_t)v15);
      sub_20A79EBB8();
      *uint64_t v8 = swift_allocError();
      uint64_t v30 = v37;
      uint64_t v29 = v38;
      (*(void (**)(uint64_t *, void, uint64_t))(v37 + 104))(v8, *MEMORY[0x263F7D930], v38);
      v52(v8);
      (*(void (**)(uint64_t *, uint64_t))(v30 + 8))(v8, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v43, v15, v50);
      (*(void (**)(void))(v23 + 16))();
      sub_20A8C8860();
      (*(void (**)(char *, void (*)(char *), uint64_t))(v46 + 16))(v45, v39, v44);
      sub_20A8CBAB0();
      LODWORD(v48) = *MEMORY[0x263F7DC48];
      uint64_t v32 = v40;
      uint64_t v31 = v41;
      uint64_t v39 = *(void (**)(char *))(v41 + 104);
      uint64_t v33 = v47;
      v39(v40);
      v36[1] = sub_20A8CA3A0();
      uint64_t v41 = *(void *)(v31 + 8);
      ((void (*)(char *, uint64_t))v41)(v32, v33);
      type metadata accessor for ManageWatchlistsModel();
      sub_20A42D7D4();
      sub_20A79EA54((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
      sub_20A8C9B40();
      v52(v8);
      (*(void (**)(uint64_t *, uint64_t))(v37 + 8))(v8, v38);
      uint64_t v34 = v47;
      ((void (*)(char *, void, uint64_t))v39)(v32, v48, v47);
      sub_20A8CA4D0();
      swift_release();
      ((void (*)(char *, uint64_t))v41)(v32, v34);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v44);
      uint64_t v35 = *(void (**)(char *, uint64_t))(v23 + 8);
      v35(v42, v22);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v50);
      return ((uint64_t (*)(char *, uint64_t))v35)(v27, v22);
    }
  }
}

uint64_t sub_20A79E884()
{
  sub_20A79EC0C(0, (unint64_t *)&qword_26AC7FFC8, MEMORY[0x263F7D880], MEMORY[0x263F8E0F8]);
  uint64_t v0 = sub_20A8C9880();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263F7D878], v0);
  uint64_t v4 = sub_20A7BAEDC(v3);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v4;
}

uint64_t sub_20A79E9C4()
{
  return sub_20A79EA54(&qword_26763DE00, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier);
}

uint64_t sub_20A79EA0C()
{
  return sub_20A79EA54((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
}

uint64_t sub_20A79EA54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A79EA9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    long long v8[2] = sub_20A42D7D4();
    v8[3] = sub_20A79EA54((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A79EB5C(uint64_t a1)
{
  sub_20A540774();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A79EBB8()
{
  unint64_t result = qword_26763DE08;
  if (!qword_26763DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DE08);
  }
  return result;
}

void sub_20A79EC0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A79ED0CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors()
{
  return &type metadata for ManageWatchlistsMoveWatchlistBlueprintModifier.Errors;
}

unint64_t sub_20A79ED48()
{
  unint64_t result = qword_26763DE10;
  if (!qword_26763DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DE10);
  }
  return result;
}

double sub_20A79ED9C()
{
  id v0 = objc_msgSend(self, sel_configurationWithPointSize_weight_, 4, 64.0);
  xmmword_267652FE0 = xmmword_20A8EFB90;
  xmmword_267652FF0 = xmmword_20A8EFBA0;
  double result = 32.0;
  xmmword_267653000 = xmmword_20A8EFBB0;
  xmmword_267653010 = xmmword_20A8EFBC0;
  qword_267653020 = 0x4034000000000000;
  qword_267653028 = (uint64_t)v0;
  return result;
}

double sub_20A79EE14()
{
  id v0 = objc_msgSend(self, sel_configurationWithPointSize_weight_, 4, 40.0);
  xmmword_267653030 = xmmword_20A8EFBD0;
  xmmword_267653040 = xmmword_20A8EFBE0;
  double result = 29.0;
  xmmword_267653050 = xmmword_20A8EFBF0;
  xmmword_267653060 = xmmword_20A8EFC00;
  qword_267653070 = 0x4030000000000000;
  qword_267653078 = (uint64_t)v0;
  return result;
}

id sub_20A79EE8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_20A8C4A00();
  id v3 = objc_msgSend(v2, sel_systemFontOfSize_weight_);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  if (*(void *)(sub_20A8C28F0() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_20A592B6C();
    sub_20A592BC0();
    char v5 = sub_20A8CE1D0();
    swift_bridgeObjectRelease();
    if (v5)
    {
      objc_msgSend(v3, sel_capHeight);
      double v7 = v6;
      objc_msgSend(v3, sel_descender);
      double v9 = v7 - v8;
      double v10 = *(double *)(v1 + 64);
      objc_msgSend(v3, sel_pointSize);
      double v12 = round(v9 + v10 * v11);
      objc_msgSend(v4, sel_setMinimumLineHeight_, v12);
      objc_msgSend(v4, sel_setMaximumLineHeight_, v12);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v4, sel_setAlignment_, 1);
  LODWORD(v13) = 0.5;
  objc_msgSend(v4, sel_setHyphenationFactor_, v13);
  objc_msgSend(v4, sel_setLineBreakStrategy_, 0xFFFFLL);
  sub_20A7A14E0(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  id v52 = v4;
  uint64_t v15 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v16 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v3;
  uint64_t v17 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v16;
  *(void *)(inited + 72) = v17;
  uint64_t v18 = *(void *)(v1 + 40);
  uint64_t v19 = *(void *)(v1 + 48);
  uint64_t v50 = (void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v18);
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v49 = v1;
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 40);
  swift_bridgeObjectRetain();
  id v22 = v15;
  id v54 = v3;
  id v23 = v17;
  uint64_t v24 = v21(v18, v20);
  uint64_t v25 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v24;
  uint64_t v26 = (void *)*MEMORY[0x263F81540];
  *(void *)(inited + 104) = v25;
  *(void *)(inited + 112) = v26;
  *(void *)(inited + 144) = sub_20A42CFF0(0, &qword_26AC7FA48);
  *(void *)(inited + 120) = v52;
  id v51 = v26;
  id v53 = v52;
  sub_20A4CF8B0(inited);
  id v27 = objc_allocWithZone(MEMORY[0x263F089B8]);
  BOOL v28 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A7A84FC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  uint64_t v29 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v27, sel_initWithString_attributes_, v28, v29);

  sub_20A48C5C0();
  sub_20A8CF240();
  if ((v31 & 1) == 0)
  {
    uint64_t v32 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F8D870];
    sub_20A7A8C10(0, &qword_26763DE78, MEMORY[0x263F8D2B0], MEMORY[0x263F8D2B8], MEMORY[0x263F8D870]);
    id v33 = v23;
    sub_20A7A8BB8(&qword_26763DE80, &qword_26763DE78, v32);
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_20A8CF170();
    uint64_t v36 = v35;
    uint64_t v38 = *(void *)(v49 + 40);
    uint64_t v37 = *(void *)(v49 + 48);
    __swift_project_boxed_opaque_existential_1(v50, v38);
    uint64_t v39 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v37 + 16) + 96))(v38);
    objc_msgSend(v30, sel_addAttribute_value_range_, v33, v39, v34, v36);
  }
  unint64_t v40 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F8D1A0];
  sub_20A7A8C10(0, &qword_26763DE68, MEMORY[0x263F8D2B0], MEMORY[0x263F8D2B8], MEMORY[0x263F8D1A0]);
  sub_20A7A8BB8(&qword_26763DE70, &qword_26763DE68, v40);
  sub_20A8CF260();
  id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  if (*(void *)(sub_20A8C28F0() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_20A592B6C();
    sub_20A592BC0();
    char v42 = sub_20A8CE1D0();
    swift_bridgeObjectRelease();
    uint64_t v43 = v54;
    if (v42)
    {
      objc_msgSend(v54, sel_lineHeight);
      objc_msgSend(v41, sel_setMinimumLineHeight_);
      objc_msgSend(v54, sel_lineHeight);
      objc_msgSend(v41, sel_setMaximumLineHeight_);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = v54;
  }
  objc_msgSend(v41, sel_setAlignment_, 1);
  objc_msgSend(v53, sel_hyphenationFactor);
  objc_msgSend(v41, sel_setHyphenationFactor_);
  objc_msgSend(v41, sel_setLineBreakStrategy_, 0xFFFFLL);
  uint64_t v44 = (uint64_t (*)(void, uint64_t, uint64_t))MEMORY[0x263F8D870];
  sub_20A7A8C10(0, &qword_26763DE78, MEMORY[0x263F8D2B0], MEMORY[0x263F8D2B8], MEMORY[0x263F8D870]);
  sub_20A7A8BB8(&qword_26763DE80, &qword_26763DE78, v44);
  swift_bridgeObjectRetain();
  id v45 = v41;
  uint64_t v46 = sub_20A8CF170();
  objc_msgSend(v30, sel_addAttribute_value_range_, v51, v45, v46, v47);

  return v30;
}

id sub_20A79F664()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  uint64_t v3 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v4 = (void *)sub_20A8CEE20();
  objc_msgSend(v4, sel_lineHeight);
  double v6 = v5;

  objc_msgSend(v2, sel_setMinimumLineHeight_, v6);
  double v7 = (void *)sub_20A8CEE20();
  objc_msgSend(v7, sel_lineHeight);
  double v9 = v8;

  objc_msgSend(v2, sel_setMaximumLineHeight_, v9);
  objc_msgSend(v2, sel_setLineBreakStrategy_, 0xFFFFLL);
  sub_20A7A14E0(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  double v11 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v12 = v11;
  *(void *)(inited + 40) = sub_20A8CEE20();
  double v13 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = v13;
  uint64_t v14 = v1 + 2;
  uint64_t v16 = v1[5];
  uint64_t v15 = v1[6];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 40);
  id v19 = v13;
  uint64_t v20 = v18(v16, v17);
  uint64_t v21 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v20;
  id v22 = (void *)*MEMORY[0x263F81540];
  *(void *)(inited + 104) = v21;
  *(void *)(inited + 112) = v22;
  *(void *)(inited + 144) = sub_20A42CFF0(0, &qword_26AC7FA48);
  *(void *)(inited + 120) = v2;
  id v23 = v22;
  id v24 = v2;
  sub_20A4CF8B0(inited);
  id v25 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v26 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A7A84FC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  id v27 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  return v28;
}

id sub_20A79F9A8()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  uint64_t v3 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v4 = (void *)sub_20A8CEE20();
  objc_msgSend(v4, sel_lineHeight);
  double v6 = v5;

  objc_msgSend(v2, sel_setMinimumLineHeight_, v6);
  double v7 = (void *)sub_20A8CEE20();
  objc_msgSend(v7, sel_lineHeight);
  double v9 = v8;

  objc_msgSend(v2, sel_setMaximumLineHeight_, v9);
  objc_msgSend(v2, sel_setLineBreakStrategy_, 0xFFFFLL);
  sub_20A7A14E0(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  double v11 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v12 = v11;
  sub_20A8C4A00();
  *(void *)(inited + 40) = sub_20A8CEE20();
  double v13 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 72) = v13;
  uint64_t v14 = v1 + 2;
  uint64_t v16 = v1[5];
  uint64_t v15 = v1[6];
  __swift_project_boxed_opaque_existential_1(v14, v16);
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 40);
  id v19 = v13;
  uint64_t v20 = v18(v16, v17);
  uint64_t v21 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v20;
  id v22 = (void *)*MEMORY[0x263F81540];
  *(void *)(inited + 104) = v21;
  *(void *)(inited + 112) = v22;
  *(void *)(inited + 144) = sub_20A42CFF0(0, &qword_26AC7FA48);
  *(void *)(inited + 120) = v2;
  id v23 = v22;
  id v24 = v2;
  sub_20A4CF8B0(inited);
  id v25 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v26 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A7A84FC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  id v27 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(v25, sel_initWithString_attributes_, v26, v27);

  return v28;
}

id sub_20A79FD04()
{
  uint64_t v0 = self;
  id v1 = objc_msgSend(v0, sel_currentDevice);
  id v2 = objc_msgSend(v1, sel_userInterfaceIdiom);

  if (v2 == (id)5)
  {
    uint64_t v3 = self;
    objc_msgSend(v3, sel_defaultFontSize);
    id v4 = objc_msgSend(v3, sel_boldSystemFontOfSize_);
  }
  else
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    id v4 = (id)sub_20A8CEE20();
  }
  double v5 = v4;
  sub_20A4CF8B0(MEMORY[0x263F8EE78]);
  id v6 = objc_msgSend(v0, sel_currentDevice);
  id v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

  if (v7 != (id)5)
  {
    double v8 = (void *)*MEMORY[0x263F81500];
    double v9 = self;
    id v10 = v8;
    id v11 = objc_msgSend(v9, sel_whiteColor);
    uint64_t v24 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)&long long v23 = v11;
    sub_20A441D28(&v23, v22);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_20A7A4114(v22, v10, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  double v13 = (void *)*MEMORY[0x263F814F0];
  uint64_t v24 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)&long long v23 = v5;
  sub_20A441D28(&v23, v22);
  id v14 = v13;
  id v15 = v5;
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_20A7A4114(v22, v14, v16);

  swift_bridgeObjectRelease();
  id v17 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A7A84FC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  id v19 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithString_attributes_, v18, v19);

  return v20;
}

uint64_t sub_20A7A002C(void *a1)
{
  id v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A7A14E0(0, &qword_26763DE18, MEMORY[0x263F067B0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v78 = (char *)&v73 - v4;
  sub_20A7A14E0(0, &qword_26763DE20, (uint64_t (*)(uint64_t))sub_20A7A1544, v2);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v79 = (char *)&v73 - v6;
  sub_20A7A1544();
  uint64_t v80 = v7;
  uint64_t v77 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v75 = (uint64_t)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v76 = (uint64_t)&v73 - v10;
  uint64_t v11 = sub_20A8C22F0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v73 - v16;
  uint64_t v85 = sub_20A8C2330();
  uint64_t v82 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v74 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v20 = MEMORY[0x270FA5388](v19);
  uint64_t v86 = (char *)&v73 - v21;
  id v22 = objc_msgSend(a1, sel_string, v20);
  uint64_t v23 = sub_20A8CE280();
  unint64_t v25 = v24;

  v89[0] = (void *)46;
  v89[1] = (void *)0xE100000000000000;
  uint64_t v88 = v89;
  sub_20A7A828C(sub_20A7A84A4, (uint64_t)v87, v23, v25);
  char v27 = v26;
  uint64_t v83 = v23;
  unint64_t v84 = v25;
  sub_20A8CE390();
  if ((v27 & 1) == 0)
  {
    sub_20A8CE3A0();
    sub_20A8CE450();
  }
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F089B8]), sel_initWithAttributedString_, a1);
  id v29 = a1;
  sub_20A8C2350();
  sub_20A8C2300();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  sub_20A7A84FC(&qword_26763DE38, MEMORY[0x263F067C8]);
  v89[0] = (void *)sub_20A8CE4F0();
  sub_20A7A61D8(v89);
  id v30 = v89[0];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  uint64_t v31 = v30[2];
  uint64_t v32 = v85;
  uint64_t v33 = (uint64_t)v78;
  if (!v31)
  {
    uint64_t v51 = sub_20A8C22E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v33, 1, 1, v51);
    uint64_t v38 = v82;
    uint64_t v39 = (uint64_t)v79;
    goto LABEL_9;
  }
  uint64_t v34 = v31 - 1;
  uint64_t v35 = sub_20A8C22E0();
  uint64_t v36 = *(void *)(v35 - 8);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v36 + 16))(v33, (unint64_t)v30+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v34, v35);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35);
  uint64_t v38 = v82;
  uint64_t v39 = (uint64_t)v79;
  if (v37 == 1)
  {
LABEL_9:
    sub_20A7A8544(v33, &qword_26763DE18, MEMORY[0x263F067B0]);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v39, 1, 1, v80);
    goto LABEL_10;
  }
  sub_20A8C22D0();
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v33, v35);
  uint64_t v40 = v77;
  uint64_t v41 = v80;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v39, 0, 1, v80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v39, 1, v41) == 1)
  {
LABEL_10:
    uint64_t v49 = v28;
    swift_release();
    sub_20A7A8544(v39, &qword_26763DE20, (uint64_t (*)(uint64_t))sub_20A7A1544);
LABEL_11:
    uint64_t v44 = v81;
    goto LABEL_12;
  }
  uint64_t v42 = v76;
  sub_20A7A8CF4(v39, v76, (uint64_t (*)(void))sub_20A7A1544);
  unint64_t v43 = v30[2];
  swift_release();
  if (v43 < 2)
  {
    uint64_t v49 = v28;
    sub_20A7A85B4(v42);
    goto LABEL_11;
  }
  uint64_t v79 = (char *)*MEMORY[0x263F81500];
  uint64_t v44 = v81;
  uint64_t v46 = *((void *)v81 + 5);
  uint64_t v45 = *((void *)v81 + 6);
  __swift_project_boxed_opaque_existential_1((void *)v81 + 2, v46);
  uint64_t v47 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v45 + 16) + 96))(v46);
  sub_20A7A8C8C(v42, v75, (uint64_t (*)(void))sub_20A7A1544);
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v74, v86, v32);
  sub_20A7A84FC(&qword_26763DE40, (void (*)(uint64_t))sub_20A7A1544);
  sub_20A7A84FC(&qword_26763DE48, MEMORY[0x263F06828]);
  uint64_t v48 = sub_20A8CF160();
  uint64_t v49 = v28;
  objc_msgSend(v28, sel_addAttribute_value_range_, v79, v47, v48, v50);

  sub_20A7A85B4(v42);
LABEL_12:
  id v52 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81650]), sel_init);
  objc_msgSend(v52, sel_setAlignment_, 1);
  double v53 = v44[14];
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82770]), sel_initForTextStyle_, *MEMORY[0x263F83570]);
  uint64_t v55 = self;
  double v56 = *MEMORY[0x263F81838];
  id v57 = objc_msgSend(v55, sel_systemFontOfSize_weight_, v53, *MEMORY[0x263F81838]);
  id v58 = objc_msgSend(v54, sel_scaledFontForFont_maximumPointSize_, v57, 18.0);

  objc_msgSend(v58, sel_pointSize);
  double v60 = v59;

  sub_20A7A14E0(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v62 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v63 = v62;
  id v64 = objc_msgSend(v55, sel_systemFontOfSize_weight_, v60, v56);
  uint64_t v65 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v64;
  uint64_t v66 = (void *)*MEMORY[0x263F81540];
  *(void *)(inited + 64) = v65;
  *(void *)(inited + 72) = v66;
  *(void *)(inited + 104) = sub_20A42CFF0(0, &qword_26AC7FA48);
  *(void *)(inited + 80) = v52;
  id v67 = v66;
  id v68 = v52;
  sub_20A4CF8B0(inited);
  type metadata accessor for Key(0);
  sub_20A7A84FC((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
  uint64_t v69 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_20A8CE390();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_addAttributes_range_, v69, 0, v70);

  sub_20A42CFF0(0, &qword_26AC7F948);
  uint64_t v71 = sub_20A8CEC30();

  (*(void (**)(char *, uint64_t))(v38 + 8))(v86, v85);
  return v71;
}

void sub_20A7A0BD0(void *a1, char a2)
{
  objc_msgSend(a1, sel_setContentMode_, 4);
  if (a2)
  {
    if (qword_2676398E8 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_267652CE8;
  }
  else
  {
    if (qword_2676398E0 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_267652CE0;
  }
  id v6 = objc_msgSend((id)*v5, sel_imageWithConfiguration_, *(void *)(v2 + 128));
  objc_msgSend(a1, sel_setImage_, v6);
}

void sub_20A7A0CD4(void *a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  int v5 = a2;
  objc_msgSend(a1, sel_setContentMode_, 4);
  if (qword_2676398F0 != -1) {
    swift_once();
  }
  id v6 = objc_msgSend((id)qword_267652CF0, sel_imageWithConfiguration_, v2[16]);
  id v17 = v6;
  if (v5 == 2)
  {
    objc_msgSend(a1, sel_setImage_, v6);
  }
  else
  {
    uint64_t v8 = v2[5];
    uint64_t v7 = v2[6];
    __swift_project_boxed_opaque_existential_1(v3 + 2, v3[5]);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v7 + 16) + 24))(&v18, v8);
    if (v5)
    {
      uint64_t v13 = v3[5];
      uint64_t v12 = v3[6];
      __swift_project_boxed_opaque_existential_1(v3 + 2, v13);
      id v14 = (id)(*(uint64_t (**)(uint64_t))(*(void *)(v12 + 16) + 96))(v13);
    }
    else
    {
      int v9 = v18;
      uint64_t v10 = self;
      if (v9 == 1) {
        id v11 = objc_msgSend(v10, sel_whiteColor);
      }
      else {
        id v11 = objc_msgSend(v10, sel_blackColor);
      }
      id v14 = v11;
    }
    uint64_t v15 = v14;
    uint64_t v16 = (void *)sub_20A8CEEF0();

    objc_msgSend(a1, sel_setImage_, v16);
  }
}

void sub_20A7A0EB0(void *a1)
{
  id v3 = objc_msgSend(self, sel_currentDevice);
  id v4 = objc_msgSend(v3, sel_userInterfaceIdiom);

  if (v4 != (id)5)
  {
    int v5 = v1 + 2;
    uint64_t v7 = v1[5];
    uint64_t v6 = v1[6];
    __swift_project_boxed_opaque_existential_1(v5, v7);
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v6 + 16) + 96))(v7);
    objc_msgSend(a1, sel_setBackgroundColor_, v8);
  }
  id v9 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v9, sel_setCornerRadius_, 14.0);

  id v10 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v10, sel_setCornerCurve_, *MEMORY[0x263F15A20]);
}

void sub_20A7A0FE0(void *a1, char a2)
{
  if (a2)
  {
    id v4 = v2 + 2;
    uint64_t v6 = v2[5];
    uint64_t v5 = v2[6];
    __swift_project_boxed_opaque_existential_1(v4, v6);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v5 + 16) + 24))(&v10, v6);
    if ((_BYTE)v10) {
      uint64_t v7 = 2;
    }
    else {
      uint64_t v7 = 1;
    }
    id v8 = objc_msgSend(self, sel_effectWithStyle_, v7);
  }
  else
  {
    id v8 = 0;
  }
  objc_msgSend(a1, sel_setEffect_, v8);
}

uint64_t sub_20A7A10B0()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WelcomeViewStyler()
{
  return self;
}

void destroy for WelcomeViewStyleParameters(uint64_t a1)
{
}

uint64_t initializeWithCopy for WelcomeViewStyleParameters(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  uint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  id v6 = v5;
  return a1;
}

void *assignWithCopy for WelcomeViewStyleParameters(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  long long v3 = (void *)a2[9];
  long long v4 = (void *)a1[9];
  a1[9] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for WelcomeViewStyleParameters(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  id v5 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  return a1;
}

uint64_t getEnumTagSinglePayload for WelcomeViewStyleParameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WelcomeViewStyleParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WelcomeViewStyleParameters()
{
  return &type metadata for WelcomeViewStyleParameters;
}

id sub_20A7A12D4()
{
  return sub_20A79EE8C();
}

id sub_20A7A12F8()
{
  return sub_20A79F664();
}

id sub_20A7A131C()
{
  return sub_20A79F9A8();
}

id sub_20A7A1340()
{
  return sub_20A79FD04();
}

uint64_t sub_20A7A1364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(*v3 + 40);
  uint64_t v8 = *(void *)(*v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  void v22[3] = v7;
  v22[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v22);
  uint64_t v12 = v10(a1, v7, v9);
  long long v13 = *(_OWORD *)(v6 + 72);
  long long v14 = *(_OWORD *)(v6 + 104);
  void v23[2] = *(_OWORD *)(v6 + 88);
  v23[3] = v14;
  v23[4] = *(_OWORD *)(v6 + 120);
  v23[0] = *(_OWORD *)(v6 + 56);
  v23[1] = v13;
  double v15 = MEMORY[0x270FA5388](v12);
  id v17 = (char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v18 + 16))(v17, boxed_opaque_existential_1, v7, v15);
  uint64_t v19 = sub_20A7A8398((uint64_t)v17, v23, a2, v7, v8);
  sub_20A7A8C60((uint64_t)v23);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  *uint64_t v21 = v19;
  return result;
}

void sub_20A7A14E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A7A1544()
{
  if (!qword_26763DE28)
  {
    sub_20A8C2320();
    sub_20A7A84FC(&qword_26763DE30, MEMORY[0x263F067E8]);
    unint64_t v0 = sub_20A8CE8E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DE28);
    }
  }
}

uint64_t sub_20A7A15D8(uint64_t a1, int a2)
{
  long long v3 = v2;
  uint64_t v5 = sub_20A8C2AF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_20A4D3E6C();
  int v46 = a2;
  uint64_t v10 = sub_20A8CF560();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  unint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  id v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          long long v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_20A7A84FC(&qword_26AC68D20, MEMORY[0x263F079C8]);
    uint64_t result = sub_20A8CE1B0();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  long long v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *long long v3 = v12;
  return result;
}

uint64_t sub_20A7A19F8(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A8818(0, (unint64_t *)&qword_26AC7FD50);
  char v35 = a2;
  uint64_t result = sub_20A8CF560();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v2;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v34 = -1 << v32;
              }
              long long v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void *)(v5 + 56) + 48 * v19;
      long long v36 = *(_OWORD *)(v28 + 16);
      long long v37 = *(_OWORD *)v28;
      uint64_t v30 = *(void **)(v28 + 32);
      uint64_t v29 = *(void *)(v28 + 40);
      if ((v35 & 1) == 0) {
        id v31 = v30;
      }
      sub_20A8CF880();
      sub_20A8CF890();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 48 * v16;
      *(_OWORD *)uint64_t v17 = v37;
      *(_OWORD *)(v17 + 16) = v36;
      *(void *)(v17 + 32) = v30;
      *(void *)(v17 + 40) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A1D04(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A8818(0, (unint64_t *)&qword_26AC7FD58);
  char v34 = a2;
  uint64_t result = sub_20A8CF560();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v33 = -1 << v31;
              }
              long long v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      long long v35 = *(_OWORD *)v28;
      uint64_t v29 = *(void **)(v28 + 16);
      if ((v34 & 1) == 0) {
        id v30 = v29;
      }
      sub_20A8CF880();
      sub_20A8CF890();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(_OWORD *)uint64_t v17 = v35;
      *(void *)(v17 + 16) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A2004(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A4D3BB8();
  char v35 = a2;
  uint64_t v6 = sub_20A8CF560();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    int64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_20A441D28(v22, v36);
    }
    else
    {
      sub_20A4ED764((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_20A8CE280();
    sub_20A8CF880();
    sub_20A8CE360();
    uint64_t v24 = sub_20A8CF8C0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_20A441D28(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A233C(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A887C();
  uint64_t v6 = sub_20A8CF560();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v32 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v32;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v31;
              }
              long long v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      unint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0) {
        id v30 = v29;
      }
      uint64_t result = sub_20A8CEF20();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A2600(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A8AE4(0, &qword_26AC7FD60, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewLabelAccessibilityElement, (void (*)(void))sub_20A4D4100);
  uint64_t result = sub_20A8CF560();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v31 = -1 << v29;
              }
              long long v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      BOOL v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_20A8CF880();
      sub_20A8CF890();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A2900(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A8A6C();
  char v38 = a2;
  uint64_t v6 = sub_20A8CF560();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          long long v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_20A8CF880();
    sub_20A8CE360();
    uint64_t result = sub_20A8CF8C0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  long long v3 = v35;
  char v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A2C0C(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A8AE4(0, (unint64_t *)&unk_26AC7FD70, (void (*)(uint64_t))type metadata accessor for TickerAnimation, (void (*)(void))sub_20A7A8B64);
  uint64_t result = sub_20A8CF560();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              long long v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      sub_20A8CF880();
      sub_20A8CF890();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A2F14(uint64_t a1, int a2)
{
  long long v3 = v2;
  uint64_t v49 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_20A7A8DD8(0, (unint64_t *)&qword_26AC7FD80, MEMORY[0x263F7AF08]);
  int v47 = a2;
  uint64_t v8 = sub_20A8CF560();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  unint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    unint64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          long long v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    sub_20A8CF880();
    sub_20A8CE360();
    uint64_t result = sub_20A8CF8C0();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    void *v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  long long v3 = v42;
  unint64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *long long v3 = v9;
  return result;
}

uint64_t sub_20A7A3314(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A8D5C();
  uint64_t result = sub_20A8CF560();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v30) {
          goto LABEL_33;
        }
        unint64_t v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v20 = v31[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v31 = -1 << v29;
              }
              long long v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v30) {
                  goto LABEL_33;
                }
                unint64_t v20 = v31[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        id v28 = v27;
      }
      sub_20A8CF880();
      sub_20A8CF890();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A35DC(uint64_t a1, char a2)
{
  long long v3 = v2;
  uint64_t v5 = *v2;
  sub_20A7A89D4();
  uint64_t result = sub_20A8CF560();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                long long v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v30 = -1 << v28;
              }
              long long v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_20A8CF880();
      sub_20A8CF8A0();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *long long v3 = v7;
  return result;
}

uint64_t sub_20A7A38AC(uint64_t a1, int a2)
{
  return sub_20A7A38F4(a1, a2, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs, (unint64_t *)&unk_26AC7FD90, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
}

uint64_t sub_20A7A38F4(uint64_t a1, int a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(void))
{
  uint64_t v51 = a6;
  uint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v49 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = *v6;
  sub_20A7A8DD8(0, a4, a5);
  int v50 = a2;
  uint64_t v15 = sub_20A8CF560();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v18 = *(void *)(v14 + 64);
  uint64_t v48 = (void *)(v14 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  uint64_t v46 = v6;
  int64_t v47 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v21 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v23 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v27 = v26 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v28 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v47) {
      break;
    }
    int64_t v29 = v48;
    unint64_t v30 = v48[v28];
    ++v23;
    if (!v30)
    {
      int64_t v23 = v28 + 1;
      if (v28 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v30 = v48[v23];
      if (!v30)
      {
        int64_t v31 = v28 + 2;
        if (v31 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v9 = v46;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v30 = v48[v31];
        if (!v30)
        {
          while (1)
          {
            int64_t v23 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_43;
            }
            if (v23 >= v47) {
              goto LABEL_34;
            }
            unint64_t v30 = v48[v23];
            ++v31;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        int64_t v23 = v31;
      }
    }
LABEL_21:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v23 << 6);
LABEL_22:
    uint64_t v32 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v27);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v35 = *(void *)(v49 + 72);
    uint64_t v36 = *(void *)(v14 + 56) + v35 * v27;
    if (v50)
    {
      sub_20A7A8CF4(v36, (uint64_t)v13, v51);
    }
    else
    {
      sub_20A7A8C8C(v36, (uint64_t)v13, v51);
      swift_bridgeObjectRetain();
    }
    sub_20A8CF880();
    sub_20A8CE360();
    uint64_t result = sub_20A8CF8C0();
    uint64_t v37 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v21 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v38) & ~*(void *)(v21 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v21 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v25 = (void *)(*(void *)(v16 + 48) + 16 * v24);
    void *v25 = v33;
    v25[1] = v34;
    uint64_t result = sub_20A7A8CF4((uint64_t)v13, *(void *)(v16 + 56) + v35 * v24, v51);
    ++*(void *)(v16 + 16);
  }
  swift_release();
  uint64_t v9 = v46;
  int64_t v29 = v48;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v14 + 32);
  if (v44 >= 64) {
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v29 = -1 << v44;
  }
  *(void *)(v14 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v9 = v16;
  return result;
}

uint64_t sub_20A7A3CB4(uint64_t a1, uint64_t a2, char a3)
{
  long long v4 = (void **)v3;
  uint64_t v8 = sub_20A8C2AF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_20A4D1B9C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_20A7A4B68();
    goto LABEL_7;
  }
  sub_20A7A15D8(v17, a3 & 1);
  unint64_t v23 = sub_20A4D1B9C(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_20A8CF7D0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_20A7A499C(v14, (uint64_t)v11, a1, v20);
}

void sub_20A7A3E5C(_OWORD *a1, unsigned __int8 a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_20A4D1C34(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_20A7A4DF8();
LABEL_7:
    BOOL v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7] + 48 * v10;

      long long v18 = a1[1];
      *(_OWORD *)uint64_t v17 = *a1;
      *(_OWORD *)(v17 + 16) = v18;
      *(_OWORD *)(v17 + 32) = a1[2];
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    uint64_t v21 = (_OWORD *)(v16[7] + 48 * v10);
    long long v22 = a1[1];
    *uint64_t v21 = *a1;
    v21[1] = v22;
    void v21[2] = a1[2];
    uint64_t v23 = v16[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      void v16[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_20A7A19F8(v13, a3 & 1);
  unint64_t v19 = sub_20A4D1C34(a2);
  if ((v14 & 1) == (v20 & 1))
  {
    unint64_t v10 = v19;
    BOOL v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_20A8CF7D0();
  __break(1u);
}

void sub_20A7A3FB8(uint64_t a1, unsigned __int8 a2, char a3, double a4, double a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_20A4D1C34(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_20A7A4FBC();
LABEL_7:
    char v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;

      *(double *)uint64_t v21 = a4;
      *(double *)(v21 + 8) = a5;
      *(void *)(v21 + 16) = a1;
      return;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(unsigned char *)(v20[6] + v14) = a2;
    uint64_t v24 = v20[7] + 24 * v14;
    *(double *)uint64_t v24 = a4;
    *(double *)(v24 + 8) = a5;
    *(void *)(v24 + 16) = a1;
    uint64_t v25 = v20[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      void v20[2] = v27;
      return;
    }
    goto LABEL_14;
  }
  sub_20A7A1D04(v17, a3 & 1);
  unint64_t v22 = sub_20A4D1C34(a2);
  if ((v18 & 1) == (v23 & 1))
  {
    unint64_t v14 = v22;
    char v20 = (void *)*v6;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_20A8CF7D0();
  __break(1u);
}

_OWORD *sub_20A7A4114(_OWORD *a1, void *a2, char a3)
{
  long long v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_20A4D1B20((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_20A7A5180();
      goto LABEL_7;
    }
    sub_20A7A2004(v12, a3 & 1);
    unint64_t v18 = sub_20A4D1B20((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for Key(0);
    uint64_t result = (_OWORD *)sub_20A8CF7D0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    BOOL v16 = (_OWORD *)(v15[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    return sub_20A441D28(a1, v16);
  }
LABEL_13:
  sub_20A7A4A54(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_20A7A4258(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_20A4D1B24(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_20A7A5F58((uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState, &qword_26AC7FD88, (void (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
      goto LABEL_7;
    }
    sub_20A7A38F4(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState, &qword_26AC7FD88, (void (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
    unint64_t v22 = sub_20A4D1B24(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      unint64_t v12 = v22;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_20A8CF7D0();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7];
    uint64_t v20 = v19 + *(void *)(*(void *)(type metadata accessor for StockViewRenderer.RenderedState() - 8) + 72) * v12;
    return sub_20A7A8970(a1, v20);
  }
LABEL_13:
  sub_20A7A4ABC(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

id sub_20A7A4444(void *a1, char a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_20A4D1D74((uint64_t)a1);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  id result = (id)(v12 + v13);
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= (uint64_t)result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= (uint64_t)result && (a2 & 1) == 0)
  {
    id result = sub_20A7A538C();
LABEL_7:
    uint64_t v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      unint64_t v18 = (double *)(v17[7] + 16 * v11);
      *unint64_t v18 = a3;
      v18[1] = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_20A7A233C((uint64_t)result, a2 & 1);
  id result = (id)sub_20A4D1D74((uint64_t)a1);
  if ((v15 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_20A42CFF0(0, &qword_26AC7F948);
    id result = (id)sub_20A8CF7D0();
    __break(1u);
    return result;
  }
  unint64_t v11 = (unint64_t)result;
  uint64_t v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  *(void *)(v17[6] + 8 * v11) = a1;
  uint64_t v20 = (double *)(v17[7] + 16 * v11);
  *uint64_t v20 = a3;
  v20[1] = a4;
  uint64_t v21 = v17[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17[2] = v23;

  return a1;
}

void sub_20A7A45BC(uint64_t a1, unsigned __int8 a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_20A4D1C34(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_20A7A5530();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_20A7A2600(v13, a3 & 1);
  unint64_t v18 = sub_20A4D1C34(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_20A8CF7D0();
  __break(1u);
}

void sub_20A7A46F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_20A4D1B24(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_20A7A5708();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_20A7A2900(v15, a4 & 1);
  unint64_t v20 = sub_20A4D1B24(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_20A8CF7D0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_20A7A4864(uint64_t a1, char a2, char a3)
{
  long long v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_20A4D1E14(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_20A7A58B8();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      void v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_20A7A2C0C(result, a3 & 1);
  uint64_t result = sub_20A4D1E14(v7);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_20A8CF7D0();
  __break(1u);
  return result;
}

uint64_t sub_20A7A499C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_20A8C2AF0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_20A7A4A54(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_20A441D28(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_20A7A4ABC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for StockViewRenderer.RenderedState();
  uint64_t result = sub_20A7A8CF4(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

void *sub_20A7A4B68()
{
  uint64_t v1 = sub_20A8C2AF0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  long long v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D3E6C();
  BOOL v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_20A8CF550();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *BOOL v24 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v25 = v5 + 64;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  uint64_t v28 = v2 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    unint64_t v17 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v17, v1);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v17, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20A7A4DF8()
{
  uint64_t v1 = v0;
  sub_20A7A8818(0, (unint64_t *)&qword_26AC7FD50);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 48 * v15;
    unint64_t v17 = *(void **)(v16 + 32);
    uint64_t v18 = *(void *)(v16 + 40);
    long long v19 = *(_OWORD *)v16;
    long long v20 = *(_OWORD *)(v16 + 16);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v21 = *(void *)(v4 + 56) + 48 * v15;
    *(_OWORD *)uint64_t v21 = v19;
    *(_OWORD *)(v21 + 16) = v20;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v18;
    id result = v17;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20A7A4FBC()
{
  uint64_t v1 = v0;
  sub_20A7A8818(0, (unint64_t *)&qword_26AC7FD58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 24 * v15;
    unint64_t v17 = *(void **)(v16 + 16);
    long long v18 = *(_OWORD *)v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v19 = *(void *)(v4 + 56) + 24 * v15;
    *(_OWORD *)uint64_t v19 = v18;
    *(void *)(v19 + 16) = v17;
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20A7A5180()
{
  uint64_t v1 = v0;
  sub_20A4D3BB8();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_20A4ED764(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_20A441D28(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A7A5344()
{
  return sub_20A7A5F58((uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState, &qword_26AC7FD88, (void (*)(uint64_t))type metadata accessor for StockViewRenderer.RenderedState, (uint64_t (*)(void))type metadata accessor for StockViewRenderer.RenderedState);
}

id sub_20A7A538C()
{
  uint64_t v1 = v0;
  sub_20A7A887C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20A7A5530()
{
  uint64_t v1 = v0;
  sub_20A7A8AE4(0, &qword_26AC7FD60, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewLabelAccessibilityElement, (void (*)(void))sub_20A4D4100);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20A7A5708()
{
  uint64_t v1 = v0;
  sub_20A7A8A6C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A7A58B8()
{
  uint64_t v1 = v0;
  sub_20A7A8AE4(0, (unint64_t *)&unk_26AC7FD70, (void (*)(uint64_t))type metadata accessor for TickerAnimation, (void (*)(void))sub_20A7A8B64);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A7A5A90()
{
  uint64_t v35 = sub_20A8C3F00();
  uint64_t v1 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v34 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7A8DD8(0, (unint64_t *)&qword_26AC7FD80, MEMORY[0x263F7AF08]);
  int64_t v29 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_20A8CF550();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v36 = v4;
  if (!v5)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v36;
    uint64_t v27 = v29;
LABEL_25:
    *uint64_t v27 = v28;
    return result;
  }
  uint64_t v6 = v4;
  id result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v36;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v30 = v3 + 64;
  int64_t v31 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v32 = v1 + 32;
  uint64_t v33 = v1 + 16;
  int64_t v13 = v34;
  uint64_t v14 = v35;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v31) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v30 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v13, *(void *)(v3 + 56) + v21, v14);
    uint64_t v22 = v36;
    unint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    void *v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v13, v14);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v31)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v27 = v29;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v30 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v31) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v30 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_20A7A5D70()
{
  uint64_t v1 = v0;
  sub_20A7A8D5C();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20A8CF550();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20A7A5F10()
{
  return sub_20A7A5F58((uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs, (unint64_t *)&unk_26AC7FD90, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
}

void *sub_20A7A5F58(uint64_t (*a1)(void), unint64_t *a2, void (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t v8 = a1(0);
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v32 - v9;
  sub_20A7A8DD8(0, a2, a3);
  uint64_t v32 = v4;
  uint64_t v11 = *v4;
  uint64_t v12 = sub_20A8CF550();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v32 = v13;
    return result;
  }
  id result = (void *)(v12 + 64);
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v13 + 32)) + 63) >> 6;
  if (v13 != v11 || (unint64_t)result >= v11 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v11 + 64), 8 * v15);
  }
  uint64_t v33 = v11 + 64;
  int64_t v17 = 0;
  *(void *)(v13 + 16) = *(void *)(v11 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v11 + 64);
  int64_t v34 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v34) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v33 + 8 * v29);
    ++v17;
    if (!v30)
    {
      int64_t v17 = v29 + 1;
      if (v29 + 1 >= v34) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v33 + 8 * v17);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v22 = __clz(__rbit64(v30)) + (v17 << 6);
LABEL_12:
    uint64_t v23 = 16 * v22;
    int64_t v24 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v22);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v27 = *(void *)(v35 + 72) * v22;
    sub_20A7A8C8C(*(void *)(v11 + 56) + v27, (uint64_t)v10, a4);
    uint64_t v28 = (void *)(*(void *)(v13 + 48) + v23);
    void *v28 = v25;
    v28[1] = v26;
    sub_20A7A8CF4((uint64_t)v10, *(void *)(v13 + 56) + v27, a4);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v34) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v33 + 8 * v31);
  if (v30)
  {
    int64_t v17 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v17 >= v34) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v33 + 8 * v17);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_20A7A61D8(void **a1)
{
  uint64_t v2 = *(void *)(sub_20A8C22E0() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_20A7A8454(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_20A7A6280(v5);
  *a1 = v3;
}

void sub_20A7A6280(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v177 = sub_20A8C2320();
  uint64_t v4 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  uint64_t v176 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v175 = (char *)&v154 - v7;
  sub_20A7A1544();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v174 = (char *)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v173 = (char *)&v154 - v11;
  uint64_t v12 = sub_20A8C22E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  int64_t v161 = (char *)&v154 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v181 = (char *)&v154 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v186 = (char *)&v154 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v187 = (char *)&v154 - v20;
  uint64_t v21 = a1[1];
  uint64_t v22 = sub_20A8CF710();
  if (v22 >= v21)
  {
    if (v21 < 0) {
      goto LABEL_140;
    }
    if (v21) {
      sub_20A7A716C(0, v21, 1, a1);
    }
    return;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_148;
  }
  unint64_t v178 = a1;
  uint64_t v179 = v12;
  uint64_t v155 = v22;
  unint64_t v164 = (void *)v13;
  if (v21 < 2)
  {
    unint64_t v27 = (char *)MEMORY[0x263F8EE78];
    unint64_t v163 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v154 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v29 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_103:
      if (v29 >= 2)
      {
        uint64_t v146 = *a1;
        uint64_t v147 = *a1;
        do
        {
          unint64_t v148 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_135;
          }
          if (!v146) {
            goto LABEL_147;
          }
          uint64_t v149 = *(void *)&v27[16 * v148 + 32];
          uint64_t v150 = *(void *)&v27[16 * v29 + 24];
          sub_20A7A7624(v146 + v164[9] * v149, v146 + v164[9] * *(void *)&v27[16 * v29 + 16], v146 + v164[9] * v150, v163);
          if (v2) {
            goto LABEL_115;
          }
          if (v150 < v149) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v27 = sub_20A7A8278((uint64_t)v27);
          }
          if (v148 >= *((void *)v27 + 2)) {
            goto LABEL_137;
          }
          uint64_t v151 = &v27[16 * v148 + 32];
          *(void *)uint64_t v151 = v149;
          *((void *)v151 + 1) = v150;
          unint64_t v152 = *((void *)v27 + 2);
          if (v29 > v152) {
            goto LABEL_138;
          }
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v152 - v29));
          *((void *)v27 + 2) = v152 - 1;
          unint64_t v29 = v152 - 1;
          uint64_t v146 = v147;
        }
        while (v152 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v154 + 16) = 0;
LABEL_117:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_20A8CE6A0();
    *(void *)(v25 + 16) = v24;
    a1 = v178;
    unint64_t v26 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v154 = v25;
    unint64_t v163 = v25 + v26;
  }
  uint64_t v28 = 0;
  int64_t v171 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v172 = v13 + 16;
  uint64_t v169 = (void (**)(char *, uint64_t))(v13 + 8);
  double v170 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v185 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  unint64_t v27 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v30 = v28;
    uint64_t v31 = v28 + 1;
    uint64_t v162 = v28;
    if (v28 + 1 < v21)
    {
      uint64_t v156 = v27;
      uint64_t v32 = *a1;
      uint64_t v157 = v32;
      uint64_t v33 = v164[9];
      uint64_t v183 = v21;
      uint64_t v184 = v33;
      uint64_t v180 = v28 + 1;
      int64_t v34 = (void (*)(void))v164[2];
      uint64_t v35 = v179;
      v34();
      uint64_t v36 = v186;
      unint64_t v168 = v34;
      ((void (*)(char *, uint64_t, uint64_t))v34)(v186, v32 + v33 * v30, v35);
      uint64_t v37 = (uint64_t)v173;
      sub_20A8C22D0();
      unint64_t v38 = *v171;
      unint64_t v39 = v175;
      uint64_t v40 = v177;
      (*v171)(v175, v37, v177);
      sub_20A7A85B4(v37);
      unint64_t v41 = v174;
      sub_20A8C22D0();
      BOOL v42 = v176;
      unint64_t v167 = v38;
      v38(v176, (uint64_t)v41, v40);
      uint64_t v43 = (uint64_t)v41;
      uint64_t v30 = v162;
      sub_20A7A85B4(v43);
      LODWORD(v182) = sub_20A8C2310();
      uint64_t v44 = *v170;
      (*v170)(v42, v40);
      uint64_t v45 = v39;
      uint64_t v46 = v157;
      uint64_t v166 = v44;
      v44(v45, v40);
      int64_t v47 = (void (*)(char *, uint64_t))v164[1];
      v47(v36, v35);
      uint64_t v21 = v183;
      uint64_t v165 = v47;
      v47(v187, v35);
      uint64_t v48 = v184;
      uint64_t v31 = v30 + 2;
      if (v30 + 2 >= v21)
      {
        a1 = v178;
      }
      else
      {
        uint64_t v160 = v2;
        uint64_t v159 = v184 * v180;
        uint64_t v158 = v184 * v31;
        while (1)
        {
          uint64_t v180 = v31;
          uint64_t v49 = v179;
          int v50 = v168;
          v168();
          ((void (*)(char *, uint64_t, uint64_t))v50)(v186, v46 + v159, v49);
          uint64_t v51 = (uint64_t)v173;
          sub_20A8C22D0();
          id v52 = v175;
          uint64_t v53 = v177;
          id v54 = v167;
          v167(v175, v51, v177);
          sub_20A7A85B4(v51);
          uint64_t v55 = (uint64_t)v174;
          sub_20A8C22D0();
          double v56 = v176;
          v54(v176, v55, v53);
          sub_20A7A85B4(v55);
          int v57 = sub_20A8C2310();
          id v58 = v166;
          v166(v56, v53);
          v58(v52, v53);
          double v59 = v165;
          v165(v186, v49);
          v59(v187, v49);
          if ((v182 ^ v57)) {
            break;
          }
          uint64_t v31 = v180 + 1;
          uint64_t v21 = v183;
          uint64_t v48 = v184;
          v46 += v184;
          if (v183 == v180 + 1)
          {
            uint64_t v31 = v183;
            uint64_t v2 = v160;
            a1 = v178;
            uint64_t v30 = v162;
            goto LABEL_23;
          }
        }
        uint64_t v2 = v160;
        a1 = v178;
        uint64_t v31 = v180;
        uint64_t v30 = v162;
        uint64_t v21 = v183;
        uint64_t v48 = v184;
      }
LABEL_23:
      unint64_t v27 = v156;
      if (v182)
      {
        if (v31 < v30) {
          goto LABEL_141;
        }
        if (v30 < v31)
        {
          uint64_t v60 = 0;
          uint64_t v61 = v30;
          uint64_t v62 = v48 * (v31 - 1);
          uint64_t v63 = v31 * v48;
          uint64_t v64 = v61;
          uint64_t v65 = v61 * v48;
          do
          {
            if (v64 != v31 + v60 - 1)
            {
              if (!v157) {
                goto LABEL_146;
              }
              uint64_t v160 = v2;
              unint64_t v67 = v157 + v65;
              id v68 = (char *)(v157 + v62);
              uint64_t v69 = v157;
              uint64_t v182 = *v185;
              v182(v161, (char *)(v157 + v65), v179);
              if (v65 < v62 || v67 >= v69 + v63)
              {
                uint64_t v66 = v179;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v66 = v179;
                if (v65 != v62) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v182(v68, v161, v66);
              a1 = v178;
              uint64_t v2 = v160;
              uint64_t v48 = v184;
            }
            ++v64;
            --v60;
            v62 -= v48;
            v63 -= v48;
            v65 += v48;
          }
          while (v64 < v31 + v60);
          unint64_t v27 = v156;
          uint64_t v30 = v162;
          uint64_t v21 = v183;
        }
      }
    }
    if (v31 < v21)
    {
      if (__OFSUB__(v31, v30)) {
        goto LABEL_139;
      }
      if (v31 - v30 < v155) {
        break;
      }
    }
LABEL_55:
    if (v31 < v30) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v180 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v27 = sub_20A7A7EA8(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v95 = *((void *)v27 + 2);
    unint64_t v94 = *((void *)v27 + 3);
    unint64_t v29 = v95 + 1;
    if (v95 >= v94 >> 1) {
      unint64_t v27 = sub_20A7A7EA8((char *)(v94 > 1), v95 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v29;
    uint64_t v96 = v27 + 32;
    uint64_t v97 = &v27[16 * v95 + 32];
    uint64_t v98 = v180;
    *(void *)uint64_t v97 = v30;
    *((void *)v97 + 1) = v98;
    if (v95)
    {
      while (1)
      {
        unint64_t v99 = v29 - 1;
        if (v29 >= 4)
        {
          uint64_t v104 = &v96[16 * v29];
          uint64_t v105 = *((void *)v104 - 8);
          uint64_t v106 = *((void *)v104 - 7);
          BOOL v110 = __OFSUB__(v106, v105);
          uint64_t v107 = v106 - v105;
          if (v110) {
            goto LABEL_123;
          }
          uint64_t v109 = *((void *)v104 - 6);
          uint64_t v108 = *((void *)v104 - 5);
          BOOL v110 = __OFSUB__(v108, v109);
          uint64_t v102 = v108 - v109;
          char v103 = v110;
          if (v110) {
            goto LABEL_124;
          }
          unint64_t v111 = v29 - 2;
          uint64_t v112 = &v96[16 * v29 - 32];
          uint64_t v114 = *(void *)v112;
          uint64_t v113 = *((void *)v112 + 1);
          BOOL v110 = __OFSUB__(v113, v114);
          uint64_t v115 = v113 - v114;
          if (v110) {
            goto LABEL_126;
          }
          BOOL v110 = __OFADD__(v102, v115);
          uint64_t v116 = v102 + v115;
          if (v110) {
            goto LABEL_129;
          }
          if (v116 >= v107)
          {
            uint64_t v134 = &v96[16 * v99];
            uint64_t v136 = *(void *)v134;
            uint64_t v135 = *((void *)v134 + 1);
            BOOL v110 = __OFSUB__(v135, v136);
            uint64_t v137 = v135 - v136;
            if (v110) {
              goto LABEL_133;
            }
            BOOL v127 = v102 < v137;
            goto LABEL_92;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v128 = *((void *)v27 + 4);
            uint64_t v129 = *((void *)v27 + 5);
            BOOL v110 = __OFSUB__(v129, v128);
            uint64_t v121 = v129 - v128;
            char v122 = v110;
            goto LABEL_86;
          }
          uint64_t v101 = *((void *)v27 + 4);
          uint64_t v100 = *((void *)v27 + 5);
          BOOL v110 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          char v103 = v110;
        }
        if (v103) {
          goto LABEL_125;
        }
        unint64_t v111 = v29 - 2;
        uint64_t v117 = &v96[16 * v29 - 32];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v120 = __OFSUB__(v118, v119);
        uint64_t v121 = v118 - v119;
        char v122 = v120;
        if (v120) {
          goto LABEL_128;
        }
        uint64_t v123 = &v96[16 * v99];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        BOOL v110 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v110) {
          goto LABEL_131;
        }
        if (__OFADD__(v121, v126)) {
          goto LABEL_132;
        }
        if (v121 + v126 >= v102)
        {
          BOOL v127 = v102 < v126;
LABEL_92:
          if (v127) {
            unint64_t v99 = v111;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v122) {
          goto LABEL_127;
        }
        uint64_t v130 = &v96[16 * v99];
        uint64_t v132 = *(void *)v130;
        uint64_t v131 = *((void *)v130 + 1);
        BOOL v110 = __OFSUB__(v131, v132);
        uint64_t v133 = v131 - v132;
        if (v110) {
          goto LABEL_130;
        }
        if (v133 < v121) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v138 = v99 - 1;
        if (v99 - 1 >= v29)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v139 = *a1;
        if (!*a1) {
          goto LABEL_145;
        }
        uint64_t v140 = &v96[16 * v138];
        uint64_t v141 = *(void *)v140;
        uint64_t v142 = v96;
        unint64_t v143 = &v96[16 * v99];
        uint64_t v144 = *((void *)v143 + 1);
        sub_20A7A7624(v139 + v164[9] * *(void *)v140, v139 + v164[9] * *(void *)v143, v139 + v164[9] * v144, v163);
        if (v2)
        {
LABEL_115:
          uint64_t v153 = v154;
          swift_bridgeObjectRelease();
          *(void *)(v153 + 16) = 0;
          goto LABEL_117;
        }
        if (v144 < v141) {
          goto LABEL_120;
        }
        if (v99 > *((void *)v27 + 2)) {
          goto LABEL_121;
        }
        *(void *)uint64_t v140 = v141;
        *(void *)&v142[16 * v138 + 8] = v144;
        unint64_t v145 = *((void *)v27 + 2);
        if (v99 >= v145) {
          goto LABEL_122;
        }
        unint64_t v29 = v145 - 1;
        memmove(v143, v143 + 16, 16 * (v145 - 1 - v99));
        uint64_t v96 = v142;
        *((void *)v27 + 2) = v145 - 1;
        a1 = v178;
        if (v145 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_14:
    uint64_t v21 = a1[1];
    uint64_t v28 = v180;
    if (v180 >= v21) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v30, v155)) {
    goto LABEL_142;
  }
  if (v30 + v155 >= v21) {
    uint64_t v70 = v21;
  }
  else {
    uint64_t v70 = v30 + v155;
  }
  if (v70 >= v30)
  {
    if (v31 != v70)
    {
      uint64_t v156 = v27;
      uint64_t v160 = v2;
      uint64_t v71 = (char *)v164[9];
      uint64_t v165 = (void (*)(char *, uint64_t))v164[2];
      uint64_t v72 = (void)v71 * (v31 - 1);
      uint64_t v166 = (void (*)(char *, uint64_t))v71;
      uint64_t v73 = v31 * (void)v71;
      uint64_t v74 = v179;
      uint64_t v159 = v70;
      do
      {
        uint64_t v76 = 0;
        uint64_t v180 = v31;
        unint64_t v167 = (void (*)(char *, uint64_t, uint64_t))v73;
        unint64_t v168 = (void (*)(void))v72;
        while (1)
        {
          uint64_t v77 = *a1;
          uint64_t v183 = v73 + v76;
          uint64_t v184 = v30;
          uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v165;
          ((void (*)(void))v165)();
          uint64_t v182 = (void (*)(char *, char *, uint64_t))(v72 + v76);
          v78(v186, v72 + v76 + v77, v74);
          uint64_t v79 = (uint64_t)v173;
          sub_20A8C22D0();
          uint64_t v80 = *v171;
          uint64_t v81 = v175;
          uint64_t v82 = a1;
          uint64_t v83 = v177;
          (*v171)(v175, v79, v177);
          sub_20A7A85B4(v79);
          uint64_t v84 = (uint64_t)v174;
          sub_20A8C22D0();
          uint64_t v85 = v176;
          v80(v176, v84, v83);
          sub_20A7A85B4(v84);
          char v86 = sub_20A8C2310();
          uint64_t v87 = *v170;
          (*v170)(v85, v83);
          uint64_t v88 = v81;
          uint64_t v74 = v179;
          v87(v88, v83);
          uint64_t v89 = *v169;
          (*v169)(v186, v74);
          v89(v187, v74);
          if ((v86 & 1) == 0) {
            break;
          }
          uint64_t v90 = *v82;
          if (!*v82) {
            goto LABEL_144;
          }
          uint64_t v73 = (uint64_t)v167;
          uint64_t v72 = (uint64_t)v168;
          uint64_t v91 = (char *)v168 + v90 + v76;
          uint64_t v92 = *v185;
          (*v185)(v181, (char *)v167 + v90 + v76, v74);
          swift_arrayInitWithTakeFrontToBack();
          v92(v91, v181, v74);
          v76 -= (uint64_t)v166;
          uint64_t v30 = v184 + 1;
          uint64_t v75 = v180;
          a1 = v178;
          if (v180 == v184 + 1) {
            goto LABEL_48;
          }
        }
        uint64_t v75 = v180;
        a1 = v82;
        uint64_t v73 = (uint64_t)v167;
        uint64_t v72 = (uint64_t)v168;
LABEL_48:
        uint64_t v31 = v75 + 1;
        v72 += (uint64_t)v166;
        v73 += (uint64_t)v166;
        uint64_t v30 = v162;
      }
      while (v31 != v159);
      uint64_t v31 = v159;
      uint64_t v2 = v160;
      unint64_t v27 = v156;
    }
    goto LABEL_55;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_20A8CF510();
  __break(1u);
}

void sub_20A7A716C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v51 = a1;
  uint64_t v64 = sub_20A8C2320();
  uint64_t v7 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v63 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (char *)&v49 - v10;
  sub_20A7A1544();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v61 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v60 = (char *)&v49 - v14;
  uint64_t v15 = sub_20A8C22E0();
  MEMORY[0x270FA5388](v15);
  uint64_t v70 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  double v59 = (char *)&v49 - v18;
  v21.n128_f64[0] = MEMORY[0x270FA5388](v19);
  uint64_t v74 = (char *)&v49 - v22;
  uint64_t v68 = a3;
  uint64_t v50 = a2;
  if (a3 != a2)
  {
    uint64_t v24 = *(void (**)(__n128))(v20 + 16);
    uint64_t v23 = v20 + 16;
    uint64_t v25 = *(void *)(v23 + 56);
    uint64_t v54 = v7 + 16;
    uint64_t v55 = v24;
    uint64_t v53 = (void (**)(char *, uint64_t))(v7 + 8);
    id v52 = (void (**)(char *, uint64_t))(v23 - 8);
    uint64_t v56 = v23;
    uint64_t v57 = v15;
    uint64_t v69 = (void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v26 = v25 * (v68 - 1);
    uint64_t v65 = v25;
    uint64_t v27 = v25 * v68;
    id v58 = a4;
    uint64_t v28 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
LABEL_5:
    uint64_t v29 = 0;
    uint64_t v73 = v51;
    uint64_t v66 = v27;
    uint64_t v67 = v26;
    while (1)
    {
      uint64_t v30 = *a4;
      uint64_t v72 = v27 + v29;
      uint64_t v31 = v55;
      v55(v21);
      uint64_t v71 = v26 + v29;
      uint64_t v32 = v26 + v29 + v30;
      uint64_t v33 = v59;
      ((void (*)(char *, uint64_t, uint64_t))v31)(v59, v32, v15);
      uint64_t v34 = (uint64_t)v60;
      sub_20A8C22D0();
      uint64_t v35 = *v28;
      uint64_t v36 = v62;
      uint64_t v37 = v64;
      (*v28)(v62, v34, v64);
      sub_20A7A85B4(v34);
      uint64_t v38 = (uint64_t)v61;
      sub_20A8C22D0();
      unint64_t v39 = v63;
      v35(v63, v38, v37);
      sub_20A7A85B4(v38);
      char v40 = sub_20A8C2310();
      unint64_t v41 = *v53;
      (*v53)(v39, v37);
      BOOL v42 = v36;
      uint64_t v43 = v37;
      uint64_t v15 = v57;
      a4 = v58;
      v41(v42, v43);
      uint64_t v44 = *v52;
      uint64_t v45 = v33;
      uint64_t v26 = v67;
      (*v52)(v45, v15);
      v44(v74, v15);
      uint64_t v27 = v66;
      if ((v40 & 1) == 0)
      {
LABEL_4:
        v26 += v65;
        v27 += v65;
        if (++v68 == v50) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v46 = *a4;
      if (!*a4) {
        break;
      }
      int64_t v47 = (char *)(v46 + v26 + v29);
      uint64_t v48 = *v69;
      (*v69)(v70, v46 + v66 + v29, v15);
      swift_arrayInitWithTakeFrontToBack();
      v48(v47, (uint64_t)v70, v15);
      v29 -= v65;
      if (v68 == ++v73) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_20A7A7624(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v86 = sub_20A8C2320();
  uint64_t v8 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v85 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v84 = (char *)&v70 - v11;
  sub_20A7A1544();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v83 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v82 = (char *)&v70 - v15;
  uint64_t v88 = sub_20A8C22E0();
  uint64_t v16 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v81 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v90 = (char *)&v70 - v19;
  uint64_t v21 = *(void *)(v20 + 72);
  if (!v21)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v21 == -1) {
    goto LABEL_63;
  }
  int64_t v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v21 == -1) {
    goto LABEL_64;
  }
  uint64_t v23 = (uint64_t)(a2 - a1) / v21;
  unint64_t v93 = a1;
  unint64_t v92 = a4;
  uint64_t v24 = v22 / v21;
  if (v23 >= v22 / v21)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = v24 * v21;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v91 = a4 + v26;
      unint64_t v93 = a2;
      if (v26 >= 1 && a1 < a2)
      {
        uint64_t v50 = -v21;
        id v52 = *(void (**)(void))(v16 + 16);
        uint64_t v51 = v16 + 16;
        uint64_t v75 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
        uint64_t v76 = v52;
        uint64_t v73 = (void (**)(char *, uint64_t))(v51 - 8);
        uint64_t v74 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v80 = v51;
        unint64_t v77 = a4;
        unint64_t v71 = a1;
        uint64_t v72 = v50;
        uint64_t v53 = v88;
        do
        {
          unint64_t v89 = a2;
          unint64_t v87 = a3;
          unint64_t v79 = a3 + v50;
          uint64_t v54 = v76;
          v76();
          uint64_t v55 = v81;
          uint64_t v78 = a2 + v50;
          ((void (*)(char *))v54)(v81);
          uint64_t v56 = (uint64_t)v82;
          sub_20A8C22D0();
          uint64_t v57 = *v75;
          id v58 = v84;
          uint64_t v59 = v86;
          (*v75)(v84, v56, v86);
          sub_20A7A85B4(v56);
          uint64_t v60 = (uint64_t)v83;
          sub_20A8C22D0();
          uint64_t v61 = v85;
          v57(v85, v60, v59);
          sub_20A7A85B4(v60);
          char v62 = sub_20A8C2310();
          uint64_t v63 = *v74;
          (*v74)(v61, v59);
          v63(v58, v59);
          uint64_t v64 = *v73;
          (*v73)(v55, v53);
          v64(v90, v53);
          if (v62)
          {
            uint64_t v50 = v72;
            a3 = v79;
            if (v87 < v89 || v79 >= v89)
            {
              unint64_t v65 = v78;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v66 = v77;
              unint64_t v67 = v71;
            }
            else
            {
              unint64_t v66 = v77;
              unint64_t v65 = v78;
              unint64_t v67 = v71;
              if (v87 != v89) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v93 += v50;
          }
          else
          {
            unint64_t v65 = v89;
            unint64_t v68 = v91;
            v91 += v72;
            uint64_t v50 = v72;
            a3 = v79;
            if (v87 < v68 || v79 >= v68)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v66 = v77;
            }
            else
            {
              unint64_t v66 = v77;
              if (v87 != v68) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v67 = v71;
          }
          if (v91 <= v66) {
            break;
          }
          a2 = v65;
        }
        while (v65 > v67);
      }
      goto LABEL_61;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = v23 * v21;
    if (a4 < a1 || a1 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v79 = a4 + v25;
    unint64_t v91 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      uint64_t v29 = *(void (**)(void))(v16 + 16);
      uint64_t v28 = v16 + 16;
      uint64_t v75 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      uint64_t v76 = v29;
      uint64_t v73 = (void (**)(char *, uint64_t))(v28 - 8);
      uint64_t v74 = (void (**)(char *, uint64_t))(v8 + 8);
      unint64_t v87 = a3;
      uint64_t v80 = v28;
      uint64_t v78 = v21;
      uint64_t v30 = v84;
      do
      {
        unint64_t v89 = a2;
        uint64_t v31 = v88;
        uint64_t v32 = v76;
        v76();
        uint64_t v33 = v81;
        ((void (*)(char *, unint64_t, uint64_t))v32)(v81, a4, v31);
        uint64_t v34 = (uint64_t)v82;
        sub_20A8C22D0();
        uint64_t v35 = *v75;
        uint64_t v36 = v86;
        (*v75)(v30, v34, v86);
        sub_20A7A85B4(v34);
        uint64_t v37 = (uint64_t)v83;
        sub_20A8C22D0();
        uint64_t v38 = v85;
        v35(v85, v37, v36);
        sub_20A7A85B4(v37);
        char v39 = sub_20A8C2310();
        char v40 = *v74;
        (*v74)(v38, v36);
        v40(v30, v36);
        unint64_t v41 = *v73;
        (*v73)(v33, v31);
        v41(v90, v31);
        unint64_t v42 = v93;
        if (v39)
        {
          uint64_t v43 = v78;
          unint64_t v44 = v89 + v78;
          if (v93 < v89 || v93 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v45 = v87;
          }
          else
          {
            unint64_t v45 = v87;
            if (v93 == v89) {
              unint64_t v42 = v89;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v46 = v89;
          uint64_t v43 = v78;
          unint64_t v47 = v92 + v78;
          if (v93 < v92 || v93 >= v47)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v45 = v87;
            unint64_t v48 = v46;
          }
          else
          {
            unint64_t v45 = v87;
            unint64_t v48 = v89;
            if (v93 != v92) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v92 = v47;
          unint64_t v44 = v48;
        }
        unint64_t v93 = v42 + v43;
        a4 = v92;
        if (v92 >= v79) {
          break;
        }
        a2 = v44;
      }
      while (v44 < v45);
    }
LABEL_61:
    sub_20A7A8134(&v93, &v92, (uint64_t *)&v91, MEMORY[0x263F067B0]);
    return 1;
  }
LABEL_65:
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

char *sub_20A7A7EA8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_20A7A8610();
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_20A7A7FA4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_20A8CF590();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_20A7A8060(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_20A8CF590();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

uint64_t sub_20A7A811C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_20A7A8134(a1, a2, a3, (uint64_t (*)(void))sub_20A44D848);
}

uint64_t sub_20A7A8134(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_20A8CF590();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_20A7A8278(uint64_t a1)
{
  return sub_20A7A7EA8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_20A7A828C(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v5 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  while (1)
  {
    unint64_t v7 = sub_20A8CE3B0();
    v12[0] = sub_20A8CE470();
    v12[1] = v8;
    char v9 = a1(v12);
    if (v4) {
      break;
    }
    char v10 = v9;
    swift_bridgeObjectRelease();
    if (v10) {
      return v7;
    }
    if (v7 < 0x4000) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_20A7A8398(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  uint64_t v9 = swift_allocObject();
  sub_20A42BEBC(&v13, v9 + 16);
  long long v10 = *a2;
  *(_OWORD *)(v9 + 72) = a2[1];
  long long v11 = a2[3];
  *(_OWORD *)(v9 + 88) = a2[2];
  *(_OWORD *)(v9 + 104) = v11;
  *(_OWORD *)(v9 + 120) = a2[4];
  *(_OWORD *)(v9 + 56) = v10;
  return v9;
}

uint64_t sub_20A7A8454(void *a1)
{
  return sub_20A68F3D0(0, a1[2], 0, a1);
}

void sub_20A7A8468()
{
}

uint64_t sub_20A7A847C(uint64_t a1)
{
  return sub_20A68F404(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_20A7A8490(void *a1)
{
  return sub_20A68F598(0, a1[2], 0, a1);
}

uint64_t sub_20A7A84A4(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_20A8CF760() & 1;
  }
}

uint64_t sub_20A7A84FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A7A8544(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A7A14E0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A7A85B4(uint64_t a1)
{
  sub_20A7A1544();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A7A8610()
{
  if (!qword_26763DE50)
  {
    sub_20A7A8C10(255, &qword_26763DE58, MEMORY[0x263F8D6C8], MEMORY[0x263F8D6E0], MEMORY[0x263F8D870]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DE50);
    }
  }
}

void sub_20A7A8694(void *a1)
{
  id v2 = objc_msgSend(a1, sel_textContainer);
  objc_msgSend(v2, sel_setMaximumNumberOfLines_, 0);

  id v3 = objc_msgSend(a1, sel_textContainer);
  objc_msgSend(v3, sel_setLineBreakMode_, 0);

  id v4 = objc_msgSend(a1, sel_textContainer);
  objc_msgSend(v4, sel_setLineFragmentPadding_, 0.0);

  objc_msgSend(a1, sel_setTextContainerInset_, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));
  objc_msgSend(a1, sel_setEditable_, 0);
  objc_msgSend(a1, sel_setSelectable_, 0);
  objc_msgSend(a1, sel_setScrollEnabled_, 0);
  objc_msgSend(a1, sel_setShowsVerticalScrollIndicator_, 0);
  objc_msgSend(a1, sel_setShowsHorizontalScrollIndicator_, 0);
  id v5 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a1, sel_setBackgroundColor_, v5);
}

void sub_20A7A8818(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_20A4D4100();
    unint64_t v3 = sub_20A8CF580();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_20A7A887C()
{
  if (!qword_26AC7FDD0)
  {
    sub_20A42CFF0(255, &qword_26AC7F948);
    type metadata accessor for CGSize(255);
    sub_20A7A8908();
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FDD0);
    }
  }
}

unint64_t sub_20A7A8908()
{
  unint64_t result = qword_26AC7F958;
  if (!qword_26AC7F958)
  {
    sub_20A42CFF0(255, &qword_26AC7F948);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F958);
  }
  return result;
}

uint64_t sub_20A7A8970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockViewRenderer.RenderedState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_20A7A89D4()
{
  if (!qword_26763DE60)
  {
    sub_20A7A14E0(255, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DE60);
    }
  }
}

void sub_20A7A8A6C()
{
  if (!qword_26AC7FDA8)
  {
    sub_20A42CFF0(255, &qword_26AC7F8F0);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FDA8);
    }
  }
}

void sub_20A7A8AE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_20A8CF580();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A7A8B64()
{
  unint64_t result = qword_26AC7F0D8;
  if (!qword_26AC7F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F0D8);
  }
  return result;
}

uint64_t sub_20A7A8BB8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A7A8C10(255, a2, MEMORY[0x263F8D2B0], MEMORY[0x263F8D2B8], a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A7A8C10(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A7A8C60(uint64_t a1)
{
  id v2 = *(id *)(a1 + 72);
  return a1;
}

uint64_t sub_20A7A8C8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7A8CF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A7A8D5C()
{
  if (!qword_26AC7FD68)
  {
    sub_20A42CFF0(255, (unint64_t *)&unk_26AC7FBC0);
    sub_20A4D4100();
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FD68);
    }
  }
}

void sub_20A7A8DD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A7A8E40(void *a1)
{
  uint64_t v3 = sub_20A8CF110();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CF000();
  v45[1] = v8;
  v45[2] = v7;
  v45[3] = v10;
  v45[4] = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1, v3);
  sub_20A8CF0A0();
  sub_20A8CF000();
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  sub_20A8CF000();
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v12 == v20 && v14 == v22 && v16 == v24 && v18 == v26)
  {
    sub_20A7A90A8();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D7080;
    uint64_t v32 = (void *)*MEMORY[0x263F83420];
    *(void *)(inited + 32) = *MEMORY[0x263F83420];
    uint64_t v33 = (void *)*MEMORY[0x263F83418];
    uint64_t v34 = (void *)*MEMORY[0x263F83410];
    *(void *)(inited + 40) = *MEMORY[0x263F83418];
    *(void *)(inited + 48) = v34;
    uint64_t v35 = (void *)*MEMORY[0x263F83408];
    uint64_t v36 = (void *)*MEMORY[0x263F83400];
    *(void *)(inited + 56) = *MEMORY[0x263F83408];
    *(void *)(inited + 64) = v36;
    id v37 = v32;
    id v38 = v33;
    id v39 = v34;
    id v40 = v35;
    id v41 = v36;
    id v42 = objc_msgSend(a1, sel_preferredContentSizeCategory);
    uint64_t v43 = sub_20A63C2F0((uint64_t)v42, inited);
    LOBYTE(v34) = v44;

    swift_setDeallocating();
    type metadata accessor for UIContentSizeCategory(0);
    uint64_t result = swift_arrayDestroy();
    if ((v34 & 1) == 0 && __OFADD__(v43, 1)) {
      __break(1u);
    }
  }
  return result;
}

void sub_20A7A90A8()
{
  if (!qword_26763DE88)
  {
    type metadata accessor for UIContentSizeCategory(255);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763DE88);
    }
  }
}

uint64_t sub_20A7A9100()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4270();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D110], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  v9[15] = 0;
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC692F8);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC69048 = result;
  return result;
}

uint64_t static Settings.Refreshing.MarketData.overrideEnabled.getter()
{
  return sub_20A454F34(&qword_26AC69050);
}

uint64_t sub_20A7A92E8()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57E3F0(0, &qword_26763C370);
  void v5[2] = 0x3FF0000000000000;
  v5[3] = 0x3FF0000000000000;
  v5[1] = 0x7FEFFFFFFFFFFFFFLL;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  uint64_t result = sub_20A8C42C0();
  qword_26763DE90 = result;
  return result;
}

uint64_t static Settings.Refreshing.MarketData.overrideInterval.getter()
{
  return sub_20A454F34(&qword_267639C48);
}

ValueMetadata *type metadata accessor for Settings.Refreshing()
{
  return &type metadata for Settings.Refreshing;
}

ValueMetadata *type metadata accessor for Settings.Refreshing.MarketData()
{
  return &type metadata for Settings.Refreshing.MarketData;
}

uint64_t FCFeedGroupType.groupType()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 18:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F7A738];
      break;
    case 19:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F7A728];
      break;
    case 23:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F7A720];
      break;
    case 26:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F7A708];
      break;
    default:
      uint64_t v3 = (unsigned int *)MEMORY[0x263F7A730];
      break;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = sub_20A8C77E0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a2, v4, v5);
}

ValueMetadata *type metadata accessor for TickerOfflineModel()
{
  return &type metadata for TickerOfflineModel;
}

uint64_t sub_20A7A95E0()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267653080);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653080);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A90E8E0);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A7A9784()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_267653098);
  __swift_project_value_buffer(v0, (uint64_t)qword_267653098);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A90E800);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A7A9928()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_2676530B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676530B0);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A90E720);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A7A9AD0()
{
  uint64_t v0 = sub_20A8CD2C0();
  __swift_allocate_value_buffer(v0, qword_2676530C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2676530C8);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  id v4 = objc_msgSend(v2, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A90E650);
  sub_20A8C2370();

  return sub_20A8CD250();
}

uint64_t sub_20A7A9C70@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639C50, (uint64_t)qword_267653080, a1);
}

uint64_t sub_20A7A9C94@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639C58, (uint64_t)qword_267653098, a1);
}

uint64_t sub_20A7A9CB8@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639C60, (uint64_t)qword_2676530B0, a1);
}

uint64_t sub_20A7A9CDC@<X0>(uint64_t a1@<X8>)
{
  return sub_20A499C68(&qword_267639C68, (uint64_t)qword_2676530C8, a1);
}

uint64_t sub_20A7A9D00()
{
  return sub_20A8C65E0();
}

void sub_20A7A9D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v28[3] = a8;
  void v28[4] = a5;
  uint64_t v29 = a1;
  v28[1] = a11;
  void v28[2] = a10;
  uint64_t v12 = sub_20A8C5B40();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C2800();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  double v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C27F0();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F7CDA0], v12);
  sub_20A8C31A0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v29;
  *(void *)(v20 + 16) = v29;
  *(void *)(v20 + 24) = a2;
  swift_retain();
  double v22 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  double v23 = (void *)sub_20A8C6450();
  sub_20A8C65D0();
  swift_release();

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v21;
  *(void *)(v24 + 24) = a2;
  swift_retain();
  double v25 = (void *)sub_20A8C6450();
  sub_20A8C65C0();
  swift_release();
  swift_release();

  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v21;
  *(void *)(v26 + 24) = a2;
  swift_retain();
  uint64_t v27 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

void sub_20A7AA0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A7A9D98(a1, a2, a3, a4, v4[4], v4[5], v4[6], v4[7], v4[8], v4[2], v4[3]);
}

void sub_20A7AA108(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A7AA16C(uint64_t a1, void (*a2)(char *))
{
  sub_20A4C77A4(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C3D00();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_20A7AA498((uint64_t)v6);
}

uint64_t sub_20A7AA288()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A7AA2C0(uint64_t a1)
{
  return sub_20A7AA16C(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_20A7AA2DC(uint64_t a1, void (*a2)(char *))
{
  sub_20A4C77A4(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_20A7AA498((uint64_t)v5);
}

uint64_t sub_20A7AA3AC(uint64_t a1)
{
  return sub_20A7AA2DC(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_20A7AA3C8(uint64_t a1, void (*a2)(char *))
{
  sub_20A4C77A4(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3D00();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  a2(v5);
  return sub_20A7AA498((uint64_t)v5);
}

uint64_t sub_20A7AA490(uint64_t a1)
{
  return sub_20A7AA3C8(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_20A7AA498(uint64_t a1)
{
  sub_20A4C77A4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppReviewRequestState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AppReviewRequestState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AppReviewRequestState()
{
  return &type metadata for AppReviewRequestState;
}

unint64_t sub_20A7AA558(char a1)
{
  if (!a1) {
    return 0xD000000000000015;
  }
  if (a1 == 1) {
    return 0xD000000000000013;
  }
  return 0xD000000000000016;
}

uint64_t sub_20A7AA5B4(void *a1, uint64_t a2, uint64_t a3)
{
  v11[1] = a3;
  sub_20A7AABD0(0, &qword_26763DEA8, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A7AAB7C();
  sub_20A8CF8F0();
  char v14 = 0;
  sub_20A8CF6D0();
  if (!v3)
  {
    char v13 = 1;
    sub_20A8CF6D0();
    char v12 = 2;
    sub_20A8CF6D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_20A7AA760()
{
  return sub_20A7AA558(*v0);
}

uint64_t sub_20A7AA768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A7AA858(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A7AA790(uint64_t a1)
{
  unint64_t v2 = sub_20A7AAB7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A7AA7CC(uint64_t a1)
{
  unint64_t v2 = sub_20A7AAB7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A7AA808@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A7AA99C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_20A7AA838(void *a1)
{
  return sub_20A7AA5B4(a1, *v1, v1[1]);
}

uint64_t sub_20A7AA858(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x800000020A90E980 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000020A90E9A0 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000020A90E9C0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20A7AA99C(void *a1)
{
  sub_20A7AABD0(0, &qword_26763DE98, MEMORY[0x263F8E040]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v10[-v6];
  uint64_t v8 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_20A7AAB7C();
  sub_20A8CF8E0();
  if (!v1)
  {
    v10[15] = 0;
    uint64_t v8 = sub_20A8CF630();
    v10[14] = 1;
    sub_20A8CF630();
    v10[13] = 2;
    sub_20A8CF630();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v8;
}

unint64_t sub_20A7AAB7C()
{
  unint64_t result = qword_26763DEA0;
  if (!qword_26763DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DEA0);
  }
  return result;
}

void sub_20A7AABD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A7AAB7C();
    unint64_t v7 = a3(a1, &type metadata for AppReviewRequestState.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AppReviewRequestState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A7AAD00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppReviewRequestState.CodingKeys()
{
  return &type metadata for AppReviewRequestState.CodingKeys;
}

unint64_t sub_20A7AAD3C()
{
  unint64_t result = qword_26763DEB0;
  if (!qword_26763DEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DEB0);
  }
  return result;
}

unint64_t sub_20A7AAD94()
{
  unint64_t result = qword_26763DEB8;
  if (!qword_26763DEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DEB8);
  }
  return result;
}

unint64_t sub_20A7AADEC()
{
  unint64_t result = qword_26763DEC0;
  if (!qword_26763DEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DEC0);
  }
  return result;
}

uint64_t sub_20A7AAE40()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4270();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D110], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  v9[15] = 0;
  sub_20A4B00C0();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC818C0 = result;
  return result;
}

uint64_t static Settings.Radars.radar50783266.getter()
{
  if (qword_26AC818D0 != -1) {
    swift_once();
  }

  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.Radars()
{
  return &type metadata for Settings.Radars;
}

uint64_t type metadata accessor for WelcomeViewStylerFactory()
{
  return self;
}

uint64_t sub_20A7AB07C@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1) {
    uint64_t v3 = *v2 + 96;
  }
  else {
    uint64_t v3 = *v2 + 56;
  }
  return sub_20A4342F4(v3, a2);
}

uint64_t sub_20A7AB0AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (void *)(*v1 + 16);
  uint64_t v5 = *(void *)(*v1 + 40);
  uint64_t v6 = *(void *)(v3 + 48);
  __swift_project_boxed_opaque_existential_1(v4, v5);
  return sub_20A81986C(v5, v6, a1);
}

uint64_t sub_20A7AB100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v14[3] = v7;
  v14[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  v10(a1, v7, v9);
  char v12 = sub_20A7AB3EC((uint64_t)boxed_opaque_existential_1, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *a3 = v12;
  return result;
}

void *sub_20A7AB1C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v30[3] = a3;
  _OWORD v30[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_20A4342F4((uint64_t)v30, (uint64_t)(a2 + 2));
  sub_20A4342F4((uint64_t)v30, (uint64_t)&v27);
  if (qword_267639C30 != -1) {
    swift_once();
  }
  long long v23 = xmmword_267652FF0;
  long long v25 = xmmword_267652FE0;
  long long v19 = xmmword_267653010;
  long long v21 = xmmword_267653000;
  uint64_t v8 = qword_267653020;
  uint64_t v9 = (void *)qword_267653028;
  uint64_t v10 = type metadata accessor for WelcomeViewStyler();
  uint64_t v11 = swift_allocObject();
  sub_20A42BEBC(&v27, v11 + 16);
  *(_OWORD *)(v11 + 56) = v25;
  *(_OWORD *)(v11 + 72) = v23;
  *(_OWORD *)(v11 + 88) = v21;
  *(_OWORD *)(v11 + 104) = v19;
  *(void *)(v11 + 120) = v8;
  *(void *)(v11 + 128) = v9;
  a2[10] = v10;
  a2[11] = &off_26BE6EC68;
  a2[7] = v11;
  sub_20A4342F4((uint64_t)v30, (uint64_t)&v27);
  uint64_t v12 = qword_267639C38;
  id v13 = v9;
  if (v12 != -1) {
    swift_once();
  }
  long long v24 = xmmword_267653040;
  long long v26 = xmmword_267653030;
  long long v20 = xmmword_267653060;
  long long v22 = xmmword_267653050;
  uint64_t v14 = qword_267653070;
  double v15 = (void *)qword_267653078;
  uint64_t v16 = swift_allocObject();
  sub_20A42BEBC(&v27, v16 + 16);
  *(_OWORD *)(v16 + 56) = v26;
  *(_OWORD *)(v16 + 72) = v24;
  *(_OWORD *)(v16 + 88) = v22;
  *(_OWORD *)(v16 + 104) = v20;
  *(void *)(v16 + 120) = v14;
  *(void *)(v16 + 128) = v15;
  uint64_t v28 = v10;
  uint64_t v29 = &off_26BE6EC68;
  *(void *)&long long v27 = v16;
  id v17 = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  sub_20A42BEBC(&v27, (uint64_t)(a2 + 12));
  return a2;
}

void *sub_20A7AB3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_20A7AB1C4((uint64_t)v9, v10, a3, a4);
}

id sub_20A7AB5C0()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC8StocksUI23StockFeedRotateTestCase_testName];
  *(void *)uint64_t v2 = 0x6565466B636F7453;
  *((void *)v2 + 1) = 0xEF657461746F5264;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedRotateTestCase_timeoutInSeconds] = 0x404E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedRotateTestCase_aggregate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedRotateTestCase_requiredCapabilities] = &unk_26BE5F228;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedRotateTestCase_rotateOrientation] = 4;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for StockFeedRotateTestCase()
{
  return self;
}

uint64_t sub_20A7AB700()
{
  return sub_20A7AD860(&qword_26AC6D768, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);
}

uint64_t type metadata accessor for StockFeedGroup()
{
  uint64_t result = qword_26AC6D7A0;
  if (!qword_26AC6D7A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A7AB794()
{
  return sub_20A7AD860(&qword_26AC6D788, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);
}

unint64_t sub_20A7AB7E0()
{
  unint64_t result = qword_26AC824F8;
  if (!qword_26AC824F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC824F8);
  }
  return result;
}

unint64_t sub_20A7AB838()
{
  unint64_t result = qword_26AC824E0;
  if (!qword_26AC824E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC824E0);
  }
  return result;
}

unint64_t sub_20A7AB890()
{
  unint64_t result = qword_26AC824E8;
  if (!qword_26AC824E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC824E8);
  }
  return result;
}

uint64_t sub_20A7AB8E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7AD730((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
      sub_20A42C980();
      uint64_t v15 = a1 + *(int *)(v14 + 64);
      uint64_t v16 = v9[1];
      *(void *)a1 = *v9;
      *(void *)(a1 + 8) = v16;
      *(unsigned char *)(a1 + 16) = *((unsigned char *)v9 + *(int *)(v7 + 28));
      sub_20A7AD798((uint64_t)v9 + *(int *)(v7 + 32), v15, (uint64_t (*)(void))sub_20A42C764);
      swift_bridgeObjectRetain();
      sub_20A7AD800((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      uint64_t v17 = sub_20A8CC310();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, v12, v17);
    }
    type metadata accessor for StockFeedSectionDescriptor();
  }
  else
  {
    sub_20A7AD730((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_20A7AD800((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    type metadata accessor for StockFeedSectionDescriptor();
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A7ABBA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7AD730((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
      uint64_t v16 = *v11;
      swift_bridgeObjectRetain();
      sub_20A7AD800((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      uint64_t v16 = sub_20A8CC2C0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7AD730((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_20A4FF4E8();
    uint64_t v16 = sub_20A8CC530();
    sub_20A7AD800((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
  }
  return v16;
}

uint64_t sub_20A7ABE54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v29 = a1;
  uint64_t v3 = sub_20A8CC310();
  uint64_t v27 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20A8CCC20();
  uint64_t v9 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7AD730((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
      sub_20A7AD798((uint64_t)&v14[*(int *)(v12 + 32)], (uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v19 = sub_20A8CC470();
      uint64_t v20 = *(void *)(v19 - 8);
      int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19);
      uint64_t v23 = v28;
      uint64_t v22 = v29;
      if (v21 == 1)
      {
        sub_20A7AD800((uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
        (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v22, *MEMORY[0x263F599B0], v23);
      }
      else
      {
        sub_20A8CC3D0();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v19);
        (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22, v11, v23);
      }
      return sub_20A7AD800((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      uint64_t v25 = v27;
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v5, v17, v3);
      sub_20A8CC2D0();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v5, v3);
    }
  }
  else
  {
    sub_20A7AD800((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v9 + 104))(v29, *MEMORY[0x263F599B0], v28);
  }
}

double sub_20A7AC274()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7AD730((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
      sub_20A7AD798((uint64_t)&v11[*(int *)(v9 + 32)], (uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
      uint64_t v16 = sub_20A8CC470();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
      {
        sub_20A7AD800((uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
        double v18 = 1.0;
      }
      else
      {
        sub_20A8CC3E0();
        double v18 = v20;
        (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
      }
      sub_20A7AD800((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      sub_20A8CC2E0();
      double v18 = v19;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7AD800((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    return 1.0;
  }
  return v18;
}

uint64_t sub_20A7AC5C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A7AD730((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    if (v4[*(int *)(v2 + 28)]) {
      uint64_t v8 = MEMORY[0x263F8EE78];
    }
    else {
      uint64_t v8 = sub_20A8CE5F0();
    }
    sub_20A7AD800((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
  }
  else
  {
    sub_20A7AD800((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    return MEMORY[0x263F8EE78];
  }
  return v8;
}

unint64_t sub_20A7AC750()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A7AD730((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    if (v4[*(int *)(v2 + 28)]) {
      unint64_t v8 = sub_20A4CFD34(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v8 = sub_20A8CE600();
    }
    unint64_t v9 = v8;
    uint64_t v10 = type metadata accessor for NewsStockFeedGroup;
    uint64_t v11 = (uint64_t)v4;
  }
  else
  {
    unint64_t v9 = sub_20A4CFD34(MEMORY[0x263F8EE78]);
    uint64_t v10 = type metadata accessor for StockFeedGroup;
    uint64_t v11 = (uint64_t)v7;
  }
  sub_20A7AD800(v11, (uint64_t (*)(void))v10);
  return v9;
}

uint64_t sub_20A7AC8E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7AD730((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
      uint64_t v16 = sub_20A8C3EC0();
      sub_20A7AD800((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      uint64_t v16 = sub_20A8CC2A0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7AD730((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_20A4FF4E8();
    uint64_t v16 = sub_20A8CC530();
    sub_20A7AD800((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
  }
  return v16;
}

double sub_20A7ACBB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StockFeedGroup();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A7AD730((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_20A7AD860(&qword_26763B7A8, (void (*)(uint64_t))type metadata accessor for NewsPlacardStockFeedGroup);
    sub_20A8CD1A0();
    double v20 = v21;
    uint64_t v22 = type metadata accessor for NewsPlacardStockFeedGroup;
    uint64_t v23 = (uint64_t)v13;
LABEL_9:
    sub_20A7AD800(v23, (uint64_t (*)(void))v22);
    return v20;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A7AD730((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
    sub_20A7AD798((uint64_t)&v10[*(int *)(v8 + 32)], (uint64_t)v7, (uint64_t (*)(void))sub_20A42C764);
    uint64_t v18 = sub_20A8CC470();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v7, 1, v18) == 1)
    {
      sub_20A7AD800((uint64_t)v7, (uint64_t (*)(void))sub_20A42C764);
      double v20 = 0.0;
    }
    else
    {
      sub_20A8CC3F0();
      double v20 = v26;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    uint64_t v22 = type metadata accessor for NewsStockFeedGroup;
    uint64_t v23 = (uint64_t)v10;
    goto LABEL_9;
  }
  uint64_t v24 = v29;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v4, v16, v2);
  sub_20A7AD860(&qword_26763DEF8, MEMORY[0x263F59710]);
  sub_20A8CD1A0();
  double v20 = v25;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  return v20;
}

uint64_t sub_20A7ACFEC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v6, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  unsigned int v7 = 0x20001u >> (8 * swift_getEnumCaseMultiPayload());
  uint64_t result = sub_20A7AD800((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  *a1 = v7;
  return result;
}

uint64_t sub_20A7AD0C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F59848];
  uint64_t v3 = sub_20A8CC770();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A7AD13C()
{
  return sub_20A7AD860(&qword_26AC6D798, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);
}

uint64_t sub_20A7AD198(uint64_t a1)
{
  uint64_t v2 = sub_20A7AD860((unint64_t *)&qword_26AC6D778, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);

  return MEMORY[0x270F4FA98](a1, v2);
}

uint64_t sub_20A7AD214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A7AD860(&qword_26AC6D768, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);

  return MEMORY[0x270F4FAC8](a1, a2, a3, v6);
}

uint64_t sub_20A7AD29C(uint64_t a1)
{
  uint64_t v2 = sub_20A7AD860(&qword_26AC6D768, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);

  return MEMORY[0x270F4FAB8](a1, v2);
}

uint64_t sub_20A7AD308()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7AD798(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7AD800((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
      return 1937204558;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v10 = sub_20A8CC300();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7AD800((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    return 0x616C50207377654ELL;
  }
  return v10;
}

uint64_t sub_20A7AD4E8()
{
  sub_20A7AD860(&qword_26AC6D788, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);

  return sub_20A8C5EE0();
}

uint64_t sub_20A7AD554()
{
  return sub_20A7AD860(&qword_26AC6D770, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);
}

uint64_t sub_20A7AD59C()
{
  return sub_20A7AD860(&qword_26AC6D790, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);
}

uint64_t sub_20A7AD5E4()
{
  return sub_20A7AD860(&qword_26AC6D780, (void (*)(uint64_t))type metadata accessor for StockFeedGroup);
}

uint64_t sub_20A7AD62C()
{
  uint64_t v0 = sub_20A8C2830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2820();
  sub_20A8C2810();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8CC2B0();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A7AD730(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7AD798(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7AD800(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A7AD860(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A7AD8A8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      uint64_t v8 = (int *)type metadata accessor for NewsStockFeedGroup();
      uint64_t v9 = v8[6];
      uint64_t v24 = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_20A8C3F00();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v24, v10, v11);
      *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
      uint64_t v13 = v8[8];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_20A8CC470();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_20A42C764(0);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      sub_20A4FF4E8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = type metadata accessor for NewsPlacardStockFeedGroup();
      *((unsigned char *)a1 + *(int *)(v22 + 20)) = *((unsigned char *)a2 + *(int *)(v22 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7ADB80(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = sub_20A8CC310();
LABEL_6:
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    uint64_t v5 = v3;
    uint64_t v6 = a1;
    goto LABEL_7;
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    sub_20A4FF4E8();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for NewsStockFeedGroup();
  uint64_t v8 = a1 + *(int *)(v7 + 24);
  uint64_t v9 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + *(int *)(v7 + 32);
  uint64_t v11 = sub_20A8CC470();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (result) {
    return result;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  uint64_t v6 = v10;
  uint64_t v5 = v11;
LABEL_7:

  return v4(v6, v5);
}

void *sub_20A7ADD00(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v17 = sub_20A8CC310();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = (int *)type metadata accessor for NewsStockFeedGroup();
    uint64_t v7 = v6[6];
    uint64_t v21 = (char *)a1 + v7;
    uint64_t v8 = (char *)a2 + v7;
    uint64_t v9 = sub_20A8C3F00();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v21, v8, v9);
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    uint64_t v11 = v6[8];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_20A8CC470();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_20A42C764(0);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  else
  {
    sub_20A4FF4E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
    uint64_t v19 = type metadata accessor for NewsPlacardStockFeedGroup();
    *((unsigned char *)a1 + *(int *)(v19 + 20)) = *((unsigned char *)a2 + *(int *)(v19 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A7ADF88(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A7AD800((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v5 = (int *)type metadata accessor for NewsStockFeedGroup();
      uint64_t v6 = v5[6];
      uint64_t v20 = (char *)a1 + v6;
      uint64_t v7 = (char *)a2 + v6;
      uint64_t v8 = sub_20A8C3F00();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v20, v7, v8);
      *((unsigned char *)a1 + v5[7]) = *((unsigned char *)a2 + v5[7]);
      uint64_t v10 = v5[8];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_20A8CC470();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A42C764(0);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      sub_20A4FF4E8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      uint64_t v18 = type metadata accessor for NewsPlacardStockFeedGroup();
      *((unsigned char *)a1 + *(int *)(v18 + 20)) = *((unsigned char *)a2 + *(int *)(v18 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7AE23C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v16 = sub_20A8CC310();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    uint64_t v5 = (int *)type metadata accessor for NewsStockFeedGroup();
    uint64_t v6 = v5[6];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    *(unsigned char *)(a1 + v5[7]) = *(unsigned char *)(a2 + v5[7]);
    uint64_t v10 = v5[8];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = sub_20A8CC470();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_20A42C764(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    sub_20A4FF4E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
    uint64_t v18 = type metadata accessor for NewsPlacardStockFeedGroup();
    *(unsigned char *)(a1 + *(int *)(v18 + 20)) = *(unsigned char *)(a2 + *(int *)(v18 + 20));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A7AE494(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A7AD800(a1, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_20A8CC310();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      uint64_t v5 = (int *)type metadata accessor for NewsStockFeedGroup();
      uint64_t v6 = v5[6];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      *(unsigned char *)(a1 + v5[7]) = *(unsigned char *)(a2 + v5[7]);
      uint64_t v10 = v5[8];
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      uint64_t v13 = sub_20A8CC470();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A42C764(0);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      sub_20A4FF4E8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = type metadata accessor for NewsPlacardStockFeedGroup();
      *(unsigned char *)(a1 + *(int *)(v18 + 20)) = *(unsigned char *)(a2 + *(int *)(v18 + 20));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7AE710()
{
  uint64_t result = type metadata accessor for NewsPlacardStockFeedGroup();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for NewsStockFeedGroup();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8CC310();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_20A7AE810()
{
  return sub_20A7B0D30(&qword_26AC6E040, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);
}

uint64_t type metadata accessor for ForYouFeedGroup()
{
  uint64_t result = qword_26AC6E088;
  if (!qword_26AC6E088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A7AE8A4()
{
  return sub_20A7B0D30(&qword_26AC6E068, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);
}

unint64_t sub_20A7AE8F0()
{
  unint64_t result = qword_26AC70FF0;
  if (!qword_26AC70FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70FF0);
  }
  return result;
}

unint64_t sub_20A7AE948()
{
  unint64_t result = qword_26AC70FC8;
  if (!qword_26AC70FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70FC8);
  }
  return result;
}

unint64_t sub_20A7AE9A0()
{
  unint64_t result = qword_26AC70FD0;
  if (!qword_26AC70FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70FD0);
  }
  return result;
}

uint64_t sub_20A7AE9F8()
{
  uint64_t v1 = sub_20A8C4020();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (uint64_t *)((char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_20A8CD300();
  uint64_t v33 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v8 - 8);
  v30[0] = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v0, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A7B0C00((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    uint64_t v23 = *(void *)&v12[*(int *)(v10 + 20)];
    swift_bridgeObjectRetain();
    uint64_t v28 = type metadata accessor for StockForYouFeedGroup;
    uint64_t v29 = (uint64_t)v12;
LABEL_19:
    sub_20A7B0CD0(v29, (uint64_t (*)(void))v28);
    return v23;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_20A7B0CD0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    return MEMORY[0x263F8EE78];
  }
  sub_20A7B0C00((uint64_t)v15, v30[0], (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
  sub_20A8CC450();
  unint64_t v17 = sub_20A8CD2E0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  if (!(v17 >> 62))
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v23 = MEMORY[0x263F8EE78];
LABEL_18:
    uint64_t v28 = type metadata accessor for CuratedForYouFeedGroup;
    uint64_t v29 = v30[0];
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_20A8CF540();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t v33 = v1;
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20A68C5E4(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = 0;
    unint64_t v32 = v17 & 0xC000000000000001;
    unsigned int v31 = *MEMORY[0x263F7AF48];
    v30[1] = v2 + 32;
    unint64_t v21 = v17;
    uint64_t v22 = v18;
    uint64_t v24 = v33;
    uint64_t v23 = v34;
    do
    {
      if (v32)
      {
        uint64_t v25 = MEMORY[0x210527700](v20, v17);
      }
      else
      {
        uint64_t v25 = *(void *)(v17 + 8 * v20 + 32);
        swift_unknownObjectRetain();
      }
      sub_20A45494C();
      *uint64_t v4 = v25;
      swift_unknownObjectRetain();
      sub_20A8C3380();
      (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v4, v31, v24);
      swift_unknownObjectRelease();
      uint64_t v34 = v23;
      unint64_t v27 = *(void *)(v23 + 16);
      unint64_t v26 = *(void *)(v23 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_20A68C5E4(v26 > 1, v27 + 1, 1);
        uint64_t v23 = v34;
      }
      ++v20;
      *(void *)(v23 + 16) = v27 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v2 + 32))(v23+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v27, v4, v24);
      unint64_t v17 = v21;
    }
    while (v22 != v20);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A7AEEE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7B0C00((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v16 = sub_20A8CC3C0();
      sub_20A7B0CD0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      uint64_t v16 = sub_20A8CC2C0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7B0C00((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    uint64_t v16 = sub_20A4F05B0();
    sub_20A7B0CD0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
  }
  return v16;
}

uint64_t sub_20A7AF18C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v1 = sub_20A8CC310();
  uint64_t v30 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CCC20();
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v32, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v27 = v30;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v3, v18, v1);
      sub_20A8CC2D0();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v3, v1);
    }
    sub_20A7B0C00((uint64_t)v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    sub_20A8CC3D0();
    uint64_t v20 = type metadata accessor for CuratedForYouFeedGroup;
    uint64_t v21 = (uint64_t)v6;
  }
  else
  {
    sub_20A7B0C00((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    sub_20A7B0C68((uint64_t)&v15[*(int *)(v13 + 28)], (uint64_t)v9, (uint64_t (*)(void))sub_20A42C764);
    uint64_t v22 = sub_20A8CC470();
    uint64_t v23 = *(void *)(v22 - 8);
    int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v9, 1, v22);
    uint64_t v25 = v31;
    uint64_t v26 = v29;
    if (v24 == 1)
    {
      sub_20A7B0CD0((uint64_t)v9, (uint64_t (*)(void))sub_20A42C764);
      (*(void (**)(uint64_t, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x263F599B0], v10);
    }
    else
    {
      sub_20A8CC3D0();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v22);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v25, v12, v10);
    }
    uint64_t v20 = type metadata accessor for StockForYouFeedGroup;
    uint64_t v21 = (uint64_t)v15;
  }
  return sub_20A7B0CD0(v21, (uint64_t (*)(void))v20);
}

double sub_20A7AF5F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A7B0C00((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    sub_20A7B0C68((uint64_t)&v14[*(int *)(v12 + 28)], (uint64_t)v11, (uint64_t (*)(void))sub_20A42C764);
    uint64_t v23 = sub_20A8CC470();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23) == 1)
    {
      sub_20A7B0CD0((uint64_t)v11, (uint64_t (*)(void))sub_20A42C764);
      double v20 = 1.0;
    }
    else
    {
      sub_20A8CC3E0();
      double v20 = v26;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
    }
    uint64_t v21 = type metadata accessor for StockForYouFeedGroup;
    uint64_t v22 = (uint64_t)v14;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A7B0C00((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    sub_20A8CC3E0();
    double v20 = v19;
    uint64_t v21 = type metadata accessor for CuratedForYouFeedGroup;
    uint64_t v22 = (uint64_t)v8;
LABEL_9:
    sub_20A7B0CD0(v22, (uint64_t (*)(void))v21);
    return v20;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v17, v2);
  sub_20A8CC2E0();
  double v20 = v25;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v20;
}

uint64_t sub_20A7AF9AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A7B0C00((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    if (v7[*(int *)(v5 + 24)]) {
      uint64_t v12 = MEMORY[0x263F8EE78];
    }
    else {
      uint64_t v12 = sub_20A8CE5F0();
    }
    uint64_t v13 = type metadata accessor for StockForYouFeedGroup;
    uint64_t v14 = (uint64_t)v7;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A7B0C00((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    uint64_t v12 = sub_20A8CC410();
    uint64_t v13 = type metadata accessor for CuratedForYouFeedGroup;
    uint64_t v14 = (uint64_t)v4;
LABEL_9:
    sub_20A7B0CD0(v14, (uint64_t (*)(void))v13);
    return v12;
  }
  sub_20A7B0CD0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  return MEMORY[0x263F8EE78];
}

unint64_t sub_20A7AFBC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7B0C00((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      unint64_t v12 = sub_20A8CC420();
      uint64_t v13 = type metadata accessor for CuratedForYouFeedGroup;
      uint64_t v14 = (uint64_t)v4;
    }
    else
    {
      unint64_t v12 = sub_20A4CFD34(MEMORY[0x263F8EE78]);
      uint64_t v13 = type metadata accessor for ForYouFeedGroup;
      uint64_t v14 = (uint64_t)v10;
    }
  }
  else
  {
    sub_20A7B0C00((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    if (v7[*(int *)(v5 + 24)]) {
      unint64_t v15 = sub_20A4CFD34(MEMORY[0x263F8EE78]);
    }
    else {
      unint64_t v15 = sub_20A8CE600();
    }
    unint64_t v12 = v15;
    uint64_t v13 = type metadata accessor for StockForYouFeedGroup;
    uint64_t v14 = (uint64_t)v7;
  }
  sub_20A7B0CD0(v14, (uint64_t (*)(void))v13);
  return v12;
}

uint64_t sub_20A7AFDEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7B0C00((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      v15[0] = 0x2064657461727543;
      v15[1] = 0xE900000000000028;
      swift_bridgeObjectRetain();
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      sub_20A8CE3D0();
      uint64_t v13 = v15[0];
      sub_20A7B0CD0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
      uint64_t v13 = sub_20A8CC300();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7B0CD0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    return 0x6B636F7453;
  }
  return v13;
}

uint64_t sub_20A7B0088()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A7B0C00((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
      uint64_t v16 = sub_20A8CC3B0();
      sub_20A7B0CD0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v14, v2);
      uint64_t v16 = sub_20A8CC2A0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  else
  {
    sub_20A7B0C00((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    uint64_t v16 = sub_20A8C3EC0();
    sub_20A7B0CD0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
  }
  return v16;
}

double sub_20A7B0334()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CC310();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockForYouFeedGroup();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ForYouFeedGroup();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20A7B0C00((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
    sub_20A7B0C68((uint64_t)&v14[*(int *)(v12 + 28)], (uint64_t)v11, (uint64_t (*)(void))sub_20A42C764);
    uint64_t v23 = sub_20A8CC470();
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v23) == 1)
    {
      sub_20A7B0CD0((uint64_t)v11, (uint64_t (*)(void))sub_20A42C764);
      double v20 = 0.0;
    }
    else
    {
      sub_20A8CC3F0();
      double v20 = v26;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v23);
    }
    uint64_t v21 = type metadata accessor for StockForYouFeedGroup;
    uint64_t v22 = (uint64_t)v14;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A7B0C00((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
    sub_20A8CC3F0();
    double v20 = v19;
    uint64_t v21 = type metadata accessor for CuratedForYouFeedGroup;
    uint64_t v22 = (uint64_t)v8;
LABEL_9:
    sub_20A7B0CD0(v22, (uint64_t (*)(void))v21);
    return v20;
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v17, v2);
  sub_20A7B0D30(&qword_26763DEF8, MEMORY[0x263F59710]);
  sub_20A8CD1A0();
  double v20 = v25;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v20;
}

uint64_t sub_20A7B0724@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B0C68(v6, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  char v7 = swift_getEnumCaseMultiPayload() + 1;
  uint64_t result = sub_20A7B0CD0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
  *a1 = v7;
  return result;
}

uint64_t sub_20A7B07E8()
{
  return sub_20A7B0D30(&qword_26AC6E080, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);
}

uint64_t sub_20A7B0840(uint64_t a1)
{
  uint64_t v2 = sub_20A7B0D30((unint64_t *)&qword_26AC6E050, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);

  return MEMORY[0x270F4FA98](a1, v2);
}

uint64_t sub_20A7B08BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A7B0D30(&qword_26AC6E040, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);

  return MEMORY[0x270F4FAC8](a1, a2, a3, v6);
}

uint64_t sub_20A7B0944(uint64_t a1)
{
  uint64_t v2 = sub_20A7B0D30(&qword_26AC6E040, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);

  return MEMORY[0x270F4FAB8](a1, v2);
}

uint64_t sub_20A7B09B8()
{
  sub_20A7B0D30(&qword_26AC6E068, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);

  return sub_20A8C5EE0();
}

uint64_t sub_20A7B0A24()
{
  return sub_20A7B0D30(&qword_26AC6E048, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);
}

uint64_t sub_20A7B0A6C()
{
  return sub_20A7B0D30((unint64_t *)&unk_26AC6E070, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);
}

uint64_t sub_20A7B0AB4()
{
  return sub_20A7B0D30((unint64_t *)&unk_26AC6E058, (void (*)(uint64_t))type metadata accessor for ForYouFeedGroup);
}

uint64_t sub_20A7B0AFC()
{
  uint64_t v0 = sub_20A8C2830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2820();
  sub_20A8C2810();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8CC2B0();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A7B0C00(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7B0C68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7B0CD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A7B0D30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A7B0D78(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_20A8CC470();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
      uint64_t v9 = (void *)((char *)a1 + v8);
      uint64_t v10 = (void *)((char *)a2 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for StockForYouFeedGroup();
      *(void *)((char *)a1 + v15[5]) = *(void *)((char *)a2 + v15[5]);
      *((unsigned char *)a1 + v15[6]) = *((unsigned char *)a2 + v15[6]);
      uint64_t v16 = v15[7];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_20A8CC470();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
      swift_bridgeObjectRetain();
      if (v21(v18, 1, v19))
      {
        sub_20A42C764(0);
        memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7B1030(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v7 = sub_20A8CC310();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    uint64_t v9 = v7;
    uint64_t v10 = a1;
LABEL_11:
    return v8(v10, v9);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    uint64_t v4 = type metadata accessor for StockForYouFeedGroup();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 28);
    uint64_t v6 = sub_20A8CC470();
    uint64_t v12 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v5, 1, v6);
    if (result) {
      return result;
    }
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    uint64_t v10 = v5;
    uint64_t v9 = v6;
    goto LABEL_11;
  }
  uint64_t v11 = sub_20A8CC470();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  type metadata accessor for CuratedForYouFeedGroup();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A7B11F8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = sub_20A8CC310();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_20A8CC470();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (void *)(a2 + v6);
    uint64_t v9 = v8[1];
    void *v7 = *v8;
    v7[1] = v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    uint64_t v12 = (int *)type metadata accessor for StockForYouFeedGroup();
    *(void *)(a1 + v12[5]) = *(void *)(a2 + v12[5]);
    *(unsigned char *)(a1 + v12[6]) = *(unsigned char *)(a2 + v12[6]);
    uint64_t v13 = v12[7];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    uint64_t v16 = sub_20A8CC470();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    if (v18(v15, 1, v16))
    {
      sub_20A42C764(0);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A7B1460(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A7B0CD0(a1, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = sub_20A8CC310();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_20A8CC470();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = *(int *)(type metadata accessor for CuratedForYouFeedGroup() + 20);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      void *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = (int *)type metadata accessor for StockForYouFeedGroup();
      *(void *)(a1 + v11[5]) = *(void *)(a2 + v11[5]);
      *(unsigned char *)(a1 + v11[6]) = *(unsigned char *)(a2 + v11[6]);
      uint64_t v12 = v11[7];
      uint64_t v13 = (void *)(a1 + v12);
      uint64_t v14 = (const void *)(a2 + v12);
      uint64_t v15 = sub_20A8CC470();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        sub_20A42C764(0);
        memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7B16F4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = sub_20A8CC310();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_20A8CC470();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
    *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
  }
  else
  {
    uint64_t v8 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = (int *)type metadata accessor for StockForYouFeedGroup();
    *(void *)(a1 + v9[5]) = *(void *)(a2 + v9[5]);
    *(unsigned char *)(a1 + v9[6]) = *(unsigned char *)(a2 + v9[6]);
    uint64_t v10 = v9[7];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    uint64_t v13 = sub_20A8CC470();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      sub_20A42C764(0);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A7B1938(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A7B0CD0(a1, (uint64_t (*)(void))type metadata accessor for ForYouFeedGroup);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = sub_20A8CC310();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_20A8CC470();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = type metadata accessor for CuratedForYouFeedGroup();
      *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
    }
    else
    {
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for StockForYouFeedGroup();
      *(void *)(a1 + v9[5]) = *(void *)(a2 + v9[5]);
      *(unsigned char *)(a1 + v9[6]) = *(unsigned char *)(a2 + v9[6]);
      uint64_t v10 = v9[7];
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      uint64_t v13 = sub_20A8CC470();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A42C764(0);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7B1BA0()
{
  uint64_t result = type metadata accessor for StockForYouFeedGroup();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CuratedForYouFeedGroup();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8CC310();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

double sub_20A7B1CA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_20A8C9820();
  uint64_t v5 = v4;
  sub_20A8C9820();
  uint64_t v7 = v6;
  sub_20A8C9710();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_20A8C9700();
  uint64_t v17 = v16;
  uint64_t v18 = sub_20A8C97B0();
  uint64_t v19 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v15;
  *(void *)(a2 + 48) = v17;
  *(void *)(a2 + 56) = v18;
  __asm { FMOV            V0.2D, #5.0 }
  *(_OWORD *)(a2 + 64) = _Q0;
  *(_OWORD *)(a2 + 80) = xmmword_20A8F03B0;
  double result = 0.0;
  *(_OWORD *)(a2 + 96) = xmmword_20A8F03C0;
  *(void *)(a2 + 112) = 0;
  return result;
}

uint64_t sub_20A7B1D8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v27 = a1;
  sub_20A4573F8();
  MEMORY[0x270FA5388](v2 - 8);
  double v26 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDAF8];
  sub_20A7B4754(0, (unint64_t *)&unk_26AC6ADB0, (uint64_t (*)(uint64_t))sub_20A457498, sub_20A457580, MEMORY[0x263EFDAF8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v25 - v8;
  sub_20A457724();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B4754(0, &qword_26AC6AD98, (uint64_t (*)(uint64_t))sub_20A457724, sub_20A457868, v4);
  uint64_t v25 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v25 - v17;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24));
  sub_20A8C36D0();
  swift_getKeyPath();
  sub_20A457600();
  sub_20A8CBE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A457868();
  sub_20A7B4BF8(&qword_26AC68E08, MEMORY[0x263F7AB98]);
  sub_20A8CBEB0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_20A44D17C();
  id v28 = (id)sub_20A8CEBE0();
  uint64_t v19 = sub_20A8CEBC0();
  uint64_t v20 = (uint64_t)v26;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v26, 1, 1, v19);
  sub_20A55B0AC();
  uint64_t v21 = v27;
  void v27[3] = v22;
  unsigned char v21[4] = sub_20A7B4BF8(&qword_26AC6ADE0, (void (*)(uint64_t))sub_20A55B0AC);
  __swift_allocate_boxed_opaque_existential_1(v21);
  sub_20A457970();
  sub_20A7B4BF8(&qword_26AC7F938, (void (*)(uint64_t))sub_20A44D17C);
  uint64_t v23 = v25;
  sub_20A8CBE90();
  sub_20A7B4C40(v20, (uint64_t (*)(void))sub_20A4573F8);

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v23);
}

id sub_20A7B222C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_priceDataManager], *(void *)&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_priceDataManager + 24]);
  sub_20A7B4BF8(&qword_26AC72968, (void (*)(uint64_t))type metadata accessor for ForYouFeedDataManager);
  sub_20A8C39D0();
  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager], *(void *)&v0[OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager + 24]);
  sub_20A7B4BF8(&qword_26AC72970, (void (*)(uint64_t))type metadata accessor for ForYouFeedDataManager);
  uint64_t v2 = v0;
  sub_20A8C36A0();

  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_20A7B255C()
{
  return type metadata accessor for ForYouFeedDataManager();
}

uint64_t type metadata accessor for ForYouFeedDataManager()
{
  uint64_t result = qword_26AC72978;
  if (!qword_26AC72978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A7B25B0()
{
  sub_20A7B4910();
  uint64_t v18 = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  objc_super v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B49B0(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  uint64_t v20 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B4754(0, &qword_26AC6ADD8, (uint64_t (*)(uint64_t))sub_20A7B49B0, sub_20A7B4A2C, MEMORY[0x263EFDB40]);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v21 = v9;
  uint64_t v22 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - v11;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_priceDataManager), *(void *)(v0 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_priceDataManager + 24));
  sub_20A7B4BF8(&qword_26AC72968, (void (*)(uint64_t))type metadata accessor for ForYouFeedDataManager);
  sub_20A8C39C0();
  uint64_t v13 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_watchlistManager);
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_20A7B4BF8(&qword_26AC72970, (void (*)(uint64_t))type metadata accessor for ForYouFeedDataManager);
  sub_20A8C3670();
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  uint64_t v23 = sub_20A8C3610();
  swift_getKeyPath();
  sub_20A4574E0();
  sub_20A457548();
  sub_20A8CBE80();
  swift_release();
  swift_release();
  sub_20A7B49F8();
  sub_20A7B4A8C();
  uint64_t v14 = v18;
  sub_20A8CBEB0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  sub_20A7B4A2C();
  uint64_t v15 = v19;
  sub_20A8CBEA0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v15);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A7B4B58();
  uint64_t v16 = v21;
  sub_20A8CBEC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v16);
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  return swift_release();
}

void sub_20A7B29F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t v3 = MEMORY[0x2105289B0](v2);
  if (v3)
  {
    objc_super v4 = (void *)v3;
    uint64_t v5 = v3 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate;
    if (MEMORY[0x2105289B0](v3 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate))
    {
      uint64_t v6 = *(void *)(v5 + 8);
      swift_getObjectType();
      uint64_t v7 = *(void (**)(void))(v6 + 24);
      id v8 = v4;
      v7();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_20A7B2ABC()
{
  swift_getObjectType();
  CFTimeInterval v0 = CACurrentMediaTime();
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26AC6DC48;
  sub_20A8CEA00();
  sub_20A8C7D90();

  MEMORY[0x270FA5388](v2);
  type metadata accessor for ForYouFeedServiceConfig();
  sub_20A8C6670();
  sub_20A7B4754(0, &qword_26AC6B0B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59938]);
  sub_20A8C6510();
  swift_release();
  uint64_t v3 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();

  *(CFTimeInterval *)(swift_allocObject() + 16) = v0;
  objc_super v4 = (void *)sub_20A8C6450();
  sub_20A8C6510();
  swift_release();
  swift_release();

  *(CFTimeInterval *)(swift_allocObject() + 16) = v0;
  uint64_t v5 = (void *)sub_20A8C6450();
  uint64_t v6 = sub_20A8C6550();
  swift_release();
  swift_release();

  return v6;
}

uint64_t sub_20A7B2D70(uint64_t a1, uint64_t a2)
{
  sub_20A7B470C(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_feedService), *(void *)(a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_feedService + 24));
  type metadata accessor for ForYouFeedServiceConfig();
  sub_20A4F0534();
  sub_20A8CD100();
  id v8 = off_26BE635F0;
  type metadata accessor for ForYouFeedServiceProxy();
  uint64_t v9 = v8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t sub_20A7B2EBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_20A7B2EE0(uint64_t *a1, uint64_t a2)
{
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  sub_20A8C27F0();
  uint64_t v8 = sub_20A8C2800();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 0, 1, v8);
  uint64_t v9 = a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_lastRefreshDate;
  swift_beginAccess();
  sub_20A55B284((uint64_t)v6, v9);
  swift_endAccess();
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D4540;
  id v12 = v10;
  sub_20A8CE780();
  uint64_t v13 = MEMORY[0x263F8D5B8];
  *(void *)(v11 + 56) = MEMORY[0x263F8D538];
  *(void *)(v11 + 64) = v13;
  *(void *)(v11 + 32) = v14;
  uint64_t v20 = v7;
  sub_20A7B4754(0, &qword_26AC6B0B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59938]);
  sub_20A7B4D1C();
  uint64_t v15 = sub_20A8C5EE0();
  uint64_t v17 = v16;
  *(void *)(v11 + 96) = MEMORY[0x263F8D310];
  *(void *)(v11 + 104) = sub_20A43F830();
  *(void *)(v11 + 72) = v15;
  *(void *)(v11 + 80) = v17;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  uint64_t v20 = v7;
  sub_20A7B4DB8(0, &qword_26AC69880, (uint64_t)&type metadata for ForYouFeedRefreshData, MEMORY[0x263F7D028]);
  swift_allocObject();
  swift_retain();
  return sub_20A8C6580();
}

uint64_t sub_20A7B3188()
{
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AC6DC48;
  sub_20A8CE9E0();
  sub_20A43F778();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20A8D4540;
  sub_20A8CE780();
  uint64_t v2 = MEMORY[0x263F8D5B8];
  *(void *)(v1 + 56) = MEMORY[0x263F8D538];
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 32) = v3;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  *(void *)(v1 + 96) = MEMORY[0x263F8D310];
  *(void *)(v1 + 104) = sub_20A43F830();
  *(void *)(v1 + 72) = 0;
  *(void *)(v1 + 80) = 0xE000000000000000;
  sub_20A8C7D90();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A7B32EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  CFTimeInterval v6 = CACurrentMediaTime();
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D4540;
  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v10 = sub_20A43F830();
  *(void *)(v8 + 64) = v10;
  *(void *)(v8 + 32) = a1;
  *(void *)(v8 + 40) = a2;
  uint64_t v20 = a1;
  id v11 = v7;
  swift_bridgeObjectRetain();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 96) = v9;
  *(void *)(v8 + 104) = v10;
  *(void *)(v8 + 72) = 0;
  *(void *)(v8 + 80) = 0xE000000000000000;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = a3;
  sub_20A7B470C(0);
  swift_retain();
  sub_20A8C6660();
  swift_release();
  sub_20A7B4754(0, &qword_26AC6B0B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59938]);
  sub_20A8C6510();
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v20;
  *(void *)(v12 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v14 = (CFTimeInterval *)swift_allocObject();
  void v14[2] = v6;
  *((void *)v14 + 3) = v20;
  *((void *)v14 + 4) = a2;
  swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_20A8C6450();
  sub_20A8C6510();
  swift_release();
  swift_release();

  uint64_t v16 = (CFTimeInterval *)swift_allocObject();
  void v16[2] = v6;
  *((void *)v16 + 3) = v20;
  *((void *)v16 + 4) = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_20A8C6450();
  uint64_t v18 = sub_20A8C6550();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_20A7B36CC(uint64_t a1, uint64_t a2)
{
  sub_20A7B470C(0);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a2;
    *uint64_t v9 = v10;
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v9, *MEMORY[0x263F59B10], v5);
    sub_20A7B48AC(0, &qword_26AC69870, (uint64_t (*)(uint64_t))sub_20A7B470C, MEMORY[0x263F7D028]);
    swift_allocObject();
    swift_retain();
    return sub_20A8C6580();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    *(&v14 - 2) = a1;
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A8C6670();
    uint64_t v12 = (void *)sub_20A8C6450();
    uint64_t v11 = sub_20A8C6500();
    swift_release();
  }
  return v11;
}

uint64_t sub_20A7B38C0()
{
  return sub_20A8CD100();
}

uint64_t sub_20A7B3918(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_feedService), *(void *)(a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_feedService + 24));
  uint64_t v2 = off_26BE635F0;
  type metadata accessor for ForYouFeedServiceProxy();
  return v2();
}

uint64_t sub_20A7B399C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a3;
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = *a1;
  uint64_t v14 = a1[1];
  uint64_t v15 = a1[2];
  uint64_t v16 = a2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_lastRefreshDate;
  swift_beginAccess();
  sub_20A58D478(v16, (uint64_t)v9);
  uint64_t v17 = sub_20A8C2800();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    sub_20A8C27F0();
    sub_20A7B4C40((uint64_t)v9, (uint64_t (*)(void))sub_20A42D040);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v9, v17);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
  swift_beginAccess();
  sub_20A55B284((uint64_t)v12, v16);
  swift_endAccess();
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_20A8D5CB0;
  id v21 = v19;
  sub_20A8CE780();
  uint64_t v22 = MEMORY[0x263F8D5B8];
  *(void *)(v20 + 56) = MEMORY[0x263F8D538];
  *(void *)(v20 + 64) = v22;
  *(void *)(v20 + 32) = v23;
  uint64_t v24 = MEMORY[0x263F8D310];
  *(void *)(v20 + 96) = MEMORY[0x263F8D310];
  unint64_t v25 = sub_20A43F830();
  *(void *)(v20 + 104) = v25;
  *(void *)(v20 + 72) = v29;
  *(void *)(v20 + 80) = a4;
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  uint64_t v32 = v13;
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  uint64_t v26 = v30;
  unint64_t v27 = v31;
  *(void *)(v20 + 136) = v24;
  *(void *)(v20 + 144) = v25;
  *(void *)(v20 + 112) = v26;
  *(void *)(v20 + 120) = v27;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  uint64_t v32 = v13;
  uint64_t v33 = v14;
  uint64_t v34 = v15;
  sub_20A7B4DB8(0, &qword_26AC69878, (uint64_t)&type metadata for ForYouFeedExpandData, MEMORY[0x263F7D028]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_20A8C6580();
}

uint64_t sub_20A7B3D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20A8D5CB0;
  id v7 = v5;
  sub_20A8CE780();
  uint64_t v8 = MEMORY[0x263F8D5B8];
  *(void *)(v6 + 56) = MEMORY[0x263F8D538];
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 32) = v9;
  uint64_t v10 = MEMORY[0x263F8D310];
  *(void *)(v6 + 96) = MEMORY[0x263F8D310];
  unint64_t v11 = sub_20A43F830();
  *(void *)(v6 + 104) = v11;
  *(void *)(v6 + 72) = a2;
  *(void *)(v6 + 80) = a3;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  *(void *)(v6 + 136) = v10;
  *(void *)(v6 + 144) = v11;
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 120) = 0xE000000000000000;
  sub_20A8CEA00();
  sub_20A8C7D90();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A7B3E94()
{
  uint64_t v0 = sub_20A8C3190();
  uint64_t v26 = *(void *)(v0 - 8);
  uint64_t v27 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2800();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = sub_20A8CCBA0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC67670 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x263F59970])
  {
    uint64_t v18 = v28;
    uint64_t v19 = v28 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_lastRefreshDate;
    swift_beginAccess();
    sub_20A58D478(v19, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_20A7B4C40((uint64_t)v5, (uint64_t (*)(void))sub_20A42D040);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    sub_20A8C27F0();
    sub_20A8C2710();
    double v22 = v21;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v9, v6);
    __swift_project_boxed_opaque_existential_1((void *)(v18 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_appConfigurationManager), *(void *)(v18 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_appConfigurationManager + 24));
    sub_20A8C3AC0();
    sub_20A8C3110();
    double v25 = v24;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v27);
    v23(v12, v6);
    return v25 < v22;
  }
  else
  {
    if (v17 == *MEMORY[0x263F59978]) {
      return 0;
    }
    if (v17 == *MEMORY[0x263F59968])
    {
      return 1;
    }
    else
    {
      uint64_t result = sub_20A8CF750();
      __break(1u);
    }
  }
  return result;
}

void sub_20A7B42E0()
{
  sub_20A42D040(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_20A7B43BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate;
  uint64_t result = MEMORY[0x2105289B0](v2 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate);
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v6 + 8))(v2, &off_26BE6EF40, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A7B4530()
{
  uint64_t v1 = v0;
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2E40();
  uint64_t v5 = sub_20A8C34C0();
  int v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  uint64_t result = sub_20A7B4C40((uint64_t)v4, (uint64_t (*)(void))sub_20A5726A4);
  if (v6 != 1)
  {
    uint64_t v8 = v1 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate;
    uint64_t result = MEMORY[0x2105289B0](v1 + OBJC_IVAR____TtC8StocksUI21ForYouFeedDataManager_delegate);
    if (result)
    {
      uint64_t v9 = *(void *)(v8 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v9 + 24))(v1, &off_26BE6EF40, ObjectType, v9);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_20A7B4668(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F788A0](a1, ObjectType);
}

uint64_t sub_20A7B46B8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A7B46F0(uint64_t a1)
{
  return sub_20A7B36CC(a1, *(void *)(v1 + 16));
}

void sub_20A7B470C(uint64_t a1)
{
}

void sub_20A7B4754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A7B47D4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A7B480C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 24);
  uint64_t v4 = *a1;
  *a2 = *(void *)(v2 + 16);
  a2[1] = v3;
  a2[2] = v4;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A7B4848()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A7B4880(uint64_t *a1, uint64_t a2)
{
  return sub_20A7B399C(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A7B48A0(uint64_t a1)
{
  return sub_20A7B3D0C(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_20A7B48AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A7B4910()
{
  if (!qword_26AC6AD68)
  {
    sub_20A4574E0();
    sub_20A7B4DB8(255, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    sub_20A457548();
    unint64_t v0 = sub_20A8CBE30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AD68);
    }
  }
}

void sub_20A7B49B0(uint64_t a1)
{
}

uint64_t sub_20A7B49F8()
{
  return sub_20A7B4BF8(&qword_26AC6AD60, (void (*)(uint64_t))sub_20A7B4910);
}

uint64_t sub_20A7B4A2C()
{
  return sub_20A7B4BF8(&qword_26AC6AD80, sub_20A7B49B0);
}

uint64_t sub_20A7B4A60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A8C40B0();
  *a1 = result;
  return result;
}

unint64_t sub_20A7B4A8C()
{
  unint64_t result = qword_26AC7F818;
  if (!qword_26AC7F818)
  {
    sub_20A7B4DB8(255, (unint64_t *)&qword_26AC7F800, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F818);
  }
  return result;
}

uint64_t sub_20A7B4B18()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A7B4B50(uint64_t a1)
{
  sub_20A7B29F4(a1, v1);
}

unint64_t sub_20A7B4B58()
{
  unint64_t result = qword_26AC6ADD0;
  if (!qword_26AC6ADD0)
  {
    sub_20A7B4754(255, &qword_26AC6ADD8, (uint64_t (*)(uint64_t))sub_20A7B49B0, sub_20A7B4A2C, MEMORY[0x263EFDB40]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6ADD0);
  }
  return result;
}

uint64_t sub_20A7B4BF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A7B4C40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A7B4CA0()
{
  return sub_20A8CC320();
}

uint64_t sub_20A7B4CD8()
{
  return swift_deallocObject();
}

uint64_t sub_20A7B4CE8(uint64_t *a1, uint64_t a2)
{
  return sub_20A7B2EE0(a1, a2);
}

uint64_t sub_20A7B4D04()
{
  return swift_deallocObject();
}

uint64_t sub_20A7B4D14()
{
  return sub_20A7B3188();
}

unint64_t sub_20A7B4D1C()
{
  unint64_t result = qword_26AC6B0A8;
  if (!qword_26AC6B0A8)
  {
    sub_20A7B4754(255, &qword_26AC6B0B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59938]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6B0A8);
  }
  return result;
}

void sub_20A7B4DB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A7B4E04()
{
  return sub_20A7B4CA0();
}

NSAttributedString __swiftcall NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(Swift::Bool pointingUpward, UIFont withFont, UIColor withColor)
{
  BOOL ShouldDifferentiateWithoutColor = UIAccessibilityShouldDifferentiateWithoutColor();
  uint64_t v6 = v18;
  if (ShouldDifferentiateWithoutColor)
  {
    objc_msgSend(v18, sel_mutableCopy);
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A7B50C8();
    if (swift_dynamicCast())
    {
      id v7 = objc_msgSend(self, sel_configurationWithFont_scale_, withFont.super.isa, 1);
      unint64_t v8 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v8, v7);

      if (v9)
      {
        id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81678]), sel_init);
        id v11 = objc_msgSend(v9, sel_imageWithTintColor_renderingMode_, withColor.super.isa, 1);
        objc_msgSend(v10, sel_setImage_, v11);

        id v12 = objc_allocWithZone(MEMORY[0x263F086A0]);
        uint64_t v13 = (void *)sub_20A8CE240();
        id v14 = objc_msgSend(v12, sel_initWithString_, v13);

        objc_msgSend(v19, sel_appendAttributedString_, v14);
        id v15 = objc_msgSend(self, sel_attributedStringWithAttachment_, v10);
        objc_msgSend(v19, sel_appendAttributedString_, v15);

        return (NSAttributedString)v19;
      }
      else
      {
        id v17 = v18;

        return (NSAttributedString)v17;
      }
    }
    uint64_t v6 = v18;
  }

  return (NSAttributedString)v6;
}

unint64_t sub_20A7B50C8()
{
  unint64_t result = qword_26763DFA0;
  if (!qword_26763DFA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763DFA0);
  }
  return result;
}

id sub_20A7B5108()
{
  BOOL ShouldDifferentiateWithoutColor = UIAccessibilityShouldDifferentiateWithoutColor();
  uint64_t v1 = v14;
  if (ShouldDifferentiateWithoutColor)
  {
    objc_msgSend(v14, sel_mutableCopy);
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A7B50C8();
    if (swift_dynamicCast())
    {
      uint64_t v2 = (void *)sub_20A8CEC60();
      id v3 = objc_msgSend(self, sel_configurationWithFont_scale_, v2, 1);

      id v4 = v3;
      unint64_t v5 = (void *)sub_20A8CE240();
      id v6 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v5, v4);

      if (v6)
      {
        id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F81678]), sel_init);
        objc_msgSend(v7, sel_setImage_, v6);
        id v8 = objc_allocWithZone(MEMORY[0x263F086A0]);
        id v9 = (void *)sub_20A8CE240();
        id v10 = objc_msgSend(v8, sel_initWithString_, v9);

        objc_msgSend(v15, sel_appendAttributedString_, v10);
        id v11 = objc_msgSend(self, sel_attributedStringWithAttachment_, v7);
        objc_msgSend(v15, sel_appendAttributedString_, v11);

        return v15;
      }
      else
      {
        id v13 = v14;

        return v13;
      }
    }
    uint64_t v1 = v14;
  }

  return v1;
}

uint64_t sub_20A7B5354(uint64_t a1, char a2, char a3)
{
  uint64_t v7 = sub_20A8C2990();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 1) {
    return 0;
  }
  id v11 = *(void **)(v3 + 16);
  sub_20A8C2940();
  id v12 = (void *)sub_20A8C2900();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  id v13 = objc_msgSend(v11, sel_formattedCount_withLocale_longform_compactDisplay_, a1, v12, a2 & 1, a3 & 1);

  if (!v13) {
    return 0;
  }
  uint64_t v14 = sub_20A8CE280();

  return v14;
}

uint64_t sub_20A7B54A4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UnitNumberFormatter()
{
  return self;
}

uint64_t sub_20A7B5500()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A7B55E4()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A7B56F0()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A7B57C0()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A7B58B0()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A7B59B8()
{
  return sub_20A8CF8C0();
}

uint64_t StocksActivity.Article.articleID.getter()
{
  return sub_20A7B8FAC(MEMORY[0x263F58AA0], (SEL *)&selRef_articleID);
}

uint64_t type metadata accessor for StocksActivity.Article(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6C520);
}

uint64_t sub_20A7B5AD8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A7B5C94()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

id sub_20A7B5E58@<X0>(void *a1@<X8>)
{
  if ((*v1 & 0x8000000000000000) != 0)
  {
    uint64_t v7 = (void *)sub_20A8CE240();
    id v8 = objc_msgSend(self, sel_systemImageNamed_, v7);

    if (v8)
    {
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithRed_green_blue_alpha_, 0.305882353, 0.674509804, 0.97254902, 1.0);
      *a1 = v8;
      a1[1] = v9;
      uint64_t v10 = *MEMORY[0x263F58A88];
      uint64_t v11 = sub_20A8C4D10();
      id v18 = *(void (***)(void *, uint64_t, uint64_t))(v11 - 8);
      v18[13](a1, v10, v11);
      id v12 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))v18[7];
      id v13 = a1;
      uint64_t v14 = 0;
      uint64_t v15 = v11;
    }
    else
    {
      uint64_t v16 = sub_20A8C4D10();
      id v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
      uint64_t v15 = v16;
      id v13 = a1;
      uint64_t v14 = 1;
    }
    return (id)v12(v13, v14, 1, v15);
  }
  else
  {
    if (qword_2676398B8 != -1) {
      swift_once();
    }
    id v17 = (id)qword_267652CC0;
    *a1 = qword_267652CC0;
    a1[1] = 0;
    uint64_t v3 = *MEMORY[0x263F58A88];
    uint64_t v4 = sub_20A8C4D10();
    uint64_t v5 = *(void *)(v4 - 8);
    (*(void (**)(void *, uint64_t, uint64_t))(v5 + 104))(a1, v3, v4);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    return v17;
  }
}

uint64_t StocksActivity.identifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PreBuyFlowRouteModel();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v63 = (unint64_t *)((char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v62 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (uint64_t)&v56 - v7;
  uint64_t v8 = type metadata accessor for CampaignRouteModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v60 = (unint64_t *)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_20A8C2530();
  uint64_t v58 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v61 = (unint64_t *)((char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C3F00();
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v59 = (char *)&v56 - v21;
  uint64_t v22 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v22);
  double v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v56 - v26;
  uint64_t v28 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (unint64_t *)((char *)&v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7C2E98(v1, (uint64_t)v30, type metadata accessor for StocksActivity);
  uint64_t v31 = 0x46656469766F7270;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      StocksActivity.type.getter((char *)&v68);
      uint64_t v31 = 0xD00000000000001DLL;
      switch((char)v68)
      {
        case 1:
        case 2:
          uint64_t v31 = 0xD00000000000001ELL;
          break;
        case 3:
          uint64_t v31 = 0xD000000000000020;
          break;
        case 4:
          uint64_t v31 = 0xD00000000000001BLL;
          break;
        case 5:
          uint64_t v31 = 0xD000000000000017;
          break;
        default:
          break;
      }
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      unint64_t v46 = (char *)v30 + *(int *)(v45 + 48);
      uint64_t v47 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
      uint64_t v54 = (uint64_t (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_33;
    case 2u:
      sub_20A7B917C((uint64_t)v30, (uint64_t)v27, type metadata accessor for StocksActivity.StockFeed);
      unint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      StocksActivity.type.getter(&v67);
      uint64_t v32 = v59;
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      sub_20A8CE3D0();
      sub_20A7C2E98((uint64_t)v27, (uint64_t)v24, type metadata accessor for StocksActivity.StockFeed);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v49 = v65;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v50 = v57;
        sub_20A7B917C((uint64_t)v24, v57, type metadata accessor for StocksActivity.StockFeed.Series);
        uint64_t v51 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v32, v50, v66);
        sub_20A7B91E4(v50, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        uint64_t v51 = v66;
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v32, v24, v66);
      }
      sub_20A8C3EC0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v51);
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v68;
      id v52 = type metadata accessor for StocksActivity.StockFeed;
      uint64_t v53 = (uint64_t)v27;
      goto LABEL_34;
    case 3u:
      swift_bridgeObjectRelease();
      StocksActivity.type.getter((char *)&v68);
      uint64_t v31 = 0xD00000000000001DLL;
      switch((char)v68)
      {
        case 1:
        case 2:
          goto LABEL_19;
        case 3:
          goto LABEL_20;
        case 4:
          goto LABEL_21;
        case 5:
          goto LABEL_22;
        default:
          return v31;
      }
      return v31;
    case 4u:
      uint64_t v33 = (uint64_t)v30;
      uint64_t v30 = v61;
      sub_20A7B917C(v33, (uint64_t)v61, type metadata accessor for StocksActivity.Article);
      unint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      StocksActivity.type.getter(&v67);
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      sub_20A8CE3D0();
      sub_20A7B8FAC(MEMORY[0x263F58A98], (SEL *)&selRef_identifier);
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v68;
      uint64_t v54 = type metadata accessor for StocksActivity.Article;
      goto LABEL_33;
    case 5u:
      uint64_t v34 = v58;
      (*(void (**)(char *, unint64_t *, uint64_t))(v58 + 32))(v12, v30, v10);
      uint64_t v31 = sub_20A8C24C0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
      return v31;
    case 6u:
      sub_20A7B91E4((uint64_t)v30, type metadata accessor for StocksActivity);
      return 0x7472656C61;
    case 7u:
      uint64_t v35 = (uint64_t)v30;
      uint64_t v30 = v60;
      sub_20A7B917C(v35, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for CampaignRouteModel);
      unint64_t v68 = 0;
      unint64_t v69 = 0xE000000000000000;
      sub_20A8CF3C0();
      swift_bridgeObjectRelease();
      unint64_t v68 = 0xD000000000000014;
      unint64_t v69 = 0x800000020A90ED80;
      swift_bridgeObjectRetain();
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v68;
      uint64_t v54 = (uint64_t (*)(uint64_t))type metadata accessor for CampaignRouteModel;
      goto LABEL_33;
    case 8u:
      sub_20A485620(*v30);
      return 7367028;
    case 9u:
      sub_20A459CA4(*v30);
      return 0x696472616F626E6FLL;
    case 0xAu:
      sub_20A7B91E4((uint64_t)v30, type metadata accessor for StocksActivity);
      return 0xD000000000000011;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      uint64_t v36 = v64;
      sub_20A7C2F00((uint64_t)v30, v64, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A7B8BE8);
      uint64_t v37 = v62;
      sub_20A44D308(v36, v62);
      uint64_t v39 = v65;
      uint64_t v38 = v66;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v37, 1, v66) == 1)
      {
        uint64_t v40 = MEMORY[0x263F7AF08];
        uint64_t v41 = MEMORY[0x263F8D8F0];
        sub_20A7B8CAC(v37, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
        sub_20A7B8CAC(v36, (uint64_t)&qword_26AC68FD0, v40, v41, (uint64_t (*)(void))sub_20A7B8BE8);
        return 0xD000000000000010;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v19, v37, v38);
        unint64_t v68 = 0;
        unint64_t v69 = 0xE000000000000000;
        sub_20A8CF3C0();
        swift_bridgeObjectRelease();
        unint64_t v68 = 0xD000000000000011;
        unint64_t v69 = 0x800000020A90ED40;
        sub_20A8C3E20();
        sub_20A8CE3D0();
        swift_bridgeObjectRelease();
        uint64_t v31 = v68;
        (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v38);
        sub_20A7B8CAC(v36, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
      }
      return v31;
    case 0xCu:
      uint64_t v42 = (uint64_t)v30;
      uint64_t v30 = v63;
      sub_20A7B917C(v42, (uint64_t)v63, (uint64_t (*)(void))type metadata accessor for PreBuyFlowRouteModel);
      unint64_t v68 = 0x6C46797542657270;
      unint64_t v69 = 0xEB000000002D776FLL;
      id v43 = objc_msgSend((id)*v30, sel_itemID);
      if (v43)
      {
        char v44 = v43;
        sub_20A8CE280();
      }
      sub_20A8CE3D0();
      swift_bridgeObjectRelease();
      uint64_t v31 = v68;
      uint64_t v54 = (uint64_t (*)(uint64_t))type metadata accessor for PreBuyFlowRouteModel;
LABEL_33:
      id v52 = v54;
      uint64_t v53 = (uint64_t)v30;
LABEL_34:
      sub_20A7B91E4(v53, v52);
      break;
    case 0xDu:
      return v31;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      StocksActivity.type.getter((char *)&v68);
      uint64_t v31 = 0xD00000000000001DLL;
      switch((char)v68)
      {
        case 1:
        case 2:
LABEL_19:
          uint64_t v31 = 0xD00000000000001ELL;
          break;
        case 3:
LABEL_20:
          uint64_t v31 = 0xD000000000000020;
          break;
        case 4:
LABEL_21:
          uint64_t v31 = 0xD00000000000001BLL;
          break;
        case 5:
LABEL_22:
          uint64_t v31 = 0xD000000000000017;
          break;
        default:
          return v31;
      }
      break;
  }
  return v31;
}

void sub_20A7B6FFC(uint64_t *a1@<X8>)
{
  if ((*v1 & 0x8000000000000000) != 0)
  {
    sub_20A42CFF0(0, &qword_26AC7F8D0);
    uint64_t v5 = (void *)sub_20A8CE9C0();
    if (!v5
      || (uint64_t v6 = v5,
          id v11 = objc_msgSend(v5, sel_traitCollection),
          v6,
          (id v7 = v11) == 0))
    {
      id v7 = objc_msgSend(self, sel_currentTraitCollection);
    }
    id v12 = v7;
    id v8 = objc_msgSend(v7, sel_horizontalSizeClass);
    uint64_t v9 = sub_20A8C51A0();
    uint64_t v10 = MEMORY[0x263F58C50];
    a1[3] = v9;
    a1[4] = v10;
    __swift_allocate_boxed_opaque_existential_1(a1);
    if (v8 == (id)1) {
      sub_20A8C5180();
    }
    else {
      sub_20A8C5190();
    }
  }
  else
  {
    uint64_t v3 = sub_20A8C51A0();
    uint64_t v4 = MEMORY[0x263F58C50];
    a1[3] = v3;
    a1[4] = v4;
    __swift_allocate_boxed_opaque_existential_1(a1);
    sub_20A8C5190();
  }
}

StocksUI::StocksActivityType_optional __swiftcall StocksActivityType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20A8CF5B0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

StocksUI::StocksActivity::Options __swiftcall StocksActivity.Options.init(rawValue:)(StocksUI::StocksActivity::Options rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

uint64_t StocksActivity.Article.redirect.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C2E98(v2, (uint64_t)v9, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A7B91E4((uint64_t)v9, type metadata accessor for StocksActivity.Article);
    uint64_t v10 = sub_20A8C54E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  else
  {
    sub_20A42FC8C();
    uint64_t v13 = (uint64_t)&v9[*(int *)(v12 + 64)];
    sub_20A7B917C((uint64_t)v9, (uint64_t)v6, MEMORY[0x263F58AA8]);
    sub_20A8C4D80();
    sub_20A7B91E4((uint64_t)v6, MEMORY[0x263F58AA8]);
    return sub_20A7B8CAC(v13, (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A491224);
  }
}

uint64_t StocksActivity.collapseSidebar.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (unint64_t *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7C2E98(v1, (uint64_t)v16, type metadata accessor for StocksActivity);
  uint64_t v17 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      uint64_t v21 = (char *)v16 + *(int *)(v20 + 48);
      uint64_t v22 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      uint64_t v18 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_3;
    case 2u:
      sub_20A7B917C((uint64_t)v16, (uint64_t)v7, type metadata accessor for StocksActivity.StockFeed);
      sub_20A7C2E98((uint64_t)v7, (uint64_t)v4, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        uint64_t v24 = *(void *)&v4[*(int *)(v23 + 48)];
        sub_20A7B91E4((uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
        uint64_t v24 = *(void *)&v4[*(int *)(v25 + 48)];
        uint64_t v26 = sub_20A8C3F00();
        (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v4, v26);
      }
      uint64_t v17 = v24 & 1;
      sub_20A7B91E4((uint64_t)v7, type metadata accessor for StocksActivity.StockFeed);
      return v17;
    case 3u:
      swift_bridgeObjectRelease();
      return 0;
    case 4u:
      sub_20A7B917C((uint64_t)v16, (uint64_t)v13, type metadata accessor for StocksActivity.Article);
      sub_20A7C2E98((uint64_t)v13, (uint64_t)v10, type metadata accessor for StocksActivity.Article);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
        uint64_t v17 = 0;
      }
      else
      {
        sub_20A42FC8C();
        int v28 = *(_DWORD *)&v10[*(int *)(v27 + 48)];
        sub_20A7B8CAC((uint64_t)&v10[*(int *)(v27 + 64)], (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A491224);
        sub_20A7B91E4((uint64_t)v10, MEMORY[0x263F58AA8]);
        uint64_t v17 = v28 & 1;
      }
      sub_20A7B91E4((uint64_t)v13, type metadata accessor for StocksActivity.Article);
      return v17;
    case 5u:
    case 6u:
    case 7u:
    case 0xAu:
    case 0xCu:
      uint64_t v18 = type metadata accessor for StocksActivity;
LABEL_3:
      sub_20A7B91E4((uint64_t)v16, v18);
      return 0;
    case 8u:
      sub_20A485620(*v16);
      return 0;
    case 9u:
      sub_20A459CA4(*v16);
      return 0;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      sub_20A7B8CAC((uint64_t)v16, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
      return 0;
    case 0xDu:
      return v17;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
  }
}

uint64_t StocksActivity.type.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (void *)((char *)v15 - v7);
  sub_20A7C2E98(v1, (uint64_t)v15 - v7, type metadata accessor for StocksActivity);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      uint64_t v12 = (char *)v8 + *(int *)(v11 + 48);
      *a1 = 1;
      uint64_t v13 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      uint64_t v14 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      return sub_20A7B91E4((uint64_t)v8, v14);
    case 2u:
      char v10 = 2;
      goto LABEL_8;
    case 3u:
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = 3;
      return result;
    case 4u:
      char v10 = 4;
      goto LABEL_8;
    case 5u:
      char v10 = 5;
LABEL_8:
      *a1 = v10;
      uint64_t v14 = type metadata accessor for StocksActivity;
      return sub_20A7B91E4((uint64_t)v8, v14);
    case 6u:
    case 7u:
    case 0xAu:
    case 0xCu:
      sub_20A7B91E4((uint64_t)v8, type metadata accessor for StocksActivity);
      goto LABEL_15;
    case 8u:
      sub_20A485620(*v8);
      goto LABEL_15;
    case 9u:
      sub_20A459CA4(*v8);
      goto LABEL_15;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      sub_20A7B8CAC((uint64_t)v8, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
      goto LABEL_15;
    case 0xDu:
LABEL_15:
      sub_20A7C2E98(v1, (uint64_t)v5, type metadata accessor for StocksActivity);
      v15[0] = 0;
      v15[1] = 0xE000000000000000;
      sub_20A8CF3C0();
      sub_20A8CE3D0();
      sub_20A8CF4E0();
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A7B7C18);
    default:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a1 = 0;
      return result;
  }
}

uint64_t sub_20A7B7C50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v60 = a1;
  uint64_t v59 = sub_20A8C5390();
  uint64_t v61 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v57 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7B8BE8(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = (uint64_t)&v55 - v8;
  uint64_t v9 = sub_20A8C4A80();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v55 - v17;
  uint64_t v19 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (id *)((char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7C2E98(v2, (uint64_t)v21, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v22 = *v21;
    id v23 = objc_msgSend(*v21, sel_identifier);
    uint64_t v24 = sub_20A8CE280();
    uint64_t v26 = v25;

    id v27 = objc_msgSend(v22, sel_contentURL);
    if (v27)
    {
      int v28 = v27;
      sub_20A8C24E0();

      swift_unknownObjectRelease();
      uint64_t v29 = sub_20A8C2530();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v6, 0, 1, v29);
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v41 = sub_20A8C2530();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v6, 1, 1, v41);
    }
    uint64_t v42 = v60;
    id v43 = (int *)type metadata accessor for ArticleUserInfoModel();
    char v44 = (char *)v42 + v43[7];
    *((void *)v44 + 4) = 0;
    *(_OWORD *)char v44 = 0u;
    *((_OWORD *)v44 + 1) = 0u;
    uint64_t *v42 = v24;
    v42[1] = v26;
    *((unsigned char *)v42 + v43[6]) = 1;
    uint64_t result = sub_20A7C2F00((uint64_t)v6, (uint64_t)v42 + v43[5], (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A7B8BE8);
    unint64_t v46 = (uint64_t *)((char *)v42 + v43[8]);
    void *v46 = 0;
    v46[1] = 0;
  }
  else
  {
    sub_20A7B917C((uint64_t)v21, (uint64_t)v18, MEMORY[0x263F58AA8]);
    sub_20A7C2E98((uint64_t)v18, (uint64_t)v15, MEMORY[0x263F58AA8]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t result = sub_20A8CF520();
      __break(1u);
    }
    else
    {
      sub_20A8C5740();
      uint64_t v30 = sub_20A8C4A70();
      uint64_t v56 = v31;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v32 = sub_20A8C2530();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v58, 1, 1, v32);
      sub_20A8C5760();
      uint64_t v33 = v57;
      sub_20A8C4D50();
      uint64_t v34 = (void *)sub_20A8C5380();
      uint64_t v35 = v61 + 8;
      uint64_t v36 = *(void (**)(char *, uint64_t))(v61 + 8);
      v36(v33, v59);
      uint64_t v61 = v35;
      if (v34)
      {
        uint64_t v37 = v30;
        id v38 = objc_msgSend(v34, sel_jsonRepresentation);

        if (v38)
        {
          uint64_t v34 = (void *)sub_20A8CE280();
          uint64_t v40 = v39;

          swift_release();
        }
        else
        {
          swift_release();
          uint64_t v34 = 0;
          uint64_t v40 = 0;
        }
        uint64_t v30 = v37;
      }
      else
      {
        swift_release();
        uint64_t v40 = 0;
      }
      sub_20A42FC8C();
      uint64_t v48 = (uint64_t)v21 + *(int *)(v47 + 64);
      sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
      uint64_t v50 = &v15[*(int *)(v49 + 48)];
      sub_20A7B91E4((uint64_t)v18, MEMORY[0x263F58AA8]);
      uint64_t v51 = v60;
      uint64_t v52 = v56;
      uint64_t *v60 = v30;
      v51[1] = v52;
      uint64_t v53 = (int *)type metadata accessor for ArticleUserInfoModel();
      *((unsigned char *)v51 + v53[6]) = 0;
      sub_20A7C2F00(v58, (uint64_t)v51 + v53[5], (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A7B8BE8);
      sub_20A7C2F00((uint64_t)v62, (uint64_t)v51 + v53[7], (uint64_t)&unk_26AC69578, (uint64_t)&qword_26AC69570, MEMORY[0x263F58EA0], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_20A491224);
      uint64_t v54 = (uint64_t *)((char *)v51 + v53[8]);
      void *v54 = v34;
      v54[1] = v40;
      v36(v50, v59);
      return sub_20A7B8CAC(v48, (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A491224);
    }
  }
  return result;
}

uint64_t StocksActivity.StockFeed.stock.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C2E98(v2, (uint64_t)v9, type metadata accessor for StocksActivity.StockFeed);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_20A7B917C((uint64_t)v9, (uint64_t)v6, type metadata accessor for StocksActivity.StockFeed.Series);
    uint64_t v10 = sub_20A8C3F00();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, v6, v10);
    return sub_20A7B91E4((uint64_t)v6, type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    uint64_t v12 = sub_20A8C3F00();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, v9, v12);
  }
}

uint64_t StocksActivity.Article.headline.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C2E98(v1, (uint64_t)v7, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return *(void *)v7;
  }
  sub_20A42FC8C();
  uint64_t v10 = (uint64_t)&v7[*(int *)(v9 + 64)];
  sub_20A7B917C((uint64_t)v7, (uint64_t)v4, MEMORY[0x263F58AA8]);
  uint64_t v8 = sub_20A8C4D70();
  sub_20A7B91E4((uint64_t)v4, MEMORY[0x263F58AA8]);
  sub_20A7B8CAC(v10, (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A491224);
  return v8;
}

uint64_t StocksActivityType.eligibilities.getter()
{
  switch(*v0)
  {
    case 1:
      sub_20A7B8BE8(0, &qword_26AC7FFE0, MEMORY[0x263F7DAC8], MEMORY[0x263F8E0F8]);
      uint64_t v13 = sub_20A8CA080();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(void *)(v14 + 72);
      unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_20A8D7FF0;
      unint64_t v18 = v17 + v16;
      uint64_t v19 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
      v19(v18, *MEMORY[0x263F7DAC0], v13);
      v19(v18 + v15, *MEMORY[0x263F7DAA8], v13);
      v19(v18 + 2 * v15, *MEMORY[0x263F7DAB0], v13);
      v19(v18 + 3 * v15, *MEMORY[0x263F7DAB8], v13);
      uint64_t v5 = sub_20A7BBD9C(v17);
      swift_setDeallocating();
      break;
    case 2:
    case 3:
      sub_20A7B8BE8(0, &qword_26AC7FFE0, MEMORY[0x263F7DAC8], MEMORY[0x263F8E0F8]);
      uint64_t v6 = sub_20A8CA080();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v8 = *(void *)(v7 + 72);
      unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_20A8D4540;
      unint64_t v11 = v10 + v9;
      uint64_t v12 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
      v12(v11, *MEMORY[0x263F7DAC0], v6);
      v12(v11 + v8, *MEMORY[0x263F7DAB0], v6);
      uint64_t v5 = sub_20A7BBD9C(v10);
      swift_setDeallocating();
      break;
    default:
      sub_20A7B8BE8(0, &qword_26AC7FFE0, MEMORY[0x263F7DAC8], MEMORY[0x263F8E0F8]);
      uint64_t v1 = sub_20A8CA080();
      uint64_t v2 = *(void *)(v1 - 8);
      unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_20A8D3DC0;
      (*(void (**)(unint64_t, void, uint64_t))(v2 + 104))(v4 + v3, *MEMORY[0x263F7DAC0], v1);
      uint64_t v5 = sub_20A7BBD9C(v4);
      swift_setDeallocating();
      break;
  }
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v5;
}

unint64_t StocksActivityType.rawValue.getter()
{
  unint64_t result = 0xD00000000000001DLL;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000020;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

void sub_20A7B8BE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for StocksActivity.StockFeed.Series(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6C5D8);
}

uint64_t type metadata accessor for StocksActivity.StockFeed(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6C678);
}

uint64_t type metadata accessor for StocksActivity(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC6C740);
}

uint64_t sub_20A7B8CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A7B8D0C(unsigned __int8 *a1, char *a2)
{
  return sub_20A44FD14(*a1, *a2);
}

uint64_t sub_20A7B8D18()
{
  return sub_20A7B55E4();
}

uint64_t sub_20A7B8D20()
{
  return sub_20A7B57C0();
}

uint64_t sub_20A7B8D28()
{
  return sub_20A7B58B0();
}

StocksUI::StocksActivityType_optional sub_20A7B8D30(Swift::String *a1)
{
  return StocksActivityType.init(rawValue:)(*a1);
}

unint64_t sub_20A7B8D3C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = StocksActivityType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A7B8D64()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A7B8DC4()
{
  return sub_20A8CE580();
}

uint64_t sub_20A7B8E18()
{
  uint64_t v0 = type metadata accessor for StocksActivity(0);
  __swift_allocate_value_buffer(v0, qword_26AC6C500);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26AC6C500);
  sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
  uint64_t v3 = v1 + *(int *)(v2 + 48);
  type metadata accessor for ForYouSectionDescriptor();
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = *MEMORY[0x263F7DB48];
  uint64_t v5 = sub_20A8CA180();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);

  return swift_storeEnumTagMultiPayload();
}

uint64_t static StocksActivity.main.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26AC6C518 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for StocksActivity(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26AC6C500);
  return sub_20A7C2E98(v3, a1, type metadata accessor for StocksActivity);
}

uint64_t sub_20A7B8FAC(uint64_t (*a1)(uint64_t), SEL *a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (id *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7C2E98(v5, (uint64_t)v11, type metadata accessor for StocksActivity.Article);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v12 = [*v11 *a2];
    uint64_t v13 = sub_20A8CE280();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_20A42FC8C();
    uint64_t v15 = (uint64_t)v11 + *(int *)(v14 + 64);
    uint64_t v16 = sub_20A7B917C((uint64_t)v11, (uint64_t)v8, MEMORY[0x263F58AA8]);
    uint64_t v13 = a1(v16);
    sub_20A7B91E4((uint64_t)v8, MEMORY[0x263F58AA8]);
    sub_20A7B8CAC(v15, (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A491224);
  }
  return v13;
}

uint64_t sub_20A7B917C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7B91E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t StocksActivity.eligibilities.getter()
{
  uint64_t v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (unint64_t *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7C2E98(v0, (uint64_t)v3, type metadata accessor for StocksActivity);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = MEMORY[0x263F8EE88];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      unint64_t v8 = (char *)v3 + *(int *)(v7 + 48);
      uint64_t v9 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      uint64_t v6 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_6;
    case 2:
    case 4:
    case 5:
      uint64_t v6 = type metadata accessor for StocksActivity;
LABEL_6:
      sub_20A7B91E4((uint64_t)v3, v6);
      goto LABEL_8;
    case 3:
      goto LABEL_7;
    case 6:
    case 7:
    case 10:
    case 12:
      sub_20A7B91E4((uint64_t)v3, type metadata accessor for StocksActivity);
      goto LABEL_12;
    case 8:
      sub_20A485620(*v3);
      goto LABEL_12;
    case 9:
      sub_20A459CA4(*v3);
      goto LABEL_12;
    case 11:
      sub_20A4B2908();
      swift_release();
      sub_20A7B8CAC((uint64_t)v3, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
LABEL_12:
      uint64_t result = MEMORY[0x263F8EE88];
      break;
    case 13:
      return result;
    default:
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_8:
      StocksActivity.type.getter(&v11);
      uint64_t result = StocksActivityType.eligibilities.getter();
      break;
  }
  return result;
}

uint64_t StocksActivity.disableAnimation.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StocksActivity.StockFeed(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v29 - v6;
  uint64_t v8 = type metadata accessor for StocksActivity.Article(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (unint64_t *)((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A7C2E98(v1, (uint64_t)v16, type metadata accessor for StocksActivity);
  uint64_t v17 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      uint64_t v21 = (char *)v16 + *(int *)(v20 + 48);
      uint64_t v22 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      uint64_t v18 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_3;
    case 2u:
      sub_20A7B917C((uint64_t)v16, (uint64_t)v7, type metadata accessor for StocksActivity.StockFeed);
      sub_20A7C2E98((uint64_t)v7, (uint64_t)v4, type metadata accessor for StocksActivity.StockFeed);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        unint64_t v24 = *(void *)&v4[*(int *)(v23 + 48)];
        sub_20A7B91E4((uint64_t)v4, type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
        unint64_t v24 = *(void *)&v4[*(int *)(v25 + 48)];
        uint64_t v26 = sub_20A8C3F00();
        (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v4, v26);
      }
      uint64_t v17 = (v24 >> 1) & 1;
      sub_20A7B91E4((uint64_t)v7, type metadata accessor for StocksActivity.StockFeed);
      return v17;
    case 3u:
      swift_bridgeObjectRelease();
      return 0;
    case 4u:
      sub_20A7B917C((uint64_t)v16, (uint64_t)v13, type metadata accessor for StocksActivity.Article);
      sub_20A7C2E98((uint64_t)v13, (uint64_t)v10, type metadata accessor for StocksActivity.Article);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
        uint64_t v17 = 0;
      }
      else
      {
        sub_20A42FC8C();
        unint64_t v28 = *(void *)&v10[*(int *)(v27 + 48)];
        sub_20A7B8CAC((uint64_t)&v10[*(int *)(v27 + 64)], (uint64_t)&qword_26AC79B50, (uint64_t)&unk_26AC79B40, (uint64_t)&protocol descriptor for ArticleScienceDataProviderType, (uint64_t (*)(void))sub_20A491224);
        sub_20A7B91E4((uint64_t)v10, MEMORY[0x263F58AA8]);
        uint64_t v17 = (v28 >> 1) & 1;
      }
      sub_20A7B91E4((uint64_t)v13, type metadata accessor for StocksActivity.Article);
      return v17;
    case 5u:
    case 6u:
    case 7u:
    case 0xAu:
    case 0xCu:
      uint64_t v18 = type metadata accessor for StocksActivity;
LABEL_3:
      sub_20A7B91E4((uint64_t)v16, v18);
      return 0;
    case 8u:
      sub_20A485620(*v16);
      return 0;
    case 9u:
      sub_20A459CA4(*v16);
      return 0;
    case 0xBu:
      sub_20A4B2908();
      swift_release();
      sub_20A7B8CAC((uint64_t)v16, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
      return 0;
    case 0xDu:
      return v17;
    default:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
  }
}

uint64_t StocksActivity.affectsNavigationStack.getter()
{
  uint64_t v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C2E98(v0, (uint64_t)v3, type metadata accessor for StocksActivity);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      uint64_t v8 = &v3[*(int *)(v7 + 48)];
      uint64_t v9 = sub_20A8CA180();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      uint64_t v6 = (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor;
      goto LABEL_3;
    case 6:
    case 8:
    case 12:
      sub_20A7B91E4((uint64_t)v3, type metadata accessor for StocksActivity);
      return 0;
    case 11:
      sub_20A4B2908();
      swift_release();
      sub_20A7B8CAC((uint64_t)v3, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A7B8BE8);
      return 1;
    case 13:
      return result;
    default:
      uint64_t v6 = type metadata accessor for StocksActivity;
LABEL_3:
      sub_20A7B91E4((uint64_t)v3, v6);
      return 1;
  }
}

void static StocksActivity.Options.collapseSidebar.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static StocksActivity.Options.disableAnimation.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static StocksActivity.Options.default.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StocksActivity.Options.rawValue.getter()
{
  return *(void *)v0;
}

void sub_20A7B9CA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A7B9D14()
{
  if (*v0) {
    return 0x694C736B636F7473;
  }
  else {
    return 0x6C616974696E69;
  }
}

uint64_t sub_20A7B9D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A7C2B48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A7B9D7C(uint64_t a1)
{
  unint64_t v2 = sub_20A7BC0B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A7B9DB8(uint64_t a1)
{
  unint64_t v2 = sub_20A7BC0B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StocksActivity.StockFeed.Series.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_20A7C31A4(0, &qword_26763DFA8, (uint64_t (*)(void))sub_20A7BC0B0, (uint64_t)&type metadata for StocksActivity.StockFeed.Series.CodingKeys, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A7BC0B0();
  sub_20A8CF8F0();
  char v13 = 0;
  sub_20A8C3F00();
  sub_20A7BC104((unint64_t *)&unk_26AC67660, MEMORY[0x263F7AF08]);
  sub_20A8CF6E0();
  if (!v2)
  {
    v11[1] = *(void *)(v3 + *(int *)(type metadata accessor for StocksActivity.StockFeed.Series(0) + 20));
    char v12 = 1;
    sub_20A7B8BE8(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
    sub_20A7BC14C(&qword_26763DFB8, (unint64_t *)&unk_26AC67660);
    sub_20A8CF6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t StocksActivity.StockFeed.Series.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v23 = sub_20A8C3F00();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v24 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C31A4(0, (unint64_t *)&unk_26763DFC0, (uint64_t (*)(void))sub_20A7BC0B0, (uint64_t)&type metadata for StocksActivity.StockFeed.Series.CodingKeys, MEMORY[0x263F8E040]);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A7BC0B0();
  sub_20A8CF8E0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v11 = v20;
  char v27 = 0;
  sub_20A7BC104(&qword_26AC83100, MEMORY[0x263F7AF08]);
  uint64_t v12 = v23;
  uint64_t v13 = v22;
  sub_20A8CF640();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v18 = v10;
  v14(v10, v24, v12);
  sub_20A7B8BE8(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  char v26 = 1;
  sub_20A7BC14C(&qword_26763DFD0, &qword_26AC83100);
  sub_20A8CF640();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v13);
  uint64_t v16 = (uint64_t)v18;
  uint64_t v15 = v19;
  *(void *)&v18[*(int *)(v8 + 20)] = v25;
  sub_20A7C2E98(v16, v15, type metadata accessor for StocksActivity.StockFeed.Series);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_20A7B91E4(v16, type metadata accessor for StocksActivity.StockFeed.Series);
}

uint64_t sub_20A7BA480@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StocksActivity.StockFeed.Series.init(from:)(a1, a2);
}

uint64_t sub_20A7BA498(void *a1)
{
  return StocksActivity.StockFeed.Series.encode(to:)(a1);
}

uint64_t sub_20A7BA4B0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2A60();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_20A7C2C48();
    uint64_t v9 = sub_20A8CF390();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_20A7BC104(&qword_26AC68CF8, MEMORY[0x263F07908]);
      uint64_t v16 = sub_20A8CE1B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_20A7BC104((unint64_t *)&unk_26AC68D00, MEMORY[0x263F07908]);
          char v23 = sub_20A8CE210();
          unint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_20A7BA7C4(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20A8CF540();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_20A7C2AB8();
      uint64_t result = sub_20A8CF390();
      unint64_t v3 = result;
      unint64_t v19 = v1;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_20A8CF540();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v4) {
        return v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  unint64_t v3 = MEMORY[0x263F8EE88];
  unint64_t v19 = v1;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return v3;
  }
LABEL_9:
  unint64_t v6 = 0;
  unint64_t v7 = v3 + 56;
  uint64_t v18 = v4;
  while ((v19 & 0xC000000000000001) != 0)
  {
    uint64_t result = MEMORY[0x210527700](v6, v19);
    unint64_t v8 = result;
    BOOL v9 = __OFADD__(v6++, 1);
    if (v9) {
      goto LABEL_25;
    }
LABEL_17:
    sub_20A7B8BE8(0, (unint64_t *)&qword_26763AC58, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeView, MEMORY[0x263F8DD48]);
    uint64_t result = sub_20A8CE1B0();
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = result & ~v10;
    unint64_t v12 = v11 >> 6;
    uint64_t v13 = *(void *)(v7 + 8 * (v11 >> 6));
    uint64_t v14 = 1 << v11;
    if (((1 << v11) & v13) != 0)
    {
      uint64_t v15 = ~v10;
      while (1)
      {
        uint64_t result = sub_20A8CE210();
        if (result) {
          break;
        }
        unint64_t v11 = (v11 + 1) & v15;
        unint64_t v12 = v11 >> 6;
        uint64_t v13 = *(void *)(v7 + 8 * (v11 >> 6));
        uint64_t v14 = 1 << v11;
        if ((v13 & (1 << v11)) == 0)
        {
          uint64_t v4 = v18;
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
      uint64_t v4 = v18;
      if (v6 == v18) {
        return v3;
      }
    }
    else
    {
LABEL_22:
      *(void *)(v7 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v8;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v9 = __OFADD__(v16, 1);
      uint64_t v17 = v16 + 1;
      if (v9) {
        goto LABEL_26;
      }
      *(void *)(v3 + 16) = v17;
      if (v6 == v4) {
        return v3;
      }
    }
  }
  if (v6 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_27;
  }
  unint64_t v8 = *(void *)(v19 + 32 + 8 * v6);
  uint64_t result = swift_retain();
  BOOL v9 = __OFADD__(v6++, 1);
  if (!v9) {
    goto LABEL_17;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_20A7BAA50(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_20A7C31A4(0, &qword_26AC7FCC0, (uint64_t (*)(void))sub_20A52B104, (uint64_t)&type metadata for AppEvent, MEMORY[0x263F8DBD8]);
    uint64_t v3 = sub_20A8CF390();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(v6 + v4);
      sub_20A8CF880();
      sub_20A8CF890();
      uint64_t result = sub_20A8CF8C0();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_20A7BABC8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C8960();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_20A7C2CDC();
    uint64_t v9 = sub_20A8CF390();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_20A7BC104(&qword_26AC67750, MEMORY[0x263F7D4B0]);
      uint64_t v16 = sub_20A8CE1B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_20A7BC104(&qword_26AC69F58, MEMORY[0x263F7D4B0]);
          char v23 = sub_20A8CE210();
          unint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_20A7BAEDC(uint64_t a1)
{
  uint64_t v2 = sub_20A8C9880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_20A7C32F4();
    uint64_t v9 = sub_20A8CF390();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_20A7BC104(&qword_26AC6A2E8, MEMORY[0x263F7D880]);
      uint64_t v16 = sub_20A8CE1B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_20A7BC104((unint64_t *)&unk_26763E070, MEMORY[0x263F7D880]);
          char v23 = sub_20A8CE210();
          unint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_20A7BB1F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_20A7C2948();
    uint64_t v3 = sub_20A8CF390();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_20A8CE280();
      sub_20A8CF880();
      id v7 = v6;
      sub_20A8CE360();
      uint64_t v8 = sub_20A8CF8C0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_20A8CE280();
        uint64_t v17 = v16;
        if (v15 == sub_20A8CE280() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_20A8CF760();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_20A8CE280();
          uint64_t v24 = v23;
          if (v22 == sub_20A8CE280() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_20A8CF760();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_20A7BB41C(uint64_t a1)
{
  uint64_t v2 = sub_20A8CD900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_20A7C2D70();
    uint64_t v9 = sub_20A8CF390();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_20A7BC104((unint64_t *)&unk_26AC6B2C8, MEMORY[0x263F59D58]);
      uint64_t v16 = sub_20A8CE1B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_20A7BC104(&qword_26763E050, MEMORY[0x263F59D58]);
          char v23 = sub_20A8CE210();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_20A7BB730(uint64_t a1)
{
  uint64_t v2 = sub_20A8C28C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_20A7C2E04();
    uint64_t v9 = sub_20A8CF390();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_20A7BC104((unint64_t *)&unk_26763E060, MEMORY[0x263F07548]);
      uint64_t v16 = sub_20A8CE1B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_20A7BC104(&qword_26763AC60, MEMORY[0x263F07548]);
          char v23 = sub_20A8CE210();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

void sub_20A7BBA44(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_20A7C29DC();
      uint64_t v3 = sub_20A8CF390();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_20A8CF540();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x263F8EE88];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x210527700](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_20A8CEF20();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F9B0);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_20A8CEF30();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_20A8CEF30();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_20A8CEF20();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F9B0);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_20A8CEF30();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_20A8CEF30();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_20A7BBD9C(uint64_t a1)
{
  uint64_t v2 = sub_20A8CA080();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_20A7C3260();
    uint64_t v9 = sub_20A8CF390();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_20A7BC104(&qword_26AC6A530, MEMORY[0x263F7DAC8]);
      uint64_t v16 = sub_20A8CE1B0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_20A7BC104((unint64_t *)&unk_26AC6A538, MEMORY[0x263F7DAC8]);
          char v23 = sub_20A8CE210();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

unint64_t sub_20A7BC0B0()
{
  unint64_t result = qword_26763DFB0;
  if (!qword_26763DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DFB0);
  }
  return result;
}

uint64_t sub_20A7BC104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A7BC14C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A7B8BE8(255, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
    sub_20A7BC104(a2, MEMORY[0x263F7AF08]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A7BC210()
{
  unint64_t result = qword_26763DFD8;
  if (!qword_26763DFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DFD8);
  }
  return result;
}

unint64_t sub_20A7BC268()
{
  unint64_t result = qword_26AC677D0;
  if (!qword_26AC677D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC677D0);
  }
  return result;
}

unint64_t sub_20A7BC2C0()
{
  unint64_t result = qword_26AC6B9F8;
  if (!qword_26AC6B9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6B9F8);
  }
  return result;
}

unint64_t sub_20A7BC318()
{
  unint64_t result = qword_26763DFE0;
  if (!qword_26763DFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DFE0);
  }
  return result;
}

unint64_t sub_20A7BC370()
{
  unint64_t result = qword_26763DFE8;
  if (!qword_26763DFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DFE8);
  }
  return result;
}

unint64_t sub_20A7BC3C8()
{
  unint64_t result = qword_26763DFF0;
  if (!qword_26763DFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DFF0);
  }
  return result;
}

unint64_t sub_20A7BC420()
{
  unint64_t result = qword_26763DFF8;
  if (!qword_26763DFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763DFF8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StocksActivityType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StocksActivityType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A7BC5D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksActivityType()
{
  return &type metadata for StocksActivityType;
}

char *initializeBufferWithCopyOfBuffer for StocksActivity(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        BOOL v7 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v7;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        int v8 = a2[4];
        uint64_t v9 = a2[5];
        *((void *)a1 + 4) = v8;
        *((void *)a1 + 5) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1u:
        uint64_t v12 = type metadata accessor for ForYouSectionDescriptor();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v68 = sub_20A8CC310();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          unint64_t v69 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v69;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          uint64_t v14 = sub_20A8C3F00();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
          swift_storeEnumTagMultiPayload();
        }
        sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
        uint64_t v71 = *(int *)(v70 + 48);
        uint64_t v72 = &a1[v71];
        uint64_t v73 = (uint64_t)a2 + v71;
        uint64_t v74 = sub_20A8CA180();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        int v15 = swift_getEnumCaseMultiPayload();
        uint64_t v16 = sub_20A8C3F00();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        if (v15 == 1)
        {
          uint64_t v17 = type metadata accessor for StocksActivity.StockFeed.Series(0);
          *(void *)&a1[*(int *)(v17 + 20)] = *(char **)((char *)a2 + *(int *)(v17 + 20));
          sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          *(void *)&a1[*(int *)(v18 + 48)] = *(char **)((char *)a2 + *(int *)(v18 + 48));
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
          *(void *)&a1[*(int *)(v60 + 48)] = *(char **)((char *)a2 + *(int *)(v60 + 48));
        }
        goto LABEL_30;
      case 3u:
        unint64_t v19 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v19;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(void *)a1 = *a2;
          swift_unknownObjectRetain();
        }
        else
        {
          sub_20A8C4DA0();
          int v61 = swift_getEnumCaseMultiPayload();
          *(void *)a1 = *a2;
          if (v61 == 1)
          {
            swift_retain();
          }
          else
          {
            sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
            uint64_t v79 = *(int *)(v78 + 48);
            unint64_t v93 = &a1[v79];
            uint64_t v80 = (uint64_t)a2 + v79;
            uint64_t v81 = sub_20A8C5390();
            uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16);
            swift_retain();
            v82(v93, v80, v81);
          }
          swift_storeEnumTagMultiPayload();
          sub_20A42FC8C();
          *(void *)&a1[*(int *)(v83 + 48)] = *(char **)((char *)a2 + *(int *)(v83 + 48));
          uint64_t v84 = *(int *)(v83 + 64);
          uint64_t v85 = &a1[v84];
          uint64_t v86 = (uint64_t)a2 + v84;
          uint64_t v87 = *(uint64_t *)((char *)a2 + v84 + 24);
          if (v87)
          {
            uint64_t v88 = *(void *)(v86 + 32);
            *((void *)v85 + 3) = v87;
            *((void *)v85 + 4) = v88;
            (**(void (***)(void))(v87 - 8))();
          }
          else
          {
            long long v89 = *(_OWORD *)(v86 + 16);
            *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
            *((_OWORD *)v85 + 1) = v89;
            *((void *)v85 + 4) = *(void *)(v86 + 32);
          }
        }
LABEL_30:
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        uint64_t v20 = sub_20A8C2530();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        switch(*((unsigned char *)a2 + 40))
        {
          case 1:
            long long v75 = *(_OWORD *)(a2 + 3);
            *(_OWORD *)(a1 + 24) = v75;
            (**(void (***)(char *, char **))(v75 - 8))(a1, a2);
            a1[40] = 1;
            break;
          case 2:
            uint64_t v76 = *a2;
            *(void *)a1 = *a2;
            a1[40] = 2;
            unint64_t v77 = v76;
            break;
          case 3:
            *(void *)a1 = *a2;
            a1[40] = 3;
            goto LABEL_49;
          default:
            *(void *)a1 = *a2;
            a1[40] = 0;
LABEL_49:
            swift_retain();
            break;
        }
        goto LABEL_50;
      case 7u:
        uint64_t v21 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v21;
        uint64_t v22 = (int *)type metadata accessor for CampaignRouteModel();
        uint64_t v23 = v22[5];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = (uint64_t)a2 + v23;
        uint64_t v26 = sub_20A8C56A0();
        uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v24, v25, v26);
        uint64_t v28 = v22[6];
        uint64_t v29 = &a1[v28];
        uint64_t v30 = (char **)((char *)a2 + v28);
        uint64_t v31 = v30[1];
        *(void *)uint64_t v29 = *v30;
        *((void *)v29 + 1) = v31;
        uint64_t v32 = v22[7];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = (char **)((char *)a2 + v32);
        uint64_t v35 = v34[1];
        *(void *)uint64_t v33 = *v34;
        *((void *)v33 + 1) = v35;
        *(void *)&a1[v22[8]] = *(char **)((char *)a2 + v22[8]);
        *(void *)&a1[v22[9]] = *(char **)((char *)a2 + v22[9]);
        uint64_t v36 = v22[10];
        __dst = &a1[v36];
        char v37 = (char *)a2 + v36;
        uint64_t v38 = sub_20A8C7B50();
        uint64_t v90 = *(void *)(v38 - 8);
        unint64_t v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v92(v37, 1, v38))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], MEMORY[0x263F8D8F0]);
          memcpy(__dst, v37, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v90 + 16))(__dst, v37, v38);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(__dst, 0, 1, v38);
        }
        uint64_t v63 = (uint64_t)a2 + v22[11];
        *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *(void *)(v63 + 8);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 8u:
        unint64_t v40 = (unint64_t)*a2;
        sub_20A4855D4(v40);
        *(void *)a1 = v40;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 9u:
        if (*a2)
        {
          unint64_t v41 = a2[1];
          *(void *)a1 = *a2;
          *((void *)a1 + 1) = v41;
          swift_retain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_50;
      case 0xAu:
        uint64_t v42 = sub_20A8C3F00();
        uint64_t v43 = *(void *)(v42 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v43 + 16))(a1, a2, v42);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
        }
        uint64_t v64 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
        uint64_t v65 = &a1[v64];
        uint64_t v66 = (char **)((char *)a2 + v64);
        if (*v66)
        {
          uint64_t v67 = v66[1];
          *(void *)uint64_t v65 = *v66;
          *((void *)v65 + 1) = v67;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        }
LABEL_50:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        uint64_t v45 = sub_20A8C3F00();
        uint64_t v46 = *(void *)(v45 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v46 + 16))(a1, a2, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
        }
        sub_20A4B2908();
        *(void *)&a1[*(int *)(v62 + 48)] = *(char **)((char *)a2 + *(int *)(v62 + 48));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        uint64_t v48 = *a2;
        *(void *)a1 = *a2;
        uint64_t v49 = type metadata accessor for PreBuyFlowRouteModel();
        uint64_t v50 = *(int *)(v49 + 20);
        uint64_t v51 = &a1[v50];
        uint64_t v52 = (uint64_t)a2 + v50;
        uint64_t v53 = sub_20A8C78E0();
        uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
        uint64_t v55 = v48;
        v54(v51, v52, v53);
        uint64_t v56 = *(int *)(v49 + 24);
        uint64_t v57 = &a1[v56];
        uint64_t v58 = (uint64_t)a2 + v56;
        uint64_t v59 = sub_20A8C79F0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for StocksActivity(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 1u:
      type metadata accessor for ForYouSectionDescriptor();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v17 = sub_20A8CC310();
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_45;
        }
        if (EnumCaseMultiPayload) {
          goto LABEL_45;
        }
        uint64_t v17 = sub_20A8C3F00();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a1, v17);
LABEL_45:
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      a1 += *(int *)(v27 + 48);
      uint64_t v15 = sub_20A8CA180();
LABEL_46:
      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      v28(a1, v15);
      return;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      int v2 = swift_getEnumCaseMultiPayload();
      uint64_t v3 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      if (v2 != 1) {
        return;
      }
      type metadata accessor for StocksActivity.StockFeed.Series(0);
LABEL_5:
      swift_bridgeObjectRelease();
      return;
    case 3u:
      goto LABEL_5;
    case 4u:
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_20A8C4DA0();
        int v21 = swift_getEnumCaseMultiPayload();
        swift_release();
        if (v21 != 1)
        {
          sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
          uint64_t v23 = a1 + *(int *)(v22 + 48);
          uint64_t v24 = sub_20A8C5390();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        }
        sub_20A42FC8C();
        uint64_t v26 = a1 + *(int *)(v25 + 64);
        if (*(void *)(v26 + 24))
        {
LABEL_50:
          __swift_destroy_boxed_opaque_existential_1(v26);
        }
      }
      return;
    case 5u:
      uint64_t v15 = sub_20A8C2530();
      goto LABEL_46;
    case 6u:
      switch(*(unsigned char *)(a1 + 40))
      {
        case 0:
        case 3:
          goto LABEL_35;
        case 1:
          uint64_t v26 = a1;
          goto LABEL_50;
        case 2:
          id v29 = *(id *)a1;

          break;
        default:
          return;
      }
      return;
    case 7u:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for CampaignRouteModel();
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_20A8C56A0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(v4 + 40);
      uint64_t v8 = sub_20A8C7B50();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      swift_unknownObjectWeakDestroy();
      return;
    case 8u:
      unint64_t v18 = *(void *)a1;
      sub_20A485620(v18);
      return;
    case 9u:
      if (*(void *)a1) {
        goto LABEL_35;
      }
      return;
    case 0xAu:
      uint64_t v19 = sub_20A8C3F00();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(a1, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v19);
      }
      if (*(void *)(a1 + *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20))) {
        goto LABEL_35;
      }
      return;
    case 0xBu:
      uint64_t v10 = sub_20A8C3F00();
      uint64_t v11 = *(void *)(v10 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v10)) {
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
      }
      sub_20A4B2908();
LABEL_35:
      swift_release();
      return;
    case 0xCu:

      uint64_t v12 = type metadata accessor for PreBuyFlowRouteModel();
      uint64_t v13 = a1 + *(int *)(v12 + 20);
      uint64_t v14 = sub_20A8C78E0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      a1 += *(int *)(v12 + 24);
      uint64_t v15 = sub_20A8C79F0();
      goto LABEL_46;
    default:
      return;
  }
}

uint64_t initializeWithCopy for StocksActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      uint64_t v7 = *(void *)(a2 + 32);
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      *(void *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_52;
    case 1u:
      uint64_t v9 = type metadata accessor for ForYouSectionDescriptor();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v66 = sub_20A8CC310();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        uint64_t v67 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v67;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        uint64_t v11 = sub_20A8C3F00();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
      }
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      uint64_t v69 = *(int *)(v68 + 48);
      uint64_t v70 = a1 + v69;
      uint64_t v71 = a2 + v69;
      uint64_t v72 = sub_20A8CA180();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      goto LABEL_52;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      int v12 = swift_getEnumCaseMultiPayload();
      uint64_t v13 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      if (v12 == 1)
      {
        uint64_t v14 = type metadata accessor for StocksActivity.StockFeed.Series(0);
        *(void *)(a1 + *(int *)(v14 + 20)) = *(void *)(a2 + *(int *)(v14 + 20));
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        *(void *)(a1 + *(int *)(v15 + 48)) = *(void *)(a2 + *(int *)(v15 + 48));
        swift_bridgeObjectRetain();
      }
      else
      {
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
        *(void *)(a1 + *(int *)(v58 + 48)) = *(void *)(a2 + *(int *)(v58 + 48));
      }
      goto LABEL_51;
    case 3u:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      swift_bridgeObjectRetain();
      goto LABEL_52;
    case 4u:
      type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)a1 = *(void *)a2;
        swift_unknownObjectRetain();
      }
      else
      {
        sub_20A8C4DA0();
        int v59 = swift_getEnumCaseMultiPayload();
        *(void *)a1 = *(void *)a2;
        if (v59 == 1)
        {
          swift_retain();
        }
        else
        {
          sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
          uint64_t v77 = *(int *)(v76 + 48);
          uint64_t v91 = a1 + v77;
          uint64_t v78 = a2 + v77;
          uint64_t v79 = sub_20A8C5390();
          uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16);
          swift_retain();
          v80(v91, v78, v79);
        }
        swift_storeEnumTagMultiPayload();
        sub_20A42FC8C();
        *(void *)(a1 + *(int *)(v81 + 48)) = *(void *)(a2 + *(int *)(v81 + 48));
        uint64_t v82 = *(int *)(v81 + 64);
        uint64_t v83 = a1 + v82;
        uint64_t v84 = a2 + v82;
        uint64_t v85 = *(void *)(a2 + v82 + 24);
        if (v85)
        {
          uint64_t v86 = *(void *)(v84 + 32);
          *(void *)(v83 + 24) = v85;
          *(void *)(v83 + 32) = v86;
          (**(void (***)(void))(v85 - 8))();
        }
        else
        {
          long long v87 = *(_OWORD *)(v84 + 16);
          *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
          *(_OWORD *)(v83 + 16) = v87;
          *(void *)(v83 + 32) = *(void *)(v84 + 32);
        }
      }
LABEL_51:
      swift_storeEnumTagMultiPayload();
      goto LABEL_52;
    case 5u:
      uint64_t v17 = sub_20A8C2530();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_52;
    case 6u:
      switch(*(unsigned char *)(a2 + 40))
      {
        case 1:
          long long v73 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 24) = v73;
          (**(void (***)(uint64_t, uint64_t))(v73 - 8))(a1, a2);
          *(unsigned char *)(a1 + 40) = 1;
          break;
        case 2:
          uint64_t v74 = *(void **)a2;
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 40) = 2;
          id v75 = v74;
          break;
        case 3:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 40) = 3;
          goto LABEL_45;
        default:
          *(void *)a1 = *(void *)a2;
          *(unsigned char *)(a1 + 40) = 0;
LABEL_45:
          swift_retain();
          break;
      }
      goto LABEL_52;
    case 7u:
      uint64_t v18 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v18;
      uint64_t v19 = (int *)type metadata accessor for CampaignRouteModel();
      uint64_t v20 = v19[5];
      uint64_t v21 = a1 + v20;
      uint64_t v22 = a2 + v20;
      uint64_t v23 = sub_20A8C56A0();
      uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      uint64_t v25 = v19[6];
      uint64_t v26 = (void *)(a1 + v25);
      uint64_t v27 = (void *)(a2 + v25);
      uint64_t v28 = v27[1];
      void *v26 = *v27;
      v26[1] = v28;
      uint64_t v29 = v19[7];
      uint64_t v30 = (void *)(a1 + v29);
      uint64_t v31 = (void *)(a2 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      *(void *)(a1 + v19[8]) = *(void *)(a2 + v19[8]);
      *(void *)(a1 + v19[9]) = *(void *)(a2 + v19[9]);
      uint64_t v33 = v19[10];
      __dst = (void *)(a1 + v33);
      uint64_t v34 = (const void *)(a2 + v33);
      uint64_t v35 = sub_20A8C7B50();
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v90 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v90(v34, 1, v35))
      {
        sub_20A7B8BE8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], MEMORY[0x263F8D8F0]);
        memcpy(__dst, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v36 + 16))(__dst, v34, v35);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
      }
      uint64_t v61 = a2 + v19[11];
      *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *(void *)(v61 + 8);
      goto LABEL_52;
    case 8u:
      unint64_t v38 = *(void *)a2;
      sub_20A4855D4(v38);
      *(void *)a1 = v38;
      goto LABEL_52;
    case 9u:
      if (*(void *)a2)
      {
        uint64_t v39 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v39;
        swift_retain();
      }
      else
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
      }
      goto LABEL_52;
    case 0xAu:
      uint64_t v40 = sub_20A8C3F00();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
      {
        sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(a1, a2, v40);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(a1, 0, 1, v40);
      }
      uint64_t v62 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
      uint64_t v63 = (void *)(a1 + v62);
      uint64_t v64 = (void *)(a2 + v62);
      if (*v64)
      {
        uint64_t v65 = v64[1];
        void *v63 = *v64;
        v63[1] = v65;
        swift_retain();
      }
      else
      {
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      }
      goto LABEL_52;
    case 0xBu:
      uint64_t v43 = sub_20A8C3F00();
      uint64_t v44 = *(void *)(v43 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(a2, 1, v43))
      {
        sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(a1, a2, v43);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
      }
      sub_20A4B2908();
      *(void *)(a1 + *(int *)(v60 + 48)) = *(void *)(a2 + *(int *)(v60 + 48));
      swift_retain();
      goto LABEL_52;
    case 0xCu:
      uint64_t v46 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      uint64_t v47 = type metadata accessor for PreBuyFlowRouteModel();
      uint64_t v48 = *(int *)(v47 + 20);
      uint64_t v49 = a1 + v48;
      uint64_t v50 = a2 + v48;
      uint64_t v51 = sub_20A8C78E0();
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
      id v53 = v46;
      v52(v49, v50, v51);
      uint64_t v54 = *(int *)(v47 + 24);
      uint64_t v55 = a1 + v54;
      uint64_t v56 = a2 + v54;
      uint64_t v57 = sub_20A8C79F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
LABEL_52:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t assignWithCopy for StocksActivity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A7B91E4(a1, type metadata accessor for StocksActivity);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_53;
      case 1u:
        uint64_t v6 = type metadata accessor for ForYouSectionDescriptor();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v58 = sub_20A8CC310();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v8 = sub_20A8C3F00();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
        uint64_t v60 = *(int *)(v59 + 48);
        uint64_t v61 = a1 + v60;
        uint64_t v62 = a2 + v60;
        uint64_t v63 = sub_20A8CA180();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        goto LABEL_53;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        int v9 = swift_getEnumCaseMultiPayload();
        uint64_t v10 = sub_20A8C3F00();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        if (v9 == 1)
        {
          uint64_t v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
          *(void *)(a1 + *(int *)(v11 + 20)) = *(void *)(a2 + *(int *)(v11 + 20));
          sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          *(void *)(a1 + *(int *)(v12 + 48)) = *(void *)(a2 + *(int *)(v12 + 48));
          swift_bridgeObjectRetain();
        }
        else
        {
          sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
          *(void *)(a1 + *(int *)(v50 + 48)) = *(void *)(a2 + *(int *)(v50 + 48));
        }
        goto LABEL_52;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        goto LABEL_53;
      case 4u:
        type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(void *)a1 = *(void *)a2;
          swift_unknownObjectRetain();
        }
        else
        {
          sub_20A8C4DA0();
          int v51 = swift_getEnumCaseMultiPayload();
          *(void *)a1 = *(void *)a2;
          if (v51 == 1)
          {
            swift_retain();
          }
          else
          {
            sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
            uint64_t v68 = *(int *)(v67 + 48);
            uint64_t v83 = a1 + v68;
            uint64_t v69 = a2 + v68;
            uint64_t v70 = sub_20A8C5390();
            uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
            swift_retain();
            v71(v83, v69, v70);
          }
          swift_storeEnumTagMultiPayload();
          sub_20A42FC8C();
          *(void *)(a1 + *(int *)(v72 + 48)) = *(void *)(a2 + *(int *)(v72 + 48));
          uint64_t v73 = *(int *)(v72 + 64);
          uint64_t v74 = a1 + v73;
          id v75 = (long long *)(a2 + v73);
          uint64_t v76 = *(void *)(a2 + v73 + 24);
          if (v76)
          {
            *(void *)(v74 + 24) = v76;
            *(void *)(v74 + 32) = *((void *)v75 + 4);
            (**(void (***)(void))(v76 - 8))();
          }
          else
          {
            long long v77 = *v75;
            long long v78 = v75[1];
            *(void *)(v74 + 32) = *((void *)v75 + 4);
            *(_OWORD *)uint64_t v74 = v77;
            *(_OWORD *)(v74 + 16) = v78;
          }
        }
LABEL_52:
        swift_storeEnumTagMultiPayload();
        goto LABEL_53;
      case 5u:
        uint64_t v13 = sub_20A8C2530();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_53;
      case 6u:
        switch(*(unsigned char *)(a2 + 40))
        {
          case 1:
            uint64_t v64 = *(void *)(a2 + 24);
            *(void *)(a1 + 24) = v64;
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            (**(void (***)(uint64_t, uint64_t))(v64 - 8))(a1, a2);
            *(unsigned char *)(a1 + 40) = 1;
            break;
          case 2:
            uint64_t v65 = *(void **)a2;
            *(void *)a1 = *(void *)a2;
            *(unsigned char *)(a1 + 40) = 2;
            id v66 = v65;
            break;
          case 3:
            *(void *)a1 = *(void *)a2;
            *(unsigned char *)(a1 + 40) = 3;
            goto LABEL_46;
          default:
            *(void *)a1 = *(void *)a2;
            *(unsigned char *)(a1 + 40) = 0;
LABEL_46:
            swift_retain();
            break;
        }
        goto LABEL_53;
      case 7u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v14 = (int *)type metadata accessor for CampaignRouteModel();
        uint64_t v15 = v14[5];
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        uint64_t v18 = sub_20A8C56A0();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        uint64_t v20 = v14[6];
        uint64_t v21 = (void *)(a1 + v20);
        uint64_t v22 = (void *)(a2 + v20);
        *uint64_t v21 = *v22;
        v21[1] = v22[1];
        uint64_t v23 = v14[7];
        uint64_t v24 = (void *)(a1 + v23);
        uint64_t v25 = (void *)(a2 + v23);
        *uint64_t v24 = *v25;
        v24[1] = v25[1];
        *(void *)(a1 + v14[8]) = *(void *)(a2 + v14[8]);
        *(void *)(a1 + v14[9]) = *(void *)(a2 + v14[9]);
        uint64_t v26 = v14[10];
        __dst = (void *)(a1 + v26);
        uint64_t v27 = (const void *)(a2 + v26);
        uint64_t v28 = sub_20A8C7B50();
        uint64_t v80 = *(void *)(v28 - 8);
        uint64_t v82 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v82(v27, 1, v28))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], MEMORY[0x263F8D8F0]);
          memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v80 + 16))(__dst, v27, v28);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(__dst, 0, 1, v28);
        }
        uint64_t v53 = a2 + v14[11];
        *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *(void *)(v53 + 8);
        goto LABEL_53;
      case 8u:
        unint64_t v30 = *(void *)a2;
        sub_20A4855D4(v30);
        *(void *)a1 = v30;
        goto LABEL_53;
      case 9u:
        if (*(void *)a2)
        {
          uint64_t v31 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v31;
          swift_retain();
        }
        else
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
        }
        goto LABEL_53;
      case 0xAu:
        uint64_t v32 = sub_20A8C3F00();
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(a1, a2, v32);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
        }
        uint64_t v54 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
        uint64_t v55 = (void *)(a1 + v54);
        uint64_t v56 = (void *)(a2 + v54);
        if (*v56)
        {
          uint64_t v57 = v56[1];
          *uint64_t v55 = *v56;
          v55[1] = v57;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        }
        goto LABEL_53;
      case 0xBu:
        uint64_t v35 = sub_20A8C3F00();
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(a1, a2, v35);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        sub_20A4B2908();
        *(void *)(a1 + *(int *)(v52 + 48)) = *(void *)(a2 + *(int *)(v52 + 48));
        swift_retain();
        goto LABEL_53;
      case 0xCu:
        unint64_t v38 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        uint64_t v39 = type metadata accessor for PreBuyFlowRouteModel();
        uint64_t v40 = *(int *)(v39 + 20);
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        uint64_t v43 = sub_20A8C78E0();
        uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16);
        id v45 = v38;
        v44(v41, v42, v43);
        uint64_t v46 = *(int *)(v39 + 24);
        uint64_t v47 = a1 + v46;
        uint64_t v48 = a2 + v46;
        uint64_t v49 = sub_20A8C79F0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
LABEL_53:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for StocksActivity(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for ForYouSectionDescriptor();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v49 = sub_20A8CC310();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 32))(a1, a2, v49);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v8 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
      uint64_t v51 = *(int *)(v50 + 48);
      uint64_t v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      uint64_t v54 = sub_20A8CA180();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      goto LABEL_36;
    case 2u:
      type metadata accessor for StocksActivity.StockFeed(0);
      int v9 = swift_getEnumCaseMultiPayload();
      uint64_t v10 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      if (v9 == 1)
      {
        uint64_t v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
        *(void *)((char *)a1 + *(int *)(v11 + 20)) = *(void *)((char *)a2 + *(int *)(v11 + 20));
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
      }
      else
      {
        sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
      }
      *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
      swift_storeEnumTagMultiPayload();
      goto LABEL_36;
    case 4u:
      uint64_t v13 = type metadata accessor for StocksActivity.Article(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v41 = sub_20A8C4DA0();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
          uint64_t v56 = *(int *)(v55 + 48);
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          uint64_t v59 = sub_20A8C5390();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
          swift_storeEnumTagMultiPayload();
        }
        sub_20A42FC8C();
        *(void *)((char *)a1 + *(int *)(v60 + 48)) = *(void *)((char *)a2 + *(int *)(v60 + 48));
        uint64_t v61 = *(int *)(v60 + 64);
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        *((void *)v62 + 4) = *((void *)v63 + 4);
        long long v64 = *((_OWORD *)v63 + 1);
        *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
        *((_OWORD *)v62 + 1) = v64;
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_36;
    case 5u:
      uint64_t v14 = sub_20A8C2530();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_36;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v15 = (int *)type metadata accessor for CampaignRouteModel();
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_20A8C56A0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
      *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
      *(void *)((char *)a1 + v15[8]) = *(void *)((char *)a2 + v15[8]);
      *(void *)((char *)a1 + v15[9]) = *(void *)((char *)a2 + v15[9]);
      uint64_t v20 = v15[10];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_20A8C7B50();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        sub_20A7B8BE8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], MEMORY[0x263F8D8F0]);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      uint64_t v42 = (char *)a2 + v15[11];
      *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v42 + 1);
      goto LABEL_36;
    case 0xAu:
      uint64_t v26 = sub_20A8C3F00();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(a2, 1, v26))
      {
        sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v27 + 32))(a1, a2, v26);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
      }
      uint64_t v43 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
      uint64_t v44 = (void *)((char *)a1 + v43);
      id v45 = (void *)((char *)a2 + v43);
      uint64_t v46 = *v45;
      if (*v45)
      {
        uint64_t v47 = v45[1];
        *uint64_t v44 = v46;
        v44[1] = v47;
      }
      else
      {
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      }
      goto LABEL_36;
    case 0xBu:
      uint64_t v29 = sub_20A8C3F00();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
      {
        sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
        memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v30 + 32))(a1, a2, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
      }
      sub_20A4B2908();
      *(void *)((char *)a1 + *(int *)(v48 + 48)) = *(void *)((char *)a2 + *(int *)(v48 + 48));
      goto LABEL_36;
    case 0xCu:
      *a1 = *a2;
      uint64_t v32 = type metadata accessor for PreBuyFlowRouteModel();
      uint64_t v33 = *(int *)(v32 + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_20A8C78E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      uint64_t v37 = *(int *)(v32 + 24);
      unint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = sub_20A8C79F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_36:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for StocksActivity(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A7B91E4((uint64_t)a1, type metadata accessor for StocksActivity);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for ForYouSectionDescriptor();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v49 = sub_20A8CC310();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 32))(a1, a2, v49);
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        }
        else
        {
          uint64_t v8 = sub_20A8C3F00();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
          swift_storeEnumTagMultiPayload();
        }
        sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
        uint64_t v51 = *(int *)(v50 + 48);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = sub_20A8CA180();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
        goto LABEL_37;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        int v9 = swift_getEnumCaseMultiPayload();
        uint64_t v10 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        if (v9 == 1)
        {
          uint64_t v11 = type metadata accessor for StocksActivity.StockFeed.Series(0);
          *(void *)((char *)a1 + *(int *)(v11 + 20)) = *(void *)((char *)a2 + *(int *)(v11 + 20));
          sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
        }
        else
        {
          sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
        }
        *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      case 4u:
        uint64_t v13 = type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_20A8C4DA0();
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
            uint64_t v56 = *(int *)(v55 + 48);
            uint64_t v57 = (char *)a1 + v56;
            uint64_t v58 = (char *)a2 + v56;
            uint64_t v59 = sub_20A8C5390();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
            swift_storeEnumTagMultiPayload();
          }
          sub_20A42FC8C();
          *(void *)((char *)a1 + *(int *)(v60 + 48)) = *(void *)((char *)a2 + *(int *)(v60 + 48));
          uint64_t v61 = *(int *)(v60 + 64);
          uint64_t v62 = (char *)a1 + v61;
          uint64_t v63 = (char *)a2 + v61;
          *((void *)v62 + 4) = *((void *)v63 + 4);
          long long v64 = *((_OWORD *)v63 + 1);
          *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
          *((_OWORD *)v62 + 1) = v64;
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_37;
      case 5u:
        uint64_t v14 = sub_20A8C2530();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        goto LABEL_37;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v15 = (int *)type metadata accessor for CampaignRouteModel();
        uint64_t v16 = v15[5];
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_20A8C56A0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
        *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
        *(void *)((char *)a1 + v15[8]) = *(void *)((char *)a2 + v15[8]);
        *(void *)((char *)a1 + v15[9]) = *(void *)((char *)a2 + v15[9]);
        uint64_t v20 = v15[10];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_20A8C7B50();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], MEMORY[0x263F8D8F0]);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
        uint64_t v42 = (char *)a2 + v15[11];
        *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v42 + 1);
        goto LABEL_37;
      case 0xAu:
        uint64_t v26 = sub_20A8C3F00();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48))(a2, 1, v26))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v27 + 32))(a1, a2, v26);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
        }
        uint64_t v43 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
        uint64_t v44 = (void *)((char *)a1 + v43);
        id v45 = (void *)((char *)a2 + v43);
        uint64_t v46 = *v45;
        if (*v45)
        {
          uint64_t v47 = v45[1];
          *uint64_t v44 = v46;
          v44[1] = v47;
        }
        else
        {
          *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        }
        goto LABEL_37;
      case 0xBu:
        uint64_t v29 = sub_20A8C3F00();
        uint64_t v30 = *(void *)(v29 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(a2, 1, v29))
        {
          sub_20A7B8BE8(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v30 + 32))(a1, a2, v29);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(a1, 0, 1, v29);
        }
        sub_20A4B2908();
        *(void *)((char *)a1 + *(int *)(v48 + 48)) = *(void *)((char *)a2 + *(int *)(v48 + 48));
        goto LABEL_37;
      case 0xCu:
        *a1 = *a2;
        uint64_t v32 = type metadata accessor for PreBuyFlowRouteModel();
        uint64_t v33 = *(int *)(v32 + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_20A8C78E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        uint64_t v37 = *(int *)(v32 + 24);
        unint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = sub_20A8C79F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
LABEL_37:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_20A7C0688()
{
  uint64_t v17 = "0";
  type metadata accessor for ForYouSectionDescriptor();
  if (v0 <= 0x3F)
  {
    sub_20A8CA180();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v18 = &v16;
      uint64_t v2 = type metadata accessor for StocksActivity.StockFeed(319);
      if (v3 <= 0x3F)
      {
        uint64_t v19 = *(void *)(v2 - 8) + 64;
        uint64_t v20 = &unk_20A8F0938;
        uint64_t v4 = type metadata accessor for StocksActivity.Article(319);
        if (v5 <= 0x3F)
        {
          uint64_t v21 = *(void *)(v4 - 8) + 64;
          uint64_t v6 = sub_20A8C2530();
          if (v7 <= 0x3F)
          {
            uint64_t v22 = *(void *)(v6 - 8) + 64;
            uint64_t v23 = &unk_20A8F0950;
            uint64_t v8 = type metadata accessor for CampaignRouteModel();
            if (v9 <= 0x3F)
            {
              uint64_t v24 = *(void *)(v8 - 8) + 64;
              uint64_t v25 = &unk_20A8F0968;
              uint64_t v26 = &unk_20A8F0980;
              uint64_t v10 = type metadata accessor for WatchlistCreationRouteModel();
              if (v11 <= 0x3F)
              {
                uint64_t v27 = *(void *)(v10 - 8) + 64;
                sub_20A7B8BE8(319, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
                if (v12 <= 0x3F)
                {
                  swift_getTupleTypeLayout2();
                  uint64_t v28 = &v15;
                  uint64_t v13 = type metadata accessor for PreBuyFlowRouteModel();
                  if (v14 <= 0x3F)
                  {
                    uint64_t v29 = *(void *)(v13 - 8) + 64;
                    swift_initEnumMetadataMultiPayload();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

ValueMetadata *type metadata accessor for StocksActivity.Options()
{
  return &type metadata for StocksActivity.Options;
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.StockFeed(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for StocksActivity.StockFeed.Series(0);
      *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
      sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 48));
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StocksActivity.StockFeed(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_20A8C3F00();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for StocksActivity.StockFeed.Series(0);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
    *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
    sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    *(void *)(a1 + *(int *)(v7 + 48)) = *(void *)(a2 + *(int *)(v7 + 48));
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
    *(void *)(a1 + *(int *)(v8 + 48)) = *(void *)(a2 + *(int *)(v8 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A7B91E4(a1, type metadata accessor for StocksActivity.StockFeed);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
      *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
      sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
      *(void *)(a1 + *(int *)(v7 + 48)) = *(void *)(a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
      *(void *)(a1 + *(int *)(v8 + 48)) = *(void *)(a2 + *(int *)(v8 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
    *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
    sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
  }
  else
  {
    sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
  }
  *(void *)(a1 + *(int *)(v7 + 48)) = *(void *)(a2 + *(int *)(v7 + 48));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for StocksActivity.StockFeed(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A7B91E4(a1, type metadata accessor for StocksActivity.StockFeed);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = type metadata accessor for StocksActivity.StockFeed.Series(0);
      *(void *)(a1 + *(int *)(v6 + 20)) = *(void *)(a2 + *(int *)(v6 + 20));
      sub_20A7B9CA8(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
    }
    else
    {
      sub_20A7B9CA8(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
    }
    *(void *)(a1 + *(int *)(v7 + 48)) = *(void *)(a2 + *(int *)(v7 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A7C1018()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v4;
    uint64_t result = type metadata accessor for StocksActivity.StockFeed.Series(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.StockFeed.Series(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StocksActivity.StockFeed.Series(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7C1474);
}

uint64_t sub_20A7C1474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StocksActivity.StockFeed.Series(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A7C1548);
}

uint64_t sub_20A7C1548(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8C3F00();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20A7C1604()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.Article(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      sub_20A8C4DA0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
        uint64_t v9 = *(int *)(v8 + 48);
        unint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_20A8C5390();
        uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_retain();
        v13(v10, v11, v12);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(uint64_t *)((char *)a1 + *(int *)(v14 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 48));
      uint64_t v15 = *(int *)(v14 + 64);
      char v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = *(uint64_t *)((char *)a2 + v15 + 24);
      if (v18)
      {
        uint64_t v19 = *((void *)v17 + 4);
        *((void *)v16 + 3) = v18;
        *((void *)v16 + 4) = v19;
        (**(void (***)(void))(v18 - 8))();
      }
      else
      {
        long long v20 = *((_OWORD *)v17 + 1);
        *(_OWORD *)char v16 = *(_OWORD *)v17;
        *((_OWORD *)v16 + 1) = v20;
        *((void *)v16 + 4) = *((void *)v17 + 4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StocksActivity.Article(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_20A8C4DA0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_release();
    if (EnumCaseMultiPayload != 1)
    {
      sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
      uint64_t v5 = a1 + *(int *)(v4 + 48);
      uint64_t v6 = sub_20A8C5390();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
    sub_20A42FC8C();
    uint64_t result = a1 + *(int *)(v7 + 64);
    if (*(void *)(result + 24))
    {
      return __swift_destroy_boxed_opaque_existential_1(result);
    }
  }
  return result;
}

void *initializeWithCopy for StocksActivity.Article(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_20A8C4DA0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      swift_retain();
    }
    else
    {
      sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_20A8C5390();
      unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_retain();
      v10(v7, v8, v9);
    }
    swift_storeEnumTagMultiPayload();
    sub_20A42FC8C();
    *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
    uint64_t v12 = *(int *)(v11 + 64);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
    if (v15)
    {
      uint64_t v16 = *((void *)v14 + 4);
      *((void *)v13 + 3) = v15;
      *((void *)v13 + 4) = v16;
      (**(void (***)(void))(v15 - 8))();
    }
    else
    {
      long long v17 = *((_OWORD *)v14 + 1);
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v17;
      *((void *)v13 + 4) = *((void *)v14 + 4);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for StocksActivity.Article(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A7B91E4((uint64_t)a1, type metadata accessor for StocksActivity.Article);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      sub_20A8C4DA0();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_retain();
      }
      else
      {
        sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (char *)a1 + v6;
        uint64_t v8 = (char *)a2 + v6;
        uint64_t v9 = sub_20A8C5390();
        unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
        swift_retain();
        v10(v7, v8, v9);
      }
      swift_storeEnumTagMultiPayload();
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      uint64_t v12 = *(int *)(v11 + 64);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = *(void *)((char *)a2 + v12 + 24);
      if (v15)
      {
        *((void *)v13 + 3) = v15;
        *((void *)v13 + 4) = *((void *)v14 + 4);
        (**(void (***)(void))(v15 - 8))();
      }
      else
      {
        long long v16 = *(_OWORD *)v14;
        long long v17 = *((_OWORD *)v14 + 1);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *(_OWORD *)uint64_t v13 = v16;
        *((_OWORD *)v13 + 1) = v17;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for StocksActivity.Article(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_20A8C4DA0();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (char *)a1 + v8;
      unint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_20A8C5390();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    sub_20A42FC8C();
    *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
    uint64_t v13 = *(int *)(v12 + 64);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *((void *)v14 + 4) = *((void *)v15 + 4);
    long long v16 = *((_OWORD *)v15 + 1);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *((_OWORD *)v14 + 1) = v16;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for StocksActivity.Article(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A7B91E4((uint64_t)a1, type metadata accessor for StocksActivity.Article);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_20A8C4DA0();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = (char *)a1 + v8;
        unint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_20A8C5390();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
      }
      sub_20A42FC8C();
      *(void *)((char *)a1 + *(int *)(v12 + 48)) = *(void *)((char *)a2 + *(int *)(v12 + 48));
      uint64_t v13 = *(int *)(v12 + 64);
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      *((void *)v14 + 4) = *((void *)v15 + 4);
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20A7C20EC()
{
  uint64_t result = sub_20A8C4DA0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = &unk_20A8F0A30;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void destroy for StocksActivity.Alert(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 4) {
    unsigned int v1 = *(_DWORD *)a1 + 4;
  }
  switch(v1)
  {
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 2u:

      break;
    default:
      swift_release();
      break;
  }
}

uint64_t initializeWithCopy for StocksActivity.Alert(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 4) {
    unsigned int v3 = *(_DWORD *)a2 + 4;
  }
  switch(v3)
  {
    case 1u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t))(v6 - 8))(a1);
      *(unsigned char *)(a1 + 40) = 1;
      break;
    case 2u:
      uint64_t v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 2;
      id v5 = v4;
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 3;
      goto LABEL_7;
    default:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 0;
LABEL_7:
      swift_retain();
      break;
  }
  return a1;
}

uint64_t assignWithCopy for StocksActivity.Alert(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 2u:

        break;
      default:
        swift_release();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 1;
        break;
      case 2u:
        uint64_t v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 2;
        id v8 = v7;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 3;
        goto LABEL_15;
      default:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 40) = 0;
LABEL_15:
        swift_retain();
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for StocksActivity.Alert(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      case 2u:

        break;
      default:
        swift_release();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v6 = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        char v6 = 3;
        break;
      default:
        char v6 = 0;
        *(void *)a1 = *(void *)a2;
        break;
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksActivity.Alert(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StocksActivity.Alert(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_20A7C25FC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 4) {
    return (*(_DWORD *)a1 + 4);
  }
  return result;
}

uint64_t sub_20A7C2618(uint64_t result, unsigned int a2)
{
  if (a2 > 3)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StocksActivity.Alert()
{
  return &type metadata for StocksActivity.Alert;
}

unint64_t *initializeBufferWithCopyOfBuffer for StocksActivity.Tip(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_20A4855D4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for StocksActivity.Tip(unint64_t *a1)
{
  return sub_20A485620(*a1);
}

unint64_t *assignWithCopy for StocksActivity.Tip(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_20A4855D4(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_20A485620(v4);
  return a1;
}

unint64_t *assignWithTake for StocksActivity.Tip(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_20A485620(v3);
  return a1;
}

uint64_t sub_20A7C26FC(void *a1)
{
  return *a1 >> 61;
}

void *sub_20A7C2708(void *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_20A7C2718(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for StocksActivity.Tip()
{
  return &type metadata for StocksActivity.Tip;
}

unsigned char *storeEnumTagSinglePayload for StocksActivity.StockFeed.Series.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A7C2808);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksActivity.StockFeed.Series.CodingKeys()
{
  return &type metadata for StocksActivity.StockFeed.Series.CodingKeys;
}

unint64_t sub_20A7C2844()
{
  unint64_t result = qword_26763E008;
  if (!qword_26763E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763E008);
  }
  return result;
}

unint64_t sub_20A7C289C()
{
  unint64_t result = qword_26763E010;
  if (!qword_26763E010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763E010);
  }
  return result;
}

unint64_t sub_20A7C28F4()
{
  unint64_t result = qword_26763E018;
  if (!qword_26763E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763E018);
  }
  return result;
}

void sub_20A7C2948()
{
  if (!qword_26763E028)
  {
    type metadata accessor for ActivityType(255);
    sub_20A7BC104((unint64_t *)&unk_26763E030, type metadata accessor for ActivityType);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763E028);
    }
  }
}

void sub_20A7C29DC()
{
  if (!qword_26AC7FCC8)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F9B0);
    sub_20A7C2A50();
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FCC8);
    }
  }
}

unint64_t sub_20A7C2A50()
{
  unint64_t result = qword_26AC7F9C0;
  if (!qword_26AC7F9C0)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F9B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F9C0);
  }
  return result;
}

void sub_20A7C2AB8()
{
  if (!qword_26763E040)
  {
    sub_20A7B8BE8(255, (unint64_t *)&qword_26763AC58, (uint64_t (*)(uint64_t))type metadata accessor for WelcomeView, MEMORY[0x263F8DD48]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763E040);
    }
  }
}

uint64_t sub_20A7C2B48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x694C736B636F7473 && a2 == 0xEA00000000007473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_20A7C2C48()
{
  if (!qword_26AC7FC90)
  {
    sub_20A8C2A60();
    sub_20A7BC104(&qword_26AC68CF8, MEMORY[0x263F07908]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FC90);
    }
  }
}

void sub_20A7C2CDC()
{
  if (!qword_26AC686D8)
  {
    sub_20A8C8960();
    sub_20A7BC104(&qword_26AC67750, MEMORY[0x263F7D4B0]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC686D8);
    }
  }
}

void sub_20A7C2D70()
{
  if (!qword_26AC7FCB0)
  {
    sub_20A8CD900();
    sub_20A7BC104((unint64_t *)&unk_26AC6B2C8, MEMORY[0x263F59D58]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FCB0);
    }
  }
}

void sub_20A7C2E04()
{
  if (!qword_26763E058)
  {
    sub_20A8C28C0();
    sub_20A7BC104((unint64_t *)&unk_26763E060, MEMORY[0x263F07548]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763E058);
    }
  }
}

uint64_t sub_20A7C2E98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7C2F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_20A7C2F74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_20A7C31A4(0, &qword_26AC7FCB8, (uint64_t (*)(void))sub_20A7C320C, (uint64_t)&type metadata for ForYouFeedGroupKnobs.CodingKeys, MEMORY[0x263F8DBD8]);
    uint64_t v3 = sub_20A8CF390();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v28 = v1;
    uint64_t v29 = a1 + 32;
    uint64_t v27 = v3;
    while (1)
    {
      char v6 = (uint64_t *)(v29 + 32 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      uint64_t v9 = v6[2];
      int v10 = *((unsigned __int8 *)v6 + 24);
      sub_20A8CF880();
      swift_bridgeObjectRetain_n();
      sub_20A8CE360();
      swift_bridgeObjectRelease();
      uint64_t v30 = v4;
      sub_20A8CF8A0();
      if (v10 != 1) {
        sub_20A8CF890();
      }
      uint64_t result = sub_20A8CF8C0();
      uint64_t v12 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v13 = result & v12;
      unint64_t v14 = (result & (unint64_t)v12) >> 6;
      uint64_t v15 = *(void *)(v5 + 8 * v14);
      uint64_t v16 = 1 << (result & v12);
      uint64_t v17 = *(void *)(v3 + 48);
      if ((v16 & v15) != 0)
      {
        do
        {
          uint64_t v18 = v17 + 32 * v13;
          uint64_t result = *(void *)v18;
          uint64_t v19 = *(void *)(v18 + 16);
          char v20 = *(unsigned char *)(v18 + 24);
          BOOL v21 = *(void *)v18 == v8 && *(void *)(v18 + 8) == v7;
          if (v21 || (uint64_t result = sub_20A8CF760(), (result & 1) != 0))
          {
            if (v20)
            {
              if (v10) {
                goto LABEL_3;
              }
            }
            else
            {
              if (v19 == v9) {
                char v22 = v10;
              }
              else {
                char v22 = 1;
              }
              if ((v22 & 1) == 0)
              {
LABEL_3:
                swift_bridgeObjectRelease();
                uint64_t v3 = v27;
                uint64_t v1 = v28;
                goto LABEL_4;
              }
            }
          }
          unint64_t v13 = (v13 + 1) & v12;
          unint64_t v14 = v13 >> 6;
          uint64_t v15 = *(void *)(v5 + 8 * (v13 >> 6));
          uint64_t v16 = 1 << v13;
        }
        while ((v15 & (1 << v13)) != 0);
        uint64_t v3 = v27;
        uint64_t v1 = v28;
        uint64_t v17 = *(void *)(v27 + 48);
      }
      *(void *)(v5 + 8 * v14) = v16 | v15;
      uint64_t v23 = v17 + 32 * v13;
      *(void *)uint64_t v23 = v8;
      *(void *)(v23 + 8) = v7;
      *(void *)(v23 + 16) = v9;
      *(unsigned char *)(v23 + 24) = v10;
      uint64_t v24 = *(void *)(v3 + 16);
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        break;
      }
      *(void *)(v3 + 16) = v26;
LABEL_4:
      uint64_t v4 = v30 + 1;
      if (v30 + 1 == v1) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

void sub_20A7C31A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_20A7C320C()
{
  unint64_t result = qword_26AC717A0;
  if (!qword_26AC717A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC717A0);
  }
  return result;
}

void sub_20A7C3260()
{
  if (!qword_26AC7FCA8)
  {
    sub_20A8CA080();
    sub_20A7BC104(&qword_26AC6A530, MEMORY[0x263F7DAC8]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FCA8);
    }
  }
}

void sub_20A7C32F4()
{
  if (!qword_26AC7FCA0)
  {
    sub_20A8C9880();
    sub_20A7BC104(&qword_26AC6A2E8, MEMORY[0x263F7D880]);
    unint64_t v0 = sub_20A8CF3A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FCA0);
    }
  }
}

uint64_t sub_20A7C338C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A7C3418()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A7C3490()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A7C3518@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A7C3578(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x676E696863746177;
  if (*v1) {
    uint64_t v2 = 0x6863746157746F6ELL;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000676E69;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A7C35C0(char *a1, char *a2)
{
  return sub_20A44F220(*a1, *a2);
}

uint64_t sub_20A7C35CC@<X0>(BOOL *a1@<X8>)
{
  *a1 = (*v1 & 1) == 0;
  uint64_t v3 = *MEMORY[0x263F7D280];
  uint64_t v4 = sub_20A8C8230();
  uint64_t v5 = *(uint64_t (**)(BOOL *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104);

  return v5(a1, v3, v4);
}

BOOL sub_20A7C3654(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *((void *)a1 + 1);
  if (a1[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  int v4 = v3 | *a1;
  if (a2[1]) {
    int v5 = 256;
  }
  else {
    int v5 = 0;
  }
  return sub_20A7C6394(v4, v2, v5 | *a2, *((void *)a2 + 1));
}

uint64_t sub_20A7C3690()
{
  sub_20A7C6128(0, &qword_26AC6AB28, MEMORY[0x263F7AF08], MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v6 - v3;
  sub_20A7C618C(0, &qword_26AC69D38, MEMORY[0x263F7AF08], (void (*)(void))sub_20A4AE348);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9EA30 = result;
  return result;
}

uint64_t sub_20A7C37F0()
{
  sub_20A7C6128(0, &qword_26AC6AB08, type metadata accessor for WatchlistMembershipCommandContext, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v6 - v3;
  sub_20A7C618C(0, &qword_26AC69D28, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandContext, (void (*)(void))sub_20A45A0AC);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9EA08 = result;
  return result;
}

uint64_t sub_20A7C3950(uint64_t a1)
{
  return sub_20A7C3974(a1, 0xD000000000000019, 0x800000020A90F3B0, &qword_26AC9EA38);
}

uint64_t sub_20A7C3974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  sub_20A7C81EC(0, (unint64_t *)&qword_26AC6AB40, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F7E060]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v12 - v9;
  sub_20A7C81EC(0, (unint64_t *)&unk_26AC6AB78, v5, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7E058], v7);
  uint64_t result = sub_20A8CB5C0();
  *a4 = result;
  return result;
}

uint64_t sub_20A7C3AC0()
{
  sub_20A7C6128(0, &qword_26AC6AB00, type metadata accessor for CreateWatchlistCommandContext, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v6 - v3;
  sub_20A7C6128(0, &qword_26AC6AB48, type metadata accessor for CreateWatchlistCommandContext, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E8E0 = result;
  return result;
}

uint64_t sub_20A7C3C0C()
{
  sub_20A7C6128(0, (unint64_t *)&unk_26AC6AB30, MEMORY[0x263F7AFD8], MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v6 - v3;
  sub_20A7C620C(0, &qword_26AC69D40, MEMORY[0x263F7AFD8]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E8D8 = result;
  return result;
}

uint64_t sub_20A7C3D50(uint64_t a1)
{
  return sub_20A7C3974(a1, 0xD000000000000026, 0x800000020A90F230, &qword_26AC9EA40);
}

uint64_t sub_20A7C3D74(uint64_t a1)
{
  return sub_20A7C3974(a1, 0xD00000000000002ALL, 0x800000020A90F260, &qword_26AC9EA10);
}

uint64_t sub_20A7C3D98(uint64_t a1)
{
  return sub_20A7C3974(a1, 0xD000000000000017, 0x800000020A90F390, &qword_26AC9EA20);
}

uint64_t sub_20A7C3DBC()
{
  sub_20A7C6128(0, &qword_26AC6AAF8, type metadata accessor for SortWatchlistCommandContext, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v6 - v3;
  sub_20A7C620C(0, &qword_26AC69D20, (void (*)(uint64_t))type metadata accessor for SortWatchlistCommandContext);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9EA28 = result;
  return result;
}

uint64_t sub_20A7C3F00()
{
  sub_20A7C6128(0, &qword_26AC6AB20, type metadata accessor for ChangeWatchlistDisplayContext, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  int v4 = (char *)&v6 - v3;
  sub_20A7C620C(0, &qword_26AC69D30, (void (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayContext);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9EA18 = result;
  return result;
}

uint64_t sub_20A7C4044@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A7C7EA4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20A7C4078@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = 0;
  if (*(unsigned char *)(result + 1) == 1)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)result & 1) == 0)
    {
      uint64_t v5 = *(void *)(result + 8);
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_20A8C2370();

      sub_20A7C6128(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
      uint64_t v8 = swift_allocObject();
      uint64_t v9 = MEMORY[0x263F8D6C8];
      *(_OWORD *)(v8 + 16) = xmmword_20A8D3DC0;
      uint64_t v10 = MEMORY[0x263F8D750];
      *(void *)(v8 + 56) = v9;
      *(void *)(v8 + 64) = v10;
      *(void *)(v8 + 32) = v5;
      uint64_t v3 = sub_20A8CE250();
      uint64_t v4 = v11;
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *a2 = v3;
  a2[1] = v4;
  return result;
}

void sub_20A7C4204(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(self, sel_systemImageNamed_, v2);

  if (v3) {
    *a1 = v3;
  }
  else {
    __break(1u);
  }
}

uint64_t sub_20A7C42D8@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  char v4 = a1[1];
  uint64_t v5 = sub_20A8C8F40();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  id v7 = (unsigned int *)MEMORY[0x263F7D600];
  if ((v4 & 1) == 0 && !*a1) {
    id v7 = (unsigned int *)MEMORY[0x263F7D5F0];
  }
  uint64_t v8 = *v7;

  return v6(a2, v8, v5);
}

uint64_t static UIActivityType.watchStock.getter()
{
  return sub_20A8CE240();
}

uint64_t *sub_20A7C438C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C40E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_20A7C4494(uint64_t a1, uint64_t a2)
{
  return sub_20A7C4BCC(a1, a2, MEMORY[0x263F7AB98]);
}

uint64_t sub_20A7C44AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A7C4564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A7C461C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A7C46D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A7C478C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7C47A0);
}

uint64_t sub_20A7C47A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_20A8C3410();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A7C4898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A7C48AC);
}

uint64_t sub_20A7C48AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20A8C40E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_20A8C3410();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for ChangeWatchlistDisplayContext(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC78E08);
}

uint64_t sub_20A7C49D0()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C3410();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_20A7C4A98(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C40E0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C34C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_20A7C4BB4(uint64_t a1, uint64_t a2)
{
  return sub_20A7C4BCC(a1, a2, MEMORY[0x263F7AC08]);
}

uint64_t sub_20A7C4BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = a3(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_20A7C4C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C34C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_20A7C4D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C34C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_20A7C4E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C34C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_20A7C4EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C34C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_20A7C4FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7C4FC8);
}

uint64_t sub_20A7C4FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_20A8C34C0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_20A7C50EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A7C5100);
}

uint64_t sub_20A7C5100(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20A8C40E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_20A8C34C0();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for SortWatchlistCommandContext(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC77870);
}

uint64_t sub_20A7C5230()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C34C0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for WatchlistState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A7C53CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistState()
{
  return &type metadata for WatchlistState;
}

uint64_t *sub_20A7C5404(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C40E0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3F00();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_20A7C55D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_20A7C56D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_20A7C584C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_20A7C5A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_20A7C5BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_20A7C5D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A7C5D9C);
}

uint64_t sub_20A7C5D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A7C5EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A7C5ED8);
}

uint64_t sub_20A7C5ED8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_20A8C40E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for WatchlistMembershipCommandContext(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC7C470);
}

void sub_20A7C602C()
{
  sub_20A8C40E0();
  if (v0 <= 0x3F)
  {
    sub_20A7C6128(319, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_20A7C6128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A7C618C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_20A8C82B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A7C620C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8C82B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for CreateWatchlistCommandContext(uint64_t a1)
{
  return sub_20A4D9778(a1, qword_26AC78E98);
}

void sub_20A7C6290()
{
  unint64_t v0 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_systemImageNamed_, v0);

  if (v1)
  {
    sub_20A8C9380();
  }
  else
  {
    __break(1u);
  }
}

BOOL sub_20A7C6394(int a1, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v8 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v9 = 0x6863746157746F6ELL;
  }
  else {
    uint64_t v9 = 0x676E696863746177;
  }
  if (v8) {
    unint64_t v10 = 0xE800000000000000;
  }
  else {
    unint64_t v10 = 0xEB00000000676E69;
  }
  BOOL v11 = (a3 & 1) == 0;
  if (a3) {
    uint64_t v12 = 0x6863746157746F6ELL;
  }
  else {
    uint64_t v12 = 0x676E696863746177;
  }
  if (v11) {
    unint64_t v13 = 0xE800000000000000;
  }
  else {
    unint64_t v13 = 0xEB00000000676E69;
  }
  if (v9 == v12 && v10 == v13)
  {
    swift_bridgeObjectRelease_n();
    if (((a1 ^ a3) & 0x100) != 0) {
      return 0;
    }
    return a2 == a4;
  }
  char v15 = sub_20A8CF760();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if ((a1 ^ a3) & 0x100) == 0 && (v15) {
    return a2 == a4;
  }
  return result;
}

uint64_t sub_20A7C6488(uint64_t a1)
{
  sub_20A574D54();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v29 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C6128(0, (unint64_t *)&qword_26763BEA0, (uint64_t (*)(uint64_t))sub_20A574E0C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v27 - v5;
  sub_20A7C6E28(0, &qword_26763E088, (void (*)(uint64_t))type metadata accessor for SortWatchlistCommandContext);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = type metadata accessor for SortWatchlistCommandContext(0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C3480();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(v8 + 24);
  if (*(unsigned char *)(a1 + v15) == 1)
  {
    sub_20A8C3490();
    uint64_t v16 = sub_20A8C3450();
    uint64_t v27 = v17;
    uint64_t v28 = v16;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    uint64_t v18 = sub_20A8C3430();
    uint64_t v27 = v19;
    uint64_t v28 = v18;
  }
  if (*(unsigned char *)(a1 + v15) == 1)
  {
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    if (qword_26AC6AC20 != -1) {
      swift_once();
    }
    sub_20A8CB5A0();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    sub_20A8C4050();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    uint64_t v30 = sub_20A8C34B0();
    uint64_t v31 = v20;
    char v32 = v21 & 1;
    sub_20A7C6EA4();
    sub_20A8CF4E0();
    sub_20A8CE3D0();
    sub_20A8C3490();
    uint64_t v22 = sub_20A8C3470();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v30 = v22;
    sub_20A8CF720();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = 0;
    unint64_t v34 = 0xE000000000000000;
    if (qword_26AC6AC20 != -1) {
      swift_once();
    }
    sub_20A8CB5A0();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    sub_20A8C4050();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8CE3D0();
    uint64_t v30 = sub_20A8C34B0();
    uint64_t v31 = v23;
    char v32 = v24 & 1;
    sub_20A7C6EA4();
    sub_20A8CF4E0();
  }
  if (qword_26AC6AC20 != -1) {
    swift_once();
  }
  sub_20A7C7D78(a1, (uint64_t)v10, type metadata accessor for SortWatchlistCommandContext);
  uint64_t v30 = v28;
  uint64_t v31 = v27;
  swift_retain();
  sub_20A8CA050();
  sub_20A574E0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
  sub_20A8C9290();
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C8650();
}

uint64_t sub_20A7C6A34(uint64_t a1, uint64_t a2)
{
  sub_20A574D54();
  MEMORY[0x270FA5388](v4 - 8);
  v24[1] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C6128(0, (unint64_t *)&qword_26763BEA0, (uint64_t (*)(uint64_t))sub_20A574E0C, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v24 - v7;
  sub_20A7C6E28(0, &qword_26763E080, (void (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayContext);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = type metadata accessor for ChangeWatchlistDisplayContext(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v24 - v14;
  uint64_t v16 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a1, v16);
  uint64_t v17 = &v15[*(int *)(v10 + 20)];
  uint64_t v18 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a2, v18);
  if (qword_26AC6AC08 != -1) {
    swift_once();
  }
  sub_20A7C7D78((uint64_t)v15, (uint64_t)v12, type metadata accessor for ChangeWatchlistDisplayContext);
  swift_retain();
  uint64_t v25 = sub_20A8CB5A0();
  uint64_t v26 = v19;
  sub_20A8CE3D0();
  sub_20A8C4050();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  sub_20A8C33F0();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_20A8C33F0();
  uint64_t v26 = v20;
  sub_20A8CA050();
  sub_20A574E0C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
  sub_20A8C9290();
  sub_20A8C8720();
  swift_allocObject();
  uint64_t v22 = sub_20A8C8650();
  sub_20A7C7DE0((uint64_t)v15, type metadata accessor for ChangeWatchlistDisplayContext);
  return v22;
}

void sub_20A7C6E28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CA060();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A7C6EA4()
{
  if (!qword_26763E090)
  {
    sub_20A7C81EC(255, &qword_26763E098, MEMORY[0x263F8D6C8], MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763E090);
    }
  }
}

uint64_t sub_20A7C6F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C8F40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t WatchlistCommandContext = type metadata accessor for CreateWatchlistCommandContext(0);
  MEMORY[0x270FA5388](WatchlistCommandContext - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for WatchlistCreationRouteModel();
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44D308(a1, (uint64_t)v16);
  uint64_t v17 = (uint64_t *)&v16[*(int *)(v14 + 28)];
  *uint64_t v17 = a2;
  v17[1] = a3;
  sub_20A480ED4(a2);
  if (qword_26AC67788 != -1) {
    swift_once();
  }
  sub_20A7C7D78((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for WatchlistCreationRouteModel);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v19 = self;
  swift_retain();
  id v20 = objc_msgSend(v19, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v21 = (void *)sub_20A8CE240();
  id v22 = objc_msgSend(self, sel_systemImageNamed_, v21);

  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D600], v6);
  sub_20A8C8720();
  swift_allocObject();
  uint64_t v23 = sub_20A8C86B0();
  sub_20A7C7DE0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for WatchlistCreationRouteModel);
  return v23;
}

uint64_t sub_20A7C726C()
{
  uint64_t v0 = sub_20A8C8F40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AC50 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v7 = (void *)sub_20A8CE240();
  id v8 = objc_msgSend(self, sel_systemImageNamed_, v7);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D600], v0);
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C86A0();
}

uint64_t sub_20A7C74A4(uint64_t a1)
{
  sub_20A7C80CC(0, &qword_26763E0A0, MEMORY[0x263F7D768]);
  MEMORY[0x270FA5388](v2 - 8);
  sub_20A7C7E40();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain();
  sub_20A8CE240();
  __int16 v9 = 1;
  uint64_t v10 = 0;
  sub_20A4AE348();
  sub_20A8C8E20();
  __int16 v9 = 1;
  uint64_t v10 = 0;
  sub_20A8C9390();
  sub_20A8C8E20();
  sub_20A8C87D0();
  swift_allocObject();
  return sub_20A8C87B0();
}

uint64_t sub_20A7C7740(uint64_t a1)
{
  sub_20A7C7FFC();
  MEMORY[0x270FA5388](v2 - 8);
  void v18[3] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C8058();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A7C813C();
  MEMORY[0x270FA5388](v7 - 8);
  sub_20A7C8238();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  swift_retain();
  uint64_t v13 = sub_20A8CB5A0();
  v18[1] = v14;
  _OWORD v18[2] = v13;
  __int16 v19 = 1;
  uint64_t v20 = 0;
  sub_20A4AE348();
  uint64_t v15 = MEMORY[0x263F8D310];
  sub_20A8CA040();
  __int16 v19 = 1;
  uint64_t v20 = 0;
  sub_20A7C81EC(0, (unint64_t *)&qword_26AC686A0, v15, MEMORY[0x263F8D8F0]);
  sub_20A8CA040();
  __int16 v19 = 1;
  uint64_t v20 = 0;
  sub_20A45A06C();
  sub_20A8C8E20();
  sub_20A7C80CC(0, &qword_26AC6A0A8, (void (*)(uint64_t))sub_20A45A06C);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 0, 1, v16);
  __int16 v19 = 1;
  uint64_t v20 = 0;
  sub_20A8C9280();
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C8660();
}

uint64_t sub_20A7C7B44()
{
  uint64_t v0 = sub_20A8C8F40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AC18 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v5 = self;
  swift_retain();
  id v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v7 = (void *)sub_20A8CE240();
  id v8 = objc_msgSend(self, sel_systemImageNamed_, v7);

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D600], v0);
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C86A0();
}

uint64_t sub_20A7C7D78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A7C7DE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A7C7E40()
{
  if (!qword_26763E0A8)
  {
    sub_20A4AE348();
    unint64_t v0 = sub_20A8C8E40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763E0A8);
    }
  }
}

uint64_t sub_20A7C7EA4()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

void sub_20A7C7FFC()
{
  if (!qword_26AC6A1D8)
  {
    sub_20A4AE348();
    unint64_t v0 = sub_20A8C92B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A1D8);
    }
  }
}

void sub_20A7C8058()
{
  if (!qword_26AC6A0B0)
  {
    sub_20A7C80CC(255, &qword_26AC6A0A8, (void (*)(uint64_t))sub_20A45A06C);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A0B0);
    }
  }
}

void sub_20A7C80CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_20A4AE348();
    unint64_t v4 = sub_20A8C8E40();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A7C813C()
{
  if (!qword_26AC6A520)
  {
    sub_20A8C3F00();
    sub_20A7C81EC(255, (unint64_t *)&qword_26AC686A0, MEMORY[0x263F8D310], MEMORY[0x263F8D8F0]);
    sub_20A4AE348();
    unint64_t v0 = sub_20A8CA060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A520);
    }
  }
}

void sub_20A7C81EC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A7C8238()
{
  if (!qword_26AC6A518)
  {
    sub_20A8C3F00();
    sub_20A4AE348();
    unint64_t v0 = sub_20A8CA060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A518);
    }
  }
}

uint64_t getEnumTagSinglePayload for WatchlistCommandState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for WatchlistCommandState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)BOOL result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)BOOL result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCommandState()
{
  return &type metadata for WatchlistCommandState;
}

uint64_t *sub_20A7C834C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for WatchlistCreationRouteModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = sub_20A8C3F00();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(v6 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    if (*v13)
    {
      uint64_t v14 = v13[1];
      *uint64_t v12 = *v13;
      v12[1] = v14;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    }
  }
  return a1;
}

uint64_t sub_20A7C8518(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  uint64_t result = type metadata accessor for WatchlistCreationRouteModel();
  if (*(void *)(a1 + *(int *)(result + 20)))
  {
    return swift_release();
  }
  return result;
}

char *sub_20A7C8604(char *a1, char *a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v7 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  if (*(void *)v9)
  {
    uint64_t v10 = *((void *)v9 + 1);
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  return a1;
}

char *sub_20A7C8774(char *a1, char *a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, v4);
LABEL_6:
    sub_20A7C6128(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 24))(a1, a2, v4);
LABEL_7:
  uint64_t v10 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = *(void *)&a1[v10];
  uint64_t v14 = *(void *)v12;
  if (!v13)
  {
    if (v14)
    {
      uint64_t v16 = *((void *)v12 + 1);
      *(void *)uint64_t v11 = v14;
      *((void *)v11 + 1) = v16;
      swift_retain();
      return a1;
    }
LABEL_13:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    return a1;
  }
  if (!v14)
  {
    swift_release();
    goto LABEL_13;
  }
  uint64_t v15 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = v14;
  *((void *)v11 + 1) = v15;
  swift_retain();
  swift_release();
  return a1;
}