void *sub_20A4D0CD4(void *result)
{
  void *v1;

  *v1 |= *result;
  return result;
}

void *sub_20A4D0CE8(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_20A4D0CFC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_20A4D0D10@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_20A4D0D24(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_20A4D0D38(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_20A4D0D4C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_20A4D0D60()
{
  return *v0 == 0;
}

uint64_t sub_20A4D0D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_20A4D0D88(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_20A4D0D9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_20A4D4288(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t StocksAudioTrack.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t StocksAudioTrack.audioTrackKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StocksAudioTrack();
  return sub_20A4D3F18(v1 + *(int *)(v3 + 48), a1, MEMORY[0x263F58A68]);
}

void sub_20A4D0E30(void *a1, __int16 a2, void *a3, void *a4)
{
  uint64_t v8 = sub_20A8C5560();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_20A8C5450();
  uint64_t v19 = *(void *)(v9 - 8);
  double v10 = MEMORY[0x270FA5388](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_asset, v10);
  id v20 = objc_msgSend(v13, sel_asset);

  if ((a2 & 0x100) != 0 && a3 && a4)
  {
    id v14 = a3;
    id v15 = objc_msgSend(a4, sel_asset);
    if (v15)
    {
      v16 = v15;
      objc_msgSend(a1, sel_duration);
      objc_msgSend(a1, sel_embeddedUpsellStartTime);
      objc_msgSend(a1, sel_embeddedUpsellEndTime);
      id v17 = v16;
      objc_msgSend(v14, sel_duration);
      objc_msgSend(v14, sel_playPosition);
      sub_20A8CED10();
      sub_20A8C5440();
      sub_20A8C4CC0();

      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v9);
      return;
    }
  }
  sub_20A8C4CB0();
  id v18 = v20;
}

uint64_t sub_20A4D10CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4D3F18(v2 + *(int *)(a1 + 48), a2, MEMORY[0x263F58A68]);
}

id sub_20A4D1104(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + *(int *)(a1 + 24)), sel_duration);
}

uint64_t StocksAudioTrack.identifier.getter()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_20A8CE280();

  return v2;
}

uint64_t StocksAudioTrack.hash(into:)()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  sub_20A8CE280();

  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t StocksAudioTrack.hashValue.getter()
{
  sub_20A8CF880();
  id v1 = objc_msgSend(*v0, sel_identifier);
  sub_20A8CE280();

  sub_20A8CE360();
  swift_bridgeObjectRelease();
  return sub_20A8CF8C0();
}

uint64_t sub_20A4D1274()
{
  sub_20A8CF880();
  id v1 = objc_msgSend(*v0, sel_identifier);
  sub_20A8CE280();

  sub_20A8CE360();
  swift_bridgeObjectRelease();
  return sub_20A8CF8C0();
}

uint64_t sub_20A4D12F8()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  sub_20A8CE280();

  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A4D1370()
{
  sub_20A8CF880();
  id v1 = objc_msgSend(*v0, sel_identifier);
  sub_20A8CE280();

  sub_20A8CE360();
  swift_bridgeObjectRelease();
  return sub_20A8CF8C0();
}

uint64_t StocksAudioTrack.effectiveTitle.getter()
{
  if ((*((unsigned char *)v0 + *(int *)(type metadata accessor for StocksAudioTrack() + 32)) & 0x80) != 0)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    unint64_t v6 = 0xE000000000000000;
    sub_20A8C2370();

    sub_20A4D3B54(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_20A8D3DC0;
    id v8 = objc_msgSend(*v0, sel_title, 0x800000020A8FD000);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_20A8CE280();
      unint64_t v6 = v11;
    }
    else
    {
      uint64_t v10 = 0;
    }
    *(void *)(v7 + 56) = MEMORY[0x263F8D310];
    *(void *)(v7 + 64) = sub_20A43F830();
    *(void *)(v7 + 32) = v10;
    *(void *)(v7 + 40) = v6;
    uint64_t v3 = sub_20A8CE2B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v1 = objc_msgSend(*v0, sel_title);
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t v3 = sub_20A8CE280();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t StocksAudioTrack.rawTitle.getter()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

uint64_t StocksAudioTrack.publisherName.getter()
{
  id v1 = objc_msgSend(*v0, sel_sourceName);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

double StocksAudioTrack.artworkOverride.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id StocksAudioTrack.artworkFocalFrame.getter()
{
  return objc_msgSend(*v0, sel_thumbnailFocalFrame);
}

uint64_t StocksAudioTrack.artworkGradient.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C8F80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_20A4D173C()
{
  id v1 = objc_msgSend(*v0, sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

uint64_t sub_20A4D17A4()
{
  id v1 = objc_msgSend(*v0, sel_sourceName);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_20A8CE280();

  return v3;
}

double sub_20A4D180C@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

id sub_20A4D181C()
{
  return objc_msgSend(*v0, sel_thumbnailFocalFrame);
}

uint64_t sub_20A4D182C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C8F80();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_20A4D1898()
{
  id v1 = objc_msgSend(*v0, sel_identifier);
  uint64_t v2 = sub_20A8CE280();

  return v2;
}

uint64_t StocksAudioTrack.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  sub_20A4D3B54(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  v4 = *v1;
  id v5 = objc_msgSend(v4, sel_identifier);
  uint64_t v6 = sub_20A8CE280();
  uint64_t v8 = v7;

  uint64_t v9 = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 0x656C746974;
  *(void *)(inited + 88) = 0xE500000000000000;
  id v10 = objc_msgSend(v4, sel_title);
  if (v10)
  {
    unint64_t v11 = v10;
    uint64_t v12 = sub_20A8CE280();
    unint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  *(void *)(inited + 120) = v9;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v14;
  sub_20A4CFBE4(inited);
  sub_20A4D3B54(0, &qword_26763B5D8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x263F7CE78]);
  a1[3] = v15;
  a1[4] = sub_20A4D2828();
  __swift_allocate_boxed_opaque_existential_1(a1);
  type metadata accessor for StocksAudioTrack();
  return sub_20A8C5EF0();
}

uint64_t sub_20A4D1AB4()
{
  sub_20A4D28F8(&qword_26763B678, (void (*)(uint64_t))type metadata accessor for StocksAudioTrack);

  return sub_20A8C5EE0();
}

unint64_t sub_20A4D1B24(uint64_t a1, uint64_t a2)
{
  sub_20A8CF880();
  sub_20A8CE360();
  uint64_t v4 = sub_20A8CF8C0();

  return sub_20A4D1EF0(a1, a2, v4);
}

unint64_t sub_20A4D1B9C(uint64_t a1)
{
  sub_20A8C2AF0();
  sub_20A4D28F8(&qword_26AC68D20, MEMORY[0x263F079C8]);
  uint64_t v2 = sub_20A8CE1B0();

  return sub_20A4D1FD4(a1, v2);
}

unint64_t sub_20A4D1C34(unsigned __int8 a1)
{
  sub_20A8CF880();
  sub_20A8CF890();
  uint64_t v2 = sub_20A8CF8C0();

  return sub_20A4D2194(a1, v2);
}

unint64_t sub_20A4D1CA0(uint64_t a1)
{
  sub_20A8CE280();
  sub_20A8CF880();
  sub_20A8CE360();
  uint64_t v2 = sub_20A8CF8C0();
  swift_bridgeObjectRelease();
  return sub_20A4D2410(a1, v2);
}

unint64_t sub_20A4D1D30(uint64_t a1)
{
  uint64_t v2 = sub_20A8CF340();

  return sub_20A4D2234(a1, v2);
}

unint64_t sub_20A4D1D74(uint64_t a1)
{
  uint64_t v2 = sub_20A8CEF20();
  return sub_20A4D22FC(a1, v2, &qword_26AC7F948);
}

unint64_t sub_20A4D1DC4(uint64_t a1)
{
  uint64_t v2 = sub_20A8CEF20();
  return sub_20A4D22FC(a1, v2, (unint64_t *)&qword_26AC686D0);
}

unint64_t sub_20A4D1E14(char a1)
{
  char v1 = a1 & 1;
  sub_20A8CF880();
  sub_20A8CF890();
  uint64_t v2 = sub_20A8CF8C0();

  return sub_20A4D2588(v1, v2);
}

unint64_t sub_20A4D1E84(int a1)
{
  sub_20A8CF880();
  sub_20A8CF8A0();
  uint64_t v2 = sub_20A8CF8C0();

  return sub_20A4D2644(a1, v2);
}

unint64_t sub_20A4D1EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    id v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20A8CF760() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20A8CF760() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_20A4D1FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = sub_20A8C2AF0();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_20A4D28F8(&qword_26AC68D28, MEMORY[0x263F079C8]);
      char v16 = sub_20A8CE210();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_20A4D2194(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_20A4D2234(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_20A4D4378(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x210527670](v9, a1);
      sub_20A4D43D4((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_20A4D22FC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_20A42CFF0(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_20A8CEF30();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_20A8CEF30();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_20A4D2410(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_20A8CE280();
    uint64_t v8 = v7;
    if (v6 == sub_20A8CE280() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_20A8CE280();
          uint64_t v15 = v14;
          if (v13 == sub_20A8CE280() && v15 == v16) {
            break;
          }
          char v18 = sub_20A8CF760();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_20A4D2588(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if ((((a1 & 1) == 0) ^ *(unsigned char *)(v7 + result))) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_20A4D2644(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned char *)(v7 + result) != (a1 & 1))
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (((*(unsigned __int8 *)(v7 + result) ^ a1) & 1) == 0) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t _s8StocksUI0A10AudioTrackV2eeoiySbAC_ACtFZ_0(id *a1, id *a2)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  uint64_t v4 = sub_20A8CE280();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(*a2, sel_identifier);
  uint64_t v8 = sub_20A8CE280();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

void sub_20A4D27BC()
{
  if (!qword_26AC7F6C0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC7F6C0);
    }
  }
}

unint64_t sub_20A4D2828()
{
  unint64_t result = qword_26763B5E0;
  if (!qword_26763B5E0)
  {
    sub_20A4D3B54(255, &qword_26763B5D8, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, MEMORY[0x263F7CE78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B5E0);
  }
  return result;
}

uint64_t sub_20A4D28B0()
{
  return sub_20A4D28F8((unint64_t *)&qword_26AC6B928, (void (*)(uint64_t))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_20A4D28F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4D2940()
{
  return sub_20A4D28F8(&qword_26AC6B920, (void (*)(uint64_t))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_20A4D2988()
{
  return sub_20A4D28F8((unint64_t *)&unk_26AC6B910, (void (*)(uint64_t))type metadata accessor for StocksAudioTrack);
}

uint64_t sub_20A4D29D0()
{
  return sub_20A4D28F8(&qword_26763B5F0, (void (*)(uint64_t))type metadata accessor for StocksAudioTrack);
}

void *initializeBufferWithCopyOfBuffer for StocksAudioTrack(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C4020();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_unknownObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = *(void **)((char *)a2 + v13);
    *(void *)((char *)v7 + v13) = v15;
    *(void *)((char *)v7 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v16 = a3[9];
    *(void *)((char *)v7 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *((unsigned char *)v7 + v16) = *((unsigned char *)a2 + v16);
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = *(void **)((char *)a2 + v17);
    *(void *)((char *)v7 + v17) = v19;
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)((char *)v7 + v18) = v20;
    uint64_t v21 = a3[12];
    v22 = (void *)((char *)v7 + v21);
    v23 = (void *)((char *)a2 + v21);
    sub_20A8C4CD0();
    id v24 = v15;
    id v25 = v19;
    id v26 = v20;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v28 = v23[1];
    void *v22 = *v23;
    v22[1] = v28;
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A4D2C0C();
      uint64_t v30 = *(int *)(v29 + 48);
      v31 = (char *)v22 + v30;
      v32 = (char *)v23 + v30;
      uint64_t v33 = sub_20A8C5450();
      v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      swift_retain();
      v34(v31, v32, v33);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

void sub_20A4D2C0C()
{
  if (!qword_26763B5F8)
  {
    sub_20A46F6E8();
    sub_20A8C5450();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B5F8);
    }
  }
}

uint64_t destroy for StocksAudioTrack(uint64_t a1, int *a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_20A8C4020();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = a1 + a2[12];
  sub_20A8C4CD0();
  LODWORD(a1) = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (a1 == 1)
  {
    sub_20A4D2C0C();
    uint64_t v9 = v6 + *(int *)(v8 + 48);
    uint64_t v10 = sub_20A8C5450();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v9, v10);
  }
  return result;
}

void *initializeWithCopy for StocksAudioTrack(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C4020();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)((char *)a2 + v11);
  *(void *)((char *)a1 + v11) = v13;
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v14 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  uint64_t v18 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v18;
  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  sub_20A8C4CD0();
  id v22 = v13;
  id v23 = v17;
  id v24 = v18;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v26 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v26;
  if (EnumCaseMultiPayload == 1)
  {
    sub_20A4D2C0C();
    uint64_t v28 = *(int *)(v27 + 48);
    uint64_t v29 = (char *)v20 + v28;
    uint64_t v30 = (char *)v21 + v28;
    uint64_t v31 = sub_20A8C5450();
    v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_retain();
    v32(v29, v30, v31);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for StocksAudioTrack(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C4020();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = v11;
  id v13 = v11;

  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v14 = a3[10];
  uint64_t v15 = *(void **)((char *)a1 + v14);
  uint64_t v16 = *(void **)((char *)a2 + v14);
  *(void *)((char *)a1 + v14) = v16;
  id v17 = v16;

  uint64_t v18 = a3[11];
  uint64_t v19 = *(void **)((char *)a1 + v18);
  uint64_t v20 = *(void **)((char *)a2 + v18);
  *(void *)((char *)a1 + v18) = v20;
  id v21 = v20;

  if (a1 != a2)
  {
    uint64_t v22 = a3[12];
    id v23 = (void *)((char *)a1 + v22);
    id v24 = (void *)((char *)a2 + v22);
    sub_20A4D3124((uint64_t)a1 + v22);
    sub_20A8C4CD0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v26 = v24[1];
    void *v23 = *v24;
    v23[1] = v26;
    if (EnumCaseMultiPayload == 1)
    {
      sub_20A4D2C0C();
      uint64_t v28 = *(int *)(v27 + 48);
      uint64_t v29 = (char *)v23 + v28;
      uint64_t v30 = (char *)v24 + v28;
      uint64_t v31 = sub_20A8C5450();
      v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
      swift_retain();
      v32(v29, v30, v31);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A4D3124(uint64_t a1)
{
  uint64_t v2 = sub_20A8C4CD0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for StocksAudioTrack(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C4020();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[12];
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  uint64_t v16 = sub_20A8C4CD0();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v14 = *v15;
    sub_20A4D2C0C();
    uint64_t v18 = *(int *)(v17 + 48);
    uint64_t v19 = (char *)v14 + v18;
    uint64_t v20 = (char *)v15 + v18;
    uint64_t v21 = sub_20A8C5450();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for StocksAudioTrack(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C4020();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a1 + v10);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);

  uint64_t v12 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v14 = *(void **)((char *)a1 + v13);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);

  uint64_t v15 = a3[11];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);

  if (a1 != a2)
  {
    uint64_t v17 = a3[12];
    uint64_t v18 = (_OWORD *)((char *)a1 + v17);
    uint64_t v19 = (_OWORD *)((char *)a2 + v17);
    sub_20A4D3124((uint64_t)a1 + v17);
    uint64_t v20 = sub_20A8C4CD0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v18 = *v19;
      sub_20A4D2C0C();
      uint64_t v22 = *(int *)(v21 + 48);
      id v23 = (char *)v18 + v22;
      id v24 = (char *)v19 + v22;
      uint64_t v25 = sub_20A8C5450();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for StocksAudioTrack(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4D34C8);
}

uint64_t sub_20A4D34C8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C4020();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_20A8C4CD0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 48);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for StocksAudioTrack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4D3608);
}

void *sub_20A4D3608(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C4020();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_20A8C4CD0();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 48);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_20A4D3734()
{
  uint64_t result = sub_20A8C4020();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_20A8C4CD0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StocksAudioTrack.Flags()
{
  return &type metadata for StocksAudioTrack.Flags;
}

unint64_t sub_20A4D3850()
{
  unint64_t result = qword_26763B608;
  if (!qword_26763B608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B608);
  }
  return result;
}

unint64_t sub_20A4D38A8()
{
  unint64_t result = qword_26763B610;
  if (!qword_26763B610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B610);
  }
  return result;
}

unint64_t sub_20A4D3900()
{
  unint64_t result = qword_26763B618;
  if (!qword_26763B618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B618);
  }
  return result;
}

unint64_t sub_20A4D3958()
{
  unint64_t result = qword_26763B620;
  if (!qword_26763B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B620);
  }
  return result;
}

void sub_20A4D39AC()
{
  if (!qword_26763B628)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    sub_20A4D28F8(&qword_26763B630, type metadata accessor for OpenExternalURLOptionsKey);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B628);
    }
  }
}

uint64_t sub_20A4D3A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_20A4D3ABC()
{
  if (!qword_26AC7FDA0)
  {
    sub_20A4D3B54(255, &qword_26AC7F738, MEMORY[0x263F7CEF0], MEMORY[0x263F8D488]);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FDA0);
    }
  }
}

void sub_20A4D3B54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A4D3BB8()
{
  if (!qword_26AC7FDE0)
  {
    type metadata accessor for Key(255);
    sub_20A4D28F8((unint64_t *)&qword_26AC7F9F8, type metadata accessor for Key);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FDE0);
    }
  }
}

void sub_20A4D3C58()
{
  if (!qword_26AC7FDE8)
  {
    type metadata accessor for AttributeName(255);
    sub_20A4D28F8((unint64_t *)&unk_26AC7FAE0, type metadata accessor for AttributeName);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FDE8);
    }
  }
}

void sub_20A4D3CF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_20A4D3D60()
{
  if (!qword_26AC82730)
  {
    type metadata accessor for TraitKey(255);
    sub_20A4D28F8((unint64_t *)&unk_26AC7FA78, type metadata accessor for TraitKey);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82730);
    }
  }
}

void sub_20A4D3DFC()
{
  if (!qword_26AC68D40)
  {
    sub_20A8C2AF0();
    type metadata accessor for StockChartCalloutDateFormatter();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC68D40);
    }
  }
}

void sub_20A4D3E6C()
{
  if (!qword_26AC7FD48)
  {
    sub_20A8C2AF0();
    type metadata accessor for StockChartCalloutDateFormatter();
    sub_20A4D28F8(&qword_26AC68D20, MEMORY[0x263F079C8]);
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FD48);
    }
  }
}

uint64_t sub_20A4D3F18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_20A4D3F80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  sub_20A4D409C();
  int v3 = (void *)sub_20A8CF570();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void **)(a1 + 56);
  unint64_t result = sub_20A4D1C34(v4);
  if (v9)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v19 = v7;
    return (unint64_t)v3;
  }
  uint64_t v10 = (void *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v11 = (void *)(v3[7] + 24 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    v11[2] = v7;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v15 = v10 + 4;
    unsigned __int8 v4 = *((unsigned char *)v10 - 24);
    uint64_t v5 = *(v10 - 2);
    uint64_t v6 = *(v10 - 1);
    uint64_t v16 = (void *)*v10;
    id v17 = v7;
    unint64_t result = sub_20A4D1C34(v4);
    uint64_t v10 = v15;
    uint64_t v7 = v16;
    if (v18) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_20A4D409C()
{
  if (!qword_26AC7FD58)
  {
    sub_20A4D4100();
    unint64_t v0 = sub_20A8CF580();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FD58);
    }
  }
}

unint64_t sub_20A4D4100()
{
  unint64_t result = qword_26AC75B50;
  if (!qword_26AC75B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC75B50);
  }
  return result;
}

void sub_20A4D4154(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_20A8CF580();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A4D41C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A4D4224(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CuratedForYouFeedGroupKnobs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4D4288(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_20A4D42C0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_20A4D4314(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A4D4378(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20A4D43D4(uint64_t a1)
{
  return a1;
}

void sub_20A4D4428(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_20A8CF580();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_20A4D4480(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v22;
      uint64_t v23 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v23;
      uint64_t v24 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      uint64_t v25 = (void *)(a1 + v24);
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_20A8C3F00();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        sub_20A4D4A5C();
        memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      sub_20A453068();
      uint64_t v43 = *(int *)(v42 + 48);
      uint64_t v44 = a1 + v43;
      uint64_t v45 = (uint64_t)a2 + v43;
      *(void *)uint64_t v44 = *(uint64_t *)((char *)a2 + v43);
      *(_OWORD *)(v44 + 24) = *(_OWORD *)((char *)a2 + v43 + 24);
      *(_OWORD *)(v44 + 8) = *(_OWORD *)((char *)a2 + v43 + 8);
      uint64_t v46 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
      uint64_t v47 = v44 + v46;
      uint64_t v48 = v45 + v46;
      uint64_t v49 = sub_20A8CF110();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
      goto LABEL_16;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v9 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v10 = *(int *)(v9 + 28);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = (uint64_t)a2 + v10;
      uint64_t v13 = sub_20A8C40E0();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      uint64_t v15 = *(int *)(v9 + 32);
      uint64_t v16 = (void *)(a1 + v15);
      id v17 = (char *)a2 + v15;
      sub_20A453638();
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v31 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v31;
      uint64_t v32 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v32;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v33 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v34 = *(int *)(v33 + 28);
      uint64_t v35 = a1 + v34;
      uint64_t v36 = (uint64_t)a2 + v34;
      uint64_t v37 = sub_20A8C40E0();
      v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v38(v35, v36, v37);
      uint64_t v39 = *(int *)(v33 + 32);
      uint64_t v16 = (void *)(a1 + v39);
      id v17 = (char *)a2 + v39;
      sub_20A453638();
      uint64_t v19 = v40;
      uint64_t v20 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v40))
      {
LABEL_10:
        uint64_t v41 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v16, v17, *(void *)(*(void *)(v41 - 8) + 64));
LABEL_15:
        sub_20A45321C();
        uint64_t v52 = *(int *)(v51 + 48);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = (uint64_t)a2 + v52;
        long long v55 = *(_OWORD *)(v54 + 144);
        *(_OWORD *)(v53 + 128) = *(_OWORD *)(v54 + 128);
        *(_OWORD *)(v53 + 144) = v55;
        *(void *)(v53 + 160) = *(void *)(v54 + 160);
        long long v56 = *(_OWORD *)(v54 + 80);
        *(_OWORD *)(v53 + 64) = *(_OWORD *)(v54 + 64);
        *(_OWORD *)(v53 + 80) = v56;
        long long v57 = *(_OWORD *)(v54 + 112);
        *(_OWORD *)(v53 + 96) = *(_OWORD *)(v54 + 96);
        *(_OWORD *)(v53 + 112) = v57;
        long long v58 = *(_OWORD *)(v54 + 16);
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
        *(_OWORD *)(v53 + 16) = v58;
        long long v59 = *(_OWORD *)(v54 + 48);
        *(_OWORD *)(v53 + 32) = *(_OWORD *)(v54 + 32);
        *(_OWORD *)(v53 + 48) = v59;
LABEL_16:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    uint64_t v50 = sub_20A8C3F00();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v16, v17, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    goto LABEL_15;
  }
  uint64_t v21 = *a2;
  *(void *)a1 = *a2;
  a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void sub_20A4D4A5C()
{
  if (!qword_26AC68FD0)
  {
    sub_20A8C3F00();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68FD0);
    }
  }
}

uint64_t sub_20A4D4AB4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = a1 + *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    uint64_t v9 = sub_20A8C3F00();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    }
    sub_20A453068();
    uint64_t v12 = a1 + *(int *)(v11 + 48);
    uint64_t v6 = v12 + *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
    uint64_t v13 = sub_20A8CF110();
  }
  else
  {
    if (result > 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for WatchlistCellViewModel(0);
    uint64_t v4 = a1 + *(int *)(v3 + 28);
    uint64_t v5 = sub_20A8C40E0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = a1 + *(int *)(v3 + 32);
    sub_20A453638();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
    if (result) {
      return result;
    }
    uint64_t v13 = sub_20A8C3F00();
  }
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v6, v13);
}

uint64_t sub_20A4D4CAC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v6;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v7 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v8 = *(int *)(v7 + 28);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_20A8C40E0();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      uint64_t v13 = *(int *)(v7 + 32);
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (const void *)(a2 + v13);
      sub_20A453638();
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v28 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v28;
      uint64_t v29 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v29;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v30 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v31 = *(int *)(v30 + 28);
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      uint64_t v34 = sub_20A8C40E0();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
      uint64_t v36 = *(int *)(v30 + 32);
      uint64_t v14 = (void *)(a1 + v36);
      uint64_t v15 = (const void *)(a2 + v36);
      sub_20A453638();
      uint64_t v17 = v37;
      uint64_t v18 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v37))
      {
LABEL_8:
        uint64_t v38 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v14, v15, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_13:
        sub_20A45321C();
        uint64_t v49 = *(int *)(v48 + 48);
        uint64_t v50 = a1 + v49;
        uint64_t v51 = a2 + v49;
        long long v52 = *(_OWORD *)(v51 + 144);
        *(_OWORD *)(v50 + 128) = *(_OWORD *)(v51 + 128);
        *(_OWORD *)(v50 + 144) = v52;
        *(void *)(v50 + 160) = *(void *)(v51 + 160);
        long long v53 = *(_OWORD *)(v51 + 80);
        *(_OWORD *)(v50 + 64) = *(_OWORD *)(v51 + 64);
        *(_OWORD *)(v50 + 80) = v53;
        long long v54 = *(_OWORD *)(v51 + 112);
        *(_OWORD *)(v50 + 96) = *(_OWORD *)(v51 + 96);
        *(_OWORD *)(v50 + 112) = v54;
        long long v55 = *(_OWORD *)(v51 + 16);
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
        *(_OWORD *)(v50 + 16) = v55;
        long long v56 = *(_OWORD *)(v51 + 48);
        *(_OWORD *)(v50 + 32) = *(_OWORD *)(v51 + 32);
        *(_OWORD *)(v50 + 48) = v56;
        goto LABEL_14;
      }
    }
    uint64_t v47 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 16))(v14, v15, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    goto LABEL_13;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v19;
  uint64_t v20 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v20;
  uint64_t v21 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = sub_20A8C3F00();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    sub_20A4D4A5C();
    memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  sub_20A453068();
  uint64_t v40 = *(int *)(v39 + 48);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = a2 + v40;
  *(void *)uint64_t v41 = *(void *)(a2 + v40);
  *(_OWORD *)(v41 + 24) = *(_OWORD *)(a2 + v40 + 24);
  *(_OWORD *)(v41 + 8) = *(_OWORD *)(a2 + v40 + 8);
  uint64_t v43 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
  uint64_t v44 = v41 + v43;
  uint64_t v45 = v42 + v43;
  uint64_t v46 = sub_20A8CF110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
LABEL_14:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A4D5230(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A4D6174(a1, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsLayoutModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v17 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (const void *)(a2 + v17);
      uint64_t v20 = sub_20A8C3F00();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        sub_20A4D4A5C();
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      sub_20A453068();
      uint64_t v38 = *(int *)(v37 + 48);
      uint64_t v39 = a1 + v38;
      uint64_t v40 = a2 + v38;
      *(void *)uint64_t v39 = *(void *)(a2 + v38);
      long long v41 = *(_OWORD *)(a2 + v38 + 8);
      *(_OWORD *)(v39 + 24) = *(_OWORD *)(a2 + v38 + 24);
      *(_OWORD *)(v39 + 8) = v41;
      uint64_t v42 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
      uint64_t v43 = v39 + v42;
      uint64_t v44 = v40 + v42;
      uint64_t v45 = sub_20A8CF110();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v4 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v5 = *(int *)(v4 + 28);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_20A8C40E0();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      uint64_t v10 = *(int *)(v4 + 32);
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      sub_20A453638();
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_20A8C3F00();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      sub_20A45321C();
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      long long v29 = *(_OWORD *)(v28 + 112);
      long long v30 = *(_OWORD *)(v28 + 128);
      long long v31 = *(_OWORD *)(v28 + 144);
      *(void *)(v27 + 160) = *(void *)(v28 + 160);
      *(_OWORD *)(v27 + 128) = v30;
      *(_OWORD *)(v27 + 144) = v31;
      *(_OWORD *)(v27 + 112) = v29;
      long long v32 = *(_OWORD *)(v28 + 48);
      long long v33 = *(_OWORD *)(v28 + 64);
      long long v34 = *(_OWORD *)(v28 + 96);
      *(_OWORD *)(v27 + 80) = *(_OWORD *)(v28 + 80);
      *(_OWORD *)(v27 + 96) = v34;
      *(_OWORD *)(v27 + 48) = v32;
      *(_OWORD *)(v27 + 64) = v33;
      long long v36 = *(_OWORD *)(v28 + 16);
      long long v35 = *(_OWORD *)(v28 + 32);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 16) = v36;
      *(_OWORD *)(v27 + 32) = v35;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ManageWatchlistsLayoutModel()
{
  uint64_t result = qword_26763B680;
  if (!qword_26763B680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4D5684(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v17 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v17;
    uint64_t v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    uint64_t v21 = sub_20A8C3F00();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      sub_20A4D4A5C();
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    sub_20A453068();
    uint64_t v35 = *(int *)(v34 + 48);
    uint64_t v36 = a1 + v35;
    uint64_t v37 = a2 + v35;
    *(void *)uint64_t v36 = *(void *)(a2 + v35);
    *(_OWORD *)(v36 + 24) = *(_OWORD *)(a2 + v35 + 24);
    *(_OWORD *)(v36 + 8) = *(_OWORD *)(a2 + v35 + 8);
    uint64_t v38 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
    uint64_t v39 = v36 + v38;
    uint64_t v40 = v37 + v38;
    uint64_t v41 = sub_20A8CF110();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v4;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
    uint64_t v6 = *(int *)(v5 + 28);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = sub_20A8C40E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    uint64_t v10 = *(int *)(v5 + 32);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_20A453638();
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
    {
      uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v24 = sub_20A8C3F00();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v11, v12, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    sub_20A45321C();
    uint64_t v26 = *(int *)(v25 + 48);
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    long long v29 = *(_OWORD *)(v28 + 144);
    *(_OWORD *)(v27 + 128) = *(_OWORD *)(v28 + 128);
    *(_OWORD *)(v27 + 144) = v29;
    *(void *)(v27 + 160) = *(void *)(v28 + 160);
    long long v30 = *(_OWORD *)(v28 + 80);
    *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
    *(_OWORD *)(v27 + 80) = v30;
    long long v31 = *(_OWORD *)(v28 + 112);
    *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
    *(_OWORD *)(v27 + 112) = v31;
    long long v32 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v32;
    long long v33 = *(_OWORD *)(v28 + 48);
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 48) = v33;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20A4D59F0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_20A4D6174(a1, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsLayoutModel);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
      uint64_t v18 = *(int *)(type metadata accessor for CreateWatchlistViewModel() + 24);
      uint64_t v19 = (void *)(a1 + v18);
      uint64_t v20 = (const void *)(a2 + v18);
      uint64_t v21 = sub_20A8C3F00();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_20A4D4A5C();
        memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      sub_20A453068();
      uint64_t v35 = *(int *)(v34 + 48);
      uint64_t v36 = a1 + v35;
      uint64_t v37 = a2 + v35;
      *(void *)uint64_t v36 = *(void *)(a2 + v35);
      *(_OWORD *)(v36 + 24) = *(_OWORD *)(a2 + v35 + 24);
      *(_OWORD *)(v36 + 8) = *(_OWORD *)(a2 + v35 + 8);
      uint64_t v38 = *(int *)(type metadata accessor for CreateWatchlistViewLayoutAttributes() + 24);
      uint64_t v39 = v36 + v38;
      uint64_t v40 = v37 + v38;
      uint64_t v41 = sub_20A8CF110();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
    }
    else
    {
      long long v4 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v4;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v5 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v6 = *(int *)(v5 + 28);
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = sub_20A8C40E0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      uint64_t v10 = *(int *)(v5 + 32);
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      sub_20A453638();
      uint64_t v14 = v13;
      uint64_t v15 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
        memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v24 = sub_20A8C3F00();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v11, v12, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      sub_20A45321C();
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      long long v29 = *(_OWORD *)(v28 + 144);
      *(_OWORD *)(v27 + 128) = *(_OWORD *)(v28 + 128);
      *(_OWORD *)(v27 + 144) = v29;
      *(void *)(v27 + 160) = *(void *)(v28 + 160);
      long long v30 = *(_OWORD *)(v28 + 80);
      *(_OWORD *)(v27 + 64) = *(_OWORD *)(v28 + 64);
      *(_OWORD *)(v27 + 80) = v30;
      long long v31 = *(_OWORD *)(v28 + 112);
      *(_OWORD *)(v27 + 96) = *(_OWORD *)(v28 + 96);
      *(_OWORD *)(v27 + 112) = v31;
      long long v32 = *(_OWORD *)(v28 + 16);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 16) = v32;
      long long v33 = *(_OWORD *)(v28 + 48);
      *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
      *(_OWORD *)(v27 + 48) = v33;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20A4D5D80()
{
  uint64_t result = type metadata accessor for WatchlistCellViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v6;
    swift_getTupleTypeLayout2();
    uint64_t v8 = &v5;
    uint64_t result = type metadata accessor for CreateWatchlistViewModel();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for CreateWatchlistViewLayoutAttributes();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v9 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

double sub_20A4D5EC8()
{
  uint64_t v1 = v0;
  uint64_t WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
  MEMORY[0x270FA5388](WatchlistViewLayoutAttributes - 8);
  char v4 = (double *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D60AC(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_20A453068();
    sub_20A4D6110((uint64_t)&v7[*(int *)(v11 + 48)], (uint64_t)v4);
    double v9 = *v4;
    sub_20A4D6174((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewLayoutAttributes);
    uint64_t v10 = (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel;
  }
  else
  {
    sub_20A45321C();
    double v9 = *(double *)&v7[*(int *)(v8 + 48)];
    uint64_t v10 = type metadata accessor for WatchlistCellViewModel;
  }
  sub_20A4D6174((uint64_t)v7, v10);
  return v9;
}

uint64_t sub_20A4D6030()
{
  return 0;
}

uint64_t sub_20A4D6038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D6F0];
  uint64_t v3 = sub_20A8C9210();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A4D60AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ManageWatchlistsLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4D6110(uint64_t a1, uint64_t a2)
{
  uint64_t WatchlistViewLayoutAttributes = type metadata accessor for CreateWatchlistViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(WatchlistViewLayoutAttributes - 8) + 32))(a2, a1, WatchlistViewLayoutAttributes);
  return a2;
}

uint64_t sub_20A4D6174(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4D61D4(void *a1, void (*a2)(void, void), uint64_t a3)
{
  uint64_t v27 = a2;
  uint64_t v30 = sub_20A8CC220();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  long long v29 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CC250();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8CC280();
  uint64_t v28 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v26 - v14;
  sub_20A8C9BF0();
  uint64_t v16 = (void *)sub_20A8C94C0();
  swift_release();
  long long v17 = (void *)swift_allocObject();
  uint64_t v18 = v27;
  v17[2] = a1;
  v17[3] = v18;
  v17[4] = a3;
  sub_20A44D17C();
  id v19 = a1;
  swift_retain();
  uint64_t v20 = (void *)sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v12, 1.0);
  uint64_t v27 = *(void (**)(void, void))(v10 + 8);
  v27(v12, v9);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v16;
  *(void *)(v21 + 24) = sub_20A4D6DBC;
  *(void *)(v21 + 32) = v17;
  *(_OWORD *)(v21 + 40) = xmmword_20A8D9700;
  aBlock[4] = sub_20A4D6DD0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_5;
  uint64_t v22 = _Block_copy(aBlock);
  id v26 = v16;
  swift_retain();
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A4D6DE0(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A4D6DE0((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  uint64_t v24 = v29;
  uint64_t v23 = v30;
  sub_20A8CF290();
  MEMORY[0x210526ED0](v15, v8, v24, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  v27(v15, v28);

  return swift_release();
}

uint64_t sub_20A4D6630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A8C9BF0();
  uint64_t v5 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v5, sel_setContentOffset_animated_, 0, 0.0, 0.0);

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  swift_retain();
  sub_20A6242A0((uint64_t)sub_20A441D78, v6);

  return swift_release();
}

uint64_t type metadata accessor for ForYouFeedTestSuite()
{
  return self;
}

void sub_20A4D67E0(void *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_20A8CC280();
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CA180();
  uint64_t v40 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  _Block_copy(a2);
  uint64_t v11 = (void *)sub_20A8CE240();
  id v12 = objc_msgSend(a1, sel_objectForKey_, v11);

  if (v12)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_20A443438((uint64_t)&v43, (uint64_t)v45);
  if (!v46)
  {
    sub_20A44349C((uint64_t)v45);
    goto LABEL_11;
  }
  type metadata accessor for ForYouFeedViewController();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    id v19 = objc_allocWithZone(MEMORY[0x263F7D158]);
    uint64_t v20 = (void *)sub_20A8CE240();
    id v21 = objc_msgSend(v19, sel_initWithMessage_, v20);

    ((void (**)(void, id))a2)[2](a2, v21);
    swift_release();
LABEL_12:

    return;
  }
  uint64_t v39 = v4;
  id v13 = v42;
  id v14 = objc_msgSend(v42, sel_splitViewController);
  if (!v14) {
    goto LABEL_17;
  }
  uint64_t v15 = v14;
  unsigned __int8 v16 = objc_msgSend(v14, sel_isCollapsed);

  if ((v16 & 1) == 0) {
    goto LABEL_17;
  }
  long long v17 = (void *)sub_20A8CE240();
  id v18 = objc_msgSend(a1, sel_objectForKey_, v17);

  if (v18)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_20A443438((uint64_t)&v43, (uint64_t)v45);
  if (!v46)
  {
    sub_20A44349C((uint64_t)v45);
    goto LABEL_19;
  }
  sub_20A8C9D60();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    id v37 = objc_allocWithZone(MEMORY[0x263F7D158]);
    uint64_t v38 = (void *)sub_20A8CE240();
    id v21 = objc_msgSend(v37, sel_initWithMessage_, v38);

    ((void (**)(void, id))a2)[2](a2, v21);
    swift_release();

    goto LABEL_12;
  }
  id v22 = v42;
  uint64_t v23 = v40;
  (*(void (**)(char *, void, uint64_t))(v40 + 104))(v9, *MEMORY[0x263F7DB50], v7);
  sub_20A8C9CB0();

  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
LABEL_17:
  sub_20A8C9BF0();
  uint64_t v24 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v24, sel_bounds);
  CGFloat v26 = v25;
  CGFloat v28 = v27;
  CGFloat v30 = v29;
  CGFloat v32 = v31;

  v47.origin.x = v26;
  v47.origin.y = v28;
  v47.size.width = v30;
  v47.size.height = v32;
  uint64_t Height = CGRectGetHeight(v47);
  sub_20A8C9BF0();
  uint64_t v34 = (void *)sub_20A8C94C0();
  swift_release();
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = v13;
  v35[3] = sub_20A4419AC;
  v35[4] = v10;
  id v36 = v13;
  swift_retain();
  sub_20A8CC260();
  sub_20A623AD4(Height, 0, v34, (uint64_t)v6, (uint64_t)sub_20A4D6DA8, (uint64_t)v35, 1.0);

  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v39);
  swift_release();
}

uint64_t sub_20A4D6D68()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_20A4D6DA0()
{
  return objectdestroy_3Tm();
}

uint64_t sub_20A4D6DA8()
{
  return sub_20A4D61D4(*(void **)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_20A4D6DB4()
{
  return objectdestroy_3Tm();
}

uint64_t sub_20A4D6DBC()
{
  return sub_20A4D6630(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A4D6DC8()
{
  return objectdestroy_3Tm();
}

uint64_t sub_20A4D6DD0()
{
  return sub_20A622F68(*(void **)(v0 + 16), *(uint64_t (**)(id))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_20A4D6DE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4D6E28()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4D6E60()
{
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioPlaybackCommandHandler()
{
  return self;
}

uint64_t sub_20A4D6ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A4D6F00(a3, a4);
}

uint64_t sub_20A4D6F00(uint64_t a1, uint64_t a2)
{
  uint64_t v122 = a2;
  sub_20A4D7E3C(0, &qword_26AC6B990, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  v103 = (char *)&v98 - v3;
  uint64_t v4 = sub_20A8C6C70();
  uint64_t v114 = *(void *)(v4 - 8);
  uint64_t v115 = v4;
  MEMORY[0x270FA5388](v4);
  v113 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CD3A0();
  uint64_t v111 = *(void *)(v6 - 8);
  uint64_t v112 = v6;
  MEMORY[0x270FA5388](v6);
  v110 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v124 = (void (**)(char *, uint64_t))((char *)&v98 - v9);
  uint64_t v10 = sub_20A8C6C60();
  uint64_t v119 = *(void *)(v10 - 8);
  uint64_t v120 = v10;
  MEMORY[0x270FA5388](v10);
  v102 = (char *)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v106 = (char *)&v98 - v13;
  MEMORY[0x270FA5388](v14);
  v123 = (uint64_t *)((char *)&v98 - v15);
  uint64_t v121 = sub_20A8CD640();
  uint64_t v116 = *(void *)(v121 - 8);
  MEMORY[0x270FA5388](v121);
  v100 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  v101 = (char *)&v98 - v18;
  MEMORY[0x270FA5388](v19);
  v104 = (char *)&v98 - v20;
  MEMORY[0x270FA5388](v21);
  v105 = (char *)&v98 - v22;
  MEMORY[0x270FA5388](v23);
  v108 = (char *)&v98 - v24;
  MEMORY[0x270FA5388](v25);
  double v27 = (char *)&v98 - v26;
  uint64_t v28 = sub_20A8C71C0();
  uint64_t v117 = *(void *)(v28 - 8);
  uint64_t v118 = v28;
  MEMORY[0x270FA5388](v28);
  v107 = (uint64_t *)((char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v30);
  uint64_t v109 = (uint64_t)&v98 - v31;
  MEMORY[0x270FA5388](v32);
  uint64_t v34 = (char *)&v98 - v33;
  uint64_t v35 = sub_20A8CD1F0();
  id v36 = *(void (***)(char *, uint64_t))(v35 - 8);
  MEMORY[0x270FA5388](v35);
  v99 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v98 - v39;
  MEMORY[0x270FA5388](v41);
  long long v43 = (char *)&v98 - v42;
  sub_20A8CB840();
  sub_20A8CB770();
  char v44 = sub_20A8CB640();
  swift_release();
  if (v44)
  {
    uint64_t v46 = v125[7];
    uint64_t v45 = v125[8];
    v107 = __swift_project_boxed_opaque_existential_1(v125 + 4, v46);
    sub_20A4D7CAC();
    sub_20A8CD570();
    sub_20A4B0120((uint64_t)v34);
    v36[1](v43, v35);
    sub_20A8CD580();
    uint64_t v47 = v116;
    uint64_t v48 = v108;
    uint64_t v49 = v121;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v108, v27, v121);
    int v50 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v48, v49);
    int v51 = *MEMORY[0x263F59CC0];
    long long v52 = v34;
    uint64_t v109 = v45;
    if (v50 == v51)
    {
      long long v53 = (unsigned int *)MEMORY[0x263F79D70];
      uint64_t v55 = v119;
      uint64_t v54 = v120;
LABEL_17:
      (*(void (**)(void *, void, uint64_t))(v55 + 104))(v123, *v53, v54);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v49);
      v77 = v124;
      sub_20A8CD560();
      v78 = v110;
      uint64_t v79 = v111;
      uint64_t v80 = v112;
      (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(v111 + 16))(v110, v77, v112);
      int v81 = (*(uint64_t (**)(char *, uint64_t))(v79 + 88))(v78, v80);
      if (v81 == *MEMORY[0x263F59C08])
      {
        v82 = (unsigned int *)MEMORY[0x263F79D88];
LABEL_21:
        v84 = v113;
        uint64_t v83 = v114;
        uint64_t v85 = v115;
        (*(void (**)(char *, void, uint64_t))(v114 + 104))(v113, *v82, v115);
        (*(void (**)(char *, uint64_t))(v79 + 8))((char *)v124, v80);
        v86 = v123;
        (*(void (**)(char *, void *, char *, uint64_t))(v109 + 24))(v52, v123, v84, v46);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v85);
        (*(void (**)(void *, uint64_t))(v55 + 8))(v86, v54);
        (*(void (**)(char *, uint64_t))(v117 + 8))(v52, v118);
        return sub_20A8C52F0();
      }
      if (v81 == *MEMORY[0x263F59C00])
      {
        v82 = (unsigned int *)MEMORY[0x263F79D98];
        goto LABEL_21;
      }
      goto LABEL_33;
    }
    uint64_t v55 = v119;
    uint64_t v54 = v120;
    if (v50 == *MEMORY[0x263F59CD0])
    {
      long long v53 = (unsigned int *)MEMORY[0x263F79D80];
      goto LABEL_17;
    }
    if (v50 == *MEMORY[0x263F59CC8])
    {
      long long v53 = (unsigned int *)MEMORY[0x263F79D78];
      goto LABEL_17;
    }
LABEL_33:
    uint64_t result = sub_20A8CF520();
    __break(1u);
    return result;
  }
  v124 = v36;
  uint64_t v56 = v121;
  long long v57 = v125;
  sub_20A8CB760();
  char v58 = sub_20A8CB640();
  swift_release();
  if (v58)
  {
    uint64_t v59 = v57[7];
    uint64_t v60 = v57[8];
    v123 = __swift_project_boxed_opaque_existential_1(v57 + 4, v59);
    sub_20A4D7CAC();
    sub_20A8CD570();
    sub_20A4B0120(v109);
    v124[1](v40, v35);
    v61 = v105;
    sub_20A8CD580();
    uint64_t v62 = v116;
    v63 = v104;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v104, v61, v56);
    int v64 = (*(uint64_t (**)(char *, uint64_t))(v62 + 88))(v63, v56);
    if (v64 == *MEMORY[0x263F59CC0])
    {
      v65 = (unsigned int *)MEMORY[0x263F79D70];
    }
    else if (v64 == *MEMORY[0x263F59CD0])
    {
      v65 = (unsigned int *)MEMORY[0x263F79D80];
    }
    else
    {
      if (v64 != *MEMORY[0x263F59CC8]) {
        goto LABEL_33;
      }
      v65 = (unsigned int *)MEMORY[0x263F79D78];
    }
    uint64_t v90 = v119;
    uint64_t v89 = v120;
    v91 = v106;
    (*(void (**)(char *, void, uint64_t))(v119 + 104))(v106, *v65, v120);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v56);
    uint64_t v92 = v109;
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v60 + 16))(v109, v91, v59, v60);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v89);
    (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v92, v118);
    return sub_20A8C5310();
  }
  sub_20A8CB6F0();
  char v66 = sub_20A8CB640();
  swift_release();
  if (v66 & 1) != 0 || (sub_20A8CB750(), char v67 = sub_20A8CB640(), swift_release(), (v67))
  {
    uint64_t v68 = v57[7];
    uint64_t v69 = v57[8];
    v123 = __swift_project_boxed_opaque_existential_1(v57 + 4, v68);
    sub_20A4D7CAC();
    v70 = v99;
    sub_20A8CD570();
    sub_20A4B0120((uint64_t)v107);
    v124[1](v70, v35);
    v71 = v101;
    sub_20A8CD580();
    uint64_t v72 = v116;
    v73 = v100;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v100, v71, v56);
    int v74 = (*(uint64_t (**)(char *, uint64_t))(v72 + 88))(v73, v56);
    if (v74 == *MEMORY[0x263F59CC0])
    {
      v75 = (unsigned int *)MEMORY[0x263F79D70];
      uint64_t v76 = v119;
    }
    else
    {
      uint64_t v76 = v119;
      if (v74 == *MEMORY[0x263F59CD0])
      {
        v75 = (unsigned int *)MEMORY[0x263F79D80];
      }
      else
      {
        if (v74 != *MEMORY[0x263F59CC8]) {
          goto LABEL_33;
        }
        v75 = (unsigned int *)MEMORY[0x263F79D78];
      }
    }
    v93 = v102;
    uint64_t v94 = v120;
    (*(void (**)(char *, void, uint64_t))(v76 + 104))(v102, *v75, v120);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v71, v56);
    v95 = v107;
    (*(void (**)(void *, char *, uint64_t, uint64_t))(v69 + 40))(v107, v93, v68, v69);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v93, v94);
    (*(void (**)(void *, uint64_t))(v117 + 8))(v95, v118);
    sub_20A8C5300();
    uint64_t v96 = type metadata accessor for StocksAudioTrack();
    uint64_t v97 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v103, 1, 1, v96);
    sub_20A4D7DD8((unint64_t *)&unk_26763E750, &qword_26AC6B990, MEMORY[0x263F8D8F0]);
    sub_20A8C5D80();
    sub_20A4D7D60(v97);
    uint64_t v126 = MEMORY[0x263F8EE78];
    sub_20A4D7DD8(&qword_26763B690, &qword_26AC7F7D0, MEMORY[0x263F8D488]);
    return sub_20A8C5D80();
  }
  else
  {
    sub_20A8CB720();
    char v88 = sub_20A8CB640();
    uint64_t result = swift_release();
    if (v88) {
      return sub_20A8C5290();
    }
  }
  return result;
}

void sub_20A4D7CAC()
{
  if (!qword_26AC6B260)
  {
    unint64_t v0 = sub_20A8CD5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B260);
    }
  }
}

unint64_t sub_20A4D7D08()
{
  unint64_t result = qword_26AC6B928;
  if (!qword_26AC6B928)
  {
    type metadata accessor for StocksAudioTrack();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6B928);
  }
  return result;
}

uint64_t sub_20A4D7D60(uint64_t a1)
{
  sub_20A4D7E3C(0, &qword_26AC6B990, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A4D7DD8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4D7E3C(255, a2, a3);
    sub_20A4D7D08();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4D7E3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for StocksAudioTrack();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A4D7E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_20A4D7F38(a1, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_20A4D7F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = MEMORY[0x263F8EE78];
  if (!v5) {
    return v6;
  }
  if (a4) {
    uint64_t v8 = a4;
  }
  else {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  sub_20A4D8398();
  uint64_t v9 = *(void *)(sub_20A8C6150() - 8);
  unint64_t v31 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v29 = 4 * *(void *)(v9 + 72);
  uint64_t v32 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  uint64_t v10 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v30 = v5;
    uint64_t v12 = *(v10 - 1);
    uint64_t v11 = *v10;
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_20A8D7FF0;
    unint64_t v14 = v13 + v31;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x21051E410](1886680168, 0xE400000000000000, 0xD000000000000010, 0x800000020A8FD180, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x21051E410](0x7370747468, 0xE500000000000000, 0xD000000000000010, 0x800000020A8FD180, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x21051E410](0x736B636F7473, 0xE600000000000000, 0xD000000000000010, 0x800000020A8FD180, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MEMORY[0x21051E410](0x736B636F7473, 0xE600000000000000, 0, 0, v12, v11, a2, a3, v8, a5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v15 = *(void *)(v6 + 16);
    int64_t v16 = v15 + 4;
    if (__OFADD__(v15, 4))
    {
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || (int64_t v18 = *(void *)(v6 + 24) >> 1, v18 < v16))
    {
      if (v15 <= v16) {
        int64_t v19 = v15 + 4;
      }
      else {
        int64_t v19 = v15;
      }
      unint64_t v6 = sub_20A46DE2C(isUniquelyReferenced_nonNull_native, v19, 1, v6);
      int64_t v18 = *(void *)(v6 + 24) >> 1;
    }
    uint64_t v20 = *(void *)(v6 + 16);
    if (v18 - v20 < 4) {
      goto LABEL_21;
    }
    unint64_t v21 = v6 + v31 + v20 * v32;
    if (v14 < v21 + v29 && v21 < v14 + v29) {
      break;
    }
    swift_arrayInitWithCopy();
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, 4);
    uint64_t v24 = v22 + 4;
    if (v23) {
      goto LABEL_22;
    }
    v10 += 2;
    *(void *)(v6 + 16) = v24;
    swift_bridgeObjectRelease();
    --v5;
    if (v30 == 1)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_20A8CF590();
  __break(1u);
  return result;
}

void sub_20A4D8398()
{
  if (!qword_26AC7FF00)
  {
    sub_20A8C6150();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FF00);
    }
  }
}

char *sub_20A4D83F0(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton;
  id v11 = objc_allocWithZone((Class)sub_20A8C81C0());
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_onWatchlistSwitcherMenuPresentation;
  sub_20A45A1DC();
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(v14), sel_init);

  v33.receiver = v12;
  v33.super_class = ObjectType;
  int64_t v15 = (char *)objc_msgSendSuper2(&v33, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton;
  uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_switcherButton];
  int64_t v18 = v15;
  objc_msgSend(v18, sel_addSubview_, v17);
  uint64_t v19 = *MEMORY[0x263F83268];
  id v20 = v17;
  unint64_t v21 = (unint64_t)objc_msgSend(v20, sel_accessibilityTraits);
  if ((v19 & ~v21) != 0) {
    uint64_t v22 = v19;
  }
  else {
    uint64_t v22 = 0;
  }
  objc_msgSend(v20, sel_setAccessibilityTraits_, v22 | v21);

  BOOL v23 = *(void **)&v15[v16];
  id v24 = *(id *)&v18[OBJC_IVAR____TtC8StocksUI26StockListSectionHeaderView_onWatchlistSwitcherMenuPresentation];
  id v25 = v23;
  sub_20A8CB530();

  uint64_t v26 = *(void **)&v15[v16];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v28 = self;
  id v29 = v26;
  id v30 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  unint64_t v31 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setAccessibilityHint_, v31, 0x800000020A8FD250);

  return v18;
}

uint64_t type metadata accessor for StockListSectionHeaderView()
{
  return self;
}

void sub_20A4D87C8()
{
  sub_20A4D8854(&qword_26AC77120);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A4D8820()
{
  return sub_20A4D8854(&qword_26AC68148);
}

uint64_t sub_20A4D8854(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockListSectionHeaderView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CreateWatchlistViewStyler()
{
  return self;
}

uint64_t sub_20A4D88B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  int64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

void *sub_20A4D8A04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(int *)(a3 + 28);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v12 = sub_20A8C40E0();
    double v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 32);
    int64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    sub_20A453638();
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
    {
      uint64_t v20 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v15, v16, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
    }
  }
  return v4;
}

uint64_t type metadata accessor for ManageWatchlistsContentMode(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26763B6B8);
}

uint64_t sub_20A4D8C24(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  sub_20A453638();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = sub_20A8C3F00();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v6, v9);
  }
  return result;
}

uint64_t sub_20A4D8D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C40E0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (void *)(a1 + v13);
  int64_t v15 = (const void *)(a2 + v13);
  sub_20A453638();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
  {
    uint64_t v19 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v15, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_20A4D8EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_20A453638();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v11, 1, v13);
  int v17 = v16(v12, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v21 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 24))(v11, v12, v21);
      return a1;
    }
    sub_20A4DA6C8((uint64_t)v11, (uint64_t (*)(void))sub_20A453638);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  uint64_t v18 = sub_20A8C3F00();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  return a1;
}

uint64_t sub_20A4D9130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 32);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  sub_20A453638();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
  {
    uint64_t v17 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_20A4D92B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 32);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  sub_20A453638();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  LODWORD(v10) = v18(v13, 1, v15);
  int v19 = v18(v14, 1, v16);
  if (!v10)
  {
    if (!v19)
    {
      uint64_t v23 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 40))(v13, v14, v23);
      return a1;
    }
    sub_20A4DA6C8((uint64_t)v13, (uint64_t (*)(void))sub_20A453638);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v21 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v13, v14, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  uint64_t v20 = sub_20A8C3F00();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(v13, v14, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  return a1;
}

uint64_t sub_20A4D94D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4D94EC);
}

uint64_t sub_20A4D94EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ManageWatchlistsContentMode(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_20A4D9618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4D962C);
}

uint64_t sub_20A4D962C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ManageWatchlistsContentMode(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for WatchlistCellViewModel(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26763B6A8);
}

uint64_t sub_20A4D9778(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4D97B0()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ManageWatchlistsContentMode(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_20A4D9890(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_20A453638();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_20A8C3F00();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_20A4D99F8(uint64_t a1)
{
  sub_20A453638();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_20A8C3F00();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_20A4D9AA8(void *a1, const void *a2, uint64_t a3)
{
  sub_20A453638();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_20A4D9BD4(void *a1, void *a2, uint64_t a3)
{
  sub_20A453638();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_20A4DA6C8((uint64_t)a1, (uint64_t (*)(void))sub_20A453638);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_20A8C3F00();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

void *sub_20A4D9D88(void *a1, const void *a2, uint64_t a3)
{
  sub_20A453638();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_20A4D9EB4(void *a1, void *a2, uint64_t a3)
{
  sub_20A453638();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_20A4DA6C8((uint64_t)a1, (uint64_t (*)(void))sub_20A453638);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_20A8C3F00();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_20A4DA068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4DA07C);
}

uint64_t sub_20A4DA07C(uint64_t a1, uint64_t a2)
{
  sub_20A453638();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A4DA0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4DA0FC);
}

uint64_t sub_20A4DA0FC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_20A453638();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_20A4DA17C(uint64_t a1)
{
  sub_20A453638();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_20A4DA1E4(uint64_t a1, uint64_t a2)
{
  sub_20A453638();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_20A4DA254()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_20A4DA2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ManageWatchlistsContentMode(0);
  MEMORY[0x270FA5388](v8 - 8);
  int v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4DA664();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_20A47F8B0(a1, (uint64_t)v13);
  sub_20A47F8B0(a2, v15);
  sub_20A453638();
  uint64_t v17 = v16;
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  if (v18((uint64_t)v13, 1, v16) == 1)
  {
    char v19 = 1;
    int v20 = v18(v15, 1, v17);
    uint64_t v21 = type metadata accessor for ManageWatchlistsContentMode;
    if (v20 == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_20A47F8B0((uint64_t)v13, (uint64_t)v10);
    if (v18(v15, 1, v17) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v19 = MEMORY[0x21051C160](v10, v7);
      uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v10, v4);
      uint64_t v21 = type metadata accessor for ManageWatchlistsContentMode;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  char v19 = 0;
  uint64_t v21 = (uint64_t (*)(void))sub_20A4DA664;
LABEL_8:
  sub_20A4DA6C8((uint64_t)v13, v21);
  return v19 & 1;
}

uint64_t sub_20A4DA594(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (sub_20A8CF760() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v5 && (sub_20A8CF760() & 1) == 0) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for WatchlistCellViewModel(0);
  if ((MEMORY[0x21051C3A0](a1 + *(int *)(v6 + 28), a2 + *(int *)(v6 + 28)) & 1) == 0) {
    return 0;
  }
  uint64_t v7 = *(int *)(v6 + 32);

  return sub_20A4DA2D4(a1 + v7, a2 + v7);
}

void sub_20A4DA664()
{
  if (!qword_26763B6C8)
  {
    type metadata accessor for ManageWatchlistsContentMode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B6C8);
    }
  }
}

uint64_t sub_20A4DA6C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A4DA728(uint64_t a1, double *a2, uint64_t a3)
{
  id v52 = *(id *)(a3 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel);
  objc_msgSend(v52, sel_setFrame_, a2[4], a2[5], a2[6], a2[7]);
  uint64_t v55 = (void *)(v3 + 16);
  swift_beginAccess();
  BOOL v5 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v7 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v8 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v51 = v7;
  *(void *)(inited + 40) = sub_20A8CEE20();
  uint64_t v9 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v8;
  *(void *)(inited + 72) = v9;
  int v10 = v5 + 3;
  uint64_t v12 = v5[6];
  uint64_t v11 = v5[7];
  __swift_project_boxed_opaque_existential_1(v10, v12);
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 40);
  id v50 = v9;
  uint64_t v15 = v14(v12, v13);
  uint64_t v54 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 104) = v54;
  *(void *)(inited + 80) = v15;
  sub_20A4CF8B0(inited);
  id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4DAD58((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
  uint64_t v18 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  objc_msgSend(v52, sel_setAttributedText_, v19);
  int v20 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton);
  objc_msgSend(v20, sel_setFrame_, a2[8], a2[9], a2[10], a2[11]);
  uint64_t v21 = (void *)*__swift_project_boxed_opaque_existential_1(v55, *(void *)(v56 + 40));
  uint64_t v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_20A8D4540;
  *(void *)(v22 + 32) = v51;
  swift_bridgeObjectRetain();
  id v53 = v51;
  uint64_t v49 = v8;
  *(void *)(v22 + 40) = sub_20A8CEE20();
  *(void *)(v22 + 64) = v8;
  *(void *)(v22 + 72) = v50;
  uint64_t v23 = v21 + 3;
  uint64_t v25 = v21[6];
  uint64_t v24 = v21[7];
  __swift_project_boxed_opaque_existential_1(v23, v25);
  uint64_t v26 = *(void *)(v24 + 16);
  double v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 96);
  id v28 = v50;
  uint64_t v29 = v27(v25, v26);
  *(void *)(v22 + 104) = v54;
  *(void *)(v22 + 80) = v29;
  sub_20A4CF8B0(v22);
  id v30 = objc_allocWithZone(MEMORY[0x263F086A0]);
  unint64_t v31 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v32 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v30, sel_initWithString_attributes_, v31, v32);

  objc_msgSend(v20, sel_setAttributedTitle_forState_, v33, 0);
  uint64_t v34 = *(void **)(a3 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton);
  objc_msgSend(v34, sel_setFrame_, a2[12], a2[13], a2[14], a2[15]);
  uint64_t v35 = (void *)*__swift_project_boxed_opaque_existential_1(v55, *(void *)(v56 + 40));
  uint64_t v36 = swift_initStackObject();
  *(_OWORD *)(v36 + 16) = xmmword_20A8D4540;
  *(void *)(v36 + 32) = v53;
  swift_bridgeObjectRetain();
  id v37 = v53;
  *(void *)(v36 + 40) = sub_20A8CEE20();
  *(void *)(v36 + 64) = v49;
  *(void *)(v36 + 72) = v28;
  uint64_t v38 = v35 + 3;
  uint64_t v39 = v35[6];
  uint64_t v40 = v35[7];
  __swift_project_boxed_opaque_existential_1(v38, v39);
  uint64_t v41 = *(void *)(v40 + 16);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 96);
  id v43 = v28;
  uint64_t v44 = v42(v39, v41);
  *(void *)(v36 + 104) = v54;
  *(void *)(v36 + 80) = v44;
  sub_20A4CF8B0(v36);
  id v45 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v46 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v45, sel_initWithString_attributes_, v46, v47);

  objc_msgSend(v34, sel_setAttributedTitle_forState_, v48, 0);
}

uint64_t type metadata accessor for BilingualFeedPromptViewRenderer()
{
  return self;
}

uint64_t sub_20A4DAD00(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A4DAD58(&qword_26AC7A460, a2, (void (*)(uint64_t))type metadata accessor for BilingualFeedPromptViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A4DAD58(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A4DADA0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v9 = v8[5];
        int v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_20A8C3E10();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        uint64_t v57 = v8[6];
        char v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        uint64_t v60 = sub_20A8C3D00();
        uint64_t v61 = *(void *)(v60 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
        {
          sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
          memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        }
        v301 = v8;
        uint64_t v84 = v8[7];
        uint64_t v85 = (char *)a1 + v84;
        v297 = a2;
        v86 = (char *)a2 + v84;
        *(void *)uint64_t v85 = *(void *)((char *)a2 + v84);
        v85[8] = *((unsigned char *)a2 + v84 + 8);
        *((void *)v85 + 2) = *(void *)((char *)a2 + v84 + 16);
        v85[24] = *((unsigned char *)a2 + v84 + 24);
        *((void *)v85 + 4) = *(void *)((char *)a2 + v84 + 32);
        v85[40] = *((unsigned char *)a2 + v84 + 40);
        uint64_t v87 = *(void *)((char *)a2 + v84 + 56);
        *((void *)v85 + 6) = *(void *)((char *)a2 + v84 + 48);
        *((void *)v85 + 7) = v87;
        uint64_t v88 = *(void *)((char *)a2 + v84 + 72);
        *((void *)v85 + 8) = *(void *)((char *)a2 + v84 + 64);
        *((void *)v85 + 9) = v88;
        uint64_t v89 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v90 = v89[9];
        v304 = &v85[v90];
        v91 = &v86[v90];
        uint64_t v92 = sub_20A8C2EB0();
        v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v289 = v93;
        uint64_t v291 = v92;
        v93(v304, v91, v92);
        uint64_t v94 = v89[10];
        v95 = &v85[v94];
        uint64_t v96 = &v86[v94];
        uint64_t v97 = sub_20A8C4030();
        v285 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
        v285(v95, v96, v97);
        v294 = v89;
        uint64_t v98 = v89[11];
        v99 = &v85[v98];
        v100 = &v86[v98];
        uint64_t v101 = sub_20A8C2990();
        v281 = *(void (**)(char *, char *))(*(void *)(v101 - 8) + 16);
        uint64_t v283 = v101;
        v281(v99, v100);
        uint64_t v102 = type metadata accessor for QuoteViewModel();
        uint64_t v103 = *(int *)(v102 + 20);
        v104 = &v85[v103];
        v105 = &v86[v103];
        uint64_t v106 = sub_20A8C3410();
        v277 = *(void (**)(char *, char *))(*(void *)(v106 - 8) + 16);
        uint64_t v279 = v106;
        v277(v104, v105);
        uint64_t v107 = *(int *)(v102 + 24);
        v108 = &v85[v107];
        uint64_t v109 = &v86[v107];
        uint64_t v110 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v305 = *(void *)(v110 - 8);
        v275 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v305 + 48);
        uint64_t v287 = v97;
        if (v275(v109, 1, v110))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
          uint64_t v112 = v297;
        }
        else
        {
          uint64_t v180 = v110;
          uint64_t v271 = v102;
          uint64_t v181 = sub_20A8C2BC0();
          uint64_t v182 = *(void *)(v181 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v109, 3, v181))
          {
            uint64_t v183 = v305;
            memcpy(v108, v109, *(void *)(v305 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v108, v109, v181);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56))(v108, 0, 3, v181);
            uint64_t v183 = v305;
          }
          uint64_t v112 = v297;
          uint64_t v110 = v180;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(v108, 0, 1, v180);
          uint64_t v102 = v271;
        }
        uint64_t v188 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        v189 = &v85[v188];
        v190 = &v86[v188];
        uint64_t v191 = *(void *)(v102 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(&v86[v188], 1, v102))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
          memcpy(v189, v190, *(void *)(*(void *)(v192 - 8) + 64));
          v193 = v301;
        }
        else
        {
          uint64_t v273 = v191;
          *(void *)v189 = *(void *)v190;
          v189[8] = v190[8];
          *((void *)v189 + 2) = *((void *)v190 + 2);
          v189[24] = v190[24];
          *((void *)v189 + 4) = *((void *)v190 + 4);
          v189[40] = v190[40];
          uint64_t v194 = *((void *)v190 + 7);
          *((void *)v189 + 6) = *((void *)v190 + 6);
          *((void *)v189 + 7) = v194;
          uint64_t v299 = v110;
          uint64_t v195 = *((void *)v190 + 9);
          *((void *)v189 + 8) = *((void *)v190 + 8);
          *((void *)v189 + 9) = v195;
          v196 = v294;
          uint64_t v197 = v294[9];
          v198 = &v189[v197];
          v199 = &v190[v197];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v289(v198, v199, v291);
          v285(&v189[v196[10]], &v190[v196[10]], v287);
          ((void (*)(char *, char *, uint64_t))v281)(&v189[v196[11]], &v190[v196[11]], v283);
          ((void (*)(char *, char *, uint64_t))v277)(&v189[*(int *)(v102 + 20)], &v190[*(int *)(v102 + 20)], v279);
          uint64_t v200 = *(int *)(v102 + 24);
          v201 = &v189[v200];
          v202 = &v190[v200];
          if (v275(&v190[v200], 1, v299))
          {
            sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
            memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
            v193 = v301;
          }
          else
          {
            uint64_t v220 = v102;
            uint64_t v221 = sub_20A8C2BC0();
            uint64_t v222 = *(void *)(v221 - 8);
            v193 = v301;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v202, 3, v221))
            {
              uint64_t v223 = v305;
              memcpy(v201, v202, *(void *)(v305 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v201, v202, v221);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v201, 0, 3, v221);
              uint64_t v223 = v305;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v201, 0, 1, v299);
            uint64_t v102 = v220;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v273 + 56))(v189, 0, 1, v102);
        }
        *((unsigned char *)a1 + v193[8]) = *((unsigned char *)v112 + v193[8]);
        sub_20A42CB10();
        uint64_t v229 = *(int *)(v228 + 48);
        v230 = (char *)a1 + v229;
        uint64_t v231 = (uint64_t)v112 + v229;
        uint64_t v232 = sub_20A8CA9F0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v232 - 8) + 16))(v230, v231, v232);
        v233 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
        uint64_t v234 = v233[5];
        v235 = &v230[v234];
        v236 = (_OWORD *)(v231 + v234);
        long long v237 = v236[1];
        *(_OWORD *)v235 = *v236;
        *((_OWORD *)v235 + 1) = v237;
        uint64_t v238 = v233[6];
        v239 = &v230[v238];
        v240 = (_OWORD *)(v231 + v238);
        long long v241 = v240[1];
        *(_OWORD *)v239 = *v240;
        *((_OWORD *)v239 + 1) = v241;
        uint64_t v242 = v233[7];
        v243 = &v230[v242];
        v244 = (_OWORD *)(v231 + v242);
        long long v245 = v244[1];
        *(_OWORD *)v243 = *v244;
        *((_OWORD *)v243 + 1) = v245;
        uint64_t v246 = v233[8];
        v247 = &v230[v246];
        v248 = (_OWORD *)(v231 + v246);
        long long v249 = v248[1];
        *(_OWORD *)v247 = *v248;
        *((_OWORD *)v247 + 1) = v249;
        uint64_t v250 = v233[9];
        v251 = &v230[v250];
        v252 = (_OWORD *)(v231 + v250);
        long long v253 = v252[1];
        *(_OWORD *)v251 = *v252;
        *((_OWORD *)v251 + 1) = v253;
        uint64_t v254 = v233[10];
        v255 = &v230[v254];
        v256 = (_OWORD *)(v231 + v254);
        long long v257 = v256[1];
        *(_OWORD *)v255 = *v256;
        *((_OWORD *)v255 + 1) = v257;
        uint64_t v258 = v233[11];
        v259 = &v230[v258];
        v260 = (_OWORD *)(v231 + v258);
        long long v261 = v260[1];
        *(_OWORD *)v259 = *v260;
        *((_OWORD *)v259 + 1) = v261;
        memcpy(&v230[v233[12]], (const void *)(v231 + v233[12]), 0x1A1uLL);
        uint64_t v262 = v233[13];
        v263 = &v230[v262];
        v264 = (_OWORD *)(v231 + v262);
        long long v265 = v264[1];
        *(_OWORD *)v263 = *v264;
        *((_OWORD *)v263 + 1) = v265;
        uint64_t v266 = v233[14];
        v267 = &v230[v266];
        v268 = (_OWORD *)(v231 + v266);
        long long v269 = v268[1];
        *(_OWORD *)v267 = *v268;
        *((_OWORD *)v267 + 1) = v269;
        v230[v233[15]] = *(unsigned char *)(v231 + v233[15]);
        *(void *)&v230[v233[16]] = *(void *)(v231 + v233[16]);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v17 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v19 = v18[5];
        int v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_20A8C3E10();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        uint64_t v63 = v18[6];
        int v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        uint64_t v66 = sub_20A8C3D00();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
          memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        v302 = v18;
        uint64_t v113 = v18[7];
        v298 = a1;
        uint64_t v114 = (char *)a1 + v113;
        uint64_t v115 = (char *)a2 + v113;
        *(void *)uint64_t v114 = *(void *)((char *)a2 + v113);
        v114[8] = *((unsigned char *)a2 + v113 + 8);
        *((void *)v114 + 2) = *(void *)((char *)a2 + v113 + 16);
        v114[24] = *((unsigned char *)a2 + v113 + 24);
        *((void *)v114 + 4) = *(void *)((char *)a2 + v113 + 32);
        v114[40] = *((unsigned char *)a2 + v113 + 40);
        uint64_t v116 = *(void *)((char *)a2 + v113 + 56);
        *((void *)v114 + 6) = *(void *)((char *)a2 + v113 + 48);
        *((void *)v114 + 7) = v116;
        uint64_t v117 = *(void *)((char *)a2 + v113 + 72);
        *((void *)v114 + 8) = *(void *)((char *)a2 + v113 + 64);
        *((void *)v114 + 9) = v117;
        uint64_t v118 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v119 = v118[9];
        v306 = &v114[v119];
        uint64_t v120 = &v115[v119];
        uint64_t v121 = sub_20A8C2EB0();
        uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v290 = v122;
        uint64_t v292 = v121;
        v122(v306, v120, v121);
        uint64_t v123 = v118[10];
        v124 = &v114[v123];
        v125 = &v115[v123];
        uint64_t v126 = sub_20A8C4030();
        v286 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
        v286(v124, v125, v126);
        v295 = v118;
        uint64_t v127 = v118[11];
        v128 = &v114[v127];
        v129 = &v115[v127];
        uint64_t v130 = sub_20A8C2990();
        v282 = *(void (**)(char *, char *))(*(void *)(v130 - 8) + 16);
        uint64_t v284 = v130;
        v282(v128, v129);
        uint64_t v131 = type metadata accessor for QuoteViewModel();
        uint64_t v132 = *(int *)(v131 + 20);
        v133 = &v114[v132];
        v134 = &v115[v132];
        uint64_t v135 = sub_20A8C3410();
        v278 = *(void (**)(char *, char *))(*(void *)(v135 - 8) + 16);
        uint64_t v280 = v135;
        v278(v133, v134);
        uint64_t v136 = *(int *)(v131 + 24);
        v137 = &v114[v136];
        v138 = &v115[v136];
        uint64_t v139 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v307 = *(void *)(v139 - 8);
        v276 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v307 + 48);
        uint64_t v288 = v126;
        if (v276(v138, 1, v139))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v137, v138, *(void *)(*(void *)(v140 - 8) + 64));
          a1 = v298;
        }
        else
        {
          uint64_t v184 = v139;
          uint64_t v272 = v131;
          uint64_t v185 = sub_20A8C2BC0();
          uint64_t v186 = *(void *)(v185 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v138, 3, v185))
          {
            uint64_t v187 = v307;
            memcpy(v137, v138, *(void *)(v307 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v186 + 16))(v137, v138, v185);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v137, 0, 3, v185);
            uint64_t v187 = v307;
          }
          a1 = v298;
          uint64_t v139 = v184;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v137, 0, 1, v184);
          uint64_t v131 = v272;
        }
        uint64_t v204 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        v205 = &v114[v204];
        v206 = &v115[v204];
        uint64_t v207 = *(void *)(v131 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48))(&v115[v204], 1, v131))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
          memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
          v209 = v302;
        }
        else
        {
          uint64_t v274 = v207;
          *(void *)v205 = *(void *)v206;
          v205[8] = v206[8];
          *((void *)v205 + 2) = *((void *)v206 + 2);
          v205[24] = v206[24];
          *((void *)v205 + 4) = *((void *)v206 + 4);
          v205[40] = v206[40];
          uint64_t v210 = *((void *)v206 + 7);
          *((void *)v205 + 6) = *((void *)v206 + 6);
          *((void *)v205 + 7) = v210;
          uint64_t v300 = v139;
          uint64_t v211 = *((void *)v206 + 9);
          *((void *)v205 + 8) = *((void *)v206 + 8);
          *((void *)v205 + 9) = v211;
          v212 = v295;
          uint64_t v213 = v295[9];
          v214 = &v205[v213];
          v215 = &v206[v213];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v290(v214, v215, v292);
          v286(&v205[v212[10]], &v206[v212[10]], v288);
          ((void (*)(char *, char *, uint64_t))v282)(&v205[v212[11]], &v206[v212[11]], v284);
          ((void (*)(char *, char *, uint64_t))v278)(&v205[*(int *)(v131 + 20)], &v206[*(int *)(v131 + 20)], v280);
          uint64_t v216 = *(int *)(v131 + 24);
          v217 = &v205[v216];
          v218 = &v206[v216];
          if (v276(&v206[v216], 1, v300))
          {
            sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
            memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
            v209 = v302;
          }
          else
          {
            uint64_t v224 = v131;
            uint64_t v225 = sub_20A8C2BC0();
            uint64_t v226 = *(void *)(v225 - 8);
            v209 = v302;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v218, 3, v225))
            {
              uint64_t v227 = v307;
              memcpy(v217, v218, *(void *)(v307 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v226 + 16))(v217, v218, v225);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v217, 0, 3, v225);
              uint64_t v227 = v307;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v227 + 56))(v217, 0, 1, v300);
            uint64_t v131 = v224;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v274 + 56))(v205, 0, 1, v131);
        }
        *((unsigned char *)a1 + v209[8]) = *((unsigned char *)a2 + v209[8]);
        sub_20A4DCB08(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
        memcpy((char *)a1 + *(int *)(v270 + 48), (char *)a2 + *(int *)(v270 + 48), 0x208uLL);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v25 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
        uint64_t v27 = *(int *)(v26 + 48);
        id v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        long long v30 = *((_OWORD *)v29 + 1);
        *(_OWORD *)id v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v30;
        long long v31 = *((_OWORD *)v29 + 3);
        *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
        *((_OWORD *)v28 + 3) = v31;
        long long v32 = *((_OWORD *)v29 + 5);
        *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
        *((_OWORD *)v28 + 5) = v32;
        long long v33 = *((_OWORD *)v29 + 7);
        *((_OWORD *)v28 + 6) = *((_OWORD *)v29 + 6);
        *((_OWORD *)v28 + 7) = v33;
        long long v34 = *((_OWORD *)v29 + 9);
        *((_OWORD *)v28 + 8) = *((_OWORD *)v29 + 8);
        *((_OWORD *)v28 + 9) = v34;
        *((void *)v28 + 20) = *((void *)v29 + 20);
        *(_OWORD *)(v28 + 184) = *(_OWORD *)(v29 + 184);
        *(_OWORD *)(v28 + 168) = *(_OWORD *)(v29 + 168);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v35 = sub_20A8C3E10();
        uint64_t v36 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(a2, 1, v35))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v36 + 16))(a1, a2, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(a1, 0, 1, v35);
        }
        uint64_t v69 = (int *)type metadata accessor for QuoteDetailViewModel();
        uint64_t v70 = v69[5];
        v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = sub_20A8C2CB0();
        uint64_t v74 = *(void *)(v73 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
        {
          sub_20A4DCAB4(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
          memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
        }
        uint64_t v141 = v69[6];
        v142 = (void *)((char *)a1 + v141);
        v143 = (void *)((char *)a2 + v141);
        uint64_t v144 = v143[1];
        void *v142 = *v143;
        v142[1] = v144;
        v145 = (void *)v143[2];
        v142[2] = v145;
        *(void *)((char *)a1 + v69[7]) = *(void *)((char *)a2 + v69[7]);
        *(void *)((char *)a1 + v69[8]) = *(void *)((char *)a2 + v69[8]);
        uint64_t v146 = v69[9];
        v147 = *(void **)((char *)a2 + v146);
        *(void *)((char *)a1 + v146) = v147;
        uint64_t v148 = v69[10];
        v149 = *(void **)((char *)a2 + v148);
        *(void *)((char *)a1 + v148) = v149;
        sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
        uint64_t v151 = *(int *)(v150 + 48);
        v152 = (char *)a1 + v151;
        v153 = (char *)a2 + v151;
        long long v154 = *((_OWORD *)v153 + 1);
        *(_OWORD *)v152 = *(_OWORD *)v153;
        *((_OWORD *)v152 + 1) = v154;
        long long v155 = *((_OWORD *)v153 + 3);
        *((_OWORD *)v152 + 2) = *((_OWORD *)v153 + 2);
        *((_OWORD *)v152 + 3) = v155;
        v152[64] = v153[64];
        uint64_t v156 = *((void *)v153 + 10);
        *((void *)v152 + 9) = *((void *)v153 + 9);
        *((void *)v152 + 10) = v156;
        *((void *)v152 + 11) = *((void *)v153 + 11);
        long long v157 = *((_OWORD *)v153 + 11);
        *((_OWORD *)v152 + 10) = *((_OWORD *)v153 + 10);
        *((_OWORD *)v152 + 11) = v157;
        v152[192] = v153[192];
        long long v158 = *((_OWORD *)v153 + 7);
        *((_OWORD *)v152 + 6) = *((_OWORD *)v153 + 6);
        *((_OWORD *)v152 + 7) = v158;
        long long v159 = *((_OWORD *)v153 + 9);
        *((_OWORD *)v152 + 8) = *((_OWORD *)v153 + 8);
        *((_OWORD *)v152 + 9) = v159;
        *(_OWORD *)(v152 + 200) = *(_OWORD *)(v153 + 200);
        long long v160 = *(_OWORD *)(v153 + 216);
        *(_OWORD *)(v152 + 232) = *(_OWORD *)(v153 + 232);
        *(_OWORD *)(v152 + 216) = v160;
        *(_OWORD *)(v152 + 248) = *(_OWORD *)(v153 + 248);
        v152[264] = v153[264];
        swift_bridgeObjectRetain();
        id v161 = v145;
        swift_retain();
        swift_retain();
        id v162 = v147;
        id v163 = v149;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v38 = sub_20A8C3F00();
        uint64_t v39 = *(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16);
        v39(a1, a2, v38);
        v303 = (int *)type metadata accessor for StockFeedEarningsViewModel();
        uint64_t v40 = v303[5];
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        v39((void *)((char *)a1 + v40), (void *)((char *)a2 + v40), v38);
        id v43 = (int *)type metadata accessor for StockEarningsModel();
        uint64_t v44 = v43[5];
        id v45 = &v41[v44];
        uint64_t v46 = &v42[v44];
        uint64_t v47 = sub_20A8C2800();
        uint64_t v48 = *(void *)(v47 - 8);
        v293 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
        v293(v45, v46, v47);
        uint64_t v49 = v43[6];
        id v50 = &v41[v49];
        id v51 = &v42[v49];
        v296 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
        if (v296(&v42[v49], 1, v47))
        {
          sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
          memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          v293(v50, v51, v47);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v50, 0, 1, v47);
        }
        uint64_t v76 = v43[7];
        v77 = &v41[v76];
        v78 = &v42[v76];
        uint64_t v79 = sub_20A8C2AF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        v41[v43[8]] = v42[v43[8]];
        v41[v43[9]] = v42[v43[9]];
        v293((char *)a1 + v303[6], (char *)a2 + v303[6], v47);
        uint64_t v80 = v303[7];
        int v81 = (char *)a1 + v80;
        v82 = (char *)a2 + v80;
        if (v296((char *)a2 + v80, 1, v47))
        {
          sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
          memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          v293(v81, v82, v47);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v81, 0, 1, v47);
        }
        uint64_t v164 = v303[8];
        v165 = (void *)((char *)a1 + v164);
        v166 = (void *)((char *)a2 + v164);
        uint64_t v167 = v166[1];
        void *v165 = *v166;
        v165[1] = v167;
        *((unsigned char *)a1 + v303[9]) = *((unsigned char *)a2 + v303[9]);
        uint64_t v168 = v303[10];
        v169 = (void *)((char *)a1 + v168);
        v170 = (void *)((char *)a2 + v168);
        uint64_t v171 = v170[1];
        void *v169 = *v170;
        v169[1] = v171;
        *((unsigned char *)a1 + v303[11]) = *((unsigned char *)a2 + v303[11]);
        *(void *)((char *)a1 + v303[12]) = *(void *)((char *)a2 + v303[12]);
        sub_20A4DCB08(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
        uint64_t v173 = *(int *)(v172 + 48);
        v174 = (_OWORD *)((char *)a1 + v173);
        v175 = (_OWORD *)((char *)a2 + v173);
        long long v176 = v175[5];
        v174[4] = v175[4];
        v174[5] = v176;
        long long v177 = v175[7];
        v174[6] = v175[6];
        v174[7] = v177;
        long long v178 = v175[1];
        _OWORD *v174 = *v175;
        v174[1] = v178;
        long long v179 = v175[3];
        v174[2] = v175[2];
        v174[3] = v179;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v53 = a2[1];
        *a1 = *a2;
        a1[1] = v53;
        long long v54 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v54;
        long long v55 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v55;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v56 = sub_20A8CCE00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_20A4DCAB4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A4DCB08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A4DCB78(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      unint64_t v4 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v5 = a1 + v4[5];
      uint64_t v6 = sub_20A8C3E10();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      uint64_t v8 = a1 + v4[6];
      uint64_t v9 = sub_20A8C3D00();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      uint64_t v11 = a1 + v4[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v13 = v11 + v12[9];
      uint64_t v14 = sub_20A8C2EB0();
      v91 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
      uint64_t v93 = v14;
      v91(v13);
      uint64_t v15 = v11 + v12[10];
      uint64_t v16 = sub_20A8C4030();
      uint64_t v89 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      v89(v15, v16);
      uint64_t v17 = v11 + v12[11];
      uint64_t v18 = sub_20A8C2990();
      uint64_t v87 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v87(v17, v18);
      uint64_t v19 = type metadata accessor for QuoteViewModel();
      uint64_t v20 = v11 + *(int *)(v19 + 20);
      uint64_t v21 = sub_20A8C3410();
      uint64_t v85 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
      v85(v20, v21);
      uint64_t v22 = v11 + *(int *)(v19 + 24);
      uint64_t v23 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v83 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
      if (!v83(v22, 1, v23))
      {
        uint64_t v24 = sub_20A8C2BC0();
        uint64_t v82 = *(void *)(v24 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v22, 3, v24)) {
          (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v22, v24);
        }
      }
      uint64_t v25 = v11 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v25, 1, v19))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v91)(v25 + v12[9], v93);
        v89(v25 + v12[10], v16);
        v87(v25 + v12[11], v18);
        v85(v25 + *(int *)(v19 + 20), v21);
        uint64_t v26 = v25 + *(int *)(v19 + 24);
        if (!v83(v26, 1, v23))
        {
          uint64_t v27 = sub_20A8C2BC0();
          uint64_t v28 = *(void *)(v27 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 3, v27)) {
            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
          }
        }
      }
      sub_20A42CB10();
      a1 += *(int *)(v29 + 48);
      uint64_t v30 = sub_20A8CA9F0();
      goto LABEL_40;
    case 1:
      uint64_t v31 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(a1, v31);
      long long v32 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v33 = a1 + v32[5];
      uint64_t v34 = sub_20A8C3E10();
      uint64_t v35 = *(void *)(v34 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
        (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      }
      uint64_t v36 = a1 + v32[6];
      uint64_t v37 = sub_20A8C3D00();
      uint64_t v38 = *(void *)(v37 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
      }
      uint64_t v39 = a1 + v32[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v41 = v39 + v40[9];
      uint64_t v42 = sub_20A8C2EB0();
      uint64_t v92 = *(void (**)(uint64_t))(*(void *)(v42 - 8) + 8);
      uint64_t v94 = v42;
      v92(v41);
      uint64_t v43 = v39 + v40[10];
      uint64_t v44 = sub_20A8C4030();
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8);
      v90(v43, v44);
      uint64_t v45 = v39 + v40[11];
      uint64_t v46 = sub_20A8C2990();
      uint64_t v88 = *(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8);
      v88(v45, v46);
      uint64_t v47 = type metadata accessor for QuoteViewModel();
      uint64_t v48 = v39 + *(int *)(v47 + 20);
      uint64_t v49 = sub_20A8C3410();
      v86 = *(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8);
      v86(v48, v49);
      uint64_t v50 = v39 + *(int *)(v47 + 24);
      uint64_t v51 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48);
      if (!v84(v50, 1, v51))
      {
        uint64_t v52 = sub_20A8C2BC0();
        uint64_t v53 = *(void *)(v52 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v50, 3, v52)) {
          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v50, v52);
        }
      }
      uint64_t v54 = v39 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v54, 1, v47);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))v92)(v54 + v40[9], v94);
      v90(v54 + v40[10], v44);
      v88(v54 + v40[11], v46);
      v86(v54 + *(int *)(v47 + 20), v49);
      uint64_t v55 = v54 + *(int *)(v47 + 24);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v84)(v55, 1, v51);
      if (result) {
        return result;
      }
      uint64_t v56 = sub_20A8C2BC0();
      uint64_t v95 = *(void *)(v56 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v55, 3, v56);
      if (result) {
        return result;
      }
      uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t))(v95 + 8);
      uint64_t v81 = v55;
      uint64_t v80 = v56;
      goto LABEL_41;
    case 2:
      uint64_t v57 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(a1, v57);
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      goto LABEL_36;
    case 3:
      uint64_t v58 = sub_20A8C3E10();
      uint64_t v59 = *(void *)(v58 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(a1, 1, v58)) {
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(a1, v58);
      }
      uint64_t v60 = (int *)type metadata accessor for QuoteDetailViewModel();
      uint64_t v61 = a1 + v60[5];
      uint64_t v62 = sub_20A8C2CB0();
      uint64_t v63 = *(void *)(v62 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62)) {
        (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v61, v62);
      }
      uint64_t v64 = a1 + v60[6];
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();

      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 4:
      uint64_t v65 = sub_20A8C3F00();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8);
      v66(a1, v65);
      uint64_t v67 = (int *)type metadata accessor for StockFeedEarningsViewModel();
      uint64_t v68 = a1 + v67[5];
      v66(v68, v65);
      uint64_t v69 = (int *)type metadata accessor for StockEarningsModel();
      uint64_t v70 = v68 + v69[5];
      uint64_t v71 = sub_20A8C2800();
      uint64_t v72 = *(void *)(v71 - 8);
      uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v73(v70, v71);
      uint64_t v74 = v68 + v69[6];
      uint64_t v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
      if (!v75(v74, 1, v71)) {
        v73(v74, v71);
      }
      uint64_t v76 = v68 + v69[7];
      uint64_t v77 = sub_20A8C2AF0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v77 - 8) + 8))(v76, v77);
      v73(a1 + v67[6], v71);
      uint64_t v78 = a1 + v67[7];
      if (!v75(v78, 1, v71)) {
        v73(v78, v71);
      }
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 5:
LABEL_36:
      return swift_bridgeObjectRelease();
    case 7:
      uint64_t v30 = sub_20A8CCE00();
LABEL_40:
      uint64_t v79 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8);
      uint64_t v80 = v30;
      uint64_t v81 = a1;
LABEL_41:
      uint64_t result = v79(v81, v80);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_20A4DDA74(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_20A8C3E10();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v56 = v7[6];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_20A8C3D00();
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v296 = v7;
      uint64_t v83 = v7[7];
      uint64_t v299 = a1;
      v302 = a2;
      uint64_t v84 = (char *)a1 + v83;
      uint64_t v85 = (char *)a2 + v83;
      *(void *)uint64_t v84 = *(void *)((char *)a2 + v83);
      v84[8] = *((unsigned char *)a2 + v83 + 8);
      *((void *)v84 + 2) = *(void *)((char *)a2 + v83 + 16);
      v84[24] = *((unsigned char *)a2 + v83 + 24);
      *((void *)v84 + 4) = *(void *)((char *)a2 + v83 + 32);
      v84[40] = *((unsigned char *)a2 + v83 + 40);
      uint64_t v86 = *(void *)((char *)a2 + v83 + 56);
      *((void *)v84 + 6) = *(void *)((char *)a2 + v83 + 48);
      *((void *)v84 + 7) = v86;
      uint64_t v87 = *(void *)((char *)a2 + v83 + 72);
      *((void *)v84 + 8) = *(void *)((char *)a2 + v83 + 64);
      *((void *)v84 + 9) = v87;
      uint64_t v88 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v89 = v88[9];
      uint64_t v90 = &v84[v89];
      v91 = &v85[v89];
      uint64_t v92 = sub_20A8C2EB0();
      uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v290 = v93;
      uint64_t v293 = v92;
      v93(v90, v91, v92);
      uint64_t v94 = v88[10];
      uint64_t v95 = &v84[v94];
      uint64_t v96 = &v85[v94];
      uint64_t v97 = sub_20A8C4030();
      v285 = *(void (**)(char *, char *))(*(void *)(v97 - 8) + 16);
      uint64_t v287 = v97;
      v285(v95, v96);
      uint64_t v98 = v88[11];
      v99 = &v84[v98];
      v100 = &v85[v98];
      uint64_t v101 = sub_20A8C2990();
      v281 = *(void (**)(char *, char *))(*(void *)(v101 - 8) + 16);
      uint64_t v283 = v101;
      v281(v99, v100);
      uint64_t v102 = type metadata accessor for QuoteViewModel();
      uint64_t v103 = *(int *)(v102 + 20);
      v104 = &v84[v103];
      v105 = &v85[v103];
      uint64_t v106 = sub_20A8C3410();
      v277 = *(void (**)(char *, char *))(*(void *)(v106 - 8) + 16);
      uint64_t v279 = v106;
      v277(v104, v105);
      uint64_t v107 = *(int *)(v102 + 24);
      v108 = &v84[v107];
      uint64_t v109 = &v85[v107];
      uint64_t v110 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v111 = *(void *)(v110 - 8);
      v275 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48);
      if (v275(v109, 1, v110))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v108, v109, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        uint64_t v271 = v110;
        uint64_t v183 = sub_20A8C2BC0();
        uint64_t v184 = *(void *)(v183 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v109, 3, v183))
        {
          memcpy(v108, v109, *(void *)(v111 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v108, v109, v183);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v108, 0, 3, v183);
        }
        uint64_t v110 = v271;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v108, 0, 1, v271);
      }
      uint64_t v188 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      v189 = &v84[v188];
      v190 = &v85[v188];
      uint64_t v191 = *(void *)(v102 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v190, 1, v102))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
        memcpy(v189, v190, *(void *)(*(void *)(v192 - 8) + 64));
        a1 = v299;
        v193 = v302;
        uint64_t v194 = v296;
      }
      else
      {
        uint64_t v273 = v191;
        *(void *)v189 = *(void *)v190;
        v189[8] = v190[8];
        *((void *)v189 + 2) = *((void *)v190 + 2);
        v189[24] = v190[24];
        *((void *)v189 + 4) = *((void *)v190 + 4);
        v189[40] = v190[40];
        uint64_t v195 = *((void *)v190 + 7);
        *((void *)v189 + 6) = *((void *)v190 + 6);
        *((void *)v189 + 7) = v195;
        uint64_t v196 = *((void *)v190 + 9);
        *((void *)v189 + 8) = *((void *)v190 + 8);
        *((void *)v189 + 9) = v196;
        uint64_t v197 = v88[9];
        v198 = &v189[v197];
        v199 = &v190[v197];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v290(v198, v199, v293);
        ((void (*)(char *, char *, uint64_t))v285)(&v189[v88[10]], &v190[v88[10]], v287);
        ((void (*)(char *, char *, uint64_t))v281)(&v189[v88[11]], &v190[v88[11]], v283);
        ((void (*)(char *, char *, uint64_t))v277)(&v189[*(int *)(v102 + 20)], &v190[*(int *)(v102 + 20)], v279);
        uint64_t v200 = *(int *)(v102 + 24);
        v201 = &v189[v200];
        v202 = &v190[v200];
        if (v275(&v190[v200], 1, v110))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v201, v202, *(void *)(*(void *)(v203 - 8) + 64));
          a1 = v299;
        }
        else
        {
          uint64_t v220 = v110;
          uint64_t v221 = sub_20A8C2BC0();
          uint64_t v222 = *(void *)(v221 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v202, 3, v221))
          {
            memcpy(v201, v202, *(void *)(v111 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v201, v202, v221);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v201, 0, 3, v221);
          }
          a1 = v299;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v201, 0, 1, v220);
        }
        uint64_t v194 = v296;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v273 + 56))(v189, 0, 1, v102);
        v193 = v302;
      }
      *((unsigned char *)a1 + v194[8]) = *((unsigned char *)v193 + v194[8]);
      sub_20A42CB10();
      uint64_t v227 = *(int *)(v226 + 48);
      uint64_t v228 = (char *)a1 + v227;
      uint64_t v229 = (uint64_t)v193 + v227;
      uint64_t v230 = sub_20A8CA9F0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v230 - 8) + 16))(v228, v229, v230);
      uint64_t v231 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      uint64_t v232 = v231[5];
      v233 = &v228[v232];
      uint64_t v234 = (_OWORD *)(v229 + v232);
      long long v235 = v234[1];
      *(_OWORD *)v233 = *v234;
      *((_OWORD *)v233 + 1) = v235;
      uint64_t v236 = v231[6];
      long long v237 = &v228[v236];
      uint64_t v238 = (_OWORD *)(v229 + v236);
      long long v239 = v238[1];
      *(_OWORD *)long long v237 = *v238;
      *((_OWORD *)v237 + 1) = v239;
      uint64_t v240 = v231[7];
      long long v241 = &v228[v240];
      uint64_t v242 = (_OWORD *)(v229 + v240);
      long long v243 = v242[1];
      *(_OWORD *)long long v241 = *v242;
      *((_OWORD *)v241 + 1) = v243;
      uint64_t v244 = v231[8];
      long long v245 = &v228[v244];
      uint64_t v246 = (_OWORD *)(v229 + v244);
      long long v247 = v246[1];
      *(_OWORD *)long long v245 = *v246;
      *((_OWORD *)v245 + 1) = v247;
      uint64_t v248 = v231[9];
      long long v249 = &v228[v248];
      uint64_t v250 = (_OWORD *)(v229 + v248);
      long long v251 = v250[1];
      *(_OWORD *)long long v249 = *v250;
      *((_OWORD *)v249 + 1) = v251;
      uint64_t v252 = v231[10];
      long long v253 = &v228[v252];
      uint64_t v254 = (_OWORD *)(v229 + v252);
      long long v255 = v254[1];
      *(_OWORD *)long long v253 = *v254;
      *((_OWORD *)v253 + 1) = v255;
      uint64_t v256 = v231[11];
      long long v257 = &v228[v256];
      uint64_t v258 = (_OWORD *)(v229 + v256);
      long long v259 = v258[1];
      *(_OWORD *)long long v257 = *v258;
      *((_OWORD *)v257 + 1) = v259;
      memcpy(&v228[v231[12]], (const void *)(v229 + v231[12]), 0x1A1uLL);
      uint64_t v260 = v231[13];
      long long v261 = &v228[v260];
      uint64_t v262 = (_OWORD *)(v229 + v260);
      long long v263 = v262[1];
      *(_OWORD *)long long v261 = *v262;
      *((_OWORD *)v261 + 1) = v263;
      uint64_t v264 = v231[14];
      long long v265 = &v228[v264];
      uint64_t v266 = (_OWORD *)(v229 + v264);
      long long v267 = v266[1];
      *(_OWORD *)long long v265 = *v266;
      *((_OWORD *)v265 + 1) = v267;
      v228[v231[15]] = *(unsigned char *)(v229 + v231[15]);
      *(void *)&v228[v231[16]] = *(void *)(v229 + v231[16]);
      goto LABEL_64;
    case 1u:
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_20A8C3E10();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v62 = v15[6];
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = sub_20A8C3D00();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      v297 = v15;
      uint64_t v113 = v15[7];
      uint64_t v300 = a1;
      v303 = a2;
      uint64_t v114 = (char *)a1 + v113;
      uint64_t v115 = (char *)a2 + v113;
      *(void *)uint64_t v114 = *(void *)((char *)a2 + v113);
      v114[8] = *((unsigned char *)a2 + v113 + 8);
      *((void *)v114 + 2) = *(void *)((char *)a2 + v113 + 16);
      v114[24] = *((unsigned char *)a2 + v113 + 24);
      *((void *)v114 + 4) = *(void *)((char *)a2 + v113 + 32);
      v114[40] = *((unsigned char *)a2 + v113 + 40);
      uint64_t v116 = *(void *)((char *)a2 + v113 + 56);
      *((void *)v114 + 6) = *(void *)((char *)a2 + v113 + 48);
      *((void *)v114 + 7) = v116;
      uint64_t v117 = *(void *)((char *)a2 + v113 + 72);
      *((void *)v114 + 8) = *(void *)((char *)a2 + v113 + 64);
      *((void *)v114 + 9) = v117;
      uint64_t v118 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v119 = v118[9];
      uint64_t v120 = &v114[v119];
      uint64_t v121 = &v115[v119];
      uint64_t v122 = sub_20A8C2EB0();
      uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v291 = v123;
      uint64_t v294 = v122;
      v123(v120, v121, v122);
      uint64_t v124 = v118[10];
      v125 = &v114[v124];
      uint64_t v126 = &v115[v124];
      uint64_t v127 = sub_20A8C4030();
      v286 = *(void (**)(char *, char *))(*(void *)(v127 - 8) + 16);
      uint64_t v288 = v127;
      v286(v125, v126);
      uint64_t v128 = v118[11];
      v129 = &v114[v128];
      uint64_t v130 = &v115[v128];
      uint64_t v131 = sub_20A8C2990();
      v282 = *(void (**)(char *, char *))(*(void *)(v131 - 8) + 16);
      uint64_t v284 = v131;
      v282(v129, v130);
      uint64_t v132 = type metadata accessor for QuoteViewModel();
      uint64_t v133 = *(int *)(v132 + 20);
      v134 = &v114[v133];
      uint64_t v135 = &v115[v133];
      uint64_t v136 = sub_20A8C3410();
      v278 = *(void (**)(char *, char *))(*(void *)(v136 - 8) + 16);
      uint64_t v280 = v136;
      v278(v134, v135);
      uint64_t v137 = *(int *)(v132 + 24);
      v138 = &v114[v137];
      uint64_t v139 = &v115[v137];
      uint64_t v140 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v141 = *(void *)(v140 - 8);
      v276 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48);
      if (v276(v139, 1, v140))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v138, v139, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        uint64_t v185 = v141;
        uint64_t v272 = v118;
        uint64_t v186 = sub_20A8C2BC0();
        uint64_t v187 = *(void *)(v186 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v139, 3, v186))
        {
          uint64_t v141 = v185;
          memcpy(v138, v139, *(void *)(v185 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v187 + 16))(v138, v139, v186);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v138, 0, 3, v186);
          uint64_t v141 = v185;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
        uint64_t v118 = v272;
      }
      uint64_t v204 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      v205 = &v114[v204];
      v206 = &v115[v204];
      uint64_t v207 = *(void *)(v132 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v207 + 48))(&v115[v204], 1, v132))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
        memcpy(v205, v206, *(void *)(*(void *)(v208 - 8) + 64));
        a1 = v300;
        v209 = v303;
        uint64_t v210 = v297;
      }
      else
      {
        uint64_t v270 = v141;
        uint64_t v274 = v207;
        *(void *)v205 = *(void *)v206;
        v205[8] = v206[8];
        *((void *)v205 + 2) = *((void *)v206 + 2);
        v205[24] = v206[24];
        *((void *)v205 + 4) = *((void *)v206 + 4);
        v205[40] = v206[40];
        uint64_t v211 = *((void *)v206 + 7);
        *((void *)v205 + 6) = *((void *)v206 + 6);
        *((void *)v205 + 7) = v211;
        uint64_t v212 = *((void *)v206 + 9);
        *((void *)v205 + 8) = *((void *)v206 + 8);
        *((void *)v205 + 9) = v212;
        uint64_t v213 = v118[9];
        v214 = &v205[v213];
        v215 = &v206[v213];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v291(v214, v215, v294);
        ((void (*)(char *, char *, uint64_t))v286)(&v205[v118[10]], &v206[v118[10]], v288);
        ((void (*)(char *, char *, uint64_t))v282)(&v205[v118[11]], &v206[v118[11]], v284);
        ((void (*)(char *, char *, uint64_t))v278)(&v205[*(int *)(v132 + 20)], &v206[*(int *)(v132 + 20)], v280);
        uint64_t v216 = *(int *)(v132 + 24);
        v217 = &v205[v216];
        v218 = &v206[v216];
        if (v276(&v206[v216], 1, v140))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
          a1 = v300;
        }
        else
        {
          uint64_t v223 = sub_20A8C2BC0();
          uint64_t v224 = *(void *)(v223 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v218, 3, v223))
          {
            uint64_t v225 = v270;
            memcpy(v217, v218, *(void *)(v270 + 64));
            a1 = v300;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v224 + 16))(v217, v218, v223);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v217, 0, 3, v223);
            a1 = v300;
            uint64_t v225 = v270;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v225 + 56))(v217, 0, 1, v140);
        }
        uint64_t v210 = v297;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v274 + 56))(v205, 0, 1, v132);
        v209 = v303;
      }
      *((unsigned char *)a1 + v210[8]) = *((unsigned char *)v209 + v210[8]);
      sub_20A4DCB08(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      memcpy((char *)a1 + *(int *)(v268 + 48), (char *)v209 + *(int *)(v268 + 48), 0x208uLL);
      goto LABEL_64;
    case 2u:
      uint64_t v22 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      long long v27 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v27;
      long long v28 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v28;
      long long v29 = *((_OWORD *)v26 + 5);
      *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
      *((_OWORD *)v25 + 5) = v29;
      long long v30 = *((_OWORD *)v26 + 7);
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      *((_OWORD *)v25 + 7) = v30;
      long long v31 = *((_OWORD *)v26 + 9);
      *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
      *((_OWORD *)v25 + 9) = v31;
      *((void *)v25 + 20) = *((void *)v26 + 20);
      *(_OWORD *)(v25 + 184) = *(_OWORD *)(v26 + 184);
      *(_OWORD *)(v25 + 168) = *(_OWORD *)(v26 + 168);
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 3u:
      uint64_t v32 = sub_20A8C3E10();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
      {
        sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v33 + 16))(a1, a2, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v32);
      }
      uint64_t v68 = (int *)type metadata accessor for QuoteDetailViewModel();
      uint64_t v69 = v68[5];
      uint64_t v70 = (char *)a1 + v69;
      uint64_t v71 = (char *)a2 + v69;
      uint64_t v72 = sub_20A8C2CB0();
      uint64_t v73 = *(void *)(v72 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
      {
        sub_20A4DCAB4(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
      }
      uint64_t v143 = v68[6];
      uint64_t v144 = (void *)((char *)a1 + v143);
      v145 = (void *)((char *)a2 + v143);
      uint64_t v146 = v145[1];
      *uint64_t v144 = *v145;
      v144[1] = v146;
      v147 = (void *)v145[2];
      v144[2] = v147;
      *(void *)((char *)a1 + v68[7]) = *(void *)((char *)a2 + v68[7]);
      *(void *)((char *)a1 + v68[8]) = *(void *)((char *)a2 + v68[8]);
      uint64_t v148 = v68[9];
      v149 = a2;
      uint64_t v150 = *(void **)((char *)a2 + v148);
      *(void *)((char *)a1 + v148) = v150;
      uint64_t v151 = v68[10];
      v152 = *(void **)((char *)v149 + v151);
      *(void *)((char *)a1 + v151) = v152;
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      uint64_t v154 = *(int *)(v153 + 48);
      long long v155 = (char *)a1 + v154;
      uint64_t v156 = (char *)v149 + v154;
      long long v157 = *((_OWORD *)v156 + 1);
      *(_OWORD *)long long v155 = *(_OWORD *)v156;
      *((_OWORD *)v155 + 1) = v157;
      long long v158 = *((_OWORD *)v156 + 3);
      *((_OWORD *)v155 + 2) = *((_OWORD *)v156 + 2);
      *((_OWORD *)v155 + 3) = v158;
      v155[64] = v156[64];
      uint64_t v159 = *((void *)v156 + 10);
      *((void *)v155 + 9) = *((void *)v156 + 9);
      *((void *)v155 + 10) = v159;
      *((void *)v155 + 11) = *((void *)v156 + 11);
      long long v160 = *((_OWORD *)v156 + 11);
      *((_OWORD *)v155 + 10) = *((_OWORD *)v156 + 10);
      *((_OWORD *)v155 + 11) = v160;
      v155[192] = v156[192];
      long long v161 = *((_OWORD *)v156 + 7);
      *((_OWORD *)v155 + 6) = *((_OWORD *)v156 + 6);
      *((_OWORD *)v155 + 7) = v161;
      long long v162 = *((_OWORD *)v156 + 9);
      *((_OWORD *)v155 + 8) = *((_OWORD *)v156 + 8);
      *((_OWORD *)v155 + 9) = v162;
      *(_OWORD *)(v155 + 200) = *(_OWORD *)(v156 + 200);
      long long v163 = *(_OWORD *)(v156 + 216);
      *(_OWORD *)(v155 + 232) = *(_OWORD *)(v156 + 232);
      *(_OWORD *)(v155 + 216) = v163;
      *(_OWORD *)(v155 + 248) = *(_OWORD *)(v156 + 248);
      v155[264] = v156[264];
      swift_bridgeObjectRetain();
      id v164 = v147;
      swift_retain();
      swift_retain();
      id v165 = v150;
      id v166 = v152;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 4u:
      uint64_t v35 = sub_20A8C3F00();
      uint64_t v36 = *(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16);
      v36(a1, a2, v35);
      uint64_t v37 = (int *)type metadata accessor for StockFeedEarningsViewModel();
      uint64_t v38 = v37[5];
      v298 = a1;
      v301 = (char *)a2;
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      v36((void *)((char *)a1 + v38), (void *)((char *)a2 + v38), v35);
      uint64_t v41 = (int *)type metadata accessor for StockEarningsModel();
      uint64_t v42 = v41[5];
      uint64_t v43 = &v39[v42];
      uint64_t v44 = &v40[v42];
      uint64_t v45 = sub_20A8C2800();
      uint64_t v46 = v43;
      uint64_t v47 = *(void *)(v45 - 8);
      v295 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v295(v46, v44, v45);
      uint64_t v48 = v41[6];
      uint64_t v49 = &v39[v48];
      uint64_t v50 = &v40[v48];
      uint64_t v292 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      uint64_t v289 = v47;
      if (v292(&v40[v48], 1, v45))
      {
        sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        v295(v49, v50, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v45);
      }
      a1 = v298;
      uint64_t v75 = v41[7];
      uint64_t v76 = &v39[v75];
      uint64_t v77 = &v40[v75];
      uint64_t v78 = sub_20A8C2AF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
      v39[v41[8]] = v40[v41[8]];
      v39[v41[9]] = v40[v41[9]];
      v295((char *)v298 + v37[6], &v301[v37[6]], v45);
      uint64_t v79 = v37[7];
      uint64_t v80 = (char *)v298 + v79;
      uint64_t v81 = &v301[v79];
      if (v292(&v301[v79], 1, v45))
      {
        sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
        memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        v295(v80, v81, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v289 + 56))(v80, 0, 1, v45);
      }
      uint64_t v167 = v37[8];
      uint64_t v168 = (void *)((char *)v298 + v167);
      v169 = &v301[v167];
      uint64_t v170 = *((void *)v169 + 1);
      *uint64_t v168 = *(void *)v169;
      v168[1] = v170;
      *((unsigned char *)v298 + v37[9]) = v301[v37[9]];
      uint64_t v171 = v37[10];
      uint64_t v172 = (void *)((char *)v298 + v171);
      uint64_t v173 = &v301[v171];
      uint64_t v174 = *((void *)v173 + 1);
      *uint64_t v172 = *(void *)v173;
      v172[1] = v174;
      *((unsigned char *)v298 + v37[11]) = v301[v37[11]];
      *(void *)((char *)v298 + v37[12]) = *(void *)&v301[v37[12]];
      sub_20A4DCB08(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
      uint64_t v176 = *(int *)(v175 + 48);
      long long v177 = (_OWORD *)((char *)v298 + v176);
      long long v178 = &v301[v176];
      long long v179 = *((_OWORD *)v178 + 5);
      v177[4] = *((_OWORD *)v178 + 4);
      v177[5] = v179;
      long long v180 = *((_OWORD *)v178 + 7);
      v177[6] = *((_OWORD *)v178 + 6);
      v177[7] = v180;
      long long v181 = *((_OWORD *)v178 + 1);
      *long long v177 = *(_OWORD *)v178;
      v177[1] = v181;
      long long v182 = *((_OWORD *)v178 + 3);
      v177[2] = *((_OWORD *)v178 + 2);
      v177[3] = v182;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 5u:
      uint64_t v52 = a2[1];
      *a1 = *a2;
      a1[1] = v52;
      long long v53 = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)a1 + 2) = v53;
      long long v54 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v54;
      swift_bridgeObjectRetain();
      goto LABEL_64;
    case 7u:
      uint64_t v55 = sub_20A8CCE00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
LABEL_64:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_20A4DF6EC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_20A4E7364(a1, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v3, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)v3 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_20A8C3E10();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v54 = v7[6];
        uint64_t v55 = (char *)v3 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = sub_20A8C3D00();
        uint64_t v58 = *(void *)(v57 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
        {
          sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
          memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        v297 = v7;
        uint64_t v81 = v7[7];
        uint64_t v82 = (char *)v3 + v81;
        uint64_t v293 = a2;
        uint64_t v83 = (char *)a2 + v81;
        uint64_t v84 = *(void *)((char *)a2 + v81);
        v82[8] = v83[8];
        *(void *)uint64_t v82 = v84;
        uint64_t v85 = *((void *)v83 + 2);
        v82[24] = v83[24];
        *((void *)v82 + 2) = v85;
        uint64_t v86 = *((void *)v83 + 4);
        v82[40] = v83[40];
        *((void *)v82 + 4) = v86;
        *((void *)v82 + 6) = *((void *)v83 + 6);
        *((void *)v82 + 7) = *((void *)v83 + 7);
        *((void *)v82 + 8) = *((void *)v83 + 8);
        *((void *)v82 + 9) = *((void *)v83 + 9);
        uint64_t v87 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v88 = v87[9];
        uint64_t v300 = &v82[v88];
        uint64_t v89 = &v83[v88];
        uint64_t v90 = sub_20A8C2EB0();
        v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v287 = v91;
        uint64_t v289 = v90;
        v91(v300, v89, v90);
        uint64_t v92 = v87[10];
        uint64_t v93 = &v82[v92];
        uint64_t v94 = &v83[v92];
        uint64_t v95 = sub_20A8C4030();
        uint64_t v283 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
        v283(v93, v94, v95);
        uint64_t v96 = v87[11];
        uint64_t v97 = &v82[v96];
        uint64_t v98 = &v83[v96];
        uint64_t v99 = sub_20A8C2990();
        uint64_t v279 = *(void (**)(char *, char *))(*(void *)(v99 - 8) + 16);
        uint64_t v281 = v99;
        v279(v97, v98);
        uint64_t v100 = type metadata accessor for QuoteViewModel();
        uint64_t v101 = *(int *)(v100 + 20);
        uint64_t v102 = &v82[v101];
        uint64_t v103 = &v83[v101];
        uint64_t v104 = sub_20A8C3410();
        v275 = *(void (**)(char *, char *))(*(void *)(v104 - 8) + 16);
        uint64_t v277 = v104;
        v275(v102, v103);
        uint64_t v105 = *(int *)(v100 + 24);
        uint64_t v106 = &v82[v105];
        uint64_t v107 = &v83[v105];
        uint64_t v108 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v109 = *(void *)(v108 - 8);
        uint64_t v273 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48);
        uint64_t v285 = v95;
        if (v273(v107, 1, v108))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
          uint64_t v111 = v293;
        }
        else
        {
          uint64_t v269 = v109;
          uint64_t v302 = v108;
          uint64_t v181 = sub_20A8C2BC0();
          uint64_t v182 = *(void *)(v181 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v107, 3, v181))
          {
            uint64_t v109 = v269;
            memcpy(v106, v107, *(void *)(v269 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v182 + 16))(v106, v107, v181);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56))(v106, 0, 3, v181);
            uint64_t v109 = v269;
          }
          uint64_t v111 = v293;
          uint64_t v108 = v302;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v302);
        }
        uint64_t v185 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v186 = &v82[v185];
        uint64_t v187 = &v83[v185];
        uint64_t v188 = *(void *)(v100 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v188 + 48))(&v83[v185], 1, v100))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
          memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
          v190 = v297;
        }
        else
        {
          uint64_t v295 = v188;
          uint64_t v271 = v109;
          uint64_t v191 = *(void *)v187;
          v186[8] = v187[8];
          *(void *)uint64_t v186 = v191;
          uint64_t v192 = *((void *)v187 + 2);
          v186[24] = v187[24];
          *((void *)v186 + 2) = v192;
          uint64_t v193 = *((void *)v187 + 4);
          v186[40] = v187[40];
          *((void *)v186 + 4) = v193;
          *((void *)v186 + 6) = *((void *)v187 + 6);
          *((void *)v186 + 7) = *((void *)v187 + 7);
          *((void *)v186 + 8) = *((void *)v187 + 8);
          uint64_t v304 = v108;
          *((void *)v186 + 9) = *((void *)v187 + 9);
          uint64_t v194 = v87;
          uint64_t v195 = v87[9];
          uint64_t v196 = &v186[v195];
          uint64_t v197 = &v187[v195];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v287(v196, v197, v289);
          v283(&v186[v194[10]], &v187[v194[10]], v285);
          ((void (*)(char *, char *, uint64_t))v279)(&v186[v194[11]], &v187[v194[11]], v281);
          ((void (*)(char *, char *, uint64_t))v275)(&v186[*(int *)(v100 + 20)], &v187[*(int *)(v100 + 20)], v277);
          uint64_t v198 = *(int *)(v100 + 24);
          v199 = &v186[v198];
          uint64_t v200 = &v187[v198];
          if (v273(&v187[v198], 1, v304))
          {
            sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
            memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
            v190 = v297;
          }
          else
          {
            uint64_t v219 = sub_20A8C2BC0();
            uint64_t v220 = *(void *)(v219 - 8);
            v190 = v297;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v220 + 48))(v200, 3, v219))
            {
              uint64_t v221 = v271;
              memcpy(v199, v200, *(void *)(v271 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v220 + 16))(v199, v200, v219);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v220 + 56))(v199, 0, 3, v219);
              uint64_t v221 = v271;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v221 + 56))(v199, 0, 1, v304);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v186, 0, 1, v100);
        }
        *((unsigned char *)v3 + v190[8]) = *((unsigned char *)v111 + v190[8]);
        sub_20A42CB10();
        uint64_t v226 = *(int *)(v225 + 48);
        uint64_t v227 = (char *)v3 + v226;
        uint64_t v228 = (uint64_t)v111 + v226;
        uint64_t v229 = sub_20A8CA9F0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
        uint64_t v230 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
        uint64_t v231 = v230[5];
        uint64_t v232 = &v227[v231];
        v233 = (_OWORD *)(v228 + v231);
        long long v234 = v233[1];
        *(_OWORD *)uint64_t v232 = *v233;
        *((_OWORD *)v232 + 1) = v234;
        uint64_t v235 = v230[6];
        uint64_t v236 = &v227[v235];
        long long v237 = (_OWORD *)(v228 + v235);
        long long v238 = v237[1];
        *(_OWORD *)uint64_t v236 = *v237;
        *((_OWORD *)v236 + 1) = v238;
        uint64_t v239 = v230[7];
        uint64_t v240 = &v227[v239];
        long long v241 = (_OWORD *)(v228 + v239);
        long long v242 = v241[1];
        *(_OWORD *)uint64_t v240 = *v241;
        *((_OWORD *)v240 + 1) = v242;
        uint64_t v243 = v230[8];
        uint64_t v244 = &v227[v243];
        long long v245 = (_OWORD *)(v228 + v243);
        long long v246 = v245[1];
        *(_OWORD *)uint64_t v244 = *v245;
        *((_OWORD *)v244 + 1) = v246;
        uint64_t v247 = v230[9];
        uint64_t v248 = &v227[v247];
        long long v249 = (_OWORD *)(v228 + v247);
        long long v250 = v249[1];
        *(_OWORD *)uint64_t v248 = *v249;
        *((_OWORD *)v248 + 1) = v250;
        uint64_t v251 = v230[10];
        uint64_t v252 = &v227[v251];
        long long v253 = (_OWORD *)(v228 + v251);
        long long v254 = v253[1];
        *(_OWORD *)uint64_t v252 = *v253;
        *((_OWORD *)v252 + 1) = v254;
        uint64_t v255 = v230[11];
        uint64_t v256 = &v227[v255];
        long long v257 = (_OWORD *)(v228 + v255);
        long long v258 = v257[1];
        *(_OWORD *)uint64_t v256 = *v257;
        *((_OWORD *)v256 + 1) = v258;
        memcpy(&v227[v230[12]], (const void *)(v228 + v230[12]), 0x1A1uLL);
        uint64_t v259 = v230[13];
        uint64_t v260 = &v227[v259];
        long long v261 = (_OWORD *)(v228 + v259);
        long long v262 = v261[1];
        *(_OWORD *)uint64_t v260 = *v261;
        *((_OWORD *)v260 + 1) = v262;
        uint64_t v263 = v230[14];
        uint64_t v264 = &v227[v263];
        long long v265 = (_OWORD *)(v228 + v263);
        long long v266 = v265[1];
        *(_OWORD *)uint64_t v264 = *v265;
        *((_OWORD *)v264 + 1) = v266;
        v227[v230[15]] = *(unsigned char *)(v228 + v230[15]);
        *(void *)&v227[v230[16]] = *(void *)(v228 + v230[16]);
        goto LABEL_65;
      case 1u:
        uint64_t v14 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v3, a2, v14);
        uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v16 = v15[5];
        uint64_t v17 = (char *)v3 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_20A8C3E10();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v60 = v15[6];
        uint64_t v61 = (char *)v3 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = sub_20A8C3D00();
        uint64_t v64 = *(void *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
        {
          sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
          memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v298 = v15;
        uint64_t v112 = v15[7];
        uint64_t v294 = v3;
        uint64_t v113 = (char *)v3 + v112;
        uint64_t v114 = (char *)a2 + v112;
        uint64_t v115 = *(void *)((char *)a2 + v112);
        v113[8] = v114[8];
        *(void *)uint64_t v113 = v115;
        uint64_t v116 = *((void *)v114 + 2);
        v113[24] = v114[24];
        *((void *)v113 + 2) = v116;
        uint64_t v117 = *((void *)v114 + 4);
        v113[40] = v114[40];
        *((void *)v113 + 4) = v117;
        *((void *)v113 + 6) = *((void *)v114 + 6);
        *((void *)v113 + 7) = *((void *)v114 + 7);
        *((void *)v113 + 8) = *((void *)v114 + 8);
        *((void *)v113 + 9) = *((void *)v114 + 9);
        uint64_t v118 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v119 = v118[9];
        v301 = &v113[v119];
        uint64_t v120 = &v114[v119];
        uint64_t v121 = sub_20A8C2EB0();
        uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v288 = v122;
        uint64_t v290 = v121;
        v122(v301, v120, v121);
        uint64_t v123 = v118[10];
        uint64_t v124 = &v113[v123];
        v125 = &v114[v123];
        uint64_t v126 = sub_20A8C4030();
        uint64_t v284 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
        v284(v124, v125, v126);
        uint64_t v127 = v118[11];
        uint64_t v128 = &v113[v127];
        v129 = &v114[v127];
        uint64_t v130 = sub_20A8C2990();
        uint64_t v280 = *(void (**)(char *, char *))(*(void *)(v130 - 8) + 16);
        uint64_t v282 = v130;
        v280(v128, v129);
        uint64_t v131 = type metadata accessor for QuoteViewModel();
        uint64_t v132 = *(int *)(v131 + 20);
        uint64_t v133 = &v113[v132];
        v134 = &v114[v132];
        uint64_t v135 = sub_20A8C3410();
        v276 = *(void (**)(char *, char *))(*(void *)(v135 - 8) + 16);
        uint64_t v278 = v135;
        v276(v133, v134);
        uint64_t v136 = *(int *)(v131 + 24);
        uint64_t v137 = &v113[v136];
        v138 = &v114[v136];
        uint64_t v139 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v140 = *(void *)(v139 - 8);
        uint64_t v274 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v140 + 48);
        uint64_t v286 = v126;
        if (v274(v138, 1, v139))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v137, v138, *(void *)(*(void *)(v141 - 8) + 64));
          uint64_t v3 = v294;
        }
        else
        {
          uint64_t v270 = v140;
          uint64_t v303 = v139;
          uint64_t v183 = sub_20A8C2BC0();
          uint64_t v184 = *(void *)(v183 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48))(v138, 3, v183))
          {
            uint64_t v140 = v270;
            memcpy(v137, v138, *(void *)(v270 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v184 + 16))(v137, v138, v183);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v184 + 56))(v137, 0, 3, v183);
            uint64_t v140 = v270;
          }
          uint64_t v3 = v294;
          uint64_t v139 = v303;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v140 + 56))(v137, 0, 1, v303);
        }
        uint64_t v202 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v203 = &v113[v202];
        uint64_t v204 = &v114[v202];
        uint64_t v205 = *(void *)(v131 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48))(&v114[v202], 1, v131))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
          memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          uint64_t v207 = v298;
        }
        else
        {
          uint64_t v296 = v205;
          uint64_t v272 = v140;
          uint64_t v208 = *(void *)v204;
          v203[8] = v204[8];
          *(void *)uint64_t v203 = v208;
          uint64_t v209 = *((void *)v204 + 2);
          v203[24] = v204[24];
          *((void *)v203 + 2) = v209;
          uint64_t v210 = *((void *)v204 + 4);
          v203[40] = v204[40];
          *((void *)v203 + 4) = v210;
          *((void *)v203 + 6) = *((void *)v204 + 6);
          *((void *)v203 + 7) = *((void *)v204 + 7);
          *((void *)v203 + 8) = *((void *)v204 + 8);
          uint64_t v305 = v139;
          *((void *)v203 + 9) = *((void *)v204 + 9);
          uint64_t v211 = v118;
          uint64_t v212 = v118[9];
          uint64_t v213 = &v203[v212];
          v214 = &v204[v212];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v288(v213, v214, v290);
          v284(&v203[v211[10]], &v204[v211[10]], v286);
          ((void (*)(char *, char *, uint64_t))v280)(&v203[v211[11]], &v204[v211[11]], v282);
          ((void (*)(char *, char *, uint64_t))v276)(&v203[*(int *)(v131 + 20)], &v204[*(int *)(v131 + 20)], v278);
          uint64_t v215 = *(int *)(v131 + 24);
          uint64_t v216 = &v203[v215];
          v217 = &v204[v215];
          if (v274(&v204[v215], 1, v305))
          {
            sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
            memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
            uint64_t v207 = v298;
          }
          else
          {
            uint64_t v222 = sub_20A8C2BC0();
            uint64_t v223 = *(void *)(v222 - 8);
            uint64_t v207 = v298;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v223 + 48))(v217, 3, v222))
            {
              uint64_t v224 = v272;
              memcpy(v216, v217, *(void *)(v272 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v223 + 16))(v216, v217, v222);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v216, 0, 3, v222);
              uint64_t v224 = v272;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v224 + 56))(v216, 0, 1, v305);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v296 + 56))(v203, 0, 1, v131);
        }
        *((unsigned char *)v3 + v207[8]) = *((unsigned char *)a2 + v207[8]);
        sub_20A4DCB08(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
        memcpy((char *)v3 + *(int *)(v267 + 48), (char *)a2 + *(int *)(v267 + 48), 0x208uLL);
        goto LABEL_65;
      case 2u:
        uint64_t v22 = sub_20A8C3F00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v3, a2, v22);
        sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
        uint64_t v24 = *(int *)(v23 + 48);
        uint64_t v25 = (char *)v3 + v24;
        uint64_t v26 = (char *)a2 + v24;
        long long v27 = *((_OWORD *)v26 + 1);
        *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v27;
        long long v28 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v28;
        long long v29 = *((_OWORD *)v26 + 5);
        *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
        *((_OWORD *)v25 + 5) = v29;
        long long v30 = *((_OWORD *)v26 + 7);
        *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
        *((_OWORD *)v25 + 7) = v30;
        *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
        *((_OWORD *)v25 + 9) = *((_OWORD *)v26 + 9);
        *((void *)v25 + 20) = *((void *)v26 + 20);
        long long v31 = *(_OWORD *)(v26 + 168);
        *(_OWORD *)(v25 + 184) = *(_OWORD *)(v26 + 184);
        *(_OWORD *)(v25 + 168) = v31;
        swift_bridgeObjectRetain();
        goto LABEL_65;
      case 3u:
        uint64_t v32 = sub_20A8C3E10();
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v33 + 48))(a2, 1, v32))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v3, a2, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(v33 + 16))(v3, a2, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v3, 0, 1, v32);
        }
        uint64_t v66 = (int *)type metadata accessor for QuoteDetailViewModel();
        uint64_t v67 = v66[5];
        uint64_t v68 = (char *)v3 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = sub_20A8C2CB0();
        uint64_t v71 = *(void *)(v70 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
        {
          sub_20A4DCAB4(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
          memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        }
        uint64_t v142 = v66[6];
        uint64_t v143 = (void *)((char *)v3 + v142);
        uint64_t v144 = (void *)((char *)a2 + v142);
        void *v143 = *v144;
        v143[1] = v144[1];
        v145 = (void *)v144[2];
        v143[2] = v145;
        *(void *)((char *)v3 + v66[7]) = *(void *)((char *)a2 + v66[7]);
        *(void *)((char *)v3 + v66[8]) = *(void *)((char *)a2 + v66[8]);
        uint64_t v146 = v66[9];
        v147 = *(void **)((char *)a2 + v146);
        *(void *)((char *)v3 + v146) = v147;
        uint64_t v148 = v66[10];
        v149 = *(void **)((char *)a2 + v148);
        *(void *)((char *)v3 + v148) = v149;
        sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
        uint64_t v151 = *(int *)(v150 + 48);
        v152 = (char *)v3 + v151;
        uint64_t v153 = (char *)a2 + v151;
        long long v154 = *((_OWORD *)v153 + 1);
        *(_OWORD *)v152 = *(_OWORD *)v153;
        *((_OWORD *)v152 + 1) = v154;
        long long v155 = *((_OWORD *)v153 + 3);
        *((_OWORD *)v152 + 2) = *((_OWORD *)v153 + 2);
        *((_OWORD *)v152 + 3) = v155;
        v152[64] = v153[64];
        *((void *)v152 + 9) = *((void *)v153 + 9);
        *((void *)v152 + 10) = *((void *)v153 + 10);
        *((void *)v152 + 11) = *((void *)v153 + 11);
        long long v156 = *((_OWORD *)v153 + 9);
        long long v157 = *((_OWORD *)v153 + 10);
        long long v158 = *((_OWORD *)v153 + 11);
        v152[192] = v153[192];
        *((_OWORD *)v152 + 10) = v157;
        *((_OWORD *)v152 + 11) = v158;
        *((_OWORD *)v152 + 9) = v156;
        long long v159 = *((_OWORD *)v153 + 6);
        long long v160 = *((_OWORD *)v153 + 8);
        *((_OWORD *)v152 + 7) = *((_OWORD *)v153 + 7);
        *((_OWORD *)v152 + 8) = v160;
        *((_OWORD *)v152 + 6) = v159;
        *(_OWORD *)(v152 + 200) = *(_OWORD *)(v153 + 200);
        long long v161 = *(_OWORD *)(v153 + 232);
        *(_OWORD *)(v152 + 216) = *(_OWORD *)(v153 + 216);
        *(_OWORD *)(v152 + 232) = v161;
        *(_OWORD *)(v152 + 248) = *(_OWORD *)(v153 + 248);
        v152[264] = v153[264];
        swift_bridgeObjectRetain();
        id v162 = v145;
        swift_retain();
        swift_retain();
        id v163 = v147;
        id v164 = v149;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_65;
      case 4u:
        uint64_t v35 = sub_20A8C3F00();
        uint64_t v36 = *(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16);
        v36(v3, a2, v35);
        uint64_t v299 = (int *)type metadata accessor for StockFeedEarningsViewModel();
        uint64_t v37 = v299[5];
        uint64_t v38 = (char *)v3 + v37;
        uint64_t v39 = (char *)a2 + v37;
        v36((void *)((char *)v3 + v37), (void *)((char *)a2 + v37), v35);
        uint64_t v40 = (int *)type metadata accessor for StockEarningsModel();
        uint64_t v41 = v40[5];
        uint64_t v42 = &v38[v41];
        uint64_t v43 = &v39[v41];
        uint64_t v44 = sub_20A8C2800();
        uint64_t v45 = *(void *)(v44 - 8);
        uint64_t v291 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
        v291(v42, v43, v44);
        uint64_t v46 = v40[6];
        uint64_t v47 = &v38[v46];
        uint64_t v48 = &v39[v46];
        uint64_t v292 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
        if (v292(&v39[v46], 1, v44))
        {
          sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          v291(v47, v48, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v47, 0, 1, v44);
        }
        uint64_t v73 = v40[7];
        uint64_t v74 = &v38[v73];
        uint64_t v75 = &v39[v73];
        uint64_t v76 = sub_20A8C2AF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
        v38[v40[8]] = v39[v40[8]];
        v38[v40[9]] = v39[v40[9]];
        v291((char *)v3 + v299[6], (char *)a2 + v299[6], v44);
        uint64_t v77 = v299[7];
        uint64_t v78 = (char *)v3 + v77;
        uint64_t v79 = (char *)a2 + v77;
        if (v292((char *)a2 + v77, 1, v44))
        {
          sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
          memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          v291(v78, v79, v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v78, 0, 1, v44);
        }
        uint64_t v165 = v299[8];
        id v166 = (void *)((char *)v3 + v165);
        uint64_t v167 = (void *)((char *)a2 + v165);
        void *v166 = *v167;
        v166[1] = v167[1];
        *((unsigned char *)v3 + v299[9]) = *((unsigned char *)a2 + v299[9]);
        uint64_t v168 = v299[10];
        v169 = (void *)((char *)v3 + v168);
        uint64_t v170 = (void *)((char *)a2 + v168);
        void *v169 = *v170;
        v169[1] = v170[1];
        *((unsigned char *)v3 + v299[11]) = *((unsigned char *)a2 + v299[11]);
        *(void *)((char *)v3 + v299[12]) = *(void *)((char *)a2 + v299[12]);
        sub_20A4DCB08(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
        uint64_t v172 = *(int *)(v171 + 48);
        uint64_t v173 = (_OWORD *)((char *)v3 + v172);
        uint64_t v174 = (_OWORD *)((char *)a2 + v172);
        long long v176 = v174[6];
        long long v175 = v174[7];
        long long v177 = v174[5];
        v173[4] = v174[4];
        v173[5] = v177;
        v173[6] = v176;
        v173[7] = v175;
        long long v179 = v174[2];
        long long v178 = v174[3];
        long long v180 = v174[1];
        *uint64_t v173 = *v174;
        v173[1] = v180;
        v173[2] = v179;
        v173[3] = v178;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_65;
      case 5u:
        *uint64_t v3 = *a2;
        v3[1] = a2[1];
        long long v50 = *((_OWORD *)a2 + 1);
        long long v51 = *((_OWORD *)a2 + 2);
        long long v52 = *((_OWORD *)a2 + 4);
        *((_OWORD *)v3 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)v3 + 4) = v52;
        *((_OWORD *)v3 + 1) = v50;
        *((_OWORD *)v3 + 2) = v51;
        swift_bridgeObjectRetain();
        goto LABEL_65;
      case 7u:
        uint64_t v53 = sub_20A8CCE00();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v3, a2, v53);
LABEL_65:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v3, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return v3;
}

uint64_t type metadata accessor for StockFeedLayoutModel()
{
  uint64_t result = qword_26AC72260;
  if (!qword_26AC72260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_20A4E147C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_20A8C3E10();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v53 = v7[6];
      uint64_t v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      uint64_t v56 = sub_20A8C3D00();
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v54, v55, v56);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      long long v254 = v7;
      uint64_t v80 = v7[7];
      uint64_t v81 = &a1[v80];
      long long v257 = a2;
      uint64_t v82 = &a2[v80];
      *(void *)uint64_t v81 = *(void *)&a2[v80];
      v81[8] = a2[v80 + 8];
      *((void *)v81 + 2) = *(void *)&a2[v80 + 16];
      v81[24] = a2[v80 + 24];
      *((void *)v81 + 4) = *(void *)&a2[v80 + 32];
      v81[40] = a2[v80 + 40];
      long long v83 = *(_OWORD *)&a2[v80 + 64];
      *((_OWORD *)v81 + 3) = *(_OWORD *)&a2[v80 + 48];
      *((_OWORD *)v81 + 4) = v83;
      uint64_t v84 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v85 = v84[9];
      uint64_t v86 = &v81[v85];
      uint64_t v87 = &v82[v85];
      uint64_t v88 = sub_20A8C2EB0();
      uint64_t v248 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32);
      v248(v86, v87, v88);
      uint64_t v89 = v84[10];
      uint64_t v90 = &v81[v89];
      v91 = &v82[v89];
      uint64_t v92 = sub_20A8C4030();
      uint64_t v244 = *(void (**)(char *, char *))(*(void *)(v92 - 8) + 32);
      uint64_t v246 = v92;
      v244(v90, v91);
      uint64_t v93 = v84[11];
      uint64_t v94 = &v81[v93];
      uint64_t v95 = &v82[v93];
      uint64_t v96 = sub_20A8C2990();
      uint64_t v240 = *(void (**)(char *, char *))(*(void *)(v96 - 8) + 32);
      uint64_t v242 = v96;
      v240(v94, v95);
      uint64_t v97 = type metadata accessor for QuoteViewModel();
      uint64_t v98 = *(int *)(v97 + 20);
      uint64_t v99 = &v81[v98];
      uint64_t v100 = &v82[v98];
      uint64_t v101 = sub_20A8C3410();
      uint64_t v236 = *(void (**)(char *, char *))(*(void *)(v101 - 8) + 32);
      uint64_t v238 = v101;
      v236(v99, v100);
      uint64_t v102 = *(int *)(v97 + 24);
      uint64_t v103 = &v81[v102];
      uint64_t v104 = &v82[v102];
      uint64_t v105 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v251 = *(void *)(v105 - 8);
      long long v234 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48);
      uint64_t v260 = a1;
      if (v234(v104, 1, v105))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        uint64_t v232 = v88;
        uint64_t v146 = v105;
        uint64_t v147 = sub_20A8C2BC0();
        uint64_t v148 = *(void *)(v147 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48))(v104, 3, v147))
        {
          uint64_t v149 = v251;
          memcpy(v103, v104, *(void *)(v251 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v103, v104, v147);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v103, 0, 3, v147);
          uint64_t v149 = v251;
        }
        long long v154 = *(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56);
        uint64_t v105 = v146;
        v154(v103, 0, 1, v146);
        uint64_t v88 = v232;
      }
      uint64_t v155 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      long long v156 = &v81[v155];
      long long v157 = &v82[v155];
      uint64_t v158 = *(void *)(v97 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(&v82[v155], 1, v97))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
        memcpy(v156, v157, *(void *)(*(void *)(v159 - 8) + 64));
        long long v160 = v257;
        a1 = v260;
        long long v161 = v254;
      }
      else
      {
        *(void *)long long v156 = *(void *)v157;
        v156[8] = v157[8];
        *((void *)v156 + 2) = *((void *)v157 + 2);
        v156[24] = v157[24];
        *((void *)v156 + 4) = *((void *)v157 + 4);
        v156[40] = v157[40];
        long long v162 = *((_OWORD *)v157 + 4);
        *((_OWORD *)v156 + 3) = *((_OWORD *)v157 + 3);
        *((_OWORD *)v156 + 4) = v162;
        v248(&v156[v84[9]], &v157[v84[9]], v88);
        ((void (*)(char *, char *, uint64_t))v244)(&v156[v84[10]], &v157[v84[10]], v246);
        ((void (*)(char *, char *, uint64_t))v240)(&v156[v84[11]], &v157[v84[11]], v242);
        ((void (*)(char *, char *, uint64_t))v236)(&v156[*(int *)(v97 + 20)], &v157[*(int *)(v97 + 20)], v238);
        uint64_t v163 = *(int *)(v97 + 24);
        id v164 = &v156[v163];
        uint64_t v165 = &v157[v163];
        if (v234(&v157[v163], 1, v105))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
          long long v160 = v257;
          long long v161 = v254;
        }
        else
        {
          uint64_t v180 = v105;
          uint64_t v181 = sub_20A8C2BC0();
          uint64_t v182 = *(void *)(v181 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v165, 3, v181))
          {
            uint64_t v183 = v251;
            memcpy(v164, v165, *(void *)(v251 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v164, v165, v181);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56))(v164, 0, 3, v181);
            uint64_t v183 = v251;
          }
          long long v161 = v254;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(v164, 0, 1, v180);
          long long v160 = v257;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56))(v156, 0, 1, v97);
        a1 = v260;
      }
      a1[v161[8]] = v160[v161[8]];
      sub_20A42CB10();
      uint64_t v189 = *(int *)(v188 + 48);
      v190 = &a1[v189];
      uint64_t v191 = &v160[v189];
      uint64_t v192 = sub_20A8CA9F0();
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v192 - 8) + 32))(v190, v191, v192);
      uint64_t v193 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
      uint64_t v194 = v193[5];
      uint64_t v195 = &v190[v194];
      uint64_t v196 = &v191[v194];
      long long v197 = v196[1];
      *(_OWORD *)uint64_t v195 = *v196;
      *((_OWORD *)v195 + 1) = v197;
      uint64_t v198 = v193[6];
      v199 = &v190[v198];
      uint64_t v200 = &v191[v198];
      long long v201 = v200[1];
      *(_OWORD *)v199 = *v200;
      *((_OWORD *)v199 + 1) = v201;
      uint64_t v202 = v193[7];
      uint64_t v203 = &v190[v202];
      uint64_t v204 = &v191[v202];
      long long v205 = v204[1];
      *(_OWORD *)uint64_t v203 = *v204;
      *((_OWORD *)v203 + 1) = v205;
      uint64_t v206 = v193[8];
      uint64_t v207 = &v190[v206];
      uint64_t v208 = &v191[v206];
      long long v209 = v208[1];
      *(_OWORD *)uint64_t v207 = *v208;
      *((_OWORD *)v207 + 1) = v209;
      uint64_t v210 = v193[9];
      uint64_t v211 = &v190[v210];
      uint64_t v212 = &v191[v210];
      long long v213 = v212[1];
      *(_OWORD *)uint64_t v211 = *v212;
      *((_OWORD *)v211 + 1) = v213;
      uint64_t v214 = v193[10];
      uint64_t v215 = &v190[v214];
      uint64_t v216 = &v191[v214];
      long long v217 = v216[1];
      *(_OWORD *)uint64_t v215 = *v216;
      *((_OWORD *)v215 + 1) = v217;
      uint64_t v218 = v193[11];
      uint64_t v219 = &v190[v218];
      uint64_t v220 = &v191[v218];
      long long v221 = v220[1];
      *(_OWORD *)uint64_t v219 = *v220;
      *((_OWORD *)v219 + 1) = v221;
      memcpy(&v190[v193[12]], &v191[v193[12]], 0x1A1uLL);
      uint64_t v222 = v193[13];
      uint64_t v223 = &v190[v222];
      uint64_t v224 = &v191[v222];
      long long v225 = v224[1];
      *(_OWORD *)uint64_t v223 = *v224;
      *((_OWORD *)v223 + 1) = v225;
      uint64_t v226 = v193[14];
      uint64_t v227 = &v190[v226];
      uint64_t v228 = &v191[v226];
      long long v229 = v228[1];
      *(_OWORD *)uint64_t v227 = *v228;
      *((_OWORD *)v227 + 1) = v229;
      v190[v193[15]] = v191[v193[15]];
      *(void *)&v190[v193[16]] = *(void *)&v191[v193[16]];
      goto LABEL_63;
    case 1u:
      uint64_t v14 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v16 = v15[5];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_20A8C3E10();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      uint64_t v59 = v15[6];
      uint64_t v60 = &a1[v59];
      uint64_t v61 = &a2[v59];
      uint64_t v62 = sub_20A8C3D00();
      uint64_t v63 = *(void *)(v62 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62))
      {
        sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      }
      uint64_t v255 = v15;
      uint64_t v107 = v15[7];
      uint64_t v108 = &a1[v107];
      long long v258 = a2;
      uint64_t v109 = &a2[v107];
      *(void *)uint64_t v108 = *(void *)&a2[v107];
      v108[8] = a2[v107 + 8];
      *((void *)v108 + 2) = *(void *)&a2[v107 + 16];
      v108[24] = a2[v107 + 24];
      *((void *)v108 + 4) = *(void *)&a2[v107 + 32];
      v108[40] = a2[v107 + 40];
      long long v110 = *(_OWORD *)&a2[v107 + 64];
      *((_OWORD *)v108 + 3) = *(_OWORD *)&a2[v107 + 48];
      *((_OWORD *)v108 + 4) = v110;
      uint64_t v111 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v112 = v111[9];
      uint64_t v113 = &v108[v112];
      uint64_t v114 = &v109[v112];
      uint64_t v115 = sub_20A8C2EB0();
      long long v249 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32);
      v249(v113, v114, v115);
      uint64_t v116 = v111[10];
      uint64_t v117 = &v108[v116];
      uint64_t v118 = &v109[v116];
      uint64_t v119 = sub_20A8C4030();
      long long v245 = *(void (**)(char *, char *))(*(void *)(v119 - 8) + 32);
      uint64_t v247 = v119;
      v245(v117, v118);
      uint64_t v120 = v111[11];
      uint64_t v121 = &v108[v120];
      uint64_t v122 = &v109[v120];
      uint64_t v123 = sub_20A8C2990();
      long long v241 = *(void (**)(char *, char *))(*(void *)(v123 - 8) + 32);
      uint64_t v243 = v123;
      v241(v121, v122);
      uint64_t v124 = type metadata accessor for QuoteViewModel();
      uint64_t v125 = *(int *)(v124 + 20);
      uint64_t v126 = &v108[v125];
      uint64_t v127 = &v109[v125];
      uint64_t v128 = sub_20A8C3410();
      long long v237 = *(void (**)(char *, char *))(*(void *)(v128 - 8) + 32);
      uint64_t v239 = v128;
      v237(v126, v127);
      uint64_t v129 = *(int *)(v124 + 24);
      uint64_t v130 = &v108[v129];
      uint64_t v131 = &v109[v129];
      uint64_t v132 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v252 = *(void *)(v132 - 8);
      uint64_t v235 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v252 + 48);
      long long v261 = a1;
      if (v235(v131, 1, v132))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
        memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        uint64_t v233 = v115;
        uint64_t v150 = v132;
        uint64_t v151 = sub_20A8C2BC0();
        uint64_t v152 = *(void *)(v151 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v152 + 48))(v131, 3, v151))
        {
          uint64_t v153 = v252;
          memcpy(v130, v131, *(void *)(v252 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v130, v131, v151);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v152 + 56))(v130, 0, 3, v151);
          uint64_t v153 = v252;
        }
        uint64_t v167 = *(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56);
        uint64_t v132 = v150;
        v167(v130, 0, 1, v150);
        uint64_t v115 = v233;
      }
      uint64_t v168 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      v169 = &v108[v168];
      uint64_t v170 = &v109[v168];
      uint64_t v171 = *(void *)(v124 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(&v109[v168], 1, v124))
      {
        sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
        memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
        uint64_t v173 = v258;
        a1 = v261;
        uint64_t v174 = v255;
      }
      else
      {
        *(void *)v169 = *(void *)v170;
        v169[8] = v170[8];
        *((void *)v169 + 2) = *((void *)v170 + 2);
        v169[24] = v170[24];
        *((void *)v169 + 4) = *((void *)v170 + 4);
        v169[40] = v170[40];
        long long v175 = *((_OWORD *)v170 + 4);
        *((_OWORD *)v169 + 3) = *((_OWORD *)v170 + 3);
        *((_OWORD *)v169 + 4) = v175;
        v249(&v169[v111[9]], &v170[v111[9]], v115);
        ((void (*)(char *, char *, uint64_t))v245)(&v169[v111[10]], &v170[v111[10]], v247);
        ((void (*)(char *, char *, uint64_t))v241)(&v169[v111[11]], &v170[v111[11]], v243);
        ((void (*)(char *, char *, uint64_t))v237)(&v169[*(int *)(v124 + 20)], &v170[*(int *)(v124 + 20)], v239);
        uint64_t v176 = *(int *)(v124 + 24);
        long long v177 = &v169[v176];
        long long v178 = &v170[v176];
        if (v235(&v170[v176], 1, v132))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
          uint64_t v173 = v258;
          uint64_t v174 = v255;
        }
        else
        {
          uint64_t v184 = v132;
          uint64_t v185 = sub_20A8C2BC0();
          uint64_t v186 = *(void *)(v185 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v178, 3, v185))
          {
            uint64_t v187 = v252;
            memcpy(v177, v178, *(void *)(v252 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v177, v178, v185);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v186 + 56))(v177, 0, 3, v185);
            uint64_t v187 = v252;
          }
          uint64_t v174 = v255;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v177, 0, 1, v184);
          uint64_t v173 = v258;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v171 + 56))(v169, 0, 1, v124);
        a1 = v261;
      }
      a1[v174[8]] = v173[v174[8]];
      sub_20A4DCB08(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      memcpy(&a1[*(int *)(v230 + 48)], &v173[*(int *)(v230 + 48)], 0x208uLL);
      goto LABEL_63;
    case 2u:
      uint64_t v22 = sub_20A8C3F00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      long long v27 = *((_OWORD *)v26 + 11);
      *((_OWORD *)v25 + 10) = *((_OWORD *)v26 + 10);
      *((_OWORD *)v25 + 11) = v27;
      *((void *)v25 + 24) = *((void *)v26 + 24);
      long long v28 = *((_OWORD *)v26 + 7);
      *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
      *((_OWORD *)v25 + 7) = v28;
      long long v29 = *((_OWORD *)v26 + 9);
      *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
      *((_OWORD *)v25 + 9) = v29;
      long long v30 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v30;
      long long v31 = *((_OWORD *)v26 + 5);
      *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
      *((_OWORD *)v25 + 5) = v31;
      long long v32 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v32;
      goto LABEL_63;
    case 3u:
      uint64_t v33 = sub_20A8C3E10();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
      {
        sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(a1, a2, v33);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
      }
      uint64_t v65 = (int *)type metadata accessor for QuoteDetailViewModel();
      uint64_t v66 = v65[5];
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      uint64_t v69 = sub_20A8C2CB0();
      uint64_t v70 = *(void *)(v69 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
      {
        sub_20A4DCAB4(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
        memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v68, v69);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      uint64_t v134 = v65[6];
      uint64_t v135 = &a1[v134];
      uint64_t v136 = &a2[v134];
      *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
      *((void *)v135 + 2) = *((void *)v136 + 2);
      *(void *)&a1[v65[7]] = *(void *)&a2[v65[7]];
      *(void *)&a1[v65[8]] = *(void *)&a2[v65[8]];
      *(void *)&a1[v65[9]] = *(void *)&a2[v65[9]];
      *(void *)&a1[v65[10]] = *(void *)&a2[v65[10]];
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(&a1[*(int *)(v137 + 48)], &a2[*(int *)(v137 + 48)], 0x109uLL);
      goto LABEL_63;
    case 4u:
      uint64_t v36 = sub_20A8C3F00();
      uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32);
      v37(a1, a2, v36);
      long long v250 = (int *)type metadata accessor for StockFeedEarningsViewModel();
      uint64_t v38 = v250[5];
      uint64_t v256 = a2;
      uint64_t v259 = a1;
      uint64_t v39 = &a1[v38];
      uint64_t v40 = &a2[v38];
      v37(&a1[v38], &a2[v38], v36);
      uint64_t v41 = (int *)type metadata accessor for StockEarningsModel();
      uint64_t v42 = v41[5];
      uint64_t v43 = &v39[v42];
      uint64_t v44 = &v40[v42];
      uint64_t v45 = sub_20A8C2800();
      uint64_t v46 = *(void *)(v45 - 8);
      uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
      v47(v43, v44, v45);
      uint64_t v48 = v41[6];
      uint64_t v49 = &v39[v48];
      long long v50 = &v40[v48];
      long long v253 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      if (v253(&v40[v48], 1, v45))
      {
        sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        v47(v49, v50, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v49, 0, 1, v45);
      }
      uint64_t v72 = v41[7];
      uint64_t v73 = &v39[v72];
      uint64_t v74 = &v40[v72];
      uint64_t v75 = sub_20A8C2AF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
      v39[v41[8]] = v40[v41[8]];
      v39[v41[9]] = v40[v41[9]];
      a1 = v259;
      v47(&v259[v250[6]], &v256[v250[6]], v45);
      uint64_t v76 = v250[7];
      uint64_t v77 = &v259[v76];
      uint64_t v78 = &v256[v76];
      if (v253(&v256[v76], 1, v45))
      {
        sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
        memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        v47(v77, v78, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v77, 0, 1, v45);
      }
      *(_OWORD *)&v259[v250[8]] = *(_OWORD *)&v256[v250[8]];
      v259[v250[9]] = v256[v250[9]];
      *(_OWORD *)&v259[v250[10]] = *(_OWORD *)&v256[v250[10]];
      v259[v250[11]] = v256[v250[11]];
      *(void *)&v259[v250[12]] = *(void *)&v256[v250[12]];
      sub_20A4DCB08(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
      uint64_t v139 = *(int *)(v138 + 48);
      uint64_t v140 = &v259[v139];
      uint64_t v141 = &v256[v139];
      long long v142 = v141[5];
      v140[4] = v141[4];
      v140[5] = v142;
      long long v143 = v141[7];
      v140[6] = v141[6];
      v140[7] = v143;
      long long v144 = v141[1];
      *uint64_t v140 = *v141;
      v140[1] = v144;
      long long v145 = v141[3];
      v140[2] = v141[2];
      v140[3] = v145;
      goto LABEL_63;
    case 7u:
      uint64_t v52 = sub_20A8CCE00();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v52 - 8) + 32))(a1, a2, v52);
LABEL_63:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *sub_20A4E2F84(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A4E7364((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v8 = v7[5];
        uint64_t v9 = &a1[v8];
        uint64_t v10 = &a2[v8];
        uint64_t v11 = sub_20A8C3E10();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        uint64_t v52 = v7[6];
        uint64_t v53 = &a1[v52];
        uint64_t v54 = &a2[v52];
        uint64_t v55 = sub_20A8C3D00();
        uint64_t v56 = *(void *)(v55 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
        {
          sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
          memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
        }
        long long v253 = v7;
        uint64_t v79 = v7[7];
        uint64_t v80 = &a1[v79];
        uint64_t v256 = a2;
        uint64_t v81 = &a2[v79];
        *(void *)uint64_t v80 = *(void *)&a2[v79];
        v80[8] = a2[v79 + 8];
        *((void *)v80 + 2) = *(void *)&a2[v79 + 16];
        v80[24] = a2[v79 + 24];
        *((void *)v80 + 4) = *(void *)&a2[v79 + 32];
        v80[40] = a2[v79 + 40];
        long long v82 = *(_OWORD *)&a2[v79 + 64];
        *((_OWORD *)v80 + 3) = *(_OWORD *)&a2[v79 + 48];
        *((_OWORD *)v80 + 4) = v82;
        long long v83 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v84 = v83[9];
        uint64_t v85 = &v80[v84];
        uint64_t v86 = &v81[v84];
        uint64_t v87 = sub_20A8C2EB0();
        uint64_t v244 = *(void (**)(char *, char *))(*(void *)(v87 - 8) + 32);
        uint64_t v247 = v87;
        v244(v85, v86);
        uint64_t v88 = v83[10];
        uint64_t v89 = &v80[v88];
        uint64_t v90 = &v81[v88];
        uint64_t v91 = sub_20A8C4030();
        uint64_t v240 = *(void (**)(char *, char *))(*(void *)(v91 - 8) + 32);
        uint64_t v242 = v91;
        v240(v89, v90);
        uint64_t v92 = v83[11];
        uint64_t v93 = &v80[v92];
        uint64_t v94 = &v81[v92];
        uint64_t v95 = sub_20A8C2990();
        uint64_t v236 = *(void (**)(char *, char *))(*(void *)(v95 - 8) + 32);
        uint64_t v238 = v95;
        v236(v93, v94);
        uint64_t v96 = type metadata accessor for QuoteViewModel();
        uint64_t v97 = *(int *)(v96 + 20);
        uint64_t v98 = &v80[v97];
        uint64_t v99 = &v81[v97];
        uint64_t v100 = sub_20A8C3410();
        uint64_t v232 = *(void (**)(char *, char *))(*(void *)(v100 - 8) + 32);
        uint64_t v234 = v100;
        v232(v98, v99);
        uint64_t v101 = *(int *)(v96 + 24);
        uint64_t v102 = &v80[v101];
        uint64_t v103 = &v81[v101];
        uint64_t v104 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v250 = *(void *)(v104 - 8);
        uint64_t v230 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v250 + 48);
        if (v230(v103, 1, v104))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
        }
        else
        {
          uint64_t v228 = v104;
          uint64_t v145 = sub_20A8C2BC0();
          uint64_t v146 = *(void *)(v145 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v103, 3, v145))
          {
            uint64_t v147 = v250;
            memcpy(v102, v103, *(void *)(v250 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v146 + 32))(v102, v103, v145);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v102, 0, 3, v145);
            uint64_t v147 = v250;
          }
          uint64_t v104 = v228;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v147 + 56))(v102, 0, 1, v228);
        }
        uint64_t v151 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v152 = &v80[v151];
        uint64_t v153 = &v81[v151];
        uint64_t v154 = *(void *)(v96 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v153, 1, v96))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
          memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
          long long v156 = v256;
          long long v157 = v253;
        }
        else
        {
          *(void *)uint64_t v152 = *(void *)v153;
          v152[8] = v153[8];
          *((void *)v152 + 2) = *((void *)v153 + 2);
          v152[24] = v153[24];
          *((void *)v152 + 4) = *((void *)v153 + 4);
          v152[40] = v153[40];
          long long v158 = *((_OWORD *)v153 + 4);
          *((_OWORD *)v152 + 3) = *((_OWORD *)v153 + 3);
          *((_OWORD *)v152 + 4) = v158;
          ((void (*)(char *, char *, uint64_t))v244)(&v152[v83[9]], &v153[v83[9]], v247);
          ((void (*)(char *, char *, uint64_t))v240)(&v152[v83[10]], &v153[v83[10]], v242);
          ((void (*)(char *, char *, uint64_t))v236)(&v152[v83[11]], &v153[v83[11]], v238);
          ((void (*)(char *, char *, uint64_t))v232)(&v152[*(int *)(v96 + 20)], &v153[*(int *)(v96 + 20)], v234);
          uint64_t v159 = *(int *)(v96 + 24);
          long long v160 = &v152[v159];
          long long v161 = &v153[v159];
          if (v230(&v153[v159], 1, v104))
          {
            sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
            memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            uint64_t v176 = v104;
            uint64_t v177 = sub_20A8C2BC0();
            uint64_t v178 = *(void *)(v177 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48))(v161, 3, v177))
            {
              uint64_t v179 = v250;
              memcpy(v160, v161, *(void *)(v250 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v160, v161, v177);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v160, 0, 3, v177);
              uint64_t v179 = v250;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v179 + 56))(v160, 0, 1, v176);
          }
          long long v157 = v253;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v154 + 56))(v152, 0, 1, v96);
          long long v156 = v256;
        }
        a1[v157[8]] = v156[v157[8]];
        sub_20A42CB10();
        uint64_t v185 = *(int *)(v184 + 48);
        uint64_t v186 = &a1[v185];
        uint64_t v187 = &v156[v185];
        uint64_t v188 = sub_20A8CA9F0();
        (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v188 - 8) + 32))(v186, v187, v188);
        uint64_t v189 = (int *)type metadata accessor for StockFeedMastheadViewLayoutAttributes();
        uint64_t v190 = v189[5];
        uint64_t v191 = &v186[v190];
        uint64_t v192 = &v187[v190];
        long long v193 = v192[1];
        *(_OWORD *)uint64_t v191 = *v192;
        *((_OWORD *)v191 + 1) = v193;
        uint64_t v194 = v189[6];
        uint64_t v195 = &v186[v194];
        uint64_t v196 = &v187[v194];
        long long v197 = v196[1];
        *(_OWORD *)uint64_t v195 = *v196;
        *((_OWORD *)v195 + 1) = v197;
        uint64_t v198 = v189[7];
        v199 = &v186[v198];
        uint64_t v200 = &v187[v198];
        long long v201 = v200[1];
        *(_OWORD *)v199 = *v200;
        *((_OWORD *)v199 + 1) = v201;
        uint64_t v202 = v189[8];
        uint64_t v203 = &v186[v202];
        uint64_t v204 = &v187[v202];
        long long v205 = v204[1];
        *(_OWORD *)uint64_t v203 = *v204;
        *((_OWORD *)v203 + 1) = v205;
        uint64_t v206 = v189[9];
        uint64_t v207 = &v186[v206];
        uint64_t v208 = &v187[v206];
        long long v209 = v208[1];
        *(_OWORD *)uint64_t v207 = *v208;
        *((_OWORD *)v207 + 1) = v209;
        uint64_t v210 = v189[10];
        uint64_t v211 = &v186[v210];
        uint64_t v212 = &v187[v210];
        long long v213 = v212[1];
        *(_OWORD *)uint64_t v211 = *v212;
        *((_OWORD *)v211 + 1) = v213;
        uint64_t v214 = v189[11];
        uint64_t v215 = &v186[v214];
        uint64_t v216 = &v187[v214];
        long long v217 = v216[1];
        *(_OWORD *)uint64_t v215 = *v216;
        *((_OWORD *)v215 + 1) = v217;
        memcpy(&v186[v189[12]], &v187[v189[12]], 0x1A1uLL);
        uint64_t v218 = v189[13];
        uint64_t v219 = &v186[v218];
        uint64_t v220 = &v187[v218];
        long long v221 = v220[1];
        *(_OWORD *)uint64_t v219 = *v220;
        *((_OWORD *)v219 + 1) = v221;
        uint64_t v222 = v189[14];
        uint64_t v223 = &v186[v222];
        uint64_t v224 = &v187[v222];
        long long v225 = v224[1];
        *(_OWORD *)uint64_t v223 = *v224;
        *((_OWORD *)v223 + 1) = v225;
        v186[v189[15]] = v187[v189[15]];
        *(void *)&v186[v189[16]] = *(void *)&v187[v189[16]];
        goto LABEL_64;
      case 1u:
        uint64_t v14 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = (int *)type metadata accessor for StockFeedMastheadModel();
        uint64_t v16 = v15[5];
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_20A8C3E10();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        uint64_t v58 = v15[6];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = &a2[v58];
        uint64_t v61 = sub_20A8C3D00();
        uint64_t v62 = *(void *)(v61 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        {
          sub_20A4DCAB4(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
          memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v59, v60, v61);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
        }
        long long v254 = v15;
        uint64_t v106 = v15[7];
        uint64_t v107 = &a1[v106];
        long long v257 = a2;
        uint64_t v108 = &a2[v106];
        *(void *)uint64_t v107 = *(void *)&a2[v106];
        v107[8] = a2[v106 + 8];
        *((void *)v107 + 2) = *(void *)&a2[v106 + 16];
        v107[24] = a2[v106 + 24];
        *((void *)v107 + 4) = *(void *)&a2[v106 + 32];
        v107[40] = a2[v106 + 40];
        long long v109 = *(_OWORD *)&a2[v106 + 64];
        *((_OWORD *)v107 + 3) = *(_OWORD *)&a2[v106 + 48];
        *((_OWORD *)v107 + 4) = v109;
        long long v110 = (int *)type metadata accessor for PriceViewModel();
        uint64_t v111 = v110[9];
        uint64_t v112 = &v107[v111];
        uint64_t v113 = &v108[v111];
        uint64_t v114 = sub_20A8C2EB0();
        long long v245 = *(void (**)(char *, char *))(*(void *)(v114 - 8) + 32);
        uint64_t v248 = v114;
        v245(v112, v113);
        uint64_t v115 = v110[10];
        uint64_t v116 = &v107[v115];
        uint64_t v117 = &v108[v115];
        uint64_t v118 = sub_20A8C4030();
        long long v241 = *(void (**)(char *, char *))(*(void *)(v118 - 8) + 32);
        uint64_t v243 = v118;
        v241(v116, v117);
        uint64_t v119 = v110[11];
        uint64_t v120 = &v107[v119];
        uint64_t v121 = &v108[v119];
        uint64_t v122 = sub_20A8C2990();
        long long v237 = *(void (**)(char *, char *))(*(void *)(v122 - 8) + 32);
        uint64_t v239 = v122;
        v237(v120, v121);
        uint64_t v123 = type metadata accessor for QuoteViewModel();
        uint64_t v124 = *(int *)(v123 + 20);
        uint64_t v125 = &v107[v124];
        uint64_t v126 = &v108[v124];
        uint64_t v127 = sub_20A8C3410();
        uint64_t v233 = *(void (**)(char *, char *))(*(void *)(v127 - 8) + 32);
        uint64_t v235 = v127;
        v233(v125, v126);
        uint64_t v128 = *(int *)(v123 + 24);
        uint64_t v129 = &v107[v128];
        uint64_t v130 = &v108[v128];
        uint64_t v131 = type metadata accessor for QuoteSummaryTimeRange();
        uint64_t v251 = *(void *)(v131 - 8);
        uint64_t v231 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v251 + 48);
        if (v231(v130, 1, v131))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
          memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          uint64_t v229 = v131;
          uint64_t v148 = sub_20A8C2BC0();
          uint64_t v149 = *(void *)(v148 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v130, 3, v148))
          {
            uint64_t v150 = v251;
            memcpy(v129, v130, *(void *)(v251 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v149 + 32))(v129, v130, v148);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v129, 0, 3, v148);
            uint64_t v150 = v251;
          }
          uint64_t v163 = *(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56);
          uint64_t v131 = v229;
          v163(v129, 0, 1, v229);
        }
        uint64_t v164 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
        uint64_t v165 = &v107[v164];
        uint64_t v166 = &v108[v164];
        uint64_t v167 = *(void *)(v123 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v166, 1, v123))
        {
          sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82B28, (void (*)(uint64_t))type metadata accessor for QuoteViewModel);
          memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
          v169 = v257;
          uint64_t v170 = v254;
        }
        else
        {
          *(void *)uint64_t v165 = *(void *)v166;
          v165[8] = v166[8];
          *((void *)v165 + 2) = *((void *)v166 + 2);
          v165[24] = v166[24];
          *((void *)v165 + 4) = *((void *)v166 + 4);
          v165[40] = v166[40];
          long long v171 = *((_OWORD *)v166 + 4);
          *((_OWORD *)v165 + 3) = *((_OWORD *)v166 + 3);
          *((_OWORD *)v165 + 4) = v171;
          ((void (*)(char *, char *, uint64_t))v245)(&v165[v110[9]], &v166[v110[9]], v248);
          ((void (*)(char *, char *, uint64_t))v241)(&v165[v110[10]], &v166[v110[10]], v243);
          ((void (*)(char *, char *, uint64_t))v237)(&v165[v110[11]], &v166[v110[11]], v239);
          ((void (*)(char *, char *, uint64_t))v233)(&v165[*(int *)(v123 + 20)], &v166[*(int *)(v123 + 20)], v235);
          uint64_t v172 = *(int *)(v123 + 24);
          uint64_t v173 = &v165[v172];
          uint64_t v174 = &v166[v172];
          if (v231(&v166[v172], 1, v131))
          {
            sub_20A4DCAB4(0, (unint64_t *)&qword_26AC82848, (void (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange);
            memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
          }
          else
          {
            uint64_t v180 = v131;
            uint64_t v181 = sub_20A8C2BC0();
            uint64_t v182 = *(void *)(v181 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48))(v174, 3, v181))
            {
              uint64_t v183 = v251;
              memcpy(v173, v174, *(void *)(v251 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v173, v174, v181);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v182 + 56))(v173, 0, 3, v181);
              uint64_t v183 = v251;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v183 + 56))(v173, 0, 1, v180);
          }
          uint64_t v170 = v254;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v165, 0, 1, v123);
          v169 = v257;
        }
        a1[v170[8]] = v169[v170[8]];
        sub_20A4DCB08(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
        memcpy(&a1[*(int *)(v226 + 48)], &v169[*(int *)(v226 + 48)], 0x208uLL);
        goto LABEL_64;
      case 2u:
        uint64_t v22 = sub_20A8C3F00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
        uint64_t v24 = *(int *)(v23 + 48);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        long long v27 = *((_OWORD *)v26 + 11);
        *((_OWORD *)v25 + 10) = *((_OWORD *)v26 + 10);
        *((_OWORD *)v25 + 11) = v27;
        *((void *)v25 + 24) = *((void *)v26 + 24);
        long long v28 = *((_OWORD *)v26 + 7);
        *((_OWORD *)v25 + 6) = *((_OWORD *)v26 + 6);
        *((_OWORD *)v25 + 7) = v28;
        long long v29 = *((_OWORD *)v26 + 9);
        *((_OWORD *)v25 + 8) = *((_OWORD *)v26 + 8);
        *((_OWORD *)v25 + 9) = v29;
        long long v30 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v30;
        long long v31 = *((_OWORD *)v26 + 5);
        *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
        *((_OWORD *)v25 + 5) = v31;
        long long v32 = *((_OWORD *)v26 + 1);
        *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
        *((_OWORD *)v25 + 1) = v32;
        goto LABEL_64;
      case 3u:
        uint64_t v33 = sub_20A8C3E10();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
        {
          sub_20A4DCAB4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
          memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(a1, a2, v33);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
        }
        uint64_t v64 = (int *)type metadata accessor for QuoteDetailViewModel();
        uint64_t v65 = v64[5];
        uint64_t v66 = &a1[v65];
        uint64_t v67 = &a2[v65];
        uint64_t v68 = sub_20A8C2CB0();
        uint64_t v69 = *(void *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
        {
          sub_20A4DCAB4(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
          memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
        }
        uint64_t v133 = v64[6];
        uint64_t v134 = &a1[v133];
        uint64_t v135 = &a2[v133];
        *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
        *((void *)v134 + 2) = *((void *)v135 + 2);
        *(void *)&a1[v64[7]] = *(void *)&a2[v64[7]];
        *(void *)&a1[v64[8]] = *(void *)&a2[v64[8]];
        *(void *)&a1[v64[9]] = *(void *)&a2[v64[9]];
        *(void *)&a1[v64[10]] = *(void *)&a2[v64[10]];
        sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
        memcpy(&a1[*(int *)(v136 + 48)], &a2[*(int *)(v136 + 48)], 0x109uLL);
        goto LABEL_64;
      case 4u:
        uint64_t v36 = sub_20A8C3F00();
        uint64_t v37 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32);
        v37(a1, a2, v36);
        uint64_t v252 = (int *)type metadata accessor for StockFeedEarningsViewModel();
        uint64_t v38 = v252[5];
        uint64_t v39 = &a1[v38];
        uint64_t v255 = a2;
        uint64_t v40 = &a2[v38];
        v37(&a1[v38], &a2[v38], v36);
        uint64_t v41 = (int *)type metadata accessor for StockEarningsModel();
        uint64_t v42 = v41[5];
        uint64_t v43 = &v39[v42];
        uint64_t v44 = &v40[v42];
        uint64_t v45 = sub_20A8C2800();
        uint64_t v46 = *(void *)(v45 - 8);
        uint64_t v246 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
        v246(v43, v44, v45);
        uint64_t v47 = v41[6];
        uint64_t v48 = &v39[v47];
        uint64_t v49 = &v40[v47];
        long long v249 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
        if (v249(&v40[v47], 1, v45))
        {
          sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          v246(v48, v49, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v45);
        }
        uint64_t v71 = v41[7];
        uint64_t v72 = &v39[v71];
        uint64_t v73 = &v40[v71];
        uint64_t v74 = sub_20A8C2AF0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
        v39[v41[8]] = v40[v41[8]];
        v39[v41[9]] = v40[v41[9]];
        v246(&a1[v252[6]], &v255[v252[6]], v45);
        uint64_t v75 = v252[7];
        uint64_t v76 = &a1[v75];
        uint64_t v77 = &v255[v75];
        if (v249(&v255[v75], 1, v45))
        {
          sub_20A4DCAB4(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
          memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          v246(v76, v77, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v76, 0, 1, v45);
        }
        *(_OWORD *)&a1[v252[8]] = *(_OWORD *)&v255[v252[8]];
        a1[v252[9]] = v255[v252[9]];
        *(_OWORD *)&a1[v252[10]] = *(_OWORD *)&v255[v252[10]];
        a1[v252[11]] = v255[v252[11]];
        *(void *)&a1[v252[12]] = *(void *)&v255[v252[12]];
        sub_20A4DCB08(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
        uint64_t v138 = *(int *)(v137 + 48);
        uint64_t v139 = &a1[v138];
        uint64_t v140 = &v255[v138];
        long long v141 = v140[5];
        v139[4] = v140[4];
        v139[5] = v141;
        long long v142 = v140[7];
        v139[6] = v140[6];
        v139[7] = v142;
        long long v143 = v140[1];
        *uint64_t v139 = *v140;
        v139[1] = v143;
        long long v144 = v140[3];
        v139[2] = v140[2];
        v139[3] = v144;
        goto LABEL_64;
      case 7u:
        uint64_t v51 = sub_20A8CCE00();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 32))(a1, a2, v51);
LABEL_64:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_20A4E4A9C()
{
  uint64_t result = type metadata accessor for StockFeedMastheadModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v12 = &v11;
      swift_getTupleTypeLayout2();
      uint64_t v13 = &v10;
      uint64_t result = sub_20A8C3F00();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v14 = &v9;
        uint64_t result = type metadata accessor for QuoteDetailViewModel();
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v15 = &v8;
          uint64_t result = type metadata accessor for StockFeedEarningsViewModel();
          if (v5 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            uint64_t v16 = &v7;
            uint64_t v17 = &unk_20A8D9A88;
            uint64_t v18 = &unk_20A8D9A70;
            uint64_t result = sub_20A8CCE00();
            if (v6 <= 0x3F)
            {
              uint64_t v19 = *(void *)(result - 8) + 64;
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

__n128 sub_20A4E4CD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v9);
  char v11 = (long long *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A4E728C(v1, (uint64_t)v11);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A4DCB08(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      uint64_t v16 = (_OWORD *)((char *)v11 + *(int *)(v15 + 48));
      long long v17 = v16[1];
      long long v39 = *v16;
      long long v40 = v17;
      goto LABEL_4;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v20 = (char *)v11 + *(int *)(v19 + 48);
      long long v21 = *((_OWORD *)v20 + 11);
      v41[10] = *((_OWORD *)v20 + 10);
      v41[11] = v21;
      *(void *)&v41[12] = *((void *)v20 + 24);
      long long v22 = *((_OWORD *)v20 + 7);
      v41[6] = *((_OWORD *)v20 + 6);
      v41[7] = v22;
      long long v23 = *((_OWORD *)v20 + 9);
      v41[8] = *((_OWORD *)v20 + 8);
      v41[9] = v23;
      long long v24 = *((_OWORD *)v20 + 5);
      v41[4] = *((_OWORD *)v20 + 4);
      v41[5] = v24;
      long long v25 = *((_OWORD *)v20 + 3);
      v41[2] = *((_OWORD *)v20 + 2);
      v41[3] = v25;
      long long v26 = *((_OWORD *)v20 + 1);
      v41[0] = *(_OWORD *)v20;
      v41[1] = v26;
      sub_20A4E7338((uint64_t)v41);
      long long v39 = v41[0];
      long long v40 = v41[1];
      uint64_t v18 = type metadata accessor for StockChartModel;
      goto LABEL_8;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v41, (char *)v11 + *(int *)(v27 + 48), 0x109uLL);
      sub_20A4E72F0((uint64_t)v41);
      long long v39 = v41[0];
      long long v40 = v41[1];
      uint64_t v18 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_8;
    case 4u:
      sub_20A4DCB08(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
      long long v29 = (_OWORD *)((char *)v11 + *(int *)(v28 + 48));
      long long v30 = v29[1];
      long long v39 = *v29;
      long long v40 = v30;
      uint64_t v18 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_8;
    case 5u:
      long long v32 = v11[2];
      long long v39 = v11[1];
      long long v40 = v32;
      swift_bridgeObjectRelease();
      return (__n128)v39;
    case 6u:
      return *(__n128 *)v11;
    case 7u:
      (*(void (**)(char *, _OWORD *, uint64_t))(v3 + 32))(v5, v11, v2);
      sub_20A8CCDE0();
      long long v38 = v34;
      long long v39 = v33;
      long long v40 = v35;
      long long v37 = v36;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      result.n128_u64[0] = v39;
      result.n128_u64[1] = v38;
      return result;
    default:
      sub_20A42CB10();
      sub_20A4E7440((uint64_t)v11 + *(int *)(v12 + 48), (uint64_t)v8);
      uint64_t v13 = &v8[*(int *)(v6 + 20)];
      long long v14 = *((_OWORD *)v13 + 1);
      long long v39 = *(_OWORD *)v13;
      long long v40 = v14;
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_4:
      uint64_t v18 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      sub_20A4E7364((uint64_t)v11, (uint64_t (*)(void))v18);
      return (__n128)v39;
  }
}

uint64_t sub_20A4E5114()
{
  sub_20A4E74A4(&qword_26AC72248);

  return sub_20A8CACE0();
}

uint64_t sub_20A4E516C()
{
  return sub_20A4E74A4(&qword_26AC72240);
}

uint64_t sub_20A4E51A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  uint64_t v9 = 0xD000000000000013;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v9 = 0x6563697270;
      break;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v12 = &v8[*(int *)(v11 + 48)];
      long long v13 = *((_OWORD *)v12 + 11);
      v21[10] = *((_OWORD *)v12 + 10);
      v21[11] = v13;
      *(void *)&v21[12] = *((void *)v12 + 24);
      long long v14 = *((_OWORD *)v12 + 7);
      v21[6] = *((_OWORD *)v12 + 6);
      v21[7] = v14;
      long long v15 = *((_OWORD *)v12 + 9);
      v21[8] = *((_OWORD *)v12 + 8);
      v21[9] = v15;
      long long v16 = *((_OWORD *)v12 + 5);
      v21[4] = *((_OWORD *)v12 + 4);
      v21[5] = v16;
      long long v17 = *((_OWORD *)v12 + 3);
      v21[2] = *((_OWORD *)v12 + 2);
      v21[3] = v17;
      long long v18 = *((_OWORD *)v12 + 1);
      v21[0] = *(_OWORD *)v12;
      v21[1] = v18;
      sub_20A4E7338((uint64_t)v21);
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockChartModel);
      uint64_t v9 = 0x7472616863;
      break;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v21, &v8[*(int *)(v19 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v21);
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel);
      uint64_t v9 = 0x74654465746F7571;
      break;
    case 4u:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);
      uint64_t v9 = 0x73676E696E726165;
      break;
    case 5u:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
      uint64_t v9 = 0x64726163616C70;
      break;
    case 6u:
      return v9;
    case 7u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v9 = sub_20A8CCD80();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v8[*(int *)(v10 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v9 = 0x646165687473616DLL;
      break;
  }
  return v9;
}

uint64_t sub_20A4E558C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CCE00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v2, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_3;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      long long v14 = &v10[*(int *)(v13 + 48)];
      long long v15 = *((_OWORD *)v14 + 11);
      v25[10] = *((_OWORD *)v14 + 10);
      v25[11] = v15;
      *(void *)&v25[12] = *((void *)v14 + 24);
      long long v16 = *((_OWORD *)v14 + 7);
      v25[6] = *((_OWORD *)v14 + 6);
      v25[7] = v16;
      long long v17 = *((_OWORD *)v14 + 9);
      v25[8] = *((_OWORD *)v14 + 8);
      v25[9] = v17;
      long long v18 = *((_OWORD *)v14 + 5);
      v25[4] = *((_OWORD *)v14 + 4);
      v25[5] = v18;
      long long v19 = *((_OWORD *)v14 + 3);
      v25[2] = *((_OWORD *)v14 + 2);
      v25[3] = v19;
      long long v20 = *((_OWORD *)v14 + 1);
      v25[0] = *(_OWORD *)v14;
      v25[1] = v20;
      sub_20A4E7338((uint64_t)v25);
      uint64_t v12 = type metadata accessor for StockChartModel;
      goto LABEL_8;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v25, &v10[*(int *)(v21 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v25);
      uint64_t v12 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_8;
    case 4u:
      uint64_t v12 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_8;
    case 5u:
      uint64_t v12 = type metadata accessor for StockFeedLayoutModel;
      goto LABEL_8;
    case 6u:
      goto LABEL_9;
    case 7u:
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_20A8CCDA0();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v10[*(int *)(v11 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      uint64_t v12 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      sub_20A4E7364((uint64_t)v10, (uint64_t (*)(void))v12);
LABEL_9:
      uint64_t v22 = *MEMORY[0x263F7D240];
      uint64_t v23 = sub_20A8C8010();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(a1, v22, v23);
  }
}

uint64_t sub_20A4E58E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = MEMORY[0x263F8EE78];
  switch(EnumCaseMultiPayload)
  {
    case 1:
      goto LABEL_3;
    case 2:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      long long v14 = &v8[*(int *)(v13 + 48)];
      long long v15 = *((_OWORD *)v14 + 11);
      v23[10] = *((_OWORD *)v14 + 10);
      v23[11] = v15;
      *(void *)&v23[12] = *((void *)v14 + 24);
      long long v16 = *((_OWORD *)v14 + 7);
      v23[6] = *((_OWORD *)v14 + 6);
      v23[7] = v16;
      long long v17 = *((_OWORD *)v14 + 9);
      v23[8] = *((_OWORD *)v14 + 8);
      v23[9] = v17;
      long long v18 = *((_OWORD *)v14 + 5);
      v23[4] = *((_OWORD *)v14 + 4);
      v23[5] = v18;
      long long v19 = *((_OWORD *)v14 + 3);
      v23[2] = *((_OWORD *)v14 + 2);
      v23[3] = v19;
      long long v20 = *((_OWORD *)v14 + 1);
      v23[0] = *(_OWORD *)v14;
      v23[1] = v20;
      sub_20A4E7338((uint64_t)v23);
      uint64_t v12 = type metadata accessor for StockChartModel;
      goto LABEL_7;
    case 3:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v23, &v8[*(int *)(v21 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v23);
      uint64_t v12 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_7;
    case 4:
      uint64_t v12 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      return v10;
    case 6:
      return v10;
    case 7:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v10 = sub_20A8CCD70();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v10;
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v8[*(int *)(v11 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      uint64_t v12 = type metadata accessor for StockFeedMastheadModel;
LABEL_7:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))v12);
      return v10;
  }
}

uint64_t sub_20A4E5BE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CD4E0();
  uint64_t v32 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CCE00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v14);
  uint64_t v15 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_3;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      long long v19 = &v14[*(int *)(v18 + 48)];
      long long v20 = *((_OWORD *)v19 + 11);
      v33[10] = *((_OWORD *)v19 + 10);
      v33[11] = v20;
      *(void *)&v33[12] = *((void *)v19 + 24);
      long long v21 = *((_OWORD *)v19 + 7);
      v33[6] = *((_OWORD *)v19 + 6);
      v33[7] = v21;
      long long v22 = *((_OWORD *)v19 + 9);
      v33[8] = *((_OWORD *)v19 + 8);
      v33[9] = v22;
      long long v23 = *((_OWORD *)v19 + 5);
      v33[4] = *((_OWORD *)v19 + 4);
      v33[5] = v23;
      long long v24 = *((_OWORD *)v19 + 3);
      v33[2] = *((_OWORD *)v19 + 2);
      v33[3] = v24;
      long long v25 = *((_OWORD *)v19 + 1);
      v33[0] = *(_OWORD *)v19;
      v33[1] = v25;
      sub_20A4E7338((uint64_t)v33);
      long long v17 = type metadata accessor for StockChartModel;
      goto LABEL_10;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v33, &v14[*(int *)(v26 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v33);
      long long v17 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_10;
    case 4u:
      long long v17 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_10;
    case 5u:
      long long v17 = type metadata accessor for StockFeedLayoutModel;
      goto LABEL_10;
    case 6u:
      return v15;
    case 7u:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
      if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x263F599E8])
      {
        (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
        uint64_t v31 = *(void *)v8;
        sub_20A4E73C4();
        uint64_t v27 = swift_projectBox();
        uint64_t v28 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v4, v27, v2);
        sub_20A8CD4D0();
        __swift_project_boxed_opaque_existential_1(v33, *((uint64_t *)&v33[1] + 1));
        uint64_t v15 = sub_20A8CD770();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
        swift_release();
      }
      else
      {
        uint64_t v15 = sub_20A8CCDC0();
        long long v30 = *(void (**)(char *, uint64_t))(v6 + 8);
        v30(v11, v5);
        v30(v8, v5);
      }
      return v15;
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v14[*(int *)(v16 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      long long v17 = type metadata accessor for StockFeedMastheadModel;
LABEL_10:
      sub_20A4E7364((uint64_t)v14, (uint64_t (*)(void))v17);
      return 0;
  }
}

uint64_t sub_20A4E60C0@<X0>(uint64_t a1@<X8>)
{
  __asm { FMOV            V0.2D, #-8.0 }
  *(_OWORD *)a1 = _Q0;
  *(_OWORD *)(a1 + 16) = _Q0;
  *(void *)(a1 + 32) = 0x4018000000000000;
  uint64_t v7 = *MEMORY[0x263F7D6E8];
  uint64_t v8 = sub_20A8C9210();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(a1, v7, v8);
}

uint64_t sub_20A4E6144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4E6170(a1, MEMORY[0x263F599F0], a2);
}

uint64_t sub_20A4E6170@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v8 = sub_20A8CCE00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v12);
  long long v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v5, (uint64_t)v14);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      goto LABEL_3;
    case 2:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      long long v19 = &v14[*(int *)(v18 + 48)];
      long long v20 = *((_OWORD *)v19 + 11);
      v27[10] = *((_OWORD *)v19 + 10);
      v27[11] = v20;
      *(void *)&v27[12] = *((void *)v19 + 24);
      long long v21 = *((_OWORD *)v19 + 7);
      v27[6] = *((_OWORD *)v19 + 6);
      v27[7] = v21;
      long long v22 = *((_OWORD *)v19 + 9);
      v27[8] = *((_OWORD *)v19 + 8);
      v27[9] = v22;
      long long v23 = *((_OWORD *)v19 + 5);
      v27[4] = *((_OWORD *)v19 + 4);
      v27[5] = v23;
      long long v24 = *((_OWORD *)v19 + 3);
      v27[2] = *((_OWORD *)v19 + 2);
      v27[3] = v24;
      long long v25 = *((_OWORD *)v19 + 1);
      v27[0] = *(_OWORD *)v19;
      v27[1] = v25;
      sub_20A4E7338((uint64_t)v27);
      long long v17 = type metadata accessor for StockChartModel;
      goto LABEL_8;
    case 3:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v27, &v14[*(int *)(v26 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v27);
      long long v17 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_8;
    case 4:
      long long v17 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_8;
    case 5:
      long long v17 = type metadata accessor for StockFeedLayoutModel;
      goto LABEL_8;
    case 6:
      goto LABEL_9;
    case 7:
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
      a2(a1);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v14[*(int *)(v16 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      long long v17 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      uint64_t result = sub_20A4E7364((uint64_t)v14, (uint64_t (*)(void))v17);
LABEL_9:
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return result;
  }
}

uint64_t sub_20A4E6494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4E6170(a1, MEMORY[0x263F599F8], a2);
}

uint64_t sub_20A4E64C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CCE00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v2, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_20A8CCDF0();
    uint64_t v11 = v17[1];
    uint64_t v12 = v17[2];
    uint64_t v13 = v17[3];
    uint64_t v14 = v17[4];
    char v15 = v18;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    uint64_t result = sub_20A4E7364((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    char v15 = 1;
  }
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v12;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = v15;
  return result;
}

uint64_t sub_20A4E6674()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v9 = sub_20A8CCDB0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
    return MEMORY[0x263F8EE78];
  }
  return v9;
}

uint64_t sub_20A4E67F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  char v9 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_3;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v13 = &v8[*(int *)(v12 + 48)];
      long long v14 = *((_OWORD *)v13 + 11);
      v22[10] = *((_OWORD *)v13 + 10);
      v22[11] = v14;
      *(void *)&v22[12] = *((void *)v13 + 24);
      long long v15 = *((_OWORD *)v13 + 7);
      v22[6] = *((_OWORD *)v13 + 6);
      v22[7] = v15;
      long long v16 = *((_OWORD *)v13 + 9);
      v22[8] = *((_OWORD *)v13 + 8);
      v22[9] = v16;
      long long v17 = *((_OWORD *)v13 + 5);
      v22[4] = *((_OWORD *)v13 + 4);
      v22[5] = v17;
      long long v18 = *((_OWORD *)v13 + 3);
      v22[2] = *((_OWORD *)v13 + 2);
      v22[3] = v18;
      long long v19 = *((_OWORD *)v13 + 1);
      v22[0] = *(_OWORD *)v13;
      v22[1] = v19;
      sub_20A4E7338((uint64_t)v22);
      uint64_t v11 = type metadata accessor for StockChartModel;
      goto LABEL_8;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v22, &v8[*(int *)(v20 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v22);
      uint64_t v11 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_8;
    case 4u:
      uint64_t v11 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_8;
    case 5u:
      uint64_t v11 = type metadata accessor for StockFeedLayoutModel;
      goto LABEL_8;
    case 6u:
      return v9 & 1;
    case 7u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      char v9 = sub_20A8CCDD0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v9 & 1;
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v8[*(int *)(v10 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      uint64_t v11 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))v11);
      return v9 & 1;
  }
}

uint64_t sub_20A4E6AF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  char v9 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_3;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v13 = &v8[*(int *)(v12 + 48)];
      long long v14 = *((_OWORD *)v13 + 11);
      v22[10] = *((_OWORD *)v13 + 10);
      v22[11] = v14;
      *(void *)&v22[12] = *((void *)v13 + 24);
      long long v15 = *((_OWORD *)v13 + 7);
      v22[6] = *((_OWORD *)v13 + 6);
      v22[7] = v15;
      long long v16 = *((_OWORD *)v13 + 9);
      v22[8] = *((_OWORD *)v13 + 8);
      v22[9] = v16;
      long long v17 = *((_OWORD *)v13 + 5);
      v22[4] = *((_OWORD *)v13 + 4);
      v22[5] = v17;
      long long v18 = *((_OWORD *)v13 + 3);
      v22[2] = *((_OWORD *)v13 + 2);
      v22[3] = v18;
      long long v19 = *((_OWORD *)v13 + 1);
      v22[0] = *(_OWORD *)v13;
      v22[1] = v19;
      sub_20A4E7338((uint64_t)v22);
      uint64_t v11 = type metadata accessor for StockChartModel;
      goto LABEL_8;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v22, &v8[*(int *)(v20 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v22);
      uint64_t v11 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_8;
    case 4u:
      uint64_t v11 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_8;
    case 5u:
      uint64_t v11 = type metadata accessor for StockFeedLayoutModel;
      goto LABEL_8;
    case 6u:
      return v9 & 1;
    case 7u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      char v9 = sub_20A8CCD90();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v9 & 1;
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v8[*(int *)(v10 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      uint64_t v11 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))v11);
      char v9 = 0;
      return v9 & 1;
  }
}

uint64_t sub_20A4E6E04()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  uint64_t v9 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      goto LABEL_3;
    case 2u:
      sub_20A4DCB08(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v13 = &v8[*(int *)(v12 + 48)];
      long long v14 = *((_OWORD *)v13 + 11);
      v22[10] = *((_OWORD *)v13 + 10);
      v22[11] = v14;
      *(void *)&v22[12] = *((void *)v13 + 24);
      long long v15 = *((_OWORD *)v13 + 7);
      v22[6] = *((_OWORD *)v13 + 6);
      v22[7] = v15;
      long long v16 = *((_OWORD *)v13 + 9);
      v22[8] = *((_OWORD *)v13 + 8);
      v22[9] = v16;
      long long v17 = *((_OWORD *)v13 + 5);
      v22[4] = *((_OWORD *)v13 + 4);
      v22[5] = v17;
      long long v18 = *((_OWORD *)v13 + 3);
      v22[2] = *((_OWORD *)v13 + 2);
      v22[3] = v18;
      long long v19 = *((_OWORD *)v13 + 1);
      v22[0] = *(_OWORD *)v13;
      v22[1] = v19;
      sub_20A4E7338((uint64_t)v22);
      uint64_t v11 = type metadata accessor for StockChartModel;
      goto LABEL_8;
    case 3u:
      sub_20A4DCB08(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v22, &v8[*(int *)(v20 + 48)], 0x109uLL);
      sub_20A4E72F0((uint64_t)v22);
      uint64_t v11 = type metadata accessor for QuoteDetailViewModel;
      goto LABEL_8;
    case 4u:
      uint64_t v11 = type metadata accessor for StockFeedEarningsViewModel;
      goto LABEL_8;
    case 5u:
      uint64_t v11 = type metadata accessor for StockFeedLayoutModel;
      goto LABEL_8;
    case 6u:
      return v9;
    case 7u:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v9 = sub_20A8CCD60();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v9;
    default:
      sub_20A42CB10();
      sub_20A4E7364((uint64_t)&v8[*(int *)(v10 + 48)], (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
LABEL_3:
      uint64_t v11 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))v11);
      return 0;
  }
}

uint64_t sub_20A4E7110()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8CCE00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4E728C(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v9 = sub_20A8CCD50();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    sub_20A4E7364((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockFeedLayoutModel);
    return MEMORY[0x263F8EE88];
  }
  return v9;
}

uint64_t sub_20A4E728C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4E72F0(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A4E7338(uint64_t a1)
{
  return a1;
}

uint64_t sub_20A4E7364(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A4E73C4()
{
  if (!qword_26763B6D0)
  {
    sub_20A8CD4E0();
    sub_20A8CD4C0();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26763B6D0);
    }
  }
}

uint64_t sub_20A4E7440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4E74A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockFeedLayoutModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4E74E8()
{
  return sub_20A8CEE20();
}

uint64_t sub_20A4E754C()
{
  return sub_20A8CEE20();
}

uint64_t sub_20A4E75B0()
{
  return sub_20A8CEE30();
}

uint64_t sub_20A4E7614()
{
  return sub_20A8CEE30();
}

uint64_t sub_20A4E7678()
{
  return sub_20A8CEE20();
}

id sub_20A4E76DC(void *a1, unsigned __int8 a2)
{
  int v4 = a2;
  id v5 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v5, sel_setCornerCurve_, *MEMORY[0x263F15A20]);

  id v6 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v6, sel_setCornerRadius_, 4.0);

  id v7 = objc_msgSend(a1, sel_titleLabel);
  if (v7)
  {
    uint64_t v8 = v7;
    objc_msgSend(v7, sel_setLineBreakMode_, 2);
  }
  uint64_t v9 = v2 + 8;
  if (v4 == 2)
  {
    uint64_t v11 = v2[11];
    uint64_t v10 = v2[12];
    __swift_project_boxed_opaque_existential_1(v9, v11);
    uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v10 + 16) + 416))(v11);
    id v13 = objc_msgSend(v12, sel_stocksAccessibilityAdjustedDarkerForIncreaseContrast);

    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = v2[11];
    uint64_t v16 = v2[12];
    __swift_project_boxed_opaque_existential_1(v9, v15);
    if (v4) {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
    }
    else {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 40))(v15, v16);
    }
    id v13 = (id)v17;
    uint64_t v14 = 2;
  }
  objc_msgSend(a1, sel_setBackgroundColor_, v13);

  return objc_msgSend(a1, sel_setContentHorizontalAlignment_, v14);
}

id sub_20A4E7894(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = v3;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  id v7 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v8 = v7;
  uint64_t v9 = sub_20A8C7F80();
  uint64_t v10 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v9;
  uint64_t v11 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = v4 + 8;
  uint64_t v13 = v4[11];
  uint64_t v14 = v4[12];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v15 = *(void *)(v14 + 16);
  if (a3) {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 88);
  }
  else {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 184);
  }
  id v17 = v11;
  uint64_t v18 = v16(v13, v15);
  uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v18;
  uint64_t v20 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v19;
  *(void *)(inited + 112) = v20;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFC999999999999ALL;
  id v21 = v20;
  sub_20A4CF8B0(inited);
  id v22 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  long long v23 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  long long v24 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithString_attributes_, v23, v24);

  return v25;
}

id sub_20A4E7AA0(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = v3;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  id v7 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v8 = v7;
  uint64_t v9 = sub_20A8C7F80();
  uint64_t v10 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v9;
  uint64_t v11 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = v4 + 8;
  uint64_t v13 = v4[11];
  uint64_t v14 = v4[12];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v15 = *(void *)(v14 + 16);
  if (a3) {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 88);
  }
  else {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 184);
  }
  id v17 = v11;
  uint64_t v18 = v16(v13, v15);
  uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v18;
  uint64_t v20 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v19;
  *(void *)(inited + 112) = v20;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFC999999999999ALL;
  id v21 = v20;
  sub_20A4CF8B0(inited);
  id v22 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  long long v23 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  long long v24 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithString_attributes_, v23, v24);

  return v25;
}

id sub_20A4E7CAC(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = v3;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  id v7 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v8 = v7;
  uint64_t v9 = sub_20A8C7F80();
  uint64_t v10 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v9;
  uint64_t v11 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 72) = v11;
  uint64_t v12 = v4 + 8;
  uint64_t v13 = v4[11];
  uint64_t v14 = v4[12];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v15 = *(void *)(v14 + 16);
  if (a3) {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 88);
  }
  else {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 184);
  }
  id v17 = v11;
  uint64_t v18 = v16(v13, v15);
  uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v18;
  uint64_t v20 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v19;
  *(void *)(inited + 112) = v20;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFC999999999999ALL;
  id v21 = v20;
  sub_20A4CF8B0(inited);
  id v22 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  long long v23 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  long long v24 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v22, sel_initWithString_attributes_, v23, v24);

  return v25;
}

id sub_20A4E7EB8(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = v3;
  if (a3 == 2)
  {
    id v5 = v3 + 8;
    uint64_t v7 = v3[11];
    uint64_t v6 = v3[12];
    __swift_project_boxed_opaque_existential_1(v5, v4[11]);
    id v8 = (id)(*(uint64_t (**)(uint64_t))(*(void *)(v6 + 16) + 424))(v7);
  }
  else
  {
    id v8 = objc_msgSend(self, sel_whiteColor);
  }
  uint64_t v9 = v8;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v11 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v12 = v11;
  uint64_t v13 = sub_20A8C7F80();
  uint64_t v14 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v13;
  uint64_t v15 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = v15;
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v9;
  id v16 = v15;
  id v17 = v9;
  sub_20A4CF8B0(inited);
  id v18 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v19 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v20 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  return v21;
}

id sub_20A4E809C(uint64_t a1, uint64_t a2, char a3)
{
  int v4 = v3;
  if (a3 == 2)
  {
    id v5 = v3 + 8;
    uint64_t v7 = v3[11];
    uint64_t v6 = v3[12];
    __swift_project_boxed_opaque_existential_1(v5, v4[11]);
    id v8 = (id)(*(uint64_t (**)(uint64_t))(*(void *)(v6 + 16) + 424))(v7);
  }
  else
  {
    id v8 = objc_msgSend(self, sel_whiteColor);
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_colorWithAlphaComponent_, 0.5);

  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  id v12 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v13 = v12;
  uint64_t v14 = sub_20A8C7F80();
  uint64_t v15 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v14;
  id v16 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v15;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v10;
  id v17 = v16;
  id v18 = v10;
  sub_20A4CF8B0(inited);
  id v19 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v20 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  id v21 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

uint64_t sub_20A4E82A0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockViewStyler()
{
  return self;
}

uint64_t sub_20A4E832C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 88);
  uint64_t v8 = *(void *)(*(void *)v3 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 64), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  id v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v14[3] = v7;
  v14[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
  v10(a1, v7, v9);
  id v12 = sub_20A4E85B4((uint64_t)boxed_opaque_existential_1, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  *a3 = v12;
  return result;
}

void *sub_20A4E83F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = a3;
  uint64_t v11 = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  sub_20A8C7F90();
  swift_allocObject();
  a2[2] = sub_20A8C7FA0();
  swift_allocObject();
  a2[3] = sub_20A8C7FA0();
  swift_allocObject();
  a2[4] = sub_20A8C7FA0();
  swift_allocObject();
  a2[5] = sub_20A8C7FA0();
  swift_allocObject();
  a2[6] = sub_20A8C7FA0();
  swift_allocObject();
  a2[7] = sub_20A8C7FA0();
  sub_20A42BEBC(&v9, (uint64_t)(a2 + 8));
  return a2;
}

void *sub_20A4E85B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  long long v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_20A4E83F0((uint64_t)v9, v10, a3, a4);
}

id sub_20A4E86A0()
{
  uint64_t v1 = v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v3 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v4 = v3;
  uint64_t v5 = sub_20A8C7F80();
  uint64_t v6 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v5;
  uint64_t v7 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v7;
  uint64_t v8 = v1 + 8;
  uint64_t v10 = v1[11];
  uint64_t v9 = v1[12];
  __swift_project_boxed_opaque_existential_1(v8, v10);
  uint64_t v11 = *(void *)(v9 + 16);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 40);
  id v13 = v7;
  uint64_t v14 = v12(v10, v11);
  uint64_t v15 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v14;
  id v16 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 112) = v16;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFDB851EB851EB85;
  id v17 = v16;
  sub_20A4CF8B0(inited);
  id v18 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v19 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v20 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  return v21;
}

void sub_20A4E8884(void *a1, char a2)
{
  id v4 = objc_msgSend(a1, sel_titleLabel);
  if (v4)
  {
    id v16 = v4;
    uint64_t v5 = (objc_class *)objc_msgSend(v4, sel_font);
    if (v5)
    {
      Class v6 = v5;
      uint64_t v7 = (objc_class *)objc_msgSend(v16, sel_color);
      if (v7)
      {
        v8.super.Class isa = v7;
        uint64_t v9 = (objc_class *)objc_msgSend(a1, sel_currentAttributedTitle);
        if (v9)
        {
          Class v10 = v9;
          if (a2) {
            char v11 = sub_20A8CF760();
          }
          else {
            char v11 = 1;
          }
          swift_bridgeObjectRelease();
          Class isa = NSAttributedString.appendingAccessibilityDWCPriceChangeArrow(pointingUpward:withFont:withColor:)(v11 & 1, (UIFont)v6, v8).super.isa;
          objc_msgSend(a1, sel_setAttributedTitle_forState_, isa, 0);

          Class v14 = v8.super.isa;
          v8.super.Class isa = isa;
        }
        else
        {
          Class v10 = v6;
          Class v14 = (Class)v16;
        }

        Class v13 = v10;
        Class v6 = v8.super.isa;
      }
      else
      {
        Class v13 = (Class)v16;
      }

      Class v12 = v6;
    }
    else
    {
      Class v12 = (Class)v16;
    }
  }
}

uint64_t sub_20A4E8A10()
{
  sub_20A4E8B40(0, (unint64_t *)&qword_26AC6AB40, MEMORY[0x263F7E060]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v4 = (char *)&v6 - v3;
  sub_20A4E8B40(0, (unint64_t *)&unk_26AC6AB78, MEMORY[0x263F7E068]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E9F0 = result;
  return result;
}

void sub_20A4E8B40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE60] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A4E8B94(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 16, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  sub_20A42BEBC(&v9, v2 + 16);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  return sub_20A8CA6E0();
}

void sub_20A4E8CA8(uint64_t a1, double *a2, char *a3)
{
  uint64_t v4 = v3;
  objc_msgSend(a3, sel_setHidden_, 0);
  id v8 = objc_msgSend(a3, sel_traitCollection);
  id v9 = objc_msgSend(v8, sel_horizontalSizeClass);

  if (v9) {
    BOOL v10 = v9 == (id)2;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10)
  {
    objc_msgSend(a3, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(a3, sel_setHidden_, 1);
  }
  else if (v9 == (id)1)
  {
    objc_msgSend(a3, sel_setFrame_, *a2, a2[1], a2[2], a2[3]);
    uint64_t v11 = *(void **)&a3[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_quoteSummaryView];
    objc_msgSend(v11, (SEL)&off_263FDE418, a2[4], a2[5], a2[6], a2[7]);
    uint64_t v12 = type metadata accessor for StockFeedMastheadModel();
    uint64_t v13 = a1 + *(int *)(v12 + 28);
    memcpy(__dst, a2 + 8, 0x1A1uLL);
    sub_20A6BDA14(v13, (uint64_t)__dst, (uint64_t)v11);
    id v34 = *(id *)&a3[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_exchangeLabel];
    swift_beginAccess();
    sub_20A4342F4(v4 + 16, (uint64_t)v35);
    uint64_t v14 = __swift_project_boxed_opaque_existential_1(v35, v35[3]);
    sub_20A817594(a1 + *(int *)(v12 + 20));
    uint64_t v15 = (void *)*v14;
    sub_20A42CF04();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
    id v17 = (void *)*MEMORY[0x263F814F0];
    *(void *)(inited + 32) = *MEMORY[0x263F814F0];
    id v18 = (void *)v15[2];
    uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    *(void *)(inited + 40) = v18;
    uint64_t v20 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v19;
    *(void *)(inited + 72) = v20;
    uint64_t v21 = v15[6];
    uint64_t v22 = v15[7];
    __swift_project_boxed_opaque_existential_1(v15 + 3, v21);
    uint64_t v23 = *(void *)(v22 + 16);
    long long v33 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 184);
    swift_bridgeObjectRetain();
    id v24 = v17;
    id v25 = v18;
    id v26 = v20;
    uint64_t v27 = v33(v21, v23);
    *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(inited + 80) = v27;
    sub_20A4CF8B0(inited);
    id v28 = objc_allocWithZone(MEMORY[0x263F086A0]);
    long long v29 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A4E91B4((unint64_t *)&qword_26AC7F9F8, 255, type metadata accessor for Key);
    long long v30 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);
    swift_bridgeObjectRelease();

    objc_msgSend(v34, sel_setAttributedText_, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    objc_msgSend(v34, sel_setFrame_, a2[61], a2[62], a2[63], a2[64]);
    id v32 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(a3, sel_setBackgroundColor_, v32);
  }
  else
  {
    sub_20A8CF520();
    __break(1u);
  }
}

uint64_t sub_20A4E90F4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedPriceViewRenderer()
{
  return self;
}

uint64_t sub_20A4E915C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_20A4E91B4(&qword_26AC76ED0, a2, (void (*)(uint64_t))type metadata accessor for StockFeedPriceViewRenderer);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20A4E91B4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t SceneStateManagerBridge.__allocating_init(activityReceiver:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t SceneStateManagerBridge.init(activityReceiver:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t SceneStateManagerBridge.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SceneStateManagerBridge.__deallocating_deinit()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneDidBecomeActive()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_sceneDidBecomeActive);
}

void SceneStateManagerBridge.sceneDidBecomeActive(with:sourceApplication:sceneID:)(uint64_t a1)
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + 16);
  sub_20A4E9450(a1, (uint64_t)v5);
  uint64_t v7 = sub_20A8C2530();
  uint64_t v8 = *(void *)(v7 - 8);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  swift_unknownObjectRetain();
  BOOL v10 = 0;
  if (v9 != 1)
  {
    BOOL v10 = (void *)sub_20A8C24D0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)sub_20A8CE240();
  objc_msgSend(v6, sel_sceneDidBecomeActiveWithURL_sourceApplication_sceneID_, v10, v11, v12);
  swift_unknownObjectRelease();
}

uint64_t sub_20A4E9450(uint64_t a1, uint64_t a2)
{
  sub_20A4845D0(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneWillEnterForeground()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_sceneWillEnterForeground);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneDidEnterBackground()()
{
  objc_msgSend(*(id *)(v0 + 16), sel_sceneDidEnterBackground);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneDidEnterBackground(with:)(Swift::String with)
{
}

id SceneStateManagerBridge.sceneWillConnectToSession(withOptions:)()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_sceneWillConnect);
}

Swift::Void __swiftcall SceneStateManagerBridge.sceneWillResignActive(with:)(Swift::String with)
{
}

void sub_20A4E9500(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = *(void **)(v3 + 16);
  swift_unknownObjectRetain();
  id v6 = (id)sub_20A8CE240();
  objc_msgSend(v5, *a3, v6);
  swift_unknownObjectRelease();
}

id sub_20A4E9580()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_sceneDidBecomeActive);
}

void sub_20A4E9594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_20A4E95A0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_sceneWillEnterForeground);
}

id sub_20A4E95B0()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_sceneDidEnterBackground);
}

void sub_20A4E95C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_20A4E95CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = *(void **)(v5 + 16);
  swift_unknownObjectRetain();
  id v8 = (id)sub_20A8CE240();
  objc_msgSend(v7, *a5, v8);
  swift_unknownObjectRelease();
}

id sub_20A4E964C()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_sceneWillConnect);
}

uint64_t type metadata accessor for SceneStateManagerBridge()
{
  return self;
}

uint64_t method lookup function for SceneStateManagerBridge(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SceneStateManagerBridge);
}

uint64_t dispatch thunk of SceneStateManagerBridge.__allocating_init(activityReceiver:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_20A4E96B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_20A4E9720(uint64_t a1)
{
  uint64_t v2 = sub_20A8C4020();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A4E9784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A4E97E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A4E984C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A4E98B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A4E9914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4E9928);
}

uint64_t sub_20A4E9928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A4E9994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4E99A8);
}

uint64_t sub_20A4E99A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C4020();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HeadlineViewModel()
{
  uint64_t result = qword_26763B6D8;
  if (!qword_26763B6D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4E9A64()
{
  uint64_t result = sub_20A8C4020();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of StockPriceDataRefreshManagerType.refreshWatchlistPriceData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of StockPriceDataRefreshManagerType.pushSidecarStock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of StockPriceDataRefreshManagerType.popSidecarStock(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_20A4E9B2C(long long *a1, long long *a2, long long *a3)
{
  uint64_t v7 = sub_20A8C6200();
  MEMORY[0x270FA5388](v7);
  sub_20A4ED95C(&qword_26AC69798, 255, MEMORY[0x263F7CF38]);
  id v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CF38];
  sub_20A4ED2D4(0, (unint64_t *)&qword_26AC7F740, MEMORY[0x263F7CF38], MEMORY[0x263F8D488]);
  sub_20A4ED5AC((unint64_t *)&qword_26AC7F748, (unint64_t *)&qword_26AC7F740, v8);
  sub_20A8CF290();
  sub_20A4ED224();
  swift_allocObject();
  *(void *)(v3 + 136) = sub_20A8C5C90();
  *(void *)(v3 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08760]), sel_init);
  *(unsigned char *)(v3 + 152) = 0;
  *(void *)(v3 + 160) = 0;
  sub_20A42BEBC(a1, v3 + 16);
  sub_20A42BEBC(a2, v3 + 56);
  sub_20A42BEBC(a3, v3 + 96);
  return v3;
}

uint64_t sub_20A4E9CF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = (void *)sub_20A8C3F00();
  uint64_t v4 = *(v49 - 1);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_20A8C3190();
  uint64_t v42 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  long long v39 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C59F0();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v41 = (void *)((char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  long long v40 = (void *)((char *)v38 - v10);
  sub_20A4342F4(v1 + 56, (uint64_t)v51);
  v38[2] = v53;
  v38[3] = v52;
  v38[1] = __swift_project_boxed_opaque_existential_1(v51, v52);
  int64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v38[0] = v1;
    uint64_t v50 = MEMORY[0x263F8EE78];
    sub_20A68C494(0, v11, 0);
    uint64_t v13 = *(void (**)(char *, uint64_t, void *))(v4 + 16);
    uint64_t v12 = v4 + 16;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v46 = *(void (**)(void *))(v12 + 56);
    uint64_t v47 = v13;
    uint64_t v15 = (void (**)(char *, void *))(v12 - 8);
    do
    {
      id v16 = v48;
      id v17 = v49;
      uint64_t v18 = v12;
      v47(v48, v14, v49);
      uint64_t v19 = sub_20A8C3EC0();
      uint64_t v21 = v20;
      (*v15)(v16, v17);
      uint64_t v22 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v50;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_20A68C494(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v50;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v25 = v22 + 16 * v24;
      *(void *)(v25 + 32) = v19;
      *(void *)(v25 + 40) = v21;
      v14 += (uint64_t)v46;
      --v11;
      uint64_t v12 = v18;
    }
    while (v11);
    uint64_t v2 = v38[0];
  }
  uint64_t v49 = (void *)(v2 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 96), *(void *)(v2 + 120));
  id v26 = v39;
  sub_20A8C3AC0();
  sub_20A8C3130();
  uint64_t v28 = v27;
  uint64_t v48 = *(char **)(v42 + 8);
  ((void (*)(char *, uint64_t))v48)(v26, v45);
  long long v29 = v40;
  *long long v40 = v28;
  LODWORD(v47) = *MEMORY[0x263F7CD70];
  uint64_t v30 = v43;
  uint64_t v31 = v44;
  uint64_t v46 = *(void (**)(void *))(v43 + 104);
  v46(v29);
  __swift_project_boxed_opaque_existential_1(v49, *(void *)(v2 + 120));
  sub_20A8C3AC0();
  sub_20A8C3100();
  uint64_t v33 = v32;
  ((void (*)(char *, uint64_t))v48)(v26, v45);
  id v34 = v41;
  *uint64_t v41 = v33;
  ((void (*)(void *, void, uint64_t))v46)(v34, v47, v31);
  uint64_t v35 = sub_20A8C39A0();
  swift_bridgeObjectRelease();
  long long v36 = *(void (**)(void *, uint64_t))(v30 + 8);
  v36(v34, v31);
  v36(v29, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v35;
}

void sub_20A4EA188(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 152) == 1)
  {
    sub_20A4EA3AC(a1);
    double v3 = v2;
    uint64_t v4 = *(void **)(v1 + 160);
    if (!v4 || (objc_msgSend(v4, sel_timeInterval), v5 != v3))
    {
      if (qword_26AC6ED78 != -1) {
        swift_once();
      }
      uint64_t v6 = (void *)qword_26AC6ED70;
      sub_20A43F778();
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_20A8D4540;
      uint64_t v8 = MEMORY[0x263F8D538];
      uint64_t v9 = MEMORY[0x263F8D5B8];
      *(void *)(v7 + 56) = MEMORY[0x263F8D538];
      *(void *)(v7 + 64) = v9;
      *(double *)(v7 + 32) = v3;
      *(void *)(v7 + 96) = v8;
      *(void *)(v7 + 104) = v9;
      *(double *)(v7 + 72) = v3 * 0.1;
      id v10 = v6;
      sub_20A8CEA00();
      sub_20A8C7D90();

      swift_bridgeObjectRelease();
      int64_t v11 = *(void **)(v1 + 160);
      if (v11) {
        objc_msgSend(v11, sel_invalidate);
      }
      uint64_t v12 = self;
      v16[4] = sub_20A4ED7D8;
      v16[5] = v1;
      v16[0] = MEMORY[0x263EF8330];
      v16[1] = 1107296256;
      v16[2] = sub_20A4391D4;
      v16[3] = &block_descriptor_19;
      uint64_t v13 = _Block_copy(v16);
      swift_retain_n();
      swift_release();
      id v14 = objc_msgSend(v12, sel_scheduledTimerWithTimeInterval_repeats_block_, 1, v13, v3);
      _Block_release(v13);
      objc_msgSend(v14, sel_setTolerance_, v3 * 0.1);
      swift_release();
      uint64_t v15 = *(void **)(v1 + 160);
      *(void *)(v1 + 160) = v14;
    }
  }
}

uint64_t sub_20A4EA3AC(uint64_t a1)
{
  uint64_t v69 = a1;
  uint64_t v2 = sub_20A8C2EB0();
  uint64_t v64 = *(uint64_t (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v73 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (char *)&v53 - v5;
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v70 = (char *)&v53 - v10;
  uint64_t v11 = sub_20A8C3190();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v62 = v11;
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v68 = (char *)&v53 - v15;
  sub_20A4ED2D4(0, &qword_26AC68DE0, MEMORY[0x263F7AA20], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_20A8C2EF0();
  int64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v55 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC69050 != -1) {
LABEL_46:
  }
    swift_once();
  sub_20A4ED95C(&qword_26AC68208, v21, (void (*)(uint64_t))type metadata accessor for StockPriceDataRefreshManager);
  sub_20A8C41C0();
  if (v76)
  {
    if (qword_267639C48 != -1) {
      swift_once();
    }
    return sub_20A8C41C0();
  }
  sub_20A4ED858(v69, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_20A4ED8EC((uint64_t)v18, &qword_26AC68DE0, MEMORY[0x263F7AA20]);
    __swift_project_boxed_opaque_existential_1((void *)v1 + 12, *((void *)v1 + 15));
    unint64_t v24 = v68;
    sub_20A8C3AC0();
    sub_20A8C30E0();
    return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v24, v62);
  }
  int64_t v53 = v20;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  id v26 = v55;
  uint64_t v54 = v19;
  v25(v55, v18, v19);
  uint64_t v27 = *((void *)v1 + 15);
  uint64_t v59 = v1 + 96;
  uint64_t v60 = v1;
  __swift_project_boxed_opaque_existential_1((void *)v1 + 12, v27);
  uint64_t v19 = (uint64_t)v68;
  sub_20A8C3AC0();
  sub_20A8C3140();
  double v29 = v28;
  uint64_t v18 = (char *)(v63 + 8);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v63 + 8);
  v63 += 8;
  uint64_t v58 = v30;
  v30((char *)v19, v62);
  uint64_t v1 = v26;
  uint64_t v31 = sub_20A8C2EE0();
  uint64_t v32 = *(void *)(v31 + 64);
  uint64_t v56 = v31 + 64;
  uint64_t v33 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v34 = -1;
  if (v33 < 64) {
    uint64_t v34 = ~(-1 << v33);
  }
  uint64_t v35 = v64;
  unint64_t v36 = v34 & v32;
  int64_t v57 = (unint64_t)(v33 + 63) >> 6;
  uint64_t v67 = v71 + 32;
  uint64_t v68 = (char *)(v71 + 16);
  unsigned int v66 = *MEMORY[0x263F7A9A0];
  long long v37 = (void (**)(char *, uint64_t))(v64 + 1);
  uint64_t v64 = (uint64_t (**)(char *, uint64_t))(v71 + 8);
  uint64_t v65 = (void (**)(char *, void, uint64_t))(v35 + 13);
  uint64_t v69 = v31;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  while (v36)
  {
    unint64_t v44 = __clz(__rbit64(v36));
    v36 &= v36 - 1;
    unint64_t v45 = v44 | (v20 << 6);
LABEL_40:
    uint64_t v49 = v70;
    uint64_t v50 = v71;
    (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v70, *(void *)(v69 + 56) + *(void *)(v71 + 72) * v45, v6);
    uint64_t v19 = v6;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v8, v49, v6);
    uint64_t v18 = v72;
    sub_20A8C3D40();
    (*v65)(v73, v66, v2);
    sub_20A4ED95C(&qword_26AC68DD8, 255, MEMORY[0x263F7A9C0]);
    sub_20A8CE570();
    sub_20A8CE570();
    if (v76 == v74 && v77 == v75)
    {
      swift_bridgeObjectRelease_n();
      long long v38 = *v37;
      (*v37)(v73, v2);
      v38(v72, v2);
    }
    else
    {
      char v51 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = *v37;
      (*v37)(v73, v2);
      v52(v72, v2);
      if ((v51 & 1) == 0) {
        goto LABEL_14;
      }
    }
    __swift_project_boxed_opaque_existential_1(v59, *((void *)v60 + 15));
    uint64_t v18 = v61;
    sub_20A8C3AC0();
    sub_20A8C30E0();
    double v40 = v39;
    v58(v18, v62);
    if (v40 < v29) {
      double v29 = v40;
    }
LABEL_14:
    uint64_t v1 = v8;
    double v41 = COERCE_DOUBLE(sub_20A8C3DF0());
    if (v29 > v41 && (v42 & 1) == 0) {
      double v29 = v41;
    }
    uint64_t v6 = v19;
    uint64_t result = (*v64)(v8, v19);
  }
  int64_t v46 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v46 >= v57) {
    goto LABEL_44;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v46);
  ++v20;
  if (v47) {
    goto LABEL_39;
  }
  int64_t v20 = v46 + 1;
  if (v46 + 1 >= v57) {
    goto LABEL_44;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v20);
  if (v47) {
    goto LABEL_39;
  }
  int64_t v20 = v46 + 2;
  if (v46 + 2 >= v57) {
    goto LABEL_44;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v20);
  if (v47) {
    goto LABEL_39;
  }
  int64_t v20 = v46 + 3;
  if (v46 + 3 >= v57) {
    goto LABEL_44;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v20);
  if (v47) {
    goto LABEL_39;
  }
  int64_t v20 = v46 + 4;
  if (v46 + 4 >= v57) {
    goto LABEL_44;
  }
  unint64_t v47 = *(void *)(v56 + 8 * v20);
  if (v47)
  {
LABEL_39:
    unint64_t v36 = (v47 - 1) & v47;
    unint64_t v45 = __clz(__rbit64(v47)) + (v20 << 6);
    goto LABEL_40;
  }
  int64_t v48 = v46 + 5;
  if (v48 >= v57)
  {
LABEL_44:
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v55, v54);
  }
  unint64_t v47 = *(void *)(v56 + 8 * v48);
  if (v47)
  {
    int64_t v20 = v48;
    goto LABEL_39;
  }
  while (1)
  {
    int64_t v20 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v20 >= v57) {
      goto LABEL_44;
    }
    unint64_t v47 = *(void *)(v56 + 8 * v20);
    ++v48;
    if (v47) {
      goto LABEL_39;
    }
  }
  __break(1u);
  return result;
}

void sub_20A4EAD48()
{
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  id v0 = (id)qword_26AC6ED70;
  sub_20A8CEA00();
  sub_20A8C7D90();

  sub_20A8C2EF0();
  sub_20A8C6670();
  sub_20A8C64A0();
  swift_release();
  uint64_t v1 = (void *)sub_20A8C6450();
  sub_20A8C65C0();
  swift_release();

  sub_20A44D17C();
  id v2 = (id)sub_20A8CEBE0();
  sub_20A8C6520();
  swift_release();
  swift_release();
}

uint64_t sub_20A4EAEF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C2EF0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_20A4EAF60(uint64_t a1)
{
}

uint64_t sub_20A4EAF8C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockPriceDataRefreshManager()
{
  return self;
}

uint64_t sub_20A4EB010(uint64_t a1)
{
  uint64_t v2 = sub_20A8C2830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFTimeInterval v6 = CACurrentMediaTime();
  sub_20A8C2820();
  uint64_t v7 = sub_20A8C2810();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_26AC6ED70;
  sub_20A43F778();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20A8D3DC0;
  *(void *)(v11 + 56) = MEMORY[0x263F8D310];
  *(void *)(v11 + 64) = sub_20A43F830();
  *(void *)(v11 + 32) = v7;
  *(void *)(v11 + 40) = v9;
  id v12 = v10;
  swift_bridgeObjectRetain();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(*(id *)(a1 + 144), sel_allObjects);
  uint64_t v14 = sub_20A8CE5E0();

  uint64_t v15 = sub_20A4EB3E4(v14);
  swift_bridgeObjectRelease();
  if (v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  sub_20A4ED2D4(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  sub_20A8C6670();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v7;
  v17[3] = v9;
  v17[4] = v16;
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_20A8C6450();
  sub_20A8C2EF0();
  sub_20A8C6510();
  swift_release();
  swift_release();

  uint64_t v19 = (CFTimeInterval *)swift_allocObject();
  v19[2] = v6;
  *((void *)v19 + 3) = v7;
  *((void *)v19 + 4) = v9;
  swift_bridgeObjectRetain();
  int64_t v20 = (void *)sub_20A8C6450();
  sub_20A8C64F0();
  swift_release();
  swift_release();

  uint64_t v21 = (CFTimeInterval *)swift_allocObject();
  v21[2] = v6;
  *((void *)v21 + 3) = v7;
  *((void *)v21 + 4) = v9;
  uint64_t v22 = (void *)sub_20A8C6450();
  uint64_t v23 = sub_20A8C6550();
  swift_release();
  swift_release();

  return v23;
}

uint64_t sub_20A4EB3E4(uint64_t a1)
{
  sub_20A4ED2D4(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - v3;
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  double v28 = (char *)&v24 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_20A68C89C(0, v11, 0);
  if (!v11) {
    return v30;
  }
  uint64_t v12 = a1 + 32;
  id v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v26 = v6;
  uint64_t v27 = MEMORY[0x263F8EE58] + 8;
  uint64_t v25 = v8;
  while (1)
  {
    sub_20A4ED764(v12, (uint64_t)v29);
    int v15 = swift_dynamicCast();
    uint64_t v16 = *v13;
    if (!v15) {
      break;
    }
    v16(v4, 0, 1, v5);
    uint64_t v17 = *v14;
    uint64_t v18 = v28;
    (*v14)(v28, v4, v5);
    v17(v8, v18, v5);
    uint64_t v19 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_20A68C89C(0, *(void *)(v19 + 16) + 1, 1);
      uint64_t v19 = v30;
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      sub_20A68C89C(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v30;
    }
    *(void *)(v19 + 16) = v21 + 1;
    unint64_t v22 = v19
        + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))
        + *(void *)(v26 + 72) * v21;
    uint64_t v8 = v25;
    v17((char *)v22, v25, v5);
    uint64_t v30 = v19;
    v12 += 32;
    if (!--v11) {
      return v19;
    }
  }
  v16(v4, 1, 1, v5);
  swift_release();
  sub_20A4ED8EC((uint64_t)v4, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  return 0;
}

uint64_t sub_20A4EB700(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *a1;
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_26AC6ED70;
  sub_20A43F778();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  *(void *)(v10 + 56) = MEMORY[0x263F8D310];
  *(void *)(v10 + 64) = sub_20A43F830();
  *(void *)(v10 + 32) = a3;
  *(void *)(v10 + 40) = a4;
  id v11 = v9;
  swift_bridgeObjectRetain();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_20A4AC9C8(a5);
  uint64_t v12 = sub_20A4E9CF8(v8);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_20A4EB854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v5 = sub_20A8C2EF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_26AC6ED70;
  sub_20A43F778();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D4540;
  id v11 = v9;
  uint64_t result = sub_20A8CE780();
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v13 < 9.22337204e18)
  {
    uint64_t v23 = (uint64_t)v13;
    uint64_t v21 = a1;
    uint64_t v14 = sub_20A8CF720();
    uint64_t v16 = v15;
    uint64_t v17 = v5;
    uint64_t v18 = MEMORY[0x263F8D310];
    *(void *)(v10 + 56) = MEMORY[0x263F8D310];
    unint64_t v19 = sub_20A43F830();
    *(void *)(v10 + 32) = v14;
    *(void *)(v10 + 40) = v16;
    *(void *)(v10 + 96) = v18;
    *(void *)(v10 + 104) = v19;
    uint64_t v20 = v22;
    *(void *)(v10 + 64) = v19;
    *(void *)(v10 + 72) = v20;
    *(void *)(v10 + 80) = a3;
    swift_bridgeObjectRetain();
    sub_20A8CEA00();
    sub_20A8C7D90();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v21, v17);
    sub_20A4ED2D4(0, &qword_26AC69838, MEMORY[0x263F7AA20], MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A4EBADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  id v5 = (id)qword_26AC6ED70;
  sub_20A8CE9E0();
  sub_20A43F778();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_20A8D5CB0;
  uint64_t result = sub_20A8CE780();
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v8 < 9.22337204e18)
  {
    uint64_t v9 = sub_20A8CF720();
    uint64_t v11 = v10;
    uint64_t v12 = MEMORY[0x263F8D310];
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    unint64_t v13 = sub_20A43F830();
    *(void *)(v6 + 32) = v9;
    *(void *)(v6 + 40) = v11;
    *(void *)(v6 + 96) = v12;
    *(void *)(v6 + 104) = v13;
    *(void *)(v6 + 64) = v13;
    *(void *)(v6 + 72) = a2;
    *(void *)(v6 + 80) = a3;
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
    swift_bridgeObjectRetain();
    sub_20A8CF4E0();
    *(void *)(v6 + 136) = v12;
    *(void *)(v6 + 144) = v13;
    *(void *)(v6 + 112) = 0;
    *(void *)(v6 + 120) = 0xE000000000000000;
    sub_20A8C7D90();

    return swift_bridgeObjectRelease();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A4EBCC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  sub_20A4ED2D4(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  sub_20A8C6670();
  sub_20A44D17C();
  uint64_t v6 = (void *)sub_20A8CEBE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  type metadata accessor for StockPriceDataRefreshManager();
  sub_20A8C6520();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_20A4EBEAC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_20A8CC220();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  MEMORY[0x270FA5388](v8);
  unsigned int v66 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_20A8CC250();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CC230();
  uint64_t v62 = *(void *)(v12 - 8);
  uint64_t v63 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C3F00();
  MEMORY[0x270FA5388](v14);
  uint64_t v60 = v15;
  v20.n128_f64[0] = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)v52 - v17;
  uint64_t v22 = *a1;
  uint64_t v23 = *(void *)(*a1 + 16);
  uint64_t v71 = a2;
  uint64_t v72 = v23;
  uint64_t v64 = v11;
  uint64_t v73 = a3;
  if (!v23)
  {
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v18 + 16);
    uint64_t v31 = a3;
    uint64_t v58 = v3;
    uint64_t v32 = v18;
LABEL_12:
    uint64_t v35 = *(void **)(a2 + 144);
    uint64_t v36 = v19;
    v30(v19, v31, v14, v20);
    objc_msgSend(v35, sel_addObject_, sub_20A8CF7B0());
    swift_unknownObjectRelease();
    sub_20A44D17C();
    uint64_t v38 = v62;
    uint64_t v37 = v63;
    double v39 = v61;
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, *MEMORY[0x263F8F080], v63);
    uint64_t v72 = sub_20A8CEC10();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v37);
    ((void (*)(uint64_t, uint64_t, uint64_t))v30)(v36, v73, v14);
    unint64_t v40 = (*(unsigned __int8 *)(v32 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v71;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v41 + v40, v36, v14);
    aBlock[4] = sub_20A4ED51C;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4713FC;
    aBlock[3] = &block_descriptor_6;
    char v42 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v43 = v64;
    sub_20A8CC240();
    aBlock[8] = MEMORY[0x263F8EE78];
    sub_20A4ED95C(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
    unint64_t v44 = (uint64_t (*)(uint64_t))MEMORY[0x263F8F030];
    sub_20A4ED2D4(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_20A4ED5AC((unint64_t *)&qword_26AC7F7B0, (unint64_t *)&unk_26AC7F7A0, v44);
    unint64_t v45 = v66;
    uint64_t v46 = v69;
    sub_20A8CF290();
    unint64_t v47 = (void *)v72;
    MEMORY[0x210526F10](0, v43, v45, v42);
    _Block_release(v42);

    (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v43, v67);
    return swift_release();
  }
  uint64_t v56 = v19;
  unint64_t v53 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v24 = v22 + v53;
  uint64_t v25 = v18 + 16;
  uint64_t v26 = v18;
  uint64_t v70 = *(void (**)(char *, unint64_t, uint64_t, double))(v18 + 16);
  v70((char *)v52 - v17, v22 + v53, v14, v20.n128_f64[0]);
  uint64_t v27 = sub_20A4ED95C((unint64_t *)&qword_26AC68FC8, 255, MEMORY[0x263F7AF08]);
  swift_bridgeObjectRetain();
  uint64_t v59 = v27;
  char v28 = sub_20A8CE210();
  uint64_t v57 = v26;
  double v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  v29(v21, v14);
  if (v28) {
    return swift_bridgeObjectRelease();
  }
  v52[1] = v25 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  if (v72 == 1)
  {
    uint64_t v58 = v4;
    goto LABEL_10;
  }
  uint64_t v55 = *(void *)(v57 + 72);
  ((void (*)(char *, uint64_t, uint64_t))v70)(v21, v24 + v55, v14);
  char v33 = sub_20A8CE210();
  v29(v21, v14);
  if (v33) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v58 = v4;
  if (v72 == 2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a2 = v71;
    uint64_t v31 = v73;
LABEL_11:
    uint64_t v32 = v57;
    uint64_t v19 = v56;
    uint64_t v30 = (void (*)(uint64_t, uint64_t, uint64_t, __n128))v70;
    goto LABEL_12;
  }
  uint64_t v54 = v29;
  uint64_t v48 = v22 + v53 + 2 * v55;
  uint64_t v49 = 2;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v70)(v21, v48, v14);
    uint64_t v50 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    char v51 = sub_20A8CE210();
    v54(v21, v14);
    if (v51) {
      return swift_bridgeObjectRelease();
    }
    ++v49;
    v48 += v55;
    uint64_t v31 = v73;
    if (v50 == v72)
    {
      swift_bridgeObjectRelease();
      a2 = v71;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20A4EC65C(void *a1)
{
  uint64_t v2 = sub_20A8C59F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v16 - v7;
  uint64_t v9 = a1[10];
  v16[1] = a1[11];
  __swift_project_boxed_opaque_existential_1(a1 + 7, v9);
  sub_20A484548();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  *(void *)(v10 + 32) = sub_20A8C3EC0();
  *(void *)(v10 + 40) = v11;
  uint64_t v12 = *MEMORY[0x263F7CD50];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v13(v8, v12, v2);
  v13(v5, v12, v2);
  sub_20A8C39A0();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  return ((uint64_t (*)(char *, uint64_t))v14)(v8, v2);
}

uint64_t sub_20A4EC820()
{
  uint64_t v0 = sub_20A8C5CA0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A4EC890(uint64_t a1)
{
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  sub_20A8C5C70();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_20A8C5C60();
  return swift_release();
}

uint64_t sub_20A4EC9E4(uint64_t a1)
{
  uint64_t v3 = sub_20A8C3F00();
  double v4 = MEMORY[0x270FA5388](v3);
  unint64_t v6 = *(void **)(v1 + 144);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v4);
  objc_msgSend(v6, sel_removeObject_, sub_20A8CF7B0());
  return swift_unknownObjectRelease();
}

void sub_20A4ECAD4()
{
  uint64_t v1 = v0;
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  id v2 = (id)qword_26AC6ED70;
  sub_20A8CEA00();
  sub_20A8C7D90();

  *(unsigned char *)(v1 + 152) = 1;
  sub_20A8C2EF0();
  sub_20A8C6670();
  sub_20A8C64A0();
  swift_release();
  uint64_t v3 = (void *)sub_20A8C6450();
  sub_20A8C65C0();
  swift_release();

  sub_20A44D17C();
  id v4 = (id)sub_20A8CEBE0();
  sub_20A8C6520();
  swift_release();
  swift_release();
}

void sub_20A4ECC8C()
{
  if (qword_26AC6ED78 != -1) {
    swift_once();
  }
  id v1 = (id)qword_26AC6ED70;
  sub_20A8CEA00();
  sub_20A8C7D90();

  *(unsigned char *)(v0 + 152) = 0;
  id v2 = *(void **)(v0 + 160);
  if (v2)
  {
    objc_msgSend(v2, sel_invalidate);
    id v2 = *(void **)(v0 + 160);
  }
  *(void *)(v0 + 160) = 0;
}

uint64_t sub_20A4ECD54()
{
  uint64_t v0 = sub_20A8C6240();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_20A8C3080())
  {
    if (qword_26AC6ED78 != -1) {
      swift_once();
    }
    id v4 = (id)qword_26AC6ED70;
    sub_20A8CEA00();
    sub_20A8C7D90();

    v9[0] = 0x68736572666572;
    v9[1] = 0xE700000000000000;
    sub_20A8C5CA0();
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)sub_20A8C6450();
    uint64_t v6 = sub_20A8C6500();
    swift_release();
  }
  else
  {
    if (qword_26AC6ED78 != -1) {
      swift_once();
    }
    id v7 = (id)qword_26AC6ED70;
    sub_20A8CEA00();
    sub_20A8C7D90();

    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CF58], v0);
    sub_20A4ED2D4(0, &qword_26763B6E8, MEMORY[0x263F7CF68], MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  return v6;
}

uint64_t sub_20A4ECFF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7CF60];
  uint64_t v3 = sub_20A8C6240();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_20A4ED070()
{
  return MEMORY[0x270F7A3F0](*v0);
}

uint64_t sub_20A4ED09C(uint64_t a1)
{
  return MEMORY[0x270F7A3E8](a1, *v1);
}

uint64_t sub_20A4ED0C8()
{
  sub_20A8C3190();
  sub_20A8C6670();
  swift_retain();
  uint64_t v0 = (void *)sub_20A8C6450();
  sub_20A8C6240();
  uint64_t v1 = sub_20A8C64F0();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_20A4ED174(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F7A3F8](a1, a2, *v2);
}

uint64_t sub_20A4ED1A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = sub_20A4ED95C((unint64_t *)&unk_26AC789D8, a2, (void (*)(uint64_t))type metadata accessor for StockPriceDataRefreshManager);
  uint64_t result = sub_20A4ED95C(&qword_26AC789D0, v3, (void (*)(uint64_t))type metadata accessor for StockPriceDataRefreshManager);
  *(void *)(a1 + 16) = result;
  return result;
}

void sub_20A4ED224()
{
  if (!qword_26AC69608)
  {
    sub_20A8C2EF0();
    unint64_t v0 = sub_20A8C5CB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69608);
    }
  }
}

uint64_t sub_20A4ED290()
{
  return sub_20A4ED534(sub_20A4EBCC8);
}

uint64_t sub_20A4ED2A8()
{
  return sub_20A4ED644(MEMORY[0x263F7AC68]);
}

void sub_20A4ED2D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4ED338()
{
  uint64_t v1 = sub_20A8C3F00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A4ED3C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_20A8C3F00() - 8);
  return sub_20A4EBEAC(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A4ED51C()
{
  return sub_20A4ED534((uint64_t (*)(uint64_t, uint64_t))sub_20A4EC65C);
}

uint64_t sub_20A4ED534(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_20A8C3F00() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_20A4ED5AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4ED2D4(255, a2, a3, MEMORY[0x263F8D488]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4ED610()
{
  return sub_20A4EB010(v0);
}

uint64_t sub_20A4ED618()
{
  return sub_20A4ED644(MEMORY[0x263F7AC70]);
}

uint64_t sub_20A4ED644(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v3);
  return a1(v3, v4);
}

uint64_t sub_20A4ED6A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4ED6E0(uint64_t *a1, uint64_t a2)
{
  return sub_20A4EB700(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_20A4ED700()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4ED738(uint64_t a1)
{
  return sub_20A4EB854(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_20A4ED758(uint64_t a1)
{
  return sub_20A4EBADC(a1, *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_20A4ED764(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20A4ED7C0()
{
  return sub_20A4ED7E0();
}

void sub_20A4ED7D8()
{
}

uint64_t sub_20A4ED7E0()
{
  uint64_t v0 = sub_20A8C5CA0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20A4ED858(uint64_t a1, uint64_t a2)
{
  sub_20A4ED2D4(0, &qword_26AC68DE0, MEMORY[0x263F7AA20], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4ED8EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A4ED2D4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A4ED95C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4ED9A4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
  return sub_20A8C3AD0();
}

uint64_t sub_20A4ED9F0()
{
  return sub_20A4ECD54();
}

uint64_t sub_20A4EDA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4EDA24);
}

uint64_t sub_20A4EDA24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A4EDA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4EDAA4);
}

uint64_t sub_20A4EDAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TodayViewLayoutOptions()
{
  uint64_t result = qword_26AC743E0;
  if (!qword_26AC743E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4EDB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v40 = a2;
  uint64_t v41 = a1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4EF8D4(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v34 - v5;
  uint64_t v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_20A8CD5D0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CD5C0();
  uint64_t v39 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4EF8D4(0, (unint64_t *)&unk_26763B6F0, MEMORY[0x263F59D78], v3);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v34 - v17;
  uint64_t v19 = sub_20A8CD950();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4EE7B8(v41, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_20A4EF980((uint64_t)v18, (uint64_t)&unk_26763B6F0, MEMORY[0x263F59D78], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4EF8D4);
  }
  uint64_t v36 = v15;
  uint64_t v37 = v12;
  uint64_t v41 = v13;
  v34[1] = v7;
  uint64_t v35 = v9;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  uint64_t v24 = v40;
  if (v40)
  {
    v34[0] = v6;
    swift_retain();
    uint64_t v25 = (void *)sub_20A8CD930();
    sub_20A4EF8D4(0, &qword_26763B768, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x263F8E0F8]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
    *(void *)(inited + 32) = sub_20A8CEA20();
    uint64_t v27 = sub_20A7BB1F0(inited);
    swift_setDeallocating();
    type metadata accessor for ActivityType(0);
    swift_arrayDestroy();
    LOBYTE(inited) = sub_20A444660((uint64_t)v25, v27);

    swift_bridgeObjectRelease();
    if ((inited & 1) == 0
      || (uint64_t v28 = v24,
          double v29 = v36,
          sub_20A8CD940(),
          sub_20A8CD5B0(),
          (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v41),
          char v30 = sub_20A8CD4B0(),
          v30 == 2))
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      return swift_release();
    }
    uint64_t v31 = (uint64_t)v35;
    *uint64_t v35 = v28 | ((unint64_t)(v30 & 1) << 61);
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = sub_20A8C6D60();
    uint64_t v33 = v34[0];
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v34[0], 1, 1, v32);
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
    uint64_t v43 = 0;
    memset(v42, 0, sizeof(v42));
    swift_retain();
    sub_20A5BFAAC(v31, 0, v33, (uint64_t)v44, 0, 0, (uint64_t)v42);
    swift_release();
    swift_release();
    sub_20A4EF980((uint64_t)v42, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
    sub_20A4EF980((uint64_t)v44, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
    sub_20A4EF980(v33, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4EF8D4);
    sub_20A4EF9E0(v31);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_20A4EE1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8CD5C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (id *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A4EF8D4(0, (unint64_t *)&unk_26763B6F0, MEMORY[0x263F59D78], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = sub_20A8CD950();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4EE7B8(a1, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_20A4EF980((uint64_t)v12, (uint64_t)&unk_26763B6F0, MEMORY[0x263F59D78], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4EF8D4);
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  if (!a2) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_20A8C99A0();
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC69E00);
  sub_20A8C4990();
  if ((swift_dynamicCast() & 1) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  uint64_t v34 = a3;
  uint64_t v18 = (void *)sub_20A8CD930();
  char v19 = sub_20A4EE84C();

  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return swift_release();
  }
  sub_20A8CD940();
  int v20 = (*(uint64_t (**)(id *, uint64_t))(v7 + 88))(v9, v6);
  if (v20 == *MEMORY[0x263F59C80])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);
    id v21 = *v9;
    swift_bridgeObjectRelease();
    sub_20A4EED24();
    uint64_t v23 = (char *)v9 + *(int *)(v22 + 64);
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_20A8CD930();
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v21;
    v25[3] = a2;
    v25[4] = v34;
    v25[5] = v24;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    id v26 = v24;
    sub_20A8C48E0();
    swift_release();
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v27 = sub_20A8CD5D0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v23, v27);
  }
  if (v20 == *MEMORY[0x263F59C78])
  {
    (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);

    uint64_t v28 = (unint64_t *)&unk_26763B700;
    double v29 = (unint64_t *)&unk_26763B708;
LABEL_15:
    sub_20A4EEC24(0, v28, v29);
    goto LABEL_16;
  }
  if (v20 != *MEMORY[0x263F59C68])
  {
    if (v20 != *MEMORY[0x263F59C70])
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return (*(uint64_t (**)(id *, uint64_t))(v7 + 8))(v9, v6);
    }
    (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);

    uint64_t v28 = (unint64_t *)&unk_26763B710;
    double v29 = (unint64_t *)&unk_26763B718;
    goto LABEL_15;
  }
  (*(void (**)(id *, uint64_t))(v7 + 96))(v9, v6);
  swift_unknownObjectRelease();
  sub_20A4EECA0();
LABEL_16:
  uint64_t v31 = (char *)v9 + *(int *)(v30 + 48);
  uint64_t v32 = sub_20A8CD5D0();
  (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_20A4EE7B8(uint64_t a1, uint64_t a2)
{
  sub_20A4EF8D4(0, (unint64_t *)&unk_26763B6F0, MEMORY[0x263F59D78], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A4EE84C()
{
  uint64_t v0 = (void *)sub_20A8CEA70();
  uint64_t v1 = sub_20A8CE280();
  uint64_t v3 = v2;
  if (v1 == sub_20A8CE280() && v3 == v4) {
    goto LABEL_3;
  }
  char v6 = sub_20A8CF760();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v6) {
    return v5 & 1;
  }
  uint64_t v0 = (void *)sub_20A8CEA60();
  uint64_t v8 = sub_20A8CE280();
  uint64_t v10 = v9;
  if (v8 == sub_20A8CE280() && v10 == v11) {
    goto LABEL_3;
  }
  char v12 = sub_20A8CF760();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v12) {
    return v5 & 1;
  }
  uint64_t v0 = (void *)sub_20A8CEA10();
  uint64_t v13 = sub_20A8CE280();
  uint64_t v15 = v14;
  if (v13 == sub_20A8CE280() && v15 == v16) {
    goto LABEL_3;
  }
  char v17 = sub_20A8CF760();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v17) {
    return v5 & 1;
  }
  uint64_t v0 = (void *)sub_20A8CEA40();
  uint64_t v18 = sub_20A8CE280();
  uint64_t v20 = v19;
  if (v18 == sub_20A8CE280() && v20 == v21) {
    goto LABEL_3;
  }
  char v22 = sub_20A8CF760();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v22) {
    return v5 & 1;
  }
  uint64_t v0 = (void *)sub_20A8CEA20();
  uint64_t v23 = sub_20A8CE280();
  uint64_t v25 = v24;
  if (v23 == sub_20A8CE280() && v25 == v26) {
    goto LABEL_3;
  }
  char v27 = sub_20A8CF760();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v27) {
    return v5 & 1;
  }
  uint64_t v0 = (void *)sub_20A8CEA30();
  uint64_t v28 = sub_20A8CE280();
  uint64_t v30 = v29;
  if (v28 == sub_20A8CE280() && v30 == v31) {
    goto LABEL_3;
  }
  char v32 = sub_20A8CF760();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = 0;
  if (v32) {
    return v5 & 1;
  }
  uint64_t v0 = (void *)sub_20A8CEA50();
  uint64_t v33 = sub_20A8CE280();
  uint64_t v35 = v34;
  if (v33 == sub_20A8CE280() && v35 == v36)
  {
LABEL_3:

    swift_bridgeObjectRelease_n();
    char v5 = 0;
  }
  else
  {
    char v37 = sub_20A8CF760();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v37 & 1) == 0)
    {
      uint64_t v38 = (void *)sub_20A8CE240();
      uint64_t v39 = sub_20A8CE280();
      uint64_t v41 = v40;
      if (v39 == sub_20A8CE280() && v41 == v42)
      {
        swift_bridgeObjectRelease_n();
        char v5 = 0;
      }
      else
      {
        char v43 = sub_20A8CF760();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v5 = v43 ^ 1;
      }
    }
  }
  return v5 & 1;
}

void sub_20A4EEC24(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_20A42CFF0(255, a3);
    sub_20A8CD5D0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_20A4EECA0()
{
  if (!qword_26763B720)
  {
    sub_20A4D42C0(255, &qword_26763B728);
    sub_20A8CD5D0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B720);
    }
  }
}

void sub_20A4EED24()
{
  if (!qword_26763B730)
  {
    MEMORY[0x270FA5388](0);
    sub_20A4D42C0(255, (unint64_t *)&qword_26AC7F990);
    sub_20A4BE14C(255, (unint64_t *)&qword_26AC686A0);
    sub_20A8CD5D0();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26763B730);
    }
  }
}

uint64_t sub_20A4EEE54(uint64_t a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v65 = a5;
  unint64_t v69 = a3;
  uint64_t v70 = a4;
  uint64_t v79 = a1;
  uint64_t v6 = sub_20A8C6E20();
  uint64_t v67 = *(void *)(v6 - 8);
  uint64_t v68 = v6;
  MEMORY[0x270FA5388](v6);
  unsigned int v66 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_20A8C6890();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  unint64_t v53 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_20A8C72F0();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4EF8D4(0, &qword_26763BB50, MEMORY[0x263F7DA80], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  char v12 = (char *)&v52 - v11;
  uint64_t v13 = sub_20A8C6950();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v58 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_20A8C6730();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C6CB0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  id v73 = a2;
  sub_20A670898((uint64_t)v20);
  sub_20A4EF8D4(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v22 = v21;
  uint64_t v23 = sub_20A8C4620();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (v26 + 32) & ~v26;
  uint64_t v76 = v26 | 7;
  uint64_t v77 = v22;
  uint64_t v71 = v27 + v25;
  uint64_t v28 = swift_allocObject();
  long long v78 = xmmword_20A8D3DC0;
  *(_OWORD *)(v28 + 16) = xmmword_20A8D3DC0;
  uint64_t v72 = v27;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 104);
  uint64_t v29 = v24 + 104;
  unsigned int v75 = *MEMORY[0x263F24D48];
  uint64_t v74 = v30;
  ((void (*)(uint64_t))v30)(v28 + v27);
  sub_20A4EF938((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v69)
  {
    sub_20A8C99C0();
    uint64_t v31 = sub_20A8C9F40();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v12, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = sub_20A8C9F40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 1, 1, v32);
  }
  sub_20A8C6960();
  sub_20A8C6720();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v78;
  uint64_t v34 = v75;
  uint64_t v57 = v23;
  uint64_t v56 = v29;
  uint64_t v35 = v74;
  v74(v33 + v72, v75, v23);
  sub_20A4EF938((unint64_t *)&unk_26763B740, MEMORY[0x263F79960]);
  uint64_t v36 = v61;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v36);
  char v37 = v62;
  sub_20A67115C(*(void **)(v70 + 80));
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v78;
  uint64_t v39 = v72;
  uint64_t v40 = v34;
  uint64_t v41 = v57;
  v35(v38 + v72, v40, v57);
  sub_20A4EF938((unint64_t *)&unk_26AC69AD0, MEMORY[0x263F7A270]);
  unint64_t v69 = 0x800000020A8FD8D0;
  uint64_t v42 = v64;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v42);
  id v43 = objc_msgSend(v73, sel_sourceChannel);
  if (v43)
  {
    unint64_t v44 = v43;
    __swift_project_boxed_opaque_existential_1((void *)(v70 + 40), *(void *)(v70 + 64));
    uint64_t v45 = v53;
    sub_20A661B70(v44);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v78;
    v74(v46 + v39, v75, v41);
    sub_20A4EF938((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v47 = v55;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v45, v47);
  }
  sub_20A8CE280();
  uint64_t v48 = v66;
  sub_20A8C6E10();
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = v78;
  v74(v49 + v39, v75, v41);
  sub_20A4EF938(&qword_26763B750, MEMORY[0x263F79EA8]);
  uint64_t v50 = v68;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v48, v50);
  sub_20A8C67D0();
  sub_20A4EF938((unint64_t *)&unk_26763B758, MEMORY[0x263F799C0]);
  memset(v80, 0, sizeof(v80));
  sub_20A8C45D0();
  return sub_20A44349C((uint64_t)v80);
}

uint64_t sub_20A4EF878()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4EF8C8(uint64_t a1)
{
  return sub_20A4EEE54(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_20A4EF8D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4EF938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4EF980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A4EF9E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StocksActivity(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A4EFA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v31 = a2;
  uint64_t v30 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v30);
  uint64_t v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C2830();
  uint64_t v26 = *(void *)(v3 - 8);
  uint64_t v27 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A4F04B4(0, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
  uint64_t v24 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - v10;
  sub_20A4F0338();
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v24 - v18;
  sub_20A4F042C((unint64_t *)&unk_26AC69DC0);
  sub_20A4F042C(&qword_26AC69DB8);
  sub_20A8C5F70();
  sub_20A8C2820();
  uint64_t v20 = sub_20A8C2810();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v27);
  *uint64_t v7 = v20;
  v7[1] = v22;
  v7[2] = v28;
  swift_storeEnumTagMultiPayload();
  sub_20A44D810();
  swift_retain();
  sub_20A8C8320();
  sub_20A8C5F60();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  sub_20A4F0568(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A8C8810();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t sub_20A4EFE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v31 = a2;
  uint64_t v30 = type metadata accessor for ForYouFeedSectionDescriptor();
  MEMORY[0x270FA5388](v30);
  uint64_t v29 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_20A8C2830();
  uint64_t v3 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ForYouFeedModel();
  MEMORY[0x270FA5388](v27);
  uint64_t v7 = (uint64_t *)((char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A4F04B4(0, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
  uint64_t v24 = v8;
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - v9;
  sub_20A4F0338();
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v24 - v17;
  sub_20A4F042C((unint64_t *)&unk_26AC69DC0);
  sub_20A4F042C(&qword_26AC69DB8);
  sub_20A8C5F70();
  sub_20A8C2820();
  uint64_t v19 = sub_20A8C2810();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
  sub_20A4F04B4(0, (unint64_t *)&qword_26AC6B010, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59858]);
  swift_allocObject();
  swift_retain();
  uint64_t v22 = sub_20A8CC7A0();
  *uint64_t v7 = v19;
  v7[1] = v21;
  v7[2] = v22;
  swift_storeEnumTagMultiPayload();
  sub_20A44D810();
  sub_20A8C8320();
  sub_20A8C5F60();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v24);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_20A4F0568(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
  sub_20A8C8810();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

void sub_20A4F0338()
{
  if (!qword_26AC69748)
  {
    sub_20A4F04B4(255, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
    sub_20A4F042C((unint64_t *)&unk_26AC69DC0);
    sub_20A4F042C(&qword_26AC69DB8);
    unint64_t v0 = sub_20A8C5F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69748);
    }
  }
}

uint64_t sub_20A4F042C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4F04B4(255, &qword_26AC69DD0, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedModel, sub_20A44D810, MEMORY[0x263F7D2D8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A4F04B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A4F0534()
{
  return sub_20A4F0568(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
}

uint64_t sub_20A4F0568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4F05B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockForYouFeedGroup();
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F0CC0(v1 + *(int *)(v3 + 36), (uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
  uint64_t v9 = sub_20A8CC470();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_20A4F0D28((uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
    sub_20A4F0CC0(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
LABEL_4:
    uint64_t v11 = sub_20A8C3E20();
    goto LABEL_5;
  }
  uint64_t v11 = sub_20A8CC3C0();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  sub_20A4F0CC0(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
  if (!v13) {
    goto LABEL_4;
  }
LABEL_5:
  sub_20A4F0D28((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StockForYouFeedGroup);
  return v11;
}

uint64_t sub_20A4F07B8(uint64_t a1)
{
  if (*(unsigned char *)(v1 + *(int *)(a1 + 24))) {
    return MEMORY[0x263F8EE78];
  }
  else {
    return sub_20A8CE5F0();
  }
}

unint64_t sub_20A4F07DC(uint64_t a1)
{
  if (*(unsigned char *)(v1 + *(int *)(a1 + 24))) {
    return sub_20A4CFD34(MEMORY[0x263F8EE78]);
  }
  else {
    return sub_20A8CE600();
  }
}

double sub_20A4F0800(uint64_t a1)
{
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F0CC0(v1 + *(int *)(a1 + 28), (uint64_t)v5, (uint64_t (*)(void))sub_20A42C764);
  uint64_t v6 = sub_20A8CC470();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_20A4F0D28((uint64_t)v5, (uint64_t (*)(void))sub_20A42C764);
    return 1.0;
  }
  else
  {
    sub_20A8CC3E0();
    double v8 = v9;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  return v8;
}

double sub_20A4F0948(uint64_t a1, uint64_t a2)
{
  return sub_20A4F0978(a1, a2, MEMORY[0x263F59730]);
}

double sub_20A4F0960(uint64_t a1, uint64_t a2)
{
  return sub_20A4F0978(a1, a2, MEMORY[0x263F59728]);
}

double sub_20A4F0978(uint64_t a1, uint64_t a2, double (*a3)(void))
{
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v6 - 8);
  double v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F0CC0(v3 + *(int *)(a1 + 28), (uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
  uint64_t v9 = sub_20A8CC470();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_20A4F0D28((uint64_t)v8, (uint64_t (*)(void))sub_20A42C764);
    return 0.0;
  }
  else
  {
    double v11 = a3();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  return v11;
}

uint64_t sub_20A4F0AD0()
{
  uint64_t v0 = sub_20A4F05B0();
  uint64_t v2 = v1;
  if (v0 == sub_20A4F05B0() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_20A4F0B64(uint64_t a1)
{
  uint64_t v2 = sub_20A4F0D88(&qword_26763B788);

  return MEMORY[0x270F4FAB8](a1, v2);
}

uint64_t sub_20A4F0BBC()
{
  return 0x6B636F7453;
}

uint64_t sub_20A4F0BD8()
{
  return sub_20A4F0D88(&qword_26763B770);
}

uint64_t type metadata accessor for StockForYouFeedGroup()
{
  uint64_t result = qword_26AC723B0;
  if (!qword_26AC723B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4F0C58()
{
  return sub_20A4F0D88(&qword_26763B778);
}

uint64_t sub_20A4F0C8C()
{
  return sub_20A4F0D88(&qword_26763B780);
}

uint64_t sub_20A4F0CC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4F0D28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A4F0D88(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockForYouFeedGroup();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A4F0DCC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (char *)a1 + v9;
    double v11 = (char *)a2 + v9;
    uint64_t v12 = sub_20A8CC470();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_20A42C764(0);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_20A4F0F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_20A8CC470();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_20A4F1098(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_20A8CC470();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_20A42C764(0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_20A4F1208(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8CC470();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A42C764(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_20A4F13E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_20A8CC470();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_20A42C764(0);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  return a1;
}

uint64_t sub_20A4F1540(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_20A8CC470();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_20A42C764(0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_20A4F170C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4F1720);
}

uint64_t sub_20A4F1720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    sub_20A42C764(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_20A4F184C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4F1860);
}

uint64_t sub_20A4F1860(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20A8C3F00();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    sub_20A42C764(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_20A4F198C()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A42C764(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_20A4F1A6C()
{
  uint64_t v1 = sub_20A8CA9F0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
  sub_20A8CCEB0();
  sub_20A4F5770(0, &qword_26AC6A2F8, (void (*)(uint64_t))type metadata accessor for ForYouTitleView, (void (*)(void))sub_20A4F5994);
  uint64_t v5 = *MEMORY[0x263F7DD78];
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  v6(v4, v5, v1);
  sub_20A8CEB20();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7(v4, v1);
  sub_20A4F5770(0, &qword_26AC6A308, (void (*)(uint64_t))type metadata accessor for SectionHeaderView, (void (*)(void))sub_20A4F58F0);
  v6(v4, v5, v1);
  sub_20A8CEB20();
  v7(v4, v1);
  sub_20A4F5770(0, &qword_26AC6A2F0, (void (*)(uint64_t))type metadata accessor for StockTitleView, (void (*)(void))sub_20A4F5888);
  v6(v4, v5, v1);
  sub_20A8CEB20();
  v7(v4, v1);
  sub_20A4F5770(0, &qword_26AC6A318, (void (*)(uint64_t))type metadata accessor for StockSectionFooterView, (void (*)(void))sub_20A4F5298);
  uint64_t v8 = *MEMORY[0x263F7DD70];
  v6(v4, v8, v1);
  sub_20A8CEB20();
  v7(v4, v1);
  sub_20A4F5770(0, &qword_26AC6A320, MEMORY[0x263F59E48], (void (*)(void))sub_20A4F57E0);
  v6(v4, v8, v1);
  sub_20A8CEB20();
  return ((uint64_t (*)(char *, uint64_t))v7)(v4, v1);
}

id sub_20A4F1E04(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v175 = a4;
  uint64_t v173 = a3;
  uint64_t v4 = type metadata accessor for StockSectionFooterViewModel();
  uint64_t v151 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v153 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v160 = (uint64_t)&v145 - v7;
  uint64_t v158 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter(0);
  MEMORY[0x270FA5388](v158);
  uint64_t v159 = (uint64_t)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v166 = (uint64_t)&v145 - v10;
  uint64_t v11 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v146 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v156 = (uint64_t)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v157 = (uint64_t)&v145 - v14;
  uint64_t v170 = sub_20A8C2B70();
  uint64_t v169 = *(void *)(v170 - 8);
  MEMORY[0x270FA5388](v170);
  uint64_t v168 = (char *)&v145 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_20A8CCE80();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x270FA5388](v163);
  long long v161 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header(0);
  uint64_t v147 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v148 = (uint64_t)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v149 = (uint64_t)&v145 - v20;
  sub_20A4F4FFC(0);
  uint64_t v22 = v21;
  uint64_t v165 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v155 = (char *)&v145 - v26;
  MEMORY[0x270FA5388](v27);
  uint64_t v150 = (char *)&v145 - v28;
  uint64_t v172 = sub_20A8CA9F0();
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x270FA5388](v172);
  uint64_t v30 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v164 = (char *)&v145 - v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v145 - v34;
  uint64_t v36 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader(0);
  uint64_t v154 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F5030(0);
  MEMORY[0x270FA5388](v39 - 8);
  uint64_t v41 = (char *)&v145 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  unint64_t v44 = (char *)&v145 - v43;
  MEMORY[0x270FA5388](v45);
  uint64_t v167 = (uint64_t (*)())((char *)&v145 - v46);
  uint64_t v47 = type metadata accessor for ForYouFeedLayoutSectionDescriptor(0);
  MEMORY[0x270FA5388](v47);
  uint64_t v49 = (char *)&v145 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A46F504();
  sub_20A8C9850();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A4F56D4(0, &qword_26AC684A0, sub_20A4F50C8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
      uint64_t v65 = *(void *)&v49[*(int *)(v64 + 48)];
      uint64_t v66 = v166;
      sub_20A4F50FC((uint64_t)&v49[*(int *)(v64 + 64)], v166, type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
      sub_20A8CA800();
      uint64_t v67 = v171;
      uint64_t v68 = v172;
      int v69 = (*(uint64_t (**)(char *, uint64_t))(v171 + 88))(v30, v172);
      if (v69 == *MEMORY[0x263F7DD78])
      {
        uint64_t v70 = v168;
        sub_20A8CA820();
        id v61 = (id)sub_20A4F3A78(v65, v173);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v169 + 8))(v70, v170);
        goto LABEL_12;
      }
      if (v69 == *MEMORY[0x263F7DD70])
      {
        swift_bridgeObjectRelease();
        uint64_t v71 = v159;
        sub_20A4F5164(v66, v159, type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_20A4F522C();
          uint64_t v80 = v71 + *(int *)(v79 + 48);
          long long v81 = *(_OWORD *)(v80 + 128);
          long long v82 = *(_OWORD *)(v80 + 144);
          long long v83 = *(_OWORD *)(v80 + 96);
          v176[7] = *(_OWORD *)(v80 + 112);
          v176[8] = v81;
          v176[9] = v82;
          uint64_t v177 = *(void *)(v80 + 160);
          long long v84 = *(_OWORD *)(v80 + 80);
          v176[4] = *(_OWORD *)(v80 + 64);
          v176[5] = v84;
          v176[6] = v83;
          long long v85 = *(_OWORD *)(v80 + 16);
          v176[0] = *(_OWORD *)v80;
          long long v86 = *(_OWORD *)(v80 + 32);
          v176[3] = *(_OWORD *)(v80 + 48);
          v176[1] = v85;
          v176[2] = v86;
          uint64_t v167 = type metadata accessor for StockSectionFooterViewModel;
          sub_20A4F50FC(v71, v160, (uint64_t (*)(void))type metadata accessor for StockSectionFooterViewModel);
          sub_20A4F5770(0, &qword_26AC6A318, (void (*)(uint64_t))type metadata accessor for StockSectionFooterView, (void (*)(void))sub_20A4F5298);
          uint64_t v87 = v164;
          sub_20A8CA800();
          uint64_t v88 = v168;
          sub_20A8CA820();
          uint64_t v89 = (void *)sub_20A8CEB00();
          (*(void (**)(char *, uint64_t))(v169 + 8))(v88, v170);
          (*(void (**)(char *, uint64_t))(v67 + 8))(v87, v68);
          uint64_t v90 = v174;
          swift_beginAccess();
          uint64_t v91 = v90[20];
          uint64_t v92 = v90[21];
          uint64_t v93 = __swift_project_boxed_opaque_existential_1(v90 + 17, v91);
          uint64_t v94 = *(void *)(v91 - 8);
          double v95 = MEMORY[0x270FA5388](v93);
          uint64_t v97 = (char *)&v145 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v94 + 16))(v97, v95);
          uint64_t v98 = *(void *)(v92 + 16);
          uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t))(v98 + 64);
          id v61 = v89;
          uint64_t v100 = (void *)v99(v91, v98);
          (*(void (**)(char *, uint64_t))(v94 + 8))(v97, v91);
          objc_msgSend(v61, sel_setBackgroundColor_, v100);

          uint64_t v101 = (char *)sub_20A8C98A0();
          id v102 = *(id *)&v101[OBJC_IVAR____TtC8StocksUI22StockSectionFooterView_onTap];

          swift_unownedRetainStrong();
          swift_unownedRetain();
          swift_release();
          uint64_t v103 = v160;
          uint64_t v104 = v153;
          sub_20A4F5164(v160, v153, (uint64_t (*)(void))type metadata accessor for StockSectionFooterViewModel);
          unint64_t v105 = (*(unsigned __int8 *)(v151 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
          uint64_t v106 = swift_allocObject();
          *(void *)(v106 + 16) = v90;
          sub_20A4F50FC(v104, v106 + v105, (uint64_t (*)(void))v167);

          swift_release();
          uint64_t v107 = (char *)sub_20A8C98A0();
          sub_20A82E240(v103, (uint64_t)v176, v107);

          sub_20A4F56A8((uint64_t)v176);
          sub_20A4F51CC(v103, (uint64_t (*)(void))type metadata accessor for StockSectionFooterViewModel);
          uint64_t v77 = v166;
          goto LABEL_17;
        }
        uint64_t v72 = v157;
        sub_20A4F50FC(v71, v157, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
        uint64_t v73 = v156;
        sub_20A4F5164(v72, v156, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
        uint64_t v74 = v162;
        unsigned int v75 = v161;
        uint64_t v76 = v163;
        (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v161, v73, v163);
        __swift_project_boxed_opaque_existential_1(v174 + 12, v174[15]);
        id v61 = (id)sub_20A8CCEA0();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
        sub_20A4F51CC(v72, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
LABEL_12:
        uint64_t v77 = v66;
LABEL_17:
        sub_20A4F51CC(v77, type metadata accessor for ForYouFeedLayoutSectionDescriptor.StockSectionFooter);
        uint64_t v62 = sub_20A4F5030;
        uint64_t v63 = (uint64_t)v49;
LABEL_32:
        sub_20A4F51CC(v63, (uint64_t (*)(void))v62);
        return v61;
      }
      goto LABEL_39;
    case 2u:
      sub_20A4F50FC((uint64_t)v49, (uint64_t)v24, (uint64_t (*)(void))sub_20A4F4FFC);
      id v61 = (id)sub_20A4F353C(*(void *)&v24[*(int *)(v22 + 28)], *(void *)&v24[*(int *)(v22 + 32)], v175, (uint64_t)v174, (uint64_t)v173);
      uint64_t v62 = sub_20A4F4FFC;
      uint64_t v63 = (uint64_t)v24;
      goto LABEL_32;
    case 3u:
    case 4u:
    case 5u:
      goto LABEL_39;
    default:
      sub_20A4F56D4(0, &qword_26AC7BAA8, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader, MEMORY[0x263F59E28]);
      uint64_t v51 = (uint64_t)&v49[*(int *)(v50 + 48)];
      swift_release();
      uint64_t v52 = v167;
      sub_20A4F50FC((uint64_t)v49, (uint64_t)v167, (uint64_t (*)(void))sub_20A4F5030);
      uint64_t v53 = (uint64_t)v38;
      sub_20A4F50FC(v51, (uint64_t)v38, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
      uint64_t v54 = sub_20A8CA810();
      unint64_t v55 = v54 - 1;
      if (__OFSUB__(v54, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      sub_20A8CA800();
      uint64_t v56 = v171;
      uint64_t v57 = v35;
      uint64_t v58 = v172;
      int v59 = (*(uint64_t (**)(char *, uint64_t))(v171 + 88))(v57, v172);
      if (v59 == *MEMORY[0x263F7DD78])
      {
        sub_20A4F5164((uint64_t)v52, (uint64_t)v44, (uint64_t (*)(void))sub_20A4F5030);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v44, 1, v22) == 1)
        {
          uint64_t v60 = sub_20A4F5030;
LABEL_30:
          sub_20A4F51CC((uint64_t)v44, (uint64_t (*)(void))v60);
          sub_20A4F5064(0, &qword_26AC80078, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader, MEMORY[0x263F8E0F8]);
          unint64_t v141 = (*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
          uint64_t v142 = swift_allocObject();
          *(_OWORD *)(v142 + 16) = xmmword_20A8D3DC0;
          sub_20A4F5164((uint64_t)v38, v142 + v141, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
          long long v143 = v168;
          sub_20A8CA820();
          id v61 = (id)sub_20A4F3A78(v142, v173);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v169 + 8))(v143, v170);
          goto LABEL_31;
        }
        uint64_t v108 = (uint64_t)v44;
        unint64_t v44 = v150;
        sub_20A4F50FC(v108, (uint64_t)v150, (uint64_t (*)(void))sub_20A4F4FFC);
        if (sub_20A8CA810() < 1)
        {
          uint64_t v60 = sub_20A4F4FFC;
          goto LABEL_30;
        }
        if ((v55 & 0x8000000000000000) == 0)
        {
          uint64_t v109 = *(void *)&v44[*(int *)(v22 + 28)];
          if (v55 < *(void *)(v109 + 16))
          {
            uint64_t v110 = v149;
            sub_20A4F5164(v109+ ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80))+ *(void *)(v147 + 72) * v55, v149, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
            uint64_t v111 = v148;
            sub_20A4F5164(v110, v148, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
            uint64_t v112 = v162;
            uint64_t v113 = v161;
            uint64_t v114 = v163;
            (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v161, v111, v163);
            __swift_project_boxed_opaque_existential_1(v174 + 12, v174[15]);
            id v61 = (id)sub_20A8CCEA0();
            (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
            sub_20A4F51CC(v110, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
            uint64_t v115 = (uint64_t)v44;
LABEL_26:
            sub_20A4F51CC(v115, (uint64_t (*)(void))sub_20A4F4FFC);
LABEL_31:
            sub_20A4F51CC(v53, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
            uint64_t v62 = sub_20A4F5030;
            uint64_t v63 = (uint64_t)v52;
            goto LABEL_32;
          }
          goto LABEL_37;
        }
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (v59 != *MEMORY[0x263F7DD70])
      {
LABEL_39:
        sub_20A8CF520();
        __break(1u);
        JUMPOUT(0x20A4F3524);
      }
      sub_20A4F5164((uint64_t)v52, (uint64_t)v41, (uint64_t (*)(void))sub_20A4F5030);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v41, 1, v22) == 1)
      {
        long long v78 = sub_20A4F5030;
        goto LABEL_28;
      }
      uint64_t v116 = (uint64_t)v41;
      uint64_t v41 = v155;
      sub_20A4F50FC(v116, (uint64_t)v155, (uint64_t (*)(void))sub_20A4F4FFC);
      uint64_t v117 = *(void *)(*(void *)&v41[*(int *)(v22 + 28)] + 16);
      BOOL v118 = __OFSUB__(v55, v117);
      uint64_t v119 = v55 - v117;
      if (v118)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v120 = *(void *)&v41[*(int *)(v22 + 32)];
      if (v119 < *(void *)(v120 + 16))
      {
        if ((v119 & 0x8000000000000000) == 0)
        {
          uint64_t v121 = v157;
          sub_20A4F5164(v120+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(void *)(v146 + 72) * v119, v157, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          uint64_t v122 = v156;
          sub_20A4F5164(v121, v156, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          uint64_t v123 = v162;
          uint64_t v124 = v161;
          uint64_t v125 = v163;
          (*(void (**)(char *, uint64_t, uint64_t))(v162 + 32))(v161, v122, v163);
          __swift_project_boxed_opaque_existential_1(v174 + 12, v174[15]);
          id v61 = (id)sub_20A8CCEA0();
          (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v125);
          sub_20A4F51CC(v121, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          uint64_t v115 = (uint64_t)v155;
          goto LABEL_26;
        }
        goto LABEL_38;
      }
      long long v78 = sub_20A4F4FFC;
LABEL_28:
      sub_20A4F51CC((uint64_t)v41, (uint64_t (*)(void))v78);
      sub_20A4F5770(0, &qword_26AC6A320, MEMORY[0x263F59E48], (void (*)(void))sub_20A4F57E0);
      uint64_t v126 = v164;
      sub_20A8CA800();
      uint64_t v127 = v168;
      sub_20A8CA820();
      uint64_t v128 = (void *)sub_20A8CEB00();
      (*(void (**)(char *, uint64_t))(v169 + 8))(v127, v170);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v126, v58);
      uint64_t v129 = (uint64_t)v174;
      uint64_t v130 = v174 + 17;
      swift_beginAccess();
      uint64_t v131 = *(void *)(v129 + 160);
      uint64_t v132 = *(void *)(v129 + 168);
      uint64_t v133 = __swift_project_boxed_opaque_existential_1(v130, v131);
      uint64_t v134 = *(void *)(v131 - 8);
      double v135 = MEMORY[0x270FA5388](v133);
      uint64_t v137 = (char *)&v145 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v134 + 16))(v137, v135);
      uint64_t v138 = *(void *)(v132 + 16);
      uint64_t v139 = *(uint64_t (**)(uint64_t, uint64_t))(v138 + 64);
      id v61 = v128;
      uint64_t v140 = (void *)v139(v131, v138);
      (*(void (**)(char *, uint64_t))(v134 + 8))(v137, v131);
      objc_msgSend(v61, sel_setBackgroundColor_, v140);

      sub_20A4F51CC(v53, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
      sub_20A4F51CC((uint64_t)v167, (uint64_t (*)(void))sub_20A4F5030);
      return v61;
  }
}

uint64_t sub_20A4F353C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a5;
  uint64_t v45 = a1;
  uint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v5 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer(0);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (uint64_t)&v38 - v9;
  uint64_t v43 = sub_20A8CCE80();
  uint64_t v10 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header(0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = sub_20A8CA9F0();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CA800();
  int v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v20);
  if (v24 == *MEMORY[0x263F7DD78])
  {
    unint64_t v25 = sub_20A8CA810();
    if ((v25 & 0x8000000000000000) == 0)
    {
      if (v25 < *(void *)(v45 + 16))
      {
        sub_20A4F5164(v45+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v25, (uint64_t)v19, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
        sub_20A4F5164((uint64_t)v19, (uint64_t)v16, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header);
        uint64_t v26 = v16;
        uint64_t v27 = v43;
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v26, v43);
        __swift_project_boxed_opaque_existential_1((void *)(v42 + 96), *(void *)(v42 + 120));
        uint64_t v28 = sub_20A8CCEA0();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v27);
        uint64_t v29 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Header;
        uint64_t v30 = (uint64_t)v19;
LABEL_10:
        sub_20A4F51CC(v30, v29);
        return v28;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v24 == *MEMORY[0x263F7DD70])
  {
    uint64_t v31 = sub_20A8CA810();
    uint64_t v32 = *(void *)(v45 + 16);
    BOOL v33 = __OFSUB__(v31, v32);
    unint64_t v34 = v31 - v32;
    if (!v33)
    {
      if ((v34 & 0x8000000000000000) == 0)
      {
        if (v34 < *(void *)(v41 + 16))
        {
          uint64_t v35 = v40;
          sub_20A4F5164(v41+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v40, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          sub_20A4F5164(v35, (uint64_t)v7, type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer);
          uint64_t v36 = v43;
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v7, v43);
          __swift_project_boxed_opaque_existential_1((void *)(v42 + 96), *(void *)(v42 + 120));
          uint64_t v28 = sub_20A8CCEA0();
          (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
          uint64_t v29 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.Footer;
          uint64_t v30 = v35;
          goto LABEL_10;
        }
        goto LABEL_15;
      }
LABEL_14:
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

unint64_t sub_20A4F3A78(uint64_t a1, uint64_t *a2)
{
  uint64_t v108 = a2;
  uint64_t v104 = sub_20A8C1FA0();
  MEMORY[0x270FA5388](v104);
  unint64_t v105 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F5064(0, &qword_26AC68DA0, MEMORY[0x263F7A890], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  id v102 = (char *)&v93 - v5;
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v99 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_20A8C3F00();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  double v95 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C2D10();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v98 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_20A8C33D0();
  MEMORY[0x270FA5388](v103);
  uint64_t v100 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StockTitleViewModel();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v101 = (uint64_t *)((char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for StockTitleViewLayoutAttributes();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v107 = (double *)((char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v94 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v94);
  uint64_t v93 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v106 = (uint64_t)&v93 - v18;
  uint64_t v19 = type metadata accessor for SectionHeaderViewLayoutAttributes();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (double *)((char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_20A8CA9F0();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ForYouTitleViewLayoutAttributes();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (double *)((char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader(0);
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sub_20A8C2B50();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (result >= *(void *)(a1 + 16))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  sub_20A4F5164(a1+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * result, (uint64_t)v32, type metadata accessor for ForYouFeedLayoutSectionDescriptor.LegacyHeader);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = *(double **)v32;
      uint64_t v106 = *((void *)v32 + 1);
      uint64_t v107 = v35;
      sub_20A4F5924(0, &qword_26AC80C78, (void (*)(uint64_t))type metadata accessor for SectionHeaderViewLayoutAttributes);
      sub_20A4F50FC((uint64_t)&v32[*(int *)(v36 + 48)], (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SectionHeaderViewLayoutAttributes);
      sub_20A4F5770(0, &qword_26AC6A308, (void (*)(uint64_t))type metadata accessor for SectionHeaderView, (void (*)(void))sub_20A4F58F0);
      (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F7DD78], v22);
      uint64_t v37 = (void *)sub_20A8CEB00();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v38 = v109;
      swift_beginAccess();
      uint64_t v39 = v38[20];
      uint64_t v40 = v38[21];
      uint64_t v41 = __swift_project_boxed_opaque_existential_1(v38 + 17, v39);
      uint64_t v108 = &v93;
      uint64_t v42 = *(void *)(v39 - 8);
      double v43 = MEMORY[0x270FA5388](v41);
      uint64_t v45 = (char *)&v93 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v42 + 16))(v45, v43);
      uint64_t v46 = *(void *)(v40 + 16);
      uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 64);
      id v48 = v37;
      uint64_t v49 = (void *)v47(v39, v46);
      (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v39);
      objc_msgSend(v48, sel_setBackgroundColor_, v49);

      uint64_t v50 = (char *)sub_20A8C98A0();
      sub_20A77B8F4((uint64_t)v107, v106, v21, v50);
      swift_bridgeObjectRelease();

      uint64_t v51 = type metadata accessor for SectionHeaderViewLayoutAttributes;
      uint64_t v52 = (uint64_t)v21;
    }
    else
    {
      sub_20A4F5814();
      uint64_t v71 = (uint64_t)&v32[*(int *)(v70 + 48)];
      sub_20A4F50FC((uint64_t)v32, v106, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      sub_20A4F50FC(v71, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for StockTitleViewLayoutAttributes);
      sub_20A4F5770(0, &qword_26AC6A2F0, (void (*)(uint64_t))type metadata accessor for StockTitleView, (void (*)(void))sub_20A4F5888);
      (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F7DD78], v22);
      uint64_t v72 = (void *)sub_20A8CEB00();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      uint64_t v73 = v109;
      swift_beginAccess();
      uint64_t v74 = v73[20];
      uint64_t v75 = v73[21];
      uint64_t v76 = __swift_project_boxed_opaque_existential_1(v73 + 17, v74);
      uint64_t v77 = *(void *)(v74 - 8);
      double v78 = MEMORY[0x270FA5388](v76);
      uint64_t v80 = (char *)&v93 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v77 + 16))(v80, v78);
      uint64_t v81 = *(void *)(v75 + 16);
      long long v82 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 64);
      id v48 = v72;
      long long v83 = (void *)v82(v74, v81);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v80, v74);
      objc_msgSend(v48, sel_setBackgroundColor_, v83);

      uint64_t v84 = v106;
      uint64_t v85 = v93;
      sub_20A4F5164(v106, v93, (uint64_t (*)(void))type metadata accessor for StockViewModel);
      __swift_project_boxed_opaque_existential_1(v73 + 22, v73[25]);
      char v86 = sub_20A8C3870();
      uint64_t v87 = v101;
      sub_20A4BE20C(v85, v86 & 1, v101);
      uint64_t v88 = (char *)sub_20A8C98A0();
      uint64_t v89 = v107;
      sub_20A66729C(v87, v107, v88);

      (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v84, v97);
      sub_20A8C2D00();
      sub_20A4F5164(v84 + *(int *)(v94 + 20), v99, (uint64_t (*)(void))sub_20A42C470);
      uint64_t v90 = sub_20A8C2CB0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v102, 1, 1, v90);
      sub_20A8C33C0();
      uint64_t v110 = MEMORY[0x263F8EE78];
      sub_20A4F4E0C((unint64_t *)&unk_26AC81220, MEMORY[0x263EFB6A0]);
      sub_20A4F58BC(0);
      sub_20A4F4E0C(&qword_26AC81800, sub_20A4F58BC);
      sub_20A8CF290();
      id v91 = objc_allocWithZone((Class)sub_20A8C7D10());
      sub_20A4F4E0C(&qword_26AC67570, MEMORY[0x263F7AB50]);
      uint64_t v92 = (void *)sub_20A8C7D00();
      sub_20A8CEE70();

      sub_20A4F51CC((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for StockTitleViewModel);
      sub_20A4F51CC((uint64_t)v89, (uint64_t (*)(void))type metadata accessor for StockTitleViewLayoutAttributes);
      uint64_t v51 = type metadata accessor for StockViewModel;
      uint64_t v52 = v84;
    }
    sub_20A4F51CC(v52, (uint64_t (*)(void))v51);
  }
  else
  {
    sub_20A4F5924(0, &qword_26AC71950, (void (*)(uint64_t))type metadata accessor for ForYouTitleViewLayoutAttributes);
    uint64_t v54 = (uint64_t)&v32[*(int *)(v53 + 48)];
    long long v55 = *((_OWORD *)v32 + 3);
    v111[2] = *((_OWORD *)v32 + 2);
    v111[3] = v55;
    v111[4] = *((_OWORD *)v32 + 4);
    uint64_t v112 = *((void *)v32 + 10);
    long long v56 = *((_OWORD *)v32 + 1);
    v111[0] = *(_OWORD *)v32;
    v111[1] = v56;
    sub_20A4F50FC(v54, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
    sub_20A4F5770(0, &qword_26AC6A2F8, (void (*)(uint64_t))type metadata accessor for ForYouTitleView, (void (*)(void))sub_20A4F5994);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v25, *MEMORY[0x263F7DD78], v22);
    uint64_t v57 = (void *)sub_20A8CEB00();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    uint64_t v58 = v109;
    swift_beginAccess();
    uint64_t v59 = v58[20];
    uint64_t v60 = v58[21];
    id v61 = __swift_project_boxed_opaque_existential_1(v58 + 17, v59);
    uint64_t v108 = &v93;
    uint64_t v62 = *(void *)(v59 - 8);
    double v63 = MEMORY[0x270FA5388](v61);
    uint64_t v65 = (char *)&v93 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v62 + 16))(v65, v63);
    uint64_t v66 = *(void *)(v60 + 16);
    uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 64);
    id v48 = v57;
    uint64_t v68 = (void *)v67(v59, v66);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v65, v59);
    objc_msgSend(v48, sel_setBackgroundColor_, v68);

    int v69 = (char *)sub_20A8C98A0();
    sub_20A5B48BC((uint64_t *)v111, v28, v69);

    sub_20A4F51CC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ForYouTitleViewLayoutAttributes);
    sub_20A473E10((uint64_t)v111);
  }
  return (unint64_t)v48;
}

uint64_t sub_20A4F49DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  uint64_t v8 = MEMORY[0x2105289B0](a1 + 16);
  uint64_t result = swift_release();
  if (v8)
  {
    swift_unownedRetainStrong();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v8 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler) + 48), *(void *)(*(void *)(v8 + OBJC_IVAR____TtC8StocksUI24ForYouFeedViewController_eventHandler) + 72));
    sub_20A799FE4((uint64_t)v7);
    swift_unknownObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_20A4F4B20()
{
  sub_20A4380C4(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedBlueprintViewSupplementaryViewProvider()
{
  return self;
}

uint64_t sub_20A4F4BB4()
{
  return sub_20A4F1A6C();
}

id sub_20A4F4BDC(uint64_t a1, uint64_t a2, uint64_t **a3, uint64_t a4)
{
  return sub_20A4F1E04(a1, a2, *a3, a4);
}

uint64_t sub_20A4F4C04(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 136, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  sub_20A42BEBC(&v9, v2 + 136);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  return sub_20A8CA6E0();
}

uint64_t sub_20A4F4D7C()
{
  return sub_20A4F4E0C(&qword_26AC776F0, (void (*)(uint64_t))type metadata accessor for ForYouFeedSectionDescriptor);
}

uint64_t sub_20A4F4DC4()
{
  return sub_20A4F4E0C(&qword_26AC7BBA0, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutSectionDescriptor);
}

uint64_t sub_20A4F4E0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4F4E54()
{
  return sub_20A4F4E0C((unint64_t *)&unk_26AC72B40, (void (*)(uint64_t))type metadata accessor for ForYouFeedLayoutModel);
}

uint64_t sub_20A4F4E9C()
{
  return sub_20A4F4E0C((unint64_t *)&unk_26AC6E160, (void (*)(uint64_t))type metadata accessor for ForYouFeedModel);
}

void *sub_20A4F4EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long *a9, long long *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v26 = a13;
  uint64_t v27 = a14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(boxed_opaque_existential_1, a11, a13);
  uint64_t v21 = (void *)swift_allocObject();
  v21[3] = 0;
  swift_unknownObjectWeakInit();
  v21[4] = a1;
  v21[5] = a2;
  v21[6] = a3;
  v21[7] = a4;
  v21[8] = a5;
  v21[9] = a6;
  v21[10] = a7;
  v21[11] = a8;
  sub_20A42BEBC(a9, (uint64_t)(v21 + 12));
  sub_20A42BEBC(a10, (uint64_t)(v21 + 17));
  sub_20A42BEBC(&v25, (uint64_t)(v21 + 22));
  return v21;
}

void sub_20A4F4FFC(uint64_t a1)
{
}

void sub_20A4F5030(uint64_t a1)
{
}

void sub_20A4F5064(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A4F50C8(uint64_t a1)
{
}

uint64_t sub_20A4F50FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4F5164(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4F51CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A4F522C()
{
  if (!qword_26AC81B08)
  {
    type metadata accessor for StockSectionFooterViewModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC81B08);
    }
  }
}

uint64_t sub_20A4F5298()
{
  return sub_20A4F4E0C(&qword_26AC742A8, (void (*)(uint64_t))type metadata accessor for StockSectionFooterView);
}

uint64_t sub_20A4F52CC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for StockSectionFooterViewModel() - 8) + 80);
  swift_unownedRelease();
  uint64_t v2 = v0 + ((v1 + 24) & ~v1);
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = (int *)type metadata accessor for StockViewModel();
  uint64_t v5 = v2 + v4[5];
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v2 + v4[6];
  uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    uint64_t v11 = v8 + *(int *)(v9 + 32);
    uint64_t v12 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = v2 + v4[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v15 = v13 + v14[9];
  uint64_t v16 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  uint64_t v17 = v13 + v14[10];
  uint64_t v18 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v13 + v14[11];
  uint64_t v20 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v2 + v4[8];
  uint64_t v22 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);

  return swift_deallocObject();
}

uint64_t sub_20A4F5634()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockSectionFooterViewModel() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A4F49DC(v2, v3);
}

uint64_t sub_20A4F56A8(uint64_t a1)
{
  return a1;
}

void sub_20A4F56D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_20A4F5030(255);
    a3(255);
    a4(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v8) {
      atomic_store(TupleTypeMetadata3, a2);
    }
  }
}

void sub_20A4F5770(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_20A8C98B0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A4F57E0()
{
  return sub_20A4F4E0C(&qword_26AC6B330, MEMORY[0x263F59E48]);
}

void sub_20A4F5814()
{
  if (!qword_26AC6DA30)
  {
    type metadata accessor for StockViewModel();
    type metadata accessor for StockTitleViewLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6DA30);
    }
  }
}

uint64_t sub_20A4F5888()
{
  return sub_20A4F4E0C(&qword_26AC6DA28, (void (*)(uint64_t))type metadata accessor for StockTitleView);
}

void sub_20A4F58BC(uint64_t a1)
{
}

uint64_t sub_20A4F58F0()
{
  return sub_20A4F4E0C((unint64_t *)&unk_26AC6F958, (void (*)(uint64_t))type metadata accessor for SectionHeaderView);
}

void sub_20A4F5924(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A4F5994()
{
  return sub_20A4F4E0C(&qword_26AC6E250, (void (*)(uint64_t))type metadata accessor for ForYouTitleView);
}

uint64_t sub_20A4F59C8(void *a1)
{
  id v1 = objc_msgSend(a1, sel_activityType);
  uint64_t v2 = sub_20A8CE280();
  uint64_t v4 = v3;

  if (v2 == 0xD000000000000016 && v4 == 0x800000020A8FDB50)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    return v6 & 1;
  }
}

uint64_t sub_20A4F5A78(void *a1)
{
  id v43 = a1;
  uint64_t v42 = sub_20A8CC220();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CC250();
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CC230();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability + 24));
  if ((sub_20A8CD7B0() & 1) == 0) {
    return 0;
  }
  uint64_t v35 = v10;
  uint64_t v38 = v8;
  uint64_t v39 = v1;
  uint64_t v36 = v6;
  uint64_t v37 = v4;
  uint64_t v11 = v41;
  uint64_t v12 = v42;
  uint64_t v13 = v3;
  id v14 = objc_msgSend(v43, sel_userInfo);
  uint64_t v15 = MEMORY[0x263F8EE58];
  if (v14)
  {
    uint64_t v16 = v14;
    uint64_t v17 = sub_20A8CE180();

    uint64_t v50 = 0x6B636F7453;
    unint64_t v51 = 0xE500000000000000;
    sub_20A8CF360();
    if (*(void *)(v17 + 16))
    {
      unint64_t v18 = sub_20A4D1D30((uint64_t)&aBlock);
      uint64_t v19 = v13;
      uint64_t v20 = v11;
      uint64_t v21 = v7;
      uint64_t v22 = v38;
      uint64_t v23 = v39;
      if (v24)
      {
        sub_20A4ED764(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v52);
      }
      else
      {
        long long v52 = 0u;
        long long v53 = 0u;
      }
    }
    else
    {
      long long v52 = 0u;
      long long v53 = 0u;
      uint64_t v19 = v13;
      uint64_t v20 = v11;
      uint64_t v21 = v7;
      uint64_t v22 = v38;
      uint64_t v23 = v39;
    }
    sub_20A4D43D4((uint64_t)&aBlock);
    swift_bridgeObjectRelease();
    if (*((void *)&v53 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v26 = aBlock;
        uint64_t v25 = v45;
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
        uint64_t v27 = v35;
        (*(void (**)(char *, void, uint64_t))(v22 + 104))(v35, *MEMORY[0x263F8F060], v21);
        id v43 = (id)sub_20A8CEC10();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
        uint64_t v28 = (void *)swift_allocObject();
        v28[2] = v23;
        v28[3] = v26;
        v28[4] = v25;
        id v48 = sub_20A4F6BF8;
        uint64_t v49 = v28;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v45 = 1107296256;
        uint64_t v46 = sub_20A4713FC;
        uint64_t v47 = &block_descriptor_7;
        uint64_t v29 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v30 = v36;
        sub_20A8CC240();
        *(void *)&long long v52 = MEMORY[0x263F8EE78];
        sub_20A4F6C04(&qword_26AC677A0, MEMORY[0x263F8F030]);
        sub_20A4F6D80(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
        sub_20A4F6C4C();
        sub_20A8CF290();
        id v31 = v43;
        MEMORY[0x210526F10](0, v30, v19, v29);
        _Block_release(v29);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v12);
        (*(void (**)(char *, uint64_t))(v20 + 8))(v30, v37);
        swift_release();
        return 1;
      }
      goto LABEL_13;
    }
  }
  else
  {
    long long v52 = 0u;
    long long v53 = 0u;
  }
  sub_20A4F6F28((uint64_t)&v52, (uint64_t)&qword_26AC80170, v15 + 8, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4F6CD4);
LABEL_13:
  sub_20A8CE9E0();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  BOOL v33 = (void *)sub_20A8CF180();
  sub_20A8C7D90();

  return 0;
}

uint64_t sub_20A4F603C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C59F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager), *(void *)(a1 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager + 24));
  sub_20A4F6CD4(0, (unint64_t *)&qword_26AC800B8, MEMORY[0x263F8D310], MEMORY[0x263F8E0F8]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
  *(void *)(v10 + 32) = a2;
  *(void *)(v10 + 40) = a3;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7CD50], v6);
  swift_bridgeObjectRetain();
  sub_20A8C3940();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v11 = (void *)sub_20A8CEBE0();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  void v12[3] = a3;
  v12[4] = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20A8C6500();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_20A4F6270(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a4;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4F6D80(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v36 = (char *)&v33 - v9;
  uint64_t v34 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4F6D80(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], v7);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v15 = sub_20A8C3F00();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v16 + 56))(v14, 1, 1, v15, v17);
    return sub_20A4F6F28((uint64_t)v14, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4F6D80);
  }
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_20A4D1B24(a2, a3);
  if (v22)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v14, *(void *)(v20 + 56) + *(void *)(v16 + 72) * v21, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_20A4F6F28((uint64_t)v14, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4F6D80);
  }
  char v24 = v19;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v14, v15);
  sub_20A4F6DE4();
  uint64_t v26 = *(int *)(v25 + 48);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v19, v15);
  *(void *)&v11[v26] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = sub_20A8C6D60();
  uint64_t v28 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v36, 1, 1, v27);
  uint64_t v40 = 0;
  memset(v39, 0, sizeof(v39));
  uint64_t v38 = 0;
  memset(v37, 0, sizeof(v37));
  uint64_t v29 = v41;
  sub_20A5BFF1C((uint64_t)v11, 0, v28, (uint64_t)v39, 0, 0, (uint64_t)v37);
  if (v29)
  {
    sub_20A4F6EB8((uint64_t)v37, &qword_26AC69600, (unint64_t *)&unk_26AC695F0, MEMORY[0x263F7CDB8]);
    sub_20A4F6EB8((uint64_t)v39, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70, MEMORY[0x263F58868]);
    sub_20A4F6F28(v28, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4F6D80);
    sub_20A4EF9E0((uint64_t)v11);
    sub_20A8CE9E0();
    sub_20A4F6E50(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_20A8D3DC0;
    *(void *)&v39[0] = 0;
    *((void *)&v39[0] + 1) = 0xE000000000000000;
    *(void *)&v37[0] = v29;
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
    sub_20A8CF4E0();
    long long v31 = v39[0];
    *(void *)(v30 + 56) = MEMORY[0x263F8D310];
    *(void *)(v30 + 64) = sub_20A43F830();
    *(_OWORD *)(v30 + 32) = v31;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
    uint64_t v32 = (void *)sub_20A8CF180();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v24, v15);
  }
  else
  {
    swift_release();
    sub_20A4F6EB8((uint64_t)v37, &qword_26AC69600, (unint64_t *)&unk_26AC695F0, MEMORY[0x263F7CDB8]);
    sub_20A4F6EB8((uint64_t)v39, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70, MEMORY[0x263F58868]);
    sub_20A4F6F28(v28, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A4F6D80);
    sub_20A4EF9E0((uint64_t)v11);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
}

uint64_t sub_20A4F6924()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_navigator;
  sub_20A4F6AEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_featureAvailability);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI27StocksV1UserActivityHandler_stockMetadataManager);

  return swift_deallocClassInstance();
}

uint64_t sub_20A4F69EC()
{
  return type metadata accessor for StocksV1UserActivityHandler();
}

uint64_t type metadata accessor for StocksV1UserActivityHandler()
{
  uint64_t result = qword_26AC6C0C0;
  if (!qword_26AC6C0C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A4F6A40()
{
  sub_20A4F6AEC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_20A4F6AEC()
{
  if (!qword_26AC69D18)
  {
    type metadata accessor for StocksActivity(255);
    sub_20A4F6C04((unint64_t *)&unk_26AC6C730, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    unint64_t v0 = sub_20A8C81E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69D18);
    }
  }
}

uint64_t sub_20A4F6B80()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_20A4F6B8C(void *a1)
{
  return sub_20A4F5A78(a1) & 1;
}

uint64_t sub_20A4F6BB8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4F6BF8()
{
  return sub_20A4F603C(v0[2], v0[3], v0[4]);
}

uint64_t sub_20A4F6C04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A4F6C4C()
{
  unint64_t result = qword_26AC7F7B0;
  if (!qword_26AC7F7B0)
  {
    sub_20A4F6D80(255, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F7B0);
  }
  return result;
}

void sub_20A4F6CD4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_20A4F6D20()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4F6D60(uint64_t *a1)
{
  return sub_20A4F6270(a1, v1[2], v1[3], v1[4]);
}

void sub_20A4F6D80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A4F6DE4()
{
  if (!qword_26AC68FE0)
  {
    sub_20A8C3F00();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC68FE0);
    }
  }
}

void sub_20A4F6E50(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_20A4F6EB8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_20A4F6E50(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_20A4F6F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A4F6F88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *(void *)a1 = *a2;
    a1 = v29 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, a2 + 2, v9);
    long long v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    long long v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    long long v13 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 160) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, (uint64_t)(a2 + 17));
    uint64_t v14 = *(int *)(a3 + 36);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v43 = a3;
    uint64_t v18 = *(int *)(a3 + 40);
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (uint64_t)a2 + v18;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 8);
    *uint64_t v19 = *(uint64_t *)((char *)a2 + v18);
    v19[1] = v21;
    uint64_t v22 = type metadata accessor for AttributionSource();
    uint64_t v23 = *(int *)(v22 + 20);
    __dst = (char *)v19 + v23;
    uint64_t v42 = v22;
    char v24 = (const void *)(v20 + v23);
    uint64_t v25 = sub_20A8C2530();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    uint64_t v30 = *(int *)(v42 + 24);
    long long v31 = *(void **)(v20 + v30);
    *(void *)((char *)v19 + v30) = v31;
    uint64_t v32 = *(int *)(v43 + 44);
    uint64_t v33 = a1 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    uint64_t v35 = sub_20A8C3190();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
    id v37 = v31;
    v36(v33, v34, v35);
    uint64_t v38 = *(int *)(v43 + 48);
    long long v39 = *(_OWORD *)((char *)a2 + v38 + 24);
    *(_OWORD *)(a1 + v38 + 24) = v39;
    (**(void (***)(void))(v39 - 8))();
  }
  return a1;
}

uint64_t sub_20A4F73A4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[10];
  swift_bridgeObjectRelease();
  uint64_t v7 = type metadata accessor for AttributionSource();
  uint64_t v8 = v6 + *(int *)(v7 + 20);
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }

  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[12];

  return __swift_destroy_boxed_opaque_existential_1(v13);
}

uint64_t sub_20A4F7544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  long long v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, a2 + 56);
  long long v12 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 120) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 160) = v13;
  (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 136, a2 + 136);
  uint64_t v14 = *(int *)(a3 + 36);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v42 = a3;
  uint64_t v18 = *(int *)(a3 + 40);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)(a2 + v18 + 8);
  *uint64_t v19 = *(void *)(a2 + v18);
  v19[1] = v21;
  uint64_t v22 = type metadata accessor for AttributionSource();
  uint64_t v23 = *(int *)(v22 + 20);
  __dst = (char *)v19 + v23;
  uint64_t v41 = v22;
  char v24 = (const void *)(v20 + v23);
  uint64_t v25 = sub_20A8C2530();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v25))
  {
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v26 + 16))(__dst, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  uint64_t v29 = *(int *)(v41 + 24);
  uint64_t v30 = *(void **)(v20 + v29);
  *(void *)((char *)v19 + v29) = v30;
  uint64_t v31 = *(int *)(v42 + 44);
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_20A8C3190();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
  id v36 = v30;
  v35(v32, v33, v34);
  uint64_t v37 = *(int *)(v42 + 48);
  long long v38 = *(_OWORD *)(a2 + v37 + 24);
  *(_OWORD *)(a1 + v37 + 24) = v38;
  (**(void (***)(void))(v38 - 8))();
  return a1;
}

uint64_t *sub_20A4F7910(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  __swift_assign_boxed_opaque_existential_1(a1 + 12, a2 + 12);
  __swift_assign_boxed_opaque_existential_1(a1 + 17, a2 + 17);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v35 = a3;
  uint64_t v10 = *(int *)(a3 + 40);
  long long v11 = (uint64_t *)((char *)a1 + v10);
  long long v12 = (char *)a2 + v10;
  *long long v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = *(uint64_t *)((char *)a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = type metadata accessor for AttributionSource();
  uint64_t v13 = *(int *)(v34 + 20);
  uint64_t v14 = (char *)v11 + v13;
  uint64_t v15 = &v12[v13];
  uint64_t v16 = sub_20A8C2530();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v33 = v14;
  LODWORD(v14) = v18(v14, 1, v16);
  int v19 = v18(v15, 1, v16);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v33, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v33, 0, 1, v16);
      goto LABEL_9;
    }
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v21 = *(void *)(*(void *)(v20 - 8) + 64);
    uint64_t v22 = v33;
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 24))(v33, v15, v16);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v33, v16);
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v21 = *(void *)(*(void *)(v23 - 8) + 64);
    uint64_t v22 = v33;
  }
  memcpy(v22, v15, v21);
LABEL_9:
  uint64_t v24 = *(int *)(v34 + 24);
  uint64_t v25 = *(void **)((char *)v11 + v24);
  uint64_t v26 = *(void **)&v12[v24];
  *(void *)((char *)v11 + v24) = v26;
  id v27 = v26;

  uint64_t v28 = *(int *)(v35 + 44);
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = sub_20A8C3190();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)((char *)a1 + *(int *)(v35 + 48)), (uint64_t *)((char *)a2 + *(int *)(v35 + 48)));
  return a1;
}

uint64_t sub_20A4F7C6C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v8 = a3[9];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v11 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v15 = type metadata accessor for AttributionSource();
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v17 = (void *)(v13 + v16);
  uint64_t v18 = (const void *)(v14 + v16);
  uint64_t v19 = sub_20A8C2530();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)(v13 + *(int *)(v15 + 24)) = *(void *)(v14 + *(int *)(v15 + 24));
  uint64_t v22 = a3[11];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
  uint64_t v26 = a3[12];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  long long v29 = *(_OWORD *)(v28 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *(_OWORD *)(v27 + 16) = v29;
  *(void *)(v27 + 32) = *(void *)(v28 + 32);
  return a1;
}

uint64_t sub_20A4F7EEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  __swift_destroy_boxed_opaque_existential_1(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  uint64_t v9 = a3[9];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13 + 8);
  *uint64_t v14 = *(void *)(a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for AttributionSource();
  uint64_t v17 = *(int *)(v40 + 20);
  uint64_t v18 = (char *)v14 + v17;
  uint64_t v19 = (char *)(v15 + v17);
  uint64_t v20 = sub_20A8C2530();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  long long v39 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  int v23 = v22(v19, 1, v20);
  if (v18)
  {
    if (!v23)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 32))(v39, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v39, 0, 1, v20);
      goto LABEL_9;
    }
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
    uint64_t v26 = v39;
  }
  else
  {
    if (!v23)
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 40))(v39, v19, v20);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v39, v20);
    sub_20A4BA088(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
    size_t v25 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v26 = v39;
  }
  memcpy(v26, v19, v25);
LABEL_9:
  uint64_t v28 = *(int *)(v40 + 24);
  long long v29 = *(void **)((char *)v14 + v28);
  *(void *)((char *)v14 + v28) = *(void *)(v15 + v28);

  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  __swift_destroy_boxed_opaque_existential_1(a1 + v34);
  long long v37 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v37;
  *(void *)(v35 + 32) = *(void *)(v36 + 32);
  return a1;
}

uint64_t sub_20A4F8278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4F828C);
}

uint64_t sub_20A4F828C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[9];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = type metadata accessor for AttributionSource();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  uint64_t v14 = sub_20A8C3190();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t sub_20A4F8404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4F8418);
}

uint64_t sub_20A4F8418(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_20A8C3410();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[9];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = type metadata accessor for AttributionSource();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  uint64_t v14 = sub_20A8C3190();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

uint64_t type metadata accessor for StockListChangeWatchlistBlueprintModifier()
{
  uint64_t result = qword_26AC7E608;
  if (!qword_26AC7E608) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4F85DC()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttributionSource();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_20A8C3190();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_20A4F86FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v29 = a1;
  sub_20A4FBB6C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v28 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v27 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v26 = (char *)v25 - v6;
  uint64_t v7 = type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v3;
  sub_20A4BA088(0, &qword_26AC7F6D0, MEMORY[0x263F7AF08], MEMORY[0x263F8D488]);
  sub_20A8C6670();
  sub_20A4FBC8C(v3, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  sub_20A4FBD70((uint64_t)v10, v12 + v11, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  uint64_t v13 = (void *)sub_20A8C6450();
  v25[1] = sub_20A8C64F0();
  swift_release();
  swift_release();

  sub_20A4FBC8C(v25[0], (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  uint64_t v14 = v26;
  uint64_t v15 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v26, v29, v28);
  unint64_t v16 = (v11 + v9 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v17 = (v27 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  sub_20A4FBD70((uint64_t)v10, v18 + v11, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v16, v14, v15);
  uint64_t v19 = (void *)(v18 + v17);
  uint64_t v21 = v30;
  uint64_t v20 = v31;
  *uint64_t v19 = v30;
  v19[1] = v20;
  swift_retain();
  uint64_t v22 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();

  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v21;
  *(void *)(v23 + 24) = v20;
  swift_retain();
  uint64_t v24 = (void *)sub_20A8C6450();
  sub_20A8C6550();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A4F8AC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = *a1;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
  sub_20A8C39E0();
  sub_20A4FBC8C(a2, (uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_20A4FBD70((uint64_t)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, (uint64_t (*)(void))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_20A8C6450();
  uint64_t v11 = sub_20A8C6500();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_20A4F8C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v20 = a4;
  uint64_t v19 = sub_20A8C34C0();
  uint64_t v16 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4342F4(a2 + 136, (uint64_t)v21);
  v15[1] = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v21[3]);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_20A8C3600();
  sub_20A8C40D0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = sub_20A8C3B10();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  uint64_t v12 = sub_20A8C2EE0();
  uint64_t result = sub_20A8C2EC0();
  uint64_t v14 = v20;
  *uint64_t v20 = v11;
  v14[1] = v12;
  v14[2] = result;
  return result;
}

uint64_t sub_20A4F8E88(long long *a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v135 = a5;
  uint64_t v123 = a4;
  uint64_t v121 = a3;
  sub_20A4FBB6C(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v134 = v7;
  uint64_t v133 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v132 = (char *)&v113 - v8;
  sub_20A4B9B70();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v129 = (char *)&v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4FBB6C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v131 = v11;
  uint64_t v130 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v122 = (char *)&v113 - v12;
  sub_20A4AE540();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v137 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4FBB6C(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v136 = v15;
  uint64_t v138 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v117 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v119 = (char *)&v113 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v115 = (char *)&v113 - v20;
  uint64_t v21 = type metadata accessor for AttributionSource();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v113 = (uint64_t *)((char *)&v113 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v23);
  uint64_t v120 = (uint64_t *)((char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42D93C();
  uint64_t v26 = v25;
  uint64_t v143 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  BOOL v118 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v114 = (char *)&v113 - v29;
  *((void *)&v149 + 1) = sub_20A8C3F00();
  uint64_t v30 = *(void *)(*((void *)&v149 + 1) - 8);
  MEMORY[0x270FA5388](*((void *)&v149 + 1));
  *(void *)&long long v149 = (char *)&v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_20A8C40E0();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v33 = (char *)&v113 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v140 = *a1;
  uint64_t v116 = *((void *)a1 + 2);
  uint64_t v144 = a2;
  uint64_t v34 = *(void *)(a2 + 40);
  uint64_t v126 = (void *)(a2 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), v34);
  sub_20A8C3600();
  sub_20A4BA088(0, (unint64_t *)&qword_26AC80130, (uint64_t (*)(uint64_t))sub_20A448228, MEMORY[0x263F8E0F8]);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_20A8D5CB0;
  uint64_t v36 = sub_20A8C40A0();
  uint64_t v38 = v37;
  *(void *)(v35 + 56) = MEMORY[0x263F8D310];
  unint64_t v124 = sub_20A43F830();
  *(void *)(v35 + 64) = v124;
  *(void *)(v35 + 32) = v36;
  *(void *)(v35 + 40) = v38;
  uint64_t v39 = v140;
  int64_t v40 = *(void *)(v140 + 16);
  uint64_t v41 = MEMORY[0x263F8D750];
  *(void *)(v35 + 96) = MEMORY[0x263F8D6C8];
  *(void *)(v35 + 104) = v41;
  uint64_t v125 = v35;
  *(void *)(v35 + 72) = v40;
  *(void *)&long long v151 = 0;
  *((void *)&v151 + 1) = 0xE000000000000000;
  uint64_t v42 = MEMORY[0x263F8EE78];
  uint64_t v145 = v23;
  uint64_t v141 = v26;
  uint64_t v142 = v33;
  uint64_t v139 = v39;
  if (v40)
  {
    uint64_t v155 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_20A68C494(0, v40, 0);
    uint64_t v44 = *(void (**)(void, unint64_t, void))(v30 + 16);
    uint64_t v43 = v30 + 16;
    unint64_t v45 = v39 + ((*(unsigned __int8 *)(v43 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 64));
    uint64_t v146 = *(void *)(v43 + 56);
    uint64_t v147 = v44;
    uint64_t v148 = v43;
    uint64_t v46 = (void (**)(void, void))(v43 - 8);
    do
    {
      long long v47 = v149;
      v147(v149, v45, *((void *)&v149 + 1));
      uint64_t v48 = sub_20A8C3EC0();
      uint64_t v50 = v49;
      (*v46)(v47, *((void *)&v47 + 1));
      uint64_t v42 = v155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C494(0, *(void *)(v42 + 16) + 1, 1);
        uint64_t v42 = v155;
      }
      unint64_t v52 = *(void *)(v42 + 16);
      unint64_t v51 = *(void *)(v42 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_20A68C494(v51 > 1, v52 + 1, 1);
        uint64_t v42 = v155;
      }
      *(void *)(v42 + 16) = v52 + 1;
      uint64_t v53 = v42 + 16 * v52;
      *(void *)(v53 + 32) = v48;
      *(void *)(v53 + 40) = v50;
      v45 += v146;
      --v40;
    }
    while (v40);
    swift_bridgeObjectRelease();
    uint64_t v26 = v141;
    uint64_t v33 = v142;
  }
  uint64_t v155 = v42;
  sub_20A4B9D5C();
  sub_20A4FB438((unint64_t *)&qword_26AC7F808, (void (*)(uint64_t))sub_20A4B9D5C);
  sub_20A8CE1E0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  long long v54 = v151;
  uint64_t v55 = v125;
  unint64_t v56 = v124;
  *(void *)(v125 + 136) = MEMORY[0x263F8D310];
  *(void *)(v55 + 144) = v56;
  *(_OWORD *)(v55 + 112) = v54;
  sub_20A43F884();
  uint64_t v57 = (void *)sub_20A8CF180();
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  uint64_t v58 = type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  uint64_t v59 = v144;
  __swift_project_boxed_opaque_existential_1((void *)(v144 + *(int *)(v58 + 48)), *(void *)(v144 + *(int *)(v58 + 48) + 24));
  if (sub_20A8C3850())
  {
    unint64_t v60 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v61 = v59 + *(int *)(v58 + 40);
    uint64_t v62 = v113;
    sub_20A4FBC8C(v61, (uint64_t)v113, (uint64_t (*)(void))type metadata accessor for AttributionSource);
    uint64_t v63 = sub_20A6868E8(v62);
    uint64_t v64 = v120;
    *uint64_t v120 = v63;
    v64[1] = v65;
    v64[2] = v66;
    v64[3] = v67;
    swift_storeEnumTagMultiPayload();
    sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    uint64_t v68 = v114;
    sub_20A8C8320();
    uint64_t v153 = 0;
    long long v151 = 0u;
    long long v152 = 0u;
    char v154 = 2;
    sub_20A4BA088(0, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8E0F8]);
    uint64_t v69 = v143;
    unint64_t v70 = (*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, char *, uint64_t))(v69 + 16))(v71 + v70, v68, v26);
    uint64_t v72 = sub_20A4FB438(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v73 = sub_20A4FB438(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v71, v26, v72, v73);
    sub_20A42D40C();
    uint64_t v74 = v115;
    sub_20A8C8810();
    unint64_t v60 = sub_20A46DD54(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v76 = *(void *)(v60 + 16);
    unint64_t v75 = *(void *)(v60 + 24);
    if (v76 >= v75 >> 1) {
      unint64_t v60 = sub_20A46DD54(v75 > 1, v76 + 1, 1, v60);
    }
    uint64_t v77 = v136;
    *(void *)(v60 + 16) = v76 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v138 + 32))(v60+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ *(void *)(v138 + 72) * v76, v74, v77);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v68, v26);
  }
  *(void *)&long long v149 = sub_20A8C4070();
  *((void *)&v149 + 1) = v78;
  uint64_t v79 = sub_20A8C4050();
  uint64_t v81 = v80;
  uint64_t v82 = v144;
  __swift_project_boxed_opaque_existential_1(v126, *(void *)(v144 + 40));
  uint64_t v83 = sub_20A8C3690();
  uint64_t v84 = v83;
  uint64_t v85 = v139;
  if (*(void *)(v139 + 16))
  {
    MEMORY[0x270FA5388](v83);
    *((_OWORD *)&v113 - 3) = v140;
    *(&v113 - 4) = (uint64_t *)v116;
    *(&v113 - 3) = (uint64_t *)v82;
    uint64_t v112 = v33;
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_20A449B4C((void (*)(uint64_t))sub_20A4FBCF4, (uint64_t)(&v113 - 8), v85, (uint64_t)v150);
    swift_bridgeObjectRelease();
    long long v151 = v149;
    *(void *)&long long v152 = v79;
    *((void *)&v152 + 1) = v81;
    uint64_t v153 = v84;
    char v154 = 0;
    uint64_t v87 = sub_20A4FB438(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v88 = sub_20A4FB438(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v86, v141, v87, v88);
    sub_20A42D40C();
    sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    uint64_t v89 = v117;
    sub_20A8C8810();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v60 = sub_20A46DD54(0, *(void *)(v60 + 16) + 1, 1, v60);
    }
    uint64_t v90 = v123;
    id v91 = v122;
    uint64_t v92 = v136;
    unint64_t v94 = *(void *)(v60 + 16);
    unint64_t v93 = *(void *)(v60 + 24);
    if (v94 >= v93 >> 1) {
      unint64_t v60 = sub_20A46DD54(v93 > 1, v94 + 1, 1, v60);
    }
    *(void *)(v60 + 16) = v94 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v138 + 32))(v60+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ *(void *)(v138 + 72) * v94, v89, v92);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    double v95 = v118;
    sub_20A8C8320();
    long long v151 = v149;
    *(void *)&long long v152 = v79;
    *((void *)&v152 + 1) = v81;
    uint64_t v153 = v84;
    char v154 = 1;
    sub_20A4BA088(0, &qword_26AC7FF28, (uint64_t (*)(uint64_t))sub_20A42D93C, MEMORY[0x263F8E0F8]);
    uint64_t v96 = v143;
    unint64_t v97 = (*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80);
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = xmmword_20A8D3DC0;
    uint64_t v99 = v95;
    uint64_t v100 = v141;
    (*(void (**)(unint64_t, char *, uint64_t))(v96 + 16))(v98 + v97, v99, v141);
    uint64_t v101 = sub_20A4FB438(&qword_26AC69D98, (void (*)(uint64_t))sub_20A42D93C);
    uint64_t v102 = sub_20A4FB438(&qword_26AC69D90, (void (*)(uint64_t))sub_20A42D93C);
    MEMORY[0x21051E250](v98, v100, v101, v102);
    sub_20A42D40C();
    sub_20A8C8810();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v60 = sub_20A46DD54(0, *(void *)(v60 + 16) + 1, 1, v60);
    }
    uint64_t v90 = v123;
    id v91 = v122;
    uint64_t v92 = v136;
    unint64_t v104 = *(void *)(v60 + 16);
    unint64_t v103 = *(void *)(v60 + 24);
    if (v104 >= v103 >> 1) {
      unint64_t v60 = sub_20A46DD54(v103 > 1, v104 + 1, 1, v60);
    }
    *(void *)(v60 + 16) = v104 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v138 + 32))(v60+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ *(void *)(v138 + 72) * v104, v119, v92);
    (*(void (**)(char *, uint64_t))(v143 + 8))(v118, v100);
  }
  uint64_t v105 = sub_20A4FBC2C((unint64_t *)&unk_26AC69F20);
  uint64_t v106 = sub_20A4FBC2C(&qword_26AC69F18);
  MEMORY[0x21051E250](v60, v92, v105, v106);
  sub_20A42D40C();
  uint64_t v107 = sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8CBB20();
  sub_20A4FBD1C();
  sub_20A8C9300();
  __swift_project_boxed_opaque_existential_1(&v151, *((uint64_t *)&v152 + 1));
  if (sub_20A8C8B90())
  {
    uint64_t v108 = v133;
    uint64_t v109 = v132;
    uint64_t v110 = v134;
    (*(void (**)(char *, void, uint64_t))(v133 + 104))(v132, *MEMORY[0x263F7D948], v134);
  }
  else
  {
    uint64_t v112 = (char *)v107;
    uint64_t v109 = v132;
    sub_20A8C9B40();
    uint64_t v110 = v134;
    uint64_t v108 = v133;
  }
  v90(v109);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v91, v131);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v142, v128);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v151);
}

uint64_t sub_20A4FA170@<X0>(NSObject *a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v89 = a7;
  uint64_t v85 = a6;
  double v95 = a5;
  uint64_t v80 = (unsigned char *)a4;
  uint64_t v78 = a2;
  uint64_t v88 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v88);
  uint64_t v87 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v84);
  uint64_t v86 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C4030();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v82 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v83 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_20A8C3410();
  uint64_t v15 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  unint64_t v93 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C3F00();
  uint64_t v94 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v92 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4BA088(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v91 = (uint64_t)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v73 - v24;
  sub_20A4BA088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v20);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v77 = (uint64_t)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v97 = (uint64_t)&v73 - v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v73 - v31;
  uint64_t v33 = sub_20A8C3EC0();
  uint64_t v35 = *(void *)(a3 + 16);
  uint64_t v90 = v17;
  if (v35 && (unint64_t v36 = sub_20A4D1B24(v33, v34), (v37 & 1) != 0))
  {
    unint64_t v38 = v36;
    uint64_t v73 = a1;
    uint64_t v39 = v32;
    uint64_t v40 = v15;
    uint64_t v41 = *(void *)(a3 + 56);
    uint64_t v42 = sub_20A8C3E10();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v74 = (uint64_t (*)(uint64_t))a3;
    uint64_t v44 = v43;
    uint64_t v45 = v41 + *(void *)(v43 + 72) * v38;
    uint64_t v15 = v40;
    uint64_t v32 = v39;
    a1 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v32, v45, v42);
    uint64_t v17 = v90;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v32, 0, 1, v42);
  }
  else
  {
    uint64_t v46 = sub_20A8C3E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v32, 1, 1, v46);
  }
  uint64_t v75 = v15;
  unint64_t v76 = v32;
  swift_bridgeObjectRelease();
  long long v47 = v95;
  sub_20A4FAA94((uint64_t)v80, a1, v95, (uint64_t)v32, v25);
  uint64_t v48 = *(void (**)(char *, NSObject *, uint64_t))(v94 + 16);
  v48(v92, a1, v17);
  uint64_t v78 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A4B9ED0((uint64_t)v32, v97, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v74 = type metadata accessor for StockSparklineViewModel;
  uint64_t v49 = v91;
  sub_20A4B9ED0((uint64_t)v25, v91, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel);
  uint64_t v50 = (char *)v47 + *(int *)(type metadata accessor for StockListChangeWatchlistBlueprintModifier() + 36);
  uint64_t v80 = v25;
  unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  unint64_t v52 = v93;
  v51(v93, v50, v96);
  uint64_t v53 = (uint64_t)v81;
  long long v54 = v92;
  v48(v81, v92, v17);
  uint64_t v55 = v78;
  unint64_t v56 = (int *)v79;
  uint64_t v57 = v97;
  sub_20A4B9ED0(v97, v53 + *(int *)(v79 + 20), &qword_26AC68FB0, v78);
  uint64_t v58 = v49;
  uint64_t v59 = v74;
  sub_20A4B9ED0(v58, v53 + v56[6], &qword_26AC754A0, v74);
  unint64_t v60 = v52;
  uint64_t v61 = v96;
  v51((char *)(v53 + v56[8]), v60, v96);
  *(unsigned char *)(v53 + v56[9]) = 0;
  uint64_t v62 = v77;
  sub_20A4B9ED0(v57, v77, &qword_26AC68FB0, v55);
  uint64_t v63 = v82;
  sub_20A8C3E70();
  uint64_t v64 = v83;
  sub_20A5EC850(v62, v63, 9666786, 0xA300000000000000, v83);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v93, v61);
  uint64_t v65 = v59;
  sub_20A4B9F50(v91, &qword_26AC754A0, v59);
  sub_20A4B9F50(v97, &qword_26AC68FB0, v55);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v54, v90);
  sub_20A4FBD70(v64, v53 + v56[7], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  __swift_project_boxed_opaque_existential_1(v95 + 2, v95[5]);
  LOBYTE(v54) = sub_20A8C36F0();
  uint64_t v66 = sub_20A8C4050();
  uint64_t v68 = v67;
  uint64_t v69 = v86;
  sub_20A4FBC8C(v53, v86, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v70 = v84;
  *(unsigned char *)(v69 + *(int *)(v84 + 20)) = v54 & 1;
  uint64_t v71 = (uint64_t *)(v69 + *(int *)(v70 + 24));
  uint64_t *v71 = v66;
  v71[1] = v68;
  sub_20A4FBC8C(v69, v87, type metadata accessor for StockListStockModel);
  swift_storeEnumTagMultiPayload();
  sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
  sub_20A8C8320();
  sub_20A4BA028(v69, type metadata accessor for StockListStockModel);
  sub_20A4BA028(v53, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  sub_20A4B9F50((uint64_t)v80, &qword_26AC754A0, v65);
  return sub_20A4B9F50((uint64_t)v76, &qword_26AC68FB0, v55);
}

uint64_t sub_20A4FAA94@<X0>(uint64_t a1@<X2>, NSObject *a2@<X3>, void *a3@<X4>, uint64_t a4@<X5>, unsigned char *a5@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v61 = a3;
  uint64_t v68 = a5;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A4BA088(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v60 = &v55[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v55[-v11];
  sub_20A4BA088(0, &qword_26AC7F4E0, MEMORY[0x263F7CB28], v7);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = &v55[-v14];
  uint64_t v67 = sub_20A8CDCD0();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v64 = &v55[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  uint64_t v62 = &v55[-v18];
  sub_20A4BA088(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], v7);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = &v55[-v20];
  uint64_t v22 = sub_20A8C3D00();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v63 = &v55[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = &v55[-v26];
  uint64_t v28 = sub_20A8C3EC0();
  if (*(void *)(a1 + 16) && (unint64_t v30 = sub_20A4D1B24(v28, v29), (v31 & 1) != 0))
  {
    (*(void (**)(unsigned char *, unint64_t, uint64_t))(v23 + 16))(v21, *(void *)(a1 + 56) + *(void *)(v23 + 72) * v30, v22);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v21, 0, 1, v22);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    uint64_t v32 = (unint64_t *)&unk_26AC68F80;
    uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AEB8];
    uint64_t v34 = (uint64_t)v21;
LABEL_9:
    sub_20A4B9F50(v34, v32, v33);
    uint64_t v39 = type metadata accessor for StockSparklineViewModel(0);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v68, 1, 1, v39);
  }
  uint64_t v35 = *(void **)(v23 + 32);
  ((void (*)(char *, unsigned char *, uint64_t))v35)(v27, v21, v22);
  __swift_project_boxed_opaque_existential_1(v61 + 12, v61[15]);
  uint64_t v36 = v66;
  sub_20A61E8FC(v27, v66, a2, (uint64_t)v15, 0.02);
  uint64_t v37 = v65;
  uint64_t v38 = v67;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v65 + 48))(v15, 1, v67) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    uint64_t v32 = &qword_26AC7F4E0;
    uint64_t v33 = (uint64_t (*)(uint64_t))MEMORY[0x263F7CB28];
    uint64_t v34 = (uint64_t)v15;
    goto LABEL_9;
  }
  uint64_t v61 = v35;
  uint64_t v41 = v62;
  uint64_t v58 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 32);
  uint64_t v59 = v37 + 32;
  v58(v62, v15, v38);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v37 + 16))(v64, v41, v38);
  (*(void (**)(unsigned char *, char *, uint64_t))(v23 + 16))(v63, v27, v22);
  sub_20A4B9ED0(v36, (uint64_t)v12, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v42 = sub_20A8C3E10();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v44 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48);
  if (v44(v12, 1, v42) == 1)
  {
    sub_20A4B9F50((uint64_t)v12, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v57 = 0;
    int v56 = 1;
  }
  else
  {
    uint64_t v57 = sub_20A8C3E00();
    int v56 = v45 & 1;
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v12, v42);
  }
  uint64_t v46 = v60;
  sub_20A4B9ED0(v66, (uint64_t)v60, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v44(v46, 1, v42) == 1)
  {
    uint64_t v47 = v67;
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v62, v67);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    sub_20A4B9F50((uint64_t)v46, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    uint64_t v48 = 0;
    char v49 = 1;
  }
  else
  {
    uint64_t v48 = sub_20A8C3D10();
    char v49 = v50 & 1;
    uint64_t v47 = v67;
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v62, v67);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
    (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v46, v42);
  }
  unint64_t v51 = v68;
  v58(v68, v64, v47);
  unint64_t v52 = (int *)type metadata accessor for StockSparklineViewModel(0);
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v61)(&v51[v52[8]], v63, v22);
  uint64_t v53 = &v51[v52[5]];
  *(void *)uint64_t v53 = v57;
  v53[8] = v56;
  long long v54 = &v51[v52[6]];
  *(void *)long long v54 = v48;
  v54[8] = v49;
  v51[v52[7]] = 0;
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, int *))(*((void *)v52 - 1) + 56))(v51, 0, 1, v52);
}

uint64_t sub_20A4FB280(void *a1, void (*a2)(char *))
{
  sub_20A4FBB6C(0, &qword_26AC6A428, MEMORY[0x263F7D950]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  double v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v12 - v8;
  *(uint64_t *)((char *)&v12 - v8) = (uint64_t)a1;
  (*(void (**)(char *, void, uint64_t, double))(v6 + 104))((char *)&v12 - v8, *MEMORY[0x263F7D930], v5, v7);
  id v10 = a1;
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_20A4FB3A8()
{
  return sub_20A4FB438(&qword_26AC7E600, (void (*)(uint64_t))type metadata accessor for StockListChangeWatchlistBlueprintModifier);
}

uint64_t sub_20A4FB3F0()
{
  return sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A4FB438(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4FB480()
{
  unint64_t v1 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for AttributionSource();
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  uint64_t v10 = v2 + v1[11];
  uint64_t v11 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);

  return swift_deallocObject();
}

uint64_t sub_20A4FB6A8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListChangeWatchlistBlueprintModifier() - 8);
  return sub_20A4F8AC8(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_20A4FB714()
{
  uint64_t v1 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  uint64_t v18 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v18 + 16) & ~v18;
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  sub_20A4FBB6C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v19 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = v0;
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 136);
  uint64_t v7 = v0 + v2 + v1[9];
  uint64_t v8 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + v2 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for AttributionSource();
  uint64_t v11 = v9 + *(int *)(v10 + 20);
  uint64_t v12 = sub_20A8C2530();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  uint64_t v14 = v6 + v1[11];
  uint64_t v15 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1(v6 + v1[12]);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v20 + ((v2 + v17 + v5) & ~v5), v19);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4FBA00(long long *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockListChangeWatchlistBlueprintModifier() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_20A4FBB6C(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  unint64_t v8 = (*(void *)(*(void *)(v6 - 8) + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_20A4F8E88(a1, v1 + v4, v1 + v7, *(void (**)(char *))(v1 + v8), *(void *)(v1 + v8 + 8));
}

uint64_t sub_20A4FBB2C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A4FBB64(void *a1)
{
  return sub_20A4FB280(a1, *(void (**)(char *))(v1 + 16));
}

void sub_20A4FBB6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A4FB438(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A4FBC2C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A4FBB6C(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4FBC8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4FBCF4@<X0>(NSObject *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4FA170(a1, *(uint64_t (**)(uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), a2);
}

unint64_t sub_20A4FBD1C()
{
  unint64_t result = qword_26AC68140;
  if (!qword_26AC68140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68140);
  }
  return result;
}

uint64_t sub_20A4FBD70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A4FBDD8()
{
  uint64_t v1 = (int *)type metadata accessor for StockListChangeWatchlistBlueprintModifier();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 96);
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  uint64_t v3 = v2 + v1[9];
  uint64_t v4 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[10];
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for AttributionSource();
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }

  uint64_t v10 = v2 + v1[11];
  uint64_t v11 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  __swift_destroy_boxed_opaque_existential_1(v2 + v1[12]);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A4FC014@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockListChangeWatchlistBlueprintModifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_20A4F8C74(a1, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

ValueMetadata *type metadata accessor for StockListChangeWatchlistBlueprintModifier.Results()
{
  return &type metadata for StockListChangeWatchlistBlueprintModifier.Results;
}

uint64_t sub_20A4FC0D0()
{
  return swift_initClassMetadata2();
}

void sub_20A4FC130(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_20A4FDE74();
}

void sub_20A4FC158()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v4 = sub_20A8CD3E0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16.receiver = v1;
  v16.super_class = ObjectType;
  objc_msgSendSuper2(&v16, sel_viewDidLoad, v6);
  id v9 = objc_msgSend(v1, sel_view);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void **)((char *)v1 + qword_26AC7B758);
    objc_msgSend(v9, sel_addSubview_, v11);

    __swift_project_boxed_opaque_existential_1((void *)((char *)v1 + qword_26AC7B768), *(void *)((char *)v1 + qword_26AC7B768 + 24));
    sub_20A8CD6B0();
    uint64_t v12 = (void *)sub_20A8CD3C0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(v11, sel_setColor_, v12);

    objc_msgSend(v11, sel_startAnimating);
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = *(void *)(v3 + 80);
    v14[3] = *(void *)(v3 + 88);
    v14[4] = v13;
    sub_20A8C6380();
    swift_release();
    swift_release();
    id v15 = objc_msgSend(v1, sel_traitCollection);
    sub_20A4FC964((uint64_t)v15);
  }
  else
  {
    __break(1u);
  }
}

void sub_20A4FC3D4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v6 = *a1;
  uint64_t v7 = a2 + 16;
  swift_beginAccess();
  uint64_t v8 = (void *)MEMORY[0x2105289B0](v7);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel_addChildViewController_, v6);
    id v10 = objc_msgSend(v9, sel_view);
    if (v10)
    {
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v6, sel_view);
      if (v12)
      {
        uint64_t v13 = v12;
        objc_msgSend(v11, sel_addSubview_, v12);

        objc_msgSend(v6, sel_didMoveToParentViewController_, v9);
        id v14 = objc_msgSend(v6, sel_view);
        if (v14)
        {
          id v15 = v14;
          id v16 = objc_msgSend(v9, sel_view);
          if (v16)
          {
            uint64_t v17 = v16;
            objc_msgSend(v16, sel_bounds);
            double v19 = v18;
            double v21 = v20;
            double v23 = v22;
            double v25 = v24;

            objc_msgSend(v15, sel_setFrame_, v19, v21, v23, v25);
            id v26 = objc_msgSend(v9, sel_view);
            if (v26)
            {
              uint64_t v27 = v26;
              objc_msgSend(v26, sel_setNeedsLayout);

              type metadata accessor for ForYouFeedContainerViewController();
              swift_getWitnessTable();
              sub_20A8CAD10();
              id v28 = objc_msgSend(v6, sel_view);
              if (v28)
              {
                uint64_t v29 = v28;
                objc_msgSend(v28, sel_setAlpha_, 0.0);

                uint64_t v30 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v31 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v32 = (void *)swift_allocObject();
                v32[2] = a3;
                v32[3] = a4;
                v32[4] = v30;
                v32[5] = v31;
                uint64_t v33 = *(void (**)(void (*)(), void *, uint64_t, uint64_t))(a4 + 8);
                swift_retain();
                swift_retain();
                v33(sub_20A4FDFEC, v32, a3, a4);
                swift_release();
                swift_release();
                swift_release();

                return;
              }
LABEL_15:
              __break(1u);
              return;
            }
LABEL_14:
            __break(1u);
            goto LABEL_15;
          }
LABEL_13:
          __break(1u);
          goto LABEL_14;
        }
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
}

void sub_20A4FC6D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x2105289B0](v3);
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    swift_beginAccess();
    uint64_t v6 = MEMORY[0x2105289B0](a2 + 16);
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      uint64_t v8 = self;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v7;
      *(void *)(v9 + 24) = v5;
      double v20 = sub_20A4FE038;
      uint64_t v21 = v9;
      uint64_t v16 = MEMORY[0x263EF8330];
      uint64_t v17 = 1107296256;
      double v18 = sub_20A4713FC;
      double v19 = &block_descriptor_8;
      id v10 = _Block_copy(&v16);
      id v11 = v7;
      id v12 = v5;
      swift_release();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      double v20 = sub_20A4FE078;
      uint64_t v21 = v13;
      uint64_t v16 = MEMORY[0x263EF8330];
      uint64_t v17 = 1107296256;
      double v18 = sub_20A73FFBC;
      double v19 = &block_descriptor_19_0;
      id v14 = _Block_copy(&v16);
      id v15 = v12;
      swift_release();
      objc_msgSend(v8, sel_animateWithDuration_delay_options_animations_completion_, 2, v10, v14, 0.3, 0.0);

      _Block_release(v14);
      _Block_release(v10);
    }
    else
    {
    }
  }
}

id sub_20A4FC8E4(void *a1, uint64_t a2)
{
  id result = objc_msgSend(a1, sel_view);
  if (result)
  {
    uint64_t v4 = result;
    objc_msgSend(result, sel_setAlpha_, 1.0);

    uint64_t v5 = *(void **)(a2 + qword_26AC7B758);
    return objc_msgSend(v5, sel_setAlpha_, 0.0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A4FC964(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CD3E0();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)&v2[qword_26AC7B770];
  swift_beginAccess();
  sub_20A4342F4(v7, (uint64_t)v25);
  uint64_t v8 = v26;
  uint64_t v9 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v10 = *(void *)(v9 + 8);
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  uint64_t v23 = v8;
  uint64_t v24 = v9;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
  v11(a1, v8, v10);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v7);
  sub_20A42BEBC(&v22, v7);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_20A4342F4(v7, (uint64_t)v25);
  id v12 = __swift_project_boxed_opaque_existential_1(v25, v26);
  id v13 = objc_msgSend(v2, sel_view);
  if (v13)
  {
    id v14 = v13;
    uint64_t v16 = *(void *)(*v12 + 40);
    uint64_t v15 = *(void *)(*v12 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(*v12 + 16), v16);
    uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v15 + 16) + 64))(v16);
    objc_msgSend(v14, sel_setBackgroundColor_, v17);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    double v18 = *(void **)&v2[qword_26AC7B758];
    __swift_project_boxed_opaque_existential_1(&v2[qword_26AC7B768], *(void *)&v2[qword_26AC7B768 + 24]);
    sub_20A8CD6B0();
    double v19 = (void *)sub_20A8CD3C0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
    objc_msgSend(v18, sel_setColor_, v19);
  }
  else
  {
    __break(1u);
  }
}

void sub_20A4FCBE4(void *a1)
{
  id v1 = a1;
  sub_20A4FC158();
}

void sub_20A4FCC2C()
{
  id v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v29, sel_viewDidLayoutSubviews);
  sub_20A8C6350();
  if (!v28) {
    goto LABEL_5;
  }
  id v2 = objc_msgSend(v28, sel_view);

  if (!v2)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    objc_msgSend(v3, sel_bounds);
    double v6 = v5;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;

    objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
LABEL_5:
    id v13 = *(void **)&v1[qword_26AC7B758];
    id v14 = objc_msgSend(v1, sel_view);
    if (v14)
    {
      uint64_t v15 = v14;
      objc_msgSend(v14, sel_layoutMargins);
      double v17 = v16;

      id v18 = objc_msgSend(v1, sel_view);
      if (v18)
      {
        double v19 = v18;
        objc_msgSend(v18, sel_bounds);
        CGFloat v21 = v20;
        CGFloat v23 = v22;
        CGFloat v25 = v24;
        CGFloat v27 = v26;

        v30.origin.x = v21;
        v30.origin.y = v23;
        v30.size.width = v25;
        v30.size.height = v27;
        objc_msgSend(v13, sel_setFrame_, 0.0, v17, CGRectGetWidth(v30), 120.0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
}

void sub_20A4FCDF0(void *a1)
{
  id v1 = a1;
  sub_20A4FCC2C();
}

void sub_20A4FCE38(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  sub_20A4FC964((uint64_t)v3);
}

void sub_20A4FCEA4(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_20A4FCE38((uint64_t)a3);
}

void sub_20A4FCF10(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = *MEMORY[0x263F8EED0] & *v1;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  objc_msgSendSuper2(&v6, sel_didMoveToParentViewController_, a1);
  sub_20A8C6350();
  if (v5)
  {
    (*(void (**)(void *, uint64_t, void))(*(void *)(v4 + 88) + 16))(v1, a1, *(void *)(v4 + 80));
  }
}

void sub_20A4FCFEC(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_20A4FCF10((uint64_t)a3);
}

void sub_20A4FD058(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;

  sub_20A4FDF00();
}

void sub_20A4FD0CC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_26AC7B770);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_26AC7B768);
  swift_release();
  id v2 = *(void **)(a1 + qword_26AC7B758);
}

uint64_t type metadata accessor for ForYouFeedContainerViewController()
{
  return __swift_instantiateGenericMetadata();
}

void sub_20A4FD150()
{
  sub_20A8C6350();
  if (v0)
  {
    sub_20A8CB030();
  }
}

void sub_20A4FD204(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t))
{
  uint64_t v9 = *MEMORY[0x263F8EED0] & *v4;
  sub_20A8C6350();
  if (v10)
  {
    a4(a1, a2, *(void *)(v9 + 80), a3);
  }
}

void sub_20A4FD2B8()
{
  sub_20A8C6350();
  if (v0)
  {
    sub_20A8CB040();
  }
}

void sub_20A4FD364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_20A4FD394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_20A4FD3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C3F0](a1, a2, ObjectType, a4);
}

void sub_20A4FD41C()
{
}

void sub_20A4FD424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_20A4FD454()
{
}

uint64_t sub_20A4FD45C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C8EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v10 = *MEMORY[0x263F7DB48];
    uint64_t v11 = sub_20A8CA180();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a2, v10, v11);
    double v12 = (unsigned int *)MEMORY[0x263F7DB10];
LABEL_5:
    uint64_t v15 = *v12;
    uint64_t v16 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
  }
  if (v9 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v13 = *MEMORY[0x263F7DAE8];
    uint64_t v14 = sub_20A8CA120();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
    double v12 = (unsigned int *)MEMORY[0x263F7DAF0];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A4FD6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A4FD45C(a1, a2);
}

uint64_t sub_20A4FD6BC()
{
  id v1 = (void *)(v0 + qword_26AC7B770);
  swift_beginAccess();
  id v2 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v4 = *(void *)(*v2 + 40);
  uint64_t v3 = *(void *)(*v2 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v2 + 16), v4);
  (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 432))(v4);
  return sub_20A8C8EC0();
}

uint64_t sub_20A4FD754()
{
  return sub_20A4FD6BC();
}

uint64_t sub_20A4FD778@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  swift_getObjectType();
  uint64_t v1 = sub_20A8C8940();
  uint64_t v24 = *(void *)(v1 - 8);
  uint64_t v25 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  double v22 = (char *)&v21 - v5;
  uint64_t v23 = sub_20A8C8950();
  uint64_t v6 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  double v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v21 - v10;
  if (qword_26AC69178 != -1) {
    swift_once();
  }
  swift_getWitnessTable();
  sub_20A8C41C0();
  int v12 = v27;
  sub_20A4FDE1C();
  uint64_t v13 = sub_20A8C8960();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if (v12 == 1)
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_20A8D4540;
    uint64_t v18 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
    v18(v17 + v16, *MEMORY[0x263F7D4A0], v13);
    v18(v17 + v16 + v15, *MEMORY[0x263F7D4A8], v13);
    sub_20A7BABC8(v17);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v11, *MEMORY[0x263F7D490], v23);
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v22, *MEMORY[0x263F7D478], v25);
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v14 + 104))(v20 + v16, *MEMORY[0x263F7D4A8], v13);
    sub_20A7BABC8(v20);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D490], v23);
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v3, *MEMORY[0x263F7D478], v25);
  }
  return sub_20A8C8980();
}

uint64_t sub_20A4FDC04@<X0>(uint64_t a1@<X8>)
{
  return sub_20A4FD778(a1);
}

id sub_20A4FDC28()
{
  sub_20A8C6350();
  if (v3)
  {
    uint64_t v1 = sub_20A8C9030();

    return (id)v1;
  }
  else
  {
    return v0;
  }
}

id sub_20A4FDCF0()
{
  return sub_20A4FDC28();
}

uint64_t sub_20A4FDCF8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + qword_26AC7B770);
  swift_beginAccess();
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v6 = *(void *)(*v4 + 40);
  uint64_t v5 = *(void *)(*v4 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v4 + 16), v6);
  *a1 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 16) + 64))(v6);
  uint64_t v7 = *MEMORY[0x263F7DD38];
  uint64_t v8 = sub_20A8CA830();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
}

uint64_t sub_20A4FDDD4@<X0>(void *a1@<X8>)
{
  return sub_20A4FDCF8(a1);
}

uint64_t sub_20A4FDDF8()
{
  return 0x6F43756F59726F46;
}

void sub_20A4FDE1C()
{
  if (!qword_26AC7FF60)
  {
    sub_20A8C8960();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FF60);
    }
  }
}

void sub_20A4FDE74()
{
  uint64_t v1 = qword_26AC7B758;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F823E8]), sel_initWithActivityIndicatorStyle_, 100);

  sub_20A8CF520();
  __break(1u);
}

void sub_20A4FDF00()
{
}

uint64_t sub_20A4FDF30()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A4FDF68()
{
  swift_release();

  return swift_deallocObject();
}

void sub_20A4FDFA0(void **a1)
{
  sub_20A4FC3D4(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_20A4FDFAC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A4FDFEC()
{
  sub_20A4FC6D8(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_20A4FDFF8()
{
  return swift_deallocObject();
}

id sub_20A4FE038()
{
  return sub_20A4FC8E4(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A4FE040()
{
  return swift_deallocObject();
}

id sub_20A4FE078()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + qword_26AC7B758);
  objc_msgSend(v1, sel_stopAnimating);

  return objc_msgSend(v1, sel_removeFromSuperview);
}

id sub_20A4FE18C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AdIgnorableView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AdIgnorableView()
{
  return self;
}

uint64_t type metadata accessor for AppReviewRequestStore()
{
  return self;
}

uint64_t sub_20A4FE208(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_20A8C50F0();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  MEMORY[0x270FA5388](v2);
  v19[1] = v3;
  uint64_t v20 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CBF80();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CC1E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), *(void *)(v1 + 48));
  uint64_t result = sub_20A8C7410();
  if (result)
  {
    sub_20A8C50B0();
    sub_20A8CC1C0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    char v13 = sub_20A8CBF60();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (v13)
    {
      uint64_t v15 = v20;
      uint64_t v14 = v21;
      uint64_t v16 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
      unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v18 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, v15, v16);
      sub_20A8C48E0();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A4FE4C8(uint64_t a1, char *a2)
{
  uint64_t v77 = a1;
  uint64_t v3 = sub_20A8C2800();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v67 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4FF1DC(0, (unint64_t *)&unk_26AC82D70, MEMORY[0x263F587B8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v62 = (char *)v53 - v6;
  uint64_t v7 = sub_20A8C6980();
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_20A8C6770();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  long long v54 = (char *)v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C6B50();
  unint64_t v71 = *(void *)(v10 - 8);
  *(void *)&long long v72 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v70 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CBF80();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v75 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C7670();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v76 = sub_20A8C6860();
  uint64_t v63 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8CC1E0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_20A8C6C10();
  uint64_t v61 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C50B0();
  sub_20A8CC1B0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v18 + 8);
  v23(v20, v17);
  uint64_t v73 = v22;
  sub_20A8C6C00();
  sub_20A8C50B0();
  sub_20A8CC1C0();
  uint64_t v58 = v20;
  uint64_t v60 = v17;
  uint64_t v59 = v18 + 8;
  uint64_t v55 = v23;
  v23(v20, v17);
  uint64_t v24 = a2;
  sub_20A8C7660();
  uint64_t v75 = v16;
  sub_20A8C6850();
  uint64_t result = sub_20A8C50C0();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v26 = v70;
  sub_20A8C6B40();
  sub_20A4FF240((unint64_t *)&unk_26AC810D0, MEMORY[0x263F79CF8]);
  uint64_t v27 = v72;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v27);
  uint64_t result = sub_20A8C50D0();
  if ((~*(void *)&v28 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v28 <= -2147483650.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v28 >= 2147483650.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = sub_20A8C50D0();
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v29 <= -2147483650.0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v29 < 2147483650.0)
  {
    CGRect v30 = v54;
    sub_20A8C6760();
    sub_20A4FF240((unint64_t *)&unk_26AC810C0, MEMORY[0x263F79980]);
    unint64_t v71 = 0x800000020A8FDE20;
    uint64_t v31 = v57;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v30, v31);
    sub_20A4FF1DC(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
    uint64_t v33 = v32;
    uint64_t v34 = sub_20A8C4620();
    uint64_t v70 = v24;
    uint64_t v35 = v34;
    v53[0] = v34;
    uint64_t v36 = *(void *)(v34 - 8);
    uint64_t v37 = *(unsigned __int8 *)(v36 + 80);
    uint64_t v38 = (v37 + 32) & ~v37;
    uint64_t v39 = v38 + *(void *)(v36 + 72);
    v53[1] = v37 | 7;
    uint64_t v57 = v33;
    uint64_t v56 = v39;
    uint64_t v40 = swift_allocObject();
    long long v72 = xmmword_20A8D3DC0;
    *(_OWORD *)(v40 + 16) = xmmword_20A8D3DC0;
    uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 104);
    LODWORD(v54) = *MEMORY[0x263F24D48];
    uint64_t v41 = v54;
    v42(v40 + v38, v54, v35);
    sub_20A4FF240(&qword_26AC699C0, MEMORY[0x263F79D58]);
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = v72;
    uint64_t v44 = v41;
    uint64_t v45 = v53[0];
    v42(v43 + v38, v44, v53[0]);
    sub_20A4FF240((unint64_t *)&unk_26AC82D20, MEMORY[0x263F79A80]);
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    uint64_t v46 = v58;
    sub_20A8C50B0();
    sub_20A8CC1D0();
    v55(v46, v60);
    uint64_t v47 = v64;
    sub_20A8C6970();
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v72;
    v42(v48 + v38, v54, v45);
    sub_20A4FF240((unint64_t *)&unk_26AC82D30, MEMORY[0x263F79B30]);
    uint64_t v49 = v66;
    sub_20A8C45B0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v49);
    sub_20A8C7330();
    sub_20A8C50E0();
    char v50 = v67;
    sub_20A8C2760();
    sub_20A4FF240((unint64_t *)&unk_26AC82D40, MEMORY[0x263F7A2A0]);
    sub_20A8C4570();
    uint64_t v51 = v69;
    unint64_t v52 = *(void (**)(char *, uint64_t))(v68 + 8);
    v52(v50, v69);
    sub_20A8C27F0();
    sub_20A8C4580();
    v52(v50, v51);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v75, v76);
    return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v73, v74);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_20A4FF054()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdComponentTracker()
{
  return self;
}

uint64_t sub_20A4FF0B8(uint64_t a1)
{
  return sub_20A4FE208(a1);
}

uint64_t sub_20A4FF0DC()
{
  uint64_t v1 = sub_20A8C50F0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A4FF16C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C50F0() - 8);
  uint64_t v4 = (char *)(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));

  return sub_20A4FE4C8(a1, v4);
}

void sub_20A4FF1DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A4FF240(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A4FF288()
{
  return MEMORY[0x263F8EE78];
}

unint64_t sub_20A4FF294()
{
  return sub_20A4CFD34(MEMORY[0x263F8EE78]);
}

double sub_20A4FF2A0()
{
  return 1.0;
}

uint64_t sub_20A4FF2B0()
{
  sub_20A4FF4E8();
  uint64_t v0 = sub_20A8CC530();
  uint64_t v2 = v1;
  if (v0 == sub_20A8CC530() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_20A8CF760();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_20A4FF358()
{
  sub_20A4FF4E8();

  return sub_20A8CC530();
}

uint64_t sub_20A4FF384(uint64_t a1)
{
  uint64_t v2 = sub_20A4FF5F8(&qword_26763B7A8);

  return MEMORY[0x270F4FAB8](a1, v2);
}

uint64_t sub_20A4FF3DC()
{
  return 0x616C50207377654ELL;
}

uint64_t sub_20A4FF400()
{
  return sub_20A4FF5F8(&qword_26763B790);
}

uint64_t type metadata accessor for NewsPlacardStockFeedGroup()
{
  uint64_t result = qword_26AC763E0;
  if (!qword_26AC763E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A4FF480()
{
  return sub_20A4FF5F8(&qword_26763B798);
}

uint64_t sub_20A4FF4B4()
{
  return sub_20A4FF5F8(&qword_26763B7A0);
}

void sub_20A4FF4E8()
{
  if (!qword_26AC6AF68)
  {
    sub_20A4FF550();
    sub_20A4FF5A4();
    unint64_t v0 = sub_20A8CC590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AF68);
    }
  }
}

unint64_t sub_20A4FF550()
{
  unint64_t result = qword_26AC7D040;
  if (!qword_26AC7D040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7D040);
  }
  return result;
}

unint64_t sub_20A4FF5A4()
{
  unint64_t result = qword_26AC7D038;
  if (!qword_26AC7D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7D038);
  }
  return result;
}

uint64_t sub_20A4FF5F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NewsPlacardStockFeedGroup();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A4FF63C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_20A4FF4E8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_20A4FF708(uint64_t a1)
{
  sub_20A4FF4E8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A4FF76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4FF4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A4FF7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4FF4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A4FF864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4FF4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A4FF8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4FF4E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_20A4FF95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A4FF970);
}

uint64_t sub_20A4FF970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4FF4E8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_20A4FFA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A4FFA54);
}

void sub_20A4FFA54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A4FF4E8();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

void sub_20A4FFB10()
{
  sub_20A4FF4E8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_20A4FFBA4()
{
  qword_26AC9E8A0 = 0x4059000000000000;
}

id sub_20A4FFBB4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AdIgnorableView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    char v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_20A4FFC30()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    id v2 = *(id *)(v0 + 24);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AdIgnorableView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    char v4 = *(void **)(v0 + 24);
    *(void *)(v0 + 24) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_20A4FFCAC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 40) = a2;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 56) = 0;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  swift_unknownObjectRetain();
  id v3 = sub_20A4FFBB4();
  id v4 = sub_20A4FFC30();
  objc_msgSend(v3, sel_addSubview_, v4);

  id v5 = sub_20A4FFBB4();
  id v6 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  id v7 = sub_20A4FFBB4();
  objc_msgSend(v7, sel_setUserInteractionEnabled_, 0);

  id v8 = sub_20A4FFC30();
  objc_msgSend(v8, sel_setAlpha_, 0.0);

  swift_unknownObjectRelease();
  return v2;
}

void sub_20A4FFDA0(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v10 = sub_20A4FFBB4();
  objc_msgSend(a1, sel_bounds);
  sub_20A8CED90();
  objc_msgSend(v10, sel_setFrame_);

  switch(a3)
  {
    case 1:
      uint64_t v11 = *(void **)(v5 + 48);
      if (!v11) {
        goto LABEL_19;
      }
      goto LABEL_10;
    case 2:
    case 4:
      uint64_t v11 = *(void **)(v5 + 48);
      if (!v11) {
        goto LABEL_5;
      }
LABEL_10:
      if ((*((unsigned char *)v11 + OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state) & 1) != 0 && *(unsigned char *)(v5 + 56) == 1)
      {
        sub_20A48C414(a4, (uint64_t)v52);
        id v18 = v11;
        id v19 = sub_20A500384(a1, (uint64_t)v52);
        if (v19)
        {
          uint64_t v20 = v19;
          *(unsigned char *)(v5 + 56) = 0;
          id v21 = v18;
          objc_msgSend(v20, sel_frame);
          objc_msgSend(a1, sel_adjustedContentInset);
          sub_20A8CED90();
          objc_msgSend(v21, sel_setFrame_);

          sub_20A81589C(v20);
          id v22 = sub_20A4FFC30();
          objc_msgSend(a1, sel_bounds);
          objc_msgSend(v21, sel_frame);
          CGRectGetMaxY(v54);
          sub_20A8CED90();
          objc_msgSend(v22, sel_setFrame_);
        }
        else
        {
        }
      }
      return;
    case 3:
      sub_20A4730C8(a2);
      uint64_t v23 = *(void **)(v5 + 48);
      if (!v23) {
        return;
      }
      id v24 = v23;
      uint64_t v25 = sub_20A500E78(a4);
      sub_20A815E70(v25, v26);

      goto LABEL_16;
    default:
      if (*(void *)(v5 + 48))
      {
LABEL_5:
        uint64_t v13 = sub_20A500E78(a4);
        uint64_t v14 = *(void **)(v5 + 48);
        if (v14)
        {
          uint64_t v15 = v12;
          uint64_t ObjCClassFromObject = swift_getObjCClassFromObject();
          if (ObjCClassFromObject != swift_getObjCClassFromObject())
          {
            swift_unknownObjectRetain();
            id v17 = v14;
            sub_20A815E70(v13, v15);

            swift_unknownObjectRelease();
          }
        }
LABEL_16:
        swift_unknownObjectRelease();
      }
      else
      {
LABEL_19:
        sub_20A4730C8(a2);
        sub_20A48C414(a4, (uint64_t)v52);
        id v27 = sub_20A500384(a1, (uint64_t)v52);
        if (v27)
        {
          double v28 = v27;
          uint64_t v29 = sub_20A500E78(a4);
          uint64_t v31 = v30;
          id v32 = v28;
          id v33 = sub_20A472E68();
          id v34 = objc_allocWithZone((Class)type metadata accessor for ForYouFeedTitleView());
          swift_unknownObjectRetain();
          id v35 = sub_20A8159B8(v32, v33, v29, v31);
          id v36 = sub_20A4FFC30();
          id v37 = objc_msgSend(v36, sel_backgroundColor);

          objc_msgSend(v35, sel_setBackgroundColor_, v37);
          objc_msgSend(v35, sel_setClipsToBounds_, 1);
          objc_msgSend(v35, sel_setHidden_, 1);
          uint64_t v38 = (char *)v35;
          uint64_t v51 = v32;
          objc_msgSend(v32, sel_frame);
          objc_msgSend(a1, sel_adjustedContentInset);
          sub_20A8CED90();
          objc_msgSend(v38, (SEL)&off_263FDE418);

          uint64_t v39 = *(void *)&v38[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v41 = *(void **)&v38[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
          uint64_t v42 = *(void *)&v38[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
          uint64_t v43 = *(uint64_t (**)(void, id, uint64_t, uint64_t, uint64_t))(v39 + 16);
          swift_unknownObjectRetain();
          id v44 = v41;
          LOBYTE(v37) = v43(0, v44, v42, ObjectType, v39);

          swift_unknownObjectRelease();
          v38[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = (char)v37;
          id v45 = sub_20A4FFC30();
          objc_msgSend(a1, sel_bounds);
          objc_msgSend(v38, sel_frame);
          CGRectGetMaxY(v55);
          sub_20A8CED90();
          objc_msgSend(v45, sel_setFrame_);

          id v46 = sub_20A4FFBB4();
          id v47 = sub_20A4FFC30();
          objc_msgSend(v46, sel_insertSubview_belowSubview_, v38, v47);

          uint64_t v48 = *(void **)(v5 + 48);
          if (v48)
          {
            id v49 = v48;
            objc_msgSend(v49, sel_removeFromSuperview);
          }
          swift_unknownObjectRelease();

          char v50 = *(void **)(v5 + 48);
          *(void *)(v5 + 48) = v38;
        }
      }
      return;
  }
}

id sub_20A500384(void *a1, uint64_t a2)
{
  sub_20A48C414(a2, (uint64_t)v21);
  if (v22)
  {
    objc_msgSend(a1, sel_contentOffset);
    double v4 = v3;
    objc_msgSend(a1, sel_adjustedContentInset);
    double v6 = v4 + v5;
    objc_msgSend(a1, sel_bounds);
    double Width = CGRectGetWidth(v24);
    id v8 = sub_20A472E68();
    objc_msgSend(v8, sel_frame);
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;

    v25.origin.x = v10;
    v25.origin.y = v12;
    v25.size.width = v14;
    v25.size.height = v16;
    double Height = CGRectGetHeight(v25);
    double v18 = 0.0;
  }
  else
  {
    double v18 = *(double *)v21;
    double v6 = *(double *)&v21[1];
    double Width = *(double *)&v21[2];
    double Height = *(double *)&v21[3];
  }
  id v19 = objc_msgSend(a1, sel_resizableSnapshotViewFromRect_afterScreenUpdates_withCapInsets_, 1, v18, v6, Width, Height, *MEMORY[0x263F834E8], *(double *)(MEMORY[0x263F834E8] + 8), *(double *)(MEMORY[0x263F834E8] + 16), *(double *)(MEMORY[0x263F834E8] + 24));

  return v19;
}

void sub_20A5004B0(uint64_t a1)
{
  id v2 = sub_20A4FFC30();
  objc_msgSend(v2, sel_setAlpha_, 1.0);

  double v3 = *(char **)(a1 + 48);
  if (v3)
  {
    uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
    uint64_t ObjectType = swift_getObjectType();
    double v6 = *(void **)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
    uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
    id v8 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(v4 + 16);
    CGFloat v10 = v3;
    swift_unknownObjectRetain();
    id v9 = v6;
    LOBYTE(v4) = v8(1, v9, v7, ObjectType, v4);

    swift_unknownObjectRelease();
    v10[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = v4;
  }
}

void sub_20A5005DC(uint64_t a1)
{
  id v2 = sub_20A4FFC30();
  objc_msgSend(v2, sel_setAlpha_, 0.0);

  double v3 = *(char **)(a1 + 48);
  if (v3)
  {
    uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
    uint64_t ObjectType = swift_getObjectType();
    double v6 = *(void **)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
    uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
    id v8 = *(uint64_t (**)(void, id, uint64_t, uint64_t, uint64_t))(v4 + 16);
    CGFloat v10 = v3;
    swift_unknownObjectRetain();
    id v9 = v6;
    LOBYTE(v4) = v8(0, v9, v7, ObjectType, v4);

    swift_unknownObjectRelease();
    v10[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = v4;
  }
}

void sub_20A500708(void *a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_20A8CA180();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C9510();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  double v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CA630();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7DB58], v6);
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(a1, sel_layoutMargins);
  sub_20A8C94E0();
  double v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_26AC68BF8 != -1) {
    swift_once();
  }
  double v16 = a2 - (v15 - *(double *)&qword_26AC9E8A0);
  if (v16 < 0.0) {
    double v16 = 0.0;
  }
  double v17 = fmin(v16 / *(double *)&qword_26AC9E8A0, 1.0);
  if (v17 > 0.0)
  {
    double v18 = *(void **)(v2 + 48);
    if (v18) {
      objc_msgSend(v18, sel_setHidden_, 0);
    }
  }
  id v19 = sub_20A4FFC30();
  objc_msgSend(v19, sel_setAlpha_, v17);

  uint64_t v20 = *(char **)(v3 + 48);
  if (v20)
  {
    uint64_t v21 = *(void *)&v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = *(void **)&v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
    uint64_t v24 = *(void *)&v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
    CGRect v25 = *(void (**)(uint64_t, id, uint64_t, uint64_t, uint64_t, double))(v21 + 8);
    uint64_t v26 = v20[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state];
    id v27 = v20;
    swift_unknownObjectRetain();
    id v28 = v23;
    v25(v26, v28, v24, ObjectType, v21, v17);

    swift_unknownObjectRelease();
  }
}

uint64_t sub_20A500A5C()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouFeedViewCollapsingAnimator()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ForYouFeedViewCollapsingAnimator.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A500B9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouFeedViewCollapsingAnimator.State()
{
  return &type metadata for ForYouFeedViewCollapsingAnimator.State;
}

unint64_t sub_20A500BD8()
{
  unint64_t result = qword_26763B7B0;
  if (!qword_26763B7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B7B0);
  }
  return result;
}

uint64_t sub_20A500C2C()
{
  return sub_20A8CA6E0();
}

void sub_20A500C7C()
{
  uint64_t v1 = v0;
  id v2 = sub_20A4FFC30();
  objc_msgSend(v2, sel_setAlpha_, 1.0);

  int v3 = *(void **)(v1 + 48);
  if (v3)
  {
    objc_msgSend(v3, sel_setHidden_, 0);
    unsigned int v4 = *(char **)(v1 + 48);
    if (v4)
    {
      uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_animator + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(void **)&v4[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_contentView];
      uint64_t v8 = *(void *)&v4[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_titleView];
      id v9 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, uint64_t))(v5 + 16);
      uint64_t v10 = v4;
      swift_unknownObjectRetain();
      id v11 = v7;
      LOBYTE(v5) = v9(1, v11, v8, ObjectType, v5);

      swift_unknownObjectRelease();
      v10[OBJC_IVAR____TtC8StocksUI19ForYouFeedTitleView_state] = v5;
    }
  }
  id v12 = sub_20A4FFBB4();
  objc_msgSend(v12, sel_setAccessibilityElementsHidden_, 0);

  id v13 = sub_20A4FFBB4();
  objc_msgSend(v13, sel_setAccessibilityViewIsModal_, 1);

  *(unsigned char *)(v1 + 56) = 1;
}

void sub_20A500DDC()
{
  id v1 = sub_20A4FFC30();
  objc_msgSend(v1, sel_setAlpha_, 0.0);

  id v2 = *(void **)(v0 + 48);
  if (v2)
  {
    objc_msgSend(v2, sel_removeFromSuperview);
    int v3 = *(void **)(v0 + 48);
  }
  else
  {
    int v3 = 0;
  }
  *(void *)(v0 + 48) = 0;

  id v4 = sub_20A4FFBB4();
  objc_msgSend(v4, sel_setAccessibilityViewIsModal_, 0);

  id v5 = sub_20A4FFBB4();
  objc_msgSend(v5, sel_setAccessibilityElementsHidden_, 1);

  *(unsigned char *)(v0 + 56) = 0;
}

uint64_t sub_20A500E78(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 33))
  {
    type metadata accessor for NoopForYouFeedTitleViewAnimator();
    return swift_allocObject();
  }
  else
  {
    sub_20A48C414(a1, (uint64_t)v4);
    sub_20A48C414((uint64_t)v4, (uint64_t)v5);
    if ((v5[32] & 1) != 0
      || (id v1 = objc_msgSend(self, sel_sharedApplication),
          id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory),
          v1,
          LOBYTE(v1) = sub_20A8CECD0(),
          v2,
          (v1 & 1) == 0))
    {
      type metadata accessor for CrossFadeForYouFeedTitleViewAnimator();
      return swift_allocObject();
    }
    else
    {
      type metadata accessor for SlideForYouFeedTitleViewAnimator();
      return swift_allocObject();
    }
  }
}

void sub_20A500F7C()
{
  if (!qword_26AC7FB60[0])
  {
    type metadata accessor for CGRect(255);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, qword_26AC7FB60);
    }
  }
}

void *sub_20A500FD4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      uint64_t v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      long long v19 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v19;
      long long v20 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v20;
      long long v21 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      id v9 = (int *)type metadata accessor for StockViewModel();
      uint64_t v10 = v9[5];
      id v11 = (char *)a1 + v10;
      id v12 = (char *)a2 + v10;
      uint64_t v13 = sub_20A8C3E10();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v22 = v9[6];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      CGRect v25 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v26 = *((void *)v25 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
      {
        sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        uint64_t v28 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v23, v24, v28);
        uint64_t v29 = v25[5];
        uint64_t v30 = &v23[v29];
        uint64_t v31 = &v24[v29];
        *(void *)uint64_t v30 = *(void *)v31;
        v30[8] = v31[8];
        uint64_t v32 = v25[6];
        id v33 = &v23[v32];
        id v34 = &v24[v32];
        *(void *)id v33 = *(void *)v34;
        v33[8] = v34[8];
        v23[v25[7]] = v24[v25[7]];
        uint64_t v35 = v25[8];
        id v36 = &v23[v35];
        id v37 = &v24[v35];
        uint64_t v38 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
      }
      uint64_t v39 = v9[7];
      uint64_t v77 = v9;
      uint64_t v40 = (char *)a1 + v39;
      uint64_t v41 = (char *)a2 + v39;
      *(void *)uint64_t v40 = *(void *)((char *)a2 + v39);
      v40[8] = *((unsigned char *)a2 + v39 + 8);
      *((void *)v40 + 2) = *(void *)((char *)a2 + v39 + 16);
      v40[24] = *((unsigned char *)a2 + v39 + 24);
      *((void *)v40 + 4) = *(void *)((char *)a2 + v39 + 32);
      v40[40] = *((unsigned char *)a2 + v39 + 40);
      uint64_t v42 = *(void *)((char *)a2 + v39 + 56);
      *((void *)v40 + 6) = *(void *)((char *)a2 + v39 + 48);
      *((void *)v40 + 7) = v42;
      uint64_t v43 = *(void *)((char *)a2 + v39 + 72);
      *((void *)v40 + 8) = *(void *)((char *)a2 + v39 + 64);
      *((void *)v40 + 9) = v43;
      id v44 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v45 = v44[9];
      uint64_t v75 = &v41[v45];
      uint64_t v76 = &v40[v45];
      uint64_t v46 = sub_20A8C2EB0();
      id v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(v76, v75, v46);
      uint64_t v48 = v44[10];
      id v49 = &v40[v48];
      char v50 = &v41[v48];
      uint64_t v51 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
      uint64_t v52 = v44[11];
      uint64_t v53 = &v40[v52];
      CGRect v54 = &v41[v52];
      uint64_t v55 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
      uint64_t v56 = v77[8];
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      *((unsigned char *)a1 + v77[9]) = *((unsigned char *)a2 + v77[9]);
      sub_20A5016B4();
      uint64_t v61 = *(int *)(v60 + 48);
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      long long v64 = *((_OWORD *)v63 + 1);
      *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v64;
      *((void *)v62 + 4) = *((void *)v63 + 4);
      v62[40] = v63[40];
      long long v65 = *((_OWORD *)v63 + 4);
      *((_OWORD *)v62 + 3) = *((_OWORD *)v63 + 3);
      *((_OWORD *)v62 + 4) = v65;
      uint64_t v66 = (void *)*((void *)v63 + 10);
      *((void *)v62 + 10) = v66;
      *(_OWORD *)(v62 + 88) = *(_OWORD *)(v63 + 88);
      *(_OWORD *)(v62 + 104) = *(_OWORD *)(v63 + 104);
      *(_OWORD *)(v62 + 120) = *(_OWORD *)(v63 + 120);
      *(_OWORD *)(v62 + 136) = *(_OWORD *)(v63 + 136);
      *(_OWORD *)(v62 + 152) = *(_OWORD *)(v63 + 152);
      *(_OWORD *)(v62 + 168) = *(_OWORD *)(v63 + 168);
      *(_OWORD *)(v62 + 184) = *(_OWORD *)(v63 + 184);
      *(_OWORD *)(v62 + 200) = *(_OWORD *)(v63 + 200);
      *(_OWORD *)(v62 + 232) = *(_OWORD *)(v63 + 232);
      *(_OWORD *)(v62 + 216) = *(_OWORD *)(v63 + 216);
      long long v67 = *(_OWORD *)(v63 + 248);
      *(_OWORD *)(v62 + 264) = *(_OWORD *)(v63 + 264);
      *(_OWORD *)(v62 + 248) = v67;
      v62[312] = v63[312];
      long long v68 = *(_OWORD *)(v63 + 296);
      *(_OWORD *)(v62 + 280) = *(_OWORD *)(v63 + 280);
      *(_OWORD *)(v62 + 296) = v68;
      uint64_t v69 = (void *)*((void *)v63 + 40);
      id v70 = v66;
      if (v69 != (void *)1) {
        id v71 = v69;
      }
      long long v72 = (void *)*((void *)v63 + 41);
      *((void *)v62 + 40) = v69;
      *((void *)v62 + 41) = v72;
      id v73 = v72;
      goto LABEL_16;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void sub_20A501660(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A5016B4()
{
  if (!qword_26AC6DA38)
  {
    type metadata accessor for StockViewModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6DA38);
    }
  }
}

void sub_20A501720(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v3 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    unint64_t v4 = (int *)type metadata accessor for StockViewModel();
    uint64_t v5 = a1 + v4[5];
    uint64_t v6 = sub_20A8C3E10();
    uint64_t v7 = *(void *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    }
    uint64_t v8 = a1 + v4[6];
    uint64_t v9 = type metadata accessor for StockSparklineViewModel(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
    {
      uint64_t v10 = sub_20A8CDCD0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
      uint64_t v11 = v8 + *(int *)(v9 + 32);
      uint64_t v12 = sub_20A8C3D00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    uint64_t v13 = a1 + v4[7];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v15 = v13 + v14[9];
    uint64_t v16 = sub_20A8C2EB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v13 + v14[10];
    uint64_t v18 = sub_20A8C4030();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t v19 = v13 + v14[11];
    uint64_t v20 = sub_20A8C2990();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    uint64_t v21 = a1 + v4[8];
    uint64_t v22 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    sub_20A5016B4();
    uint64_t v24 = a1 + *(int *)(v23 + 48);

    CGRect v25 = *(void **)(v24 + 320);
    if (v25 != (void *)1) {

    }
    uint64_t v26 = *(void **)(v24 + 328);
  }
}

void *sub_20A501A88(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    uint64_t v16 = a2[3];
    a1[2] = a2[2];
    a1[3] = v16;
    long long v17 = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 5) = v17;
    long long v18 = *((_OWORD *)a2 + 7);
    *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 7) = v18;
    long long v19 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for StockViewModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_20A8C3E10();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v20 = v8[6];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v24 = *((void *)v23 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
    {
      sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
      uint64_t v27 = v23[5];
      uint64_t v28 = &v21[v27];
      uint64_t v29 = &v22[v27];
      *(void *)uint64_t v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v23[6];
      uint64_t v31 = &v21[v30];
      uint64_t v32 = &v22[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      v21[v23[7]] = v22[v23[7]];
      uint64_t v33 = v23[8];
      id v34 = &v21[v33];
      uint64_t v35 = &v22[v33];
      uint64_t v36 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      (*(void (**)(char *, void, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v37 = v8[7];
    uint64_t v75 = v8;
    uint64_t v38 = (char *)a1 + v37;
    uint64_t v39 = (char *)a2 + v37;
    *(void *)uint64_t v38 = *(void *)((char *)a2 + v37);
    v38[8] = *((unsigned char *)a2 + v37 + 8);
    *((void *)v38 + 2) = *(void *)((char *)a2 + v37 + 16);
    v38[24] = *((unsigned char *)a2 + v37 + 24);
    *((void *)v38 + 4) = *(void *)((char *)a2 + v37 + 32);
    v38[40] = *((unsigned char *)a2 + v37 + 40);
    uint64_t v40 = *(void *)((char *)a2 + v37 + 56);
    *((void *)v38 + 6) = *(void *)((char *)a2 + v37 + 48);
    *((void *)v38 + 7) = v40;
    uint64_t v41 = *(void *)((char *)a2 + v37 + 72);
    *((void *)v38 + 8) = *(void *)((char *)a2 + v37 + 64);
    *((void *)v38 + 9) = v41;
    uint64_t v42 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v43 = v42[9];
    id v73 = &v39[v43];
    uint64_t v74 = &v38[v43];
    uint64_t v44 = sub_20A8C2EB0();
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(v74, v73, v44);
    uint64_t v46 = v42[10];
    id v47 = &v38[v46];
    uint64_t v48 = &v39[v46];
    uint64_t v49 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
    uint64_t v50 = v42[11];
    uint64_t v51 = &v38[v50];
    uint64_t v52 = &v39[v50];
    uint64_t v53 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
    uint64_t v54 = v75[8];
    uint64_t v55 = (char *)a1 + v54;
    uint64_t v56 = (char *)a2 + v54;
    uint64_t v57 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
    *((unsigned char *)a1 + v75[9]) = *((unsigned char *)a2 + v75[9]);
    sub_20A5016B4();
    uint64_t v59 = *(int *)(v58 + 48);
    uint64_t v60 = (char *)a1 + v59;
    uint64_t v61 = (char *)a2 + v59;
    long long v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    *((void *)v60 + 4) = *((void *)v61 + 4);
    v60[40] = v61[40];
    long long v63 = *((_OWORD *)v61 + 4);
    *((_OWORD *)v60 + 3) = *((_OWORD *)v61 + 3);
    *((_OWORD *)v60 + 4) = v63;
    long long v64 = (void *)*((void *)v61 + 10);
    *((void *)v60 + 10) = v64;
    *(_OWORD *)(v60 + 88) = *(_OWORD *)(v61 + 88);
    *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
    *(_OWORD *)(v60 + 120) = *(_OWORD *)(v61 + 120);
    *(_OWORD *)(v60 + 136) = *(_OWORD *)(v61 + 136);
    *(_OWORD *)(v60 + 152) = *(_OWORD *)(v61 + 152);
    *(_OWORD *)(v60 + 168) = *(_OWORD *)(v61 + 168);
    *(_OWORD *)(v60 + 184) = *(_OWORD *)(v61 + 184);
    *(_OWORD *)(v60 + 200) = *(_OWORD *)(v61 + 200);
    *(_OWORD *)(v60 + 232) = *(_OWORD *)(v61 + 232);
    *(_OWORD *)(v60 + 216) = *(_OWORD *)(v61 + 216);
    long long v65 = *(_OWORD *)(v61 + 248);
    *(_OWORD *)(v60 + 264) = *(_OWORD *)(v61 + 264);
    *(_OWORD *)(v60 + 248) = v65;
    v60[312] = v61[312];
    long long v66 = *(_OWORD *)(v61 + 296);
    *(_OWORD *)(v60 + 280) = *(_OWORD *)(v61 + 280);
    *(_OWORD *)(v60 + 296) = v66;
    long long v67 = (void *)*((void *)v61 + 40);
    id v68 = v64;
    if (v67 != (void *)1) {
      id v69 = v67;
    }
    id v70 = (void *)*((void *)v61 + 41);
    *((void *)v60 + 40) = v67;
    *((void *)v60 + 41) = v70;
    id v71 = v70;
    goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_20A5020D0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A503890((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockListLayoutModel);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      long long v15 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v15;
      long long v16 = *((_OWORD *)a2 + 4);
      long long v17 = *((_OWORD *)a2 + 5);
      long long v18 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v18;
      *((_OWORD *)a1 + 4) = v16;
      *((_OWORD *)a1 + 5) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockViewModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v19 = v8[6];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v23 = *((void *)v22 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        uint64_t v25 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v20, v21, v25);
        uint64_t v26 = v22[5];
        uint64_t v27 = &v20[v26];
        uint64_t v28 = &v21[v26];
        uint64_t v29 = *(void *)v28;
        v27[8] = v28[8];
        *(void *)uint64_t v27 = v29;
        uint64_t v30 = v22[6];
        uint64_t v31 = &v20[v30];
        uint64_t v32 = &v21[v30];
        LOBYTE(v29) = v32[8];
        *(void *)uint64_t v31 = *(void *)v32;
        v31[8] = v29;
        v20[v22[7]] = v21[v22[7]];
        uint64_t v33 = v22[8];
        id v34 = &v20[v33];
        uint64_t v35 = &v21[v33];
        uint64_t v36 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v37 = v8[7];
      uint64_t v82 = v8;
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = *(void *)((char *)a2 + v37);
      v38[8] = v39[8];
      *(void *)uint64_t v38 = v40;
      uint64_t v41 = *((void *)v39 + 2);
      v38[24] = v39[24];
      *((void *)v38 + 2) = v41;
      uint64_t v42 = *((void *)v39 + 4);
      v38[40] = v39[40];
      *((void *)v38 + 4) = v42;
      *((void *)v38 + 6) = *((void *)v39 + 6);
      *((void *)v38 + 7) = *((void *)v39 + 7);
      *((void *)v38 + 8) = *((void *)v39 + 8);
      *((void *)v38 + 9) = *((void *)v39 + 9);
      uint64_t v43 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v44 = v43[9];
      uint64_t v80 = &v39[v44];
      uint64_t v81 = &v38[v44];
      uint64_t v45 = sub_20A8C2EB0();
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v46(v81, v80, v45);
      uint64_t v47 = v43[10];
      uint64_t v48 = &v38[v47];
      uint64_t v49 = &v39[v47];
      uint64_t v50 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v43[11];
      uint64_t v52 = &v38[v51];
      uint64_t v53 = &v39[v51];
      uint64_t v54 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      uint64_t v55 = v82[8];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      uint64_t v58 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      *((unsigned char *)a1 + v82[9]) = *((unsigned char *)a2 + v82[9]);
      sub_20A5016B4();
      uint64_t v60 = *(int *)(v59 + 48);
      uint64_t v61 = (char *)a1 + v60;
      long long v62 = (char *)a2 + v60;
      long long v63 = *((_OWORD *)v62 + 1);
      *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v63;
      LOBYTE(v60) = v62[40];
      *((void *)v61 + 4) = *((void *)v62 + 4);
      v61[40] = v60;
      long long v64 = *((_OWORD *)v62 + 4);
      *((_OWORD *)v61 + 3) = *((_OWORD *)v62 + 3);
      *((_OWORD *)v61 + 4) = v64;
      long long v65 = (void *)*((void *)v62 + 10);
      *((void *)v61 + 10) = v65;
      long long v66 = *(_OWORD *)(v62 + 88);
      *(_OWORD *)(v61 + 104) = *(_OWORD *)(v62 + 104);
      *(_OWORD *)(v61 + 88) = v66;
      long long v67 = *(_OWORD *)(v62 + 136);
      *(_OWORD *)(v61 + 120) = *(_OWORD *)(v62 + 120);
      *(_OWORD *)(v61 + 136) = v67;
      long long v68 = *(_OWORD *)(v62 + 168);
      *(_OWORD *)(v61 + 152) = *(_OWORD *)(v62 + 152);
      *(_OWORD *)(v61 + 168) = v68;
      long long v69 = *(_OWORD *)(v62 + 200);
      *(_OWORD *)(v61 + 184) = *(_OWORD *)(v62 + 184);
      *(_OWORD *)(v61 + 200) = v69;
      long long v70 = *(_OWORD *)(v62 + 232);
      *(_OWORD *)(v61 + 216) = *(_OWORD *)(v62 + 216);
      *(_OWORD *)(v61 + 232) = v70;
      long long v71 = *(_OWORD *)(v62 + 264);
      *(_OWORD *)(v61 + 248) = *(_OWORD *)(v62 + 248);
      *(_OWORD *)(v61 + 264) = v71;
      char v72 = v62[312];
      long long v73 = *(_OWORD *)(v62 + 296);
      *(_OWORD *)(v61 + 280) = *(_OWORD *)(v62 + 280);
      *(_OWORD *)(v61 + 296) = v73;
      v61[312] = v72;
      uint64_t v74 = (void *)*((void *)v62 + 40);
      id v75 = v65;
      if (v74 != (void *)1) {
        id v76 = v74;
      }
      *((void *)v61 + 40) = v74;
      uint64_t v77 = (void *)*((void *)v62 + 41);
      *((void *)v61 + 41) = v77;
      id v78 = v77;
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for StockListLayoutModel()
{
  uint64_t result = qword_26AC72568;
  if (!qword_26AC72568) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_20A5027AC(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for StockViewModel();
    uint64_t v8 = v7[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_20A8C3E10();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v14 = v7[6];
    long long v15 = &a1[v14];
    long long v16 = &a2[v14];
    long long v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v18 = *((void *)v17 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
    {
      sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
      memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
      uint64_t v21 = v17[5];
      uint64_t v22 = &v15[v21];
      uint64_t v23 = &v16[v21];
      *(void *)uint64_t v22 = *(void *)v23;
      v22[8] = v23[8];
      uint64_t v24 = v17[6];
      uint64_t v25 = &v15[v24];
      uint64_t v26 = &v16[v24];
      *(void *)uint64_t v25 = *(void *)v26;
      v25[8] = v26[8];
      v15[v17[7]] = v16[v17[7]];
      uint64_t v27 = v17[8];
      uint64_t v28 = &v15[v27];
      uint64_t v29 = &v16[v27];
      uint64_t v30 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    }
    uint64_t v31 = v7[7];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    *(void *)uint64_t v32 = *(void *)&a2[v31];
    v32[8] = a2[v31 + 8];
    *((void *)v32 + 2) = *(void *)&a2[v31 + 16];
    v32[24] = a2[v31 + 24];
    *((void *)v32 + 4) = *(void *)&a2[v31 + 32];
    v32[40] = a2[v31 + 40];
    long long v34 = *(_OWORD *)&a2[v31 + 64];
    *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
    *((_OWORD *)v32 + 4) = v34;
    uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v36 = v35[9];
    uint64_t v37 = &v32[v36];
    uint64_t v38 = &v33[v36];
    uint64_t v39 = sub_20A8C2EB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    uint64_t v40 = v35[10];
    uint64_t v41 = &v32[v40];
    uint64_t v42 = &v33[v40];
    uint64_t v43 = sub_20A8C4030();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
    uint64_t v44 = v35[11];
    uint64_t v45 = &v32[v44];
    uint64_t v46 = &v33[v44];
    uint64_t v47 = sub_20A8C2990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
    uint64_t v48 = v7[8];
    uint64_t v49 = &a1[v48];
    uint64_t v50 = &a2[v48];
    uint64_t v51 = sub_20A8C3410();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
    a1[v7[9]] = a2[v7[9]];
    sub_20A5016B4();
    memcpy(&a1[*(int *)(v52 + 48)], &a2[*(int *)(v52 + 48)], 0x150uLL);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_20A502CB8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20A503890((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockListLayoutModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for StockViewModel();
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_20A8C3E10();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_20A501660(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      uint64_t v14 = v7[6];
      long long v15 = &a1[v14];
      long long v16 = &a2[v14];
      long long v17 = (int *)type metadata accessor for StockSparklineViewModel(0);
      uint64_t v18 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
        sub_20A501660(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = sub_20A8CDCD0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v15, v16, v20);
        uint64_t v21 = v17[5];
        uint64_t v22 = &v15[v21];
        uint64_t v23 = &v16[v21];
        *(void *)uint64_t v22 = *(void *)v23;
        v22[8] = v23[8];
        uint64_t v24 = v17[6];
        uint64_t v25 = &v15[v24];
        uint64_t v26 = &v16[v24];
        *(void *)uint64_t v25 = *(void *)v26;
        v25[8] = v26[8];
        v15[v17[7]] = v16[v17[7]];
        uint64_t v27 = v17[8];
        uint64_t v28 = &v15[v27];
        uint64_t v29 = &v16[v27];
        uint64_t v30 = sub_20A8C3D00();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
      }
      uint64_t v31 = v7[7];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      *(void *)uint64_t v32 = *(void *)&a2[v31];
      v32[8] = a2[v31 + 8];
      *((void *)v32 + 2) = *(void *)&a2[v31 + 16];
      v32[24] = a2[v31 + 24];
      *((void *)v32 + 4) = *(void *)&a2[v31 + 32];
      v32[40] = a2[v31 + 40];
      long long v34 = *(_OWORD *)&a2[v31 + 64];
      *((_OWORD *)v32 + 3) = *(_OWORD *)&a2[v31 + 48];
      *((_OWORD *)v32 + 4) = v34;
      uint64_t v35 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v36 = v35[9];
      uint64_t v37 = &v32[v36];
      uint64_t v38 = &v33[v36];
      uint64_t v39 = sub_20A8C2EB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      uint64_t v40 = v35[10];
      uint64_t v41 = &v32[v40];
      uint64_t v42 = &v33[v40];
      uint64_t v43 = sub_20A8C4030();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      uint64_t v44 = v35[11];
      uint64_t v45 = &v32[v44];
      uint64_t v46 = &v33[v44];
      uint64_t v47 = sub_20A8C2990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      uint64_t v48 = v7[8];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = &a2[v48];
      uint64_t v51 = sub_20A8C3410();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
      a1[v7[9]] = a2[v7[9]];
      sub_20A5016B4();
      memcpy(&a1[*(int *)(v52 + 48)], &a2[*(int *)(v52 + 48)], 0x150uLL);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20A5031E8()
{
  uint64_t result = type metadata accessor for StockViewModel();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v2;
    unint64_t v4 = &unk_20A8DAA40;
    uint64_t v5 = &unk_20A8DAA58;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

double sub_20A503298()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x270FA5388](v2);
  unint64_t v4 = (double *)((char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A5037E8(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      double v6 = v4[4];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return *v4;
    }
  }
  else
  {
    sub_20A5016B4();
    memcpy(v9, (char *)v4 + *(int *)(v7 + 48), sizeof(v9));
    sub_20A50384C((uint64_t)v9);
    double v6 = *(double *)v9;
    sub_20A503890((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  }
  return v6;
}

uint64_t sub_20A5033DC()
{
  sub_20A5038F0(&qword_26AC72560);

  return sub_20A8CACE0();
}

uint64_t sub_20A503434()
{
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5037E8(v3, (uint64_t)v2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_20A503890((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StockListLayoutModel);
    }
    return 0;
  }
  else
  {
    sub_20A5016B4();
    memcpy(v8, &v2[*(int *)(v6 + 48)], sizeof(v8));
    sub_20A50384C((uint64_t)v8);
    uint64_t v5 = v8[4];
    sub_20A503890((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  }
  return v5;
}

uint64_t sub_20A50354C()
{
  return sub_20A5038F0((unint64_t *)&unk_26AC72550);
}

id sub_20A503580()
{
  id v0 = objc_msgSend(self, sel_clearColor);

  return v0;
}

uint64_t sub_20A5035C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A5037E8(v2, (uint64_t)v9);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1) {
      sub_20A503890((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockListLayoutModel);
    }
    uint64_t v11 = sub_20A8C3F00();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_20A5016B4();
    memcpy(v16, &v9[*(int *)(v13 + 48)], sizeof(v16));
    sub_20A50384C((uint64_t)v16);
    sub_20A4C8874((uint64_t)v9, (uint64_t)v6);
    uint64_t v14 = sub_20A8C3F00();
    uint64_t v15 = *(void *)(v14 - 8);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v15 + 16))(a1, v6, v14);
    sub_20A503890((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
  }
}

uint64_t sub_20A5037E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListLayoutModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A50384C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 320);
  uint64_t v3 = *(void **)(a1 + 328);

  sub_20A458E2C(v2);
  return a1;
}

uint64_t sub_20A503890(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5038F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockListLayoutModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A503934(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for ManageWatchlistsContentMode(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v34 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = sub_20A8C7770();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v10 + 104))(v13, *MEMORY[0x263F7A6B8], v9, v11);
  uint64_t v14 = sub_20A8C4890();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v15 = (objc_class *)type metadata accessor for ManageWatchlistsViewController();
  sub_20A47F8B0(a1, (uint64_t)v8);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_20A47F01C((uint64_t)v8, v17 + v16);
  *(void *)(v17 + ((v5 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  swift_retain();
  uint64_t v18 = (void *)sub_20A8C5B80();
  uint64_t result = swift_release();
  if (v18)
  {
    uint64_t v20 = v34;
    sub_20A47F8B0(a1, v34);
    sub_20A453638();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21) == 1)
    {
      v35.receiver = v18;
      v35.super_class = v15;
      objc_msgSendSuper2(&v35, sel_setEditing_animated_, 1, 0);
      sub_20A8C9BE0();
      sub_20A8C9BF0();
      uint64_t v22 = (void *)sub_20A8C94C0();
      swift_release();
      objc_msgSend(v22, sel_setDragInteractionEnabled_, 0);

      sub_20A8C9BF0();
      uint64_t v23 = (void *)sub_20A8C94C0();
      swift_release();
      objc_msgSend(v23, sel_setAllowsMultipleSelection_, 0);

      id v24 = objc_msgSend(v18, sel_navigationItem);
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v26 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      sub_20A8C2370();

      uint64_t v27 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setTitle_, v27);

      swift_release();
    }
    else
    {
      id v28 = objc_msgSend(v18, sel_navigationItem);
      type metadata accessor for Localized();
      uint64_t v29 = swift_getObjCClassFromMetadata();
      id v30 = objc_msgSend(self, sel_bundleForClass_, v29);
      sub_20A8C2370();

      uint64_t v31 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setTitle_, v31);

      swift_release();
      uint64_t v32 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v20, v32);
    }
    return (uint64_t)v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A503EA8(void *a1)
{
  return sub_20A8C5A40();
}

uint64_t type metadata accessor for ManageWatchlistsModule()
{
  return self;
}

uint64_t sub_20A503F6C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ManageWatchlistsContentMode(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_20A453638();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    uint64_t v4 = sub_20A8C3F00();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A5040A0(void *a1)
{
  type metadata accessor for ManageWatchlistsContentMode(0);

  return sub_20A503EA8(a1);
}

void sub_20A50413C()
{
  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_20A8C3F00();
    if (v1 <= 0x3F)
    {
      sub_20A504F74(319);
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_20A5042B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4 = 0;
  return (*(uint64_t (**)(uint64_t, void, char *, uint64_t, uint64_t))(a3 + 88))(a1, 0, &v4, a2, a3);
}

uint64_t sub_20A5042F4@<X0>(uint64_t a1@<X8>)
{
  sub_20A504F74(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v14[-v7];
  uint64_t v9 = (uint64_t)v1 + *(void *)(*v1 + 224);
  swift_beginAccess();
  sub_20A50BB60(v9, (uint64_t)v8, (uint64_t (*)(void))sub_20A504F74);
  sub_20A42D040(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1) {
    return sub_20A50C270((uint64_t)v8, a1, (uint64_t (*)(void))sub_20A42D040);
  }
  sub_20A50CA20((uint64_t)v8, (uint64_t (*)(void))sub_20A504F74);
  sub_20A50473C(v1, &qword_267639C70, (uint64_t)&qword_26763E0B0, (uint64_t)sub_20A7CA4CC, a1);
  sub_20A50BB60(a1, (uint64_t)v5, (uint64_t (*)(void))sub_20A42D040);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  swift_beginAccess();
  sub_20A50C20C((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_20A504518@<X0>(uint64_t a1@<X8>)
{
  sub_20A504F74(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v14[-v7];
  uint64_t v9 = (uint64_t)v1 + *(void *)(*v1 + 232);
  swift_beginAccess();
  sub_20A50BB60(v9, (uint64_t)v8, (uint64_t (*)(void))sub_20A504F74);
  sub_20A42D040(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v10) != 1) {
    return sub_20A50C270((uint64_t)v8, a1, (uint64_t (*)(void))sub_20A42D040);
  }
  sub_20A50CA20((uint64_t)v8, (uint64_t (*)(void))sub_20A504F74);
  sub_20A50473C(v1, &qword_267639C78, (uint64_t)&qword_26763E0B8, (uint64_t)sub_20A7CA514, a1);
  sub_20A50BB60(a1, (uint64_t)v5, (uint64_t (*)(void))sub_20A42D040);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
  swift_beginAccess();
  sub_20A50C20C((uint64_t)v5, v9);
  return swift_endAccess();
}

uint64_t sub_20A50473C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v27[1] = a4;
  v27[2] = a3;
  uint64_t v31 = a5;
  uint64_t v29 = *a1;
  uint64_t v6 = sub_20A8C2800();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_20A8C2A80();
  uint64_t v9 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A50C9CC(0, (unint64_t *)&unk_26AC68D30, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v27 - v13;
  sub_20A50C9CC(0, (unint64_t *)&unk_26AC68D10, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v30 = sub_20A8C22A0();
  uint64_t v18 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC691E0 != -1) {
    swift_once();
  }
  if (sub_20A8C4200())
  {
    if (*a2 != -1) {
      swift_once();
    }
    swift_getWitnessTable();
    sub_20A8C41C0();
    uint64_t v21 = v28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v28);
    uint64_t v22 = sub_20A8C2AF0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 1, 1, v22);
    sub_20A8C2290();
    sub_20A8C2240();
    sub_20A8C2A40();
    sub_20A8C27F0();
    sub_20A8C2A20();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v30);
  }
  else
  {
    uint64_t v24 = v31;
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    uint64_t v26 = v33;
    return v25(v24, 1, 1, v26);
  }
}

uint64_t *sub_20A504C34()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 128));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24))(v0, &off_26BE630F8, v4, v5);
  sub_20A4380C4((uint64_t)(v0 + 2));
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))((uint64_t)v1 + *(void *)(*v1 + 112));
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_release();
  swift_release();
  uint64_t v6 = (uint64_t)v1 + *(void *)(*v1 + 152);
  uint64_t v7 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1 + *(void *)(*v1 + 192));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20A50CA20((uint64_t)v1 + *(void *)(*v1 + 224), (uint64_t (*)(void))sub_20A504F74);
  sub_20A50CA20((uint64_t)v1 + *(void *)(*v1 + 232), (uint64_t (*)(void))sub_20A504F74);
  return v1;
}

uint64_t sub_20A504F04()
{
  sub_20A504C34();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedInteractor()
{
  return __swift_instantiateGenericMetadata();
}

void sub_20A504F74(uint64_t a1)
{
}

uint64_t sub_20A504F94()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v36 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (uint64_t)&v32 - v6;
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C3410();
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9430();
  uint64_t v12 = *(void *)((char *)v1 + *(void *)(*v1 + 120));
  sub_20A556D10(v40);
  __swift_project_boxed_opaque_existential_1(v40, v40[3]);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = *(void *)(v2 + 80);
  v14[2] = v15;
  uint64_t v16 = *(void *)(v2 + 88);
  v14[3] = v16;
  v14[4] = v13;
  sub_20A8CBEC0();
  swift_release();
  swift_beginAccess();
  sub_20A8CBE50();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_project_boxed_opaque_existential_1((void *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(void *)(v12 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
  sub_20A8C3600();
  uint64_t v17 = v39;
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  uint64_t v18 = v35;
  sub_20A5042F4(v35);
  uint64_t v19 = v36;
  sub_20A504518(v36);
  uint64_t v20 = v17;
  uint64_t v21 = v19;
  uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 40))(v20, v18, v19, v15, v16);
  sub_20A50CA20(v21, (uint64_t (*)(void))sub_20A42D040);
  sub_20A50CA20(v18, (uint64_t (*)(void))sub_20A42D040);
  v40[0] = v22;
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v15;
  v24[3] = v16;
  v24[4] = v23;
  uint64_t v25 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v25);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  uint64_t v26 = *(void *)((char *)v1 + *(void *)(*v1 + 160));
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  uint64_t v28 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)v28 + 2) = v15;
  *((void *)v28 + 3) = v16;
  *((void *)v28 + 4) = v27;
  uint64_t v29 = (uint64_t (**)(uint64_t))(v26 + qword_26763B920);
  uint64_t v30 = *(void *)(v26 + qword_26763B920);
  *uint64_t v29 = sub_20A50C020;
  v29[1] = v28;
  sub_20A459CA4(v30);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v39, v38);
}

void sub_20A5054F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_20A8C3410();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong;
    sub_20A50576C(a1);
    uint64_t v19 = a3;
    sub_20A8C2EF0();
    sub_20A8C6670();
    swift_retain();
    uint64_t v18 = a4;
    uint64_t v12 = (void *)sub_20A8C6450();
    sub_20A42C470(0);
    sub_20A8C6500();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = (char *)swift_allocObject();
    uint64_t v15 = v18;
    *((void *)v14 + 2) = v19;
    *((void *)v14 + 3) = v15;
    *((void *)v14 + 4) = v11;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v14[v13], (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    swift_retain();
    uint64_t v16 = (void *)sub_20A8C6450();
    sub_20A50C45C();
    sub_20A8C6500();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_20A50576C(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 72))(a1, *(void *)(*(void *)v1 + 80));
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v2);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A505880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, BOOL *a4@<X8>)
{
  uint64_t result = MEMORY[0x2105289B0](a2 + 16);
  uint64_t v8 = result;
  if (result)
  {
    type metadata accessor for StockFeedInteractor();
    sub_20A85579C(a1, a3, v8);
    uint64_t result = swift_unknownObjectRelease();
  }
  *a4 = v8 == 0;
  return result;
}

void sub_20A505934(uint64_t a1)
{
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v26 - v5;
  uint64_t v7 = sub_20A8C9B80();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (void **)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    uint64_t v26 = v6;
    uint64_t v27 = v4;
    uint64_t v28 = v3;
    uint64_t v13 = *(void *)(*(void *)Strong + 120);
    uint64_t v29 = a1;
    uint64_t v14 = *(void *)(Strong + v13);
    uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataRefreshManager + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = v14 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock;
    uint64_t v30 = v12;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
    swift_unknownObjectRetain();
    v18(v17, ObjectType, v15);
    __swift_project_boxed_opaque_existential_1((void *)(v14 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager), *(void *)(v14 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager + 24));
    sub_20A50B5B0(&qword_26AC67CC8, (void (*)(uint64_t))type metadata accessor for StockFeedDataManager);
    sub_20A8C39C0();
    __swift_project_boxed_opaque_existential_1((void *)(v14 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(void *)(v14 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
    sub_20A50B5B0(&qword_26AC71FB0, (void (*)(uint64_t))type metadata accessor for StockFeedDataManager);
    sub_20A8C3670();
    swift_unknownObjectRelease();
    (*(void (**)(void **, uint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
    int v19 = (*(uint64_t (**)(void **, uint64_t))(v8 + 88))(v10, v7);
    if (v19 == *MEMORY[0x263F7D960])
    {
      (*(void (**)(void **, uint64_t))(v8 + 96))(v10, v7);
      uint64_t v20 = *v10;
      swift_retain();
      id v21 = v20;
      sub_20A8C9430();
      swift_release();
      swift_release();
    }
    else if (v19 == *MEMORY[0x263F7D958])
    {
      swift_retain();
      sub_20A8C8BE0();
      uint64_t v31 = v32;
      uint64_t v22 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
      sub_20A50BE50(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
      sub_20A50B5F8((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v22);
      uint64_t v23 = v26;
      sub_20A8C9490();
      swift_release();
      type metadata accessor for StockFeedSectionDescriptor();
      type metadata accessor for StockFeedModel();
      sub_20A50B5B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
      sub_20A50B5B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C9400();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v28);
      sub_20A8C9430();
      swift_release();
      swift_release();
    }
    else if (v19 == *MEMORY[0x263F7D968])
    {
      swift_retain();
      sub_20A8C8BE0();
      uint64_t v31 = v32;
      uint64_t v24 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
      sub_20A50BE50(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
      sub_20A50B5F8((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v24);
      uint64_t v25 = v26;
      sub_20A8C9490();
      swift_release();
      type metadata accessor for StockFeedSectionDescriptor();
      type metadata accessor for StockFeedModel();
      sub_20A50B5B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
      sub_20A50B5B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C9400();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v28);
      sub_20A8C9430();
      swift_release();
      sub_20A506008(0);
      swift_release();
    }
    else
    {
      swift_release();
      (*(void (**)(void **, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_20A506008(char a1)
{
  type metadata accessor for StockFeedQuoteData();
  sub_20A8C6670();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v2 = (void *)sub_20A8CEBE0();
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_20A8C6520();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_20A506134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_20A50C02C();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A50BB60(a1, (uint64_t)v9, (uint64_t (*)(void))sub_20A50C02C);
    sub_20A50C150();
    uint64_t v12 = v11;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11) == 1)
    {
      uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
      uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
      sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
      sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v13);
      sub_20A8C8C00();
      swift_release();
      return swift_release();
    }
    else
    {
      swift_release();
      uint64_t v14 = &v9[*(int *)(v12 + 48)];
      uint64_t v15 = sub_20A8CD2C0();
      uint64_t v16 = *(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8);
      v16(v14, v15);
      return ((uint64_t (*)(char *, uint64_t))v16)(v9, v15);
    }
  }
  return result;
}

uint64_t sub_20A506370()
{
  uint64_t v1 = *v0;
  uint64_t v2 = MEMORY[0x2105289B0](v0 + 2);
  if (v2)
  {
    uint64_t v3 = MEMORY[0x2105289B0](v2 + 16);
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      *(void *)(swift_allocObject() + 16) = v3;
      id v5 = v4;
      sub_20A8C66A0();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v8 = v1 + 80;
  uint64_t v7 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v8 + 8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 48))(v7, v6);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v6;
  v10[4] = v9;
  uint64_t v11 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v11);
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20A506588()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = MEMORY[0x2105289B0](result + 16);
    if (v1)
    {
      uint64_t v2 = MEMORY[0x2105289B0](v1 + 16);
      if (v2)
      {
        *(void *)(swift_allocObject() + 16) = v2;
        swift_retain();
        swift_unknownObjectRetain();
        sub_20A8C66A0();
        swift_release_n();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return swift_release();
      }
      else
      {
        swift_release();
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A506688(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 112))(a1, *(void *)(*(void *)v1 + 80));
  uint64_t v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v2);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A50679C(void *a1)
{
  v41[1] = *v1;
  uint64_t v44 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA48(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v8 = v7;
  uint64_t v47 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v45 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v41 - v13;
  uint64_t v42 = v1;
  sub_20A8C8BE0();
  uint64_t v49 = *(void *)&v48[0];
  uint64_t v15 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
  uint64_t v16 = v15;
  uint64_t v17 = v14;
  sub_20A50B5F8((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v16);
  sub_20A8C9490();
  uint64_t v18 = v8;
  uint64_t v19 = v47;
  swift_release();
  uint64_t v20 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_20A8C5B30();
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return sub_20A50CA20((uint64_t)v6, (uint64_t (*)(void))sub_20A42DA48);
  }
  else
  {
    uint64_t v22 = v12;
    uint64_t v23 = v45;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v45, v6, v18);
    uint64_t v24 = (uint64_t)v43;
    sub_20A8C8330();
    uint64_t v25 = v24;
    uint64_t v26 = v17;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        goto LABEL_7;
      case 3u:
        sub_20A42C53C();
        uint64_t v29 = v24 + *(int *)(v28 + 48);
        sub_20A50CA20(v25 + *(int *)(v28 + 64), (uint64_t (*)(void))sub_20A42C43C);
        sub_20A50CA20(v29, (uint64_t (*)(void))sub_20A42C470);
LABEL_7:
        uint64_t v30 = sub_20A8C3F00();
        goto LABEL_12;
      case 4u:
        uint64_t v27 = type metadata accessor for StockEarningsModel;
        goto LABEL_9;
      case 5u:
      case 6u:
      case 9u:
        uint64_t v27 = type metadata accessor for StockFeedModel;
        goto LABEL_9;
      case 7u:
        uint64_t v31 = *(char **)(v24 + 16);
        uint64_t v43 = v31;
        uint64_t v32 = swift_bridgeObjectRelease();
        MEMORY[0x270FA5388](v32);
        uint64_t v33 = v46;
        v41[-4] = v42;
        v41[-3] = v33;
        v41[-2] = v31;
        sub_20A8C6670();
        v41[0] = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
        uint64_t v34 = sub_20A8CEBE0();
        uint64_t v44 = v18;
        uint64_t v35 = (void *)v34;
        sub_20A4342F4((uint64_t)v33, (uint64_t)v48);
        uint64_t v36 = swift_allocObject();
        sub_20A42BEBC(v48, v36 + 16);
        sub_20A8C6520();
        swift_release();

        swift_release();
        uint64_t v37 = (void *)sub_20A8CEBE0();
        sub_20A4342F4((uint64_t)v46, (uint64_t)v48);
        uint64_t v38 = swift_allocObject();
        sub_20A42BEBC(v48, v38 + 16);
        *(void *)(v38 + 56) = v43;
        swift_retain();
        sub_20A8C6560();
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v45, v44);
        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v26, v11);
      case 8u:
        sub_20A50BD34(0, (unint64_t *)&qword_26AC81910, MEMORY[0x263F59BC0]);
        swift_release();
        uint64_t v30 = sub_20A8CD2C0();
LABEL_12:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v25, v30);
        break;
      case 0xAu:
        break;
      default:
        uint64_t v27 = type metadata accessor for StockFeedMastheadModel;
LABEL_9:
        sub_20A50CA20(v24, (uint64_t (*)(void))v27);
        break;
    }
    uint64_t v39 = v46[3];
    uint64_t v40 = v46[4];
    __swift_project_boxed_opaque_existential_1(v46, v39);
    MEMORY[0x210522FB0](0, v39, v40);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v26, v11);
  }
}

uint64_t sub_20A506EB4(uint64_t a1, void *a2, uint64_t a3)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v4 = sub_20A8C5B30();
  uint64_t v6 = sub_20A559260(v4, v5, a3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20A506F44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = a1[2];
  uint64_t v12 = (*(uint64_t (**)(void, uint64_t, uint64_t, void))(*(void *)(*(void *)a2 + 88) + 64))(*a1, v5, v7, *(void *)(*(void *)a2 + 80));
  sub_20A4342F4(a3, (uint64_t)v11);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v6;
  v8[3] = v5;
  void v8[4] = v7;
  v8[5] = a2;
  sub_20A42BEBC(v11, (uint64_t)(v8 + 6));
  uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_20A8C8C00();
  swift_release();
  return swift_release();
}

uint64_t sub_20A5070F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9 = sub_20A8C9B80();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v11);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
  if (v14 == *MEMORY[0x263F7D960])
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_4:
    uint64_t v15 = a6[3];
    uint64_t v16 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v15);
    uint64_t v17 = 0;
    return MEMORY[0x210522FB0](v17, v15, v16);
  }
  if (v14 == *MEMORY[0x263F7D958]) {
    goto LABEL_4;
  }
  if (v14 == *MEMORY[0x263F7D968])
  {
    type metadata accessor for StockFeedServiceConfig();
    sub_20A50B5B0(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
    if ((sub_20A8CCB80() & 1) != 0 && (sub_20A50738C() & 1) == 0)
    {
      uint64_t v18 = MEMORY[0x2105289B0](a5 + 16);
      if (v18)
      {
        __swift_project_boxed_opaque_existential_1((void *)(v18 + 88), *(void *)(v18 + 112));
        uint64_t v19 = (void (__cdecl *)())off_26BE70738;
        type metadata accessor for StockFeedTracker();
        v19();
        swift_unknownObjectRelease();
      }
    }
    uint64_t v15 = a6[3];
    uint64_t v16 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v15);
    uint64_t v17 = 1;
    return MEMORY[0x210522FB0](v17, v15, v16);
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A50738C()
{
  uint64_t v42 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v42);
  uint64_t v1 = (char *)&v34 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v3 = v2;
  uint64_t v36 = *(void (***)(char *, uint64_t))(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v43 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v41 = (char *)&v34 - v6;
  sub_20A42C388(0);
  uint64_t v44 = (char *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v34 - v16;
  sub_20A8C8BE0();
  v45[0] = v45[4];
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
  uint64_t v40 = v19;
  sub_20A50B5F8((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v18);
  sub_20A8C9490();
  swift_release();
  uint64_t v34 = v17;
  uint64_t v35 = v12;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v39 = v12 + 16;
  v38(v14, v17, v11);
  uint64_t v20 = v37;
  sub_20A50B5F8((unint64_t *)&unk_26AC6ACA0, (unint64_t *)&qword_26AC6ACC0, v37);
  uint64_t v40 = v14;
  sub_20A8CE4B0();
  uint64_t v21 = &v9[*((int *)v44 + 11)];
  sub_20A50B5F8((unint64_t *)&unk_26AC6ACB0, (unint64_t *)&qword_26AC6ACC0, v20);
  uint64_t v22 = *(void *)v21;
  uint64_t v44 = v9;
  sub_20A8CE8A0();
  if (v22 == v45[0])
  {
LABEL_5:
    sub_20A50CA20((uint64_t)v44, (uint64_t (*)(void))sub_20A42C388);
    uint64_t v31 = 0;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v11);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v36 + 4);
    ++v36;
    uint64_t v37 = (uint64_t (*)(uint64_t, void *))(v35 + 8);
    uint64_t v25 = v41;
    while (1)
    {
      uint64_t v26 = (uint64_t)v44;
      uint64_t v27 = (void (*)(void *, void))sub_20A8CE8C0();
      (*v23)(v25);
      v27(v45, 0);
      uint64_t v28 = v40;
      v38(v40, (char *)v26, v11);
      sub_20A8CE8B0();
      uint64_t v29 = *(void (**)(char *, uint64_t))v37;
      (*(void (**)(char *, uint64_t))v37)(v28, v11);
      (*v24)(v43, v25, v3);
      sub_20A8C8820();
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      sub_20A50CA20((uint64_t)v1, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      (*v36)(v43, v3);
      uint64_t v30 = *(void *)v21;
      sub_20A8CE8A0();
      if (v30 == v45[0]) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_20A42C980();
    sub_20A50CA20((uint64_t)&v1[*(int *)(v32 + 64)], (uint64_t (*)(void))sub_20A42C764);
    (*v36)(v43, v3);
    sub_20A50CA20((uint64_t)v44, (uint64_t (*)(void))sub_20A42C388);
    uint64_t v31 = 1;
    v29(v34, v11);
  }
  return v31;
}

uint64_t sub_20A50793C(void *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_20A8C5B30();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v5 + 88);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 96);
  uint64_t v11 = *(void *)(v5 + 80);
  swift_retain();
  uint64_t v17 = v10(v6, v8, a2, v11, v9);
  sub_20A4342F4((uint64_t)a1, (uint64_t)v16);
  uint64_t v12 = swift_allocObject();
  sub_20A42BEBC(v16, v12 + 16);
  uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v13);
  sub_20A8C8C00();
  swift_release();
  uint64_t v14 = MEMORY[0x2105289B0](v2 + 2);
  if (v14)
  {
    sub_20A85580C(v14);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_20A507B64()
{
  uint64_t v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 128));
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v6 + 16))(v0, &off_26BE630F8, v5, v6);
  uint64_t v7 = *v0;
  sub_20A50BD34(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
  uint64_t v9 = *(int *)(v8 + 48);
  uint64_t v10 = (uint64_t)v0 + *(void *)(v7 + 152);
  uint64_t v11 = sub_20A8C3F00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v3, v10, v11);
  *(void *)&v3[v9] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_20A8C92D0();
  return sub_20A50CA20((uint64_t)v3, type metadata accessor for StocksActivity);
}

uint64_t sub_20A507D2C()
{
  uint64_t v1 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)((char *)v0 + *(void *)(*v0 + 128));
  uint64_t v5 = v4[3];
  uint64_t v6 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t *, _UNKNOWN **, uint64_t, uint64_t))(v6 + 24))(v0, &off_26BE630F8, v5, v6);
  uint64_t v7 = *v0;
  sub_20A50BD34(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
  uint64_t v9 = *(int *)(v8 + 48);
  uint64_t v10 = (uint64_t)v0 + *(void *)(v7 + 152);
  uint64_t v11 = sub_20A8C3F00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v3, v10, v11);
  *(void *)&v3[v9] = 0;
  type metadata accessor for StocksActivity.StockFeed(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_20A8C92C0();
  return sub_20A50CA20((uint64_t)v3, type metadata accessor for StocksActivity);
}

uint64_t sub_20A507EF4(uint64_t a1, int a2, unsigned __int8 *a3)
{
  sub_20A50BC30(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (id *)&v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for StockFeedRouteModel();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned __int8 v14 = *a3;
  unsigned __int8 v21 = v14;
  sub_20A5080F8(a1, a2, &v21, v9);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t v15 = (uint64_t (*)(void))sub_20A50BC30;
    uint64_t v16 = (uint64_t)v9;
  }
  else
  {
    sub_20A50C270((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockFeedRouteModel);
    uint64_t v17 = (void *)MEMORY[0x2105289B0](v3 + 16);
    if (v17)
    {
      unsigned __int8 v20 = v14;
      sub_20A85589C((uint64_t)v13, &v20, v17);
      swift_unknownObjectRelease();
    }
    uint64_t v15 = (uint64_t (*)(void))type metadata accessor for StockFeedRouteModel;
    uint64_t v16 = (uint64_t)v13;
  }
  return sub_20A50CA20(v16, v15);
}

uint64_t sub_20A5080F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned __int8 *a3@<X2>, id *a4@<X8>)
{
  uint64_t v5 = v4;
  int v96 = a2;
  uint64_t v109 = a4;
  uint64_t v107 = *v5;
  uint64_t v8 = sub_20A8C5390();
  uint64_t v100 = *(void *)(v8 - 8);
  uint64_t v101 = v8;
  MEMORY[0x270FA5388](v8);
  double v95 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (char *)&v85 - v11;
  uint64_t v91 = sub_20A8C5920();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v98 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C2530();
  uint64_t v102 = *(void *)(v13 - 8);
  uint64_t v103 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v92 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v88 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v85 - v18;
  uint64_t v20 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v99 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8C4020();
  uint64_t v105 = *(void *)(v22 - 8);
  uint64_t v106 = v22;
  MEMORY[0x270FA5388](v22);
  unint64_t v93 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v94 = (char *)&v85 - v25;
  MEMORY[0x270FA5388](v26);
  uint64_t v108 = (id *)((char *)&v85 - v27);
  sub_20A430224();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v85 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v85 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)&v85 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v97 = *a3;
  sub_20A42C4A4();
  uint64_t v104 = a1;
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    uint64_t v62 = type metadata accessor for StockFeedRouteModel();
    (*(void (**)(id *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v109, 1, 1, v62);
    return sub_20A50CA20((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, v38, v32);
  uint64_t v39 = MEMORY[0x2105289B0](v5 + 2);
  if (v39)
  {
    sub_20A854DD4(v39);
    swift_unknownObjectRelease();
  }
  sub_20A8CD380();
  uint64_t v40 = sub_20A8CD2C0();
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v30, 1, v40);
  sub_20A50CA20((uint64_t)v30, (uint64_t (*)(void))sub_20A430224);
  if (v41 != 1)
  {
    uint64_t v42 = MEMORY[0x2105289B0](v5 + 2);
    if (v42)
    {
      sub_20A855028(v104, v42);
      swift_unknownObjectRelease();
    }
  }
  uint64_t v43 = v108;
  sub_20A8CCF50();
  uint64_t v45 = v105;
  uint64_t v44 = v106;
  int v46 = (*(uint64_t (**)(id *, uint64_t))(v105 + 88))(v43, v106);
  if (v46 != *MEMORY[0x263F7AF48])
  {
    if (v46 == *MEMORY[0x263F7AF38])
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
      (*(void (**)(id *, uint64_t))(v45 + 96))(v43, v44);
      long long v64 = v109;
      *uint64_t v109 = *v43;
      type metadata accessor for StocksActivity.Article(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = type metadata accessor for StockFeedRouteModel();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(id *, void, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 0, 1, v65);
    }
    goto LABEL_22;
  }
  uint64_t v85 = v35;
  uint64_t v86 = v33;
  (*(void (**)(id *, uint64_t))(v45 + 96))(v43, v44);
  id v47 = objc_msgSend(*v43, sel_routeURL);
  uint64_t v87 = v32;
  if (!v47)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v19, 1, 1, v103);
    goto LABEL_15;
  }
  uint64_t v48 = v47;
  uint64_t v49 = v92;
  sub_20A8C24E0();

  uint64_t v50 = v102;
  uint64_t v51 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v19, v49, v103);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56);
  v52(v19, 0, 1, v51);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v19, 1, v51) == 1)
  {
LABEL_15:
    sub_20A50CA20((uint64_t)v19, (uint64_t (*)(void))sub_20A4845D0);
    sub_20A8C55D0();
    swift_allocObject();
    uint64_t v66 = sub_20A8C55C0();
    uint64_t v67 = *(void *)(*v5 + 184);
    *(uint64_t *)((char *)v5 + v67) = v66;
    swift_release();
    uint64_t v68 = *(uint64_t *)((char *)v5 + *(void *)(*v5 + 136));
    swift_retain();
    sub_20A8C82F0();
    if (*(uint64_t *)((char *)v5 + v67))
    {
      uint64_t v110 = v68;
      sub_20A50B934();
      uint64_t v70 = v69;
      swift_allocObject();
      swift_retain();
      uint64_t v103 = sub_20A8C4A40();
      sub_20A8C82F0();
      swift_unknownObjectRetain();
      long long v71 = v94;
      uint64_t v61 = v85;
      sub_20A8CCF50();
      uint64_t v73 = v105;
      uint64_t v72 = v106;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v93, v71, v106);
      sub_20A8CF7B0();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v71, v72);
      sub_20A8C58D0();
      uint64_t v111 = v70;
      uint64_t v112 = sub_20A50B5B0((unint64_t *)&unk_26AC82E28, (void (*)(uint64_t))sub_20A50B934);
      uint64_t v110 = v103;
      uint64_t v60 = v107;
      swift_getWitnessTable();
      sub_20A8C5590();
      swift_allocObject();
      swift_retain();
      swift_retain();
      sub_20A8C5580();
      uint64_t v75 = v100;
      uint64_t v74 = v101;
      id v76 = (unsigned int *)MEMORY[0x263F58CD0];
      if ((v96 & 1) == 0) {
        id v76 = (unsigned int *)MEMORY[0x263F58CD8];
      }
      uint64_t v77 = v95;
      (*(void (**)(char *, void, uint64_t))(v100 + 104))(v95, *v76, v101);
      uint64_t v58 = (uint64_t)v99;
      sub_20A8C4D90();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v74);
      uint64_t v59 = (uint64_t)v109;
      goto LABEL_19;
    }
    __break(1u);
LABEL_22:
    uint64_t result = sub_20A8CF750();
    __break(1u);
    return result;
  }
  sub_20A50CA20((uint64_t)v19, (uint64_t (*)(void))sub_20A4845D0);
  swift_unknownObjectRetain();
  uint64_t v53 = v98;
  sub_20A8C58F0();
  uint64_t v54 = (uint64_t)v88;
  v52(v88, 1, 1, v51);
  uint64_t v56 = v100;
  uint64_t v55 = v101;
  uint64_t v57 = v89;
  (*(void (**)(char *, void, uint64_t))(v100 + 104))(v89, *MEMORY[0x263F58CD8], v101);
  uint64_t v58 = (uint64_t)v99;
  sub_20A8C4D60();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v55);
  sub_20A50CA20(v54, (uint64_t (*)(void))sub_20A4845D0);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v53, v91);
  uint64_t v59 = (uint64_t)v109;
  uint64_t v60 = v107;
  uint64_t v61 = v85;
LABEL_19:
  sub_20A50BB60(v58, v59, MEMORY[0x263F58AA8]);
  uint64_t v78 = 2 * (v97 != 0);
  sub_20A45494C();
  uint64_t v80 = (char *)v108 + *(int *)(v79 + 48);
  sub_20A42FC8C();
  uint64_t v82 = (void *)(v59 + *(int *)(v81 + 64));
  *(void *)(v59 + *(int *)(v81 + 48)) = v78;
  v82[3] = v60;
  v82[4] = &off_26BE63120;
  swift_retain();
  swift_unknownObjectRelease();
  void *v82 = v5;
  sub_20A50CA20(v58, MEMORY[0x263F58AA8]);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v87);
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v83 = type metadata accessor for StockFeedRouteModel();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v59, 0, 1, v83);
  uint64_t v84 = sub_20A8C33A0();
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v84 - 8) + 8))(v80, v84);
}

void sub_20A508E68(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for StockEarningsModel();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = sub_20A8C7150();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F04B98]), sel_init);
  uint64_t v11 = (char *)objc_msgSend(self, sel_authorizationStatusForEntityType_, 0);
  if ((unint64_t)(v11 - 1) < 2)
  {
    uint64_t v14 = MEMORY[0x2105289B0](v1 + 2);
    if (v14)
    {
      uint64_t v15 = v14;
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7A0E0], v7);
      sub_20A855EB8((uint64_t)v10, a1, v15);
      swift_unknownObjectRelease();

      goto LABEL_7;
    }
  }
  else if ((unint64_t)(v11 - 3) >= 2)
  {
    if (!v11)
    {
      sub_20A50BB60(a1, (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
      unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = *(void *)(v3 + 80);
      v17[3] = *(void *)(v3 + 88);
      v17[4] = v1;
      sub_20A50C270((uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v17 + v16, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
      aBlock[4] = sub_20A50B640;
      aBlock[5] = v17;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A50957C;
      aBlock[3] = &block_descriptor_9;
      uint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v21, sel_requestWriteOnlyAccessToEventsWithCompletion_, v18);

      _Block_release(v18);
      return;
    }
  }
  else
  {
    uint64_t v12 = MEMORY[0x2105289B0](v1 + 2);
    if (v12)
    {
      uint64_t v13 = v12;
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7A0E8], v7);
      sub_20A855EB8((uint64_t)v10, a1, v13);

      swift_unknownObjectRelease();
LABEL_7:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return;
    }
  }
  id v19 = v21;
}

uint64_t sub_20A50923C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = *a3;
  uint64_t v7 = type metadata accessor for StockEarningsModel();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  sub_20A50BB60(a4, (uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  long long v11[2] = *(void *)(v6 + 80);
  v11[3] = *(void *)(v6 + 88);
  v11[4] = a3;
  sub_20A50C270((uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v11 + v10, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  swift_retain();
  sub_20A8C66A0();
  return swift_release();
}

uint64_t sub_20A509420(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5 = a1 + 16;
  uint64_t v6 = sub_20A8C7150();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x2105289B0](v5, v8);
  if (result)
  {
    uint64_t v12 = result;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *a3, v6);
    type metadata accessor for StockFeedInteractor();
    sub_20A855EB8((uint64_t)v10, a2, v12);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

void sub_20A50957C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_20A5095F4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(void *)(*(void *)v0 + 192)), *(void *)(v0 + *(void *)(*(void *)v0 + 192) + 24));
  return sub_20A8C3510();
}

uint64_t sub_20A509654()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + *(void *)(*(void *)v0 + 192)), *(void *)(v0 + *(void *)(*(void *)v0 + 192) + 24));
  return sub_20A8C3530();
}

void sub_20A5096AC()
{
  *(void *)(v0 + *(void *)(*(void *)v0 + 184)) = 0;
  swift_release();
  sub_20A506008(0);
  char v1 = sub_20A559DC4();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  id v2 = (id)sub_20A8CF180();
  sub_20A8CEA00();
  if (v1)
  {
    sub_20A8C7D90();

    sub_20A5097E4();
  }
  else
  {
    sub_20A8C7D90();
  }
}

void sub_20A5097E4()
{
  sub_20A8C6670();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v0 = (void *)sub_20A8CEBE0();
  sub_20A8C6520();
  swift_release();

  id v1 = (id)sub_20A8CEBE0();
  sub_20A8C6560();
  swift_release();
  swift_release();
}

uint64_t sub_20A509934(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v34 - v9;
  uint64_t v42 = type metadata accessor for StockFeedQuoteData();
  MEMORY[0x270FA5388](v42);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C40E0();
  uint64_t v40 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_20A8C3410();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C470(0);
  double v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x2105289B0](v1 + 2, v18);
  if (v21)
  {
    uint64_t v36 = v21;
    uint64_t v22 = sub_20A8C3E10();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v37 = v4;
    uint64_t v24 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v20, a1, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v22);
    uint64_t v25 = (void *)(*(void *)((char *)v2 + *(void *)(*v2 + 120))
                   + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager);
    uint64_t v35 = v13;
    __swift_project_boxed_opaque_existential_1(v25, v25[3]);
    uint64_t v4 = v37;
    sub_20A8C3600();
    uint64_t v26 = (uint64_t)v38;
    sub_20A8C4060();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v35);
    sub_20A85579C((uint64_t)v20, v26, v36);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v26, v41);
    sub_20A50CA20((uint64_t)v20, (uint64_t (*)(void))sub_20A42C470);
  }
  uint64_t v27 = sub_20A8C3E10();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v12, a1, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v12, 0, 1, v27);
  uint64_t v29 = &v12[*(int *)(v42 + 20)];
  uint64_t v30 = sub_20A8C2CB0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  sub_20A5042F4((uint64_t)v10);
  sub_20A504518((uint64_t)v7);
  uint64_t v31 = (*(uint64_t (**)(char *, void, char *, char *, void))(*(void *)(v4 + 88) + 88))(v12, 0, v10, v7, *(void *)(v4 + 80));
  sub_20A50CA20((uint64_t)v7, (uint64_t (*)(void))sub_20A42D040);
  sub_20A50CA20((uint64_t)v10, (uint64_t (*)(void))sub_20A42D040);
  sub_20A50CA20((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedQuoteData);
  uint64_t v43 = v31;
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v32);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A509F28(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v15 - v10;
  sub_20A5042F4((uint64_t)v15 - v10);
  sub_20A504518((uint64_t)v8);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, void))(*(void *)(v5 + 88) + 88))(a1, a3, v11, v8, *(void *)(v5 + 80));
  sub_20A50CA20((uint64_t)v8, (uint64_t (*)(void))sub_20A42D040);
  sub_20A50CA20((uint64_t)v11, (uint64_t (*)(void))sub_20A42D040);
  v15[1] = v12;
  uint64_t v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v13);
  sub_20A8C8C00();
  return swift_release();
}

uint64_t sub_20A50A110(void *a1, uint64_t a2)
{
  (*(void (**)(void, void))(*(void *)(*(void *)a2 + 88) + 56))(*a1, *(void *)(*(void *)a2 + 80));
  id v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v2);
  sub_20A8C8C00();
  return swift_release();
}

void sub_20A50A230()
{
  sub_20A8CE9E0();
  sub_20A50BBC8(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20A8D3DC0;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  sub_20A8CF4E0();
  *(void *)(v0 + 56) = MEMORY[0x263F8D310];
  *(void *)(v0 + 64) = sub_20A43F830();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FC80);
  id v1 = (void *)sub_20A8CF180();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();
}

uint64_t sub_20A50A370(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)v1 + 88) + 104))(a1, *(void *)(*(void *)v1 + 80));
  id v2 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v2);
  sub_20A8C8C00();
  sub_20A50C5F4();
  swift_retain();
  sub_20A8C5D80();
  swift_release();
  return swift_release();
}

uint64_t sub_20A50A4D4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_20A50A518()
{
  return swift_retain();
}

uint64_t sub_20A50A568(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v61 = a3;
  uint64_t v66 = a2;
  uint64_t v77 = a1;
  uint64_t v62 = *v3;
  sub_20A50C544(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v67 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CBFB0();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_20A8C6DE0();
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  long long v63 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v78 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C2B70();
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v76 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v74 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA48(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v17 = v16;
  uint64_t v79 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v21 = v20;
  uint64_t v22 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v73 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v59 - v25;
  uint64_t v70 = v3;
  uint64_t v72 = v3[4];
  sub_20A8C8BE0();
  uint64_t v82 = v80[0];
  uint64_t v27 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
  uint64_t v29 = v28;
  sub_20A50B5F8((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v27);
  uint64_t v71 = v29;
  sub_20A8C9490();
  swift_release();
  sub_20A8C58E0();
  sub_20A8CBA60();
  uint64_t v30 = v79;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v15, 1, v17) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
    uint64_t v31 = sub_20A42DA48;
    uint64_t v32 = (uint64_t)v15;
    return sub_20A50CA20(v32, (uint64_t (*)(void))v31);
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v19, v15, v17);
  uint64_t v33 = v78;
  uint64_t v34 = v30;
  sub_20A8CBB40();
  uint64_t v36 = v75;
  uint64_t v35 = v76;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v33, 1, v76) == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v17);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
    uint64_t v31 = sub_20A469FF4;
    uint64_t v32 = (uint64_t)v78;
    return sub_20A50CA20(v32, (uint64_t (*)(void))v31);
  }
  uint64_t v38 = v36;
  uint64_t v77 = v26;
  uint64_t v59 = v17;
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  uint64_t v40 = (uint64_t)v74;
  v39(v74, v78, v35);
  sub_20A8C8BE0();
  uint64_t v82 = v80[0];
  uint64_t v41 = v73;
  sub_20A8C9490();
  swift_release();
  sub_20A50B5B0(&qword_26AC6D850, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  uint64_t v42 = v19;
  uint64_t v43 = sub_20A8CBB50();
  uint64_t v45 = *(uint64_t (**)(char *, uint64_t))(v22 + 8);
  uint64_t v44 = (char *)(v22 + 8);
  int v46 = v41;
  id v47 = v45;
  uint64_t result = v45(v46, v21);
  if (v43 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v43 > 0x7FFFFFFF)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v48 = v21;
  uint64_t v78 = v44;
  uint64_t v49 = v38;
  uint64_t v50 = v63;
  sub_20A8C6DD0();
  sub_20A50B5B0(&qword_26AC69A00, MEMORY[0x263F79E78]);
  uint64_t v51 = v65;
  sub_20A8C4940();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v50, v51);
  sub_20A50B5B0(&qword_26AC82E48, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  uint64_t v52 = (uint64_t)v67;
  uint64_t v53 = v42;
  sub_20A8CBAE0();
  uint64_t v55 = v68;
  uint64_t v54 = v69;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v52, 1, v69) == 1)
  {
    sub_20A50CA20(v52, (uint64_t (*)(void))sub_20A50C544);
  }
  else
  {
    uint64_t v56 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v60, v52, v54);
    sub_20A4B2A1C(v61, (uint64_t)v80);
    if (v81)
    {
      __swift_project_boxed_opaque_existential_1(v80, v81);
      sub_20A50B5B0(&qword_26AC82E50, MEMORY[0x263F587E8]);
      sub_20A8CC060();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
      sub_20A50C564((uint64_t)v80);
    }
    uint64_t v40 = (uint64_t)v74;
    uint64_t v53 = v42;
  }
  uint64_t v57 = MEMORY[0x2105289B0](v70 + 2);
  uint64_t v58 = v59;
  if (v57)
  {
    sub_20A8565A0(v40, v57);
    swift_unknownObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v40, v76);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v53, v58);
  return v47(v77, v48);
}

uint64_t sub_20A50AEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F4ED28](a1, a2, a3, a4, *v4);
}

uint64_t sub_20A50AF28()
{
  return sub_20A8CCA60();
}

uint64_t sub_20A50AF64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = sub_20A8C4020();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v33 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v34 = v4;
  uint64_t v32 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v31 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42DA48(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v40 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v30 - v17;
  sub_20A8C8BE0();
  uint64_t v42 = v43;
  uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D550];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
  sub_20A50B5F8((unint64_t *)&qword_26AC6A020, (unint64_t *)&qword_26AC6A030, v19);
  sub_20A8C9490();
  swift_release();
  sub_20A8C58E0();
  sub_20A8CBA60();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_20A50CA20((uint64_t)v9, (uint64_t (*)(void))sub_20A42DA48);
    uint64_t v20 = sub_20A8C6FA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v41, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v40, v9, v11);
    uint64_t v22 = (uint64_t)v38;
    sub_20A8C8330();
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      uint64_t v23 = v31;
      uint64_t v24 = v32;
      uint64_t v25 = v22;
      uint64_t v26 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v31, v25, v34);
      uint64_t v27 = v33;
      sub_20A8CCF50();
      sub_20A454470();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v27, v36);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v23, v26);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v40, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      uint64_t v28 = sub_20A8C6FA0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v41, 0, 1, v28);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v40, v11);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      uint64_t v29 = sub_20A8C6FA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v41, 1, 1, v29);
      return sub_20A50CA20(v22, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
    }
  }
}

uint64_t sub_20A50B540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A50AF64(a1, a2);
}

uint64_t sub_20A50B564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A50C5EC(a3);
}

uint64_t sub_20A50B56C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A50C5F0(a3);
}

void sub_20A50B574()
{
  sub_20A506008(1);

  sub_20A5097E4();
}

uint64_t sub_20A50B5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A50C64C(a3);
}

uint64_t sub_20A50B5B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A50B5F8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A50BE50(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A50B640(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for StockEarningsModel() - 8);
  uint64_t v6 = *(uint64_t **)(v2 + 32);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_20A50923C(a1, a2, v6, v7);
}

uint64_t sub_20A50B6C8()
{
  return sub_20A50B8CC(MEMORY[0x263F7A0E0]);
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = (int *)type metadata accessor for StockEarningsModel();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v3 = sub_20A8C3F00();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  unint64_t v4 = v0 + v2 + v1[5];
  uint64_t v5 = sub_20A8C2800();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  unint64_t v8 = v0 + v2 + v1[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  unint64_t v9 = v0 + v2 + v1[7];
  uint64_t v10 = sub_20A8C2AF0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return swift_deallocObject();
}

uint64_t sub_20A50B8C0()
{
  return sub_20A50B8CC(MEMORY[0x263F7A0E8]);
}

uint64_t sub_20A50B8CC(unsigned int *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StockEarningsModel() - 8);
  return sub_20A509420(*(void *)(v1 + 32), v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

void sub_20A50B934()
{
  if (!qword_26AC82E08)
  {
    sub_20A50BA74();
    sub_20A50B5B0((unint64_t *)&qword_26AC6A3E8, (void (*)(uint64_t))sub_20A50BA74);
    sub_20A50B5B0((unint64_t *)&unk_26AC82E10, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    sub_20A50B5B0(&qword_26AC72258, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    sub_20A50B5B0(&qword_26AC82E20, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    unint64_t v0 = sub_20A8C4A50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82E08);
    }
  }
}

void sub_20A50BA74()
{
  if (!qword_26AC6A3F0)
  {
    type metadata accessor for StockFeedLayoutSectionDescriptor(255);
    type metadata accessor for StockFeedLayoutModel();
    sub_20A50B5B0(&qword_26AC7B3E0, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutSectionDescriptor);
    sub_20A50B5B0(&qword_26AC72240, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
    unint64_t v0 = sub_20A8C9B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A3F0);
    }
  }
}

uint64_t sub_20A50BB60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A50BBC8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_20A50BC30(uint64_t a1)
{
}

uint64_t sub_20A50BC50()
{
  return sub_20A506EB4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_20A50BC70()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A50BCA8(void *a1, uint64_t a2)
{
  return sub_20A506F44(a1, a2, v2 + 16);
}

uint64_t sub_20A50BCC4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A50BD04()
{
  return sub_20A50793C((void *)(v0 + 16), *(void *)(v0 + 56));
}

void sub_20A50BD34(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_20A50BDA4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return MEMORY[0x210522FB0](0, v1, v2);
}

uint64_t sub_20A50BDEC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return swift_deallocObject();
}

uint64_t sub_20A50BE40(uint64_t a1)
{
  return sub_20A5070F8(a1, v1[2], v1[3], v1[4], v1[5], v1 + 6);
}

void sub_20A50BE50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A50B5B0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A50B5B0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A50BF44()
{
  return swift_deallocObject();
}

uint64_t sub_20A50BF7C()
{
  return sub_20A587310();
}

uint64_t sub_20A50BF84()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A50BFBC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A50BFF4()
{
  return sub_20A506588();
}

uint64_t sub_20A50C000()
{
  return sub_20A5875CC();
}

void sub_20A50C008(uint64_t a1)
{
  sub_20A5054F4(a1, v1[4], v1[2], v1[3]);
}

void sub_20A50C014(uint64_t a1)
{
}

uint64_t sub_20A50C020(uint64_t a1)
{
  return sub_20A506134(a1, v1[4], v1[2], v1[3]);
}

void sub_20A50C02C()
{
  if (!qword_26AC819C8)
  {
    sub_20A50C0A8();
    sub_20A50C0FC();
    unint64_t v0 = type metadata accessor for DualOfflineManager.State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC819C8);
    }
  }
}

unint64_t sub_20A50C0A8()
{
  unint64_t result = qword_26AC73230;
  if (!qword_26AC73230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73230);
  }
  return result;
}

unint64_t sub_20A50C0FC()
{
  unint64_t result = qword_26AC73238;
  if (!qword_26AC73238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73238);
  }
  return result;
}

void sub_20A50C150()
{
  if (!qword_26AC81920)
  {
    sub_20A8CD2C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC81920);
    }
  }
}

uint64_t sub_20A50C1B4()
{
  return sub_20A50C4E4(sub_20A5575C8);
}

uint64_t sub_20A50C1E0()
{
  return swift_deallocObject();
}

uint64_t sub_20A50C1F0(uint64_t a1, uint64_t *a2)
{
  return sub_20A509F28(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_20A50C20C(uint64_t a1, uint64_t a2)
{
  sub_20A504F74(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A50C270(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A50C2D8()
{
  return sub_20A55A1F4(v0);
}

uint64_t sub_20A50C2F4@<X0>(uint64_t a1@<X8>)
{
  return sub_20A55A358(a1);
}

uint64_t sub_20A50C310()
{
  uint64_t v1 = sub_20A8C3410();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20A50C3DC@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_20A8C3410() - 8);
  return sub_20A505880(a1, *(void *)(v2 + 32), v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

void sub_20A50C45C()
{
  if (!qword_26AC823B8)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC823B8);
    }
  }
}

uint64_t sub_20A50C4B8()
{
  return sub_20A50C4E4(sub_20A55888C);
}

uint64_t sub_20A50C4E4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20A50C528(void *a1, uint64_t a2)
{
  return sub_20A50A110(a1, a2);
}

void sub_20A50C544(uint64_t a1)
{
}

uint64_t sub_20A50C564(uint64_t a1)
{
  sub_20A50BBC8(0, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70, MEMORY[0x263F58868], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A50C5F4()
{
  unint64_t result = qword_26763B7B8;
  if (!qword_26763B7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B7B8);
  }
  return result;
}

uint64_t sub_20A50C64C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)v2;
  uint64_t v21 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_20A8C3410();
  uint64_t v8 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4C77A4(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2 + v4[14];
  uint64_t v14 = sub_20A8C3D00();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  uint64_t v16 = (void *)(*(void *)(v2 + *(void *)(*(void *)v2 + 120))
                 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager);
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_20A8C3600();
  sub_20A8C4060();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  uint64_t v17 = (*(uint64_t (**)(char *, char *, void))(v4[11] + 120))(v13, v10, v4[10]);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  sub_20A50CA20((uint64_t)v13, (uint64_t (*)(void))sub_20A4C77A4);
  uint64_t v23 = v17;
  uint64_t v18 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D538];
  sub_20A50BE50(0, (unint64_t *)&qword_26AC69FB0, MEMORY[0x263F7D538]);
  sub_20A50B5F8(&qword_26AC69FA8, (unint64_t *)&qword_26AC69FB0, v18);
  sub_20A8C8C00();
  return swift_release();
}

void sub_20A50C9CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A50CA20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t dispatch thunk of ChartCategoryProviderType.categories(for:dateRange:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_20A50CAA8(double a1, double a2, double a3)
{
  uint64_t v6 = sub_20A50CCD8(a1, a2, a3);
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t result = sub_20A68C474(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0) {
    goto LABEL_30;
  }
  uint64_t result = v20;
  char v8 = 0;
  uint64_t v9 = 0;
  if (!v6)
  {
    double v12 = a1;
    goto LABEL_16;
  }
  double v10 = a1;
  do
  {
    BOOL v11 = v10 <= a2;
    if (a3 > 0.0) {
      BOOL v11 = v10 >= a2;
    }
    if (v11)
    {
      if (v8 & 1 | (v10 != a2)) {
        goto LABEL_28;
      }
      char v8 = 1;
      double v12 = v10;
    }
    else
    {
      BOOL v13 = __OFADD__(v9++, 1);
      if (v13) {
        goto LABEL_29;
      }
      double v12 = a1 + (double)v9 * a3;
    }
    uint64_t v21 = result;
    unint64_t v15 = *(void *)(result + 16);
    unint64_t v14 = *(void *)(result + 24);
    if (v15 >= v14 >> 1)
    {
      sub_20A68C474(v14 > 1, v15 + 1, 1);
      uint64_t result = v21;
    }
    *(void *)(result + 16) = v15 + 1;
    *(double *)(result + 8 * v15 + 32) = v10;
    double v10 = v12;
    --v6;
  }
  while (v6);
  while (1)
  {
LABEL_16:
    BOOL v16 = v12 <= a2;
    if (a3 > 0.0) {
      BOOL v16 = v12 >= a2;
    }
    if (!v16) {
      break;
    }
    if ((v12 != a2) | v8 & 1) {
      return result;
    }
    char v8 = 1;
    double v17 = v12;
LABEL_23:
    uint64_t v22 = result;
    unint64_t v19 = *(void *)(result + 16);
    unint64_t v18 = *(void *)(result + 24);
    if (v19 >= v18 >> 1)
    {
      sub_20A68C474(v18 > 1, v19 + 1, 1);
      uint64_t result = v22;
    }
    *(void *)(result + 16) = v19 + 1;
    *(double *)(result + 8 * v19 + 32) = v12;
    double v12 = v17;
  }
  BOOL v13 = __OFADD__(v9++, 1);
  if (!v13)
  {
    double v17 = a1 + (double)v9 * a3;
    goto LABEL_23;
  }
  __break(1u);
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_20A50CC90@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ChartCategoryProvider()
{
  return self;
}

uint64_t sub_20A50CCD8(double a1, double a2, double a3)
{
  uint64_t result = 0;
  char v4 = 0;
  uint64_t v5 = 0;
  double v6 = a1;
  do
  {
    BOOL v8 = v6 <= a2;
    if (a3 > 0.0) {
      BOOL v8 = v6 >= a2;
    }
    if (v8)
    {
      if ((v6 != a2) | v4 & 1) {
        return result;
      }
      char v4 = 1;
    }
    else
    {
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7) {
        goto LABEL_12;
      }
      double v6 = a1 + (double)v5 * a3;
    }
    BOOL v7 = __OFADD__(result++, 1);
  }
  while (!v7);
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_20A50CD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v63 = a2;
  uint64_t v67 = sub_20A8C2800();
  uint64_t v3 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3CA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  double v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    double v68 = MEMORY[0x263F8EE78];
    sub_20A68C474(0, v10, 0);
    BOOL v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v12 = v7 + 16;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v64 = *(void *)(v12 + 56);
    uint64_t v65 = v13;
    unint64_t v15 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v66 = v12;
    BOOL v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      v65(v9, v14, v6);
      sub_20A8C3C60();
      sub_20A8C2790();
      uint64_t v18 = v17;
      (*v15)(v5, v67);
      (*v16)(v9, v6);
      double v19 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C474(0, *(void *)(*(void *)&v19 + 16) + 1, 1);
        double v19 = v68;
      }
      unint64_t v21 = *(void *)(*(void *)&v19 + 16);
      unint64_t v20 = *(void *)(*(void *)&v19 + 24);
      unint64_t v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        sub_20A68C474(v20 > 1, v21 + 1, 1);
        unint64_t v22 = v21 + 1;
        double v19 = v68;
      }
      *(void *)(*(void *)&v19 + 16) = v22;
      *(void *)(*(void *)&v19 + 8 * v21 + 32) = v18;
      v14 += v64;
      --v10;
    }
    while (v10);
    unint64_t v23 = v22;
    double v11 = MEMORY[0x263F8EE78];
  }
  else
  {
    unint64_t v23 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (!v23)
    {
      char v26 = 1;
      double v19 = MEMORY[0x263F8EE78];
      goto LABEL_13;
    }
    double v19 = MEMORY[0x263F8EE78];
  }
  double v24 = *(double *)(*(void *)&v19 + 32);
  swift_bridgeObjectRetain();
  unint64_t v25 = v23 - 1;
  if (v23 != 1)
  {
    uint64_t v43 = (double *)(*(void *)&v19 + 40);
    uint64_t v44 = (void *)MEMORY[0x263F8EE78];
    do
    {
      double v45 = *v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v44 = sub_20A46D5E8(0, v44[2] + 1, 1, v44);
      }
      unint64_t v47 = v44[2];
      unint64_t v46 = v44[3];
      if (v47 >= v46 >> 1) {
        uint64_t v44 = sub_20A46D5E8((void *)(v46 > 1), v47 + 1, 1, v44);
      }
      _OWORD v44[2] = v47 + 1;
      *(double *)&v44[v47 + 4] = v45 - v24;
      ++v43;
      double v24 = v45;
      --v25;
    }
    while (v25);
  }
  swift_bridgeObjectRelease();
  char v26 = 0;
LABEL_13:
  sub_20A43FFE8();
  sub_20A8C2790();
  double v28 = v27;
  sub_20A8C2790();
  double v30 = (v28 - v29) / 240.0;
  sub_20A50D384();
  sub_20A8CE650();
  uint64_t result = swift_bridgeObjectRelease();
  if (v68 > v30) {
    double v30 = v68;
  }
  if (v26) {
    goto LABEL_18;
  }
  if (v23 > *(void *)(*(void *)&v19 + 16))
  {
    __break(1u);
  }
  else
  {
    double v32 = *(double *)(*(void *)&v19 + 8 * v23 + 24);
    sub_20A8C2790();
    if (v32 > v33 - v30)
    {
LABEL_18:
      int64_t v34 = *(void *)(*(void *)&v19 + 16);
      if (v34)
      {
        double v68 = v11;
        sub_20A68C494(0, v34, 0);
        uint64_t v35 = 0;
        double v36 = v68;
        do
        {
          uint64_t v37 = sub_20A8CE760();
          uint64_t v39 = v38;
          double v68 = v36;
          unint64_t v41 = *(void *)(*(void *)&v36 + 16);
          unint64_t v40 = *(void *)(*(void *)&v36 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_20A68C494(v40 > 1, v41 + 1, 1);
            double v36 = v68;
          }
          ++v35;
          *(void *)(*(void *)&v36 + 16) = v41 + 1;
          unint64_t v42 = *(void *)&v36 + 16 * v41;
          *(void *)(v42 + 32) = v37;
          *(void *)(v42 + 40) = v39;
        }
        while (v34 != v35);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        double v36 = MEMORY[0x263F8EE78];
      }
      double v68 = v36;
      sub_20A4B9D5C();
      sub_20A50D3D8((unint64_t *)&qword_26AC7F820, (void (*)(uint64_t))sub_20A4B9D5C);
      *(double *)&uint64_t v48 = COERCE_DOUBLE(sub_20A8CE4C0());
      goto LABEL_33;
    }
    double v49 = v30 + v32;
    sub_20A8C2790();
    double v51 = MEMORY[0x263F8EE78];
    BOOL v52 = v30 > 0.0 && v49 < v50;
    uint64_t v53 = MEMORY[0x263F8EE78];
    if (!v52)
    {
LABEL_42:
      double v68 = v19;
      sub_20A4ABF6C(v53);
      int64_t v55 = *(void *)(*(void *)&v68 + 16);
      if (!v55)
      {
        swift_bridgeObjectRelease();
        *(double *)&uint64_t v48 = MEMORY[0x263F8EE78];
        return v48;
      }
      double v68 = v51;
      sub_20A68C494(0, v55, 0);
      uint64_t v56 = 0;
      *(double *)&uint64_t v48 = v68;
      do
      {
        uint64_t v57 = sub_20A8CE760();
        uint64_t v59 = v58;
        double v68 = *(double *)&v48;
        unint64_t v61 = *(void *)(v48 + 16);
        unint64_t v60 = *(void *)(v48 + 24);
        if (v61 >= v60 >> 1)
        {
          sub_20A68C494(v60 > 1, v61 + 1, 1);
          *(double *)&uint64_t v48 = v68;
        }
        ++v56;
        *(void *)(v48 + 16) = v61 + 1;
        uint64_t v62 = v48 + 16 * v61;
        *(void *)(v62 + 32) = v57;
        *(void *)(v62 + 40) = v59;
      }
      while (v55 != v56);
LABEL_33:
      swift_bridgeObjectRelease();
      return v48;
    }
    uint64_t result = sub_20A8C2790();
    if (v30 != 0.0)
    {
      uint64_t v53 = sub_20A50CAA8(v49, v54, v30);
      goto LABEL_42;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_20A50D384()
{
  unint64_t result = qword_26AC7F648;
  if (!qword_26AC7F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F648);
  }
  return result;
}

uint64_t sub_20A50D3D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static ShareLinkContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ShareLinkContext.hash(into:)()
{
  return sub_20A8CF890();
}

uint64_t ShareLinkContext.hashValue.getter()
{
  return sub_20A8CF8C0();
}

uint64_t ShareLinkProvider.shareLink(for:)@<X0>(uint64_t a1@<X8>)
{
  sub_20A50DC4C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - v4;
  uint64_t v6 = sub_20A8C2530();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_20A8CECA0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_20A50DCA0((uint64_t)v5, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    uint64_t v10 = 1;
  }
  else
  {
    double v11 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v11(v9, v5, v6);
    if (*(unsigned char *)(v1 + 16))
    {
      sub_20A50D6B8((uint64_t)v9, a1);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      v11((char *)a1, v9, v6);
    }
    uint64_t v10 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v10, 1, v6);
}

uint64_t sub_20A50D6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C2530();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A50DC4C(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v19 - v9;
  sub_20A50DC4C(0, &qword_26AC68C50, MEMORY[0x263F06370]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = sub_20A8C2220();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C2190();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_20A50DCA0((uint64_t)v13, &qword_26AC68C50, MEMORY[0x263F06370]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  }
  else
  {
    uint64_t v20 = a2;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_20A8C21C0();
    uint64_t v21 = 0x79616C50776F6E2FLL;
    unint64_t v22 = 0xEB00000000676E69;
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8C21D0();
    sub_20A8C21A0();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v20, v7, v4);
      return sub_20A50DCA0((uint64_t)v10, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v20, v10, v4);
    }
  }
}

uint64_t ShareLinkProvider.deinit()
{
  return v0;
}

uint64_t ShareLinkProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_20A50DA94()
{
  unint64_t result = qword_26763B7C0;
  if (!qword_26763B7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B7C0);
  }
  return result;
}

uint64_t sub_20A50DAE8@<X0>(uint64_t a1@<X8>)
{
  return ShareLinkProvider.shareLink(for:)(a1);
}

unsigned char *storeEnumTagSinglePayload for ShareLinkContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A50DBD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareLinkContext()
{
  return &type metadata for ShareLinkContext;
}

uint64_t type metadata accessor for ShareLinkProvider()
{
  return self;
}

uint64_t method lookup function for ShareLinkProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ShareLinkProvider);
}

void sub_20A50DC4C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A50DCA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A50DC4C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

ValueMetadata *type metadata accessor for StockChartRangeCalloutViewOptions()
{
  return &type metadata for StockChartRangeCalloutViewOptions;
}

uint64_t dispatch thunk of StockChartRangeCalloutViewProviderType.view(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of StockChartRangeCalloutViewProviderType.present(_:on:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_20A50DD34(uint64_t a1, void *a2, long long *a3)
{
  uint64_t v7 = type metadata accessor for StockChartCalloutLayoutOptions();
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29[-2] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v28 = *a3;
  uint64_t v11 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  objc_msgSend(a2, sel_bounds);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v17 = (int *)type metadata accessor for StockChartRangeCalloutViewModel(0);
  uint64_t v18 = a1 + v17[6];
  uint64_t v19 = &v10[v8[7]];
  uint64_t v20 = sub_20A8C2BC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  uint64_t v21 = a1 + v17[7];
  unint64_t v22 = &v10[v8[8]];
  uint64_t v23 = sub_20A8C2AF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v21, v23);
  id v24 = objc_msgSend(a2, sel_traitCollection);
  *(void *)uint64_t v10 = v14;
  *((void *)v10 + 1) = v16;
  *(void *)&v10[v8[9]] = v24;
  unint64_t v25 = &v10[v8[10]];
  *(_OWORD *)unint64_t v25 = v28;
  *((void *)v25 + 2) = v11;
  *((void *)v25 + 3) = v12;
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  uint64_t v26 = a1 + v17[5];
  sub_20A65A4D8(a1, *(double *)&v26, (double *)v10, v29);
  sub_20A50E000((uint64_t)v29, (uint64_t)v30);
  if (*(void *)&v30[0])
  {
    v32[4] = v30[4];
    v32[5] = v30[5];
    v32[6] = v30[6];
    v32[0] = v30[0];
    v32[1] = v30[1];
    uint64_t v33 = v31;
    v32[2] = v30[2];
    v32[3] = v30[3];
    sub_20A6827F4((uint64_t)a2, a1, v26, (uint64_t)v32);
    sub_20A50E118((uint64_t)v29);
  }
  return sub_20A50E0BC((uint64_t)v10);
}

uint64_t type metadata accessor for StockChartRangeCalloutViewProvider()
{
  return self;
}

id sub_20A50DF94()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for StockChartRangeCalloutView());

  return objc_msgSend(v0, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t sub_20A50DFDC(uint64_t a1, void *a2, long long *a3)
{
  return sub_20A50DD34(a1, a2, a3);
}

uint64_t sub_20A50E000(uint64_t a1, uint64_t a2)
{
  sub_20A50E064();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A50E064()
{
  if (!qword_26763B7C8)
  {
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B7C8);
    }
  }
}

uint64_t sub_20A50E0BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockChartCalloutLayoutOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A50E118(uint64_t a1)
{
  return a1;
}

void sub_20A50E174(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  if (a1)
  {
  }
}

uint64_t sub_20A50E1C8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  double v45 = (uint64_t (*)(char *))a1;
  uint64_t v46 = a2;
  double v36 = a3;
  sub_20A511DD4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v47 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int64_t v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v44 = (char *)&v34 - v8;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A511DD4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - v13;
  sub_20A42D51C();
  uint64_t v16 = v15 - 8;
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  uint64_t v42 = v12 + 16;
  v41(v14, v3, v11, v17);
  sub_20A512474((unint64_t *)&unk_26AC6ACD0, (unint64_t *)&qword_26AC6ACF0, v9);
  uint64_t v43 = v14;
  sub_20A8CE4B0();
  uint64_t v20 = &v19[*(int *)(v16 + 44)];
  sub_20A512474((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v9);
  uint64_t v21 = *(void *)v20;
  sub_20A8CE8A0();
  uint64_t v35 = v5;
  if (v21 == v48[0])
  {
    uint64_t v22 = v47;
LABEL_7:
    sub_20A511EB0((uint64_t)v19, (uint64_t (*)(void))sub_20A42D51C);
    uint64_t v31 = 1;
    double v32 = v36;
  }
  else
  {
    uint64_t v38 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v39 = (void (**)(char *))(v5 + 16);
    unint64_t v40 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v37 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v22 = v47;
    uint64_t v23 = v34;
    id v24 = v44;
    while (1)
    {
      unint64_t v25 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      (*v39)(v24);
      v25(v48, 0);
      uint64_t v26 = v43;
      ((void (*)(char *, char *, uint64_t))v41)(v43, v19, v11);
      sub_20A8CE8B0();
      (*v38)(v26, v11);
      double v27 = *v40;
      (*v40)(v23, v24, v22);
      uint64_t v28 = v49;
      char v29 = v45(v23);
      if (v28)
      {
        (*v37)(v23, v47);
        return sub_20A511EB0((uint64_t)v19, (uint64_t (*)(void))sub_20A42D51C);
      }
      if (v29) {
        break;
      }
      uint64_t v49 = 0;
      uint64_t v22 = v47;
      (*v37)(v23, v47);
      uint64_t v30 = *(void *)v20;
      sub_20A8CE8A0();
      if (v30 == v48[0]) {
        goto LABEL_7;
      }
    }
    sub_20A511EB0((uint64_t)v19, (uint64_t (*)(void))sub_20A42D51C);
    double v32 = v36;
    uint64_t v22 = v47;
    v27(v36, v23, v47);
    uint64_t v31 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v32, v31, 1, v22);
}

uint64_t sub_20A50E698@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v47 = (uint64_t (*)(char *))a1;
  uint64_t v48 = a2;
  uint64_t v38 = a3;
  sub_20A42D93C();
  uint64_t v49 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v36 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v46 = (char *)&v36 - v8;
  uint64_t v9 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A511DD4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v36 - v13;
  sub_20A5123C0();
  uint64_t v16 = v15 - 8;
  double v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16);
  uint64_t v44 = v12 + 16;
  v43(v14, v3, v11, v17);
  sub_20A512474((unint64_t *)&unk_26AC69F30, (unint64_t *)&qword_26AC69F48, v9);
  double v45 = v14;
  sub_20A8CE4B0();
  uint64_t v20 = &v19[*(int *)(v16 + 44)];
  sub_20A512474(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, v9);
  uint64_t v21 = *(void *)v20;
  sub_20A8CE8A0();
  uint64_t v37 = v5;
  if (v21 == v50[0])
  {
    uint64_t v22 = v49;
LABEL_7:
    sub_20A511EB0((uint64_t)v19, (uint64_t (*)(void))sub_20A5123C0);
    uint64_t v32 = 1;
    uint64_t v33 = v38;
  }
  else
  {
    unint64_t v40 = (void (**)(char *, uint64_t))(v12 + 8);
    unint64_t v41 = (void (**)(char *))(v5 + 16);
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v39 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v22 = v49;
    uint64_t v23 = v36;
    id v24 = v46;
    while (1)
    {
      unint64_t v25 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      (*v41)(v24);
      v25(v50, 0);
      uint64_t v26 = v45;
      ((void (*)(char *, char *, uint64_t))v43)(v45, v19, v11);
      sub_20A8CE8B0();
      (*v40)(v26, v11);
      double v27 = *v42;
      (*v42)(v23, v24, v22);
      uint64_t v28 = v51;
      char v29 = v47(v23);
      uint64_t v30 = v23;
      if (v28)
      {
        (*v39)(v23, v49);
        return sub_20A511EB0((uint64_t)v19, (uint64_t (*)(void))sub_20A5123C0);
      }
      if (v29) {
        break;
      }
      uint64_t v51 = 0;
      uint64_t v22 = v49;
      (*v39)(v23, v49);
      uint64_t v31 = *(void *)v20;
      sub_20A8CE8A0();
      if (v31 == v50[0]) {
        goto LABEL_7;
      }
    }
    sub_20A511EB0((uint64_t)v19, (uint64_t (*)(void))sub_20A5123C0);
    uint64_t v33 = v38;
    uint64_t v35 = v30;
    uint64_t v22 = v49;
    v27(v38, v35, v49);
    uint64_t v32 = 0;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v33, v32, 1, v22);
}

uint64_t type metadata accessor for StockListBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_20A50EB78()
{
  return sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
}

uint64_t sub_20A50EBC0()
{
  return sub_20A5121FC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
}

uint64_t sub_20A50EC08@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v96 = a3;
  uint64_t v100 = sub_20A8C9830();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  double v95 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A512244(0, &qword_26AC686E8, (uint64_t (*)(uint64_t))sub_20A42D240, MEMORY[0x263F8DD68]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = (char *)&v86 - v8;
  uint64_t v87 = type metadata accessor for StockListSectionHeaderViewLayoutOptions();
  MEMORY[0x270FA5388](v87);
  uint64_t v90 = (char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D240();
  uint64_t v102 = v10;
  uint64_t v91 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v88 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  *(void *)&long long v101 = (char *)&v86 - v13;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A511DD4(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v86 - v18;
  sub_20A42D51C();
  uint64_t v21 = v20 - 8;
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A511DD4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  unint64_t v25 = v24;
  uint64_t v104 = (void (**)(uint64_t, void))*(v24 - 1);
  MEMORY[0x270FA5388](v24);
  uint64_t v110 = (uint64_t)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v108 = (char *)&v86 - v28;
  MEMORY[0x270FA5388](v29);
  unint64_t v93 = (char *)&v86 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v94 = (char *)&v86 - v32;
  uint64_t v89 = v3;
  uint64_t v112 = v3;
  int v97 = a2;
  uint64_t v113 = a2;
  *(void *)&long long v98 = sub_20A424EF8((void (*)(char *))sub_20A511E94, (uint64_t)v111);
  uint64_t v103 = 0;
  uint64_t v33 = v17;
  int64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v92 = a1;
  uint64_t v107 = v17 + 16;
  *(void *)&long long v106 = v34;
  v34(v19, a1, v16);
  sub_20A512474((unint64_t *)&unk_26AC6ACD0, (unint64_t *)&qword_26AC6ACF0, v14);
  uint64_t v109 = v19;
  sub_20A8CE4B0();
  uint64_t v35 = &v23[*(int *)(v21 + 44)];
  sub_20A512474((unint64_t *)&unk_26AC6ACE0, (unint64_t *)&qword_26AC6ACF0, v14);
  uint64_t v36 = *(void *)v35;
  sub_20A8CE8A0();
  if (v36 == (void)v114)
  {
LABEL_5:
    sub_20A511EB0((uint64_t)v23, (uint64_t (*)(void))sub_20A42D51C);
LABEL_6:
    uint64_t v44 = v97;
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v95, v44, v100);
    type metadata accessor for StockListLayoutModel();
    sub_20A42D2FC();
    sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    return sub_20A8C85D0();
  }
  uint64_t v37 = (void (**)(char *))(v104 + 2);
  uint64_t v38 = (void (**)(char *, uint64_t))(v33 + 8);
  *(void *)&long long v105 = v104 + 4;
  ++v104;
  uint64_t v39 = v108;
  while (1)
  {
    unint64_t v40 = (void (*)(long long *, void))sub_20A8CE8C0();
    (*v37)(v39);
    v40(&v114, 0);
    unint64_t v41 = v109;
    ((void (*)(char *, char *, uint64_t))v106)(v109, v23, v16);
    sub_20A8CE8B0();
    (*v38)(v41, v16);
    uint64_t v42 = *(void (**)(char *, uint64_t, void (**)(uint64_t, uint64_t)))v105;
    (*(void (**)(uint64_t, char *, void (**)(uint64_t, uint64_t)))v105)(v110, v39, v25);
    sub_20A8C8820();
    LODWORD(v41) = BYTE8(v116);
    sub_20A475B64(v114, *((uint64_t *)&v114 + 1), v115, *((uint64_t *)&v115 + 1), v116, BYTE8(v116));
    if (v41 == 1) {
      break;
    }
    (*v104)(v110, v25);
    uint64_t v43 = *(void *)v35;
    sub_20A8CE8A0();
    if (v43 == (void)v114) {
      goto LABEL_5;
    }
  }
  sub_20A511EB0((uint64_t)v23, (uint64_t (*)(void))sub_20A42D51C);
  uint64_t v46 = v93;
  v42(v93, v110, v25);
  uint64_t v47 = v94;
  v42(v94, (uint64_t)v46, v25);
  sub_20A8C8820();
  uint64_t v48 = (char *)*((void *)&v114 + 1);
  uint64_t v49 = (char *)*((void *)&v115 + 1);
  uint64_t v50 = v116;
  uint64_t v51 = v25;
  if (BYTE8(v116) != 1)
  {
    sub_20A475B64(v114, *((uint64_t *)&v114 + 1), v115, *((uint64_t *)&v115 + 1), v116, BYTE8(v116));
    (*v104)((uint64_t)v47, v25);
    goto LABEL_6;
  }
  v122[0] = v114;
  v122[1] = v115;
  uint64_t v123 = v116;
  uint64_t v110 = sub_20A63C43C();
  uint64_t v44 = v97;
  uint64_t v52 = v98;
  if (v53)
  {
    (*v104)((uint64_t)v47, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_20A8C97C0();
  double v55 = v54;
  int64_t v56 = *(void *)(v52 + 16);
  uint64_t v109 = v48;
  uint64_t v108 = v49;
  uint64_t v107 = v50;
  if (v56)
  {
    *(void *)&long long v106 = v51;
    *(void *)&long long v114 = MEMORY[0x263F8EE78];
    sub_20A68C294(0, v56, 0);
    uint64_t v57 = *(void (**)(void, uint64_t, uint64_t))(v91 + 16);
    uint64_t v58 = v52 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
    uint64_t v59 = *(void *)(v91 + 72);
    uint64_t v51 = (void (**)(uint64_t, uint64_t))(v91 + 8);
    while (1)
    {
      uint64_t v60 = v101;
      uint64_t v61 = v102;
      v57(v101, v58, v102);
      uint64_t v62 = v103;
      sub_20A511170(v60, (double *)v120);
      if (v62) {
        goto LABEL_35;
      }
      (*v51)(v60, v61);
      uint64_t v63 = *(void *)&v120[0];
      uint64_t v64 = v114;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v103 = 0;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_20A68C294(0, *(void *)(v64 + 16) + 1, 1);
        uint64_t v64 = v114;
      }
      unint64_t v67 = *(void *)(v64 + 16);
      unint64_t v66 = *(void *)(v64 + 24);
      unint64_t v68 = v67 + 1;
      if (v67 >= v66 >> 1)
      {
        sub_20A68C294(v66 > 1, v67 + 1, 1);
        uint64_t v64 = v114;
      }
      *(void *)(v64 + 16) = v68;
      *(void *)(v64 + 8 * v67 + 32) = v63;
      v58 += v59;
      if (!--v56)
      {
        uint64_t v69 = v89;
        uint64_t v70 = v88;
        uint64_t v52 = v98;
        goto LABEL_23;
      }
    }
  }
  uint64_t v64 = MEMORY[0x263F8EE78];
  unint64_t v68 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v68)
  {
    double v73 = 0.0;
    uint64_t v69 = v89;
    uint64_t v70 = v88;
    uint64_t v71 = v87;
    goto LABEL_29;
  }
  *(void *)&long long v106 = v51;
  uint64_t v69 = v89;
  uint64_t v70 = v88;
LABEL_23:
  uint64_t v71 = v87;
  if (v68 < 2)
  {
    unint64_t v72 = 0;
    double v73 = 0.0;
    uint64_t v51 = (void (**)(uint64_t, uint64_t))v106;
    do
    {
LABEL_28:
      double v75 = *(double *)(v64 + 8 * v72++ + 32);
      double v73 = v73 + v75;
    }
    while (v68 != v72);
    goto LABEL_29;
  }
  uint64_t v74 = 0;
  unint64_t v72 = v68 & 0xFFFFFFFFFFFFFFFELL;
  double v73 = 0.0;
  do
  {
    double v73 = v73 + *(double *)(v64 + 8 * v74 + 32) + *(double *)(v64 + 8 * v74 + 40);
    v74 += 2;
  }
  while (v72 != v74);
  uint64_t v51 = (void (**)(uint64_t, uint64_t))v106;
  if (v68 != v72) {
    goto LABEL_28;
  }
LABEL_29:
  swift_bridgeObjectRelease();
  sub_20A8C9730();
  sub_20A8CE980();
  double v77 = v55 - v73 - v76;
  __swift_project_boxed_opaque_existential_1((void *)v69 + 12, *((void *)v69 + 15));
  __swift_project_boxed_opaque_existential_1((void *)v69 + 27, *((void *)v69 + 30));
  char v78 = sub_20A8C3850();
  uint64_t v79 = (uint64_t)v90;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v90, v44, v100);
  *(unsigned char *)(v79 + *(int *)(v71 + 20)) = (v78 & 1) == 0;
  sub_20A5B0138((uint64_t)v122, v79, (uint64_t)v120);
  long long v106 = v120[0];
  long long v105 = v120[1];
  long long v101 = v120[2];
  long long v98 = v120[3];
  uint64_t v80 = v121;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v81 = sub_20A511EB0(v79, (uint64_t (*)(void))type metadata accessor for StockListSectionHeaderViewLayoutOptions);
  long long v114 = v106;
  long long v115 = v105;
  long long v116 = v101;
  long long v117 = v98;
  uint64_t v118 = v80;
  char v119 = 1;
  MEMORY[0x270FA5388](v81);
  *(&v86 - 4) = v69;
  *(&v86 - 3) = v44;
  *((double *)&v86 - 2) = v77;
  sub_20A455CCC((uint64_t)v120);
  uint64_t v60 = (uint64_t)v94;
  uint64_t v61 = sub_20A449BA0((void (*)(char *))sub_20A511F10, (uint64_t)(&v86 - 6));
  type metadata accessor for StockListLayoutModel();
  sub_20A42D2FC();
  sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
  sub_20A8C9840();
  *(void *)&long long v114 = v52;
  uint64_t v82 = v110;
  if (*(void *)(v52 + 16) < v110)
  {
    __break(1u);
  }
  else
  {
    uint64_t v83 = v102;
    if ((v110 & 0x8000000000000000) == 0)
    {
      uint64_t v84 = v91;
      uint64_t v85 = (uint64_t)v86;
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v86, v70, v102);
      sub_20A5AAE6C(v82, v82, v85);
      sub_20A511F50((uint64_t)v120);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v70, v83);
      (*v104)(v60, v51);
      goto LABEL_7;
    }
  }
  __break(1u);
LABEL_35:
  (*v51)(v60, v61);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_20A50FAB0@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t)@<X1>, void (**a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v110 = a3;
  uint64_t v111 = a4;
  uint64_t v108 = a2;
  uint64_t v106 = type metadata accessor for StockListSectionHeaderViewLayoutOptions();
  MEMORY[0x270FA5388](v106);
  uint64_t v107 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_20A8C4030();
  uint64_t v123 = *(void (***)(void, uint64_t))(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v112 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v109);
  uint64_t v115 = (uint64_t)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v114 = (uint64_t)&v91 - v9;
  MEMORY[0x270FA5388](v10);
  long long v117 = (char *)&v91 - v11;
  uint64_t v12 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v116 = (uint64_t)&v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v131 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v131);
  uint64_t v130 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  *(void *)&long long v134 = (char *)&v91 - v16;
  sub_20A51238C(0);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D93C();
  uint64_t v21 = v20;
  uint64_t v105 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v91 - v25;
  sub_20A511DD4(0, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v28 = v27;
  *(void *)&long long v132 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v91 - v29;
  sub_20A5123C0();
  uint64_t v129 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v33 = (char *)&v91 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C8820();
  if (v146)
  {
    if (v146 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A42D240();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v111, 1, 1, v34);
    }
    else
    {
      uint64_t v139 = 0;
      long long v137 = 0u;
      long long v138 = 0u;
      long long v135 = 0u;
      long long v136 = 0u;
      char v140 = 2;
      MEMORY[0x270FA5388](v142);
      uint64_t v47 = v110;
      *(&v91 - 2) = v108;
      *(&v91 - 1) = v47;
      sub_20A449BA0((void (*)(char *))sub_20A51255C, (uint64_t)(&v91 - 4));
      type metadata accessor for StockListLayoutModel();
      sub_20A42D2FC();
      sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
      uint64_t v48 = v111;
      sub_20A8C9840();
      sub_20A42D240();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
    }
  }
  uint64_t v128 = v26;
  *(void *)&long long v133 = v23;
  v149[0] = v141;
  v149[1] = v142;
  uint64_t v95 = v144;
  uint64_t v96 = v142;
  v149[2] = v143;
  v149[3] = v144;
  uint64_t v94 = v145;
  v149[4] = v145;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 16);
  uint64_t v97 = a1;
  uint64_t v125 = v36;
  uint64_t v126 = v132 + 16;
  v36(v30, a1, v28);
  uint64_t v37 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
  sub_20A512474((unint64_t *)&unk_26AC69F30, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
  uint64_t v127 = v30;
  sub_20A8CE4B0();
  uint64_t v38 = &v33[*((int *)v129 + 9)];
  uint64_t v39 = sub_20A512474(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, v37);
  uint64_t v40 = *(void *)v38;
  uint64_t v129 = v33;
  sub_20A8CE8A0();
  if (v40 != (void)v135)
  {
    unint64_t v124 = v19;
    char v119 = (void (**)(char *, uint64_t))(v132 + 8);
    uint64_t v120 = (void (**)(char *))(v105 + 16);
    uint64_t v118 = (void (**)(void, char *, uint64_t))(v105 + 32);
    uint64_t v103 = (uint64_t (**)(char *, uint64_t))(v123 + 11);
    uint64_t v104 = (void (**)(char *, uint64_t, uint64_t))(v123 + 2);
    int v102 = *MEMORY[0x263F7AF90];
    int v101 = *MEMORY[0x263F7AF98];
    int v100 = *MEMORY[0x263F7AF68];
    int v99 = *MEMORY[0x263F7AF80];
    int v98 = *MEMORY[0x263F7AF70];
    int v93 = *MEMORY[0x263F7AF88];
    uint64_t v91 = (void (**)(char *, uint64_t))(v123 + 1);
    uint64_t v123 = (void (**)(void, uint64_t))(v105 + 8);
    LODWORD(v105) = *MEMORY[0x263F7AF78];
    int v92 = *MEMORY[0x263F7AF60];
    *(void *)&long long v132 = MEMORY[0x263F8EE78];
    uint64_t v50 = (uint64_t)v117;
    uint64_t v41 = (uint64_t)v129;
    uint64_t v121 = v39;
    uint64_t v122 = v38;
    while (1)
    {
      uint64_t v52 = (void (*)(long long *, void))sub_20A8CE8C0();
      char v53 = v128;
      (*v120)(v128);
      v52(&v135, 0);
      double v54 = v127;
      v125(v127, v41, v28);
      sub_20A8CE8B0();
      (*v119)(v54, v28);
      (*v118)(v133, v53, v21);
      uint64_t v55 = v134;
      sub_20A8C8330();
      uint64_t v56 = v55;
      uint64_t v57 = v130;
      sub_20A5124B8(v56, v130, type metadata accessor for StockListModel);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        uint64_t v59 = (uint64_t)v124;
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v60 = type metadata accessor for StockViewModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
      }
      else
      {
        uint64_t v61 = v116;
        sub_20A470E78(v57, v116);
        uint64_t v59 = (uint64_t)v124;
        sub_20A5124B8(v61, (uint64_t)v124, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A511EB0(v61, type metadata accessor for StockListStockModel);
        uint64_t v60 = type metadata accessor for StockViewModel();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 0, 1, v60);
      }
      sub_20A511EB0(v134, type metadata accessor for StockListModel);
      type metadata accessor for StockViewModel();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v59, 1, v60) != 1) {
        break;
      }
      sub_20A511EB0(v59, (uint64_t (*)(void))sub_20A51238C);
      (*v123)(v133, v21);
LABEL_12:
      uint64_t v51 = *(void *)v122;
      uint64_t v41 = (uint64_t)v129;
      sub_20A8CE8A0();
      if (v51 == (void)v135) {
        goto LABEL_6;
      }
    }
    sub_20A5124B8(v59 + *(int *)(v60 + 28), v50, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    sub_20A511EB0(v59, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    sub_20A8C4250();
    sub_20A8C4230();
    if (qword_26AC69070 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    if (*(unsigned char *)(v50 + 8))
    {
      uint64_t v62 = *(void *)(v50 + 64);
      uint64_t v63 = *(void *)(v50 + 72);
      swift_bridgeObjectRetain();
LABEL_41:
      sub_20A511EB0(v50, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
      (*v123)(v133, v21);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        double v73 = (void *)v132;
      }
      else {
        double v73 = sub_20A46DEBC(0, *(void *)(v132 + 16) + 1, 1, (void *)v132);
      }
      unint64_t v75 = v73[2];
      unint64_t v74 = v73[3];
      if (v75 >= v74 >> 1) {
        double v73 = sub_20A46DEBC((void *)(v74 > 1), v75 + 1, 1, v73);
      }
      v73[2] = v75 + 1;
      *(void *)&long long v132 = v73;
      double v76 = &v73[2 * v75];
      v76[4] = v62;
      v76[5] = v63;
      uint64_t v50 = (uint64_t)v117;
      goto LABEL_12;
    }
    char v64 = v135;
    double v65 = *(double *)v50;
    uint64_t v66 = v114;
    sub_20A5124B8(v50, v114, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
    if ((v64 & 1) == 0)
    {
      char v70 = 0;
      uint64_t v50 = (uint64_t)v117;
      goto LABEL_36;
    }
    unint64_t v68 = v112;
    uint64_t v67 = v113;
    (*v104)(v112, v66 + *(int *)(v109 + 40), v113);
    int v69 = (*v103)(v68, v67);
    if (v69 == v102 || v69 == v101)
    {
      char v70 = 2;
      uint64_t v50 = (uint64_t)v117;
      goto LABEL_36;
    }
    uint64_t v50 = (uint64_t)v117;
    if (v69 != v100 && v69 != v99 && v69 != v98)
    {
      char v70 = 2;
      if (v69 == v93)
      {
LABEL_36:
        sub_20A511EB0(v66, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
        if (qword_26AC6D680 != -1) {
          swift_once();
        }
        uint64_t v62 = sub_20A6573EC(*(void *)(v50 + 48), *(void *)(v50 + 56), 5, 1, v70, v65);
        uint64_t v63 = v71;
        uint64_t v72 = v115;
        sub_20A5124B8(v50, v115, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
        if (!v63)
        {
          uint64_t v62 = *(void *)(v72 + 64);
          uint64_t v63 = *(void *)(v72 + 72);
          swift_bridgeObjectRetain();
        }
        sub_20A511EB0(v72, (uint64_t (*)(void))type metadata accessor for PriceViewModel);
        goto LABEL_41;
      }
      if (v69 == v105)
      {
        char v70 = 0;
        goto LABEL_36;
      }
      if (v69 != v92) {
        (*v91)(v112, v113);
      }
    }
    char v70 = 2;
    goto LABEL_36;
  }
  *(void *)&long long v132 = MEMORY[0x263F8EE78];
  uint64_t v41 = (uint64_t)v129;
LABEL_6:
  sub_20A511EB0(v41, (uint64_t (*)(void))sub_20A5123C0);
  uint64_t v42 = v132;
  uint64_t v43 = *(void *)(v132 + 16);
  if (v43)
  {
    double v45 = *(void (***)(char *, uint64_t))(v132 + 32);
    uint64_t v44 = *(void (***)(char *, uint64_t))(v132 + 40);
    uint64_t v46 = v43 - 1;
    if (v43 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v79 = (void (***)(char *, uint64_t))(v42 + 56);
      uint64_t v80 = v44;
      do
      {
        uint64_t v81 = *(v79 - 1);
        uint64_t v82 = *v79;
        swift_bridgeObjectRetain();
        v79 += 2;
        uint64_t v83 = sub_20A8CE390();
        if (v83 < sub_20A8CE390())
        {
          double v45 = v81;
          uint64_t v80 = v82;
        }
        swift_bridgeObjectRelease();
        --v46;
      }
      while (v46);
      swift_bridgeObjectRelease();
      uint64_t v44 = v80;
    }
    uint64_t v77 = v111;
    char v78 = v108;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    double v45 = 0;
    uint64_t v44 = 0;
    uint64_t v77 = v111;
    char v78 = v108;
  }
  __swift_project_boxed_opaque_existential_1(v78 + 12, (uint64_t)v78[15]);
  __swift_project_boxed_opaque_existential_1(v78 + 27, (uint64_t)v78[30]);
  char v84 = sub_20A8C3850();
  uint64_t v85 = sub_20A8C9830();
  uint64_t v86 = (uint64_t)v107;
  uint64_t v87 = v110;
  (*(void (**)(char *, void (**)(char *, uint64_t), uint64_t))(*(void *)(v85 - 8) + 16))(v107, v110, v85);
  *(unsigned char *)(v86 + *(int *)(v106 + 20)) = (v84 & 1) == 0;
  sub_20A5B0138((uint64_t)v149, v86, (uint64_t)v147);
  long long v133 = v147[1];
  long long v134 = v147[0];
  long long v131 = v147[3];
  long long v132 = v147[2];
  uint64_t v88 = v148;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v89 = sub_20A511EB0(v86, (uint64_t (*)(void))type metadata accessor for StockListSectionHeaderViewLayoutOptions);
  long long v135 = v134;
  long long v136 = v133;
  long long v137 = v132;
  long long v138 = v131;
  uint64_t v139 = v88;
  char v140 = 0;
  MEMORY[0x270FA5388](v89);
  *(&v91 - 4) = v78;
  *(&v91 - 3) = v87;
  *(&v91 - 2) = v45;
  *(&v91 - 1) = v44;
  sub_20A455CCC((uint64_t)v147);
  sub_20A449BA0((void (*)(char *))sub_20A512520, (uint64_t)(&v91 - 6));
  swift_bridgeObjectRelease();
  type metadata accessor for StockListLayoutModel();
  sub_20A42D2FC();
  sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
  sub_20A8C9840();
  sub_20A511F50((uint64_t)v147);
  sub_20A42D240();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v77, 0, 1, v90);
}

uint64_t sub_20A510B88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v57 = a1;
  int v55 = a5;
  uint64_t v53 = a4;
  uint64_t v54 = a2;
  uint64_t v56 = a3;
  uint64_t v60 = a6;
  uint64_t v52 = type metadata accessor for EmptyListViewLayoutOptions();
  MEMORY[0x270FA5388](v52);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TodayViewLayoutOptions();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x270FA5388](v59);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for StockViewLayoutOptions();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StockListStockModel(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (uint64_t *)((char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A42D93C();
  sub_20A8C8330();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v23 = *v21;
      uint64_t v24 = v21[1];
      uint64_t v26 = v21[2];
      uint64_t v25 = v21[3];
      uint64_t v27 = sub_20A8C9830();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v10, v57, v27);
      __swift_project_boxed_opaque_existential_1(v58 + 7, v58[10]);
      sub_20A8BED90(v23, v26, v25, v61);
      *(void *)uint64_t v12 = v23;
      *((void *)v12 + 1) = v24;
      *((void *)v12 + 2) = v26;
      *((void *)v12 + 3) = v25;
      long long v28 = v61[1];
      *((_OWORD *)v12 + 2) = v61[0];
      *((_OWORD *)v12 + 3) = v28;
      long long v29 = v61[3];
      *((_OWORD *)v12 + 4) = v61[2];
      *((_OWORD *)v12 + 5) = v29;
      long long v30 = v61[5];
      *((_OWORD *)v12 + 6) = v61[4];
      *((_OWORD *)v12 + 7) = v30;
      swift_storeEnumTagMultiPayload();
      sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
      sub_20A8C9140();
      uint64_t v31 = (uint64_t (*)(void))type metadata accessor for TodayViewLayoutOptions;
      uint64_t v32 = (uint64_t)v10;
    }
    else
    {
      uint64_t v44 = sub_20A8C9830();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(v7, v57, v44);
      double v45 = &v7[*(int *)(v52 + 20)];
      *(void *)double v45 = v53;
      v45[8] = v55 & 1;
      __swift_project_boxed_opaque_existential_1(v58 + 17, v58[20]);
      sub_20A511F7C((uint64_t)v7, (uint64_t)v61);
      char v46 = v61[7];
      long long v47 = v61[1];
      *(_OWORD *)uint64_t v12 = v61[0];
      *((_OWORD *)v12 + 1) = v47;
      long long v48 = v61[3];
      *((_OWORD *)v12 + 2) = v61[2];
      *((_OWORD *)v12 + 3) = v48;
      long long v49 = v61[5];
      *((_OWORD *)v12 + 4) = v61[4];
      *((_OWORD *)v12 + 5) = v49;
      *((_OWORD *)v12 + 6) = v61[6];
      v12[112] = v46;
      swift_storeEnumTagMultiPayload();
      sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
      sub_20A8C9140();
      uint64_t v31 = (uint64_t (*)(void))type metadata accessor for EmptyListViewLayoutOptions;
      uint64_t v32 = (uint64_t)v7;
    }
  }
  else
  {
    sub_20A470E78((uint64_t)v21, (uint64_t)v18);
    uint64_t v33 = sub_20A8C9830();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v15, v57, v33);
    uint64_t v34 = &v15[v13[5]];
    uint64_t v35 = v56;
    *(void *)uint64_t v34 = v54;
    *((void *)v34 + 1) = v35;
    *(void *)&v15[v13[6]] = 0x4020000000000000;
    *(void *)&v15[v13[7]] = 0x4037000000000000;
    uint64_t v36 = &v15[v13[8]];
    __asm { FMOV            V0.2D, #4.0 }
    *(_OWORD *)uint64_t v36 = _Q0;
    *((_OWORD *)v36 + 1) = _Q0;
    __swift_project_boxed_opaque_existential_1(v58 + 2, v58[5]);
    swift_bridgeObjectRetain();
    sub_20A5BA078((uint64_t)v18, (uint64_t)v15, (uint64_t)v61);
    sub_20A5016B4();
    uint64_t v43 = &v12[*(int *)(v42 + 48)];
    sub_20A5124B8((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    memcpy(v43, v61, 0x150uLL);
    swift_storeEnumTagMultiPayload();
    sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    sub_20A8C9140();
    sub_20A511EB0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockViewLayoutOptions);
    uint64_t v31 = type metadata accessor for StockListStockModel;
    uint64_t v32 = (uint64_t)v18;
  }
  return sub_20A511EB0(v32, v31);
}

uint64_t sub_20A511170@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  long long v47 = a2;
  *(void *)&long long v53 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x270FA5388](v53);
  *(void *)&long long v52 = &v46[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A512168();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v46[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A42D240();
  uint64_t v10 = v9;
  uint64_t v11 = sub_20A5121FC(&qword_26763B7D0, (void (*)(uint64_t))sub_20A42D240);
  uint64_t v12 = sub_20A8CE880();
  uint64_t v13 = MEMORY[0x263F8EE78];
  if (!v12) {
    goto LABEL_9;
  }
  uint64_t v14 = v12;
  uint64_t v57 = MEMORY[0x263F8EE78];
  sub_20A68C294(0, v12 & ~(v12 >> 63), 0);
  uint64_t result = sub_20A8CE840();
  if ((v14 & 0x8000000000000000) == 0)
  {
    long long v49 = (void (**)(unsigned char *))(v6 + 16);
    long long v48 = (void (**)(unsigned char *, uint64_t))(v6 + 8);
    *(void *)&long long v51 = a1;
    *(void *)&long long v50 = v10;
    do
    {
      uint64_t v16 = v11;
      uint64_t v17 = (void (*)(_OWORD *, void))sub_20A8CE8C0();
      (*v49)(v8);
      v17(v54, 0);
      uint64_t v18 = v52;
      sub_20A8C9150();
      sub_20A5121FC(&qword_26AC72560, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
      sub_20A8CACE0();
      uint64_t v20 = v19;
      sub_20A511EB0(v18, (uint64_t (*)(void))type metadata accessor for StockListLayoutModel);
      (*v48)(v8, v5);
      uint64_t v13 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20A68C294(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v57;
      }
      unint64_t v22 = *(void *)(v13 + 16);
      unint64_t v21 = *(void *)(v13 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_20A68C294(v21 > 1, v22 + 1, 1);
        uint64_t v13 = v57;
      }
      *(void *)(v13 + 16) = v22 + 1;
      *(void *)(v13 + 8 * v22 + 32) = v20;
      uint64_t v11 = v16;
      sub_20A8CE8B0();
      --v14;
    }
    while (v14);
LABEL_9:
    uint64_t v23 = *(void *)(v13 + 16);
    if (!v23)
    {
      double v25 = 0.0;
      goto LABEL_18;
    }
    if (v23 == 1)
    {
      uint64_t v24 = 0;
      double v25 = 0.0;
    }
    else
    {
      uint64_t v24 = v23 & 0x7FFFFFFFFFFFFFFELL;
      uint64_t v26 = (double *)(v13 + 40);
      double v25 = 0.0;
      uint64_t v27 = v23 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        double v25 = v25 + *(v26 - 1) + *v26;
        v26 += 2;
        v27 -= 2;
      }
      while (v27);
      if (v23 == v24)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t result = sub_20A8C9850();
        uint64_t v31 = v55;
        if (!v56 || v56 == 1)
        {
          long long v50 = v54[3];
          long long v51 = v54[2];
          long long v52 = v54[1];
          long long v53 = v54[0];
          sub_20A512244(0, (unint64_t *)&qword_26AC7FFF8, (uint64_t (*)(uint64_t))sub_20A5122A8, MEMORY[0x263F8E0F8]);
          uint64_t v32 = swift_allocObject();
          *(_OWORD *)(v32 + 16) = xmmword_20A8D3DC0;
          *(void *)(v32 + 56) = &type metadata for StockListSectionHeaderViewLayoutAttributes;
          *(void *)(v32 + 64) = sub_20A512300();
          uint64_t v33 = swift_allocObject();
          *(void *)(v32 + 32) = v33;
          long long v34 = v52;
          *(_OWORD *)(v33 + 16) = v53;
          *(_OWORD *)(v33 + 32) = v34;
          long long v35 = v50;
          *(_OWORD *)(v33 + 48) = v51;
          *(_OWORD *)(v33 + 64) = v35;
          *(void *)(v33 + 80) = v31;
          uint64_t v36 = sub_20A4270B4(v32);
          swift_bridgeObjectRelease();
          uint64_t v37 = *(void *)(v36 + 16);
          if (v37)
          {
            uint64_t v38 = v47;
            if (v37 == 1)
            {
              uint64_t v39 = 0;
              double v40 = 0.0;
            }
            else
            {
              uint64_t v39 = v37 & 0x7FFFFFFFFFFFFFFELL;
              uint64_t v41 = (double *)(v36 + 40);
              double v40 = 0.0;
              uint64_t v42 = v37 & 0x7FFFFFFFFFFFFFFELL;
              do
              {
                double v40 = v40 + *(v41 - 1) + *v41;
                v41 += 2;
                v42 -= 2;
              }
              while (v42);
              if (v37 == v39) {
                goto LABEL_30;
              }
            }
            uint64_t v43 = v37 - v39;
            uint64_t v44 = (double *)(v36 + 8 * v39 + 32);
            do
            {
              double v45 = *v44++;
              double v40 = v40 + v45;
              --v43;
            }
            while (v43);
LABEL_30:
            uint64_t result = swift_bridgeObjectRelease();
            goto LABEL_31;
          }
          uint64_t result = swift_bridgeObjectRelease();
        }
        double v40 = 0.0;
        uint64_t v38 = v47;
LABEL_31:
        *uint64_t v38 = v25 + v40;
        return result;
      }
    }
    uint64_t v28 = v23 - v24;
    long long v29 = (double *)(v13 + 8 * v24 + 32);
    do
    {
      double v30 = *v29++;
      double v25 = v25 + v30;
      --v28;
    }
    while (v28);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A511790@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_20A50EC08(a1, a2, a3);
}

void *sub_20A5117B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v68 = a7;
  uint64_t v67 = a6;
  uint64_t v66 = a5;
  uint64_t v64 = a4;
  uint64_t v62 = a3;
  uint64_t v65 = a19;
  uint64_t v63 = a16;
  v61[1] = a18;
  uint64_t v85 = a8;
  uint64_t v86 = a14;
  unint64_t v22 = __swift_allocate_boxed_opaque_existential_1(&v84);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(v22, a1, a8);
  uint64_t v82 = a11;
  uint64_t v83 = a17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v81);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(boxed_opaque_existential_1, a2, a11);
  uint64_t v79 = a9;
  uint64_t v80 = a15;
  uint64_t v24 = __swift_allocate_boxed_opaque_existential_1(v78);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a9 - 8) + 32))(v24, v62, a9);
  uint64_t v76 = a12;
  uint64_t v77 = a18;
  double v25 = __swift_allocate_boxed_opaque_existential_1(v75);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a12 - 8) + 32))(v25, v64, a12);
  uint64_t v73 = a10;
  uint64_t v74 = a16;
  uint64_t v26 = __swift_allocate_boxed_opaque_existential_1(v72);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(v26, v66, a10);
  uint64_t v70 = a13;
  uint64_t v71 = a19;
  uint64_t v27 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v69);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a13 - 8) + 32))(v27, v67, a13);
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v84, v85);
  double v30 = MEMORY[0x270FA5388](v29);
  uint64_t v32 = (void *)((char *)v61 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v33 + 16))(v32, v30);
  uint64_t v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v81, v82);
  double v35 = MEMORY[0x270FA5388](v34);
  uint64_t v37 = (void *)((char *)v61 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v38 + 16))(v37, v35);
  uint64_t v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v78, v79);
  double v40 = MEMORY[0x270FA5388](v39);
  uint64_t v42 = (void *)((char *)v61 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v43 + 16))(v42, v40);
  uint64_t v44 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v75, v76);
  double v45 = MEMORY[0x270FA5388](v44);
  long long v47 = (void *)((char *)v61 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v48 + 16))(v47, v45);
  uint64_t v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v72, v73);
  double v50 = MEMORY[0x270FA5388](v49);
  long long v52 = (void *)((char *)v61 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v53 + 16))(v52, v50);
  uint64_t v54 = *v32;
  uint64_t v55 = *v37;
  uint64_t v56 = *v42;
  uint64_t v57 = *v47;
  uint64_t v58 = *v52;
  v28[5] = type metadata accessor for StockViewLayoutAttributesFactory();
  v28[6] = &off_26BE66838;
  v28[2] = v54;
  v28[10] = type metadata accessor for TodayViewLayoutAttributesFactory();
  v28[11] = &off_26BE73AA8;
  v28[7] = v55;
  uint64_t v59 = type metadata accessor for StockListSectionHeaderViewLayoutAttributesFactory();
  v28[15] = v59;
  v28[16] = &off_26BE66280;
  v28[12] = v56;
  v28[20] = type metadata accessor for EmptyListViewLayoutAttributesFactory();
  v28[21] = &off_26BE65EB0;
  v28[17] = v57;
  v28[25] = v59;
  v28[26] = &off_26BE66280;
  v28[22] = v58;
  sub_20A42BEBC(&v69, (uint64_t)(v28 + 27));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
  return v28;
}

void sub_20A511DD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    v8[2] = sub_20A42D40C();
    v8[3] = sub_20A5121FC(&qword_26AC6D950, (void (*)(uint64_t))type metadata accessor for StockListModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A511E94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A50FAB0(a1, *(void (***)(char *, uint64_t))(v2 + 16), *(void (***)(char *, uint64_t))(v2 + 24), a2);
}

uint64_t sub_20A511EB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A511F10@<X0>(uint64_t a1@<X8>)
{
  return sub_20A510B88(*(void *)(v1 + 24), 0, 0, *(void *)(v1 + 32), 0, a1);
}

uint64_t sub_20A511F50(uint64_t a1)
{
  return a1;
}

double sub_20A511F7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C97A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9820();
  double v9 = v8;
  sub_20A8C9710();
  double v11 = v9 - (v10 + v10);
  sub_20A8C9820();
  CGFloat v13 = v12;
  uint64_t v14 = (void *)sub_20A8C9790();
  id v15 = objc_msgSend(v14, sel_horizontalSizeClass);

  if (v15 == (id)2)
  {
    uint64_t v16 = a1 + *(int *)(type metadata accessor for EmptyListViewLayoutOptions() + 20);
    if (!*(unsigned char *)(v16 + 8)) {
      double v11 = *(double *)v16;
    }
  }
  sub_20A8C9710();
  double v18 = v17;
  double v20 = v19;
  unint64_t v21 = (void *)sub_20A8C9750();
  sub_20A8C9780();
  sub_20A5AA61C(v21, (uint64_t)v7, 1, (uint64_t)v27, 0.0, 0.0, v13, v11, v18, v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  long long v22 = v31;
  *(_OWORD *)(a2 + 64) = v30;
  *(_OWORD *)(a2 + 80) = v22;
  *(_OWORD *)(a2 + 96) = v32;
  *(unsigned char *)(a2 + 112) = v33;
  long long v23 = v27[1];
  *(_OWORD *)a2 = v27[0];
  *(_OWORD *)(a2 + 16) = v23;
  double result = *(double *)&v28;
  long long v25 = v29;
  *(_OWORD *)(a2 + 32) = v28;
  *(_OWORD *)(a2 + 48) = v25;
  return result;
}

void sub_20A512168()
{
  if (!qword_26AC6A198)
  {
    type metadata accessor for StockListLayoutModel();
    sub_20A5121FC((unint64_t *)&unk_26AC72550, (void (*)(uint64_t))type metadata accessor for StockListLayoutModel);
    unint64_t v0 = sub_20A8C9160();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A198);
    }
  }
}

uint64_t sub_20A5121FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A512244(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A5122A8()
{
  unint64_t result = qword_26AC6AA00;
  if (!qword_26AC6AA00)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6AA00);
  }
  return result;
}

unint64_t sub_20A512300()
{
  unint64_t result = qword_26AC7E8F8;
  if (!qword_26AC7E8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7E8F8);
  }
  return result;
}

uint64_t sub_20A512354()
{
  return swift_deallocObject();
}

void sub_20A51238C(uint64_t a1)
{
}

void sub_20A5123C0()
{
  if (!qword_26AC7FCF0)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
    sub_20A511DD4(255, (unint64_t *)&qword_26AC69F48, MEMORY[0x263F7D450]);
    sub_20A512474(&qword_26AC69F40, (unint64_t *)&qword_26AC69F48, v0);
    unint64_t v1 = sub_20A8CF4F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC7FCF0);
    }
  }
}

uint64_t sub_20A512474(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A511DD4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5124B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A512520@<X0>(uint64_t a1@<X8>)
{
  return sub_20A510B88(v1[3], v1[4], v1[5], 0, 1, a1);
}

uint64_t sub_20A51255C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A510B88(*(void *)(v1 + 24), 0, 0, 0, 1, a1);
}

uint64_t type metadata accessor for WebViewControllerStyler()
{
  return self;
}

uint64_t sub_20A5125C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  double v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t type metadata accessor for ForYouFeedServiceProxy()
{
  return self;
}

uint64_t sub_20A512730()
{
  return sub_20A8CD020();
}

uint64_t sub_20A512758()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    id v2 = *(id *)(v0 + 56);
  }
  else
  {
    id v2 = (id)*MEMORY[0x263F83470];
    uint64_t v1 = 0;
  }
  uint64_t v3 = (void *)*MEMORY[0x263F83450];
  id v4 = v1;
  id v5 = v3;
  char v6 = sub_20A8CECB0();
  if (v6) {
    uint64_t v7 = v2;
  }
  else {
    uint64_t v7 = v5;
  }
  if (v6) {
    id v2 = v5;
  }

  id v8 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v2);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v9 = v8;
  uint64_t v10 = sub_20A8CEE00();

  return v10;
}

id sub_20A512870()
{
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  id v2 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v3 = v2;
  uint64_t v4 = sub_20A512758();
  uint64_t v5 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v4;
  char v6 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v5;
  *(void *)(inited + 72) = v6;
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v7);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 224);
  id v11 = v6;
  uint64_t v12 = v10(v7, v9);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v12;
  sub_20A4CF8B0(inited);
  id v13 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v14 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  id v15 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v13, sel_initWithString_attributes_, v14, v15);

  return v16;
}

id sub_20A512A1C()
{
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  id v2 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v3 = (void *)v0[7];
  if (v3) {
    id v4 = (id)v0[7];
  }
  else {
    id v4 = (id)*MEMORY[0x263F83470];
  }
  uint64_t v5 = (void *)*MEMORY[0x263F83410];
  swift_bridgeObjectRetain();
  id v6 = v2;
  id v7 = v3;
  id v8 = v5;
  char v9 = sub_20A8CECB0();
  if (v9) {
    uint64_t v10 = v4;
  }
  else {
    uint64_t v10 = v8;
  }
  if (v9) {
    id v4 = v8;
  }

  id v11 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v4);
  id v12 = objc_msgSend(self, sel_preferredFontForTextStyle_compatibleWithTraitCollection_, *MEMORY[0x263F83570], v11);

  uint64_t v13 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v12;
  uint64_t v14 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v14;
  uint64_t v15 = v0[5];
  uint64_t v16 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v15);
  uint64_t v17 = *(void *)(v16 + 16);
  double v18 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 232);
  id v19 = v14;
  uint64_t v20 = v18(v15, v17);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v20;
  sub_20A4CF8B0(inited);
  id v21 = objc_allocWithZone(MEMORY[0x263F086A0]);
  long long v22 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  long long v23 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v21, sel_initWithString_attributes_, v22, v23);

  return v24;
}

void sub_20A512C78(void *a1)
{
  id v3 = objc_msgSend(a1, sel_titleLabel);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void **)(v1 + 56);
    if (v5)
    {
      id v6 = *(id *)(v1 + 56);
    }
    else
    {
      id v6 = (id)*MEMORY[0x263F83470];
      uint64_t v5 = 0;
    }
    id v7 = (void *)*MEMORY[0x263F83410];
    id v8 = v5;
    id v9 = v7;
    char v10 = sub_20A8CECB0();
    if (v10) {
      id v11 = v6;
    }
    else {
      id v11 = v9;
    }
    if (v10) {
      id v6 = v9;
    }

    id v12 = objc_msgSend(self, sel_traitCollectionWithPreferredContentSizeCategory_, v6);
    id v13 = objc_msgSend(self, sel_preferredFontForTextStyle_compatibleWithTraitCollection_, *MEMORY[0x263F83570], v12);

    objc_msgSend(v4, sel_setFont_, v13);
  }
  id v14 = objc_msgSend(a1, sel_titleLabel);
  if (v14)
  {
    id v15 = v14;
    objc_msgSend(v14, sel_setTextAlignment_, 1);
  }
}

uint64_t sub_20A512DFC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmptyListViewStyler()
{
  return self;
}

id sub_20A512E60()
{
  return sub_20A512870();
}

id sub_20A512E84()
{
  return sub_20A512A1C();
}

uint64_t sub_20A512EA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  char v10 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 8);
  v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  v10(a1, v7, v9);
  id v12 = objc_msgSend(a1, sel_preferredContentSizeCategory);
  double v13 = MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A513014((uint64_t)v15, (uint64_t)v12, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A513014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 56) = 0;
  sub_20A42BEBC(&v12, v9 + 16);
  char v10 = *(void **)(v9 + 56);
  *(void *)(v9 + 56) = a2;

  return v9;
}

uint64_t sub_20A5130C0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v45 = a2;
  uint64_t v5 = sub_20A8C5350();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v38 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C5480();
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A513B08(0, (unint64_t *)&unk_26AC695B8, MEMORY[0x263F58ED0]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)v37 - v10;
  uint64_t v12 = sub_20A8C5920();
  uint64_t v46 = *(void *)(v12 - 8);
  uint64_t v47 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C4A30();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  double v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C4E00();
  uint64_t v20 = *(void *)(v19 - 8);
  double v21 = MEMORY[0x270FA5388](v19);
  long long v23 = (char *)v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16);
  uint64_t v44 = a1;
  v24(v23, a1, v19, v21);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v23, v19);
  if (v25 == *MEMORY[0x263F58AD0])
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v23, v15);
    uint64_t v26 = MEMORY[0x2105289B0](v3 + 32);
    uint64_t v27 = v3;
    uint64_t v28 = v46;
    if (v26)
    {
      uint64_t v42 = *(void *)(v3 + 40);
      swift_getObjectType();
      uint64_t v43 = v11;
      sub_20A8C4A20();
      sub_20A8C4DF0();
      sub_20A8C4A10();
      uint64_t v27 = v3;
      id v11 = v43;
      sub_20A8C54F0();
      swift_unknownObjectRelease();
      swift_release();
      sub_20A513BDC((uint64_t)v48, &qword_26AC6AE80, (void (*)(uint64_t))sub_20A443124);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v47);
    }
    sub_20A8C4A20();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v47);
    uint64_t v29 = v27 + OBJC_IVAR____TtC8StocksUI24ArticleViewerCoordinator_currentArticle;
LABEL_5:
    swift_beginAccess();
    sub_20A513B5C((uint64_t)v11, v29);
    return swift_endAccess();
  }
  if (v25 != *MEMORY[0x263F58AB8] && v25 != *MEMORY[0x263F58AC8] && v25 == *MEMORY[0x263F58AC0])
  {
    (*(void (**)(char *, uint64_t))(v20 + 96))(v23, v19);
    long long v31 = v43;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v43, v23, v42);
    uint64_t v32 = MEMORY[0x2105289B0](v3 + 32);
    uint64_t v33 = v46;
    uint64_t v35 = v39;
    uint64_t v34 = v40;
    uint64_t v36 = v38;
    if (v32)
    {
      v37[1] = *(void *)(v3 + 40);
      v37[0] = swift_getObjectType();
      sub_20A8C5470();
      sub_20A8C5340();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
      sub_20A8C4DF0();
      uint64_t v49 = 0;
      memset(v48, 0, sizeof(v48));
      sub_20A8C54F0();
      long long v31 = v43;
      swift_unknownObjectRelease();
      swift_release();
      sub_20A513BDC((uint64_t)v48, &qword_26AC6AE80, (void (*)(uint64_t))sub_20A443124);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v47);
    }
    sub_20A8C5470();
    sub_20A8C5340();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v31, v42);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v11, 0, 1, v47);
    uint64_t v29 = v3 + OBJC_IVAR____TtC8StocksUI24ArticleViewerCoordinator_currentArticle;
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v23, v19);
}

uint64_t sub_20A51378C()
{
  sub_20A4380C4(v0 + 16);
  sub_20A4380C4(v0 + 32);
  sub_20A513BDC(v0 + OBJC_IVAR____TtC8StocksUI24ArticleViewerCoordinator_currentArticle, (unint64_t *)&unk_26AC695B8, MEMORY[0x263F58ED0]);

  return swift_deallocClassInstance();
}

uint64_t sub_20A51381C()
{
  return type metadata accessor for ArticleViewerCoordinator();
}

uint64_t type metadata accessor for ArticleViewerCoordinator()
{
  uint64_t result = qword_26AC680E8;
  if (!qword_26AC680E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A513870()
{
  sub_20A513B08(319, (unint64_t *)&unk_26AC695B8, MEMORY[0x263F58ED0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_20A513928()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return MEMORY[0x2105289B0](v1 + 16);
}

uint64_t sub_20A513974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  swift_beginAccess();
  *(void *)(v4 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_20A5139DC(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  v3[5] = *v1;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x2105289B0](v4 + 16);
  uint64_t v6 = *(void *)(v4 + 24);
  v3[3] = v5;
  v3[4] = v6;
  return sub_20A513A60;
}

void sub_20A513A60(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_20A513AE4(uint64_t a1, int a2)
{
  return sub_20A5130C0(a1, a2);
}

void sub_20A513B08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A513B5C(uint64_t a1, uint64_t a2)
{
  sub_20A513B08(0, (unint64_t *)&unk_26AC695B8, MEMORY[0x263F58ED0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A513BDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A513B08(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A513C38()
{
  uint64_t v0 = sub_20A8C7760();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C5130();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C4C80();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == *MEMORY[0x263F58C38])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F7A698];
LABEL_8:
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *v9, v0);
    return sub_20A8C6930();
  }
  if (v8 == *MEMORY[0x263F58C30]) {
    goto LABEL_7;
  }
  if (v8 == *MEMORY[0x263F58C20])
  {
    uint64_t v9 = (unsigned int *)MEMORY[0x263F7A688];
    goto LABEL_8;
  }
  if (v8 == *MEMORY[0x263F58C28])
  {
LABEL_7:
    uint64_t v9 = (unsigned int *)MEMORY[0x263F7A690];
    goto LABEL_8;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A513E70(uint64_t a1)
{
  uint64_t v65 = a1;
  uint64_t v64 = sub_20A8C3F00();
  uint64_t v62 = *(void *)(v64 - 8);
  uint64_t v63 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v64);
  uint64_t v61 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_20A8CBEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v59 = v2;
  uint64_t v60 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v58 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C6810();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v54 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_20A8C4030();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v51 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_20A8C6800();
  uint64_t v57 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  long long v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_20A8C6750();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C76F0();
  uint64_t v47 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C76E0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20A8C7770();
  uint64_t v19 = *(void *)(v18 - 8);
  double v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v19 + 104))(v22, *MEMORY[0x263F7A6A8], v18, v20);
  uint64_t v66 = sub_20A8C4890();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  uint64_t v23 = *MEMORY[0x263F7A618];
  id v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v24(v13, v23, v10);
  sub_20A8C3EC0();
  sub_20A8C76C0();
  sub_20A514964((unint64_t *)&qword_26AC69B30, MEMORY[0x263F7A600]);
  sub_20A8C4940();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v24(v13, v23, v47);
  int v25 = v48;
  sub_20A8C6740();
  sub_20A514964(&qword_26AC69910, MEMORY[0x263F79970]);
  uint64_t v26 = v49;
  sub_20A8C4940();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v26);
  uint64_t v27 = v65;
  sub_20A8C3EC0();
  uint64_t v28 = v51;
  uint64_t v29 = v27;
  sub_20A8C3E70();
  sub_20A5D54EC(v54);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v55);
  sub_20A8C3EE0();
  long long v30 = v52;
  sub_20A8C67E0();
  sub_20A514964(&qword_26AC69918, MEMORY[0x263F799D0]);
  uint64_t v31 = v56;
  sub_20A8C4940();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v31);
  uint64_t v32 = v67;
  __swift_project_boxed_opaque_existential_1((void *)(v67 + 64), *(void *)(v67 + 88));
  sub_20A8CC050();
  __swift_project_boxed_opaque_existential_1(&v68, v69);
  v70[0] = 0x2D52454B434954;
  v70[1] = 0xE700000000000000;
  sub_20A8C3EC0();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  uint64_t v33 = v58;
  sub_20A8CBED0();
  sub_20A514964((unint64_t *)&unk_26AC6AE20, MEMORY[0x263F58758]);
  uint64_t v34 = v59;
  sub_20A8CC060();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v33, v34);
  sub_20A42BEBC(&v68, (uint64_t)v70);
  __swift_project_boxed_opaque_existential_1((void *)(v32 + 16), *(void *)(v32 + 40));
  type metadata accessor for StockFeedViewController();
  sub_20A4342F4((uint64_t)v70, (uint64_t)&v68);
  uint64_t v36 = v61;
  uint64_t v35 = v62;
  uint64_t v37 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v29, v64);
  uint64_t v38 = v35;
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v40 = (v63 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  sub_20A42BEBC(&v68, v41 + 16);
  unint64_t v42 = v41 + v39;
  uint64_t v43 = v66;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42, v36, v37);
  *(void *)(v41 + v40) = v43;
  swift_retain();
  uint64_t v44 = (void *)sub_20A8C5B80();
  uint64_t result = swift_release();
  if (v44)
  {
    id v46 = v44;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);

    swift_release();
    return (uint64_t)v46;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A514860(void *a1)
{
  return sub_20A8C5A40();
}

uint64_t type metadata accessor for StockFeedModule()
{
  return self;
}

uint64_t sub_20A514964(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5149AC()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A514A94(void *a1)
{
  sub_20A8C3F00();

  return sub_20A514860(a1);
}

uint64_t sub_20A514B34()
{
  uint64_t v90 = type metadata accessor for StockSearchModel();
  MEMORY[0x270FA5388](v90);
  uint64_t v1 = (char *)&v67 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for StockViewModel();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v89 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D4A5C();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8C3F00();
  uint64_t v80 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v92 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v79 = (char *)&v67 - v10;
  sub_20A44DB30(0);
  uint64_t v81 = v11;
  uint64_t v97 = *(void (**)(void))(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v100 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v91 = (char *)&v67 - v14;
  sub_20A515704();
  uint64_t v76 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v96 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A515844(0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
  uint64_t v95 = v17;
  int v93 = *(void (***)(char *, uint64_t))(v17 - 8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v94 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  char v78 = (char *)&v67 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v77 = (char *)&v67 - v22;
  uint64_t v23 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
  sub_20A515844(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v67 - v27;
  sub_20A515938();
  uint64_t v30 = v29 - 8;
  double v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v67 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = MEMORY[0x263F8EE78];
  uint64_t v88 = (void (**)(char *))v26;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v74 = v26 + 16;
  uint64_t v73 = v34;
  ((void (*)(char *, uint64_t, uint64_t, double))v34)(v28, v99, v25, v31);
  sub_20A515800(&qword_26AC82E60, (unint64_t *)&qword_26AC6AD38, v23);
  unint64_t v75 = v28;
  sub_20A8CE4B0();
  uint64_t v35 = (uint64_t)v33;
  uint64_t v36 = &v33[*(int *)(v30 + 44)];
  uint64_t v37 = v23;
  uint64_t v38 = v81;
  uint64_t v39 = sub_20A515800((unint64_t *)&unk_26AC824A0, (unint64_t *)&qword_26AC6AD38, v37);
  uint64_t v40 = *(void *)v36;
  sub_20A8CE8A0();
  if (v40 != v101)
  {
    int v98 = (void (**)(void))(v93 + 2);
    long long v68 = (void (**)(char *, uint64_t))(v88 + 1);
    uint64_t v67 = (void (**)(char *, char *, uint64_t))(v93 + 4);
    ++v93;
    uint64_t v87 = (void (**)(char *, char *, uint64_t))((char *)v97 + 32);
    uint64_t v88 = (void (**)(char *))((char *)v97 + 16);
    uint64_t v85 = (void (**)(char *, void, uint64_t, uint64_t))(v80 + 56);
    uint64_t v86 = (void (**)(char *, uint64_t, uint64_t))(v80 + 16);
    uint64_t v84 = (void (**)(char *, uint64_t))((char *)v97 + 8);
    uint64_t v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
    uint64_t v82 = (void (**)(char *, char *, uint64_t))(v80 + 32);
    uint64_t v72 = v25;
    uint64_t v71 = v35;
    uint64_t v70 = v36;
    uint64_t v69 = v39;
    do
    {
      uint64_t v44 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
      uint64_t v97 = *v98;
      uint64_t v45 = v95;
      v97(v77);
      v44(&v101, 0);
      id v46 = v75;
      v73(v75, v35, v25);
      sub_20A8CE8B0();
      (*v68)(v46, v25);
      uint64_t v47 = v78;
      (*v67)(v78, v77, v45);
      ((void (*)(char *, char *, uint64_t))v97)(v94, v47, v45);
      uint64_t v48 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
      sub_20A515800(&qword_26763B7E0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
      uint64_t v49 = v96;
      sub_20A8CE4B0();
      uint64_t v50 = (uint64_t)v49;
      uint64_t v51 = &v49[*(int *)(v76 + 36)];
      sub_20A515800(&qword_26763ACA0, (unint64_t *)&qword_26AC82470, v48);
      uint64_t v52 = *(void *)v51;
      sub_20A8CE8A0();
      uint64_t v99 = MEMORY[0x263F8EE78];
      if (v52 != v101)
      {
        uint64_t v99 = MEMORY[0x263F8EE78];
        do
        {
          uint64_t v54 = (void (*)(uint64_t *, void))sub_20A8CE8C0();
          uint64_t v55 = v91;
          (*v88)(v91);
          v54(&v101, 0);
          uint64_t v56 = v94;
          ((void (*)(char *, uint64_t, uint64_t))v97)(v94, v50, v45);
          sub_20A8CE8B0();
          (*v93)(v56, v45);
          (*v87)(v100, v55, v38);
          sub_20A8C8330();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_20A5159EC();
            uint64_t v58 = &v1[*(int *)(v57 + 48)];
            uint64_t v59 = v89;
            sub_20A4C8874((uint64_t)v1, v89);
            uint64_t v60 = sub_20A8C40E0();
            (*(void (**)(char *, uint64_t))(*(void *)(v60 - 8) + 8))(v58, v60);
          }
          else
          {
            uint64_t v59 = v89;
            sub_20A4C8874((uint64_t)v1, v89);
          }
          (*v86)(v6, v59, v7);
          sub_20A515A60(v59, (uint64_t (*)(void))type metadata accessor for StockViewModel);
          (*v85)(v6, 0, 1, v7);
          (*v84)(v100, v38);
          if ((*v83)(v6, 1, v7) == 1)
          {
            sub_20A515A60((uint64_t)v6, (uint64_t (*)(void))sub_20A4D4A5C);
          }
          else
          {
            uint64_t v61 = v7;
            uint64_t v62 = *v82;
            uint64_t v63 = v79;
            (*v82)(v79, v6, v61);
            v62(v92, v63, v61);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v99 = sub_20A46DD9C(0, *(void *)(v99 + 16) + 1, 1, v99);
            }
            unint64_t v65 = *(void *)(v99 + 16);
            unint64_t v64 = *(void *)(v99 + 24);
            if (v65 >= v64 >> 1) {
              uint64_t v99 = sub_20A46DD9C(v64 > 1, v65 + 1, 1, v99);
            }
            uint64_t v66 = v99;
            *(void *)(v99 + 16) = v65 + 1;
            v62((char *)(v66+ ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80))+ *(void *)(v80 + 72) * v65), v92, v61);
            uint64_t v7 = v61;
            uint64_t v38 = v81;
          }
          uint64_t v53 = *(void *)v51;
          uint64_t v45 = v95;
          uint64_t v50 = (uint64_t)v96;
          sub_20A8CE8A0();
        }
        while (v53 != v101);
      }
      sub_20A515A60(v50, (uint64_t (*)(void))sub_20A515704);
      (*v93)(v78, v45);
      sub_20A4AC9C8(v99);
      uint64_t v42 = *(void *)v70;
      uint64_t v43 = v71;
      uint64_t v25 = v72;
      sub_20A8CE8A0();
      uint64_t v35 = v43;
    }
    while (v42 != v101);
  }
  sub_20A515A60(v35, (uint64_t (*)(void))sub_20A515938);
  return v102;
}

void sub_20A515704()
{
  if (!qword_26763B7D8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7D450];
    sub_20A515844(255, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
    sub_20A515800(&qword_26763ACA0, (unint64_t *)&qword_26AC82470, v0);
    unint64_t v1 = sub_20A8CF4F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26763B7D8);
    }
  }
}

uint64_t sub_20A5157B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A515800(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A515844(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A515844(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    v8[2] = sub_20A5157B8(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    v8[3] = sub_20A5157B8(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A515938()
{
  if (!qword_26AC82E58)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, void *))MEMORY[0x263F7E0A8];
    sub_20A515844(255, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
    sub_20A515800((unint64_t *)&unk_26AC824A0, (unint64_t *)&qword_26AC6AD38, v0);
    unint64_t v1 = sub_20A8CF4F0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26AC82E58);
    }
  }
}

void sub_20A5159EC()
{
  if (!qword_26763B428)
  {
    type metadata accessor for StockViewModel();
    sub_20A8C40E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B428);
    }
  }
}

uint64_t sub_20A515A60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t dispatch thunk of DataRefreshManagerType.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataRefreshManagerType.add(refreshHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of DataRefreshManagerType.remove(refreshHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of RefreshHandler.refreshData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_20A515B10()
{
  uint64_t v1 = (unint64_t *)(v0 + 16);
  swift_beginAccess();
  unint64_t v2 = *(void *)(v0 + 16);
  unint64_t v15 = MEMORY[0x263F8EE78];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_20A8CF540();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x263F8EE78];
    goto LABEL_15;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x210527700](i, v2);
    }
    else
    {
      uint64_t v6 = *(void *)(v2 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v7 = MEMORY[0x2105289B0](v6 + 16);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v8 = v15;
LABEL_15:
  unint64_t *v1 = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = *v1;
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_17;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_20A8CF540();
  uint64_t v10 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_17:
  if (v10 >= 1)
  {
    for (uint64_t j = 0; j != v10; ++j)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        uint64_t v12 = MEMORY[0x210527700](j, v9);
      }
      else
      {
        uint64_t v12 = *(void *)(v9 + 8 * j + 32);
        swift_retain();
      }
      if (MEMORY[0x2105289B0](v12 + 16))
      {
        uint64_t v13 = *(void *)(v12 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(ObjectType, v13);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_20A515D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(v2 + 16);
  swift_beginAccess();
  unint64_t v5 = *(void *)(v2 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_20A8CF540();
    uint64_t v6 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v9 = MEMORY[0x210527700](i, v5);
    }
    else
    {
      uint64_t v9 = *(void *)(v5 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v10 = MEMORY[0x2105289B0](v9 + 16);
    swift_unknownObjectRelease();
    if (v10)
    {
      sub_20A8CF450();
      sub_20A8CF480();
      sub_20A8CF490();
      sub_20A8CF460();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v14;
LABEL_15:
  void *v4 = v11;
  swift_bridgeObjectRelease();
  type metadata accessor for RefreshHandlerProxy();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v12 + 24) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v13 = swift_beginAccess();
  MEMORY[0x2105268E0](v13);
  if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20A8CE690();
  }
  sub_20A8CE6B0();
  sub_20A8CE620();
  return swift_endAccess();
}

uint64_t sub_20A515F8C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataRefreshManager()
{
  return self;
}

uint64_t sub_20A515FE8()
{
  return sub_20A515B10();
}

uint64_t sub_20A51600C(uint64_t a1, uint64_t a2)
{
  return sub_20A515D70(a1, a2);
}

uint64_t sub_20A516030(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  swift_unknownObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_20A516124(v4, a1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(v3 + 16) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5160C8()
{
  sub_20A4380C4(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RefreshHandlerProxy()
{
  return self;
}

uint64_t sub_20A516124(unint64_t a1, uint64_t a2)
{
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_17:
    uint64_t v3 = sub_20A8CF540();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (unint64_t i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = MEMORY[0x210527700](i, a1);
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_14:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (i >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_17;
          }
          uint64_t v5 = *(void *)(a1 + 8 * i + 32);
          swift_retain();
          unint64_t v6 = i + 1;
          if (__OFADD__(i, 1)) {
            goto LABEL_14;
          }
        }
        uint64_t v7 = MEMORY[0x2105289B0](v5 + 16);
        if (v7 && (uint64_t v8 = v7, swift_unknownObjectRelease(), v8 == a2))
        {
          swift_release();
        }
        else
        {
          sub_20A8CF450();
          sub_20A8CF480();
          sub_20A8CF490();
          sub_20A8CF460();
        }
        if (v6 == v3) {
          return v11;
        }
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_20A516288()
{
  return sub_20A8CEB30();
}

id sub_20A51637C(uint64_t a1, uint64_t (*a2)(), uint64_t *a3, uint64_t a4)
{
  uint64_t v261 = a4;
  uint64_t v259 = a2;
  uint64_t v245 = a1;
  uint64_t v6 = sub_20A8C8DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v222 = v6;
  uint64_t v223 = v7;
  MEMORY[0x270FA5388](v6);
  long long v221 = (uint64_t *)((char *)&v220 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v224 = (uint64_t **)((char *)&v220 - v10);
  uint64_t v11 = sub_20A8C9A90();
  uint64_t v226 = *(void *)(v11 - 8);
  uint64_t v227 = v11;
  MEMORY[0x270FA5388](v11);
  long long v225 = (char *)&v220 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = sub_20A8C2B70();
  uint64_t v254 = *(void *)(v244 - 8);
  MEMORY[0x270FA5388](v244);
  uint64_t v235 = v13;
  long long v253 = (char *)&v220 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v243 = v14;
  uint64_t v252 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v234 = v15;
  uint64_t v242 = (char *)&v220 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8CCB60();
  uint64_t v247 = *(void *)(v16 - 8);
  uint64_t v248 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v240 = (void **)((char *)&v220 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v18);
  uint64_t v246 = (char *)&v220 - v19;
  uint64_t v20 = sub_20A8CCE00();
  uint64_t v250 = *(void *)(v20 - 8);
  uint64_t v251 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v255 = (char *)&v220 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for StockFeedEarningsViewModel();
  uint64_t v236 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v237 = v23;
  uint64_t v238 = (uint64_t *)((char *)&v220 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v24);
  uint64_t v239 = (uint64_t)&v220 - v25;
  uint64_t v26 = type metadata accessor for QuoteDetailViewModel();
  uint64_t v231 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v232 = (uint64_t *)((char *)&v220 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v230 = v27;
  MEMORY[0x270FA5388](v28);
  uint64_t v233 = (void (*)(char *, uint64_t, uint64_t))((char *)&v220 - v29);
  uint64_t v30 = type metadata accessor for StockChartModel();
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v229 = (uint64_t)&v220 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for StockFeedMastheadViewLayoutAttributes();
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v228 = (uint64_t)&v220 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v249 = (uint64_t)&v220 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for StockFeedLayoutModel();
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (double *)((char *)&v220 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v260 = v4;
  swift_beginAccess();
  long long v241 = (void *)(v4 + 32);
  sub_20A4342F4(v4 + 32, (uint64_t)v265);
  uint64_t v39 = *((void *)&v265[1] + 1);
  uint64_t v40 = *(void *)&v265[2];
  __swift_project_boxed_opaque_existential_1(v265, *((uint64_t *)&v265[1] + 1));
  long long v258 = a3;
  id v41 = objc_msgSend(a3, sel_traitCollection);
  uint64_t v42 = *(void *)(v40 + 8);
  uint64_t v43 = *(void (**)(id, uint64_t, uint64_t))(v42 + 8);
  v264[3] = v39;
  v264[4] = v40;
  uint64_t ObjectType = v40;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v264);
  v43(v41, v39, v42);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v265);
  sub_20A42C698();
  sub_20A8C9150();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A519444(0, &qword_26AC73F18, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadModel);
      memcpy(v265, (char *)v38 + *(int *)(v141 + 48), 0x208uLL);
      uint64_t v62 = type metadata accessor for StockFeedMastheadModel;
      uint64_t v67 = v249;
      sub_20A519548((uint64_t)v38, v249, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A5194B4();
      uint64_t v142 = (void *)sub_20A8CEB10();
      uint64_t v143 = *(void *)(ObjectType + 16);
      uint64_t v144 = *(uint64_t (**)(uint64_t, uint64_t))(v143 + 64);
      id v51 = v142;
      uint64_t v145 = (void *)v144(v39, v143);
      objc_msgSend(v51, sel_setBackgroundColor_, v145);

      char v146 = (char *)sub_20A8C8F10();
      sub_20A4E8CA8(v67, (double *)v265, v146);

      goto LABEL_9;
    case 2u:
      sub_20A519444(0, &qword_26AC6E3A8, (void (*)(uint64_t))type metadata accessor for StockChartModel);
      uint64_t v55 = (char *)v38 + *(int *)(v54 + 48);
      long long v56 = *((_OWORD *)v55 + 11);
      v265[10] = *((_OWORD *)v55 + 10);
      v265[11] = v56;
      *(void *)&v265[12] = *((void *)v55 + 24);
      long long v57 = *((_OWORD *)v55 + 7);
      v265[6] = *((_OWORD *)v55 + 6);
      v265[7] = v57;
      long long v58 = *((_OWORD *)v55 + 9);
      v265[8] = *((_OWORD *)v55 + 8);
      v265[9] = v58;
      long long v59 = *((_OWORD *)v55 + 5);
      v265[4] = *((_OWORD *)v55 + 4);
      v265[5] = v59;
      long long v60 = *((_OWORD *)v55 + 3);
      v265[2] = *((_OWORD *)v55 + 2);
      v265[3] = v60;
      long long v61 = *((_OWORD *)v55 + 1);
      v265[0] = *(_OWORD *)v55;
      v265[1] = v61;
      uint64_t v62 = type metadata accessor for StockChartModel;
      uint64_t v63 = v229;
      sub_20A519548((uint64_t)v38, v229, (uint64_t (*)(void))type metadata accessor for StockChartModel);
      sub_20A5193EC();
      id v51 = (id)sub_20A8CEB10();
      id v64 = *(id *)(v260 + 224);
      sub_20A8C7F50();
      sub_20A5B4244(v63, (uint64_t)v265, (uint64_t)v64);
      sub_20A4E7338((uint64_t)v265);
      uint64_t v65 = v63;
      goto LABEL_10;
    case 3u:
      sub_20A519444(0, &qword_26AC71BF0, (void (*)(uint64_t))type metadata accessor for QuoteDetailViewModel);
      memcpy(v265, (char *)v38 + *(int *)(v66 + 48), 0x109uLL);
      uint64_t v62 = type metadata accessor for QuoteDetailViewModel;
      uint64_t v67 = (uint64_t)v233;
      sub_20A519548((uint64_t)v38, (uint64_t)v233, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel);
      sub_20A519020();
      id v51 = (id)sub_20A8CEB10();
      long long v68 = (void *)sub_20A8C8F10();
      sub_20A5B1670(v67, (uint64_t)v265, v68);
      sub_20A4E72F0((uint64_t)v265);

      uint64_t v69 = (char *)sub_20A8C8F10();
      uint64_t v70 = (char *)*(id *)&v69[OBJC_IVAR____TtC8StocksUI15QuoteDetailView_attributionButton];

      id v71 = *(id *)&v70[OBJC_IVAR____TtC8StocksUI17AttributionButton_onTap];
      uint64_t v72 = swift_allocObject();
      swift_weakInit();
      uint64_t v73 = (void (*)(void, void, void))v232;
      sub_20A5190B4(v67, (uint64_t)v232, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel);
      unint64_t v74 = (*(unsigned __int8 *)(v231 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v231 + 80);
      uint64_t v75 = swift_allocObject();
      *(void *)(v75 + 16) = v72;
      sub_20A519548((uint64_t)v73, v75 + v74, (uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel);

      swift_release();
LABEL_9:
      uint64_t v65 = v67;
LABEL_10:
      sub_20A51968C(v65, (uint64_t (*)(void))v62);
      goto LABEL_17;
    case 4u:
      sub_20A519444(0, &qword_26AC76E18, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsViewModel);
      uint64_t v77 = (char *)v38 + *(int *)(v76 + 48);
      long long v78 = *((_OWORD *)v77 + 5);
      v265[4] = *((_OWORD *)v77 + 4);
      v265[5] = v78;
      long long v79 = *((_OWORD *)v77 + 7);
      v265[6] = *((_OWORD *)v77 + 6);
      v265[7] = v79;
      long long v80 = *((_OWORD *)v77 + 1);
      v265[0] = *(_OWORD *)v77;
      v265[1] = v80;
      long long v81 = *((_OWORD *)v77 + 3);
      v265[2] = *((_OWORD *)v77 + 2);
      v265[3] = v81;
      uint64_t v82 = v239;
      sub_20A519548((uint64_t)v38, v239, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);
      sub_20A518CCC();
      uint64_t v83 = (void *)sub_20A8CEB10();
      uint64_t v84 = *(void *)(ObjectType + 16);
      uint64_t v85 = *(uint64_t (**)(uint64_t, uint64_t))(v84 + 64);
      id v51 = v83;
      uint64_t v86 = (void *)v85(v39, v84);
      objc_msgSend(v51, sel_setBackgroundColor_, v86);

      uint64_t v87 = (char *)sub_20A8C8F10();
      sub_20A666A98(v82, (double *)v265, v87);

      uint64_t v88 = (char *)sub_20A8C8F10();
      uint64_t v89 = (char *)*(id *)&v88[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton];

      id v90 = *(id *)&v89[qword_26AC731B0];
      uint64_t v91 = swift_allocObject();
      swift_weakInit();
      int v92 = (void (*)(void, void, void))v238;
      sub_20A5190B4(v82, (uint64_t)v238, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);
      unint64_t v93 = (*(unsigned __int8 *)(v236 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v236 + 80);
      uint64_t v94 = swift_allocObject();
      *(void *)(v94 + 16) = v91;
      sub_20A519548((uint64_t)v92, v94 + v93, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);

      swift_release();
      sub_20A51968C(v82, (uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel);
      goto LABEL_17;
    case 5u:
      double v147 = v38[6];
      double v148 = v38[7];
      double v149 = v38[8];
      double v150 = v38[9];
      sub_20A518890();
      long long v151 = (void *)sub_20A8CEB10();
      uint64_t v152 = *(void *)(ObjectType + 16);
      uint64_t v153 = *(uint64_t (**)(uint64_t, uint64_t))(v152 + 64);
      id v51 = v151;
      char v154 = (void *)v153(v39, v152);
      objc_msgSend(v51, sel_setBackgroundColor_, v154);

      uint64_t v155 = *(void *)(v260 + 136);
      uint64_t v156 = (char *)sub_20A8C8F10();
      uint64_t v157 = *(void **)&v156[OBJC_IVAR____TtC8StocksUI11PlacardView_messageLabel];
      objc_msgSend(v157, sel_setFrame_, v147, v148, v149, v150);
      uint64_t v158 = (void *)sub_20A8CE240();
      objc_msgSend(v157, sel_setText_, v158);

      swift_beginAccess();
      uint64_t v159 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v155 + 16), *(void *)(v155 + 40));
      sub_20A431DD0();
      uint64_t v160 = (void *)sub_20A8CEE20();
      objc_msgSend(v157, sel_setFont_, v160);

      uint64_t v162 = v159[5];
      uint64_t v161 = v159[6];
      __swift_project_boxed_opaque_existential_1(v159 + 2, v162);
      uint64_t v163 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v161 + 16) + 40))(v162);
      objc_msgSend(v157, sel_setTextColor_, v163);

      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 6u:
      long long v164 = *((_OWORD *)v38 + 5);
      v265[4] = *((_OWORD *)v38 + 4);
      v265[5] = v164;
      long long v165 = *((_OWORD *)v38 + 7);
      v265[6] = *((_OWORD *)v38 + 6);
      v265[7] = v165;
      long long v166 = *((_OWORD *)v38 + 1);
      v265[0] = *(_OWORD *)v38;
      v265[1] = v166;
      long long v167 = *((_OWORD *)v38 + 3);
      v265[2] = *((_OWORD *)v38 + 2);
      v265[3] = v167;
      sub_20A518764();
      uint64_t v168 = (void *)sub_20A8CEB10();
      uint64_t v169 = *(void *)(ObjectType + 16);
      uint64_t v170 = *(uint64_t (**)(uint64_t, uint64_t))(v169 + 64);
      id v51 = v168;
      uint64_t v171 = (void *)v170(v39, v169);
      objc_msgSend(v51, sel_setBackgroundColor_, v171);

      sub_20A807B60(v263);
      v262[0] = v263[0];
      v262[1] = v263[1];
      v262[2] = v263[2];
      v262[3] = v263[3];
      v262[4] = v263[4];
      v262[5] = v263[5];
      uint64_t v172 = (void *)sub_20A8C8F10();
      sub_20A4DA728((uint64_t)v262, (double *)v265, (uint64_t)v172);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v173 = (char *)sub_20A8C8F10();
      uint64_t v174 = (char *)*(id *)&v173[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton];

      id v175 = *(id *)&v174[qword_26763BE80];
      swift_allocObject();
      swift_weakInit();

      swift_release();
      uint64_t v176 = (char *)sub_20A8C8F10();
      uint64_t v177 = (char *)*(id *)&v176[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton];

      id v178 = *(id *)&v177[qword_26763BE80];
      swift_allocObject();
      swift_weakInit();

      swift_release();
      goto LABEL_17;
    case 7u:
      (*(void (**)(char *, double *, uint64_t))(v250 + 32))(v255, v38, v251);
      uint64_t v95 = *(uint64_t (**)())(v260 + 216);
      boxed_opaque_existential_1 = *(uint64_t **)(v260 + 208);
      uint64_t v259 = v95;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v96 = swift_allocObject();
      swift_weakInit();
      uint64_t v97 = v252;
      int v98 = *(void **)(v252 + 16);
      uint64_t v99 = v242;
      uint64_t v100 = v243;
      uint64_t v249 = v252 + 16;
      uint64_t v238 = v98;
      ((void (*)(char *, uint64_t, uint64_t))v98)(v242, v245, v243);
      uint64_t v101 = v254;
      uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(v254 + 16);
      uint64_t v103 = v244;
      uint64_t v237 = v254 + 16;
      uint64_t v233 = v102;
      v102(v253, v261, v244);
      uint64_t v104 = *(unsigned __int8 *)(v97 + 80);
      uint64_t v105 = (v104 + 24) & ~v104;
      uint64_t v106 = *(unsigned __int8 *)(v101 + 80);
      uint64_t v107 = (v234 + v106 + v105) & ~v106;
      uint64_t v234 = v104 | v106 | 7;
      v235 += v107;
      uint64_t v108 = swift_allocObject();
      *(void *)(v108 + 16) = v96;
      uint64_t v236 = v105;
      uint64_t v109 = *(void **)(v97 + 32);
      uint64_t v252 = v97 + 32;
      uint64_t v232 = v109;
      ((void (*)(uint64_t, char *, uint64_t))v109)(v108 + v105, v99, v100);
      uint64_t v239 = v107;
      uint64_t v110 = *(uint64_t (**)())(v101 + 32);
      uint64_t v254 = v101 + 32;
      ((void (*)(uint64_t, char *, uint64_t))v110)(v108 + v107, v253, v103);
      swift_retain();
      uint64_t v111 = v246;
      sub_20A8CC990();
      swift_release();
      swift_release();
      uint64_t v113 = v247;
      uint64_t v112 = v248;
      uint64_t v114 = v240;
      (*(void (**)(void **, char *, uint64_t))(v247 + 16))(v240, v111, v248);
      int v115 = (*(uint64_t (**)(void **, uint64_t))(v113 + 88))(v114, v112);
      if (v115 == *MEMORY[0x263F59928])
      {
        (*(void (**)(void **, uint64_t))(v113 + 96))(v114, v112);
        uint64_t v116 = *v114;
        uint64_t v117 = v260;
        uint64_t v118 = *(void *)(v260 + 56);
        uint64_t v119 = *(void *)(v260 + 64);
        uint64_t v120 = __swift_project_boxed_opaque_existential_1(v241, v118);
        uint64_t v121 = *(void *)(v118 - 8);
        double v122 = MEMORY[0x270FA5388](v120);
        unint64_t v124 = (char *)&v220 - ((v123 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v121 + 16))(v124, v122);
        uint64_t v125 = *(void *)(v119 + 16);
        uint64_t v126 = *(uint64_t (**)(uint64_t, uint64_t))(v125 + 64);
        id v51 = v116;
        uint64_t v127 = (void *)v126(v118, v125);
        (*(void (**)(char *, uint64_t))(v121 + 8))(v124, v118);
        objc_msgSend(v51, sel_setBackgroundColor_, v127);

        uint64_t v128 = (void *)sub_20A8C8EF0();
        uint64_t v129 = *(void *)(v117 + 56);
        uint64_t v130 = *(void *)(v117 + 64);
        long long v131 = __swift_project_boxed_opaque_existential_1(v241, v129);
        uint64_t v132 = *(void *)(v129 - 8);
        double v133 = MEMORY[0x270FA5388](v131);
        long long v135 = (char *)&v220 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v132 + 16))(v135, v133);
        long long v136 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v130 + 16) + 72))(v129);
        (*(void (**)(char *, uint64_t))(v132 + 8))(v135, v129);
        objc_msgSend(v128, sel_setBackgroundColor_, v136);

        long long v137 = (void *)sub_20A8C8EF0();
        sub_20A8C9A70();

        long long v138 = (void *)sub_20A8C8EF0();
        sub_20A8C9A80();

        uint64_t v139 = (void *)sub_20A8C8EF0();
        (*(void (**)(char *, void, uint64_t))(v226 + 104))(v225, *MEMORY[0x263F7D8D8], v227);
        sub_20A8C9AA0();

        id v140 = objc_msgSend(v51, sel_layer);
        objc_msgSend(v140, sel_setCornerRadius_, 6.0);

        objc_msgSend(v51, sel_setClipsToBounds_, 0);
LABEL_15:
        (*(void (**)(char *, uint64_t))(v247 + 8))(v246, v248);
        (*(void (**)(char *, uint64_t))(v250 + 8))(v255, v251);
        goto LABEL_17;
      }
      if (v115 == *MEMORY[0x263F59930])
      {
        (*(void (**)(void **, uint64_t))(v113 + 96))(v114, v112);
        id v51 = *v114;
        uint64_t v179 = (uint64_t *)swift_allocObject();
        uint64_t v180 = sub_20A8C9E40();
        uint64_t v181 = MEMORY[0x263F7D9A8];
        v179[5] = v180;
        v179[6] = v181;
        __swift_allocate_boxed_opaque_existential_1(v179 + 2);
        sub_20A8C9E30();
        uint64_t v182 = v223;
        *uint64_t v224 = v179;
        uint64_t v183 = v182;
        uint64_t v184 = *(void (**)(void))(v182 + 104);
        uint64_t v185 = v222;
        v184();
        sub_20A518A38();
        uint64_t v187 = v186;
        uint64_t v188 = swift_allocBox();
        uint64_t v190 = v189 + *(int *)(v187 + 48);
        uint64_t v259 = v110;
        uint64_t v191 = *(void (**)(uint64_t, uint64_t **, uint64_t))(v183 + 16);
        uint64_t v192 = v224;
        v191(v189, v224, v185);
        v191(v190, v192, v185);
        long long v193 = v221;
        *long long v221 = v188;
        ((void (*)(uint64_t *, void, uint64_t))v184)(v193, *MEMORY[0x263F7D5A8], v185);
        sub_20A8C8F00();
        uint64_t v194 = (void *)sub_20A8C8EF0();
        uint64_t v196 = *(void *)(v260 + 56);
        uint64_t v195 = *(void *)(v260 + 64);
        long long v197 = __swift_project_boxed_opaque_existential_1(v241, v196);
        long long v258 = &v220;
        uint64_t v198 = *(void *)(v196 - 8);
        double v199 = MEMORY[0x270FA5388](v197);
        long long v201 = (char *)&v220 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v198 + 16))(v201, v199);
        uint64_t v202 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v195 + 16) + 72))(v196);
        (*(void (**)(char *, uint64_t))(v198 + 8))(v201, v196);
        objc_msgSend(v194, sel_setBackgroundColor_, v202);

        uint64_t v203 = (void *)sub_20A8C8EF0();
        sub_20A8C9A70();

        uint64_t v204 = (void *)sub_20A8C8EF0();
        sub_20A8C9A80();

        long long v205 = (void *)sub_20A8C8EF0();
        (*(void (**)(char *, void, uint64_t))(v226 + 104))(v225, *MEMORY[0x263F7D8D8], v227);
        sub_20A8C9AA0();

        uint64_t v206 = (void *)sub_20A8C8F10();
        uint64_t v207 = (void *)sub_20A8CD230();

        uint64_t v208 = (void *)sub_20A8CDB60();
        uint64_t v209 = swift_allocObject();
        swift_weakInit();
        uint64_t v211 = v242;
        uint64_t v210 = v243;
        ((void (*)(char *, uint64_t, uint64_t))v238)(v242, v245, v243);
        uint64_t v212 = v253;
        uint64_t v213 = v244;
        v233(v253, v261, v244);
        uint64_t v214 = swift_allocObject();
        *(void *)(v214 + 16) = v209;
        ((void (*)(uint64_t, char *, uint64_t))v232)(v214 + v236, v211, v210);
        ((void (*)(uint64_t, char *, uint64_t))v259)(v214 + v239, v212, v213);
        *(void *)&v265[2] = sub_20A518BFC;
        *((void *)&v265[2] + 1) = v214;
        *(void *)&v265[0] = MEMORY[0x263EF8330];
        *((void *)&v265[0] + 1) = 1107296256;
        *(void *)&v265[1] = sub_20A4713FC;
        *((void *)&v265[1] + 1) = &block_descriptor_10;
        uint64_t v215 = _Block_copy(v265);
        swift_release();
        objc_msgSend(v208, sel_onTouchUpInside_, v215);
        _Block_release(v215);

        id v216 = objc_msgSend(v51, sel_layer);
        objc_msgSend(v216, sel_setCornerRadius_, 6.0);

        objc_msgSend(v51, sel_setClipsToBounds_, 0);
        (*(void (**)(uint64_t **, uint64_t))(v223 + 8))(v224, v185);
        goto LABEL_15;
      }
      id v51 = (id)sub_20A8CCB50();
      id v217 = objc_msgSend(v51, sel_layer);
      objc_msgSend(v217, sel_setCornerRadius_, 6.0);

      objc_msgSend(v51, sel_setClipsToBounds_, 0);
      uint64_t v218 = *(void (**)(char *, uint64_t))(v113 + 8);
      v218(v111, v112);
      (*(void (**)(char *, uint64_t))(v250 + 8))(v255, v251);
      v218((char *)v114, v112);
LABEL_17:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v264);
      return v51;
    default:
      sub_20A42CB10();
      uint64_t v45 = (uint64_t)v38 + *(int *)(v44 + 48);
      uint64_t v259 = type metadata accessor for StockFeedMastheadModel;
      uint64_t v46 = v249;
      sub_20A519548((uint64_t)v38, v249, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v47 = v228;
      sub_20A519548(v45, v228, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      sub_20A5195B0();
      uint64_t v48 = (void *)sub_20A8CEB10();
      uint64_t v49 = *(void *)(ObjectType + 16);
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 64);
      id v51 = v48;
      uint64_t v52 = (void *)v50(v39, v49);
      objc_msgSend(v51, sel_setBackgroundColor_, v52);

      uint64_t v53 = (char *)sub_20A8C8F10();
      sub_20A5D1ED0(v46, v47, v53);

      sub_20A51968C(v47, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadViewLayoutAttributes);
      sub_20A51968C(v46, (uint64_t (*)(void))v259);
      goto LABEL_17;
  }
}

uint64_t sub_20A517F9C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      uint64_t v4 = type metadata accessor for QuoteDetailViewModel();
      sub_20A58C32C(a2 + *(int *)(v4 + 20));
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A518034(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      uint64_t v4 = type metadata accessor for StockFeedEarningsViewModel();
      sub_20A58C698(a2 + *(int *)(v4 + 20), *(void *)(a2 + *(int *)(v4 + 32)), *(void *)(a2 + *(int *)(v4 + 32) + 8));
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A5180DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_20A8CCFB0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CC5E0();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) != *MEMORY[0x263F59AD0]) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
  uint64_t v10 = sub_20A8CD200();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v9, v10) != *MEMORY[0x263F59B98]) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A58CAD0(a3, a4);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A5182F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      sub_20A58CAD0(a2, a3);
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A518388(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (MEMORY[0x2105289B0](result + 16))
    {
      a2();
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20A518414()
{
  sub_20A4380C4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 232);
  return v0;
}

uint64_t sub_20A51848C()
{
  sub_20A518414();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_20A5184E4()
{
  return sub_20A516288();
}

id sub_20A51850C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)()@<X1>, uint64_t **a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  id result = sub_20A51637C(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_20A51853C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 32, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 32);
  sub_20A42BEBC(&v9, v2 + 32);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  return sub_20A8CA6E0();
}

uint64_t sub_20A5186D4()
{
  return sub_20A519644(&qword_26AC72240, (void (*)(uint64_t))type metadata accessor for StockFeedLayoutModel);
}

uint64_t sub_20A51871C()
{
  return sub_20A519644(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void sub_20A518764()
{
  if (!qword_26AC6A130)
  {
    type metadata accessor for BilingualFeedPromptView();
    sub_20A519644(&qword_26AC74528, (void (*)(uint64_t))type metadata accessor for BilingualFeedPromptView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A130);
    }
  }
}

uint64_t sub_20A5187F8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A518830()
{
  return sub_20A518388(v0, (void (*)(void))sub_20A58CCBC);
}

uint64_t sub_20A518860()
{
  return sub_20A518388(v0, (void (*)(void))sub_20A58CCF0);
}

void sub_20A518890()
{
  if (!qword_26AC6A140)
  {
    type metadata accessor for PlacardView();
    sub_20A519644(&qword_26AC6CBC0, (void (*)(uint64_t))type metadata accessor for PlacardView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A140);
    }
  }
}

uint64_t sub_20A518928(uint64_t a1)
{
  sub_20A42C4A4();
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v6 = *(void *)(sub_20A8C2B70() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A5180DC(a1, v7, v1 + v4, v8);
}

uint64_t sub_20A518A00()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

void sub_20A518A38()
{
  if (!qword_26AC82488)
  {
    sub_20A8C8DF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC82488);
    }
  }
}

uint64_t objectdestroy_5Tm()
{
  sub_20A42C4A4();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = sub_20A8C2B70();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v8, v6);

  return swift_deallocObject();
}

uint64_t sub_20A518BFC()
{
  sub_20A42C4A4();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = *(void *)(sub_20A8C2B70() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_20A5182F0(v5, v0 + v2, v6);
}

void sub_20A518CCC()
{
  if (!qword_26AC6A120)
  {
    type metadata accessor for StockFeedEarningsView();
    sub_20A519644((unint64_t *)&unk_26AC731D0, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A120);
    }
  }
}

uint64_t sub_20A518D60()
{
  uint64_t v1 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  uint64_t v17 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v17 + 24) & ~v17);
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = v2 + v1[5];
  v4(v5, v3);
  uint64_t v6 = (int *)type metadata accessor for StockEarningsModel();
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = sub_20A8C2800();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  uint64_t v11 = v5 + v6[6];
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v12(v11, 1, v8)) {
    v10(v11, v8);
  }
  uint64_t v13 = v5 + v6[7];
  uint64_t v14 = sub_20A8C2AF0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  v10(v2 + v1[6], v8);
  uint64_t v15 = v2 + v1[7];
  if (!v12(v15, 1, v8)) {
    v10(v15, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A518FF4()
{
  return sub_20A51935C((uint64_t (*)(void))type metadata accessor for StockFeedEarningsViewModel, sub_20A518034);
}

void sub_20A519020()
{
  if (!qword_26AC6A110)
  {
    type metadata accessor for QuoteDetailView();
    sub_20A519644(&qword_26AC6E300, (void (*)(uint64_t))type metadata accessor for QuoteDetailView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A110);
    }
  }
}

uint64_t sub_20A5190B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A51911C()
{
  uint64_t v1 = (int *)type metadata accessor for QuoteDetailViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  swift_release();
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_20A8C3E10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  uint64_t v7 = v4 + v1[5];
  uint64_t v8 = sub_20A8C2CB0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = v4 + v1[6];
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A519330()
{
  return sub_20A51935C((uint64_t (*)(void))type metadata accessor for QuoteDetailViewModel, sub_20A517F9C);
}

uint64_t sub_20A51935C(uint64_t (*a1)(void), uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1(0) - 8);
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a2(v4, v5);
}

void sub_20A5193EC()
{
  if (!qword_26AC69D00)
  {
    type metadata accessor for StockChartViewController(255);
    unint64_t v0 = sub_20A8C7F60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69D00);
    }
  }
}

void sub_20A519444(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_20A5194B4()
{
  if (!qword_26AC6A118)
  {
    type metadata accessor for StockFeedPriceView();
    sub_20A519644(qword_26AC70978, (void (*)(uint64_t))type metadata accessor for StockFeedPriceView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A118);
    }
  }
}

uint64_t sub_20A519548(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A5195B0()
{
  if (!qword_26AC6A128)
  {
    type metadata accessor for StockFeedMastheadView();
    sub_20A519644(&qword_26AC73228, (void (*)(uint64_t))type metadata accessor for StockFeedMastheadView);
    unint64_t v0 = sub_20A8C8F20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A128);
    }
  }
}

uint64_t sub_20A519644(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A51968C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id StockActivityItemsConfiguration.__allocating_init(stock:quote:)(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a1;
  sub_20A51C0D0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = objc_allocWithZone(v3);
  sub_20A45F33C();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20A8D5CA0;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v14(v12, (uint64_t)a1, v9);
  uint64_t v15 = a2;
  sub_20A4BECB4(a2, (uint64_t)v8);
  uint64_t v16 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
  uint64_t v17 = (char *)objc_allocWithZone(v16);
  v14(&v17[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], (uint64_t)v12, v9);
  sub_20A4BECB4((uint64_t)v8, (uint64_t)&v17[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote]);
  v27.receiver = v17;
  v27.super_class = v16;
  id v18 = objc_msgSendSuper2(&v27, sel_init);
  sub_20A5199D4((uint64_t)v8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v12, v9);
  *(void *)(v13 + 32) = v18;
  uint64_t v26 = v13;
  sub_20A8CE620();
  sub_20A4D42C0(0, &qword_26AC82390);
  uint64_t v20 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v25, sel_initNAWithActivityItemSources_, v20);

  sub_20A5199D4(v15);
  v19(v24, v9);
  return v21;
}

uint64_t type metadata accessor for StockShareActivityItemSource()
{
  uint64_t result = qword_26AC81BC8;
  if (!qword_26AC81BC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5199D4(uint64_t a1)
{
  sub_20A51C0D0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id StockActivityItemsConfiguration.__allocating_init(objects:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_20A4D42C0(0, &qword_26763B7E8);
  uint64_t v2 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id StockActivityItemsConfiguration.init(objects:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A4D42C0(0, &qword_26763B7E8);
  uint64_t v2 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id StockActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_20A519C88();
  uint64_t v2 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

unint64_t sub_20A519C88()
{
  unint64_t result = qword_26763B7F0;
  if (!qword_26763B7F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763B7F0);
  }
  return result;
}

id StockActivityItemsConfiguration.init(itemProviders:)()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_20A519C88();
  uint64_t v2 = (void *)sub_20A8CE5D0();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  id v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

uint64_t type metadata accessor for StockActivityItemsConfiguration()
{
  return self;
}

uint64_t sub_20A519E00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v173 = sub_20A8C2530();
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  uint64_t v171 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_20A8C3410();
  uint64_t v168 = *(void *)(v169 - 8);
  MEMORY[0x270FA5388](v169);
  long long v167 = (char *)&v129 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_20A8C26B0();
  uint64_t v165 = *(void *)(v166 - 8);
  MEMORY[0x270FA5388](v166);
  uint64_t v162 = (char *)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_20A8C26C0();
  uint64_t v163 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v164);
  uint64_t v161 = (char *)&v129 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_20A8C2690();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v158 = (char *)&v129 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_20A8C2630();
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  uint64_t v153 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_20A8C2640();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v152 = (char *)&v129 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C2AF0();
  MEMORY[0x270FA5388](v13 - 8);
  long long v151 = (char *)&v129 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_20A8C2A80();
  MEMORY[0x270FA5388](v15 - 8);
  double v149 = (char *)&v129 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C2990();
  MEMORY[0x270FA5388](v17 - 8);
  double v147 = (char *)&v129 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C2470();
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v145 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A51C0D0(0, &qword_26AC68C80, MEMORY[0x263F06FF0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v143 = (char *)&v129 - v23;
  sub_20A51C0D0(0, &qword_26AC68C88, MEMORY[0x263F07008], v21);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v176 = (char *)&v129 - v25;
  uint64_t v180 = sub_20A8C26F0();
  uint64_t v150 = *(void *)(v180 - 8);
  MEMORY[0x270FA5388](v180);
  uint64_t v142 = (char *)&v129 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v144 = (char *)&v129 - v28;
  MEMORY[0x270FA5388](v29);
  char v146 = (char *)&v129 - v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v177 = (char *)&v129 - v32;
  uint64_t v179 = sub_20A8C2800();
  uint64_t v148 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  id v178 = (char *)&v129 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_20A8C4030();
  MEMORY[0x270FA5388](v34 - 8);
  uint64_t v141 = (char *)&v129 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v139 = (uint64_t *)((char *)&v129 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v38);
  uint64_t v181 = (uint64_t)&v129 - v39;
  sub_20A51C0D0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], v21);
  MEMORY[0x270FA5388](v40 - 8);
  id v140 = (char *)&v129 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v129 - v43;
  uint64_t v45 = sub_20A8C3E10();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v182 = (char *)&v129 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = a1;
  uint64_t v196 = a2;
  __swift_allocate_boxed_opaque_existential_1(&v194);
  sub_20A8C9680();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v194, v195);
  sub_20A8C9640();
  uint64_t v192 = a1;
  uint64_t v193 = a2;
  __swift_allocate_boxed_opaque_existential_1(&v191);
  uint64_t v174 = a1;
  uint64_t v175 = a2;
  sub_20A8C9680();
  uint64_t v48 = v3 + OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock;
  uint64_t v187 = sub_20A8C3EF0();
  uint64_t v188 = v49;
  swift_bridgeObjectRetain();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  uint64_t v51 = v187;
  uint64_t v50 = v188;
  sub_20A8C3E60();
  uint64_t v187 = v51;
  uint64_t v188 = v50;
  uint64_t v52 = v45;
  uint64_t v53 = v46;
  swift_bridgeObjectRetain();
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v191, v192);
  sub_20A8C9650();
  swift_bridgeObjectRelease();
  sub_20A4BECB4(v3 + OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote, (uint64_t)v44);
  int v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v52);
  uint64_t v55 = &off_263FDE000;
  uint64_t v170 = v48;
  if (v54 == 1)
  {
    sub_20A5199D4((uint64_t)v44);
LABEL_25:
    sub_20A4342F4((uint64_t)&v191, (uint64_t)&v187);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v194, v195);
    sub_20A8C9660();
    sub_20A51C134((uint64_t)&v187);
    uint64_t v118 = v174;
    uint64_t v119 = v175;
    uint64_t v189 = v174;
    uint64_t v190 = v175;
    __swift_allocate_boxed_opaque_existential_1(&v187);
    sub_20A8C9680();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v121 = self;
    id v122 = objc_msgSend(v121, (SEL)v55[444], ObjCClassFromMetadata);
    uint64_t v123 = sub_20A8C2370();
    uint64_t v125 = v124;

    v184[0] = v123;
    v184[1] = v125;
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v187, v189);
    sub_20A8C9630();
    swift_bridgeObjectRelease();
    uint64_t v126 = v171;
    sub_20A8C3E30();
    sub_20A8C24C0();
    (*(void (**)(char *, uint64_t))(v172 + 8))(v126, v173);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v187, v189);
    sub_20A8C9620();
    swift_bridgeObjectRelease();
    sub_20A4342F4((uint64_t)&v187, (uint64_t)v184);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v194, v195);
    sub_20A8C9660();
    sub_20A51C134((uint64_t)v184);
    uint64_t v185 = v118;
    uint64_t v186 = v119;
    __swift_allocate_boxed_opaque_existential_1(v184);
    sub_20A8C9680();
    id v127 = objc_msgSend(v121, (SEL)v55[444], ObjCClassFromMetadata);
    sub_20A8C2370();

    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v184, v185);
    sub_20A8C9630();
    swift_bridgeObjectRelease();
    sub_20A4342F4((uint64_t)v184, (uint64_t)v183);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v194, v195);
    sub_20A8C9660();
    sub_20A51C134((uint64_t)v183);
    __swift_project_boxed_opaque_existential_1(&v194, v195);
    uint64_t v128 = sub_20A8C9670();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v184);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v187);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v191);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v194);
    return v128;
  }
  long long v56 = v182;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v182, v44, v52);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v191, v192);
  sub_20A8C9640();
  uint64_t v57 = (uint64_t)v140;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v140, v56, v52);
  uint64_t v131 = v53;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v57, 0, 1, v52);
  long long v58 = v141;
  sub_20A8C3E70();
  uint64_t v59 = v181;
  sub_20A5EC850(v57, v58, 9666786, 0xA300000000000000, v181);
  char v60 = *(unsigned char *)(v59 + 8);
  uint64_t v132 = v52;
  if (v60)
  {
    uint64_t v61 = *(void *)(v59 + 72);
    uint64_t v129 = *(void *)(v59 + 64);
    uint64_t v130 = v61;
    swift_bridgeObjectRetain();
    goto LABEL_21;
  }
  double v62 = *(double *)v59;
  if (qword_26AC6D680 == -1)
  {
    if (v62 == 0.0) {
      goto LABEL_12;
    }
  }
  else
  {
    swift_once();
    if (v62 == 0.0) {
      goto LABEL_12;
    }
  }
  if (fabs(v62) < 5.0)
  {
    if (qword_267639BA8 != -1) {
      swift_once();
    }
    uint64_t v63 = &qword_267652F08;
    goto LABEL_15;
  }
LABEL_12:
  if (qword_26AC6D5C0 != -1) {
    swift_once();
  }
  uint64_t v63 = &qword_26AC9E948;
LABEL_15:
  id v64 = (id)*v63;
  objc_msgSend(v64, sel_setNumberStyle_, 1);
  id v65 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v62);
  id v66 = objc_msgSend(v64, sel_stringFromNumber_, v65);

  if (!v66)
  {

    uint64_t v70 = v139;
    sub_20A458F00(v59, (uint64_t)v139);
LABEL_19:
    uint64_t v67 = v70[8];
    uint64_t v69 = v70[9];
    swift_bridgeObjectRetain();
    goto LABEL_20;
  }
  uint64_t v67 = sub_20A8CE280();
  uint64_t v69 = v68;

  uint64_t v70 = v139;
  sub_20A458F00(v59, (uint64_t)v139);
  if (!v69) {
    goto LABEL_19;
  }
LABEL_20:
  uint64_t v129 = v67;
  uint64_t v130 = v69;
  sub_20A49716C((uint64_t)v70);
LABEL_21:
  id v71 = v178;
  sub_20A8C3DA0();
  uint64_t v72 = v176;
  sub_20A8C2590();
  uint64_t v137 = sub_20A8C25A0();
  uint64_t v73 = *(void *)(v137 - 8);
  long long v136 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56);
  uint64_t v138 = v73 + 56;
  v136(v72, 0, 1, v137);
  uint64_t v134 = sub_20A8C2580();
  uint64_t v74 = *(void *)(v134 - 8);
  double v133 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56);
  uint64_t v135 = v74 + 56;
  uint64_t v75 = v143;
  v133(v143, 1, 1, v134);
  sub_20A8C2450();
  sub_20A8C2910();
  sub_20A8C29F0();
  sub_20A8C2AC0();
  uint64_t v76 = v177;
  sub_20A8C25C0();
  uint64_t v141 = (char *)sub_20A51C224();
  uint64_t v77 = v180;
  sub_20A8C27E0();
  uint64_t v139 = *(uint64_t **)(v150 + 8);
  ((void (*)(char *, uint64_t))v139)(v76, v77);
  id v140 = *(char **)(v148 + 8);
  ((void (*)(char *, uint64_t))v140)(v71, v179);
  uint64_t v150 = v187;
  uint64_t v148 = v188;
  sub_20A8C3DA0();
  v136(v176, 1, 1, v137);
  v133(v75, 1, 1, v134);
  sub_20A8C2450();
  sub_20A8C2910();
  sub_20A8C29F0();
  sub_20A8C2AC0();
  long long v78 = v142;
  sub_20A8C25C0();
  long long v79 = v153;
  sub_20A8C2620();
  long long v80 = v152;
  sub_20A8C2610();
  (*(void (**)(char *, uint64_t))(v156 + 8))(v79, v157);
  long long v81 = v144;
  sub_20A8C25D0();
  (*(void (**)(char *, uint64_t))(v154 + 8))(v80, v155);
  uint64_t v82 = v180;
  uint64_t v83 = (void (*)(char *, uint64_t))v139;
  ((void (*)(char *, uint64_t))v139)(v78, v180);
  uint64_t v84 = v158;
  sub_20A8C2680();
  uint64_t v85 = v146;
  sub_20A8C26D0();
  (*(void (**)(char *, uint64_t))(v159 + 8))(v84, v160);
  uint64_t v86 = v82;
  v83(v81, v82);
  uint64_t v87 = v165;
  uint64_t v88 = v162;
  uint64_t v89 = v166;
  (*(void (**)(char *, void, uint64_t))(v165 + 104))(v162, *MEMORY[0x263F071C0], v166);
  id v90 = v161;
  sub_20A8C26A0();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v89);
  uint64_t v91 = v177;
  sub_20A8C26E0();
  (*(void (**)(char *, uint64_t))(v163 + 8))(v90, v164);
  v83(v85, v86);
  int v92 = v178;
  sub_20A8C27E0();
  v83(v91, v86);
  uint64_t v93 = v179;
  uint64_t v94 = v140;
  ((void (*)(char *, uint64_t))v140)(v92, v179);
  uint64_t v95 = v187;
  uint64_t v96 = v188;
  sub_20A8C3DA0();
  uint64_t v97 = v92;
  id v98 = sub_20A84DFDC();
  ((void (*)(char *, uint64_t))v94)(v97, v93);
  type metadata accessor for Localized();
  uint64_t v99 = swift_getObjCClassFromMetadata();
  id v100 = objc_msgSend(self, sel_bundleForClass_, v99);
  sub_20A8C2370();

  sub_20A51C1BC(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  uint64_t v101 = swift_allocObject();
  *(_OWORD *)(v101 + 16) = xmmword_20A8D5CB0;
  uint64_t v102 = MEMORY[0x263F8D750];
  *(void *)(v101 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v101 + 64) = v102;
  *(void *)(v101 + 32) = v98;
  uint64_t v103 = MEMORY[0x263F8D310];
  *(void *)(v101 + 96) = MEMORY[0x263F8D310];
  unint64_t v104 = sub_20A43F830();
  uint64_t v105 = v148;
  *(void *)(v101 + 72) = v150;
  *(void *)(v101 + 80) = v105;
  *(void *)(v101 + 136) = v103;
  *(void *)(v101 + 144) = v104;
  *(void *)(v101 + 104) = v104;
  *(void *)(v101 + 112) = v95;
  *(void *)(v101 + 120) = v96;
  id v178 = (char *)sub_20A8CE2B0();
  uint64_t v179 = v106;
  swift_bridgeObjectRelease();
  uint64_t v107 = v168;
  uint64_t v108 = *(void (**)(char *, void, uint64_t))(v168 + 104);
  uint64_t v109 = (uint64_t)v167;
  uint64_t v110 = v169;
  v108(v167, *MEMORY[0x263F7AB90], v169);
  uint64_t v180 = sub_20A5EBCFC(v109, 0);
  uint64_t v112 = v111;
  uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
  v113(v109, v110);
  v108((char *)v109, *MEMORY[0x263F7AB78], v110);
  sub_20A5EBCFC(v109, 0);
  v113(v109, v110);
  sub_20A8C3D30();
  uint64_t v115 = v114;
  swift_bridgeObjectRelease();
  if (!v115)
  {
LABEL_24:
    uint64_t v55 = &off_263FDE000;
    uint64_t v187 = v129;
    uint64_t v188 = v130;
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v191, v192);
    sub_20A8C9630();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v191, v192);
    sub_20A8C9640();
    uint64_t v187 = v180;
    uint64_t v188 = v112;
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v191, v192);
    sub_20A8C9630();
    swift_bridgeObjectRelease();
    sub_20A49716C(v181);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v182, v132);
    goto LABEL_25;
  }
  uint64_t result = sub_20A8C3D30();
  if (v117)
  {
    uint64_t v187 = result;
    uint64_t v188 = v117;
    swift_bridgeObjectRetain();
    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t sub_20A51B8F0()
{
  return type metadata accessor for StockShareActivityItemSource();
}

void sub_20A51B8F8()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A51C0D0(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

double sub_20A51BB54@<D0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  if (!a1)
  {
    *(void *)(a2 + 24) = sub_20A8C2530();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
    sub_20A8C3E30();
    return result;
  }
  uint64_t v4 = sub_20A8CE280();
  uint64_t v6 = v5;
  if (v4 == sub_20A8CE280() && v6 == v7)
  {
    id v11 = a1;
    swift_bridgeObjectRelease_n();
LABEL_12:
    uint64_t v12 = sub_20A8C9040();
    uint64_t v13 = sub_20A519E00(v12, MEMORY[0x263F7D630]);
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      *(void *)(a2 + 24) = MEMORY[0x263F8D310];

      *(void *)a2 = v15;
      *(void *)(a2 + 8) = v16;
    }
    else
    {

      double result = 0.0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
    return result;
  }
  char v9 = sub_20A8CF760();
  id v17 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_12;
  }
  *(void *)(a2 + 24) = sub_20A8C2530();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)a2);
  sub_20A8C3E30();

  return result;
}

uint64_t sub_20A51BF44()
{
  sub_20A45F33C();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20A8D5CA0;
  *(void *)(v1 + 32) = v0;
  sub_20A8CE620();
  sub_20A51C0D0(0, &qword_26763B768, (uint64_t (*)(uint64_t))type metadata accessor for ActivityType, MEMORY[0x263F8E0F8]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8DB4F0;
  uint64_t v3 = (void *)*MEMORY[0x263F6BCD0];
  uint64_t v4 = (void *)*MEMORY[0x263F6BD40];
  *(void *)(v2 + 32) = *MEMORY[0x263F6BCD0];
  *(void *)(v2 + 40) = v4;
  uint64_t v5 = (void *)*MEMORY[0x263F6BCE0];
  uint64_t v6 = (void *)*MEMORY[0x263F6BD48];
  *(void *)(v2 + 48) = *MEMORY[0x263F6BCE0];
  *(void *)(v2 + 56) = v6;
  uint64_t v7 = (void *)*MEMORY[0x263F6BD18];
  uint64_t v8 = (void *)*MEMORY[0x263F6BD30];
  *(void *)(v2 + 64) = *MEMORY[0x263F6BD18];
  *(void *)(v2 + 72) = v8;
  char v9 = (void *)*MEMORY[0x263F6BCE8];
  *(void *)(v2 + 80) = *MEMORY[0x263F6BCE8];
  objc_allocWithZone((Class)sub_20A8C9DF0());
  id v10 = v0;
  id v11 = v3;
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  return sub_20A8C9DE0();
}

void sub_20A51C0D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A51C134(uint64_t a1)
{
  sub_20A51C1BC(0, &qword_26763B800, &qword_26763B808, MEMORY[0x263F7D820], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A51C1BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_20A51C224()
{
  unint64_t result = qword_26AC68C90;
  if (!qword_26AC68C90)
  {
    sub_20A8C26F0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68C90);
  }
  return result;
}

uint64_t sub_20A51C27C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A51C314()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A51C398()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A51C42C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_20A51C678();
  *a1 = result;
  return result;
}

void sub_20A51C45C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xEB00000000647261;
  uint64_t v5 = 0x63616C507377656ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 25697;
    unint64_t v4 = 0xE200000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1937204590;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_20A51C4B4()
{
  unint64_t result = qword_26AC824F0;
  if (!qword_26AC824F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC824F0);
  }
  return result;
}

uint64_t sub_20A51C508(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A44F75C(*a1, *a2);
}

uint64_t sub_20A51C514()
{
  return sub_20A8CE5A0();
}

uint64_t sub_20A51C574()
{
  return sub_20A8CE580();
}

unint64_t sub_20A51C5C4()
{
  unint64_t result = qword_26AC67B20;
  if (!qword_26AC67B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC67B20);
  }
  return result;
}

void sub_20A51C618(void *a1@<X8>)
{
  *a1 = &unk_26BE5E978;
}

uint64_t sub_20A51C628()
{
  uint64_t v1 = 0x616C50207377654ELL;
  if (*v0 != 1) {
    uint64_t v1 = 25665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1937204558;
  }
}

uint64_t sub_20A51C678()
{
  unint64_t v0 = sub_20A8CF5B0();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unsigned char *storeEnumTagSinglePayload for StockFeedGroupKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A51C790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedGroupKind()
{
  return &type metadata for StockFeedGroupKind;
}

unint64_t sub_20A51C7CC()
{
  unint64_t result = qword_26763B810;
  if (!qword_26763B810)
  {
    sub_20A51C824();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B810);
  }
  return result;
}

void sub_20A51C824()
{
  if (!qword_26763B818)
  {
    unint64_t v0 = sub_20A8CE6C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763B818);
    }
  }
}

void *sub_20A51C87C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for WatchlistCreationRouteModel();
  uint64_t v5 = v4 - 8;
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v4);
  type metadata accessor for TextInputAlert();
  uint64_t v8 = (void *)swift_allocObject();
  v8[5] = &type metadata for WatchlistCreationAlert;
  v8[6] = &off_26BE6C0E8;
  v8[9] = 0;
  v8[10] = 0;
  v8[12] = 0;
  v8[13] = 0;
  v8[11] = sub_20A432B48;
  sub_20A51CD94(a1, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  sub_20A51CDFC((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  v8[7] = sub_20A51CE60;
  v8[8] = v10;
  swift_retain();
  sub_20A459CA4(0);
  id v11 = (uint64_t *)(a1 + *(int *)(v5 + 28));
  uint64_t v12 = *v11;
  if (*v11)
  {
    uint64_t v13 = v11[1];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v12;
    *(void *)(v14 + 24) = v13;
    v8[9] = sub_20A46D298;
    v8[10] = v14;
    swift_retain();
    sub_20A459CA4(0);
  }
  v8[11] = sub_20A51CD0C;
  v8[12] = 0;
  return v8;
}

uint64_t sub_20A51CA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v21[0] = a3;
  uint64_t v8 = type metadata accessor for WatchlistCreationRouteModel();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  id v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v21[4] = v4;
  void v21[5] = a1;
  v21[6] = a2;
  type metadata accessor for WatchlistCreationResult();
  sub_20A8C6670();
  v21[1] = sub_20A44D17C();
  uint64_t v12 = (void *)sub_20A8CEBE0();
  sub_20A51CD94(a3, (uint64_t)v11);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  sub_20A51CDFC((uint64_t)v11, v14 + v13);
  sub_20A8C40E0();
  swift_retain();
  sub_20A8C64F0();
  swift_release();

  swift_release();
  uint64_t v15 = v21[0];
  sub_20A51CD94(v21[0], (uint64_t)v11);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v4;
  sub_20A51CDFC((uint64_t)v11, v16 + v13);
  swift_retain();
  id v17 = (void *)sub_20A8C6450();
  sub_20A8C64F0();
  swift_release();
  swift_release();

  uint64_t v18 = (void *)sub_20A8CEBE0();
  sub_20A51CD94(v15, (uint64_t)v11);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v4;
  sub_20A51CDFC((uint64_t)v11, v19 + v13);
  swift_retain();
  sub_20A8C6500();
  swift_release();
  swift_release();

  return swift_release();
}

BOOL sub_20A51CD0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  return v2 != 0;
}

uint64_t sub_20A51CD28()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WatchlistCreationAlertFactory()
{
  return self;
}

uint64_t sub_20A51CD94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchlistCreationRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A51CDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WatchlistCreationRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A51CE60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WatchlistCreationRouteModel() - 8);
  return sub_20A51CA4C(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_20A51CEDC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A51CF14(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for WatchlistCreationResult();
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v10 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (v10)
  {
    MEMORY[0x270FA5388](v7);
    v17[-4] = a1;
    v17[-3] = a2;
    v17[-2] = a3;
    sub_20A8C40E0();
    sub_20A8C6670();
    id v11 = (void *)sub_20A8C6450();
    sub_20A8C64F0();
    swift_release();

    uint64_t v12 = (void *)sub_20A8C6450();
    uint64_t v13 = sub_20A8C65B0();
    swift_release();
  }
  else
  {
    uint64_t v14 = &v9[*(int *)(v6 + 20)];
    uint64_t v15 = sub_20A8C40E0();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    *uint64_t v9 = 1;
    sub_20A51E330(0, &qword_26763B840, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  return v13;
}

uint64_t sub_20A51D13C()
{
  return sub_20A51CF14(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t type metadata accessor for WatchlistCreationResult()
{
  uint64_t result = qword_26763B850;
  if (!qword_26763B850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A51D1A8(char *a1, uint64_t a2, uint64_t a3)
{
  sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = sub_20A8C40E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v22 - v13;
  int v15 = *a1;
  if (v15 == 3)
  {
    uint64_t v16 = type metadata accessor for WatchlistCreationResult();
    sub_20A51ED80((uint64_t)&a1[*(int *)(v16 + 20)], (uint64_t)v7, &qword_26AC69040, MEMORY[0x263F7AFD8]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      id v17 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AFD8];
      sub_20A51F074((uint64_t)v7, (uint64_t)&qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
      sub_20A51D5AC(2, a3);
      sub_20A51EE00();
      swift_allocError();
      *uint64_t v18 = 2;
      sub_20A51E330(0, &qword_26763B820, v17, MEMORY[0x263F7D028]);
      swift_allocObject();
      return sub_20A8C6570();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      sub_20A51E330(0, &qword_26763B820, MEMORY[0x263F7AFD8], MEMORY[0x263F7D028]);
      swift_allocObject();
      uint64_t v19 = sub_20A8C6580();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    return v19;
  }
  else
  {
    sub_20A51D5AC(*a1, a3);
    sub_20A51EE00();
    swift_allocError();
    *uint64_t v20 = v15;
    sub_20A51E330(0, &qword_26763B820, MEMORY[0x263F7AFD8], MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6570();
  }
}

uint64_t sub_20A51D580(uint64_t a1)
{
  return sub_20A51DDD0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_20A51D1A8);
}

uint64_t sub_20A51D5AC(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_20A51E330(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v20[-v7];
  uint64_t v9 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v9);
  id v11 = &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for WatchlistCreationRouteModel();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12 - 8);
  *((void *)&v24 + 1) = &type metadata for WatchlistCreationErrorAlert;
  unint64_t v25 = sub_20A51EE54();
  LOBYTE(v23) = a1;
  sub_20A8CB470();
  swift_allocObject();
  uint64_t v15 = sub_20A8CB420();
  sub_20A51CD94(a2, (uint64_t)&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v3;
  sub_20A51CDFC((uint64_t)&v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v17 + v16);
  swift_retain();
  sub_20A8CB450();
  swift_release();
  swift_release();
  *(void *)id v11 = v15;
  v11[40] = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
  unint64_t v25 = 0;
  long long v23 = 0u;
  long long v24 = 0u;
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  swift_retain();
  swift_retain();
  sub_20A5BFAAC((uint64_t)v11, 0, (uint64_t)v8, (uint64_t)&v23, 0, 0, (uint64_t)v21);
  swift_release();
  swift_release();
  sub_20A51F074((uint64_t)v21, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A51F074((uint64_t)&v23, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A51F074((uint64_t)v8, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
  sub_20A4EF9E0((uint64_t)v11);
  return swift_release();
}

uint64_t sub_20A51D960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v5 = sub_20A8C40E0();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A51E330(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = sub_20A8C3F00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a2;
  sub_20A8C8A00();
  if (v23)
  {
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC69E00);
    sub_20A8C4990();
    if (swift_dynamicCast())
    {
      sub_20A8C7160();
      uint64_t v18 = v7;
      sub_20A51ED28();
      uint64_t v7 = v18;
      sub_20A8C4980();
      swift_release();
    }
  }
  else
  {
    sub_20A51F074((uint64_t)v22, (uint64_t)&unk_26AC69E10, (uint64_t)&qword_26AC69E00, MEMORY[0x263F7D3A0], (uint64_t (*)(void))sub_20A491224);
  }
  sub_20A51ED80(v21, (uint64_t)v10, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_20A51F074((uint64_t)v10, (uint64_t)&qword_26AC68FD0, MEMORY[0x263F7AF08], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v7, a1, v5);
    sub_20A51E330(0, &qword_26763B820, MEMORY[0x263F7AFD8], MEMORY[0x263F7D028]);
    swift_allocObject();
    return sub_20A8C6580();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_20A4342F4(v19 + 16, (uint64_t)v22);
    __swift_project_boxed_opaque_existential_1(v22, v23);
    uint64_t v15 = sub_20A8C36C0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return v15;
}

uint64_t sub_20A51DDA4(uint64_t a1)
{
  return sub_20A51DDD0(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_20A51D960);
}

uint64_t sub_20A51DDD0(uint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for WatchlistCreationRouteModel() - 8);
  return a2(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_20A51DE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v25 = (char *)&v25 - v7;
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F7AF08];
  sub_20A51E330(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08], v5);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v13 = __swift_project_boxed_opaque_existential_1((void *)(a2 + 16), v12);
  uint64_t v14 = *(void *)(v12 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v17, v15);
  sub_20A8C3610();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
  uint64_t v18 = a1;
  sub_20A8CBE60();
  swift_release();
  sub_20A51ED80(v26, (uint64_t)v11, (unint64_t *)&qword_26AC68FD0, v8);
  uint64_t v19 = sub_20A8C3F00();
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v11, 1, v19);
  uint64_t result = sub_20A51F074((uint64_t)v11, (uint64_t)&qword_26AC68FD0, (uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))sub_20A51E330);
  if (v12 == 1)
  {
    sub_20A8C89D0();
    swift_getObjectType();
    if (qword_26AC6ABD0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_20A8C40E0();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = (uint64_t)v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, v18, v21);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56))(v23, 0, 1, v21);
    long long v24 = v27;
    sub_20A8C8D40();
    if (v24)
    {
      swift_unknownObjectRelease();

      return sub_20A51F074(v23, (uint64_t)&qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
    }
    else
    {
      sub_20A51F074(v23, (uint64_t)&qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_20A51E2B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for WatchlistCreationRouteModel() - 8);
  return sub_20A51DE50(a1, *(void *)(v1 + 16), v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void sub_20A51E330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A51E394(uint64_t a1)
{
  sub_20A4342F4(a1 + 16, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v1 = sub_20A8C35D0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t sub_20A51E420(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WatchlistCreationResult();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v4[*(int *)(v5 + 28)];
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  unsigned char *v4 = 3;
  sub_20A51E330(0, &qword_26763B840, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A51E57C(void *a1)
{
  uint64_t v2 = type metadata accessor for WatchlistCreationResult();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A51E330(0, &qword_26763B848, MEMORY[0x263F7AA40], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v30 - v6;
  uint64_t v8 = sub_20A8C2F00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v30 - v13;
  v30[1] = a1;
  id v15 = a1;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  char v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v16)
  {
    v17(v7, 0, 1, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
    if (v18 == *MEMORY[0x263F7AA38])
    {
      uint64_t v19 = &v4[*(int *)(v2 + 20)];
      uint64_t v20 = sub_20A8C40E0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
      unsigned char *v4 = 0;
LABEL_10:
      sub_20A51E330(0, &qword_26763B840, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, MEMORY[0x263F7D028]);
      swift_allocObject();
      uint64_t v23 = sub_20A8C6580();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      return v23;
    }
    if (v18 == *MEMORY[0x263F7AA30])
    {
      long long v24 = &v4[*(int *)(v2 + 20)];
      uint64_t v25 = sub_20A8C40E0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
      unsigned char *v4 = 1;
      goto LABEL_10;
    }
    if (v18 == *MEMORY[0x263F7AA28])
    {
      uint64_t v26 = &v4[*(int *)(v2 + 20)];
      uint64_t v27 = sub_20A8C40E0();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
      unsigned char *v4 = 2;
      goto LABEL_10;
    }
    uint64_t v29 = *(void (**)(char *, uint64_t))(v9 + 8);
    v29(v14, v8);
    v29(v11, v8);
  }
  else
  {
    v17(v7, 1, 1, v8);
    sub_20A51F074((uint64_t)v7, (uint64_t)&qword_26763B848, MEMORY[0x263F7AA40], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
  }
  uint64_t v21 = &v4[*(int *)(v2 + 20)];
  uint64_t v22 = sub_20A8C40E0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  unsigned char *v4 = 2;
  sub_20A51E330(0, &qword_26763B840, (uint64_t (*)(uint64_t))type metadata accessor for WatchlistCreationResult, MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A51EAC4(uint64_t a1, uint64_t a2)
{
  sub_20A51E330(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v11[-v4];
  uint64_t v6 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A51CD94(a2, (uint64_t)v8);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v8, 0, (uint64_t)v5, (uint64_t)v14, 0, 0, (uint64_t)v12);
  swift_release();
  sub_20A51F074((uint64_t)v12, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A51F074((uint64_t)v14, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A51F074((uint64_t)v5, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A51E330);
  sub_20A4EF9E0((uint64_t)v8);
  return swift_release();
}

unint64_t sub_20A51ED28()
{
  unint64_t result = qword_26763B828;
  if (!qword_26763B828)
  {
    sub_20A8C7160();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B828);
  }
  return result;
}

uint64_t sub_20A51ED80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A51E330(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_20A51EE00()
{
  unint64_t result = qword_26763B830;
  if (!qword_26763B830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B830);
  }
  return result;
}

unint64_t sub_20A51EE54()
{
  unint64_t result = qword_26763B838;
  if (!qword_26763B838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B838);
  }
  return result;
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = type metadata accessor for WatchlistCreationRouteModel();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = sub_20A8C3F00();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  if (*(void *)(v0 + v2 + *(int *)(v1 + 20))) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_20A51EFF0()
{
  uint64_t v1 = *(void *)(type metadata accessor for WatchlistCreationRouteModel() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_20A51EAC4(v2, v3);
}

uint64_t sub_20A51F054()
{
  return sub_20A51E394(*(void *)(v0 + 16));
}

uint64_t sub_20A51F074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WatchlistCreationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A51F1A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCreationError()
{
  return &type metadata for WatchlistCreationError;
}

uint64_t *sub_20A51F1D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    unsigned int v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t sub_20A51F368(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

unsigned char *sub_20A51F43C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_20A51F57C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

unsigned char *sub_20A51F720(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_20A51F860(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_20A51FA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A51FA18);
}

uint64_t sub_20A51FA18(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 252)
  {
    if (*a1 <= 3u) {
      int v4 = 3;
    }
    else {
      int v4 = *a1;
    }
    unsigned int v5 = v4 - 3;
    if (*a1 >= 3u) {
      return v5;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
    int v10 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = &a1[*(int *)(a3 + 20)];
    return v10(v12, a2, v11);
  }
}

uint64_t sub_20A51FAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A51FB10);
}

unsigned char *sub_20A51FB10(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 252)
  {
    *uint64_t result = a2 + 3;
  }
  else
  {
    sub_20A51E330(0, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    int v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_20A51FBE4()
{
  sub_20A51E330(319, &qword_26AC69040, MEMORY[0x263F7AFD8], MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_20A51FCB0()
{
  unint64_t result = qword_26763B860;
  if (!qword_26763B860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B860);
  }
  return result;
}

void *sub_20A51FD04(void *a1)
{
  uint64_t v3 = sub_20A8CC220();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8CC250();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v23 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CC280();
  uint64_t v22 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  int v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v21 - v12;
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A52034C(0, &qword_26AC82C10, (uint64_t (*)(uint64_t))sub_20A4A23B0, MEMORY[0x263F7CE10]);
  swift_allocObject();
  v1[2] = sub_20A8C5D40();
  long long v24 = v1 + 3;
  uint64_t v25 = a1;
  sub_20A4342F4((uint64_t)a1, (uint64_t)(v1 + 3));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A520454((unint64_t *)&unk_26AC82C60, v14, (void (*)(uint64_t))type metadata accessor for GoToWatchlistMenuGroupOptionProvider);
  swift_retain();
  sub_20A8C3670();
  swift_release();
  sub_20A44D17C();
  uint64_t v15 = (void *)sub_20A8CEBE0();
  sub_20A8CC270();
  MEMORY[0x2105245B0](v10, 1.0);
  char v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21[1] = v8 + 8;
  v16(v10, v7);
  aBlock[4] = sub_20A520344;
  uint64_t v31 = v1;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_11;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  int v18 = v23;
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A520454(&qword_26AC677A0, 255, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A520454((unint64_t *)&qword_26AC7F7B0, 255, sub_20A44D1C4);
  uint64_t v19 = v26;
  sub_20A8CF290();
  MEMORY[0x210526ED0](v13, v18, v19, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v3);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v28);
  v16(v13, v22);
  __swift_project_boxed_opaque_existential_1(v24, v1[6]);
  swift_retain();
  aBlock[0] = sub_20A8C3690();
  sub_20A5203B0();
  sub_20A8C5D80();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v1;
}

uint64_t sub_20A52020C(uint64_t a1)
{
  return swift_release();
}

uint64_t type metadata accessor for GoToWatchlistMenuGroupOptionProvider()
{
  return self;
}

uint64_t sub_20A5202BC()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  swift_retain();
  sub_20A8C3690();
  sub_20A5203B0();
  sub_20A8C5D80();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20A520344()
{
  return sub_20A52020C(v0);
}

void sub_20A52034C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A5203B0()
{
  unint64_t result = qword_26AC82CC8;
  if (!qword_26AC82CC8)
  {
    sub_20A4A23B0();
    sub_20A520454(&qword_26AC69038, 255, MEMORY[0x263F7AFD8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82CC8);
  }
  return result;
}

uint64_t sub_20A520454(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_20A52049C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_20A8C3F00();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_20A5205E8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_20A5206B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_20A5207C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_20A52093C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_20A520A4C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_20A520BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A520BD4);
}

uint64_t sub_20A520BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A520C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A520C54);
}

uint64_t sub_20A520C54(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_20A8C3F00();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_20A520CD8(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_20A520D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t type metadata accessor for StockListSelectionModel()
{
  uint64_t result = qword_26AC75298;
  if (!qword_26AC75298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A520DFC()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_20A520E78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A52100C(v1, (uint64_t)v8);
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 2, v2);
  if (v9)
  {
    if (v9 == 1) {
      return 0x7961646F74;
    }
    else {
      return 1701736302;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    uint64_t v10 = sub_20A8C3E20();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v10;
}

uint64_t sub_20A52100C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockListSelectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A521070(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StockListSelectionModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A521340();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v13[*(int *)(v14 + 56)];
  sub_20A52100C(a1, (uint64_t)v13);
  sub_20A52100C(a2, v15);
  char v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v17 = v16(v13, 2, v4);
  if (!v17)
  {
    sub_20A52100C((uint64_t)v13, (uint64_t)v10);
    if (!v16((char *)v15, 2, v4))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v21 = MEMORY[0x21051C160](v10, v7);
      uint64_t v22 = *(void (**)(char *, uint64_t))(v5 + 8);
      v22(v7, v4);
      v22(v10, v4);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StockListSelectionModel;
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    int v18 = v16((char *)v15, 2, v4);
    uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StockListSelectionModel;
    if (v18 == 1) {
      goto LABEL_8;
    }
LABEL_9:
    char v21 = 0;
    uint64_t v19 = (uint64_t (*)(void))sub_20A521340;
    goto LABEL_11;
  }
  int v20 = v16((char *)v15, 2, v4);
  uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StockListSelectionModel;
  if (v20 != 2) {
    goto LABEL_9;
  }
LABEL_8:
  char v21 = 1;
LABEL_11:
  sub_20A5213A4((uint64_t)v13, v19);
  return v21 & 1;
}

void sub_20A521340()
{
  if (!qword_26AC75318)
  {
    type metadata accessor for StockListSelectionModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC75318);
    }
  }
}

uint64_t sub_20A5213A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = a2 + 40;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v8(a1 + 40, v5, v7);
  return a1;
}

void *assignWithCopy for StockFeedNewsExpandDataBlueprintModifier(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t assignWithTake for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedNewsExpandDataBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsExpandDataBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsExpandDataBlueprintModifier()
{
  return &type metadata for StockFeedNewsExpandDataBlueprintModifier;
}

uint64_t sub_20A5216CC(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v261 = a3;
  long long v262 = (void (*)(uint64_t *))a2;
  uint64_t v243 = sub_20A8C8B80();
  uint64_t v242 = *(void *)(v243 - 8);
  MEMORY[0x270FA5388](v243);
  long long v241 = (char *)&v222 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A524310(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (uint64_t *)((char *)&v222 - v9);
  uint64_t v260 = sub_20A8CC310();
  uint64_t v231 = *(void *)(v260 - 8);
  MEMORY[0x270FA5388](v260);
  long long v265 = (char *)&v222 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for NewsStockFeedGroup();
  MEMORY[0x270FA5388](v240);
  uint64_t v254 = (uint64_t)&v222 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v239 = (uint64_t *)((char *)&v222 - v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v253 = (uint64_t)&v222 - v16;
  uint64_t v273 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v273);
  uint64_t v268 = (uint64_t *)((char *)&v222 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A524748(0, (unint64_t *)&qword_26AC69D80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_20A44D39C, MEMORY[0x263F7D2D8]);
  uint64_t v279 = v18;
  uint64_t v258 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v255 = (char *)&v222 - v19;
  sub_20A42C84C();
  MEMORY[0x270FA5388](v20 - 8);
  v275 = (char *)&v222 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v281 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v281);
  uint64_t v250 = (uint64_t)&v222 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v259 = (uint64_t)&v222 - v24;
  MEMORY[0x270FA5388](v25);
  uint64_t v274 = (uint64_t)&v222 - v26;
  uint64_t v247 = type metadata accessor for NewsPlacardStockFeedGroup();
  MEMORY[0x270FA5388](v247);
  uint64_t v236 = (void (**)(char *, uint64_t))((char *)&v222 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v28);
  uint64_t v245 = (void (**)(uint64_t, char *, uint64_t))((char *)&v222 - v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v252 = (void (**)(char *, uint64_t))((char *)&v222 - v31);
  MEMORY[0x270FA5388](v32);
  uint64_t v235 = (void (**)(char *, uint64_t))((char *)&v222 - v33);
  MEMORY[0x270FA5388](v34);
  uint64_t v244 = (void (**)(uint64_t, char *, uint64_t))((char *)&v222 - v35);
  MEMORY[0x270FA5388](v36);
  uint64_t v251 = (uint64_t)&v222 - v37;
  uint64_t v277 = sub_20A8CCFE0();
  *(void *)&long long v238 = *(void *)(v277 - 8);
  MEMORY[0x270FA5388](v277);
  long long v257 = (char *)&v222 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  uint64_t v270 = (char *)&v222 - v40;
  MEMORY[0x270FA5388](v41);
  uint64_t v234 = (void (**)(char *, uint64_t))((char *)&v222 - v42);
  uint64_t v280 = type metadata accessor for StockFeedGroup();
  uint64_t v230 = *(void *)(v280 - 8);
  MEMORY[0x270FA5388](v280);
  uint64_t v249 = (void (**)(uint64_t, uint64_t *, uint64_t))((char *)&v222 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v44);
  uint64_t v264 = (uint64_t *)((char *)&v222 - v45);
  MEMORY[0x270FA5388](v46);
  uint64_t v267 = (uint64_t)&v222 - v47;
  MEMORY[0x270FA5388](v48);
  uint64_t v248 = (void (**)(uint64_t, uint64_t *, uint64_t))((char *)&v222 - v49);
  MEMORY[0x270FA5388](v50);
  uint64_t v263 = (uint64_t *)((char *)&v222 - v51);
  MEMORY[0x270FA5388](v52);
  uint64_t v269 = (uint64_t)&v222 - v53;
  MEMORY[0x270FA5388](v54);
  uint64_t v233 = (uint64_t)&v222 - v55;
  MEMORY[0x270FA5388](v56);
  uint64_t v232 = (uint64_t)&v222 - v57;
  sub_20A524310(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v59 = v58;
  uint64_t v246 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v278 = (char *)&v222 - v60;
  sub_20A42D9D4();
  MEMORY[0x270FA5388](v61 - 8);
  uint64_t v63 = (char *)&v222 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A524310(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v65 = v64;
  uint64_t v66 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v266 = (uint64_t)&v222 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v68);
  uint64_t v256 = (void (**)(char *, uint64_t))((char *)&v222 - v69);
  MEMORY[0x270FA5388](v70);
  uint64_t v237 = (void (**)(char *, uint64_t))((char *)&v222 - v71);
  MEMORY[0x270FA5388](v72);
  uint64_t v74 = (char *)&v222 - v73;
  uint64_t v272 = v3;
  uint64_t v276 = v59;
  sub_20A8CBAC0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v63, 1, v65) == 1)
  {
    sub_20A524540((uint64_t)v63, (uint64_t (*)(void))sub_20A42D9D4);
    sub_20A5243D4();
    *uint64_t v10 = swift_allocError();
    (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D930], v7);
    v262(v10);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v229 = v10;
  uint64_t v228 = v8;
  uint64_t v227 = v7;
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v74, v63, v65);
  uint64_t v76 = sub_20A63C6EC();
  uint64_t v77 = v66;
  if (v78)
  {
    sub_20A5243D4();
    uint64_t v96 = swift_allocError();
    uint64_t v97 = v229;
    *uint64_t v229 = v96;
    uint64_t v98 = v228;
    uint64_t v99 = v227;
    (*(void (**)(uint64_t *, void, uint64_t))(v228 + 104))(v97, *MEMORY[0x263F7D930], v227);
    v262(v97);
    (*(void (**)(uint64_t *, uint64_t))(v98 + 8))(v97, v99);
    return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v74, v65);
  }
  else
  {
    uint64_t v79 = v65;
    uint64_t v223 = v76;
    uint64_t v226 = v74;
    uint64_t v80 = v276;
    (*(void (**)(char *, uint64_t, uint64_t))(v246 + 16))(v278, a1, v276);
    uint64_t v81 = v272;
    unint64_t v82 = *(void *)(v272 + 32);
    uint64_t v271 = v79;
    uint64_t v83 = v267;
    uint64_t v224 = a1;
    uint64_t v225 = v66;
    switch(v82 >> 61)
    {
      case 1uLL:
        uint64_t v100 = *(void *)((v82 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v266 = *(void *)((v82 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v101 = v266 & 0x7FFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_20A8C8830();
        uint64_t v102 = v80;
        sub_20A8CBAA0();
        swift_bridgeObjectRelease();
        uint64_t v103 = *(void *)(v100 + 16);
        if (!v103) {
          goto LABEL_55;
        }
        uint64_t v233 = v101;
        uint64_t v264 = (uint64_t *)(v81 + 40);
        uint64_t v104 = v100 + ((*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80));
        long long v257 = *(char **)(v230 + 72);
        uint64_t v249 = (void (**)(uint64_t, uint64_t *, uint64_t))(v231 + 32);
        uint64_t v245 = (void (**)(uint64_t, char *, uint64_t))(v231 + 16);
        uint64_t v236 = (void (**)(char *, uint64_t))(v231 + 8);
        uint64_t v234 = (void (**)(char *, uint64_t))(v258 + 8);
        uint64_t v254 = v238 + 8;
        uint64_t v252 = (void (**)(char *, uint64_t))(v225 + 8);
        uint64_t v232 = v100;
        swift_bridgeObjectRetain();
        uint64_t v250 = 0;
        long long v238 = xmmword_20A8D3DC0;
        uint64_t v105 = v269;
        uint64_t v106 = (char *)v256;
        while (1)
        {
          uint64_t v267 = v103;
          sub_20A5245A0(v104, v105, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
          uint64_t v114 = __swift_project_boxed_opaque_existential_1(v264, *(void *)(v81 + 64));
          type metadata accessor for StockFeedServiceConfig();
          sub_20A524428();
          sub_20A8CC780();
          uint64_t v115 = v105;
          uint64_t v116 = (void *)*v114;
          uint64_t v117 = v263;
          sub_20A5245A0(v115, (uint64_t)v263, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              sub_20A52462C((uint64_t)v117, v253, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
              sub_20A5245A0(v269, (uint64_t)v248, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
              int v119 = swift_getEnumCaseMultiPayload();
              if (v119)
              {
                if (v119 == 1)
                {
                  uint64_t v120 = v239;
                  sub_20A52462C((uint64_t)v248, (uint64_t)v239, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                  sub_20A42C980();
                  uint64_t v122 = v259;
                  uint64_t v123 = v259 + *(int *)(v121 + 64);
                  uint64_t v124 = v120[1];
                  *(void *)uint64_t v259 = *v120;
                  *(void *)(v122 + 8) = v124;
                  uint64_t v125 = *(int *)(v240 + 32);
                  *(unsigned char *)(v122 + 16) = *((unsigned char *)v120 + *(int *)(v240 + 28));
                  sub_20A5245A0((uint64_t)v120 + v125, v123, (uint64_t (*)(void))sub_20A42C764);
                  swift_bridgeObjectRetain();
                  sub_20A524540((uint64_t)v120, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                }
                else
                {
                  (*v249)(v259, (uint64_t *)v248, v260);
                }
              }
              else
              {
                uint64_t v139 = v235;
                sub_20A52462C((uint64_t)v248, (uint64_t)v235, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
                sub_20A524540((uint64_t)v139, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
              }
              uint64_t v140 = v250;
              uint64_t v141 = v259;
              swift_storeEnumTagMultiPayload();
              uint64_t v142 = sub_20A5245A0(v141, v274, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
              uint64_t v143 = v253;
              uint64_t v144 = *(void *)(v253 + 16);
              MEMORY[0x270FA5388](v142);
              uint64_t v218 = v270;
              uint64_t v219 = v143;
              uint64_t v220 = v116;
              swift_bridgeObjectRetain();
              uint64_t v145 = sub_20A449F28((void (*)(uint64_t))sub_20A5248F4, (uint64_t)(&v222 - 6), v144, (uint64_t)v282);
              uint64_t v250 = v140;
              swift_bridgeObjectRelease();
              uint64_t v146 = sub_20A524288(&qword_26AC69D78);
              uint64_t v147 = sub_20A524288(&qword_26AC69D70);
              MEMORY[0x21051E250](v145, v279, v146, v147);
              sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
              sub_20A44D39C();
              uint64_t v106 = (char *)v256;
              sub_20A8C8810();
              sub_20A524540(v259, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
              sub_20A524540(v143, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
              uint64_t v112 = v276;
              uint64_t v113 = v277;
            }
            else
            {
              uint64_t v107 = v265;
              uint64_t v108 = v260;
              (*v249)((uint64_t)v265, v117, v260);
              (*v245)(v274, v107, v108);
              swift_storeEnumTagMultiPayload();
              sub_20A5244A4();
              uint64_t v109 = swift_allocObject();
              *(_OWORD *)(v109 + 16) = v238;
              __swift_project_boxed_opaque_existential_1(v116 + 7, v116[10]);
              sub_20A8CCBB0();
              swift_storeEnumTagMultiPayload();
              sub_20A44D39C();
              uint64_t v106 = (char *)v256;
              sub_20A8C8320();
              uint64_t v110 = sub_20A524288(&qword_26AC69D78);
              uint64_t v111 = sub_20A524288(&qword_26AC69D70);
              MEMORY[0x21051E240](v109, v279, v110, v111);
              sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
              uint64_t v112 = v276;
              sub_20A8C8810();
              uint64_t v113 = v277;
              (*v236)(v107, v108);
            }
            uint64_t v81 = v272;
            goto LABEL_13;
          }
          uint64_t v126 = (uint64_t)v117;
          uint64_t v127 = v251;
          sub_20A52462C(v126, v251, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          __swift_project_boxed_opaque_existential_1(v116 + 2, v116[5]);
          char v128 = sub_20A8C3540();
          uint64_t v129 = v127;
          uint64_t v130 = v244;
          sub_20A5245A0(v129, (uint64_t)v244, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          if ((v128 & 1) == 0) {
            break;
          }
          char v131 = *((unsigned char *)v130 + *(int *)(v247 + 20));
          sub_20A524540((uint64_t)v130, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          uint64_t v81 = v272;
          if ((v131 & 1) == 0) {
            goto LABEL_23;
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v132 = sub_20A524288(&qword_26AC69D78);
          uint64_t v133 = sub_20A524288(&qword_26AC69D70);
          MEMORY[0x21051E240](MEMORY[0x263F8EE78], v279, v132, v133);
          sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
          sub_20A44D39C();
          sub_20A8C8810();
          swift_storeEnumTagMultiPayload();
LABEL_26:
          uint64_t v112 = v102;
          uint64_t v138 = v255;
          sub_20A8C8320();
          sub_20A8C8880();
          (*v234)(v138, v279);
          sub_20A524540(v251, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          uint64_t v113 = v277;
LABEL_13:
          (*(void (**)(char *, uint64_t))v254)(v270, v113);
          uint64_t v102 = v112;
          sub_20A8CBA80();
          (*v252)(v106, v271);
          uint64_t v105 = v269;
          sub_20A524540(v269, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
          v104 += (uint64_t)v257;
          uint64_t v103 = v267 - 1;
          if (v267 == 1)
          {
            uint64_t v100 = v232;
            swift_bridgeObjectRelease();
LABEL_55:
            uint64_t v207 = v237;
            sub_20A887A94(v266, (uint64_t)v237);
            uint64_t v208 = v229;
            if (!__OFADD__(v223, *(void *)(v100 + 16)))
            {
              uint64_t v204 = v278;
              sub_20A8CBA90();
              (*(void (**)(void, uint64_t))(v225 + 8))(v207, v271);
              sub_20A8CCAC0();
              swift_retain();
              sub_20A8CCAB0();
              type metadata accessor for StockFeedServiceConfig();
              sub_20A524428();
              uint64_t v209 = sub_20A8CCA90();
              swift_release();
              uint64_t v206 = v228;
              if (v209)
              {
                *((void *)&v285 + 1) = sub_20A8CC520();
                *(void *)&long long v284 = v209;
              }
              else
              {
                long long v284 = 0u;
                long long v285 = 0u;
              }
              sub_20A8CBB10();
              swift_release_n();
              uint64_t v210 = v102;
              goto LABEL_72;
            }
LABEL_74:
            __break(1u);
            JUMPOUT(0x20A5241CCLL);
          }
        }
        sub_20A524540((uint64_t)v130, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
        uint64_t v81 = v272;
LABEL_23:
        swift_storeEnumTagMultiPayload();
        uint64_t v134 = sub_20A524288(&qword_26AC69D78);
        uint64_t v135 = sub_20A524288(&qword_26AC69D70);
        MEMORY[0x21051E240](MEMORY[0x263F8EE78], v279, v134, v135);
        sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
        sub_20A44D39C();
        sub_20A8C8810();
        if (qword_26AC82DA0 != -1) {
          swift_once();
        }
        uint64_t v136 = *(void *)algn_26AC9ED28;
        uint64_t v137 = v268;
        void *v268 = qword_26AC9ED20;
        v137[1] = v136;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 2uLL:
        sub_20A524694();
        uint64_t v148 = swift_projectBox();
        uint64_t v149 = v233;
        sub_20A5245A0(v148, v233, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        __swift_project_boxed_opaque_existential_1((void *)(v81 + 40), *(void *)(v81 + 64));
        type metadata accessor for StockFeedServiceConfig();
        sub_20A524428();
        swift_retain();
        uint64_t v150 = (uint64_t)v234;
        sub_20A8CC780();
        long long v151 = v237;
        sub_20A6B4B90(v149, v150, (uint64_t)v237);
        (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v150, v277);
        sub_20A8CBAB0();
        (*(void (**)(void, uint64_t))(v225 + 8))(v151, v79);
        sub_20A8CCAC0();
        swift_retain();
        sub_20A8CCAB0();
        uint64_t v152 = sub_20A8CCA90();
        swift_release();
        if (v152)
        {
          *((void *)&v285 + 1) = sub_20A8CC520();
          *(void *)&long long v284 = v152;
        }
        else
        {
          long long v284 = 0u;
          long long v285 = 0u;
        }
        uint64_t v206 = v228;
        uint64_t v210 = v276;
        uint64_t v204 = v278;
        sub_20A8CBB10();
        swift_release_n();
        sub_20A524540(v233, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        uint64_t v208 = v229;
        goto LABEL_72;
      case 3uLL:
        uint64_t v153 = *(void *)((v82 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v269 = *(void *)((v82 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v154 = v269 & 0x7FFFFFFFFFFFFFFFLL;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_20A8C8830();
        sub_20A8CBAA0();
        swift_bridgeObjectRelease();
        uint64_t v155 = *(char **)(v153 + 16);
        if (v155)
        {
          uint64_t v234 = (void (**)(char *, uint64_t))v154;
          uint64_t v251 = 0;
          uint64_t v263 = (uint64_t *)(v81 + 40);
          unint64_t v156 = (*(unsigned __int8 *)(v230 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v230 + 80);
          uint64_t v233 = v153;
          uint64_t v157 = v153 + v156;
          uint64_t v259 = *(void *)(v230 + 72);
          uint64_t v248 = (void (**)(uint64_t, uint64_t *, uint64_t))(v231 + 32);
          uint64_t v244 = (void (**)(uint64_t, char *, uint64_t))(v231 + 16);
          uint64_t v237 = (void (**)(char *, uint64_t))(v231 + 8);
          uint64_t v235 = (void (**)(char *, uint64_t))(v258 + 8);
          uint64_t v256 = (void (**)(char *, uint64_t))(v238 + 8);
          uint64_t v253 = v66 + 8;
          long long v238 = xmmword_20A8D3DC0;
          uint64_t v158 = v257;
          while (1)
          {
            uint64_t v270 = v155;
            sub_20A5245A0(v157, v83, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
            uint64_t v170 = __swift_project_boxed_opaque_existential_1(v263, *(void *)(v81 + 64));
            type metadata accessor for StockFeedServiceConfig();
            sub_20A524428();
            sub_20A8CC780();
            uint64_t v171 = (void *)*v170;
            uint64_t v172 = v264;
            sub_20A5245A0(v83, (uint64_t)v264, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
            int v173 = swift_getEnumCaseMultiPayload();
            if (v173)
            {
              if (v173 == 1)
              {
                sub_20A52462C((uint64_t)v172, v254, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                sub_20A5245A0(v83, (uint64_t)v249, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
                int v174 = swift_getEnumCaseMultiPayload();
                if (v174)
                {
                  uint64_t v175 = v250;
                  uint64_t v176 = v251;
                  if (v174 == 1)
                  {
                    uint64_t v177 = v239;
                    sub_20A52462C((uint64_t)v249, (uint64_t)v239, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                    sub_20A42C980();
                    uint64_t v179 = v175 + *(int *)(v178 + 64);
                    uint64_t v180 = v177[1];
                    *(void *)uint64_t v175 = *v177;
                    *(void *)(v175 + 8) = v180;
                    uint64_t v181 = *(int *)(v240 + 32);
                    *(unsigned char *)(v175 + 16) = *((unsigned char *)v177 + *(int *)(v240 + 28));
                    sub_20A5245A0((uint64_t)v177 + v181, v179, (uint64_t (*)(void))sub_20A42C764);
                    swift_bridgeObjectRetain();
                    sub_20A524540((uint64_t)v177, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                  }
                  else
                  {
                    (*v248)(v250, (uint64_t *)v249, v260);
                  }
                }
                else
                {
                  uint64_t v194 = v236;
                  sub_20A52462C((uint64_t)v249, (uint64_t)v236, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
                  sub_20A524540((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
                  uint64_t v175 = v250;
                  uint64_t v176 = v251;
                }
                swift_storeEnumTagMultiPayload();
                uint64_t v195 = sub_20A5245A0(v175, v274, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
                uint64_t v196 = v254;
                uint64_t v197 = *(void *)(v254 + 16);
                MEMORY[0x270FA5388](v195);
                uint64_t v198 = v257;
                uint64_t v218 = v257;
                uint64_t v219 = v196;
                uint64_t v220 = v171;
                swift_bridgeObjectRetain();
                uint64_t v199 = sub_20A449F28((void (*)(uint64_t))sub_20A524608, (uint64_t)(&v222 - 6), v197, (uint64_t)v283);
                uint64_t v251 = v176;
                swift_bridgeObjectRelease();
                uint64_t v200 = sub_20A524288(&qword_26AC69D78);
                uint64_t v201 = sub_20A524288(&qword_26AC69D70);
                MEMORY[0x21051E250](v199, v279, v200, v201);
                sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
                sub_20A44D39C();
                uint64_t v168 = v266;
                sub_20A8C8810();
                sub_20A524540(v250, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
                uint64_t v202 = v196;
                uint64_t v158 = v198;
                sub_20A524540(v202, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroup);
                uint64_t v169 = v277;
                uint64_t v166 = v278;
                uint64_t v167 = v271;
                uint64_t v81 = v272;
              }
              else
              {
                uint64_t v159 = v265;
                uint64_t v160 = v260;
                (*v248)((uint64_t)v265, v172, v260);
                (*v244)(v274, v159, v160);
                swift_storeEnumTagMultiPayload();
                sub_20A5244A4();
                uint64_t v161 = swift_allocObject();
                *(_OWORD *)(v161 + 16) = v238;
                __swift_project_boxed_opaque_existential_1(v171 + 7, v171[10]);
                uint64_t v162 = v278;
                sub_20A8CCBB0();
                swift_storeEnumTagMultiPayload();
                sub_20A44D39C();
                uint64_t v158 = v257;
                sub_20A8C8320();
                uint64_t v163 = sub_20A524288(&qword_26AC69D78);
                uint64_t v164 = sub_20A524288(&qword_26AC69D70);
                uint64_t v165 = v161;
                uint64_t v166 = v162;
                MEMORY[0x21051E240](v165, v279, v163, v164);
                sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
                uint64_t v167 = v271;
                uint64_t v81 = v272;
                uint64_t v168 = v266;
                sub_20A8C8810();
                (*v237)(v265, v160);
                uint64_t v169 = v277;
              }
              goto LABEL_35;
            }
            uint64_t v182 = v252;
            sub_20A52462C((uint64_t)v172, (uint64_t)v252, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
            __swift_project_boxed_opaque_existential_1(v171 + 2, v171[5]);
            char v183 = sub_20A8C3540();
            uint64_t v184 = (uint64_t)v182;
            uint64_t v185 = v245;
            sub_20A5245A0(v184, (uint64_t)v245, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
            if ((v183 & 1) == 0) {
              break;
            }
            char v186 = *((unsigned char *)v185 + *(int *)(v247 + 20));
            sub_20A524540((uint64_t)v185, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
            uint64_t v169 = v277;
            if ((v186 & 1) == 0) {
              goto LABEL_45;
            }
            swift_storeEnumTagMultiPayload();
            uint64_t v187 = sub_20A524288(&qword_26AC69D78);
            uint64_t v188 = sub_20A524288(&qword_26AC69D70);
            MEMORY[0x21051E240](MEMORY[0x263F8EE78], v279, v187, v188);
            sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
            sub_20A44D39C();
            uint64_t v168 = v266;
            sub_20A8C8810();
            swift_storeEnumTagMultiPayload();
            uint64_t v167 = v271;
LABEL_48:
            uint64_t v193 = v255;
            sub_20A8C8320();
            sub_20A8C8880();
            (*v235)(v193, v279);
            sub_20A524540((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
            uint64_t v166 = v278;
LABEL_35:
            (*v256)(v158, v169);
            sub_20A8CBA80();
            (*(void (**)(uint64_t, uint64_t))v253)(v168, v167);
            uint64_t v83 = v267;
            sub_20A524540(v267, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
            v157 += v259;
            uint64_t v155 = v270 - 1;
            if (v270 == (char *)1)
            {
              swift_bridgeObjectRelease();
              goto LABEL_62;
            }
          }
          sub_20A524540((uint64_t)v185, (uint64_t (*)(void))type metadata accessor for NewsPlacardStockFeedGroup);
          uint64_t v169 = v277;
LABEL_45:
          swift_storeEnumTagMultiPayload();
          uint64_t v189 = sub_20A524288(&qword_26AC69D78);
          uint64_t v190 = sub_20A524288(&qword_26AC69D70);
          MEMORY[0x21051E240](MEMORY[0x263F8EE78], v279, v189, v190);
          sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
          sub_20A44D39C();
          sub_20A8C8810();
          if (qword_26AC82DA0 != -1) {
            swift_once();
          }
          uint64_t v191 = *(void *)algn_26AC9ED28;
          uint64_t v192 = v268;
          void *v268 = qword_26AC9ED20;
          v192[1] = v191;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
          uint64_t v167 = v271;
          uint64_t v168 = v266;
          goto LABEL_48;
        }
        swift_bridgeObjectRelease();
        uint64_t v166 = v278;
LABEL_62:
        sub_20A8CCAC0();
        swift_retain();
        sub_20A8CCAB0();
        type metadata accessor for StockFeedServiceConfig();
        sub_20A524428();
        uint64_t v211 = sub_20A8CCA90();
        swift_release();
        uint64_t v206 = v228;
        uint64_t v208 = v229;
        uint64_t v210 = v276;
        if (v211)
        {
          *((void *)&v285 + 1) = sub_20A8CC520();
          *(void *)&long long v284 = v211;
        }
        else
        {
          long long v284 = 0u;
          long long v285 = 0u;
        }
        sub_20A8CBB10();
        swift_release_n();
        uint64_t v204 = v166;
LABEL_72:
        uint64_t v212 = v242;
        uint64_t v213 = v241;
        uint64_t v214 = v243;
        (*(void (**)(char *, void, uint64_t))(v242 + 104))(v241, *MEMORY[0x263F7D528], v243);
        uint64_t v215 = sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
        uint64_t v216 = sub_20A44D39C();
        uint64_t v217 = sub_20A52445C(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
        uint64_t v220 = (void *)v215;
        uint64_t v221 = v216;
        uint64_t v218 = (char *)v216;
        uint64_t v219 = v217;
        sub_20A8C9B50();
        (*(void (**)(char *, uint64_t))(v212 + 8))(v213, v214);
        v262(v208);
        (*(void (**)(uint64_t *, uint64_t))(v206 + 8))(v208, v227);
        (*(void (**)(char *, uint64_t))(v246 + 8))(v204, v210);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v225 + 8))(v226, v271);
        break;
      case 4uLL:
        swift_retain();
        sub_20A8C8830();
        uint64_t v203 = v80;
        uint64_t v204 = v278;
        sub_20A8CBAA0();
        swift_bridgeObjectRelease();
        sub_20A8CCAC0();
        swift_retain();
        sub_20A8CCAB0();
        type metadata accessor for StockFeedServiceConfig();
        sub_20A524428();
        uint64_t v205 = sub_20A8CCA90();
        swift_release();
        uint64_t v206 = v228;
        if (v205)
        {
          *((void *)&v285 + 1) = sub_20A8CC520();
          *(void *)&long long v284 = v205;
        }
        else
        {
          long long v284 = 0u;
          long long v285 = 0u;
        }
        uint64_t v208 = v229;
        uint64_t v210 = v203;
        sub_20A8CBB10();
        swift_release_n();
        goto LABEL_72;
      default:
        sub_20A524694();
        uint64_t v85 = v84;
        uint64_t v86 = swift_projectBox();
        uint64_t v87 = *(void *)(v86 + *(int *)(v85 + 48));
        uint64_t v88 = v232;
        sub_20A5245A0(v86, v232, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        __swift_project_boxed_opaque_existential_1((void *)(v81 + 40), *(void *)(v81 + 64));
        uint64_t v89 = type metadata accessor for StockFeedServiceConfig();
        sub_20A524428();
        swift_retain();
        uint64_t v90 = (uint64_t)v234;
        uint64_t v280 = v89;
        sub_20A8CC780();
        uint64_t v91 = v237;
        sub_20A6B4B90(v88, v90, (uint64_t)v237);
        uint64_t v92 = (uint64_t)v91;
        (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v90, v277);
        uint64_t v93 = v278;
        sub_20A8CBAB0();
        uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
        v94(v92, v79);
        sub_20A887A94(v87, v92);
        if (__OFADD__(v223, 1))
        {
          __break(1u);
          goto LABEL_74;
        }
        sub_20A8CBA90();
        v94(v92, v79);
        sub_20A8CCAC0();
        swift_retain();
        sub_20A8CCAB0();
        uint64_t v95 = sub_20A8CCA90();
        swift_release();
        if (v95)
        {
          *((void *)&v285 + 1) = sub_20A8CC520();
          *(void *)&long long v284 = v95;
        }
        else
        {
          long long v284 = 0u;
          long long v285 = 0u;
        }
        uint64_t v206 = v228;
        uint64_t v208 = v229;
        uint64_t v210 = v276;
        sub_20A8CBB10();
        swift_release_n();
        sub_20A524540(v232, (uint64_t (*)(void))type metadata accessor for StockFeedGroup);
        uint64_t v204 = v93;
        goto LABEL_72;
    }
  }
  return result;
}

unint64_t sub_20A5241E8()
{
  unint64_t result = qword_26AC7E410;
  if (!qword_26AC7E410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7E410);
  }
  return result;
}

uint64_t sub_20A52423C()
{
  return sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A524288(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A524748(255, (unint64_t *)&qword_26AC69D80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_20A44D39C, MEMORY[0x263F7D2D8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A524310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    v8[2] = sub_20A52445C(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A44D39C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A5243D4()
{
  unint64_t result = qword_26763B868;
  if (!qword_26763B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B868);
  }
  return result;
}

uint64_t sub_20A524428()
{
  return sub_20A52445C(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
}

uint64_t sub_20A52445C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A5244A4()
{
  if (!qword_26AC7FF20)
  {
    sub_20A524748(255, (unint64_t *)&qword_26AC69D80, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedModel, sub_20A44D39C, MEMORY[0x263F7D2D8]);
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FF20);
    }
  }
}

uint64_t sub_20A524540(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5245A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A524608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A6B59F4(a1, *(char **)(v2 + 16), *(uint64_t **)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_20A52462C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A524694()
{
  if (!qword_26763B870)
  {
    type metadata accessor for StockFeedGroup();
    sub_20A524748(255, &qword_26AC824C0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_20A524428, MEMORY[0x263F59850]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763B870);
    }
  }
}

void sub_20A524748(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StockFeedNewsExpandDataBlueprintModifier.ModifierError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A524864);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsExpandDataBlueprintModifier.ModifierError()
{
  return &type metadata for StockFeedNewsExpandDataBlueprintModifier.ModifierError;
}

unint64_t sub_20A5248A0()
{
  unint64_t result = qword_26763B878;
  if (!qword_26763B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B878);
  }
  return result;
}

uint64_t sub_20A5248F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A524608(a1, a2);
}

uint64_t sub_20A52490C(uint64_t a1, char a2)
{
  sub_20A4342F4(v2 + 16, (uint64_t)v22);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  double v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (void *)((char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
  uint64_t v10 = *v8;
  uint64_t v11 = type metadata accessor for StockChartStyler();
  v21[3] = v11;
  void v21[4] = &off_26BE60B40;
  v21[0] = v10;
  type metadata accessor for StockChartPriceLabelFormatter();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v11);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void *)((char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  *(void *)(v12 + 40) = v11;
  *(void *)(v12 + 48) = &off_26BE60B40;
  *(void *)(v12 + 16) = v18;
  type metadata accessor for PriceFormatter();
  uint64_t v19 = swift_allocObject();
  sub_20A8C2910();
  *(void *)(v12 + 72) = v19;
  *(void *)(v12 + 56) = a1;
  *(unsigned char *)(v12 + 64) = a2;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v12;
}

uint64_t sub_20A524B10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_20A8C2BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C3D00();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4342F4(v2 + 16, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (void *)((char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
  uint64_t v18 = *v16;
  uint64_t v19 = type metadata accessor for StockChartStyler();
  v28[3] = v19;
  v28[4] = &off_26BE60B40;
  v28[0] = v18;
  type metadata accessor for StockChartCategoryLabelFormatter();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, v19);
  double v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (void *)((char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
  uint64_t v26 = sub_20A524E44(*v24, (uint64_t)v12, (uint64_t)v8, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v26;
}

uint64_t type metadata accessor for StockChartLabelFormatterFactory()
{
  return self;
}

uint64_t sub_20A524E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_20A8C2A80();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for StockChartStyler();
  uint64_t v23 = &off_26BE60B40;
  *(void *)&long long v21 = a1;
  uint64_t v12 = a4 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_calendar;
  id v13 = objc_msgSend(self, sel_currentCalendar);
  sub_20A8C2A00();

  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_dateFormatters;
  *(void *)(a4 + v14) = sub_20A4CFA28(MEMORY[0x263F8EE78]);
  sub_20A42BEBC(&v21, a4 + 16);
  uint64_t v15 = a4 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chart;
  uint64_t v16 = sub_20A8C3D00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a2, v16);
  uint64_t v17 = a4 + OBJC_IVAR____TtC8StocksUI32StockChartCategoryLabelFormatter_chartRange;
  uint64_t v18 = sub_20A8C2BC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a3, v18);
  return a4;
}

uint64_t destroy for DateRangePickerLayoutAttributes()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DateRangePickerLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DateRangePickerLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DateRangePickerLayoutAttributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateRangePickerLayoutAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateRangePickerLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateRangePickerLayoutAttributes()
{
  return &type metadata for DateRangePickerLayoutAttributes;
}

uint64_t sub_20A5251A8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = type metadata accessor for TickerModule();
    uint64_t v7 = swift_allocObject();
    uint64_t result = sub_20A42BEBC(v8, v7 + 16);
    *(void *)(v7 + 56) = v5;
    a2[3] = v6;
    a2[4] = (uint64_t)&off_26BE69D80;
    *a2 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A525258()
{
  type metadata accessor for TickerViewController();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for TickerCardContainerController();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6F560);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC79920);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6F558);
  sub_20A8C62A0();
  type metadata accessor for TickerRouter();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC743D0);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC726B8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC73668);
  sub_20A8C62A0();
  swift_release();
  sub_20A529CD8(0);
  sub_20A8C6290();
  swift_release();
  type metadata accessor for TickerBlueprintModifierFactory();
  sub_20A8C6290();
  swift_release();
  sub_20A529CF8();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A52A51C();
  sub_20A8C6290();
  swift_release();
  sub_20A8CAC30();
  sub_20A8C6290();
  swift_release();
  sub_20A529DB4();
  sub_20A8C6290();
  swift_release();
  sub_20A52A658(0);
  sub_20A8C6290();
  swift_release();
  sub_20A52A1A8(0);
  sub_20A8C6290();
  swift_release();
  type metadata accessor for TickerBlueprintLayoutBuilder();
  sub_20A8C6290();
  swift_release();
  sub_20A52A6F4();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  sub_20A8C6290();
  swift_release();
  sub_20A529EBC();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC6A8A0);
  sub_20A8C62A0();
  sub_20A8CA7F0();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A52A800();
  sub_20A8C6290();
  swift_release();
  sub_20A52A038();
  sub_20A8C6290();
  swift_release();
  sub_20A52A340();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A52A460();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for TickerBlueprintViewCellProvider();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  type metadata accessor for TickerBlueprintViewSupplementaryViewProvider();
  sub_20A8C6290();
  swift_release();
  sub_20A52A9A0(0, &qword_26AC6A5B8, (uint64_t (*)(uint64_t))sub_20A529CD8, sub_20A52A2D8, MEMORY[0x263F7DBD0]);
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A8C8D70();
  sub_20A8C6290();
  swift_release();
  sub_20A52A860();
  sub_20A8C6290();
  sub_20A8C59A0();
  swift_release();
  swift_release();
  sub_20A8C9F60();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC743D8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC726C8);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7D9E8);
  sub_20A8C62A0();
  swift_release();
  sub_20A52B09C(0, &qword_26AC6B1F0, (uint64_t (*)(void))sub_20A52A94C, (uint64_t)&type metadata for TickerOfflineModel, MEMORY[0x263F59BF8]);
  sub_20A8C6290();

  return swift_release();
}

uint64_t sub_20A525CA0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6F560);
  uint64_t result = sub_20A8C5BB0();
  if (!v25)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC743D0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v22;
  if (!v22)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A6F4();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
    double v7 = MEMORY[0x270FA5388](v6);
    uint64_t v9 = (void *)((char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v10 + 16))(v9, v7);
    uint64_t v11 = *v9;
    uint64_t v20 = type metadata accessor for TickerStyler();
    long long v21 = &off_26BE675B0;
    v19[0] = v11;
    uint64_t v12 = objc_allocWithZone((Class)type metadata accessor for TickerViewController());
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = sub_20A52AC60(*v16, v3, v4, v5, v12);
    swift_unknownObjectRelease();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return (uint64_t)v18;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A525F60(void *a1)
{
  uint64_t v2 = sub_20A8C5A90();
  MEMORY[0x270FA5388](v2 - 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F920);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52B09C(0, (unint64_t *)&qword_26AC695D0, (uint64_t (*)(void))sub_20A52B104, (uint64_t)&type metadata for AppEvent, MEMORY[0x263F7CD90]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_20A52B158();
  LOBYTE(v20[0]) = 0;
  sub_20A8C5A80();
  sub_20A4342F4((uint64_t)a1, (uint64_t)&v23);
  uint64_t v5 = swift_allocObject();
  sub_20A42BEBC(&v23, v5 + 16);
  uint64_t v6 = sub_20A8C5E40();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC79920);
  uint64_t result = sub_20A8C5BB0();
  if (v24)
  {
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v23, v24);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (void *)((char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    uint64_t v21 = type metadata accessor for TickerCardContainerStyler();
    uint64_t v22 = &off_26BE67580;
    v20[0] = v12;
    uint64_t v13 = objc_allocWithZone((Class)type metadata accessor for TickerCardContainerController());
    uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v15 = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (void *)((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v18 + 16))(v17, v15);
    uint64_t v19 = sub_20A52AD88(v4, v6, *v17, v13);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    return v19;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A526300@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerViewController();
  uint64_t result = sub_20A8C5BA0();
  if (result) {
    *a2 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A52635C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A5263C4(a1, (uint64_t (*)(void))type metadata accessor for TickerStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A5EB988, (uint64_t)&off_26BE675B0, a2);
}

uint64_t sub_20A526390@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A5263C4(a1, (uint64_t (*)(void))type metadata accessor for TickerCardContainerStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A5EB988, (uint64_t)&off_26BE67580, a2);
}

uint64_t sub_20A5263C4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(unsigned char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v10 = v21;
  if (v21)
  {
    uint64_t v11 = a2(0);
    uint64_t v12 = v22;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = &v20[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v17 + 16))(v16, v14);
    uint64_t v18 = a3(v16, v11, v10, v12);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    a5[3] = v11;
    a5[4] = a4;
    *a5 = v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A526538@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A9A0(0, (unint64_t *)&qword_26AC69E60, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7D3E8]);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8C4990();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v6 = result;
      uint64_t v7 = (objc_class *)type metadata accessor for TickerRouter();
      double v8 = (char *)objc_allocWithZone(v7);
      swift_unknownObjectWeakInit();
      sub_20A4342F4((uint64_t)v11, (uint64_t)&v8[OBJC_IVAR____TtC8StocksUI12TickerRouter_resolver]);
      *(void *)&v8[OBJC_IVAR____TtC8StocksUI12TickerRouter_navigator] = v5;
      *(void *)&v8[OBJC_IVAR____TtC8StocksUI12TickerRouter_tracker] = v6;
      v10.receiver = v8;
      v10.super_class = v7;
      id v9 = objc_msgSendSuper2(&v10, sel_init);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      a2[3] = v7;
      a2[4] = &off_26BE68D78;
      *a2 = v9;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A5266B8(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TickerViewController();
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A526744@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC726B8);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v24;
  if (v24)
  {
    uint64_t v6 = v25;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6F558);
    uint64_t result = sub_20A8C5BB0();
    if (v23)
    {
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      double v8 = MEMORY[0x270FA5388](v7);
      objc_super v10 = (void *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
      uint64_t v12 = *v10;
      uint64_t v13 = type metadata accessor for TickerRouter();
      v21[3] = v13;
      void v21[4] = &off_26BE68D78;
      v21[0] = v12;
      type metadata accessor for TickerEventHandler();
      double v14 = (void *)swift_allocObject();
      uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v13);
      double v16 = MEMORY[0x270FA5388](v15);
      uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
      uint64_t v20 = sub_20A52AED0(v5, v6, *v18, v14);
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      *a2 = v20;
      a2[1] = &off_26BE62560;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A5269D4(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC73668);
  sub_20A8C5BB0();
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CF8();
  uint64_t v4 = sub_20A8C5BA0();
  if (!v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerBlueprintModifierFactory();
  uint64_t v6 = sub_20A8C5BA0();
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52B09C(0, &qword_26AC6B1F0, (uint64_t (*)(void))sub_20A52A94C, (uint64_t)&type metadata for TickerOfflineModel, MEMORY[0x263F59BF8]);
  uint64_t v8 = sub_20A8C5BA0();
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_20A52A9A0(0, &qword_26AC6F548, (uint64_t (*)(uint64_t))type metadata accessor for TickerBlueprintModifierFactory, sub_20A52AC2C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for TickerInteractor);
    swift_allocObject();
    objc_super v10 = sub_20A52AFA4(v11, v12, v5, v7, v9);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    *a2 = v10;
    a2[1] = &off_26BE68BC8;
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_20A526BF0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_20A8CC230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (v15)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC68EC0);
    uint64_t result = sub_20A8C5BB0();
    if (v13)
    {
      type metadata accessor for TickerDataManager();
      uint64_t v9 = (void *)swift_allocObject();
      v9[3] = 0;
      swift_unknownObjectWeakInit();
      sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F8F060], v4);
      uint64_t v10 = sub_20A8CEC10();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v11 = MEMORY[0x263F8EE88];
      v9[14] = v10;
      v9[15] = v11;
      sub_20A42BEBC(&v14, (uint64_t)(v9 + 4));
      uint64_t result = sub_20A42BEBC(&v12, (uint64_t)(v9 + 9));
      *a2 = v9;
      a2[1] = &off_26BE608E8;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A526E0C(uint64_t a1)
{
  return sub_20A527828(a1, sub_20A529CD8, MEMORY[0x263F7D548]);
}

uint64_t sub_20A526E38(void *a1)
{
  sub_20A52ABD4();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v31)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68EC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v29)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76DF8);
  uint64_t result = sub_20A8C5BB0();
  if (!v27)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68F00);
  uint64_t result = sub_20A8C5BB0();
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_20A8C3190();
  sub_20A8C5BB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6);
  if (result != 1)
  {
    uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
    double v9 = MEMORY[0x270FA5388](v8);
    uint64_t v11 = (void *)((char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
    uint64_t v13 = *v11;
    uint64_t v14 = type metadata accessor for SparklineModelProvider();
    v23[3] = v14;
    v23[4] = &off_26BE68660;
    v23[0] = v13;
    type metadata accessor for TickerBlueprintModifierFactory();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v14);
    double v17 = MEMORY[0x270FA5388](v16);
    uint64_t v19 = (void *)((char *)&v23[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v20 + 16))(v19, v17);
    uint64_t v21 = *v19;
    v15[15] = v14;
    v15[16] = &off_26BE68660;
    v15[12] = v21;
    sub_20A42BEBC(&v30, (uint64_t)(v15 + 2));
    sub_20A42BEBC(&v28, (uint64_t)(v15 + 7));
    sub_20A42BEBC(&v24, (uint64_t)(v15 + 17));
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v15 + OBJC_IVAR____TtC8StocksUI30TickerBlueprintModifierFactory_appConfiguration, v4, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return (uint64_t)v15;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A527270(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CD8(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A529DB4();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A529CF8();
      swift_allocObject();
      return sub_20A8C8BD0();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A527348(uint64_t a1, void *a2)
{
  sub_20A52AAA0(0, &qword_26AC6A698, MEMORY[0x263F7DD48]);
  swift_allocObject();
  sub_20A8CA8D0();
  sub_20A52AAA0(0, &qword_26AC6A5F8, MEMORY[0x263F7DBE8]);
  swift_allocObject();
  sub_20A52AB60();
  sub_20A8CA330();
  sub_20A8C8BF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A52A51C();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_allocObject();
    sub_20A52A290(&qword_26AC6A9D0, (void (*)(uint64_t))sub_20A52A51C);
    sub_20A8CA330();
    sub_20A8C8BF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5274CC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A1A8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A8A0);
  uint64_t result = sub_20A8C5B70();
  if (!v3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerBlueprintLayoutBuilder();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A658(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CAC30();
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    sub_20A52A51C();
    swift_allocObject();
    return sub_20A8CB1E0();
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A5276A4(uint64_t a1)
{
  return sub_20A527828(a1, MEMORY[0x263F7DE58], MEMORY[0x263F7DE50]);
}

uint64_t sub_20A5276D0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529EBC();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6AAF0);
    uint64_t result = sub_20A8C5BB0();
    if (v3)
    {
      sub_20A529DB4();
      swift_allocObject();
      return sub_20A8C8E70();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5277D0(uint64_t a1)
{
  return sub_20A527828(a1, sub_20A52A658, MEMORY[0x263F7DDA0]);
}

uint64_t sub_20A5277FC(uint64_t a1)
{
  return sub_20A527828(a1, sub_20A52A1A8, MEMORY[0x263F7D8F8]);
}

uint64_t sub_20A527828(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_20A52786C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7D9E8);
  uint64_t result = sub_20A8C5BB0();
  if (v18)
  {
    uint64_t v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
    double v3 = MEMORY[0x270FA5388](v2);
    uint64_t v5 = (void *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v6 + 16))(v5, v3);
    uint64_t v7 = *v5;
    uint64_t v8 = type metadata accessor for TickerViewLayoutAttributesFactory();
    v16[3] = v8;
    v16[4] = &off_26BE60948;
    v16[0] = v7;
    type metadata accessor for TickerBlueprintLayoutBuilder();
    double v9 = (void *)swift_allocObject();
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v8);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (void *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = *v13;
    v9[5] = v8;
    v9[6] = &off_26BE60948;
    void v9[2] = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return (uint64_t)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A527A7C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CD8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529EBC();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A8A0);
  uint64_t result = sub_20A8C5B70();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6AAF0);
  uint64_t result = sub_20A8C5BB0();
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A9A0(0, &qword_26AC6A5B8, (uint64_t (*)(uint64_t))sub_20A529CD8, sub_20A52A2D8, MEMORY[0x263F7DBD0]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C8D70();
  uint64_t result = sub_20A8C5B60();
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v5)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A52A290((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    sub_20A52A6F4();
    id v4 = objc_allocWithZone(v3);
    return sub_20A8C9C70();
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_20A527DBC(uint64_t a1, uint64_t a2)
{
  return sub_20A5281CC(a1, a2, MEMORY[0x263F7DC00], MEMORY[0x263F7DBF8], MEMORY[0x263F7D970]);
}

uint64_t sub_20A527DF0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A800();
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TickerCollectionView()), sel_initWithFrame_collectionViewLayout_, result, 0.0, 0.0, 0.0, 0.0);

    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A527E90(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  uint64_t result = sub_20A8C5B60();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A038();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A340();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A460();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A529EBC();
    swift_allocObject();
    return sub_20A8C94B0();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A527FF4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529EBC();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = (void *)sub_20A8C94C0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A0A0);
  uint64_t result = sub_20A8C5BB0();
  if (!*((void *)&v12 + 1))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_20A42BEBC(&v11, (uint64_t)v14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A469790();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8CA7F0();
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    sub_20A4342F4((uint64_t)v14, (uint64_t)v10);
    uint64_t v6 = swift_allocObject();
    sub_20A42BEBC(v10, v6 + 16);
    *(void *)(v6 + 56) = v5;
    id v7 = v5;
    uint64_t v8 = sub_20A8CA7D0();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    uint64_t v9 = MEMORY[0x263F7DD30];
    *a2 = v8;
    a2[1] = v9;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A528198(uint64_t a1, uint64_t a2)
{
  return sub_20A5281CC(a1, a2, MEMORY[0x263F7D840], MEMORY[0x263F7D838], MEMORY[0x263F7DD28]);
}

uint64_t sub_20A5281CC(uint64_t a1, uint64_t a2, void (*a3)(void), unsigned int *a4, uint64_t (*a5)(char *))
{
  a3(0);
  MEMORY[0x270FA5388]();
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, void))(v9 + 104))((char *)&v11 - v7, *a4);
  return a5(v8);
}

uint64_t sub_20A5282A8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CAC30();
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    sub_20A52A800();
    id v3 = objc_allocWithZone(v2);
    return sub_20A8CA6A0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A528330(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CD8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A1A8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerBlueprintViewCellProvider();
  sub_20A4342F4((uint64_t)a1, (uint64_t)v8);
  uint64_t v4 = swift_allocObject();
  sub_20A42BEBC(v8, v4 + 16);
  uint64_t v5 = sub_20A8C5B80();
  uint64_t result = swift_release();
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for TickerBlueprintViewSupplementaryViewProvider();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    *(void *)&v8[0] = v3;
    sub_20A52A038();
    id v7 = objc_allocWithZone(v6);
    return sub_20A8CAB90();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A5284CC(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
  uint64_t result = sub_20A8C5B60();
  if (result)
  {
    uint64_t v4 = (void *)result;
    sub_20A42CFF0(0, &qword_26AC7F8C0);
    sub_20A8CE370();
    sub_20A8C5A60();

    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5285C4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CD8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A1A8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A9A0(0, &qword_26AC6A5B8, (uint64_t (*)(uint64_t))sub_20A529CD8, sub_20A52A2D8, MEMORY[0x263F7DBD0]);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A52A290((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
    sub_20A52A340();
    id v4 = objc_allocWithZone(v3);
    return sub_20A8CA930();
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_20A5287F4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C8D70();
  sub_20A8C5B60();
  sub_20A8CA940();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A52A860();
  if (sub_20A8C5BA0()) {
    sub_20A52A290(&qword_26AC6A7D0, (void (*)(uint64_t))sub_20A52A860);
  }
  sub_20A8CA950();
  Class v3 = (void *)sub_20A8CA8F0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TickerViewController();
  uint64_t v4 = sub_20A8C5BA0();
  if (v4)
  {
    id v5 = (id)v4;
    sub_20A8CA590();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A52895C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CD8(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A52A1A8(0);
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A52A460();
      id v4 = objc_allocWithZone(v3);
      return sub_20A8CAD70();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A528A1C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC743D8);
  uint64_t result = sub_20A8C5BB0();
  if (v3)
  {
    type metadata accessor for TickerBlueprintViewCellProvider();
    Class v2 = (void *)swift_allocObject();
    v2[3] = 0;
    swift_unknownObjectWeakInit();
    v2[4] = v3;
    v2[5] = v4;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A528AC8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for TickerViewController();
  id v4 = (id)sub_20A8C5BA0();
  uint64_t v3 = &off_26BE703D8;
  if (!v4) {
    uint64_t v3 = 0;
  }
  *(void *)(v2 + 24) = v3;
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A528B5C()
{
  type metadata accessor for TickerBlueprintViewSupplementaryViewProvider();

  return swift_allocObject();
}

uint64_t sub_20A528B90(void *a1)
{
  uint64_t v2 = sub_20A8CABC0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (void *)((char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_20A8CABE0();
  MEMORY[0x270FA5388](v6 - 8);
  sub_20A52A9A0(0, &qword_26AC6A598, (uint64_t (*)(uint64_t))sub_20A529CD8, sub_20A52A2D8, MEMORY[0x263F7DBC8]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v14 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529CD8(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v13 = result;
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F7DBC0], v8);
    *id v5 = 0;
    (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7DE00], v2);
    sub_20A8CABD0();
    v14[1] = v13;
    sub_20A52A9A0(0, &qword_26AC6A5B8, (uint64_t (*)(uint64_t))sub_20A529CD8, sub_20A52A2D8, MEMORY[0x263F7DBD0]);
    swift_allocObject();
    return sub_20A8CA290();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A528E64(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A52A1A8(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A52A290(&qword_26AC6A3C8, sub_20A52A1A8);
    return sub_20A8CA280();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A528F24(void *a1)
{
  sub_20A4696E4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20A8D4540;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A52A860();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_20A52A290(&qword_26AC6A7C8, (void (*)(uint64_t))sub_20A52A860);
    *(void *)(v2 + 32) = v4;
    *(void *)(v2 + 40) = v5;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8C9F60();
    uint64_t result = sub_20A8C5B60();
    if (result)
    {
      uint64_t v6 = MEMORY[0x263F7DA90];
      *(void *)(v2 + 48) = result;
      *(void *)(v2 + 56) = v6;
      sub_20A8C8D70();
      swift_allocObject();
      return sub_20A8C8D60();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A529058(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529EBC();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A529CD8(0);
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      sub_20A52A860();
      swift_allocObject();
      return sub_20A8CAB20();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A529138(uint64_t a1, void *a2)
{
  if (sub_20A8C5BA0()) {
    sub_20A52A290(&qword_26AC6A438, (void (*)(uint64_t))sub_20A52A6F4);
  }
  return sub_20A8CAB30();
}

uint64_t sub_20A5291E0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A529EBC();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8C94C0();
    swift_release();
    sub_20A8C9F60();
    swift_allocObject();
    return sub_20A8C9F50();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A529268@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC726C8);
  uint64_t result = sub_20A8C5BB0();
  if (v42)
  {
    uint64_t v34 = a2;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC7A150);
    uint64_t result = sub_20A8C5BB0();
    if (v40)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v41, v42);
      v33[1] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v39, v40);
      v33[0] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for TickerViewStyler();
      v38[3] = v17;
      void v38[4] = &off_26BE60788;
      v38[0] = v15;
      uint64_t v18 = type metadata accessor for StockSparklineViewRenderer();
      uint64_t v36 = v18;
      uint64_t v37 = &off_26BE710A8;
      v35[0] = v16;
      type metadata accessor for TickerViewRenderer();
      uint64_t v19 = (void *)swift_allocObject();
      uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v17);
      double v21 = MEMORY[0x270FA5388](v20);
      uint64_t v23 = (void *)((char *)v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v24 + 16))(v23, v21);
      uint64_t v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
      double v26 = MEMORY[0x270FA5388](v25);
      long long v28 = (void *)((char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v29 + 16))(v28, v26);
      uint64_t v30 = *v23;
      uint64_t v31 = *v28;
      v19[5] = v17;
      v19[6] = &off_26BE60788;
      void v19[2] = v30;
      v19[10] = v18;
      v19[11] = &off_26BE710A8;
      v19[7] = v31;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      uint64_t result = sub_20A52A290(&qword_26AC70AC0, (void (*)(uint64_t))type metadata accessor for TickerViewRenderer);
      uint64_t v32 = v34;
      *uint64_t v34 = v19;
      v32[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5296BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_20A5263C4(a1, (uint64_t (*)(void))type metadata accessor for TickerViewStyler, (uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))sub_20A431A50, (uint64_t)&off_26BE60788, a2);
}

uint64_t sub_20A5296F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC726C8);
  uint64_t result = sub_20A8C5BB0();
  if (v41)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC7EF50);
    uint64_t result = sub_20A8C5BB0();
    if (v39)
    {
      uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v40, v41);
      void v33[2] = v33;
      double v6 = MEMORY[0x270FA5388](v5);
      uint64_t v8 = (void *)((char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v9 + 16))(v8, v6);
      uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      v33[1] = v33;
      double v11 = MEMORY[0x270FA5388](v10);
      uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
      uint64_t v15 = *v8;
      uint64_t v16 = *v13;
      uint64_t v17 = type metadata accessor for TickerViewStyler();
      v37[3] = v17;
      v37[4] = &off_26BE60788;
      v37[0] = v15;
      uint64_t v18 = type metadata accessor for StockSparklineViewLayoutAttributesFactory();
      uint64_t v35 = v18;
      uint64_t v36 = &off_26BE6FB30;
      v34[0] = v16;
      uint64_t v19 = type metadata accessor for TickerViewLayoutAttributesFactory();
      uint64_t v20 = (void *)swift_allocObject();
      uint64_t v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v17);
      double v22 = MEMORY[0x270FA5388](v21);
      uint64_t v24 = (void *)((char *)v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v25 + 16))(v24, v22);
      uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
      double v27 = MEMORY[0x270FA5388](v26);
      uint64_t v29 = (void *)((char *)v33 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *, double))(v30 + 16))(v29, v27);
      uint64_t v31 = *v24;
      uint64_t v32 = *v29;
      uint64_t v20[5] = v17;
      v20[6] = &off_26BE60788;
      v20[2] = v31;
      v20[10] = v18;
      v20[11] = &off_26BE6FB30;
      v20[7] = v32;
      v20[12] = MEMORY[0x263F8EE80];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
      a2[3] = v19;
      a2[4] = &off_26BE60948;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A529B34(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6B220);
  uint64_t result = sub_20A8C5BB0();
  if (v4)
  {
    sub_20A52B09C(0, &qword_26AC6B1F0, (uint64_t (*)(void))sub_20A52A94C, (uint64_t)&type metadata for TickerOfflineModel, MEMORY[0x263F59BF8]);
    id v3 = objc_allocWithZone(v2);
    return sub_20A8CD360();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TickerAssembly()
{
  return self;
}

uint64_t sub_20A529C20()
{
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC6F550);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();

  return swift_release();
}

void sub_20A529CD8(uint64_t a1)
{
}

void sub_20A529CF8()
{
  if (!qword_26AC69FD8)
  {
    sub_20A529CD8(255);
    sub_20A529DB4();
    sub_20A52A2D8();
    sub_20A52A290(&qword_26AC6A0B8, (void (*)(uint64_t))sub_20A529DB4);
    unint64_t v0 = sub_20A8C8C20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69FD8);
    }
  }
}

void sub_20A529DB4()
{
  if (!qword_26AC6A0C0)
  {
    type metadata accessor for TickerModel();
    sub_20A529EBC();
    sub_20A44DD30();
    sub_20A52A290(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
    sub_20A52A290(&qword_26AC6A240, (void (*)(uint64_t))sub_20A529EBC);
    unint64_t v0 = sub_20A8C8E90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A0C0);
    }
  }
}

void sub_20A529EBC()
{
  if (!qword_26AC6A248)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC7F910);
    sub_20A52A038();
    sub_20A52A340();
    sub_20A52A460();
    type metadata accessor for TickerViewController();
    sub_20A52A290(&qword_26AC6A830, (void (*)(uint64_t))sub_20A52A038);
    sub_20A52A290(&qword_26AC6A6C0, (void (*)(uint64_t))sub_20A52A340);
    sub_20A52A290(&qword_26AC6A8A8, (void (*)(uint64_t))sub_20A52A460);
    unint64_t v0 = sub_20A8C94D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A248);
    }
  }
}

void sub_20A52A038()
{
  if (!qword_26AC6A838)
  {
    sub_20A529CD8(255);
    sub_20A52A1A8(255);
    type metadata accessor for TickerBlueprintViewCellProvider();
    type metadata accessor for TickerBlueprintViewSupplementaryViewProvider();
    sub_20A52A2D8();
    sub_20A52A290(&qword_26AC6A3D0, sub_20A52A1A8);
    sub_20A52A290(&qword_26AC7AB10, (void (*)(uint64_t))type metadata accessor for TickerBlueprintViewCellProvider);
    sub_20A52A290(&qword_26AC6B338, (void (*)(uint64_t))type metadata accessor for TickerBlueprintViewSupplementaryViewProvider);
    sub_20A52A30C();
    unint64_t v0 = sub_20A8CABB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A838);
    }
  }
}

void sub_20A52A1A8(uint64_t a1)
{
}

void sub_20A52A1F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, void *))
{
  if (!*a2)
  {
    v12[0] = &type metadata for TickerLayoutSectionDescriptor;
    v12[1] = type metadata accessor for TickerLayoutModel();
    _OWORD v12[2] = a3();
    void v12[3] = a4();
    unint64_t v10 = a5(a1, v12);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_20A52A290(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A52A2D8()
{
  return sub_20A52A290(&qword_26AC6A008, sub_20A529CD8);
}

uint64_t sub_20A52A30C()
{
  return sub_20A52A290(&qword_26AC6FF58, (void (*)(uint64_t))type metadata accessor for TickerLayoutModel);
}

void sub_20A52A340()
{
  if (!qword_26AC6A6C8)
  {
    sub_20A529CD8(255);
    sub_20A52A1A8(255);
    type metadata accessor for TickerViewController();
    sub_20A52A2D8();
    sub_20A52A290(&qword_26AC6A3D0, sub_20A52A1A8);
    sub_20A52A290(&qword_26AC726C0, (void (*)(uint64_t))type metadata accessor for TickerViewController);
    sub_20A52A30C();
    unint64_t v0 = sub_20A8CA970();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A6C8);
    }
  }
}

void sub_20A52A460()
{
  if (!qword_26AC6A8B0)
  {
    sub_20A529CD8(255);
    sub_20A52A1A8(255);
    sub_20A52A2D8();
    sub_20A52A290(&qword_26AC6A3D0, sub_20A52A1A8);
    unint64_t v0 = sub_20A8CAD80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A8B0);
    }
  }
}

void sub_20A52A51C()
{
  if (!qword_26AC6A9D8)
  {
    sub_20A52A1A8(255);
    type metadata accessor for TickerBlueprintLayoutBuilder();
    sub_20A52A658(255);
    sub_20A52A290(&qword_26AC6A3D0, sub_20A52A1A8);
    sub_20A52A290(&qword_26AC78BF0, (void (*)(uint64_t))type metadata accessor for TickerBlueprintLayoutBuilder);
    sub_20A52A290(&qword_26AC6A768, sub_20A52A658);
    unint64_t v0 = sub_20A8CB200();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A9D8);
    }
  }
}

void sub_20A52A658(uint64_t a1)
{
}

unint64_t sub_20A52A6A0()
{
  unint64_t result = qword_26AC79930;
  if (!qword_26AC79930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC79930);
  }
  return result;
}

void sub_20A52A6F4()
{
  if (!qword_26AC6A440)
  {
    sub_20A529CD8(255);
    sub_20A529EBC();
    type metadata accessor for TickerViewController();
    sub_20A52A2D8();
    sub_20A52A290(&qword_26AC6A240, (void (*)(uint64_t))sub_20A529EBC);
    sub_20A52A290(&qword_26AC726C0, (void (*)(uint64_t))type metadata accessor for TickerViewController);
    unint64_t v0 = sub_20A8C9C90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A440);
    }
  }
}

void sub_20A52A800()
{
  if (!qword_26AC67778)
  {
    sub_20A8CAC30();
    unint64_t v0 = sub_20A8CA6B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC67778);
    }
  }
}

void sub_20A52A860()
{
  if (!qword_26AC6A7D8)
  {
    sub_20A529EBC();
    sub_20A529CD8(255);
    sub_20A52A290(&qword_26AC6A240, (void (*)(uint64_t))sub_20A529EBC);
    sub_20A52A290(&qword_26AC6A000, sub_20A529CD8);
    unint64_t v0 = sub_20A8CAB40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6A7D8);
    }
  }
}

unint64_t sub_20A52A94C()
{
  unint64_t result = qword_26AC70AB0;
  if (!qword_26AC70AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC70AB0);
  }
  return result;
}

void sub_20A52A9A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A52AA20()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A52AA58(void *a1)
{
  return sub_20A5284CC(a1, (void *)(v1 + 16));
}

uint64_t sub_20A52AA60()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

void sub_20A52AAA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for TickerSectionDescriptor;
    v8[1] = type metadata accessor for TickerModel();
    long long v8[2] = sub_20A44DD30();
    v8[3] = sub_20A52A290(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A52AB60()
{
  unint64_t result = qword_26AC6A690;
  if (!qword_26AC6A690)
  {
    sub_20A52AAA0(255, &qword_26AC6A698, MEMORY[0x263F7DD48]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A690);
  }
  return result;
}

void sub_20A52ABD4()
{
  if (!qword_26AC68DE8)
  {
    sub_20A8C3190();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68DE8);
    }
  }
}

uint64_t sub_20A52AC2C()
{
  return sub_20A52A290(&qword_26AC68250, (void (*)(uint64_t))type metadata accessor for TickerBlueprintModifierFactory);
}

char *sub_20A52AC60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v17[3] = type metadata accessor for TickerStyler();
  v17[4] = &off_26BE675B0;
  v17[0] = a1;
  a5[OBJC_IVAR____TtC8StocksUI20TickerViewController_autoScrolling] = 0;
  sub_20A4342F4((uint64_t)v17, (uint64_t)&a5[OBJC_IVAR____TtC8StocksUI20TickerViewController_styler]);
  unint64_t v11 = &a5[OBJC_IVAR____TtC8StocksUI20TickerViewController_eventHandler];
  *unint64_t v11 = a2;
  v11[1] = a3;
  *(void *)&a5[OBJC_IVAR____TtC8StocksUI20TickerViewController_blueprintViewController] = a4;
  v16.receiver = a5;
  v16.super_class = ObjectType;
  swift_unknownObjectRetain();
  id v12 = a4;
  uint64_t v13 = (char *)objc_msgSendSuper2(&v16, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v13[OBJC_IVAR____TtC8StocksUI20TickerViewController_eventHandler] + 24) = &off_26BE703E0;
  swift_unknownObjectWeakAssign();
  uint64_t v14 = v13;
  sub_20A8C9C60();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14;
}

uint64_t sub_20A52AD88(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  v13[3] = type metadata accessor for TickerCardContainerStyler();
  v13[4] = &off_26BE67580;
  v13[0] = a3;
  *(void *)&a4[qword_26AC798F0 + 8] = 0;
  swift_unknownObjectWeakInit();
  a4[qword_26AC79900] = 0;
  uint64_t v7 = qword_26AC798F8;
  id v8 = objc_allocWithZone(MEMORY[0x263F5A3A8]);
  uint64_t v9 = a4;
  *(void *)&a4[v7] = objc_msgSend(v8, sel_init);
  uint64_t v10 = qword_26AC798E8;
  *(void *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C8480()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9[qword_26AC798D8] = 0;
  *(void *)&v9[qword_26AC798E0] = a2;
  sub_20A4342F4((uint64_t)v13, (uint64_t)&v9[qword_26AC79908]);
  swift_retain();

  uint64_t v11 = sub_20A8C9CF0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v11;
}

void *sub_20A52AED0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v13[3] = type metadata accessor for TickerRouter();
  v13[4] = &off_26BE68D78;
  v13[0] = a3;
  a4[3] = 0;
  swift_unknownObjectWeakInit();
  a4[4] = a1;
  a4[5] = a2;
  sub_20A4342F4((uint64_t)v13, (uint64_t)(a4 + 6));
  uint64_t v8 = a4[5];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v8 + 16);
  swift_unknownObjectRetain();
  uint64_t v11 = swift_retain();
  v10(v11, &off_26BE62558, ObjectType, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return a4;
}

void *sub_20A52AFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  v5[3] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v11 = MEMORY[0x263F8EE88];
  v5[4] = a3;
  v5[5] = a4;
  v5[8] = a5;
  v5[9] = v11;
  v5[6] = a1;
  v5[7] = a2;
  *(void *)(a1 + 24) = &off_26BE68BA8;
  swift_unknownObjectWeakAssign();
  id v12 = self;
  swift_retain();
  swift_retain();
  id v13 = a5;
  swift_unknownObjectRetain();
  id v14 = objc_msgSend(v12, sel_defaultCenter);
  objc_msgSend(v14, sel_addObserver_selector_name_object_, v5, sel_handleAccessibilitySettingsChangedWithNotification_, *MEMORY[0x263F832E8], 0);

  return v5;
}

void sub_20A52B09C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_20A52B104()
{
  unint64_t result = qword_26AC7F340;
  if (!qword_26AC7F340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F340);
  }
  return result;
}

void sub_20A52B158()
{
  if (!qword_26AC69668)
  {
    type metadata accessor for TickerViewController();
    sub_20A52B104();
    unint64_t v0 = sub_20A8C5E50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69668);
    }
  }
}

uint64_t sub_20A52B1C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A526300((void *)(v1 + 16), a1);
}

id sub_20A52B290()
{
  return sub_20A52B514(0, type metadata accessor for StockSparklineView.NonAnimatingDelegate);
}

char *sub_20A52B2D4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_sparklineView;
  id v10 = objc_allocWithZone((Class)sub_20A8CDC20());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v12 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_baselineIndicatorLayer;
  *(void *)&v11[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_nonAnimatingDelegate;
  *(void *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockSparklineView.NonAnimatingDelegate()), sel_init);

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for StockSparklineView();
  id v14 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC8StocksUI18StockSparklineView_baselineIndicatorLayer];
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC8StocksUI18StockSparklineView_nonAnimatingDelegate];
  uint64_t v17 = v14;
  objc_msgSend(v15, sel_setDelegate_, v16);
  id v18 = objc_msgSend(v17, sel_layer);
  objc_msgSend(v18, sel_addSublayer_, v15);

  objc_msgSend(v17, sel_addSubview_, *(void *)&v17[OBJC_IVAR____TtC8StocksUI18StockSparklineView_sparklineView]);
  return v17;
}

id sub_20A52B4FC(uint64_t a1)
{
  return sub_20A52B514(a1, type metadata accessor for StockSparklineView);
}

id sub_20A52B514(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t type metadata accessor for StockSparklineView()
{
  return self;
}

uint64_t type metadata accessor for StockSparklineView.NonAnimatingDelegate()
{
  return self;
}

void sub_20A52B5F0()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_sparklineView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)sub_20A8CDC20()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_baselineIndicatorLayer;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15880]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI18StockSparklineView_nonAnimatingDelegate;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockSparklineView.NonAnimatingDelegate()), sel_init);

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A52B6D0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC6D490);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v19;
  if (!v19)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = v20;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v18, v19);
  v17[3] = v3;
  v17[4] = *(void *)(v4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v5, v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, &qword_26AC70090);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v7 = v15;
  if (!v15)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = v16;
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v14, v15);
  v13[3] = v7;
  v13[4] = *(void *)(v8 + 8);
  id v10 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v10, v9, v7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8CAD40();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    id v11 = objc_allocWithZone((Class)sub_20A8C8220());
    uint64_t v12 = sub_20A8C8210();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    return v12;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A52B8CC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v5)
  {
    sub_20A42BEBC(&v4, (uint64_t)v6);
    sub_20A4342F4((uint64_t)v6, (uint64_t)&v4);
    uint64_t v2 = swift_allocObject();
    sub_20A42BEBC(&v4, v2 + 16);
    sub_20A8CAD40();
    swift_allocObject();
    uint64_t v3 = sub_20A8CAD20();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A52B9C0(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  uint64_t v5 = *(void *)(v4 + 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  *(void *)&v9[25] = v3;
  *(void *)&v9[33] = v4;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9[1]);
  v6(a1, v3, v5);
  sub_20A52BCC4();
  uint64_t v7 = *(void *)(v4 + 16);
  (*(void (**)(uint64_t, uint64_t))(v7 + 48))(v3, v7);
  (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(v7 + 24))(v9, v3, v7);
  sub_20A8CAD30();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9[1]);
}

uint64_t type metadata accessor for BootstrapAssembly()
{
  return self;
}

uint64_t sub_20A52BAF0()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A8C8220();
  sub_20A8C6290();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D000], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8C5CD0();
  sub_20A8CAD40();
  sub_20A8C6290();
  swift_release();
  return swift_release();
}

uint64_t sub_20A52BC84()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A52BCBC(uint64_t a1)
{
  return sub_20A52B9C0(a1, (void *)(v1 + 16));
}

unint64_t sub_20A52BCC4()
{
  unint64_t result = qword_26763B900;
  if (!qword_26763B900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B900);
  }
  return result;
}

uint64_t *sub_20A52BD18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3E10();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_20A8C2CB0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
  }
  return a1;
}

void sub_20A52BFA0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A52BFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3E10();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_20A8C2CB0();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

char *sub_20A52C164(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_20A8C2CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *sub_20A52C39C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_20A8C2CB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

char *sub_20A52C694(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_20A8C2CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

char *sub_20A52C8CC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_20A8C2CB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t sub_20A52CBC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A52CBD8);
}

uint64_t sub_20A52CBD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A52CD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A52CD1C);
}

uint64_t sub_20A52CD1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A52BFA0(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_20A52BFA0(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for StockFeedQuoteData()
{
  uint64_t result = qword_26AC67B28;
  if (!qword_26AC67B28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A52CEA4()
{
  sub_20A52BFA0(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v0 <= 0x3F)
  {
    sub_20A52BFA0(319, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

id sub_20A52CFA4()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_20A8CD2A0();
  uint64_t v46 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v51 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v40 - v5;
  _s8StocksUI16OfflineAlertableV5titleSSSgvg_0();
  _s8StocksUI16OfflineAlertableV7messageSSSgvg_0();
  uint64_t v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v7, v8, 1);

  id result = objc_msgSend(v9, sel_view);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = v1[5];
    uint64_t v13 = v1[6];
    __swift_project_boxed_opaque_existential_1(v1 + 2, v12);
    uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v13 + 16) + 104))(v12);
    objc_msgSend(v11, sel_setTintColor_, v14);

    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v16 = self;
    id v17 = objc_msgSend(v16, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    int v18 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    int v19 = self;
    id v20 = objc_msgSend(v19, sel_actionWithTitle_style_handler_, v18, 0, 0);

    objc_msgSend(v9, sel_addAction_, v20);
    uint64_t v21 = sub_20A8CD2B0();
    uint64_t v22 = v46;
    (*(void (**)(char *, void, uint64_t))(v46 + 104))(v6, *MEMORY[0x263F59BA8], v2);
    uint64_t v49 = *(void *)(v21 + 16);
    if (!v49)
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v2);
LABEL_14:
      swift_bridgeObjectRelease();
      return v9;
    }
    id v41 = v16;
    uint64_t v42 = ObjCClassFromMetadata;
    id v43 = v19;
    id v44 = v9;
    uint64_t v23 = v6;
    unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v45 = v21;
    uint64_t v25 = v51;
    uint64_t v48 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    v48(v51, v21 + v24, v2);
    uint64_t v26 = sub_20A52D750((unint64_t *)&qword_26763B910, MEMORY[0x263F59BB0]);
    uint64_t v50 = v23;
    uint64_t v47 = v26;
    double v27 = v25;
    LOBYTE(v23) = sub_20A8CE210();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
    v28(v27, v2);
    if (v23)
    {
LABEL_4:
      v28(v50, v2);
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v41, sel_bundleForClass_, v42);
      sub_20A8C2370();

      uint64_t v30 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_20A52D5D0;
      void aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_20A4391D4;
      aBlock[3] = &block_descriptor_12;
      uint64_t v31 = _Block_copy(aBlock);
      swift_release();
      id v32 = objc_msgSend(v43, sel_actionWithTitle_style_handler_, v30, 0, v31);
      _Block_release(v31);

      id v9 = v44;
      objc_msgSend(v44, sel_addAction_, v32);

      return v9;
    }
    if (v49 == 1)
    {
      id v9 = v44;
      uint64_t v33 = v50;
LABEL_13:
      v28(v33, v2);
      goto LABEL_14;
    }
    uint64_t v40 = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v34 = *(void *)(v22 + 72);
    unint64_t v35 = v45 + v34 + v24;
    uint64_t v36 = 1;
    while (1)
    {
      id result = (id)((uint64_t (*)(char *, unint64_t, uint64_t))v48)(v27, v35, v2);
      uint64_t v37 = v36 + 1;
      if (__OFADD__(v36, 1)) {
        break;
      }
      char v38 = sub_20A8CE210();
      double v27 = v51;
      char v39 = v38;
      v28(v51, v2);
      if (v39) {
        goto LABEL_4;
      }
      ++v36;
      v35 += v34;
      if (v37 == v49)
      {
        id v9 = v44;
        uint64_t v33 = v50;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_20A52D5D0()
{
  unint64_t v0 = self;

  return objc_msgSend(v0, sel_launchSettings);
}

uint64_t type metadata accessor for OfflineAlertControllerFactory()
{
  return self;
}

id sub_20A52D62C()
{
  return sub_20A52CFA4();
}

uint64_t sub_20A52D654(uint64_t a1)
{
  v6[3] = type metadata accessor for OfflineAlertable();
  v6[4] = sub_20A52D750(&qword_26763B908, (void (*)(uint64_t))type metadata accessor for OfflineAlertable);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  uint64_t v3 = sub_20A8CD2C0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, a1, v3);
  sub_20A8CB470();
  swift_allocObject();
  uint64_t v4 = sub_20A8CB420();
  sub_20A8CB460();
  swift_release();
  return v4;
}

uint64_t sub_20A52D750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A52D79C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A52D7E8@<X0>(uint64_t a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + qword_26763B928), *(void *)(v1 + qword_26763B928 + 24));
  switch(sub_20A8CC9A0())
  {
    case 0:
      sub_20A50C150();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v11 = v13;
      uint64_t v9 = a1;
      uint64_t v10 = 1;
      goto LABEL_7;
    case 1:
      sub_20A50C150();
      uint64_t v4 = v7;
      sub_20A8CD720();
      sub_20A8CD720();
      goto LABEL_6;
    case 3:
      sub_20A8CE9E0();
      sub_20A43F884();
      uint64_t v5 = (void *)sub_20A8CF180();
      sub_20A8C7D90();

      goto LABEL_4;
    case 4:
    case 5:
      sub_20A50C150();
      uint64_t v4 = v3;
      sub_20A8CD730();
      sub_20A8CD730();
      goto LABEL_6;
    case 6:
LABEL_4:
      sub_20A50C150();
      uint64_t v4 = v6;
      sub_20A8CD740();
      sub_20A8CD740();
LABEL_6:
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
      uint64_t v9 = a1;
      uint64_t v10 = 0;
      uint64_t v11 = v4;
LABEL_7:
      return v8(v9, v10, 1, v11);
    default:
      sub_20A8CF520();
      __break(1u);
      JUMPOUT(0x20A52DA7CLL);
  }
}

void sub_20A52DA98(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  sub_20A52E7B0();
  swift_unknownObjectRelease();
}

void sub_20A52DAF8()
{
}

uint64_t sub_20A52DB64(uint64_t a1)
{
  sub_20A459CA4(*(void *)(a1 + qword_26763B920));
  uint64_t v2 = a1 + qword_26763B928;

  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t type metadata accessor for DualOfflineManager()
{
  return swift_getGenericMetadata();
}

uint64_t sub_20A52DBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_20A52DBD4()
{
  uint64_t result = sub_20A8CD2C0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_20A52DC64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_20A50C150();
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = sub_20A8CD2C0();
      uint64_t v12 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16);
      v12(a1, a2, v11);
      v12((uint64_t *)((char *)a1 + *(int *)(v8 + 48)), (uint64_t *)((char *)a2 + *(int *)(v8 + 48)), v11);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_20A52DDF4(uint64_t a1)
{
  sub_20A50C150();
  uint64_t v3 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v5 = sub_20A8CD2C0();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v5 - 8), a1, v5);
    uint64_t v6 = a1 + *(int *)(v3 + 48);
    return v7(v6, v5);
  }
  return result;
}

char *sub_20A52DEE8(char *a1, char *a2, uint64_t a3)
{
  sub_20A50C150();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8CD2C0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

char *sub_20A52E03C(char *a1, char *a2, uint64_t a3)
{
  sub_20A50C150();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = sub_20A8CD2C0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24);
      v16(a1, a2, v15);
      v16(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v15);
      return a1;
    }
    sub_20A52E21C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_20A8CD2C0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(a1, a2, v12);
  v13(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_20A52E21C(uint64_t a1)
{
  sub_20A50C150();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_20A52E278(char *a1, char *a2, uint64_t a3)
{
  sub_20A50C150();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8CD2C0();
    int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
    v10(a1, a2, v9);
    v10(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

char *sub_20A52E3CC(char *a1, char *a2, uint64_t a3)
{
  sub_20A50C150();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = sub_20A8CD2C0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40);
      v16(a1, a2, v15);
      v16(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v15);
      return a1;
    }
    sub_20A52E21C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_20A8CD2C0();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(a1, a2, v12);
  v13(&a1[*(int *)(v7 + 48)], &a2[*(int *)(v7 + 48)], v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_20A52E5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A52E5C0);
}

uint64_t sub_20A52E5C0(uint64_t a1, uint64_t a2)
{
  sub_20A50C150();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A52E62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A52E640);
}

uint64_t sub_20A52E640(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_20A50C150();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_20A52E6C0(uint64_t a1)
{
  sub_20A50C150();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_20A52E728(uint64_t a1, uint64_t a2)
{
  sub_20A50C150();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DualOfflineManager.State()
{
  return swift_getGenericMetadata();
}

void sub_20A52E7B0()
{
  long long v1 = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v0) + 0x60);
  v7[0] = *(_OWORD *)((*MEMORY[0x263F8EED0] & *v0) + 0x50);
  v7[1] = v1;
  uint64_t v2 = type metadata accessor for DualOfflineManager.State();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v7 - v4;
  uint64_t v6 = *(void (**)(char *))((char *)v0 + qword_26763B920);
  if (v6)
  {
    swift_retain();
    sub_20A52D7E8((uint64_t)v5);
    v6(v5);
    sub_20A459CA4((uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_20A52E8F4()
{
}

uint64_t type metadata accessor for AttributionButton()
{
  return self;
}

uint64_t sub_20A52EABC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20A8C3010();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t type metadata accessor for ArticleRecirculationConfigurationService()
{
  return self;
}

uint64_t sub_20A52EB1C()
{
  sub_20A8C3190();
  sub_20A8C6670();
  unint64_t v0 = (void *)sub_20A8C6450();
  uint64_t v1 = sub_20A8C6500();
  swift_release();

  return v1;
}

uint64_t sub_20A52EBB0()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_20A8C3AD0();
}

uint64_t *sub_20A52EBFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
    uint64_t v9 = (char *)v7 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C2800();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_20A530D90(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 20);
    uint64_t v16 = (char *)v7 + v15;
    id v17 = (char *)a2 + v15;
    sub_20A497708();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = type metadata accessor for NewsStockFeedGroupKnobs();
    *(void *)&v16[*(int *)(v19 + 20)] = *(void *)&v17[*(int *)(v19 + 20)];
    *(void *)&v16[*(int *)(v19 + 24)] = *(void *)&v17[*(int *)(v19 + 24)];
    uint64_t v20 = type metadata accessor for StockFeedKnobsConfig();
    *(void *)&v16[*(int *)(v20 + 20)] = *(void *)&v17[*(int *)(v20 + 20)];
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_20A52EE20(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v5 = sub_20A8C2800();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  sub_20A497708();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for NewsStockFeedGroupKnobs();
  swift_release();

  return swift_release();
}

void *sub_20A52EF50(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    sub_20A530D90(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  sub_20A497708();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)&v14[*(int *)(v17 + 20)] = *(void *)&v15[*(int *)(v17 + 20)];
  *(void *)&v14[*(int *)(v17 + 24)] = *(void *)&v15[*(int *)(v17 + 24)];
  uint64_t v18 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)&v14[*(int *)(v18 + 20)] = *(void *)&v15[*(int *)(v18 + 20)];
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_20A52F130(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A530D90(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  sub_20A497708();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)&v16[*(int *)(v19 + 20)] = *(void *)&v17[*(int *)(v19 + 20)];
  swift_retain();
  swift_release();
  *(void *)&v16[*(int *)(v19 + 24)] = *(void *)&v17[*(int *)(v19 + 24)];
  swift_retain();
  swift_release();
  uint64_t v20 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)&v16[*(int *)(v20 + 20)] = *(void *)&v17[*(int *)(v20 + 20)];
  return a1;
}

void *sub_20A52F388(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_20A530D90(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  sub_20A497708();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)&v13[*(int *)(v16 + 20)] = *(void *)&v14[*(int *)(v16 + 20)];
  *(void *)&v13[*(int *)(v16 + 24)] = *(void *)&v14[*(int *)(v16 + 24)];
  uint64_t v17 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)&v13[*(int *)(v17 + 20)] = *(void *)&v14[*(int *)(v17 + 20)];
  return a1;
}

void *sub_20A52F548(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for StockFeedConfig() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C2800();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_20A530D90(0, &qword_26AC68CC0, MEMORY[0x263F07490]);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  sub_20A497708();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = type metadata accessor for NewsStockFeedGroupKnobs();
  *(void *)&v16[*(int *)(v19 + 20)] = *(void *)&v17[*(int *)(v19 + 20)];
  swift_release();
  *(void *)&v16[*(int *)(v19 + 24)] = *(void *)&v17[*(int *)(v19 + 24)];
  swift_release();
  uint64_t v20 = type metadata accessor for StockFeedKnobsConfig();
  *(void *)&v16[*(int *)(v20 + 20)] = *(void *)&v17[*(int *)(v20 + 20)];
  return a1;
}

uint64_t sub_20A52F788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A52F79C);
}

uint64_t sub_20A52F79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StockFeedConfig();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for StockFeedKnobsConfig();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_20A52F894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A52F8A8);
}

uint64_t sub_20A52F8A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StockFeedConfig();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for StockFeedKnobsConfig();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for StockFeedContentConfig()
{
  uint64_t result = qword_26AC73E88;
  if (!qword_26AC73E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A52F9F8()
{
  uint64_t result = type metadata accessor for StockFeedConfig();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StockFeedKnobsConfig();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A52FAC0()
{
  return sub_20A530FC4(&qword_26AC6E430, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
}

uint64_t sub_20A52FB08()
{
  return sub_20A530FC4(&qword_26AC72190, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
}

uint64_t sub_20A52FB50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  sub_20A530D90(0, (unint64_t *)&qword_26AC6B020, (void (*)(uint64_t))sub_20A497708);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v57 = (char *)&v57 - v5;
  uint64_t v6 = type metadata accessor for NewsStockFeedGroupKnobs();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v62 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A530D90(0, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v61 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v60 = (char *)&v57 - v11;
  uint64_t v65 = type metadata accessor for StockFeedGroupKnobs();
  uint64_t v12 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v64 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A530D90(0, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v67 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v66 = (uint64_t)&v57 - v17;
  sub_20A530D90(0, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v72 = type metadata accessor for StockFeedKnobsConfig();
  uint64_t v21 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v63 = (uint64_t)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v68 = (uint64_t)&v57 - v24;
  sub_20A530D90(0, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  MEMORY[0x270FA5388](v25 - 8);
  double v27 = (char *)&v57 - v26;
  uint64_t v28 = type metadata accessor for StockFeedConfig();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char **)((char *)&v57 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v69 = a1;
  sub_20A530DE4(a1, (uint64_t)v27, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    id v32 = (char *)v31 + *(int *)(v28 + 20);
    sub_20A8C27F0();
    uint64_t v33 = sub_20A8C2800();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
    void *v31 = MEMORY[0x263F8EE78];
    sub_20A530E50((uint64_t)v27, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  }
  else
  {
    sub_20A530EAC((uint64_t)v27, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for StockFeedConfig);
  }
  uint64_t v35 = v70;
  uint64_t v34 = v71;
  uint64_t v36 = v72;
  sub_20A530EAC((uint64_t)v31, v71, (uint64_t (*)(void))type metadata accessor for StockFeedConfig);
  sub_20A530DE4(v35, (uint64_t)v20, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v36) == 1)
  {
    uint64_t v38 = v65;
    uint64_t v37 = v66;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v66, 1, 1, v65);
    uint64_t v39 = v67;
    sub_20A530DE4(v37, v67, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v39, 1, v38) == 1)
    {
      uint64_t v41 = v58;
      uint64_t v40 = v59;
      uint64_t v42 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v60, 1, 1, v59);
      uint64_t v43 = v61;
      sub_20A530DE4(v42, v61, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      int v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v43, 1, v40);
      uint64_t v46 = v68;
      uint64_t v45 = v69;
      uint64_t v47 = v62;
      if (v44 == 1)
      {
        sub_20A497708();
        uint64_t v49 = v42;
        uint64_t v50 = (uint64_t)v57;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v57, 1, 1, v48);
        sub_20A889420(v50, 0, 0, v47);
        uint64_t v51 = v49;
        uint64_t v36 = v72;
        sub_20A530E50(v51, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
        sub_20A530E50(v43, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
      }
      else
      {
        sub_20A530E50(v42, qword_26AC74C38, (void (*)(uint64_t))type metadata accessor for NewsStockFeedGroupKnobs);
        sub_20A530EAC(v43, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroupKnobs);
      }
      uint64_t v53 = (uint64_t)v47;
      uint64_t v52 = v64;
      sub_20A530EAC(v53, v64, (uint64_t (*)(void))type metadata accessor for NewsStockFeedGroupKnobs);
      sub_20A530E50(v66, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
      sub_20A530E50(v67, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
    }
    else
    {
      sub_20A530E50(v37, qword_26AC71200, (void (*)(uint64_t))type metadata accessor for StockFeedGroupKnobs);
      uint64_t v52 = v64;
      sub_20A530EAC(v39, v64, (uint64_t (*)(void))type metadata accessor for StockFeedGroupKnobs);
      uint64_t v46 = v68;
      uint64_t v45 = v69;
    }
    uint64_t v54 = v63;
    sub_20A530EAC(v52, v63, (uint64_t (*)(void))type metadata accessor for StockFeedGroupKnobs);
    *(void *)(v54 + *(int *)(v36 + 20)) = 0x7FFFFFFFFFFFFFFFLL;
    sub_20A530EAC(v54, v46, (uint64_t (*)(void))type metadata accessor for StockFeedKnobsConfig);
    sub_20A530E50(v35, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
    sub_20A530E50(v45, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
    sub_20A530E50((uint64_t)v20, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  }
  else
  {
    sub_20A530E50(v35, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
    sub_20A530E50(v69, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
    uint64_t v46 = v68;
    sub_20A530EAC((uint64_t)v20, v68, (uint64_t (*)(void))type metadata accessor for StockFeedKnobsConfig);
  }
  uint64_t v55 = type metadata accessor for StockFeedContentConfig();
  return sub_20A530EAC(v46, v34 + *(int *)(v55 + 20), (uint64_t (*)(void))type metadata accessor for StockFeedKnobsConfig);
}

uint64_t sub_20A530508@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v16 = a2;
  sub_20A530D90(0, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  sub_20A530D90(0, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v15 - v8;
  sub_20A530F14();
  uint64_t v11 = v10;
  uint64_t v15 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A530F70();
  sub_20A8CF8E0();
  if (!v2)
  {
    type metadata accessor for StockFeedConfig();
    char v18 = 0;
    sub_20A530FC4(&qword_26AC6E438, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
    sub_20A8CF5C0();
    type metadata accessor for StockFeedKnobsConfig();
    char v17 = 1;
    sub_20A530FC4(&qword_26AC72198, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
    sub_20A8CF5C0();
    sub_20A52FB50((uint64_t)v9, (uint64_t)v6, v16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A5307D0(char *a1, char *a2)
{
  return sub_20A44F16C(*a1, *a2);
}

uint64_t sub_20A5307DC()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A53086C()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A5308E8()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A530974@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_20A5309D4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x666E6F4364656566;
  if (*v1) {
    uint64_t v2 = 0x6E6F4373626F6E6BLL;
  }
  unint64_t v3 = 0xEA00000000006769;
  if (*v1) {
    unint64_t v3 = 0xEB00000000676966;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A530A20()
{
  if (*v0) {
    return 0x6E6F4373626F6E6BLL;
  }
  else {
    return 0x666E6F4364656566;
  }
}

uint64_t sub_20A530A68@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_20A530ACC(uint64_t a1)
{
  unint64_t v2 = sub_20A530F70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A530B08(uint64_t a1)
{
  unint64_t v2 = sub_20A530F70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A530B44@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A530508(a1, a2);
}

uint64_t sub_20A530B5C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A53100C(v1, a1, (uint64_t (*)(void))type metadata accessor for StockFeedConfig);
}

uint64_t sub_20A530B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A53100C(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for StockFeedKnobsConfig);
}

uint64_t sub_20A530BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_20A530D90(0, qword_26AC721D8, (void (*)(uint64_t))type metadata accessor for StockFeedKnobsConfig);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  sub_20A530D90(0, qword_26AC6E478, (void (*)(uint64_t))type metadata accessor for StockFeedConfig);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v16 - v11;
  sub_20A53100C(a1, (uint64_t)&v16 - v11, (uint64_t (*)(void))type metadata accessor for StockFeedConfig);
  uint64_t v13 = type metadata accessor for StockFeedConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  sub_20A53100C(v3 + *(int *)(a2 + 20), (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedKnobsConfig);
  uint64_t v14 = type metadata accessor for StockFeedKnobsConfig();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  return sub_20A52FB50((uint64_t)v12, (uint64_t)v9, a3);
}

void sub_20A530D90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A530DE4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A530D90(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A530E50(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A530D90(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A530EAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_20A530F14()
{
  if (!qword_26AC7FE20)
  {
    sub_20A530F70();
    unint64_t v0 = sub_20A8CF660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FE20);
    }
  }
}

unint64_t sub_20A530F70()
{
  unint64_t result = qword_26AC73E60;
  if (!qword_26AC73E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73E60);
  }
  return result;
}

uint64_t sub_20A530FC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A53100C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for StockFeedContentConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A531140);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedContentConfig.CodingKeys()
{
  return &type metadata for StockFeedContentConfig.CodingKeys;
}

unint64_t sub_20A53117C()
{
  unint64_t result = qword_26763B998;
  if (!qword_26763B998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763B998);
  }
  return result;
}

unint64_t sub_20A5311D4()
{
  unint64_t result = qword_26AC73E70;
  if (!qword_26AC73E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73E70);
  }
  return result;
}

unint64_t sub_20A53122C()
{
  unint64_t result = qword_26AC73E68;
  if (!qword_26AC73E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC73E68);
  }
  return result;
}

void sub_20A531280(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = sub_20A8C6A90();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A531628();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4530();
  double v14 = MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v24 - v15, a1, v13, v14);
  if (swift_dynamicCast())
  {
    uint64_t v25 = v7;
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    char v18 = (void *)sub_20A8C4510();
    uint64_t v19 = sub_20A8C4840();
    unint64_t v21 = v20;

    if (!v3)
    {
      sub_20A5316BC((unint64_t *)&unk_26AC69980, MEMORY[0x263F79BD0]);
      sub_20A8C5950();
      sub_20A531704(v19, v21);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v17, v25, v5);
      uint64_t v22 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
    }
  }
  else
  {
    uint64_t v23 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v28, 1, 1, v23);
  }
}

uint64_t type metadata accessor for FeedViewEventTranslator()
{
  return self;
}

void sub_20A531610(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_20A531628()
{
  if (!qword_26AC69338)
  {
    sub_20A8C6AA0();
    sub_20A5316BC((unint64_t *)&unk_26AC69990, MEMORY[0x263F79BE0]);
    unint64_t v0 = sub_20A8C4530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69338);
    }
  }
}

uint64_t sub_20A5316BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A531704(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_20A53175C(void (*a1)(void))
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A8CA020();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    unsigned int v4 = (void *)result;
    if (sub_20A8CA000())
    {
      sub_20A480ED4((uint64_t)a1);
      sub_20A8C9FE0();
    }
    else
    {
      if (a1) {
        a1();
      }

      return 0;
    }
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for OnboardingModule()
{
  return self;
}

uint64_t type metadata accessor for CrossFadeForYouFeedTitleViewAnimator()
{
  return self;
}

id sub_20A531858(id result, void *a2, id a3, double a4)
{
  if (result != 2)
  {
    objc_msgSend(a3, sel_setAlpha_);
    return objc_msgSend(a2, sel_setAlpha_, 1.0 - a4);
  }
  return result;
}

uint64_t sub_20A5318D0(char a1, void *a2, void *a3)
{
  return sub_20A5318E0(a1 & 1, a2, a3);
}

id sub_20A5318D8(char a1, void *a2, void *a3)
{
  return sub_20A5319E0(a1 & 1, a2, a3);
}

uint64_t sub_20A5318E0(char a1, id a2, void *a3)
{
  objc_msgSend(a2, sel_frame);
  double v6 = 0.0;
  sub_20A8CED90();
  objc_msgSend(a2, sel_setFrame_);
  objc_msgSend(a3, sel_frame);
  sub_20A8CED90();
  objc_msgSend(a3, sel_setFrame_);
  uint64_t v7 = a1 & 1;
  if (v7) {
    double v8 = 1.0;
  }
  else {
    double v8 = 0.0;
  }
  if (!v7) {
    double v6 = 1.0;
  }
  objc_msgSend(a3, sel_setAlpha_, v8);
  objc_msgSend(a2, sel_setAlpha_, v6);
  return v7;
}

id sub_20A5319E0(char a1, id a2, void *a3)
{
  objc_msgSend(a2, sel_frame);
  double v6 = 0.0;
  sub_20A8CED90();
  objc_msgSend(a2, sel_setFrame_);
  if (a1) {
    double v7 = 0.0;
  }
  else {
    double v7 = 1.0;
  }
  if (a1) {
    double v6 = 1.0;
  }
  objc_msgSend(a2, sel_setAlpha_, v7);

  return objc_msgSend(a3, sel_setAlpha_, v6);
}

ValueMetadata *type metadata accessor for StockSearchPrewarmBlueprintModifier()
{
  return &type metadata for StockSearchPrewarmBlueprintModifier;
}

uint64_t sub_20A531AB0(uint64_t a1, void (*a2)(char *))
{
  sub_20A531C04();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  double v6 = MEMORY[0x270FA5388](v3);
  double v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x263F7D948], v4, v6);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_20A531BB0()
{
  unint64_t result = qword_26AC82F08;
  if (!qword_26AC82F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82F08);
  }
  return result;
}

void sub_20A531C04()
{
  if (!qword_26AC82498)
  {
    type metadata accessor for StockSearchSectionDescriptor();
    type metadata accessor for StockSearchModel();
    sub_20A4C2680(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    sub_20A4C2680(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v0 = sub_20A8C9B60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82498);
    }
  }
}

uint64_t type metadata accessor for EmptyListOverlayViewStyler()
{
  return self;
}

uint64_t sub_20A531D14()
{
  uint64_t v1 = v0;
  sub_20A531FF8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_20A8CCEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_20A8C7750();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v6 + 16))(v8, v1, v5, v11);
  int v14 = (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 88))(v8, v5);
  if (v14 == *MEMORY[0x263F59A70])
  {
    uint64_t v15 = (unsigned int *)MEMORY[0x263F7A680];
LABEL_9:
    (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v13, *v15, v9);
    goto LABEL_10;
  }
  int v16 = v14;
  if (v14 == *MEMORY[0x263F59A80] || v14 == *MEMORY[0x263F59A68])
  {
    uint64_t v15 = (unsigned int *)MEMORY[0x263F7A668];
    goto LABEL_9;
  }
  int v23 = *MEMORY[0x263F59A78];
  int v20 = *MEMORY[0x263F59A60];
  (*(void (**)(unsigned char *, void, uint64_t))(v10 + 104))(v13, *MEMORY[0x263F7A680], v9);
  if (v16 != v23 && v16 != v20) {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
LABEL_10:
  uint64_t v18 = sub_20A8C7850();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  return sub_20A8C7730();
}

void sub_20A531FF8()
{
  if (!qword_26AC69B80)
  {
    sub_20A8C7850();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69B80);
    }
  }
}

uint64_t type metadata accessor for WelcomeStyler()
{
  return self;
}

uint64_t sub_20A532074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  void v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

uint64_t sub_20A53223C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  sub_20A8C59E0();

  return swift_release();
}

uint64_t type metadata accessor for ForYouFeedMemoryTestCase()
{
  return self;
}

uint64_t sub_20A53241C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

void sub_20A532454(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)sub_20A8CE240();
  id v7 = objc_msgSend(a1, sel_objectForKey_, v6);

  if (v7)
  {
    sub_20A8CF270();
    swift_unknownObjectRelease();
    sub_20A441D28(&v20, &aBlock);
    type metadata accessor for ForYouFeedViewController();
    swift_dynamicCast();
    uint64_t v8 = v19;
    sub_20A8C9BF0();
    uint64_t v9 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v9, sel_contentSize);
    double v11 = v10;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a2;
    *(void *)(v12 + 24) = a3;
    uint64_t v17 = sub_20A532660;
    uint64_t v18 = v12;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v15 = sub_20A4713FC;
    uint64_t v16 = &block_descriptor_13;
    double v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_su_performScrollTestWithLength_completion_, v13, v11);
    _Block_release(v13);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A532628()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A532660()
{
  return sub_20A53223C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id sub_20A53266C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v8 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  id v9 = v8;
  uint64_t v10 = sub_20A8B9F00(v6, (uint64_t)&off_26BE64020);
  uint64_t v11 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v10;
  uint64_t v12 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 72) = v12;
  double v13 = v4 + 2;
  uint64_t v15 = v4[5];
  uint64_t v14 = v4[6];
  __swift_project_boxed_opaque_existential_1(v13, v15);
  uint64_t v16 = *(void *)(v14 + 16);
  if (a3) {
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 88);
  }
  else {
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 232);
  }
  id v18 = v12;
  uint64_t v19 = v17(v15, v16);
  uint64_t v20 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v19;
  unint64_t v21 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v20;
  *(void *)(inited + 112) = v21;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFC999999999999ALL;
  id v22 = v21;
  sub_20A4CF8B0(inited);
  id v23 = objc_allocWithZone(MEMORY[0x263F086A0]);
  swift_bridgeObjectRetain();
  uint64_t v24 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v25 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

id sub_20A5328A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = *v4;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v10 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v11 = v10;
  uint64_t v12 = sub_20A8B9FA8(v8, (uint64_t)&off_26BE64020);
  uint64_t v13 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v12;
  uint64_t v14 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 72) = v14;
  if (a4)
  {
    id v22 = v5 + 2;
    uint64_t v24 = v5[5];
    uint64_t v23 = v5[6];
    __swift_project_boxed_opaque_existential_1(v22, v24);
    uint64_t v25 = *(void *)(v23 + 16);
    id v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 40);
    id v27 = v14;
    uint64_t v21 = v26(v24, v25);
  }
  else
  {
    double v15 = *(double *)&a3;
    uint64_t v16 = v5 + 2;
    uint64_t v18 = v5[5];
    uint64_t v17 = v5[6];
    __swift_project_boxed_opaque_existential_1(v16, v18);
    if (v15 >= 0.0) {
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 24);
    }
    else {
      uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 32);
    }
    id v20 = v14;
    uint64_t v21 = v19(v18, v17);
  }
  uint64_t v28 = v21;
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v28;
  sub_20A4CF8B0(inited);
  id v29 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v30 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v31 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v29, sel_initWithString_attributes_, v30, v31);

  return v32;
}

id sub_20A532B04(char a1)
{
  sub_20A45F33C();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20A8D5C90;
  if (a1)
  {
    *(void *)(v3 + 32) = objc_msgSend(self, sel_whiteColor);
    uint64_t v4 = v1 + 2;
    uint64_t v6 = v1[5];
    uint64_t v5 = v1[6];
    __swift_project_boxed_opaque_existential_1(v4, v6);
    *(void *)(v3 + 40) = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 16) + 96))(v6);
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    id v7 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    uint64_t v8 = self;
    id v9 = objc_msgSend(v8, sel_configurationWithPaletteColors_, v7);

    if (qword_267639918 != -1) {
      swift_once();
    }
    id v10 = objc_msgSend((id)qword_267652D10, sel_imageWithConfiguration_, v9);
    id v11 = objc_msgSend(v8, sel_configurationWithTextStyle_, *MEMORY[0x263F83570]);
    id v12 = objc_msgSend(v10, sel_imageByApplyingSymbolConfiguration_, v11);
  }
  else
  {
    uint64_t v13 = v1 + 2;
    uint64_t v15 = v1[5];
    uint64_t v14 = v1[6];
    __swift_project_boxed_opaque_existential_1(v13, v15);
    *(void *)(v3 + 32) = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 16) + 96))(v15);
    *(void *)(v3 + 40) = objc_msgSend(self, sel_secondarySystemFillColor);
    sub_20A8CE620();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    uint64_t v16 = (void *)sub_20A8CE5D0();
    swift_bridgeObjectRelease();
    uint64_t v17 = self;
    id v9 = objc_msgSend(v17, sel_configurationWithPaletteColors_, v16);

    if (qword_267639920 != -1) {
      swift_once();
    }
    id v10 = objc_msgSend((id)qword_267652D18, sel_imageWithConfiguration_, v9);
    id v11 = objc_msgSend(v17, sel_configurationWithTextStyle_, *MEMORY[0x263F83570]);
    id v12 = objc_msgSend(v10, sel_imageByApplyingSymbolConfiguration_, v11);
  }
  id v18 = v12;

  if (!v18) {
    id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827E8]), sel_init);
  }

  return v18;
}

uint64_t type metadata accessor for StockSearchCellViewStyler()
{
  return self;
}

uint64_t sub_20A532E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(*(void *)v3 + 40);
  uint64_t v8 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v7);
  uint64_t v9 = *(void *)(v8 + 8);
  id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  void v20[3] = v7;
  v20[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  uint64_t v12 = v10(a1, v7, v9);
  double v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v16 + 16))(v15, boxed_opaque_existential_1, v7, v13);
  uint64_t v17 = sub_20A431A50((uint64_t)v15, a2, v7, v8);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  *a3 = v17;
  return result;
}

id sub_20A532FC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v4 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v5 = v4;
  uint64_t v6 = sub_20A8B9FD4(v2, (uint64_t)&off_26BE64020);
  uint64_t v7 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v6;
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  uint64_t v9 = v1 + 2;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(v10 + 16);
  double v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 240);
  id v14 = v8;
  uint64_t v15 = v13(v11, v12);
  uint64_t v16 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  uint64_t v17 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 112) = v17;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFC999999999999ALL;
  id v18 = v17;
  sub_20A4CF8B0(inited);
  id v19 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v20 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v21 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

id sub_20A5331D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v4 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v5 = v4;
  uint64_t v6 = sub_20A8B9ED4(v2, (uint64_t)&off_26BE64020);
  uint64_t v7 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v6;
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  uint64_t v9 = v1 + 2;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(v10 + 16);
  double v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  id v14 = v8;
  uint64_t v15 = v13(v11, v12);
  uint64_t v16 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  uint64_t v17 = (void *)*MEMORY[0x263F815E8];
  *(void *)(inited + 104) = v16;
  *(void *)(inited + 112) = v17;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFDB851EB851EB85;
  id v18 = v17;
  sub_20A4CF8B0(inited);
  id v19 = objc_allocWithZone(MEMORY[0x263F086A0]);
  id v20 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v21 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

id sub_20A5333E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v4 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v5 = v4;
  uint64_t v6 = sub_20A8B9FA8(v2, (uint64_t)&off_26BE64020);
  uint64_t v7 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v6;
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  uint64_t v9 = v1 + 2;
  uint64_t v11 = v1[5];
  uint64_t v10 = v1[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  uint64_t v12 = *(void *)(v10 + 16);
  double v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  id v14 = v8;
  uint64_t v15 = v13(v11, v12);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v15;
  sub_20A4CF8B0(inited);
  id v16 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v17 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  id v18 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

uint64_t sub_20A5335C8()
{
  sub_20A53703C(0, &qword_26AC676E0, MEMORY[0x263F79D08]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v128 = (uint64_t)&v110 - v2;
  uint64_t v130 = sub_20A8C6B80();
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v120 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53703C(0, &qword_26AC69960, MEMORY[0x263F79B40]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v137 = (char *)&v110 - v5;
  uint64_t v6 = sub_20A8C69D0();
  uint64_t v135 = *(void *)(v6 - 8);
  uint64_t v136 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v126 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53703C(0, &qword_26AC699E0, MEMORY[0x263F79DF8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v132 = (char *)&v110 - v9;
  uint64_t v134 = sub_20A8C6CB0();
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  int v119 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_20A8C77E0();
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v116 = (char *)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53703C(0, &qword_26AC69B68, MEMORY[0x263F7A700]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v121 = (uint64_t)&v110 - v13;
  uint64_t v123 = sub_20A8C77D0();
  uint64_t v131 = *(void *)(v123 - 8);
  MEMORY[0x270FA5388](v123);
  uint64_t v122 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_20A8C76F0();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v112 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v110 - v17;
  uint64_t v19 = sub_20A8C7900();
  uint64_t v138 = *(void *)(v19 - 8);
  uint64_t v139 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v111 = (uint64_t *)((char *)&v110 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v21);
  uint64_t v125 = (uint64_t *)((char *)&v110 - v22);
  MEMORY[0x270FA5388](v23);
  uint64_t v124 = (uint64_t *)((char *)&v110 - v24);
  MEMORY[0x270FA5388](v25);
  uint64_t v115 = (uint64_t *)((char *)&v110 - v26);
  MEMORY[0x270FA5388](v27);
  id v29 = (uint64_t *)((char *)&v110 - v28);
  uint64_t v30 = (void (*)(uint64_t))MEMORY[0x263F7A600];
  sub_20A53703C(0, &qword_26AC69B40, MEMORY[0x263F7A600]);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v33 = (char *)&v110 - v32;
  uint64_t v34 = sub_20A8C76E0();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v110 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = v0;
  uint64_t v38 = v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData;
  swift_beginAccess();
  sub_20A537940(v38, (uint64_t)v33, &qword_26AC69B40, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
    sub_20A5379AC((uint64_t)v33, &qword_26AC69B40, MEMORY[0x263F7A600]);
    unint64_t v39 = MEMORY[0x263F8EE78];
    uint64_t v40 = (uint64_t)v137;
    uint64_t v41 = (uint64_t)v132;
    uint64_t v42 = v123;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v33, v34);
    sub_20A8C76D0();
    uint64_t v43 = v113;
    int v44 = v112;
    uint64_t v45 = v114;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v112, v18, v114);
    int v46 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v44, v45);
    uint64_t v42 = v123;
    uint64_t v47 = v45;
    if (v46 == *MEMORY[0x263F7A620])
    {
      uint64_t v48 = 0;
      uint64_t v41 = (uint64_t)v132;
    }
    else
    {
      uint64_t v41 = (uint64_t)v132;
      if (v46 == *MEMORY[0x263F7A618])
      {
        uint64_t v48 = 20;
      }
      else if (v46 == *MEMORY[0x263F7A610])
      {
        uint64_t v48 = 1;
      }
      else
      {
        if (v46 != *MEMORY[0x263F7A608])
        {
          uint64_t result = sub_20A8CF750();
          __break(1u);
          return result;
        }
        uint64_t v48 = 16;
      }
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v47);
    uint64_t v49 = sub_20A8C76B0();
    *id v29 = v48;
    v29[1] = v49;
    v29[3] = 0;
    v29[4] = 0;
    v29[2] = v50;
    (*(void (**)(uint64_t *, void, uint64_t))(v138 + 104))(v29, *MEMORY[0x263F59FE0], v139);
    unint64_t v39 = sub_20A46DFEC(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v52 = *(void *)(v39 + 16);
    unint64_t v51 = *(void *)(v39 + 24);
    if (v52 >= v51 >> 1) {
      unint64_t v39 = sub_20A46DFEC(v51 > 1, v52 + 1, 1, v39);
    }
    uint64_t v40 = (uint64_t)v137;
    uint64_t v53 = v138;
    *(void *)(v39 + 16) = v52 + 1;
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v53 + 32))(v39+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(void *)(v53 + 72) * v52, v29, v139);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  }
  uint64_t v54 = v127;
  uint64_t v55 = v127 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData;
  swift_beginAccess();
  uint64_t v56 = v121;
  sub_20A537940(v55, v121, &qword_26AC69B68, MEMORY[0x263F7A700]);
  uint64_t v57 = v131;
  int v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v56, 1, v42);
  uint64_t v59 = v130;
  if (v58 == 1)
  {
    sub_20A5379AC(v56, &qword_26AC69B68, MEMORY[0x263F7A700]);
    uint64_t v60 = v135;
    uint64_t v62 = v138;
    uint64_t v61 = v139;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v122, v56, v42);
    uint64_t v63 = v116;
    sub_20A8C77C0();
    uint64_t v64 = sub_20A698248();
    (*(void (**)(char *, uint64_t))(v117 + 8))(v63, v118);
    uint64_t v65 = sub_20A8C77A0();
    uint64_t v67 = v66;
    uint64_t v68 = (int)sub_20A8C7790();
    int v69 = sub_20A8C7780();
    uint64_t v70 = v115;
    *uint64_t v115 = 0x6E776F6E6B6E75;
    v70[1] = 0xE700000000000000;
    v70[2] = v64;
    v70[3] = v65;
    v70[4] = v67;
    v70[5] = v68;
    void v70[6] = v69;
    uint64_t v62 = v138;
    uint64_t v61 = v139;
    (*(void (**)(void *, void, uint64_t))(v138 + 104))(v70, *MEMORY[0x263F59FE8], v139);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v39 = sub_20A46DFEC(0, *(void *)(v39 + 16) + 1, 1, v39);
    }
    unint64_t v72 = *(void *)(v39 + 16);
    unint64_t v71 = *(void *)(v39 + 24);
    uint64_t v60 = v135;
    if (v72 >= v71 >> 1) {
      unint64_t v39 = sub_20A46DFEC(v71 > 1, v72 + 1, 1, v39);
    }
    *(void *)(v39 + 16) = v72 + 1;
    (*(void (**)(unint64_t, void *, uint64_t))(v62 + 32))(v39+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v72, v70, v61);
    (*(void (**)(char *, uint64_t))(v131 + 8))(v122, v42);
    uint64_t v40 = (uint64_t)v137;
    uint64_t v41 = (uint64_t)v132;
  }
  uint64_t v73 = v54 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData;
  swift_beginAccess();
  sub_20A537940(v73, v41, &qword_26AC699E0, MEMORY[0x263F79DF8]);
  uint64_t v74 = v41;
  uint64_t v75 = v133;
  uint64_t v76 = v134;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v74, 1, v134) == 1)
  {
    sub_20A5379AC(v74, &qword_26AC699E0, MEMORY[0x263F79DF8]);
    uint64_t v77 = v59;
    uint64_t v78 = v129;
  }
  else
  {
    uint64_t v79 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 32);
    uint64_t v80 = v119;
    v79(v119, v74, v76);
    uint64_t v81 = sub_20A8C6CA0();
    unint64_t v82 = v124;
    uint64_t *v124 = v81;
    v82[1] = v83;
    *((_OWORD *)v82 + 1) = 0u;
    *((_OWORD *)v82 + 2) = 0u;
    *((_OWORD *)v82 + 3) = 0u;
    (*(void (**)(uint64_t *, void, uint64_t))(v62 + 104))(v82, *MEMORY[0x263F59FF0], v61);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v39 = sub_20A46DFEC(0, *(void *)(v39 + 16) + 1, 1, v39);
    }
    uint64_t v77 = v59;
    unint64_t v85 = *(void *)(v39 + 16);
    unint64_t v84 = *(void *)(v39 + 24);
    uint64_t v78 = v129;
    if (v85 >= v84 >> 1) {
      unint64_t v39 = sub_20A46DFEC(v84 > 1, v85 + 1, 1, v39);
    }
    *(void *)(v39 + 16) = v85 + 1;
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v62 + 32))(v39+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v85, v124, v61);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v80, v134);
    uint64_t v40 = (uint64_t)v137;
  }
  uint64_t v86 = v54 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData;
  swift_beginAccess();
  sub_20A537940(v86, v40, &qword_26AC69960, MEMORY[0x263F79B40]);
  uint64_t v87 = v136;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v40, 1, v136) == 1)
  {
    sub_20A5379AC(v40, &qword_26AC69960, MEMORY[0x263F79B40]);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v126, v40, v87);
    uint64_t v88 = sub_20A8C69A0();
    uint64_t v90 = v89;
    uint64_t v91 = sub_20A8C69C0();
    uint64_t v93 = v92;
    uint64_t v94 = sub_20A8C69B0();
    uint64_t v95 = v125;
    uint64_t *v125 = v88;
    v95[1] = v90;
    v95[2] = v91;
    v95[3] = v93;
    uint64_t v62 = v138;
    uint64_t v61 = v139;
    v95[4] = v94;
    v95[5] = v96;
    (*(void (**)(uint64_t *, void, uint64_t))(v62 + 104))(v95, *MEMORY[0x263F59FF8], v61);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v39 = sub_20A46DFEC(0, *(void *)(v39 + 16) + 1, 1, v39);
    }
    unint64_t v98 = *(void *)(v39 + 16);
    unint64_t v97 = *(void *)(v39 + 24);
    uint64_t v99 = v135;
    if (v98 >= v97 >> 1) {
      unint64_t v39 = sub_20A46DFEC(v97 > 1, v98 + 1, 1, v39);
    }
    *(void *)(v39 + 16) = v98 + 1;
    (*(void (**)(unint64_t, uint64_t *, uint64_t))(v62 + 32))(v39+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v98, v125, v61);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v126, v136);
  }
  uint64_t v100 = v54 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData;
  swift_beginAccess();
  uint64_t v101 = v100;
  uint64_t v102 = v128;
  sub_20A537940(v101, v128, &qword_26AC676E0, MEMORY[0x263F79D08]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v102, 1, v77) == 1)
  {
    sub_20A5379AC(v102, &qword_26AC676E0, MEMORY[0x263F79D08]);
  }
  else
  {
    uint64_t v103 = v120;
    (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v120, v102, v77);
    uint64_t v104 = sub_20A8C6B70();
    if (v105)
    {
      uint64_t v106 = v111;
      *uint64_t v111 = v104;
      v106[1] = v105;
      *((unsigned char *)v106 + 16) = 1;
      (*(void (**)(uint64_t *, void, uint64_t))(v62 + 104))(v106, *MEMORY[0x263F59FD8], v61);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_20A46DFEC(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v108 = *(void *)(v39 + 16);
      unint64_t v107 = *(void *)(v39 + 24);
      if (v108 >= v107 >> 1) {
        unint64_t v39 = sub_20A46DFEC(v107 > 1, v108 + 1, 1, v39);
      }
      *(void *)(v39 + 16) = v108 + 1;
      (*(void (**)(unint64_t, uint64_t *, uint64_t))(v62 + 32))(v39+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v108, v106, v61);
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v103, v77);
  }
  return v39;
}

uint64_t sub_20A534760(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v87 = a5;
  uint64_t v88 = a6;
  uint64_t v82 = a4;
  uint64_t v92 = a3;
  uint64_t v8 = sub_20A8C70D0();
  uint64_t v90 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v89 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_20A8C7A40();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v66 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C68E0();
  uint64_t v85 = *(void *)(v11 - 8);
  uint64_t v86 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v84 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_20A8C7C40();
  uint64_t v73 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v75 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8C68F0();
  uint64_t v80 = *(void *)(v14 - 8);
  uint64_t v81 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v83 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v78 = (char *)&v65 - v17;
  uint64_t v76 = sub_20A8C6A30();
  uint64_t v77 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C6A40();
  uint64_t v95 = *(void *)(v19 - 8);
  uint64_t v96 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v93 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v94 = (uint64_t)&v65 - v22;
  unint64_t v72 = (void (*)(uint64_t))MEMORY[0x263F79D08];
  sub_20A53703C(0, &qword_26AC676E0, MEMORY[0x263F79D08]);
  MEMORY[0x270FA5388](v23 - 8);
  unint64_t v71 = (char *)&v65 - v24;
  uint64_t v70 = (void (*)(uint64_t))MEMORY[0x263F79B40];
  sub_20A53703C(0, &qword_26AC69960, MEMORY[0x263F79B40]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v65 - v26;
  int v69 = (void (*)(uint64_t))MEMORY[0x263F79DF8];
  sub_20A53703C(0, &qword_26AC699E0, MEMORY[0x263F79DF8]);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v65 - v29;
  uint64_t v31 = (void (*)(uint64_t))MEMORY[0x263F7A700];
  sub_20A53703C(0, &qword_26AC69B68, MEMORY[0x263F7A700]);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v65 - v33;
  uint64_t v35 = (void (*)(uint64_t))MEMORY[0x263F7A600];
  sub_20A53703C(0, &qword_26AC69B40, MEMORY[0x263F7A600]);
  MEMORY[0x270FA5388](v36 - 8);
  uint64_t v38 = (char *)&v65 - v37;
  sub_20A8C76E0();
  sub_20A5378F8((unint64_t *)&qword_26AC69B30, MEMORY[0x263F7A600]);
  sub_20A8C45A0();
  uint64_t v39 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData;
  swift_beginAccess();
  sub_20A53788C((uint64_t)v38, v39, &qword_26AC69B40, v35);
  swift_endAccess();
  sub_20A8C77D0();
  sub_20A5378F8(&qword_26AC67710, MEMORY[0x263F7A700]);
  sub_20A8C45A0();
  uint64_t v40 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData;
  swift_beginAccess();
  sub_20A53788C((uint64_t)v34, v40, &qword_26AC69B68, v31);
  swift_endAccess();
  sub_20A8C6CB0();
  sub_20A5378F8((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  sub_20A8C45A0();
  uint64_t v41 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData;
  swift_beginAccess();
  uint64_t v42 = (uint64_t)v30;
  uint64_t v43 = v73;
  sub_20A53788C(v42, v41, &qword_26AC699E0, v69);
  swift_endAccess();
  sub_20A8C69D0();
  sub_20A5378F8((unint64_t *)&unk_26AC69950, MEMORY[0x263F79B40]);
  sub_20A8C45A0();
  uint64_t v44 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData;
  swift_beginAccess();
  sub_20A53788C((uint64_t)v27, v44, &qword_26AC69960, v70);
  swift_endAccess();
  sub_20A8C6B80();
  sub_20A5378F8(&qword_26AC699B0, MEMORY[0x263F79D08]);
  uint64_t v45 = (uint64_t)v71;
  sub_20A8C45A0();
  uint64_t v46 = (uint64_t)a2 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData;
  swift_beginAccess();
  sub_20A53788C(v45, v46, &qword_26AC676E0, v72);
  swift_endAccess();
  unint64_t v47 = sub_20A8C78B0();
  uint64_t v48 = v94;
  sub_20A5C8750(a2[5], a2[6], v47, v94);
  uint64_t v49 = v75;
  sub_20A8C7890();
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v93, v48, v96);
  uint64_t v50 = v74;
  sub_20A8C6A20();
  sub_20A5378F8(&qword_26AC69970, MEMORY[0x263F79B70]);
  unint64_t v51 = v50;
  uint64_t v52 = v76;
  uint64_t v93 = a1;
  sub_20A8C45B0();
  uint64_t v53 = v79;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v51, v52);
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v49, v82, v53);
  int v54 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v49, v53);
  if (v54 == *MEMORY[0x263F5A1C0])
  {
    uint64_t v55 = v80;
    uint64_t v56 = v81;
    uint64_t v57 = v78;
    (*(void (**)(char *, void, uint64_t))(v80 + 104))(v78, *MEMORY[0x263F79AF0], v81);
    goto LABEL_10;
  }
  uint64_t v57 = v78;
  uint64_t v55 = v80;
  uint64_t v56 = v81;
  if (v54 == *MEMORY[0x263F5A190])
  {
    int v58 = (unsigned int *)MEMORY[0x263F79AE8];
LABEL_9:
    (*(void (**)(char *, void, uint64_t))(v80 + 104))(v78, *v58, v81);
    goto LABEL_10;
  }
  if (v54 == *MEMORY[0x263F5A198]) {
    goto LABEL_6;
  }
  if (v54 == *MEMORY[0x263F5A170])
  {
    int v58 = (unsigned int *)MEMORY[0x263F79AE0];
    goto LABEL_9;
  }
  if (v54 == *MEMORY[0x263F5A1A0]
    || v54 == *MEMORY[0x263F5A178]
    || v54 == *MEMORY[0x263F5A1C8]
    || v54 == *MEMORY[0x263F5A1B8]
    || v54 == *MEMORY[0x263F5A1B0]
    || v54 == *MEMORY[0x263F5A180]
    || v54 == *MEMORY[0x263F5A188]
    || v54 == *MEMORY[0x263F5A1A8]
    || v54 == *MEMORY[0x263F5A1D8]
    || v54 == *MEMORY[0x263F5A1D0])
  {
LABEL_6:
    int v58 = (unsigned int *)MEMORY[0x263F79AF0];
    goto LABEL_9;
  }
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v78, *MEMORY[0x263F79AF0], v81);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v53);
LABEL_10:
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v83, v57, v56);
  uint64_t v59 = v84;
  sub_20A8C68D0();
  sub_20A5378F8(&qword_26AC676D8, MEMORY[0x263F79AD8]);
  uint64_t v60 = v86;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v59, v60);
  if (a2[3])
  {
    swift_getObjectType();
    uint64_t v61 = v66;
    sub_20A8C78A0();
    sub_20A8C7C30();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v61, v68);
  }
  swift_bridgeObjectRetain();
  uint64_t v62 = v89;
  sub_20A8C70C0();
  sub_20A5378F8(&qword_26AC69A70, MEMORY[0x263F7A090]);
  uint64_t v63 = v91;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v62, v63);
  sub_20A8C7190();
  sub_20A5378F8((unint64_t *)&unk_26AC69AA0, MEMORY[0x263F7A130]);
  sub_20A8C45C0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v56);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
}

uint64_t sub_20A5355F0()
{
  return sub_20A8C4580();
}

uint64_t sub_20A53569C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C67A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20A8C6790();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C7BC0();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v11 + 16))(v14, a2, v10, v12);
  int v15 = (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 88))(v14, v10);
  if (v15 == *MEMORY[0x263F5A0F0])
  {
    (*(void (**)(unsigned char *, uint64_t))(v11 + 96))(v14, v10);
    uint64_t v16 = *(void (**)(char *, void, uint64_t))(v4 + 104);
    if (*v14 == 1) {
      v16(v6, *MEMORY[0x263F799A0], v3);
    }
    else {
      v16(v6, *MEMORY[0x263F79998], v3);
    }
    sub_20A8C6780();
    sub_20A5378F8(&qword_26763BA30, MEMORY[0x263F79990]);
    uint64_t v18 = v21;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  }
  else if (v15 == *MEMORY[0x263F5A0E8])
  {
    (*(void (**)(unsigned char *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F79998], v3);
    sub_20A8C6780();
    sub_20A5378F8(&qword_26763BA30, MEMORY[0x263F79990]);
    uint64_t v17 = v21;
    sub_20A8C45B0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v17);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v14, v10);
  }
  sub_20A8C7630();
  sub_20A5378F8(&qword_26763BA28, MEMORY[0x263F7A588]);
  memset(v22, 0, sizeof(v22));
  sub_20A8C45D0();
  return sub_20A44349C((uint64_t)v22);
}

uint64_t sub_20A535B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a3;
  uint64_t v46 = a1;
  uint64_t v3 = sub_20A8C74A0();
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v51 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53703C(0, &qword_26763BA20, MEMORY[0x263F5A140]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = sub_20A8C7BF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v45 = (char *)&v43 - v12;
  uint64_t v50 = sub_20A8C7460();
  uint64_t v13 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v48 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v49 = (char *)&v43 - v16;
  uint64_t v17 = sub_20A8C7910();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_20A8C73B0();
  uint64_t v21 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  unint64_t v47 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v43 - v24;
  sub_20A8C78C0();
  int v26 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v20, v17);
  if (v26 == *MEMORY[0x263F5A008])
  {
    (*(void (**)(char *, uint64_t))(v18 + 96))(v20, v17);
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  if (v26 == *MEMORY[0x263F5A028])
  {
    uint64_t v27 = (unsigned int *)MEMORY[0x263F7A310];
    goto LABEL_6;
  }
  if (v26 == *MEMORY[0x263F5A030]
    || v26 == *MEMORY[0x263F5A010]
    || v26 == *MEMORY[0x263F5A038]
    || v26 == *MEMORY[0x263F5A020]
    || v26 == *MEMORY[0x263F5A018])
  {
LABEL_3:
    uint64_t v27 = (unsigned int *)MEMORY[0x263F7A318];
LABEL_6:
    uint64_t v28 = v54;
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v25, *v27, v54);
    goto LABEL_7;
  }
  uint64_t v38 = v54;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v25, *MEMORY[0x263F7A318], v54);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v28 = v38;
LABEL_7:
  uint64_t v29 = v45;
  sub_20A537940(v44, (uint64_t)v7, &qword_26763BA20, MEMORY[0x263F5A140]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_20A5379AC((uint64_t)v7, &qword_26763BA20, MEMORY[0x263F5A140]);
LABEL_11:
    uint64_t v32 = (unsigned int *)MEMORY[0x263F7A3D0];
LABEL_12:
    uint64_t v34 = v49;
    uint64_t v33 = v50;
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v49, *v32, v50);
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v29, v7, v8);
  uint64_t v30 = v43;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v43, v29, v8);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v30, v8);
  if (v31 == *MEMORY[0x263F5A130])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v8);
    goto LABEL_11;
  }
  int v39 = v31;
  if (v31 == *MEMORY[0x263F5A128])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v8);
    uint64_t v32 = (unsigned int *)MEMORY[0x263F7A3C0];
    goto LABEL_12;
  }
  if (v31 == *MEMORY[0x263F5A138])
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v29, v8);
    uint64_t v32 = (unsigned int *)MEMORY[0x263F7A3C8];
    goto LABEL_12;
  }
  int v40 = *MEMORY[0x263F5A120];
  uint64_t v41 = *(void (**)(char *, uint64_t))(v9 + 8);
  v41(v29, v8);
  uint64_t v42 = *(void (**)(char *, void, uint64_t))(v13 + 104);
  if (v39 == v40)
  {
    uint64_t v34 = v49;
    uint64_t v33 = v50;
    v42(v49, *MEMORY[0x263F7A3B8], v50);
  }
  else
  {
    uint64_t v34 = v49;
    uint64_t v33 = v50;
    v42(v49, *MEMORY[0x263F7A3D0], v50);
    v41(v43, v8);
  }
  uint64_t v28 = v54;
LABEL_13:
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v47, v25, v28);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v48, v34, v33);
  uint64_t v35 = v51;
  sub_20A8C7490();
  sub_20A5378F8(&qword_26763B148, MEMORY[0x263F7A420]);
  uint64_t v36 = v53;
  sub_20A8C45B0();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v36);
  sub_20A8C73C0();
  sub_20A5378F8((unint64_t *)&unk_26763B150, MEMORY[0x263F7A328]);
  memset(v55, 0, sizeof(v55));
  sub_20A8C45D0();
  sub_20A44349C((uint64_t)v55);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v34, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v25, v28);
}

uint64_t sub_20A53642C()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_20A5379AC(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData, &qword_26AC69B40, MEMORY[0x263F7A600]);
  sub_20A5379AC(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData, &qword_26AC69B68, MEMORY[0x263F7A700]);
  sub_20A5379AC(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData, &qword_26AC699E0, MEMORY[0x263F79DF8]);
  sub_20A5379AC(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData, &qword_26AC69960, MEMORY[0x263F79B40]);
  sub_20A5379AC(v0 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData, &qword_26AC676E0, MEMORY[0x263F79D08]);

  return swift_deallocClassInstance();
}

uint64_t sub_20A536574()
{
  return type metadata accessor for PaywallTracker();
}

uint64_t type metadata accessor for PaywallTracker()
{
  uint64_t result = qword_26AC678F0;
  if (!qword_26AC678F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5365C8()
{
  sub_20A53703C(319, &qword_26AC69B40, MEMORY[0x263F7A600]);
  if (v0 <= 0x3F)
  {
    sub_20A53703C(319, &qword_26AC69B68, MEMORY[0x263F7A700]);
    if (v1 <= 0x3F)
    {
      sub_20A53703C(319, &qword_26AC699E0, MEMORY[0x263F79DF8]);
      if (v2 <= 0x3F)
      {
        sub_20A53703C(319, &qword_26AC69960, MEMORY[0x263F79B40]);
        if (v3 <= 0x3F)
        {
          sub_20A53703C(319, &qword_26AC676E0, MEMORY[0x263F79D08]);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_20A5367F4()
{
  return sub_20A5335C8();
}

uint64_t sub_20A53681C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v22 = a4;
  uint64_t v23 = a3;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v6 = sub_20A8C7C40();
  uint64_t v21 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = sub_20A8C78D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  double v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v5;
  uint64_t v24 = *(void *)(*v5 + 16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, v22, v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v6);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + *(unsigned __int8 *)(v7 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v13, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v17 + v16, (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  uint64_t v18 = (void *)(v17 + ((v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = v26;
  *uint64_t v18 = v25;
  v18[1] = v19;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A536A70()
{
  return sub_20A8C4980();
}

uint64_t sub_20A536AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C2800();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - v10;
  double v12 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v12((char *)&v19 - v10, a1, v4, v9);
  ((void (*)(char *, uint64_t, uint64_t))v12)(v7, a2, v4);
  uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (v13 + 16) & ~v13;
  uint64_t v15 = (v6 + v13 + v14) & ~v13;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v17(v16 + v14, v11, v4);
  v17(v16 + v15, v7, v4);
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A536C98(uint64_t a1)
{
  uint64_t v2 = sub_20A8C7BC0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  double v5 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_20A8C48E0();
  return swift_release();
}

uint64_t sub_20A536DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v2 = sub_20A8C78D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  double v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (void (*)(uint64_t))MEMORY[0x263F5A140];
  uint64_t v18 = (void (*)(uint64_t))MEMORY[0x263F5A140];
  sub_20A53703C(0, &qword_26763BA20, MEMORY[0x263F5A140]);
  uint64_t v17 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  double v12 = (char *)&v17 - v11;
  sub_20A8C7AE0();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v20, v2);
  sub_20A537940((uint64_t)v12, (uint64_t)v9, &qword_26763BA20, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v14 = (v4 + *(unsigned __int8 *)(v17 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v13, v5, v2);
  sub_20A537244((uint64_t)v9, v15 + v14);
  sub_20A8C48E0();
  swift_release();
  return sub_20A5379AC((uint64_t)v12, &qword_26763BA20, v18);
}

void sub_20A53703C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A537090()
{
  uint64_t v1 = sub_20A8C78D0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  sub_20A53703C(0, &qword_26763BA20, MEMORY[0x263F5A140]);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(*(void *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v7 = sub_20A8C7BF0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v6, 1, v7)) {
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v6, v7);
  }

  return swift_deallocObject();
}

uint64_t sub_20A537244(uint64_t a1, uint64_t a2)
{
  sub_20A53703C(0, &qword_26763BA20, MEMORY[0x263F5A140]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5372C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C78D0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  sub_20A53703C(0, &qword_26763BA20, MEMORY[0x263F5A140]);
  uint64_t v7 = v1
     + ((v5 + *(unsigned __int8 *)(*(void *)(v6 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));

  return sub_20A535B98(a1, v1 + v4, v7);
}

uint64_t sub_20A5373B4()
{
  uint64_t v1 = sub_20A8C7BC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A537444(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C7BC0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_20A53569C(a1, v4);
}

uint64_t sub_20A5374B4()
{
  uint64_t v1 = sub_20A8C2800();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = (*(void *)(v2 + 64) + v4 + v5) & ~v4;
  v3(v0 + v5, v1);
  v3(v0 + v6, v1);

  return swift_deallocObject();
}

uint64_t sub_20A537578()
{
  sub_20A8C2800();

  return sub_20A5355F0();
}

uint64_t sub_20A537614()
{
  uint64_t v1 = sub_20A8C78D0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C7C40();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A537784(char *a1)
{
  uint64_t v3 = *(void *)(sub_20A8C78D0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C7C40() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void **)(v1 + 16);
  uint64_t v9 = v1 + v7;
  uint64_t v10 = (uint64_t *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_20A534760(a1, v8, v1 + v4, v9, v11, v12);
}

uint64_t sub_20A53788C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A53703C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A5378F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A537940(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A53703C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A5379AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A53703C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A537A08()
{
  uint64_t v0 = sub_20A8C4270();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4260();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D108], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D110], v0);
  v9[15] = 1;
  sub_20A4B00C0();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26AC69058 = result;
  return result;
}

uint64_t static Settings.ChartOptions.showYTD.getter()
{
  if (qword_26AC69060 != -1) {
    swift_once();
  }

  return swift_retain();
}

ValueMetadata *type metadata accessor for Settings.ChartOptions()
{
  return &type metadata for Settings.ChartOptions;
}

void sub_20A537C24(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = sub_20A8C7130();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A537FCC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4530();
  double v14 = MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v24 - v15, a1, v13, v14);
  if (swift_dynamicCast())
  {
    uint64_t v25 = v7;
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = (void *)sub_20A8C4510();
    uint64_t v19 = sub_20A8C4840();
    unint64_t v21 = v20;

    if (!v3)
    {
      sub_20A538060(&qword_26AC69A88, MEMORY[0x263F7A0C8]);
      sub_20A8C5950();
      sub_20A531704(v19, v21);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v17, v25, v5);
      uint64_t v22 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
    }
  }
  else
  {
    uint64_t v23 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v28, 1, 1, v23);
  }
}

uint64_t type metadata accessor for AppSessionStartEventTranslator()
{
  return self;
}

void sub_20A537FB4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_20A537FCC()
{
  if (!qword_26AC69340)
  {
    sub_20A8C7140();
    sub_20A538060(&qword_26AC69A90, MEMORY[0x263F7A0D8]);
    unint64_t v0 = sub_20A8C4530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69340);
    }
  }
}

uint64_t sub_20A538060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_OWORD *sub_20A5380A8(uint64_t a1, uint64_t a2, char *a3, _OWORD *a4)
{
  uint64_t v161 = a3;
  uint64_t v160 = a4;
  uint64_t v157 = a1;
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v158 = *(void *)(v4 - 8);
  uint64_t v159 = v4;
  uint64_t v5 = *(void *)(v158 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v156 = (char *)v135 - v6;
  uint64_t v7 = sub_20A8CBD00();
  uint64_t v154 = *(void *)(v7 - 8);
  uint64_t v155 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v153 = (char *)v135 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53D258(0, (unint64_t *)&unk_26AC67790, MEMORY[0x263F81DF8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v152 = (char *)v135 - v10;
  uint64_t v11 = sub_20A8CBCD0();
  uint64_t v147 = *(void *)(v11 - 8);
  uint64_t v148 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v146 = (char *)v135 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8CBCE0();
  uint64_t v150 = *(void *)(v13 - 8);
  uint64_t v151 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v149 = (char *)v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StockViewModel();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)v135 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)v135 - v22;
  uint64_t v24 = type metadata accessor for StockListLayoutModel();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53C160(0, (unint64_t *)&qword_26AC6A198, (uint64_t (*)(uint64_t))type metadata accessor for StockListLayoutModel, sub_20A44D53C, MEMORY[0x263F7D648]);
  sub_20A8C9150();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v140 = v16;
    uint64_t v141 = v5;
    uint64_t v142 = v17;
    uint64_t v143 = v20;
    uint64_t v145 = (char *)v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20A5016B4();
    memcpy(v163, &v26[*(int *)(v59 + 48)], 0x150uLL);
    uint64_t v144 = v23;
    sub_20A4C8874((uint64_t)v26, (uint64_t)v23);
    sub_20A53C160(0, &qword_26AC6A338, (uint64_t (*)(uint64_t))type metadata accessor for StockView, sub_20A53C7C8, MEMORY[0x263F7D8A8]);
    id v136 = (id)sub_20A8CEB10();
    sub_20A8C98D0();
    sub_20A53D258(0, (unint64_t *)&unk_26AC68700, MEMORY[0x263F81E08], MEMORY[0x263F8E0F8]);
    uint64_t v139 = *(void *)(*(void *)(sub_20A8CBD40() - 8) + 72);
    uint64_t v160 = (_OWORD *)swift_allocObject();
    v160[1] = xmmword_20A8D4540;
    unsigned int v138 = *MEMORY[0x263F81DD8];
    uint64_t v60 = v149;
    uint64_t v61 = v150;
    uint64_t v137 = *(void (**)(char *))(v150 + 104);
    uint64_t v62 = v151;
    v137(v149);
    uint64_t v63 = sub_20A8CBD10();
    uint64_t v64 = *(void *)(v63 - 8);
    v135[0] = *(void *)(v64 + 56);
    v135[1] = v64 + 56;
    uint64_t v65 = v152;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v135[0])(v152, 1, 1, v63);
    id v66 = v136;
    uint64_t v67 = v146;
    sub_20A8CBCC0();
    sub_20A8CBD20();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v67, v148);
    uint64_t v68 = *(void (**)(char *, uint64_t))(v61 + 8);
    v68(v60, v62);
    ((void (*)(char *, void, uint64_t))v137)(v60, v138, v62);
    uint64_t v69 = v63;
    uint64_t v70 = v162;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v135[0])(v65, 1, 1, v69);
    unint64_t v71 = v153;
    sub_20A8CBCF0();
    sub_20A8CBD30();
    (*(void (**)(char *, uint64_t))(v154 + 8))(v71, v155);
    v68(v60, v62);
    sub_20A8CED00();

    uint64_t v160 = v66;
    id v72 = objc_msgSend(v66, sel_backgroundView);
    if (v72)
    {
      uint64_t v73 = v72;
      id v74 = objc_msgSend(v72, sel_layer);

      objc_msgSend(v74, sel_setCornerRadius_, *(double *)(v70 + 240));
    }
    id v75 = objc_msgSend(v160, sel_backgroundView);
    if (v75)
    {
      uint64_t v76 = v75;
      swift_beginAccess();
      uint64_t v77 = *(void *)(v70 + 128);
      uint64_t v78 = *(void *)(v70 + 136);
      uint64_t v79 = __swift_project_boxed_opaque_existential_1((void *)(v70 + 104), v77);
      uint64_t v80 = *(void *)(v77 - 8);
      double v81 = MEMORY[0x270FA5388](v79);
      uint64_t v83 = (char *)v135 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v80 + 16))(v83, v81);
      unint64_t v84 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v78 + 16) + 56))(v77);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v83, v77);
      objc_msgSend(v76, sel_setBackgroundColor_, v84);
    }
    sub_20A53C26C();
    uint64_t v85 = (char *)sub_20A8C9920();
    uint64_t v86 = (char *)*(id *)&v85[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];

    id v87 = *(id *)&v86[OBJC_IVAR____TtCC8StocksUI9StockView17PriceChangeButton_onTap];
    uint64_t v88 = swift_allocObject();
    swift_weakInit();
    uint64_t v89 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v90 = swift_allocObject();
    *(void *)(v90 + 16) = v88;
    *(void *)(v90 + 24) = v89;

    swift_release();
    uint64_t v91 = (void *)sub_20A8C9920();
    swift_retain();

    swift_allocObject();
    swift_weakInit();
    sub_20A8CB3C0();
    swift_release();
    swift_release();
    uint64_t v155 = sub_20A8C9920();
    uint64_t v92 = swift_allocObject();
    swift_weakInit();
    uint64_t v93 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v94 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v95 = v158;
    uint64_t v96 = v156;
    uint64_t v97 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v158 + 16))(v156, v157, v159);
    unint64_t v98 = (*(unsigned __int8 *)(v95 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80);
    uint64_t v99 = (char *)swift_allocObject();
    *((void *)v99 + 2) = v92;
    *((void *)v99 + 3) = v93;
    *((void *)v99 + 4) = v94;
    (*(void (**)(char *, char *, uint64_t))(v95 + 32))(&v99[v98], v96, v97);
    uint64_t v100 = (void *)v155;
    uint64_t v101 = (uint64_t (**)())(v155 + OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions);
    uint64_t v102 = *(void *)(v155 + OBJC_IVAR____TtC8StocksUI9StockView_makeAccessibilityCustomActions);
    uint64_t *v101 = sub_20A53C99C;
    v101[1] = (uint64_t (*)())v99;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_20A459CA4(v102);
    swift_release();
    swift_release();
    swift_release();

    uint64_t v103 = swift_allocObject();
    swift_weakInit();
    uint64_t v104 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v105 = (uint64_t)v143;
    sub_20A53D3C0((uint64_t)v144, (uint64_t)v143, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    sub_20A53D3C0(v105, (uint64_t)v145, (uint64_t (*)(void))type metadata accessor for StockViewModel);
    unint64_t v106 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
    unint64_t v107 = (v142 + v106 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v103;
    *(void *)(v108 + 24) = v104;
    sub_20A4C8874(v105, v108 + v106);
    uint64_t v109 = (void *)(v108 + v107);
    uint64_t v33 = v160;
    memcpy(v109, v163, 0x150uLL);
    uint64_t v161 = (char *)v103;
    swift_retain();
    swift_retain();
    sub_20A53CE6C((uint64_t)v163);
    uint64_t v110 = (void *)sub_20A8C9950();
    uint64_t v111 = swift_allocObject();
    *(void *)(v111 + 16) = sub_20A53CDDC;
    *(void *)(v111 + 24) = v108;
    swift_retain();

    swift_release();
    uint64_t v112 = (void *)sub_20A8C98F0();
    uint64_t v113 = swift_allocObject();
    *(void *)(v113 + 16) = sub_20A53CDDC;
    *(void *)(v113 + 24) = v108;
    swift_retain();

    swift_release();
    uint64_t v114 = (void *)sub_20A8C9900();
    uint64_t v115 = swift_allocObject();
    *(void *)(v115 + 16) = sub_20A53CDDC;
    *(void *)(v115 + 24) = v108;
    swift_retain();

    swift_release();
    uint64_t v116 = (void *)sub_20A8C9930();
    uint64_t v117 = swift_allocObject();
    swift_weakInit();
    uint64_t v118 = swift_allocObject();
    swift_unknownObjectWeakInit();
    int v119 = (void *)swift_allocObject();
    v119[2] = v117;
    v119[3] = v118;
    memcpy(v119 + 4, v163, 0x150uLL);
    sub_20A53CE6C((uint64_t)v163);

    swift_release();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_beginAccess();
      uint64_t v120 = MEMORY[0x2105289B0](v104 + 16);
      if (v120)
      {
        uint64_t v121 = (void *)v120;
        swift_unknownObjectRetain();
        uint64_t v122 = (char *)sub_20A8C9920();
        sub_20A4863B4(v145, (uint64_t)v163, v122, 0);
        swift_unknownObjectRelease();

        char v123 = sub_20A8C98E0();
        uint64_t v124 = (void *)sub_20A8C9920();
        uint64_t v125 = (void *)sub_20A8C9920();
        unint64_t v126 = (unint64_t)objc_msgSend(v125, sel_accessibilityTraits);

        uint64_t v127 = *MEMORY[0x263F832A8];
        if (v123)
        {
          if (v126)
          {
            if ((v127 & ~v126) == 0) {
              goto LABEL_36;
            }
          }
          else if (!v127)
          {
            unint64_t v126 = 0;
            goto LABEL_36;
          }
          v126 |= v127;
LABEL_36:
          objc_msgSend(v124, sel_setAccessibilityTraits_, v126);
          swift_release();
          swift_release();

          goto LABEL_37;
        }
        objc_msgSend(v124, sel_setAccessibilityTraits_, v126 & ~v127);
        swift_release();

        swift_release();
LABEL_37:
        sub_20A50384C((uint64_t)v163);
        swift_release();
        swift_release();
        sub_20A53CF64((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        sub_20A53CF64((uint64_t)v144, (uint64_t (*)(void))type metadata accessor for StockViewModel);
        return v33;
      }
      swift_release();
    }
    swift_release();
    goto LABEL_37;
  }
  if (EnumCaseMultiPayload != 1)
  {
    long long v128 = *((_OWORD *)v26 + 5);
    v163[4] = *((_OWORD *)v26 + 4);
    v163[5] = v128;
    v163[6] = *((_OWORD *)v26 + 6);
    LOBYTE(v163[7]) = v26[112];
    long long v129 = *((_OWORD *)v26 + 1);
    v163[0] = *(_OWORD *)v26;
    v163[1] = v129;
    long long v130 = *((_OWORD *)v26 + 3);
    v163[2] = *((_OWORD *)v26 + 2);
    v163[3] = v130;
    sub_20A53C160(0, &qword_26AC6A330, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListView, sub_20A53C1E0, MEMORY[0x263F7D8A8]);
    uint64_t v33 = (_OWORD *)sub_20A8CEB10();
    uint64_t v131 = (char *)sub_20A8C9920();
    sub_20A6C56E4((double *)v163, v131);

    uint64_t v132 = (char *)sub_20A8C9920();
    id v133 = *(id *)&v132[OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap];

    swift_allocObject();
    swift_weakInit();

LABEL_24:
    swift_release();
    return v33;
  }
  uint64_t v28 = *(void *)v26;
  uint64_t v29 = *((void *)v26 + 1);
  uint64_t v158 = *((void *)v26 + 2);
  uint64_t v159 = v28;
  uint64_t v157 = *((void *)v26 + 3);
  long long v30 = *((_OWORD *)v26 + 5);
  v163[2] = *((_OWORD *)v26 + 4);
  v163[3] = v30;
  long long v31 = *((_OWORD *)v26 + 7);
  v163[4] = *((_OWORD *)v26 + 6);
  v163[5] = v31;
  long long v32 = *((_OWORD *)v26 + 3);
  v163[0] = *((_OWORD *)v26 + 2);
  v163[1] = v32;
  sub_20A53C160(0, &qword_26AC6A348, (uint64_t (*)(uint64_t))type metadata accessor for TodayView, sub_20A53C6D4, MEMORY[0x263F7D8A8]);
  uint64_t v33 = (_OWORD *)sub_20A8CEB10();
  sub_20A8C98D0();
  uint64_t v34 = (unsigned char *)sub_20A8C9920();
  v34[OBJC_IVAR____TtC8StocksUI9TodayView_shouldChangeLabelAlphaWhenEditing] = !UIAccessibilityDarkerSystemColorsEnabled();

  sub_20A53C26C();
  uint64_t v35 = (void *)sub_20A8C9920();
  swift_retain();

  swift_allocObject();
  swift_weakInit();
  sub_20A8CB3C0();
  swift_release();
  swift_release();
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = (_OWORD *)swift_allocObject();
  uint64_t v161 = (char *)(v37 + 1);
  swift_unknownObjectWeakInit();
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v36;
  *(void *)(v38 + 24) = v37;
  *(void *)(v38 + 32) = v159;
  *(void *)(v38 + 40) = v29;
  uint64_t v39 = v157;
  *(void *)(v38 + 48) = v158;
  *(void *)(v38 + 56) = v39;
  long long v40 = v163[3];
  *(_OWORD *)(v38 + 96) = v163[2];
  *(_OWORD *)(v38 + 112) = v40;
  long long v41 = v163[5];
  *(_OWORD *)(v38 + 128) = v163[4];
  *(_OWORD *)(v38 + 144) = v41;
  long long v42 = v163[1];
  *(_OWORD *)(v38 + 64) = v163[0];
  *(_OWORD *)(v38 + 80) = v42;
  swift_retain();
  swift_retain();
  uint64_t v162 = v29;
  uint64_t v43 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = (void *)sub_20A8C9950();
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_20A53C774;
  *(void *)(v45 + 24) = v38;
  swift_retain();

  swift_release();
  uint64_t v46 = (void *)sub_20A8C98F0();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = sub_20A53C774;
  *(void *)(v47 + 24) = v38;
  swift_retain();

  swift_release();
  uint64_t v48 = (void *)sub_20A8C9900();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_20A53C774;
  *(void *)(v49 + 24) = v38;
  swift_retain();

  swift_release();
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    swift_release();
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v160 = v37;
  unint64_t v156 = (char *)v36;
  uint64_t v50 = v161;
  swift_beginAccess();
  uint64_t v51 = MEMORY[0x2105289B0](v50);
  if (!v51)
  {
    swift_release();
    swift_release();
    goto LABEL_23;
  }
  uint64_t v52 = (void *)v51;
  swift_unknownObjectRetain();
  uint64_t v53 = (char *)sub_20A8C9920();
  sub_20A8915C0(v159, v162, v158, v43, (double *)v163, v53, 0);
  swift_unknownObjectRelease();

  char v54 = sub_20A8C98E0();
  uint64_t v55 = (void *)sub_20A8C9920();
  uint64_t v56 = (void *)sub_20A8C9920();
  unint64_t v57 = (unint64_t)objc_msgSend(v56, sel_accessibilityTraits);

  uint64_t v58 = *MEMORY[0x263F832A8];
  if (v54)
  {
    if (v57)
    {
      if ((v58 & ~v57) == 0) {
        goto LABEL_34;
      }
    }
    else if (!v58)
    {
      unint64_t v57 = 0;
      goto LABEL_34;
    }
    v57 |= v58;
LABEL_34:
    objc_msgSend(v55, sel_setAccessibilityTraits_, v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    return v33;
  }
  objc_msgSend(v55, sel_setAccessibilityTraits_, v57 & ~v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  return v33;
}

void sub_20A53970C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    swift_beginAccess();
    uint64_t v5 = MEMORY[0x2105289B0](a2 + 16);
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = MEMORY[0x2105289B0](v4 + 16);
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = (char *)sub_20A8C9920();
        id v10 = *(id *)&v9[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];

        uint64_t v11 = *(void *)(*(void *)(v8 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v11 + 56))(ObjectType, v11);

        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_20A539830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v99 = a4;
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v98 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v97 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v96 = (char *)&v82 - v8;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_20A8C2B70();
  uint64_t v12 = *(char **)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v82 - v16;
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v82 - v19;
  MEMORY[0x270FA5388](v21);
  uint64_t v105 = (char *)&v82 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v24 = MEMORY[0x263F8EE78];
  if (Strong)
  {
    uint64_t v25 = Strong;
    swift_beginAccess();
    uint64_t v26 = MEMORY[0x2105289B0](a2 + 16);
    if (!v26)
    {
      swift_release();
      return v24;
    }
    uint64_t v27 = (void *)v26;
    swift_beginAccess();
    id v110 = (id)MEMORY[0x2105289B0](a3 + 16);
    if (!v110)
    {
      swift_release();

      return v24;
    }
    uint64_t v104 = v20;
    uint64_t v102 = v17;
    uint64_t v93 = v14;
    uint64_t v119 = v24;
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v89 = self;
    uint64_t v90 = ObjCClassFromMetadata;
    id v29 = objc_msgSend(v89, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    uint64_t v30 = swift_allocObject();
    uint64_t v92 = v25;
    swift_weakInit();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v30;
    *(void *)(v31 + 24) = v27;
    id v32 = objc_allocWithZone(MEMORY[0x263F823A0]);
    swift_retain();
    id v109 = v27;
    uint64_t v33 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    uint64_t v117 = sub_20A53CF5C;
    uint64_t v118 = v31;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v114 = 1107296256;
    uint64_t v88 = &v115;
    uint64_t v115 = sub_20A53C214;
    uint64_t v116 = &block_descriptor_14;
    uint64_t v34 = _Block_copy(&aBlock);
    id v35 = objc_msgSend(v32, sel_initWithName_actionHandler_, v33, v34);

    _Block_release(v34);
    swift_release();
    swift_release();
    unint64_t v36 = (unint64_t)v35;
    MEMORY[0x2105268E0]();
    if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_27:
    }
      sub_20A8CE690();
    id v83 = (id)v36;
    sub_20A8CE6B0();
    sub_20A8CE620();
    int v37 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    unint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    unint64_t v106 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v101 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v100 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v87 = v7 + 16;
    uint64_t v91 = v7;
    uint64_t v86 = v7 + 32;
    unint64_t v85 = 0x800000020A8FF370;
    unint64_t v84 = 0x800000020A8FF330;
    long long v40 = v93;
    uint64_t v12 = v104;
    long long v41 = v105;
    long long v42 = v109;
    uint64_t v103 = v39;
    while (1)
    {
      int v112 = v37;
      unsigned int v44 = *((unsigned __int8 *)&unk_26BE5E9F0 + v38 + 32);
      id v45 = objc_msgSend(v110, sel_indexPathForCell_, v42);
      if (v45)
      {
        uint64_t v46 = v45;
        unsigned int v108 = v44;
        sub_20A8C2B10();

        uint64_t v47 = *v39;
        uint64_t v43 = (uint64_t)v11;
        uint64_t v48 = v111;
        (*v39)(v11, v12, v111);
        (*v107)(v11, 0, 1, v48);
        if ((*v106)(v11, 1, v48) != 1)
        {
          uint64_t v7 = v111;
          v47(v41, v11, v111);
          uint64_t v49 = sub_20A8C2B30();
          unint64_t v36 = v108;
          uint64_t v50 = -1;
          if (!v108) {
            uint64_t v50 = 1;
          }
          uint64_t v51 = v49 + v50;
          if (__OFADD__(v49, v50))
          {
            __break(1u);
            goto LABEL_27;
          }
          uint64_t v52 = sub_20A8C2B60();
          uint64_t v53 = v102;
          MEMORY[0x21051AE40](v51, v52);
          uint64_t v54 = sub_20A8C2B30();
          (*v101)(v40, v53, v7);
          uint64_t v55 = v7;
          if (v54 < 0)
          {
            uint64_t v63 = *v100;
            (*v100)(v40, v55);
            v63(v53, v55);
            v63(v41, v55);
            uint64_t v39 = v103;
            long long v42 = v109;
            uint64_t v12 = v104;
          }
          else
          {
            uint64_t v56 = sub_20A8C2B30();
            id v57 = objc_msgSend(v110, sel_numberOfItemsInSection_, sub_20A8C2B60());
            uint64_t v58 = *v100;
            (*v100)(v40, v7);
            v58(v53, v7);
            v58(v105, v7);
            long long v41 = v105;
            BOOL v59 = v56 < (uint64_t)v57;
            uint64_t v39 = v103;
            long long v42 = v109;
            uint64_t v12 = v104;
            if (v59)
            {
              id v60 = objc_msgSend(v89, sel_bundleForClass_, v90);
              sub_20A8C2370();
              uint64_t v94 = v61;

              id v62 = objc_msgSend(self, sel_configurationWithPointSize_, 30.0);
              uint64_t v64 = (void *)sub_20A8CE240();
              id v95 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v64, v62);

              uint64_t v65 = swift_allocObject();
              swift_weakInit();
              uint64_t v66 = v91;
              uint64_t v67 = v96;
              uint64_t v68 = v98;
              (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v96, v99, v98);
              unint64_t v69 = (*(unsigned __int8 *)(v66 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
              uint64_t v70 = swift_allocObject();
              id v71 = v110;
              *(void *)(v70 + 16) = v65;
              *(void *)(v70 + 24) = v71;
              id v72 = v109;
              *(void *)(v70 + 32) = v109;
              *(unsigned char *)(v70 + 40) = v108;
              (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v70 + v69, v67, v68);
              id v73 = objc_allocWithZone(MEMORY[0x263F823A0]);
              id v74 = v72;
              id v75 = v95;
              swift_retain();
              id v76 = v71;
              uint64_t v77 = (void *)sub_20A8CE240();
              swift_bridgeObjectRelease();
              uint64_t v117 = sub_20A53D0E4;
              uint64_t v118 = v70;
              uint64_t aBlock = MEMORY[0x263EF8330];
              uint64_t v114 = 1107296256;
              uint64_t v115 = sub_20A53C214;
              uint64_t v116 = &block_descriptor_69;
              uint64_t v78 = _Block_copy(&aBlock);
              id v79 = objc_msgSend(v73, sel_initWithName_image_actionHandler_, v77, v75, v78);

              _Block_release(v78);
              swift_release();
              swift_release();
              id v80 = v79;
              MEMORY[0x2105268E0]();
              if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_20A8CE690();
              }
              sub_20A8CE6B0();
              sub_20A8CE620();

              long long v40 = v93;
              uint64_t v12 = v104;
              long long v41 = v105;
              long long v42 = v109;
              uint64_t v39 = v103;
            }
          }
          goto LABEL_8;
        }
      }
      else
      {
        uint64_t v43 = (uint64_t)v11;
        (*v107)(v11, 1, 1, v111);
      }
      sub_20A53CF64(v43, (uint64_t (*)(void))sub_20A469FF4);
      long long v42 = v109;
      uint64_t v11 = (char *)v43;
LABEL_8:
      int v37 = 1;
      uint64_t v38 = 1u;
      if (v112)
      {

        swift_release();
        return v119;
      }
    }
  }
  return v24;
}

uint64_t sub_20A53A4F8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = MEMORY[0x2105289B0](result + 16);
    swift_release();
    if (v1)
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        uint64_t v2 = (char *)sub_20A8C9920();
        id v3 = *(id *)&v2[OBJC_IVAR____TtC8StocksUI9StockView_priceChangeButton];

        uint64_t v4 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockListViewController_eventHandler) + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v4 + 56))(ObjectType, v4);

        swift_unknownObjectRelease();
        swift_release();
        return 1;
      }
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return result;
}

uint64_t sub_20A53A610(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v33 = a6;
  int v34 = a5;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C2B70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v31 - v16;
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v31 - v19;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v32 = v12;
  uint64_t v22 = MEMORY[0x2105289B0](result + 16);
  swift_release();
  if (!v22) {
    return 0;
  }
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  id v23 = objc_msgSend(a3, sel_indexPathForCell_, a4);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v10, 1, 1, v11);
    goto LABEL_12;
  }
  uint64_t v24 = v23;
  sub_20A8C2B10();

  uint64_t v25 = v32;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v26(v10, v17, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
  {
LABEL_12:
    swift_unknownObjectRelease();
    swift_release();
    sub_20A53CF64((uint64_t)v10, (uint64_t (*)(void))sub_20A469FF4);
    return 0;
  }
  v26(v20, v10, v11);
  uint64_t result = sub_20A8C2B30();
  uint64_t v27 = -1;
  if ((v34 & 1) == 0) {
    uint64_t v27 = 1;
  }
  uint64_t v28 = result + v27;
  if (__OFADD__(result, v27))
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = sub_20A8C2B60();
    MEMORY[0x21051AE40](v28, v29);
    sub_20A717C60(v33, (uint64_t)v20, (uint64_t)v14);
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v32 + 8);
    v30(v14, v11);
    v30(v20, v11);
    return 1;
  }
  return result;
}

void sub_20A53A97C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v7 = MEMORY[0x2105289B0](a2 + 16);
    if (!v7)
    {
      swift_release();
      return;
    }
    uint64_t v8 = (void *)v7;
    swift_unknownObjectRetain();
    uint64_t v9 = (char *)sub_20A8C9920();
    sub_20A4863B4(a3, a4, v9, 0);
    swift_unknownObjectRelease();

    char v10 = sub_20A8C98E0();
    uint64_t v11 = (void *)sub_20A8C9920();
    uint64_t v12 = (void *)sub_20A8C9920();
    unint64_t v13 = (unint64_t)objc_msgSend(v12, sel_accessibilityTraits);

    uint64_t v14 = *MEMORY[0x263F832A8];
    if ((v10 & 1) == 0)
    {
      objc_msgSend(v11, sel_setAccessibilityTraits_, v13 & ~v14);

      swift_release();
      return;
    }
    if (v13)
    {
      if ((v14 & ~v13) == 0) {
        goto LABEL_11;
      }
    }
    else if (!v14)
    {
      unint64_t v13 = 0;
      goto LABEL_11;
    }
    v13 |= v14;
LABEL_11:
    objc_msgSend(v11, sel_setAccessibilityTraits_, v13);
    swift_release();
  }
}

void sub_20A53AB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    swift_beginAccess();
    uint64_t v7 = MEMORY[0x2105289B0](a2 + 16);
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      if (objc_msgSend(*(id *)(a3 + 328), sel_horizontalSizeClass) == (id)2)
      {
        id v9 = objc_msgSend(v8, sel_backgroundView);
        if (v9)
        {
          char v10 = v9;
          if ((sub_20A8C9940() & 1) != 0 && (sub_20A8C98E0() & 1) == 0)
          {
            swift_beginAccess();
            uint64_t v11 = v6[16];
            uint64_t v19 = v6[17];
            unint64_t v20 = __swift_project_boxed_opaque_existential_1(v6 + 13, v11);
            uint64_t v14 = *(void *)(v11 - 8);
            double v21 = MEMORY[0x270FA5388](v20);
            uint64_t v17 = (char *)&v24 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v14 + 16))(v17, v21);
            uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v19 + 16) + 80))(v11);
          }
          else
          {
            swift_beginAccess();
            uint64_t v11 = v6[16];
            uint64_t v12 = v6[17];
            unint64_t v13 = __swift_project_boxed_opaque_existential_1(v6 + 13, v11);
            uint64_t v14 = *(void *)(v11 - 8);
            double v15 = MEMORY[0x270FA5388](v13);
            uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, double))(v14 + 16))(v17, v15);
            uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 16) + 56))(v11);
          }
          id v23 = (void *)v18;
          (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v11);
          objc_msgSend(v10, sel_setBackgroundColor_, v23);
        }
      }
      swift_release();
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_20A53ADFC@<X0>(unsigned __int8 *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    goto LABEL_5;
  }
  id v3 = (void *)MEMORY[0x2105289B0](result + 16);
  if (!v3)
  {
    uint64_t result = swift_release();
LABEL_5:
    unsigned __int8 v4 = 0;
    goto LABEL_6;
  }
  unsigned __int8 v4 = objc_msgSend(v3, sel_isEditing);
  swift_unknownObjectRelease();
  uint64_t result = swift_release();
LABEL_6:
  *a1 = v4;
  return result;
}

void sub_20A53AE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v13 = MEMORY[0x2105289B0](a2 + 16);
    if (!v13)
    {
      swift_release();
      return;
    }
    uint64_t v14 = (void *)v13;
    swift_unknownObjectRetain();
    double v15 = (char *)sub_20A8C9920();
    sub_20A8915C0(a3, a4, a5, a6, a7, v15, 0);
    swift_unknownObjectRelease();

    char v16 = sub_20A8C98E0();
    uint64_t v17 = (void *)sub_20A8C9920();
    uint64_t v18 = (void *)sub_20A8C9920();
    unint64_t v19 = (unint64_t)objc_msgSend(v18, sel_accessibilityTraits);

    uint64_t v20 = *MEMORY[0x263F832A8];
    if ((v16 & 1) == 0)
    {
      objc_msgSend(v17, sel_setAccessibilityTraits_, v19 & ~v20);

      swift_release();
      return;
    }
    if (v19)
    {
      if ((v20 & ~v19) == 0) {
        goto LABEL_11;
      }
    }
    else if (!v20)
    {
      unint64_t v19 = 0;
      goto LABEL_11;
    }
    v19 |= v20;
LABEL_11:
    objc_msgSend(v17, sel_setAccessibilityTraits_, v19);
    swift_release();
  }
}

uint64_t sub_20A53B044()
{
  sub_20A484450(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1((void *)(result + 160), *(void *)(result + 184));
    sub_20A8C3600();
    swift_getObjectType();
    if (qword_26AC6ABD0 != -1) {
      swift_once();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v2, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    sub_20A8C8D40();
    sub_20A53CF64((uint64_t)v2, (uint64_t (*)(void))sub_20A484450);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_20A53B280()
{
  sub_20A4380C4(v0 + 16);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 160);
  __swift_destroy_boxed_opaque_existential_1(v0 + 200);
  return v0;
}

uint64_t sub_20A53B2E8()
{
  sub_20A53B280();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockListBlueprintViewCellProvider()
{
  return self;
}

uint64_t sub_20A53B340()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F7D8A8];
  sub_20A53C160(0, &qword_26AC6A338, (uint64_t (*)(uint64_t))type metadata accessor for StockView, sub_20A53C7C8, MEMORY[0x263F7D8A8]);
  sub_20A8CEB30();
  sub_20A53C160(0, &qword_26AC6A348, (uint64_t (*)(uint64_t))type metadata accessor for TodayView, sub_20A53C6D4, v0);
  sub_20A8CEB30();
  sub_20A53C160(0, &qword_26AC6A340, (uint64_t (*)(uint64_t))type metadata accessor for StockListSectionHeaderView, sub_20A53D1DC, v0);
  sub_20A8CEB30();
  sub_20A53C160(0, &qword_26AC6A330, (uint64_t (*)(uint64_t))type metadata accessor for EmptyListView, sub_20A53C1E0, v0);
  return sub_20A8CEB30();
}

_OWORD *sub_20A53B4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char **a3@<X2>, _OWORD *a4@<X3>, void *a5@<X8>)
{
  uint64_t result = sub_20A5380A8(a1, a2, *a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_20A53B4D4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_20A4342F4(v2 + 104, (uint64_t)v12);
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 8);
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v9);
  v7(a2, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v2 + 104);
  sub_20A42BEBC(&v9, v2 + 104);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  sub_20A8CA6E0();
  swift_getObjectType();
  return sub_20A8CA6E0();
}

uint64_t sub_20A53B62C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v92 = a2;
  sub_20A53D258(0, &qword_26AC6AD40, MEMORY[0x263F81F70], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v83 - v5;
  uint64_t v87 = type metadata accessor for StockListModel(0);
  MEMORY[0x270FA5388](v87);
  uint64_t v8 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v93 = v9;
  uint64_t v96 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)&v83 - v10;
  sub_20A53D2BC(0, (unint64_t *)&qword_26AC6ACF0, MEMORY[0x263F7E0A8]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  double v15 = (char *)&v83 - v14;
  sub_20A42D908(0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  double v21 = (char *)&v83 - v20;
  uint64_t v94 = sub_20A8CB300();
  uint64_t v89 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  id v23 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v83 - v26;
  id v28 = objc_msgSend(a1, sel_horizontalSizeClass, v25);
  uint64_t v86 = v6;
  unint64_t v85 = v23;
  uint64_t v29 = v27;
  if (v28 == (id)2) {
    sub_20A8CB2F0();
  }
  else {
    sub_20A8CB2E0();
  }
  uint64_t v30 = v95;
  uint64_t v97 = v95[4];
  sub_20A53D2BC(0, &qword_26AC6A048, MEMORY[0x263F7D550]);
  sub_20A53D34C();
  sub_20A8C9490();
  uint64_t v31 = (uint64_t)v21;
  sub_20A8CBA70();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_20A53D3C0((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))sub_20A42D908);
  uint64_t v32 = v96;
  uint64_t v33 = v93;
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 48))(v18, 1, v93);
  uint64_t v90 = v31;
  if (v34 == 1)
  {
    sub_20A53CF64((uint64_t)v18, (uint64_t (*)(void))sub_20A42D908);
    sub_20A53D428();
    uint64_t v96 = *(int *)(v35 + 48);
    uint64_t v36 = v89;
    uint64_t v37 = v91;
    uint64_t v38 = v94;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v91, v29, v94);
    swift_beginAccess();
    uint64_t v39 = v30[16];
    uint64_t v40 = v30[17];
    long long v41 = __swift_project_boxed_opaque_existential_1(v30 + 13, v39);
    uint64_t v42 = *(void *)(v39 - 8);
    double v43 = MEMORY[0x270FA5388](v41);
    id v45 = (char *)&v83 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v42 + 16))(v45, v43);
    uint64_t v46 = (*(uint64_t (**)(uint64_t))(*(void *)(v40 + 16) + 144))(v39);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v39);
    sub_20A53CF64(v90, (uint64_t (*)(void))sub_20A42D908);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v38);
    *(void *)(v37 + v96) = v46;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v88, v18, v33);
    sub_20A8C8330();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v84 = v29;
        sub_20A8CB2C0();
        sub_20A8CB2D0();
        uint64_t v48 = *MEMORY[0x263F81F58];
        uint64_t v49 = sub_20A8CBD90();
        uint64_t v50 = *(void *)(v49 - 8);
        uint64_t v51 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 104))(v86, v48, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
        uint64_t v52 = v85;
        sub_20A8CB2B0();
        sub_20A53D428();
        uint64_t v92 = *(int *)(v53 + 48);
        uint64_t v54 = v89;
        uint64_t v55 = v91;
        uint64_t v56 = v94;
        (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v91, v52, v94);
        id v57 = v95;
        swift_beginAccess();
        uint64_t v58 = v57[16];
        uint64_t v59 = v57[17];
        id v60 = __swift_project_boxed_opaque_existential_1(v57 + 13, v58);
        uint64_t v61 = *(void *)(v58 - 8);
        double v62 = MEMORY[0x270FA5388](v60);
        uint64_t v64 = (char *)&v83 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v61 + 16))(v64, v62);
        uint64_t v65 = (*(uint64_t (**)(uint64_t))(*(void *)(v59 + 16) + 144))(v58);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v58);
        uint64_t v66 = *(void (**)(char *, uint64_t))(v54 + 8);
        v66(v52, v56);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v88, v93);
        sub_20A53CF64(v90, (uint64_t (*)(void))sub_20A42D908);
        v66(v84, v56);
        *(void *)(v55 + v92) = v65;
        uint64_t v67 = *MEMORY[0x263F7DFB0];
        uint64_t v68 = sub_20A8CB260();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104))(v55, v67, v68);
      }
    }
    else
    {
      sub_20A53CF64((uint64_t)v8, type metadata accessor for StockListStockModel);
    }
    sub_20A53D428();
    uint64_t v92 = *(int *)(v70 + 48);
    uint64_t v71 = v89;
    uint64_t v37 = v91;
    (*(void (**)(uint64_t, char *, uint64_t))(v89 + 16))(v91, v29, v94);
    id v72 = v95;
    swift_beginAccess();
    uint64_t v73 = v72[16];
    uint64_t v74 = v72[17];
    id v75 = __swift_project_boxed_opaque_existential_1(v72 + 13, v73);
    uint64_t v76 = *(void *)(v73 - 8);
    double v77 = MEMORY[0x270FA5388](v75);
    id v79 = (char *)&v83 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v76 + 16))(v79, v77);
    uint64_t v80 = (*(uint64_t (**)(uint64_t))(*(void *)(v74 + 16) + 144))(v73);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v79, v73);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v88, v33);
    sub_20A53CF64(v90, (uint64_t (*)(void))sub_20A42D908);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v94);
    *(void *)(v37 + v92) = v80;
  }
  uint64_t v81 = *MEMORY[0x263F7DFB0];
  uint64_t v82 = sub_20A8CB260();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 104))(v37, v81, v82);
}

void sub_20A53C160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A53C1E0()
{
  return sub_20A53D210(&qword_26AC6D118, (void (*)(uint64_t))type metadata accessor for EmptyListView);
}

uint64_t sub_20A53C214(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

uint64_t sub_20A53C26C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C8DF0();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v37 = (uint64_t **)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_20A8CB1A0();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x270FA5388](v4);
  int v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C9A90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)sub_20A8C98C0();
  swift_beginAccess();
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v13 = __swift_project_boxed_opaque_existential_1((void *)(v1 + 104), *(void *)(v1 + 128));
  uint64_t v14 = *(void *)(v11 - 8);
  double v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v14 + 16))(v17, v15);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v12 + 16) + 80))(v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v11);
  objc_msgSend(v10, sel_setBackgroundColor_, v18);

  uint64_t v19 = (void *)sub_20A8C98C0();
  sub_20A8C9A80();

  uint64_t v20 = (void *)sub_20A8C98C0();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D8D8], v6);
  sub_20A8C9AA0();

  double v21 = (void *)sub_20A8C98C0();
  sub_20A8C9A70();

  uint64_t v22 = (void *)MEMORY[0x2105289B0](v1 + 16);
  if (v22)
  {
    id v23 = objc_msgSend(v22, sel_splitViewController);
    swift_unknownObjectRelease();
  }
  uint64_t v24 = v34;
  sub_20A8CB190();
  double v25 = (uint64_t *)swift_allocObject();
  uint64_t v26 = MEMORY[0x263F7DF78];
  uint64_t v27 = v36;
  v25[5] = v36;
  v25[6] = v26;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v25 + 2);
  uint64_t v29 = v35;
  (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 16))(boxed_opaque_existential_1, v24, v27);
  uint64_t v31 = v37;
  uint64_t v30 = v38;
  *uint64_t v37 = v25;
  (*(void (**)(uint64_t **, void, uint64_t))(v30 + 104))(v31, *MEMORY[0x263F7D5A0], v39);
  sub_20A8C9910();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v27);
}

uint64_t sub_20A53C694()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A53C6CC()
{
  return sub_20A53B044();
}

uint64_t sub_20A53C6D4()
{
  return sub_20A53D210(&qword_26AC7F4A8, (void (*)(uint64_t))type metadata accessor for TodayView);
}

uint64_t sub_20A53C708@<X0>(unsigned __int8 *a1@<X8>)
{
  return sub_20A53ADFC(a1);
}

uint64_t sub_20A53C724()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_20A53C774()
{
  sub_20A53AE98(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), (double *)(v0 + 64));
}

uint64_t sub_20A53C788()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A53C7C0()
{
  return sub_20A46D238(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_20A53C7C8()
{
  return sub_20A53D210(&qword_26AC7F3F0, (void (*)(uint64_t))type metadata accessor for StockView);
}

uint64_t sub_20A53C7FC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A53C834()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_20A53C874()
{
  sub_20A53970C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20A53C87C()
{
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A53C99C()
{
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = (uint64_t)v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_20A539830(v3, v4, v5, v6);
}

uint64_t sub_20A53CA48()
{
  uint64_t v1 = (int *)type metadata accessor for StockViewModel();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64) + v2 + 7;
  swift_release();
  swift_release();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v4 + v1[5];
  uint64_t v7 = sub_20A8C3E10();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  unint64_t v9 = v3 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = v4 + v1[6];
  uint64_t v11 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
    uint64_t v13 = v10 + *(int *)(v11 + 32);
    uint64_t v14 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v4 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v17 = v15 + v16[9];
  uint64_t v18 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v15 + v16[10];
  uint64_t v20 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v15 + v16[11];
  uint64_t v22 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = v4 + v1[8];
  uint64_t v24 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);

  double v25 = *(void **)(v0 + v9 + 320);
  if (v25 != (void *)1) {

  }
  return swift_deallocObject();
}

void sub_20A53CDDC()
{
  uint64_t v1 = *(void *)(type metadata accessor for StockViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);

  sub_20A53A97C(v3, v4, (char *)(v0 + v2), v5);
}

uint64_t sub_20A53CE6C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 320);
  uint64_t v3 = *(void **)(a1 + 328);
  id v4 = *(id *)(a1 + 80);
  sub_20A458F64(v2);
  id v5 = v3;
  return a1;
}

uint64_t sub_20A53CEB0()
{
  swift_release();
  swift_release();

  uint64_t v1 = *(void **)(v0 + 352);
  if (v1 != (void *)1) {

  }
  return swift_deallocObject();
}

void sub_20A53CF10()
{
  sub_20A53AB08(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_20A53CF1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A53CF5C()
{
  return sub_20A53A4F8();
}

uint64_t sub_20A53CF64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A53CFC4()
{
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A53D0E4(uint64_t a1)
{
  sub_20A53C160(0, (unint64_t *)&qword_26AC69DA0, type metadata accessor for StockListModel, sub_20A44D504, MEMORY[0x263F7D2D8]);
  uint64_t v4 = *(void *)(v1 + 16);
  id v5 = *(void **)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  int v7 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = v1
     + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));

  return sub_20A53A610(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_20A53D1A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_20A53D1DC()
{
  return sub_20A53D210(&qword_26AC77120, (void (*)(uint64_t))type metadata accessor for StockListSectionHeaderView);
}

uint64_t sub_20A53D210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A53D258(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A53D2BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for StockListSectionDescriptor;
    v8[1] = type metadata accessor for StockListModel(255);
    long long v8[2] = sub_20A42D40C();
    v8[3] = sub_20A44D504();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A53D34C()
{
  unint64_t result = qword_26AC6A040;
  if (!qword_26AC6A040)
  {
    sub_20A53D2BC(255, &qword_26AC6A048, MEMORY[0x263F7D550]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A040);
  }
  return result;
}

uint64_t sub_20A53D3C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A53D428()
{
  if (!qword_26AC6AA48)
  {
    sub_20A8CB300();
    sub_20A53D49C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC6AA48);
    }
  }
}

unint64_t sub_20A53D49C()
{
  unint64_t result = qword_26AC7FBB0;
  if (!qword_26AC7FBB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FBB0);
  }
  return result;
}

uint64_t sub_20A53D504(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    type metadata accessor for StocksV2UserActivityDeserializer();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v3 = result;
      type metadata accessor for StocksShortcutItemHandler();
      uint64_t v4 = swift_allocObject();
      sub_20A53D970();
      sub_20A8CA460();
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
      sub_20A8CA450();
      *(void *)(v4 + 16) = v5;
      type metadata accessor for StocksActivity(0);
      sub_20A53D9C8((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
      sub_20A8C81D0();
      *(void *)(v4 + OBJC_IVAR____TtC8StocksUI25StocksShortcutItemHandler_userActivityDeserializer) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A53D6E0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v2 = type metadata accessor for StocksShortcutItemHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    v5[3] = v2;
    v5[4] = sub_20A53D9C8(&qword_26763BA38, (void (*)(uint64_t))type metadata accessor for StocksShortcutItemHandler);
    v5[0] = v4;
    sub_20A8CA430();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ShortcutItemHandlerAssembly()
{
  return self;
}

uint64_t sub_20A53D7CC()
{
  uint64_t v0 = sub_20A8C5C10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v6[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CD0();
  type metadata accessor for StocksShortcutItemHandler();
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_20A8CA440();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7CDE0], v0);
  sub_20A8C62F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

void sub_20A53D970()
{
  if (!qword_26763BA40)
  {
    sub_20A8CA460();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BA40);
    }
  }
}

uint64_t sub_20A53D9C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A53DA10(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_20A4D1DC4((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_20A8CF500();

  if (!v4) {
    return 0;
  }
  sub_20A42CFF0(0, &qword_26763BA48);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_20A53DAE8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v35 = a8;
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  unint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x263F06EA8];
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A53EBB8(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = sub_20A8C2530();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53EBB8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], v12);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v29 - v21;
  sub_20A53EDAC(a10, (uint64_t)v15, (unint64_t *)&unk_26AC68C70, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_20A53EE2C((uint64_t)v15, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A53EBB8);
    uint64_t v23 = sub_20A8C7B50();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  }
  else
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v24(v19, v15, v16);
    v24(v22, v19, v16);
    uint64_t v25 = *MEMORY[0x263F5A0D0];
    uint64_t v26 = sub_20A8C7B50();
    uint64_t v27 = *(void *)(v26 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v22, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v22, 0, 1, v26);
  }
  sub_20A53DE88(a1, v29, v30, v31, v32, v33, v34, v35, a9, (uint64_t)v22);
  return sub_20A53EE2C((uint64_t)v22, (uint64_t)&qword_26AC69BD0, MEMORY[0x263F5A0D8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A53EBB8);
}

void sub_20A53DE88(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v72 = a8;
  uint64_t v75 = a7;
  uint64_t v79 = a6;
  uint64_t v70 = a5;
  uint64_t v77 = a4;
  uint64_t v73 = a3;
  uint64_t v80 = a1;
  unint64_t v81 = a2;
  uint64_t v71 = a10;
  uint64_t v84 = a9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A53EBB8(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v74 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v74);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A53EBB8(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], v11);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v20 = (int *)type metadata accessor for CampaignRouteModel();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v78 = (uint64_t)&v65 - v24;
  uint64_t v25 = sub_20A8C56A0();
  uint64_t v82 = *(void *)(v25 - 8);
  uint64_t v83 = v25;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v65 - v30;
  uint64_t v76 = v10;
  id v32 = objc_msgSend(*(id *)(v10 + 64), sel_configuration, v29);
  if (!v32)
  {
    __break(1u);
    return;
  }
  uint64_t v33 = v32;
  if (objc_msgSend(v32, sel_respondsToSelector_, sel_paidBundleConfig))
  {
    id v85 = objc_msgSend(v33, sel_paidBundleConfig);
    swift_unknownObjectRelease();
    id v34 = objc_msgSend(v85, sel_paywallConfigurationsByType);
    if (!v34) {
      goto LABEL_13;
    }
    uint64_t v35 = v34;
    uint64_t v67 = v16;
    uint64_t v68 = v14;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC686D0);
    sub_20A42CFF0(0, &qword_26763BA48);
    sub_20A53EC1C();
    uint64_t v36 = sub_20A8CE180();

    id v37 = objc_allocWithZone(NSNumber);
    id v38 = objc_msgSend(v37, sel_initWithUnsignedInteger_, v84);
    id v69 = sub_20A53DA10(v38, v36);

    swift_bridgeObjectRelease();
    if (v69)
    {
      id v39 = objc_msgSend(v69, sel_subscriptionButtonConfig);
      if (v39)
      {
        id v66 = v39;
        unsigned int v40 = objc_msgSend(v39, sel_shouldDismissLandingPagePostPurchase);
        uint64_t v41 = *MEMORY[0x263F58E40];
        uint64_t v42 = sub_20A8C5690();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v31, v41, v42);
        double v43 = (unsigned int *)MEMORY[0x263F58E50];
        if (!v40) {
          double v43 = (unsigned int *)MEMORY[0x263F58E48];
        }
        (*(void (**)(char *, void, uint64_t))(v82 + 104))(v31, *v43, v83);
        if (v79)
        {
          sub_20A53EBB8(0, &qword_26763AE18, MEMORY[0x263F5A000], MEMORY[0x263F8E0F8]);
          uint64_t v44 = *(void *)(sub_20A8C7900() - 8);
          unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
          uint64_t v46 = v79;
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = xmmword_20A8D3DC0;
          uint64_t v65 = v47;
          unint64_t v48 = v47 + v45;
          *(void *)unint64_t v48 = v70;
          *(void *)(v48 + 8) = v46;
          *(_OWORD *)(v48 + 32) = 0u;
          *(_OWORD *)(v48 + 48) = 0u;
          *(_OWORD *)(v48 + 16) = 0u;
          (*(void (**)(void))(v44 + 104))();
        }
        else
        {
          uint64_t v65 = MEMORY[0x263F8EE78];
        }
        uint64_t v50 = v72;
        uint64_t v51 = v71;
        uint64_t v52 = HIBYTE(v81) & 0xF;
        if ((v81 & 0x2000000000000000) == 0) {
          uint64_t v52 = v80 & 0xFFFFFFFFFFFFLL;
        }
        if (v52)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v80 = 0;
          unint64_t v81 = 0;
        }
        uint64_t v54 = v82;
        uint64_t v53 = v83;
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v27, v31, v83);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_20A8CE9B0();
        sub_20A53EDAC(v51, (uint64_t)v19, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
        uint64_t v56 = &v22[v20[11]];
        *((void *)v56 + 1) = 0;
        swift_unknownObjectWeakInit();
        unint64_t v57 = v81;
        *(void *)uint64_t v22 = v80;
        *((void *)v22 + 1) = v57;
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(&v22[v20[5]], v27, v53);
        uint64_t v58 = &v22[v20[6]];
        uint64_t v59 = v77;
        *(void *)uint64_t v58 = v73;
        *((void *)v58 + 1) = v59;
        id v60 = &v22[v20[7]];
        *(void *)id v60 = v75;
        *((void *)v60 + 1) = v50;
        *(void *)&v22[v20[8]] = v65;
        *(void *)&v22[v20[9]] = v55;
        sub_20A49A5F4((uint64_t)v19, (uint64_t)&v22[v20[10]]);
        *((void *)v56 + 1) = 0;
        swift_unknownObjectWeakAssign();
        uint64_t v61 = v78;
        sub_20A53EC84((uint64_t)v22, v78);
        uint64_t v62 = (uint64_t)v67;
        sub_20A53ECE8(v61, (uint64_t)v67);
        swift_storeEnumTagMultiPayload();
        uint64_t v63 = sub_20A8C6D60();
        uint64_t v64 = (uint64_t)v68;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v68, 1, 1, v63);
        uint64_t v89 = 0;
        memset(v88, 0, sizeof(v88));
        uint64_t v87 = 0;
        memset(v86, 0, sizeof(v86));
        swift_bridgeObjectRetain();
        swift_retain();
        sub_20A5BFAAC(v62, 0, v64, (uint64_t)v88, 0, 0, (uint64_t)v86);
        swift_release();

        sub_20A53EE2C((uint64_t)v86, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
        sub_20A53EE2C((uint64_t)v88, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
        sub_20A53EE2C(v64, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A53EBB8);
        sub_20A53ED4C(v62, type metadata accessor for StocksActivity);
        swift_release();
        sub_20A53ED4C(v61, (uint64_t (*)(void))type metadata accessor for CampaignRouteModel);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v31, v83);
        return;
      }

      id v49 = v69;
    }
    else
    {
LABEL_13:
      id v49 = v85;
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

uint64_t sub_20A53E818(uint64_t a1)
{
  sub_20A53EBB8(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v11[-v3];
  uint64_t v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v5);
  char v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_20A8C2530();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a1, v8);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_20A5BFAAC((uint64_t)v7, 0, (uint64_t)v4, (uint64_t)v14, 0, 0, (uint64_t)v12);
  swift_release();
  sub_20A53EE2C((uint64_t)v12, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A53EE2C((uint64_t)v14, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A53EE2C((uint64_t)v4, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A53EBB8);
  sub_20A53ED4C((uint64_t)v7, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_20A53EABC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PaywallRouter()
{
  return self;
}

uint64_t sub_20A53EB28(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_20A53DAE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_20A53EB5C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

uint64_t sub_20A53EB90(uint64_t a1)
{
  return sub_20A53E818(a1);
}

void sub_20A53EBB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A53EC1C()
{
  unint64_t result = qword_26763BA50;
  if (!qword_26763BA50)
  {
    sub_20A42CFF0(255, (unint64_t *)&qword_26AC686D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BA50);
  }
  return result;
}

uint64_t sub_20A53EC84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CampaignRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A53ECE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CampaignRouteModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A53ED4C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A53EDAC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_20A53EBB8(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A53EE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t *sub_20A53EE8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C40E0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    sub_20A453638();
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
    {
      uint64_t v19 = type metadata accessor for ManageWatchlistsContentMode(0);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v21 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_20A53F074(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C40E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_20A453638();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = sub_20A8C3F00();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v6, v9);
  }
  return result;
}

void *sub_20A53F184(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  sub_20A453638();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15))
  {
    uint64_t v18 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v19 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  }
  return a1;
}

void *sub_20A53F31C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_20A453638();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v8) = v16(v11, 1, v13);
  int v17 = v16(v12, 1, v14);
  if (!v8)
  {
    if (!v17)
    {
      uint64_t v21 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v11, v12, v21);
      return a1;
    }
    sub_20A54083C((uint64_t)v11, (uint64_t (*)(void))sub_20A453638);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v19 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    return a1;
  }
  uint64_t v18 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  return a1;
}

_OWORD *sub_20A53F538(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  sub_20A453638();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
  {
    uint64_t v16 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_20A8C3F00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v11, v12, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
  }
  return a1;
}

void *sub_20A53F6B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C40E0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  sub_20A453638();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  LODWORD(v9) = v17(v12, 1, v14);
  int v18 = v17(v13, 1, v15);
  if (!v9)
  {
    if (!v18)
    {
      uint64_t v22 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(v12, v13, v22);
      return a1;
    }
    sub_20A54083C((uint64_t)v12, (uint64_t (*)(void))sub_20A453638);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    uint64_t v20 = type metadata accessor for ManageWatchlistsContentMode(0);
    memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  uint64_t v19 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
  return a1;
}

uint64_t sub_20A53F8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A53F8D4);
}

uint64_t sub_20A53F8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ManageWatchlistsContentMode(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_20A53FA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A53FA14);
}

uint64_t sub_20A53FA14(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C40E0();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ManageWatchlistsContentMode(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier()
{
  uint64_t result = qword_26763BA58;
  if (!qword_26763BA58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A53FB8C()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ManageWatchlistsContentMode(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A53FC60(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v79 = a3;
  uint64_t v80 = a2;
  uint64_t v73 = a1;
  uint64_t v4 = sub_20A8C8B80();
  uint64_t v67 = *(void *)(v4 - 8);
  uint64_t v68 = v4;
  MEMORY[0x270FA5388](v4);
  id v66 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A54065C(0, &qword_26763BA70, MEMORY[0x263F7D950]);
  uint64_t v78 = v6;
  uint64_t v74 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v58 - v7);
  uint64_t v65 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v65);
  uint64_t v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A54065C(0, (unint64_t *)&qword_26763D180, MEMORY[0x263F7E0A8]);
  uint64_t v11 = v10;
  uint64_t v70 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v72 = (char *)&v58 - v12;
  sub_20A54071C();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  uint64_t v75 = *(void *)(v16 - 8);
  uint64_t v76 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v63 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v71 = (char *)&v58 - v19;
  sub_20A540774();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A54065C(0, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v69 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v82 = (char *)&v58 - v28;
  uint64_t v61 = type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier();
  uint64_t v29 = *(int *)(v61 + 20);
  uint64_t v64 = v3;
  uint64_t v30 = v3 + v29;
  sub_20A8C4050();
  uint64_t v31 = v11;
  uint64_t v32 = v73;
  sub_20A8CBAC0();
  swift_bridgeObjectRelease();
  uint64_t v77 = v25;
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  uint64_t v81 = v24;
  if (v33(v22, 1, v24) == 1)
  {
    sub_20A54083C((uint64_t)v22, (uint64_t (*)(void))sub_20A540774);
    sub_20A5407E8();
    *uint64_t v8 = swift_allocError();
    uint64_t v34 = v74;
    uint64_t v35 = v78;
    (*(void (**)(uint64_t *, void, uint64_t))(v74 + 104))(v8, *MEMORY[0x263F7D930], v78);
    v80(v8);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v34 + 8))(v8, v35);
  }
  else
  {
    id v60 = v8;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v82, v22, v81);
    sub_20A8C4050();
    sub_20A8CBA60();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v15, 1, v76) == 1)
    {
      sub_20A54083C((uint64_t)v15, (uint64_t (*)(void))sub_20A54071C);
      sub_20A5407E8();
      uint64_t v37 = swift_allocError();
      id v38 = v60;
      *id v60 = v37;
      uint64_t v39 = v74;
      uint64_t v40 = v78;
      (*(void (**)(uint64_t *, void, uint64_t))(v74 + 104))(v38, *MEMORY[0x263F7D930], v78);
      v80(v38);
      (*(void (**)(uint64_t *, uint64_t))(v39 + 8))(v38, v40);
      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v82, v81);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v71, v15, v76);
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
      uint64_t v59 = v31;
      v41(v72, v32, v31);
      uint64_t v42 = v77;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v69, v82, v81);
      uint64_t v43 = type metadata accessor for WatchlistCellViewModel(0);
      uint64_t v44 = v62;
      unint64_t v45 = &v62[*(int *)(v43 + 28)];
      uint64_t v46 = sub_20A8C40E0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(v45, v30, v46);
      sub_20A47F8B0(v64 + *(int *)(v61 + 24), (uint64_t)&v44[*(int *)(v43 + 32)]);
      *(void *)uint64_t v44 = sub_20A8C4050();
      *((void *)v44 + 1) = v47;
      *((void *)v44 + 2) = sub_20A8C40A0();
      *((void *)v44 + 3) = v48;
      v44[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_20A540614((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
      id v49 = v63;
      sub_20A8C8320();
      sub_20A8C88B0();
      sub_20A8CBAB0();
      uint64_t v51 = v66;
      uint64_t v50 = v67;
      uint64_t v52 = v68;
      (*(void (**)(char *, void, uint64_t))(v67 + 104))(v66, *MEMORY[0x263F7D528], v68);
      sub_20A42D7D4();
      sub_20A54089C();
      uint64_t v53 = v60;
      sub_20A8C9B50();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
      v80(v53);
      (*(void (**)(uint64_t *, uint64_t))(v74 + 8))(v53, v78);
      uint64_t v54 = v76;
      uint64_t v55 = *(void (**)(char *, uint64_t))(v75 + 8);
      v55(v49, v76);
      uint64_t v56 = *(void (**)(char *, uint64_t))(v42 + 8);
      uint64_t v57 = v81;
      v56(v69, v81);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v59);
      v55(v71, v54);
      return ((uint64_t (*)(char *, uint64_t))v56)(v82, v57);
    }
  }
}

uint64_t sub_20A540584()
{
  return sub_20A540614(&qword_26763BA68, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier);
}

uint64_t sub_20A5405CC()
{
  return sub_20A540614((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
}

uint64_t sub_20A540614(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A54065C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for ManageWatchlistsSectionDescriptor;
    v8[1] = type metadata accessor for ManageWatchlistsModel();
    long long v8[2] = sub_20A42D7D4();
    v8[3] = sub_20A540614((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_20A54071C()
{
  if (!qword_26763BA78)
  {
    sub_20A42D680();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BA78);
    }
  }
}

void sub_20A540774()
{
  if (!qword_26763BA80)
  {
    sub_20A54065C(255, (unint64_t *)&qword_26763AB58, MEMORY[0x263F7D450]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BA80);
    }
  }
}

unint64_t sub_20A5407E8()
{
  unint64_t result = qword_26763BA88;
  if (!qword_26763BA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BA88);
  }
  return result;
}

uint64_t sub_20A54083C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20A54089C()
{
  unint64_t result = qword_26763BA90;
  if (!qword_26763BA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BA90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A54098CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors()
{
  return &type metadata for ManageWatchlistsRenameWatchlistBlueprintModifier.Errors;
}

unint64_t sub_20A5409C8()
{
  unint64_t result = qword_26763BA98;
  if (!qword_26763BA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BA98);
  }
  return result;
}

uint64_t type metadata accessor for MastheadViewRenderer()
{
  return self;
}

uint64_t sub_20A540A40(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_20A540AA8(&qword_26AC71A28);
  uint64_t result = sub_20A540AA8(&qword_26AC71A20);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_20A540AA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MastheadViewRenderer();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_20A540AE8(uint64_t a1, char *a2)
{
  uint64_t v5 = sub_20A8C2800();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(a1 + 80);
  id v11 = objc_msgSend(v10, sel_horizontalSizeClass, v7);
  if ((unint64_t)v11 >= 2)
  {
    if (v11 == (id)2) {
      objc_msgSend(a2, sel_setHidden_, 1);
    }
    return objc_msgSend(a2, sel_setFrame_, 0.0, 0.0, 0.0, 0.0);
  }
  else
  {
    uint64_t v28 = v6;
    objc_msgSend(a2, sel_setHidden_, 0);
    double v12 = *(double *)(a1 + 8);
    objc_msgSend(a2, sel_setFrame_, 0.0, 0.0, *(double *)a1, v12);
    objc_msgSend(a2, sel_setHeight_, v12);
    uint64_t v13 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI12MastheadView_appNameLabel];
    objc_msgSend(v13, sel_setFrame_, *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)(a1 + 32), *(double *)(a1 + 40));
    uint64_t v14 = v2 + 16;
    swift_beginAccess();
    sub_20A4342F4(v2 + 16, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v30);
    if (qword_26AC678E8 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)qword_26AC678D8;
    uint64_t v16 = (void *)unk_26AC678E0;
    swift_bridgeObjectRetain();
    id v17 = sub_20A5A8FE8(v15, v16, v10);
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setAttributedText_, v17);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    uint64_t v18 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI12MastheadView_dateLabel];
    objc_msgSend(v18, sel_setFrame_, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
    sub_20A4342F4(v14, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v30);
    if (qword_26AC678D0 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)qword_26AC678C8;
    if (qword_26AC678C8)
    {
      sub_20A8C27F0();
      uint64_t v20 = (void *)sub_20A8C2730();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v5);
      id v21 = objc_msgSend(v19, sel_stringFromDate_, v20);

      uint64_t v19 = (void *)sub_20A8CE280();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v23 = (void *)0xE000000000000000;
    }
    id v25 = sub_20A5A93C4(v19, v23, v10);
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_setAttributedText_, v25);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    id v26 = objc_msgSend(self, sel_clearColor);
    objc_msgSend(a2, sel_setBackgroundColor_, v26);

    return objc_msgSend(v18, sel_setNumberOfLines_, 0);
  }
}

id sub_20A540EDC(uint64_t a1, char *a2)
{
  uint64_t v5 = sub_20A8C2800();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  double v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v8 = *(double *)(a1 + 8);
  objc_msgSend(a2, sel_setFrame_, 0.0, 0.0, *(double *)a1, v8);
  objc_msgSend(a2, sel_setHeight_, v8);
  uint64_t v9 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI12MastheadView_appNameLabel];
  objc_msgSend(v9, sel_setFrame_, *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)(a1 + 32), *(double *)(a1 + 40));
  uint64_t v10 = v2 + 16;
  swift_beginAccess();
  sub_20A4342F4(v2 + 16, (uint64_t)v26);
  __swift_project_boxed_opaque_existential_1(v26, v27);
  if (qword_26AC678E8 != -1) {
    swift_once();
  }
  id v11 = (void *)qword_26AC678D8;
  double v12 = (void *)unk_26AC678E0;
  uint64_t v13 = *(void **)(a1 + 80);
  swift_bridgeObjectRetain();
  id v14 = sub_20A5A8FE8(v11, v12, v13);
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setAttributedText_, v14);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  uint64_t v15 = *(void **)&a2[OBJC_IVAR____TtC8StocksUI12MastheadView_dateLabel];
  objc_msgSend(v15, sel_setFrame_, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
  sub_20A4342F4(v10, (uint64_t)v26);
  __swift_project_boxed_opaque_existential_1(v26, v27);
  if (qword_26AC678D0 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_26AC678C8;
  if (qword_26AC678C8)
  {
    sub_20A8C27F0();
    id v17 = (void *)sub_20A8C2730();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
    id v18 = objc_msgSend(v16, sel_stringFromDate_, v17);

    uint64_t v16 = (void *)sub_20A8CE280();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v20 = (void *)0xE000000000000000;
  }
  id v21 = sub_20A5A93C4(v16, v20, v13);
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setAttributedText_, v21);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  id v22 = objc_msgSend(self, sel_clearColor);
  objc_msgSend(a2, sel_setBackgroundColor_, v22);

  return objc_msgSend(v15, sel_setNumberOfLines_, 0);
}

void *sub_20A54122C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      sub_20A42C980();
      uint64_t v21 = *(int *)(v20 + 64);
      id v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_20A8CC470();
      uint64_t v25 = *(void *)(v24 - 8);
      id v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
        sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v22, v23, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v10 = v9[5];
      id v11 = (char *)a1 + v10;
      double v12 = (char *)a2 + v10;
      uint64_t v13 = sub_20A8C3E10();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_20A546A14(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      uint64_t v28 = v9[6];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = sub_20A8C3D00();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        sub_20A546A14(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      uint64_t v104 = v9;
      uint64_t v34 = v9[7];
      uint64_t v100 = a1;
      uint64_t v102 = a2;
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      *(void *)uint64_t v35 = *(void *)((char *)a2 + v34);
      v35[8] = *((unsigned char *)a2 + v34 + 8);
      *((void *)v35 + 2) = *(void *)((char *)a2 + v34 + 16);
      v35[24] = *((unsigned char *)a2 + v34 + 24);
      *((void *)v35 + 4) = *(void *)((char *)a2 + v34 + 32);
      v35[40] = *((unsigned char *)a2 + v34 + 40);
      uint64_t v37 = *(void *)((char *)a2 + v34 + 56);
      *((void *)v35 + 6) = *(void *)((char *)a2 + v34 + 48);
      *((void *)v35 + 7) = v37;
      uint64_t v38 = *(void *)((char *)a2 + v34 + 72);
      *((void *)v35 + 8) = *(void *)((char *)a2 + v34 + 64);
      *((void *)v35 + 9) = v38;
      uint64_t v39 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v40 = v39[9];
      uint64_t v41 = &v35[v40];
      uint64_t v42 = &v36[v40];
      uint64_t v43 = sub_20A8C2EB0();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v97 = v44;
      uint64_t v98 = v43;
      v44(v41, v42, v43);
      uint64_t v45 = v39[10];
      uint64_t v46 = &v35[v45];
      uint64_t v47 = &v36[v45];
      uint64_t v48 = sub_20A8C4030();
      id v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
      v49(v46, v47, v48);
      uint64_t v99 = v39;
      uint64_t v50 = v39[11];
      uint64_t v51 = &v35[v50];
      uint64_t v52 = &v36[v50];
      uint64_t v53 = sub_20A8C2990();
      uint64_t v94 = *(void (**)(char *, char *))(*(void *)(v53 - 8) + 16);
      uint64_t v95 = v53;
      v94(v51, v52);
      uint64_t v54 = type metadata accessor for QuoteViewModel();
      uint64_t v55 = *(int *)(v54 + 20);
      uint64_t v56 = &v35[v55];
      uint64_t v57 = &v36[v55];
      uint64_t v58 = sub_20A8C3410();
      uint64_t v92 = *(void (**)(char *, char *))(*(void *)(v58 - 8) + 16);
      uint64_t v93 = v58;
      v92(v56, v57);
      uint64_t v59 = *(int *)(v54 + 24);
      id v60 = &v35[v59];
      uint64_t v61 = &v36[v59];
      uint64_t v62 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v91 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
      uint64_t v96 = v49;
      if (v91(v61, 1, v62))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        uint64_t v65 = v102;
        a1 = v100;
      }
      else
      {
        uint64_t v88 = v54;
        uint64_t v89 = v63;
        uint64_t v66 = sub_20A8C2BC0();
        uint64_t v67 = *(void *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v61, 3, v66))
        {
          uint64_t v63 = v89;
          memcpy(v60, v61, *(void *)(v89 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v60, v61, v66);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v60, 0, 3, v66);
          uint64_t v63 = v89;
        }
        uint64_t v65 = v102;
        a1 = v100;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        uint64_t v54 = v88;
      }
      uint64_t v68 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      id v69 = &v35[v68];
      uint64_t v70 = &v36[v68];
      uint64_t v71 = *(void *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(&v36[v68], 1, v54))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        uint64_t v101 = v71;
        uint64_t v90 = v63;
        *(void *)id v69 = *(void *)v70;
        v69[8] = v70[8];
        *((void *)v69 + 2) = *((void *)v70 + 2);
        v69[24] = v70[24];
        *((void *)v69 + 4) = *((void *)v70 + 4);
        v69[40] = v70[40];
        uint64_t v73 = *((void *)v70 + 7);
        *((void *)v69 + 6) = *((void *)v70 + 6);
        *((void *)v69 + 7) = v73;
        uint64_t v74 = *((void *)v70 + 9);
        *((void *)v69 + 8) = *((void *)v70 + 8);
        *((void *)v69 + 9) = v74;
        uint64_t v103 = v62;
        uint64_t v75 = v99;
        uint64_t v76 = v99[9];
        uint64_t v77 = &v69[v76];
        uint64_t v78 = v54;
        uint64_t v79 = &v70[v76];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v97(v77, v79, v98);
        v96(&v69[v75[10]], &v70[v75[10]], v48);
        ((void (*)(char *, char *, uint64_t))v94)(&v69[v75[11]], &v70[v75[11]], v95);
        ((void (*)(char *, char *, uint64_t))v92)(&v69[*(int *)(v78 + 20)], &v70[*(int *)(v78 + 20)], v93);
        uint64_t v80 = v78;
        uint64_t v81 = *(int *)(v78 + 24);
        uint64_t v82 = &v69[v81];
        uint64_t v83 = &v70[v81];
        if (v91(&v70[v81], 1, v103))
        {
          sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          uint64_t v85 = sub_20A8C2BC0();
          uint64_t v86 = *(void *)(v85 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v83, 3, v85))
          {
            uint64_t v87 = v90;
            memcpy(v82, v83, *(void *)(v90 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v82, v83, v85);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v82, 0, 3, v85);
            uint64_t v87 = v90;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v82, 0, 1, v103);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v69, 0, 1, v80);
      }
      *((unsigned char *)a1 + v104[8]) = *((unsigned char *)v65 + v104[8]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20A541E08(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v32 = sub_20A8CC310();
      uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
      uint64_t v31 = v32;
      uint64_t v30 = a1;
      goto LABEL_16;
    case 1:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      uint64_t v27 = a1 + *(int *)(v33 + 64);
      uint64_t v28 = sub_20A8CC470();
      uint64_t v40 = *(void *)(v28 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v27, 1, v28);
      if (result) {
        return result;
      }
      goto LABEL_14;
    case 0:
      uint64_t v3 = sub_20A8C3F00();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      unsigned int v4 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v5 = a1 + v4[5];
      uint64_t v6 = sub_20A8C3E10();
      uint64_t v7 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      }
      uint64_t v8 = a1 + v4[6];
      uint64_t v9 = sub_20A8C3D00();
      uint64_t v10 = *(void *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      }
      uint64_t v11 = a1 + v4[7];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v12 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v13 = v11 + v12[9];
      uint64_t v14 = sub_20A8C2EB0();
      uint64_t v38 = *(void (**)(uint64_t))(*(void *)(v14 - 8) + 8);
      uint64_t v39 = v14;
      v38(v13);
      uint64_t v15 = v11 + v12[10];
      uint64_t v16 = sub_20A8C4030();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
      v37(v15, v16);
      uint64_t v17 = v11 + v12[11];
      uint64_t v18 = sub_20A8C2990();
      uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v36(v17, v18);
      uint64_t v19 = type metadata accessor for QuoteViewModel();
      uint64_t v20 = v11 + *(int *)(v19 + 20);
      uint64_t v21 = sub_20A8C3410();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
      v35(v20, v21);
      uint64_t v22 = v11 + *(int *)(v19 + 24);
      uint64_t v23 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
      if (!v34(v22, 1, v23))
      {
        uint64_t v24 = sub_20A8C2BC0();
        uint64_t v25 = *(void *)(v24 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v22, 3, v24)) {
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v24);
        }
      }
      uint64_t v26 = v11 + *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v26, 1, v19);
      if (!result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v38)(v26 + v12[9], v39);
        v37(v26 + v12[10], v16);
        v36(v26 + v12[11], v18);
        v35(v26 + *(int *)(v19 + 20), v21);
        uint64_t v27 = v26 + *(int *)(v19 + 24);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v34)(v27, 1, v23);
        if (!result)
        {
          uint64_t v28 = sub_20A8C2BC0();
          uint64_t v40 = *(void *)(v28 - 8);
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v27, 3, v28);
          if (!result)
          {
LABEL_14:
            uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8);
            uint64_t v30 = v27;
            uint64_t v31 = v28;
LABEL_16:
            return v29(v30, v31);
          }
        }
      }
      break;
  }
  return result;
}

void *sub_20A54242C(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_31:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      sub_20A42C980();
      uint64_t v18 = *(int *)(v17 + 64);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_20A8CC470();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      swift_bridgeObjectRetain();
      if (v23(v20, 1, v21))
      {
        sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      }
      goto LABEL_31;
    case 0:
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A546A14(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v25 = v8[6];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      uint64_t v28 = sub_20A8C3D00();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        sub_20A546A14(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      uint64_t v102 = v8;
      uint64_t v103 = a1;
      uint64_t v31 = v8[7];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v104 = a2;
      uint64_t v33 = (char *)a2 + v31;
      *(void *)uint64_t v32 = *(void *)((char *)a2 + v31);
      v32[8] = *((unsigned char *)a2 + v31 + 8);
      *((void *)v32 + 2) = *(void *)((char *)a2 + v31 + 16);
      v32[24] = *((unsigned char *)a2 + v31 + 24);
      *((void *)v32 + 4) = *(void *)((char *)a2 + v31 + 32);
      v32[40] = *((unsigned char *)a2 + v31 + 40);
      uint64_t v34 = *(void *)((char *)a2 + v31 + 56);
      *((void *)v32 + 6) = *(void *)((char *)a2 + v31 + 48);
      *((void *)v32 + 7) = v34;
      uint64_t v35 = *(void *)((char *)a2 + v31 + 72);
      *((void *)v32 + 8) = *(void *)((char *)a2 + v31 + 64);
      *((void *)v32 + 9) = v35;
      uint64_t v36 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v37 = v36[9];
      uint64_t v38 = &v32[v37];
      uint64_t v39 = &v33[v37];
      uint64_t v40 = sub_20A8C2EB0();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v96 = v41;
      uint64_t v97 = v40;
      v41(v38, v39, v40);
      uint64_t v42 = v36[10];
      uint64_t v43 = &v32[v42];
      uint64_t v44 = &v33[v42];
      uint64_t v45 = sub_20A8C4030();
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      v46(v43, v44, v45);
      uint64_t v98 = v36;
      uint64_t v47 = v36[11];
      uint64_t v48 = &v32[v47];
      id v49 = &v33[v47];
      uint64_t v50 = sub_20A8C2990();
      uint64_t v92 = *(void (**)(char *, char *))(*(void *)(v50 - 8) + 16);
      uint64_t v93 = v50;
      v92(v48, v49);
      uint64_t v51 = type metadata accessor for QuoteViewModel();
      uint64_t v52 = *(int *)(v51 + 20);
      uint64_t v53 = &v32[v52];
      uint64_t v54 = &v33[v52];
      uint64_t v55 = sub_20A8C3410();
      uint64_t v90 = *(void (**)(char *, char *))(*(void *)(v55 - 8) + 16);
      uint64_t v91 = v55;
      v90(v53, v54);
      uint64_t v56 = *(int *)(v51 + 24);
      uint64_t v57 = &v32[v56];
      uint64_t v58 = &v33[v56];
      uint64_t v59 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v99 = *(void *)(v59 - 8);
      uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
      uint64_t v94 = v46;
      uint64_t v95 = v45;
      if (v89(v58, 1, v59))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        uint64_t v61 = v104;
        a1 = v103;
      }
      else
      {
        uint64_t v100 = v59;
        uint64_t v88 = v51;
        uint64_t v62 = sub_20A8C2BC0();
        uint64_t v63 = *(void *)(v62 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v58, 3, v62))
        {
          uint64_t v64 = v99;
          memcpy(v57, v58, *(void *)(v99 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v57, v58, v62);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v57, 0, 3, v62);
          uint64_t v64 = v99;
        }
        uint64_t v61 = v104;
        a1 = v103;
        uint64_t v59 = v100;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v57, 0, 1, v100);
        uint64_t v51 = v88;
      }
      uint64_t v65 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v66 = &v32[v65];
      uint64_t v67 = &v33[v65];
      uint64_t v68 = *(void *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(&v33[v65], 1, v51))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
        uint64_t v70 = v102;
      }
      else
      {
        uint64_t v105 = v68;
        *(void *)uint64_t v66 = *(void *)v67;
        v66[8] = v67[8];
        *((void *)v66 + 2) = *((void *)v67 + 2);
        v66[24] = v67[24];
        *((void *)v66 + 4) = *((void *)v67 + 4);
        v66[40] = v67[40];
        uint64_t v71 = *((void *)v67 + 7);
        *((void *)v66 + 6) = *((void *)v67 + 6);
        *((void *)v66 + 7) = v71;
        uint64_t v101 = v59;
        uint64_t v72 = *((void *)v67 + 9);
        *((void *)v66 + 8) = *((void *)v67 + 8);
        *((void *)v66 + 9) = v72;
        uint64_t v73 = v98;
        uint64_t v74 = v98[9];
        uint64_t v75 = &v66[v74];
        uint64_t v76 = v51;
        uint64_t v77 = &v67[v74];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96(v75, v77, v97);
        v94(&v66[v73[10]], &v67[v73[10]], v95);
        ((void (*)(char *, char *, uint64_t))v92)(&v66[v73[11]], &v67[v73[11]], v93);
        ((void (*)(char *, char *, uint64_t))v90)(&v66[*(int *)(v76 + 20)], &v67[*(int *)(v76 + 20)], v91);
        uint64_t v78 = v76;
        uint64_t v79 = *(int *)(v76 + 24);
        uint64_t v80 = &v66[v79];
        uint64_t v81 = &v67[v79];
        if (v89(&v67[v79], 1, v101))
        {
          sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
          uint64_t v70 = v102;
          uint64_t v83 = v105;
        }
        else
        {
          uint64_t v84 = sub_20A8C2BC0();
          uint64_t v85 = *(void *)(v84 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v81, 3, v84))
          {
            uint64_t v86 = v99;
            memcpy(v80, v81, *(void *)(v99 + 64));
            uint64_t v70 = v102;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v80, v81, v84);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v80, 0, 3, v84);
            uint64_t v70 = v102;
            uint64_t v86 = v99;
          }
          uint64_t v83 = v105;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v80, 0, 1, v101);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v66, 0, 1, v78);
      }
      *((unsigned char *)a1 + v70[8]) = *((unsigned char *)v61 + v70[8]);
      goto LABEL_31;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_20A542FD8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  if ((void *)a1 == a2) {
    return v3;
  }
  sub_20A546744(a1, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v3, a2, v15);
LABEL_33:
      swift_storeEnumTagMultiPayload();
      return v3;
    case 1:
      *uint64_t v3 = *a2;
      v3[1] = a2[1];
      *((unsigned char *)v3 + 16) = *((unsigned char *)a2 + 16);
      sub_20A42C980();
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v18 = (char *)v3 + v17;
      uint64_t v19 = (char *)a2 + v17;
      uint64_t v20 = sub_20A8CC470();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
        sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      goto LABEL_33;
    case 0:
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(v3, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)v3 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A546A14(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v24 = v8[6];
      uint64_t v25 = (char *)v3 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = sub_20A8C3D00();
      uint64_t v28 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        sub_20A546A14(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v103 = v8;
      uint64_t v30 = v8[7];
      uint64_t v99 = v3;
      uint64_t v101 = a2;
      uint64_t v31 = (char *)v3 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = *(void *)((char *)a2 + v30);
      v31[8] = v32[8];
      *(void *)uint64_t v31 = v33;
      uint64_t v34 = *((void *)v32 + 2);
      v31[24] = v32[24];
      *((void *)v31 + 2) = v34;
      uint64_t v35 = *((void *)v32 + 4);
      v31[40] = v32[40];
      *((void *)v31 + 4) = v35;
      *((void *)v31 + 6) = *((void *)v32 + 6);
      *((void *)v31 + 7) = *((void *)v32 + 7);
      *((void *)v31 + 8) = *((void *)v32 + 8);
      *((void *)v31 + 9) = *((void *)v32 + 9);
      uint64_t v36 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v37 = v36[9];
      uint64_t v38 = &v31[v37];
      uint64_t v39 = &v32[v37];
      uint64_t v40 = sub_20A8C2EB0();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v96 = v41;
      uint64_t v97 = v40;
      v41(v38, v39, v40);
      uint64_t v42 = v36[10];
      uint64_t v43 = &v31[v42];
      uint64_t v44 = &v32[v42];
      uint64_t v45 = sub_20A8C4030();
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
      v46(v43, v44, v45);
      uint64_t v98 = v36;
      uint64_t v47 = v36[11];
      uint64_t v48 = &v31[v47];
      id v49 = &v32[v47];
      uint64_t v50 = sub_20A8C2990();
      uint64_t v93 = *(void (**)(char *, char *))(*(void *)(v50 - 8) + 16);
      uint64_t v94 = v50;
      v93(v48, v49);
      uint64_t v51 = type metadata accessor for QuoteViewModel();
      uint64_t v52 = *(int *)(v51 + 20);
      uint64_t v53 = &v31[v52];
      uint64_t v54 = &v32[v52];
      uint64_t v55 = sub_20A8C3410();
      uint64_t v91 = *(void (**)(char *, char *))(*(void *)(v55 - 8) + 16);
      uint64_t v92 = v55;
      v91(v53, v54);
      uint64_t v56 = *(int *)(v51 + 24);
      uint64_t v57 = &v31[v56];
      uint64_t v58 = &v32[v56];
      uint64_t v59 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
      uint64_t v95 = v46;
      if (v90(v58, 1, v59))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
        uint64_t v62 = v101;
        uint64_t v3 = v99;
      }
      else
      {
        uint64_t v87 = v51;
        uint64_t v88 = v60;
        uint64_t v63 = sub_20A8C2BC0();
        uint64_t v64 = *(void *)(v63 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v58, 3, v63))
        {
          uint64_t v60 = v88;
          memcpy(v57, v58, *(void *)(v88 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v57, v58, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v57, 0, 3, v63);
          uint64_t v60 = v88;
        }
        uint64_t v62 = v101;
        uint64_t v3 = v99;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
        uint64_t v51 = v87;
      }
      uint64_t v65 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v66 = &v31[v65];
      uint64_t v67 = &v32[v65];
      uint64_t v68 = *(void *)(v51 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(&v32[v65], 1, v51))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        uint64_t v100 = v68;
        uint64_t v89 = v60;
        uint64_t v70 = *(void *)v67;
        v66[8] = v67[8];
        *(void *)uint64_t v66 = v70;
        uint64_t v71 = *((void *)v67 + 2);
        v66[24] = v67[24];
        *((void *)v66 + 2) = v71;
        uint64_t v72 = *((void *)v67 + 4);
        v66[40] = v67[40];
        *((void *)v66 + 4) = v72;
        *((void *)v66 + 6) = *((void *)v67 + 6);
        *((void *)v66 + 7) = *((void *)v67 + 7);
        *((void *)v66 + 8) = *((void *)v67 + 8);
        *((void *)v66 + 9) = *((void *)v67 + 9);
        uint64_t v102 = v59;
        uint64_t v73 = v98;
        uint64_t v74 = v98[9];
        uint64_t v75 = &v66[v74];
        uint64_t v76 = v51;
        uint64_t v77 = &v67[v74];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96(v75, v77, v97);
        v95(&v66[v73[10]], &v67[v73[10]], v45);
        ((void (*)(char *, char *, uint64_t))v93)(&v66[v73[11]], &v67[v73[11]], v94);
        ((void (*)(char *, char *, uint64_t))v91)(&v66[*(int *)(v76 + 20)], &v67[*(int *)(v76 + 20)], v92);
        uint64_t v78 = v76;
        uint64_t v79 = *(int *)(v76 + 24);
        uint64_t v80 = &v66[v79];
        uint64_t v81 = &v67[v79];
        if (v90(&v67[v79], 1, v102))
        {
          sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v83 = sub_20A8C2BC0();
          uint64_t v84 = *(void *)(v83 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v81, 3, v83))
          {
            uint64_t v85 = v89;
            memcpy(v80, v81, *(void *)(v89 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v80, v81, v83);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 3, v83);
            uint64_t v85 = v89;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v80, 0, 1, v102);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v66, 0, 1, v78);
      }
      *((unsigned char *)v3 + v103[8]) = *((unsigned char *)v62 + v103[8]);
      goto LABEL_33;
  }
  memcpy(v3, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return v3;
}

uint64_t type metadata accessor for StockFeedSectionDescriptor()
{
  uint64_t result = qword_26AC76FA8;
  if (!qword_26AC76FA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_20A543C00(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_20A8CC310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_32:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      sub_20A42C980();
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_20A8CC470();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      goto LABEL_32;
    case 0:
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A546A14(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v23 = v8[6];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = sub_20A8C3D00();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_20A546A14(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v92 = v8;
      uint64_t v29 = v8[7];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      *(void *)uint64_t v30 = *(void *)&a2[v29];
      v30[8] = a2[v29 + 8];
      *((void *)v30 + 2) = *(void *)&a2[v29 + 16];
      v30[24] = a2[v29 + 24];
      *((void *)v30 + 4) = *(void *)&a2[v29 + 32];
      v30[40] = a2[v29 + 40];
      long long v32 = *(_OWORD *)&a2[v29 + 64];
      *((_OWORD *)v30 + 3) = *(_OWORD *)&a2[v29 + 48];
      *((_OWORD *)v30 + 4) = v32;
      uint64_t v33 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v34 = v33[9];
      uint64_t v35 = &v30[v34];
      uint64_t v36 = &v31[v34];
      uint64_t v37 = sub_20A8C2EB0();
      uint64_t v88 = *(void (**)(char *, char *))(*(void *)(v37 - 8) + 32);
      uint64_t v89 = v37;
      v88(v35, v36);
      uint64_t v38 = v33[10];
      uint64_t v39 = &v30[v38];
      uint64_t v40 = &v31[v38];
      uint64_t v41 = sub_20A8C4030();
      uint64_t v86 = *(void (**)(char *, char *))(*(void *)(v41 - 8) + 32);
      uint64_t v87 = v41;
      v86(v39, v40);
      uint64_t v90 = v33;
      uint64_t v42 = v33[11];
      uint64_t v43 = &v30[v42];
      uint64_t v44 = &v31[v42];
      uint64_t v45 = sub_20A8C2990();
      uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v45 - 8) + 32);
      uint64_t v85 = v45;
      v84(v43, v44);
      uint64_t v46 = type metadata accessor for QuoteViewModel();
      uint64_t v47 = *(int *)(v46 + 20);
      uint64_t v48 = &v30[v47];
      id v49 = &v31[v47];
      uint64_t v50 = sub_20A8C3410();
      uint64_t v82 = *(void (**)(char *, char *))(*(void *)(v50 - 8) + 32);
      uint64_t v83 = v50;
      v82(v48, v49);
      uint64_t v51 = *(int *)(v46 + 24);
      uint64_t v52 = &v30[v51];
      uint64_t v53 = &v31[v51];
      uint64_t v54 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v91 = *(void *)(v54 - 8);
      uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
      if (v81(v53, 1, v54))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v78 = v46;
        uint64_t v79 = v54;
        uint64_t v56 = sub_20A8C2BC0();
        uint64_t v57 = *(void *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v53, 3, v56))
        {
          uint64_t v58 = v91;
          memcpy(v52, v53, *(void *)(v91 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v52, v53, v56);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v52, 0, 3, v56);
          uint64_t v58 = v91;
        }
        uint64_t v59 = *(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56);
        uint64_t v54 = v79;
        v59(v52, 0, 1, v79);
        uint64_t v46 = v78;
      }
      uint64_t v60 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v61 = &v30[v60];
      uint64_t v62 = &v31[v60];
      uint64_t v63 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(&v31[v60], 1, v46))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        uint64_t v80 = v63;
        *(void *)uint64_t v61 = *(void *)v62;
        v61[8] = v62[8];
        *((void *)v61 + 2) = *((void *)v62 + 2);
        v61[24] = v62[24];
        *((void *)v61 + 4) = *((void *)v62 + 4);
        v61[40] = v62[40];
        long long v65 = *((_OWORD *)v62 + 4);
        *((_OWORD *)v61 + 3) = *((_OWORD *)v62 + 3);
        *((_OWORD *)v61 + 4) = v65;
        uint64_t v66 = v90;
        ((void (*)(char *, char *, uint64_t))v88)(&v61[v90[9]], &v62[v90[9]], v89);
        ((void (*)(char *, char *, uint64_t))v86)(&v61[v66[10]], &v62[v66[10]], v87);
        ((void (*)(char *, char *, uint64_t))v84)(&v61[v66[11]], &v62[v66[11]], v85);
        ((void (*)(char *, char *, uint64_t))v82)(&v61[*(int *)(v46 + 20)], &v62[*(int *)(v46 + 20)], v83);
        uint64_t v67 = *(int *)(v46 + 24);
        uint64_t v68 = &v61[v67];
        uint64_t v69 = &v62[v67];
        if (v81(&v62[v67], 1, v54))
        {
          sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
          uint64_t v71 = v80;
        }
        else
        {
          uint64_t v72 = v54;
          uint64_t v73 = sub_20A8C2BC0();
          uint64_t v74 = *(void *)(v73 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v69, 3, v73))
          {
            uint64_t v75 = v91;
            memcpy(v68, v69, *(void *)(v91 + 64));
            uint64_t v76 = v72;
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v68, v69, v73);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v68, 0, 3, v73);
            uint64_t v76 = v72;
            uint64_t v75 = v91;
          }
          uint64_t v71 = v80;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v68, 0, 1, v76);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v61, 0, 1, v46);
      }
      a1[v92[8]] = a2[v92[8]];
      goto LABEL_32;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_20A544734(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_20A546744((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_20A8CC310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_33:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      sub_20A42C980();
      uint64_t v17 = *(int *)(v16 + 64);
      uint64_t v18 = &a1[v17];
      uint64_t v19 = &a2[v17];
      uint64_t v20 = sub_20A8CC470();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      goto LABEL_33;
    case 0:
      uint64_t v7 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for StockFeedMastheadModel();
      uint64_t v9 = v8[5];
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      uint64_t v12 = sub_20A8C3E10();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_20A546A14(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
      uint64_t v23 = v8[6];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = sub_20A8C3D00();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        sub_20A546A14(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8], MEMORY[0x263F8D8F0]);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v90 = v8;
      uint64_t v29 = v8[7];
      uint64_t v30 = &a1[v29];
      uint64_t v31 = &a2[v29];
      *(void *)uint64_t v30 = *(void *)&a2[v29];
      v30[8] = a2[v29 + 8];
      *((void *)v30 + 2) = *(void *)&a2[v29 + 16];
      v30[24] = a2[v29 + 24];
      *((void *)v30 + 4) = *(void *)&a2[v29 + 32];
      v30[40] = a2[v29 + 40];
      long long v32 = *(_OWORD *)&a2[v29 + 64];
      *((_OWORD *)v30 + 3) = *(_OWORD *)&a2[v29 + 48];
      *((_OWORD *)v30 + 4) = v32;
      uint64_t v33 = (int *)type metadata accessor for PriceViewModel();
      uint64_t v34 = v33[9];
      uint64_t v35 = &v30[v34];
      uint64_t v36 = &v31[v34];
      uint64_t v37 = sub_20A8C2EB0();
      uint64_t v86 = *(void (**)(char *, char *))(*(void *)(v37 - 8) + 32);
      uint64_t v87 = v37;
      v86(v35, v36);
      uint64_t v38 = v33[10];
      uint64_t v39 = &v30[v38];
      uint64_t v40 = &v31[v38];
      uint64_t v41 = sub_20A8C4030();
      uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v41 - 8) + 32);
      uint64_t v85 = v41;
      v84(v39, v40);
      uint64_t v88 = v33;
      uint64_t v42 = v33[11];
      uint64_t v43 = &v30[v42];
      uint64_t v44 = &v31[v42];
      uint64_t v45 = sub_20A8C2990();
      uint64_t v82 = *(void (**)(char *, char *))(*(void *)(v45 - 8) + 32);
      uint64_t v83 = v45;
      v82(v43, v44);
      uint64_t v46 = type metadata accessor for QuoteViewModel();
      uint64_t v47 = *(int *)(v46 + 20);
      uint64_t v48 = &v30[v47];
      id v49 = &v31[v47];
      uint64_t v50 = sub_20A8C3410();
      uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v50 - 8) + 32);
      uint64_t v81 = v50;
      v80(v48, v49);
      uint64_t v51 = *(int *)(v46 + 24);
      uint64_t v52 = &v30[v51];
      uint64_t v53 = &v31[v51];
      uint64_t v54 = type metadata accessor for QuoteSummaryTimeRange();
      uint64_t v89 = *(void *)(v54 - 8);
      uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
      if (v79(v53, 1, v54))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
        memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        uint64_t v76 = v46;
        uint64_t v77 = v54;
        uint64_t v56 = sub_20A8C2BC0();
        uint64_t v57 = *(void *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v53, 3, v56))
        {
          uint64_t v58 = v89;
          memcpy(v52, v53, *(void *)(v89 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v52, v53, v56);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v52, 0, 3, v56);
          uint64_t v58 = v89;
        }
        uint64_t v59 = *(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56);
        uint64_t v54 = v77;
        v59(v52, 0, 1, v77);
        uint64_t v46 = v76;
      }
      uint64_t v60 = *(int *)(type metadata accessor for QuoteSummaryViewModel() + 20);
      uint64_t v61 = &v30[v60];
      uint64_t v62 = &v31[v60];
      uint64_t v63 = *(void *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(&v31[v60], 1, v46))
      {
        sub_20A546A14(0, (unint64_t *)&qword_26AC82B28, (uint64_t (*)(uint64_t))type metadata accessor for QuoteViewModel, MEMORY[0x263F8D8F0]);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        uint64_t v78 = v63;
        *(void *)uint64_t v61 = *(void *)v62;
        v61[8] = v62[8];
        *((void *)v61 + 2) = *((void *)v62 + 2);
        v61[24] = v62[24];
        *((void *)v61 + 4) = *((void *)v62 + 4);
        v61[40] = v62[40];
        long long v65 = *((_OWORD *)v62 + 4);
        *((_OWORD *)v61 + 3) = *((_OWORD *)v62 + 3);
        *((_OWORD *)v61 + 4) = v65;
        uint64_t v66 = v88;
        ((void (*)(char *, char *, uint64_t))v86)(&v61[v88[9]], &v62[v88[9]], v87);
        ((void (*)(char *, char *, uint64_t))v84)(&v61[v66[10]], &v62[v66[10]], v85);
        ((void (*)(char *, char *, uint64_t))v82)(&v61[v66[11]], &v62[v66[11]], v83);
        ((void (*)(char *, char *, uint64_t))v80)(&v61[*(int *)(v46 + 20)], &v62[*(int *)(v46 + 20)], v81);
        uint64_t v67 = *(int *)(v46 + 24);
        uint64_t v68 = &v61[v67];
        uint64_t v69 = &v62[v67];
        if (v79(&v62[v67], 1, v54))
        {
          sub_20A546A14(0, (unint64_t *)&qword_26AC82848, (uint64_t (*)(uint64_t))type metadata accessor for QuoteSummaryTimeRange, MEMORY[0x263F8D8F0]);
          memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          uint64_t v71 = v54;
          uint64_t v72 = sub_20A8C2BC0();
          uint64_t v73 = *(void *)(v72 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v69, 3, v72))
          {
            uint64_t v74 = v89;
            memcpy(v68, v69, *(void *)(v89 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v68, v69, v72);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v68, 0, 3, v72);
            uint64_t v74 = v89;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v68, 0, 1, v71);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v61, 0, 1, v46);
      }
      a1[v90[8]] = a2[v90[8]];
      goto LABEL_33;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void sub_20A545284()
{
  uint64_t v0 = type metadata accessor for StockFeedMastheadModel();
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(v0 - 8) + 64;
    sub_20A546A14(319, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v7 = &v5;
      uint64_t v3 = sub_20A8CC310();
      if (v4 <= 0x3F)
      {
        uint64_t v8 = *(void *)(v3 - 8) + 64;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t sub_20A5453D0()
{
  uint64_t v1 = sub_20A8CC310();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (uint64_t *)((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A5466E0(v0, (uint64_t)v7);
  uint64_t v8 = 0x7472616863;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = *v7;
      sub_20A42C980();
      sub_20A5467A4((uint64_t)v7 + *(int *)(v9 + 64));
      break;
    case 2u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v2 + 32))(v4, v7, v1);
      uint64_t v8 = sub_20A8CC2C0();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      break;
    case 3u:
      return v8;
    case 4u:
      uint64_t v8 = 0x73676E696E726165;
      break;
    case 5u:
      uint64_t v8 = 7364967;
      break;
    case 6u:
      uint64_t v8 = 0x64726163616C70;
      break;
    case 7u:
      uint64_t v8 = 0xD000000000000013;
      break;
    default:
      sub_20A546744((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v8 = 0x646165687473616DLL;
      break;
  }
  return v8;
}

uint64_t sub_20A545634@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5466E0(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      uint64_t v11 = (uint64_t)&v6[*(int *)(v10 + 64)];
      uint64_t v12 = *MEMORY[0x263F59B28];
      uint64_t v13 = sub_20A8CD150();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a1, v12, v13);
      uint64_t result = sub_20A5467A4(v11);
      break;
    case 2u:
      uint64_t v14 = *MEMORY[0x263F59B30];
      uint64_t v15 = sub_20A8CD150();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
      uint64_t result = sub_20A546744((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      break;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_2;
    default:
      sub_20A546744((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
LABEL_2:
      uint64_t v7 = *MEMORY[0x263F59B38];
      uint64_t v8 = sub_20A8CD150();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
      break;
  }
  return result;
}

uint64_t sub_20A545848@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5466E0(v2, (uint64_t)v12);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      sub_20A546894((uint64_t)&v12[*(int *)(v17 + 64)], (uint64_t)v9);
      sub_20A546928((uint64_t)v9, (uint64_t)v6);
      uint64_t v18 = sub_20A8CC470();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
      {
        sub_20A5467A4((uint64_t)v9);
        uint64_t result = sub_20A5467A4((uint64_t)v6);
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
        *(void *)(a1 + 32) = 0;
      }
      else
      {
        uint64_t v20 = MEMORY[0x263F59738];
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = v20;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
        (*(void (**)(uint64_t *, char *, uint64_t))(v19 + 32))(boxed_opaque_existential_1, v6, v18);
        uint64_t result = sub_20A5467A4((uint64_t)v9);
      }
      break;
    case 2:
      uint64_t v14 = sub_20A8CC310();
      uint64_t v15 = MEMORY[0x263F59708];
      *(void *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v15;
      uint64_t v16 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a1);
      uint64_t result = (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v16, v12, v14);
      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      goto LABEL_2;
    default:
      uint64_t result = sub_20A546744((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
LABEL_2:
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      break;
  }
  return result;
}

uint64_t sub_20A545B20@<X0>(uint64_t a1@<X8>)
{
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5466E0(v5, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      sub_20A5467A4((uint64_t)&v4[*(int *)(v7 + 64)]);
      break;
    case 2u:
      uint64_t v6 = type metadata accessor for StockFeedSectionDescriptor;
      goto LABEL_5;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      break;
    default:
      uint64_t v6 = type metadata accessor for StockFeedMastheadModel;
LABEL_5:
      sub_20A546744((uint64_t)v4, (uint64_t (*)(void))v6);
      break;
  }
  uint64_t v8 = *MEMORY[0x263F59800];
  uint64_t v9 = sub_20A8CC5C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(a1, v8, v9);
}

uint64_t sub_20A545C94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5466E0(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      uint64_t v11 = (uint64_t)&v6[*(int *)(v10 + 64)];
      uint64_t v12 = *MEMORY[0x263F587D0];
      uint64_t v13 = sub_20A8CBFA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(a1, v12, v13);
      uint64_t result = sub_20A5467A4(v11);
      break;
    case 2u:
      uint64_t v14 = *MEMORY[0x263F587C0];
      uint64_t v15 = sub_20A8CBFA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
      uint64_t result = sub_20A546744((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      break;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
      goto LABEL_2;
    default:
      sub_20A546744((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
LABEL_2:
      uint64_t v7 = *MEMORY[0x263F587C8];
      uint64_t v8 = sub_20A8CBFA0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
      break;
  }
  return result;
}

uint64_t sub_20A545EA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5466E0(v1, (uint64_t)v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v6 = type metadata accessor for StockFeedSectionDescriptor;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      uint64_t v9 = (uint64_t)&v4[*(int *)(v8 + 64)];
      uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x263F59890];
      sub_20A546A14(0, &qword_26AC80008, MEMORY[0x263F59890], MEMORY[0x263F8E0F8]);
      sub_20A8CC970();
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_20A8D4540;
      sub_20A8CC950();
      sub_20A8CC960();
      v12[1] = v11;
      sub_20A5469BC();
      sub_20A546A14(0, &qword_26AC7F7B8, v10, MEMORY[0x263F8D488]);
      sub_20A546A78();
      sub_20A8CF290();
      return sub_20A5467A4(v9);
    case 2:
      goto LABEL_3;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return sub_20A8CC940();
    default:
      uint64_t v6 = type metadata accessor for StockFeedMastheadModel;
LABEL_3:
      sub_20A546744((uint64_t)v4, (uint64_t (*)(void))v6);
      return sub_20A8CC940();
  }
}

uint64_t sub_20A546124(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CC310();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (char *)&v46 - v7;
  uint64_t v8 = type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (uint64_t *)((char *)&v46 - v18);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v46 - v21;
  sub_20A54667C();
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = &v25[*(int *)(v26 + 56)];
  sub_20A5466E0(a1, (uint64_t)v25);
  sub_20A5466E0(a2, (uint64_t)v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_20A5466E0((uint64_t)v25, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_20A546744((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
        goto LABEL_20;
      }
      sub_20A546830((uint64_t)v22, (uint64_t)v13);
      sub_20A546830((uint64_t)v27, (uint64_t)v10);
      char v33 = sub_20A6FC650(v13, v10);
      sub_20A546744((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A546744((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      uint64_t v35 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
      break;
    case 1u:
      sub_20A5466E0((uint64_t)v25, (uint64_t)v19);
      uint64_t v38 = *v19;
      uint64_t v37 = v19[1];
      sub_20A42C980();
      uint64_t v40 = v39;
      uint64_t v41 = (uint64_t)v19 + *(int *)(v39 + 64);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_20A5467A4(v41);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      if (v38 == *(void *)v27 && v37 == *((void *)v27 + 1)) {
        char v33 = 1;
      }
      else {
        char v33 = sub_20A8CF760();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_20A5467A4((uint64_t)&v27[*(int *)(v40 + 64)]);
      sub_20A5467A4(v41);
      uint64_t v35 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
      break;
    case 2u:
      sub_20A5466E0((uint64_t)v25, (uint64_t)v16);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v49);
        goto LABEL_20;
      }
      uint64_t v29 = v48;
      uint64_t v28 = v49;
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      uint64_t v31 = v46;
      v30(v46, v16, v49);
      long long v32 = v47;
      v30(v47, v27, v28);
      char v33 = sub_20A8CC2F0();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v29 + 8);
      v34(v32, v28);
      v34(v31, v28);
      uint64_t v35 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
      break;
    case 3u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
      if (EnumCaseMultiPayload != 3) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4u:
      int v44 = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
      if (v44 == 4) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 6u:
      int v36 = swift_getEnumCaseMultiPayload();
      uint64_t v35 = (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor;
      if (v36 != 6) {
        goto LABEL_20;
      }
LABEL_17:
      char v33 = 1;
      break;
    default:
LABEL_20:
      char v33 = 0;
      uint64_t v35 = (uint64_t (*)(void))sub_20A54667C;
      break;
  }
  sub_20A546744((uint64_t)v25, v35);
  return v33 & 1;
}

void sub_20A54667C()
{
  if (!qword_26AC77050)
  {
    type metadata accessor for StockFeedSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC77050);
    }
  }
}

uint64_t sub_20A5466E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A546744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5467A4(uint64_t a1)
{
  sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20A546830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockFeedMastheadModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A546894(uint64_t a1, uint64_t a2)
{
  sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A546928(uint64_t a1, uint64_t a2)
{
  sub_20A546A14(0, &qword_26AC6AF30, MEMORY[0x263F59740], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20A5469BC()
{
  unint64_t result = qword_26AC6B048;
  if (!qword_26AC6B048)
  {
    sub_20A8CC970();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6B048);
  }
  return result;
}

void sub_20A546A14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A546A78()
{
  unint64_t result = qword_26AC7F7C0;
  if (!qword_26AC7F7C0)
  {
    sub_20A546A14(255, &qword_26AC7F7B8, MEMORY[0x263F59890], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC7F7C0);
  }
  return result;
}

uint64_t NeverShowBilingualFeedPromptAlert.title.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NeverShowBilingualFeedPromptAlert.message.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v2 = sub_20A8CE2B0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t NeverShowBilingualFeedPromptAlert.preferredActionButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7D7E8];
  uint64_t v3 = sub_20A8C9580();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t NeverShowBilingualFeedPromptAlert.acceptButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t NeverShowBilingualFeedPromptAlert.rejectButton.getter()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A546EC0()
{
  return NeverShowBilingualFeedPromptAlert.title.getter();
}

uint64_t sub_20A546ED8()
{
  return NeverShowBilingualFeedPromptAlert.message.getter();
}

uint64_t sub_20A546EF0()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

uint64_t sub_20A546FA8()
{
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v2 = sub_20A8C2370();

  return v2;
}

ValueMetadata *type metadata accessor for NeverShowBilingualFeedPromptAlert()
{
  return &type metadata for NeverShowBilingualFeedPromptAlert;
}

uint64_t sub_20A547078@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC67650);
    uint64_t result = sub_20A8C5BB0();
    if (v9)
    {
      uint64_t v6 = type metadata accessor for SubscriptionsRouter();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v5;
      sub_20A42BEBC(&v8, v7 + 24);
      a2[3] = v6;
      uint64_t result = sub_20A548520(&qword_26AC71598, (void (*)(uint64_t))type metadata accessor for SubscriptionsRouter);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A5471A4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v17;
  if (v17)
  {
    uint64_t v5 = type metadata accessor for SubscriptionFeatureAvailability();
    uint64_t v6 = v18;
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(v16, v17);
    v15[3] = v4;
    v15[4] = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
    uint64_t v9 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v4 - 8) + 16);
    uint64_t v10 = ((uint64_t (*)(uint64_t *, void *, uint64_t))v9)(boxed_opaque_existential_1, v7, v4);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9(v13, boxed_opaque_existential_1, v4, v11);
    uint64_t v14 = sub_20A431A50((uint64_t)v13, v5, v4, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    a2[3] = v5;
    uint64_t result = sub_20A548520(&qword_26AC7AA68, (void (*)(uint64_t))type metadata accessor for SubscriptionFeatureAvailability);
    a2[4] = result;
    *a2 = v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A54734C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC69C08);
    sub_20A8C5BB0();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC69B98);
    uint64_t result = sub_20A8C5BB0();
    if (v18)
    {
      uint64_t v6 = type metadata accessor for PaywallTracker();
      uint64_t v7 = (void *)swift_allocObject();
      long long v8 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_feedData;
      uint64_t v9 = sub_20A8C76E0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
      uint64_t v10 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_groupData;
      uint64_t v11 = sub_20A8C77D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
      uint64_t v12 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_articleData;
      uint64_t v13 = sub_20A8C6CB0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
      uint64_t v14 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_campaignData;
      uint64_t v15 = sub_20A8C69D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      uint64_t v16 = (char *)v7 + OBJC_IVAR____TtC8StocksUI14PaywallTracker_adReferralData;
      uint64_t v17 = sub_20A8C6B80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
      _OWORD v7[2] = v5;
      v7[3] = v20;
      v7[4] = v21;
      v7[5] = v18;
      v7[6] = v19;
      a2[3] = v6;
      uint64_t result = sub_20A548520(&qword_26AC6D4D0, (void (*)(uint64_t))type metadata accessor for PaywallTracker);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A54764C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68F30);
    uint64_t result = sub_20A8C5BB0();
    if (v8)
    {
      uint64_t v6 = type metadata accessor for PaywallRouter();
      uint64_t v7 = (void *)swift_allocObject();
      sub_20A42BEBC(v10, (uint64_t)(v7 + 2));
      v7[7] = v5;
      v7[8] = v8;
      v7[9] = v9;
      a2[3] = v6;
      uint64_t result = sub_20A548520(&qword_26AC6D1D0, (void (*)(uint64_t))type metadata accessor for PaywallRouter);
      a2[4] = result;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A54778C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_20A8C7770();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A3C0);
  uint64_t result = sub_20A8C5BB0();
  if (!v35)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v27 = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6B270);
  uint64_t result = sub_20A8C5BB0();
  if (v33)
  {
    uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    v26[1] = v26;
    double v10 = MEMORY[0x270FA5388](v9);
    uint64_t v12 = (void *)((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
    uint64_t v14 = *v12;
    uint64_t v15 = type metadata accessor for AnalyticsChannelDataFactory();
    v31[3] = v15;
    v31[4] = &off_26BE69918;
    v31[0] = v14;
    uint64_t v16 = type metadata accessor for PurchaseTransactionTracker();
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v15);
    double v19 = MEMORY[0x270FA5388](v18);
    uint64_t v21 = (void *)((char *)v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v22 + 16))(v21, v19);
    uint64_t v23 = *v21;
    uint64_t v29 = v15;
    uint64_t v30 = &off_26BE69918;
    *(void *)&long long v28 = v23;
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7A6C8], v4);
    uint64_t v24 = sub_20A8C4890();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)(v17 + 16) = v24;
    sub_20A42BEBC(&v28, v17 + 24);
    sub_20A42BEBC(&v32, v17 + 64);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    uint64_t v25 = v27;
    void v27[3] = v16;
    uint64_t result = sub_20A548520((unint64_t *)&unk_26AC76D30, (void (*)(uint64_t))type metadata accessor for PurchaseTransactionTracker);
    v25[4] = result;
    *uint64_t v25 = v17;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A547B88(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68F30);
  uint64_t result = sub_20A8C5BB0();
  if (v2)
  {
    type metadata accessor for EntitlementsOverrideProvider();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
    *(void *)(result + 24) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A547C1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SubscriptionStatusCheckBlocker();
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 1;
  a1[3] = v2;
  uint64_t result = sub_20A548520(&qword_26AC7A228, (void (*)(uint64_t))type metadata accessor for SubscriptionStatusCheckBlocker);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_20A547CA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for PostPurchaseOnboardingPresenter();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    a2[3] = v5;
    uint64_t result = sub_20A548520(&qword_26AC7A680, (void (*)(uint64_t))type metadata accessor for PostPurchaseOnboardingPresenter);
    a2[4] = result;
    *a2 = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A547D64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PostPurchaseOnboardingViewControllerFactory();
  uint64_t v3 = swift_allocObject();
  a1[3] = v2;
  uint64_t result = sub_20A548520(&qword_26AC7E9B8, (void (*)(uint64_t))type metadata accessor for PostPurchaseOnboardingViewControllerFactory);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_20A547DE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v25;
  if (!v25)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v20 = a2;
  uint64_t v6 = v26;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(v24, v25);
  v23[3] = v5;
  v23[4] = v6;
  uint64_t v19 = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  uint64_t v9 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v5 - 8) + 16);
  ((void (*)(uint64_t *, void *, uint64_t))v9)(boxed_opaque_existential_1, v7, v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D42C0(0, (unint64_t *)&qword_26AC7FB20);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC69B98);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v11 = v21;
  if (v21)
  {
    uint64_t v12 = v22;
    uint64_t v13 = type metadata accessor for PaidBundleViaOfferFeatureAvailability();
    double v14 = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v9(v16, boxed_opaque_existential_1, v5, v14);
    uint64_t v17 = sub_20A5FB010((uint64_t)v16, v10, v11, v12, v13, v5, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    uint64_t v18 = v20;
    void v20[3] = v13;
    uint64_t result = sub_20A548520((unint64_t *)&unk_26AC7D590, (void (*)(uint64_t))type metadata accessor for PaidBundleViaOfferFeatureAvailability);
    v18[4] = result;
    *uint64_t v18 = v17;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SubscriptionsAssembly()
{
  return self;
}

uint64_t sub_20A548088()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69BD8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69B90);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69BA8);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69BA0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69C38);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4D42C0(0, (unint64_t *)&unk_26AC7FB40);
  sub_20A8C6290();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69B88);
  sub_20A8C62A0();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D010], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8C5CC0();
  sub_20A4301D4(0, (unint64_t *)&unk_26AC69C50);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69C68);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC69C60);
  sub_20A8C62A0();
  swift_release();
  return swift_release();
}

uint64_t sub_20A548520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ManageWatchlistsBlueprintLayoutBuilder()
{
  return self;
}

uint64_t sub_20A54858C()
{
  return sub_20A548664(&qword_26763AC88, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor);
}

uint64_t sub_20A5485D4()
{
  return sub_20A548664(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
}

uint64_t sub_20A54861C()
{
  return sub_20A548664((unint64_t *)&unk_26763D170, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsModel);
}

uint64_t sub_20A548664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A5486AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v16[1] = a3;
  uint64_t v5 = type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C9A00();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D718();
  sub_20A8C8820();
  char v12 = v17;
  sub_20A8C99F0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
  uint64_t v13 = swift_storeEnumTagMultiPayload();
  MEMORY[0x270FA5388](v13);
  v16[-2] = a1;
  v16[-1] = a2;
  if (v12) {
    double v14 = (void (*)(char *))sub_20A549358;
  }
  else {
    double v14 = (void (*)(char *))sub_20A549374;
  }
  sub_20A42559C(v14, (uint64_t)&v16[-4]);
  type metadata accessor for ManageWatchlistsLayoutModel();
  sub_20A548664(&qword_26763AC88, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor);
  sub_20A548664(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
  sub_20A8C9840();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_20A548964@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v5 = type metadata accessor for WatchlistCellViewLayoutOptions();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WatchlistCellViewModel(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_20A42D5E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v30, 1, 1, v28);
    return sub_20A549460((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  }
  else
  {
    sub_20A549390((uint64_t)v16, (uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_20A45321C();
    uint64_t v18 = &v10[*(int *)(v17 + 48)];
    sub_20A5493F8((uint64_t)v13, (uint64_t)v10, type metadata accessor for WatchlistCellViewModel);
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 16), *(void *)(a1 + 40));
    uint64_t v19 = sub_20A8C9830();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v7, a2, v19);
    sub_20A4A2CE8(*(double *)&v13, *(double *)&v7, (uint64_t)v31);
    sub_20A549460((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WatchlistCellViewLayoutOptions);
    long long v20 = v31[9];
    *((_OWORD *)v18 + 8) = v31[8];
    *((_OWORD *)v18 + 9) = v20;
    *((void *)v18 + 20) = v32;
    long long v21 = v31[5];
    *((_OWORD *)v18 + 4) = v31[4];
    *((_OWORD *)v18 + 5) = v21;
    long long v22 = v31[7];
    *((_OWORD *)v18 + 6) = v31[6];
    *((_OWORD *)v18 + 7) = v22;
    long long v23 = v31[1];
    *(_OWORD *)uint64_t v18 = v31[0];
    *((_OWORD *)v18 + 1) = v23;
    long long v24 = v31[3];
    *((_OWORD *)v18 + 2) = v31[2];
    *((_OWORD *)v18 + 3) = v24;
    swift_storeEnumTagMultiPayload();
    sub_20A548664(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
    uint64_t v25 = v30;
    sub_20A8C9140();
    sub_20A549460((uint64_t)v13, type metadata accessor for WatchlistCellViewModel);
    sub_20A42D5E8();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 1, v26);
  }
}

uint64_t sub_20A548E1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a2;
  uint64_t WatchlistViewLayoutOptions = type metadata accessor for CreateWatchlistViewLayoutOptions();
  MEMORY[0x270FA5388](WatchlistViewLayoutOptions - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ManageWatchlistsLayoutModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t WatchlistViewModel = type metadata accessor for CreateWatchlistViewModel();
  MEMORY[0x270FA5388](WatchlistViewModel - 8);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ManageWatchlistsModel();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D680();
  sub_20A8C8330();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_20A549390((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel);
    sub_20A453068();
    uint64_t v18 = (uint64_t)&v10[*(int *)(v17 + 48)];
    sub_20A5493F8((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel);
    __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
    uint64_t v19 = sub_20A8C9830();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v24, v19);
    sub_20A74A6AC((uint64_t)v7, v18);
    sub_20A549460((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewLayoutOptions);
    swift_storeEnumTagMultiPayload();
    sub_20A548664(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
    sub_20A8C9140();
    sub_20A549460((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CreateWatchlistViewModel);
    sub_20A42D5E8();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 0, 1, v20);
  }
  else
  {
    sub_20A42D5E8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
    return sub_20A549460((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ManageWatchlistsModel);
  }
}

uint64_t sub_20A549190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  double v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = *v2;
  (*(void (**)(unsigned char *, uint64_t, double))(v8 + 16))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v5);
  uint64_t v11 = v7;
  uint64_t v12 = a2;
  sub_20A449F7C((void (*)(char *))sub_20A549338, (uint64_t)v10);
  type metadata accessor for ManageWatchlistsLayoutSectionDescriptor();
  type metadata accessor for ManageWatchlistsLayoutModel();
  sub_20A548664(&qword_26763AC88, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutSectionDescriptor);
  sub_20A548664(&qword_26763AB48, (void (*)(uint64_t))type metadata accessor for ManageWatchlistsLayoutModel);
  return sub_20A8C85D0();
}

uint64_t sub_20A549338@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5486AC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_20A549358@<X0>(uint64_t a1@<X8>)
{
  return sub_20A548E1C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_20A549374@<X0>(uint64_t a1@<X8>)
{
  return sub_20A548964(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_20A549390(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5493F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A549460(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5494C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A549520((uint64_t (*)(void))type metadata accessor for NoopAudioSessionManager, (uint64_t)&off_26BE6D918, a1);
}

uint64_t sub_20A5494E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A549520((uint64_t (*)(void))type metadata accessor for NoopAudioSessionManager, (uint64_t)&off_26BE6D908, a1);
}

uint64_t sub_20A549500@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A549520((uint64_t (*)(void))type metadata accessor for DisabledAudioTrackFactory, (uint64_t)&off_26BE67A98, a1);
}

uint64_t sub_20A549520@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1(0);
  uint64_t result = swift_allocObject();
  a3[3] = v5;
  a3[4] = a2;
  *a3 = result;
  return result;
}

uint64_t sub_20A549570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_20A8C55F0();
  swift_allocObject();
  uint64_t result = sub_20A8C55E0();
  uint64_t v4 = MEMORY[0x263F58DC0];
  a1[3] = v2;
  a1[4] = v4;
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for NoopAudioAssembly()
{
  return self;
}

uint64_t sub_20A5495F0()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC758A0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC75890);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A43F7E0(0, &qword_26AC72760);
  sub_20A8C62A0();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D010], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20A8C5CC0();
  sub_20A43F7E0(0, &qword_26AC69460);
  sub_20A8C62A0();
  swift_release();
  return swift_release();
}

uint64_t sub_20A549854(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5498C0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_20A549924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A549988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A5499EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A549A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_20A549AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A549AC8);
}

uint64_t sub_20A549AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A549B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A549B48);
}

uint64_t sub_20A549B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C3F00();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StockChartModel()
{
  uint64_t result = qword_26AC6E3B0;
  if (!qword_26AC6E3B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A549C04()
{
  uint64_t result = sub_20A8C3F00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A549C90()
{
  uint64_t v0 = sub_20A8C4030();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C3E70();
  if ((*(unsigned int (**)(char *, uint64_t))(v1 + 88))(v3, v0) == *MEMORY[0x263F7AF60])
  {
    sub_20A8C4250();
    sub_20A8C4230();
    if (qword_26AC69060 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    int v4 = v33;
    sub_20A54A560();
    uint64_t v5 = sub_20A8C2BC0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 72);
    unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v9 = (void (**)(unint64_t, void, uint64_t))(v6 + 104);
    uint64_t v10 = 2 * v7;
    uint64_t v11 = 3 * v7;
    uint64_t v12 = 4 * v7;
    uint64_t v13 = swift_allocObject();
    if (v4 == 1)
    {
      *(_OWORD *)(v13 + 16) = xmmword_20A8DCB20;
      unint64_t v14 = v13 + v8;
      uint64_t v15 = *v9;
      (*v9)(v14, *MEMORY[0x263F7A840], v5);
      v15(v14 + v7, *MEMORY[0x263F7A850], v5);
      v15(v14 + v10, *MEMORY[0x263F7A828], v5);
      v15(v14 + v11, *MEMORY[0x263F7A870], v5);
      v15(v14 + v12, *MEMORY[0x263F7A818], v5);
      v15(v14 + 5 * v7, *MEMORY[0x263F7A848], v5);
      v15(v14 + 6 * v7, *MEMORY[0x263F7A860], v5);
      v15(v14 + 7 * v7, *MEMORY[0x263F7A868], v5);
      v15(v14 + 8 * v7, *MEMORY[0x263F7A858], v5);
      v15(v14 + 9 * v7, *MEMORY[0x263F7A830], v5);
    }
    else
    {
      *(_OWORD *)(v13 + 16) = xmmword_20A8DCB40;
      unint64_t v26 = v13 + v8;
      uint64_t v27 = *v9;
      (*v9)(v26, *MEMORY[0x263F7A840], v5);
      v27(v26 + v7, *MEMORY[0x263F7A850], v5);
      v27(v26 + v10, *MEMORY[0x263F7A828], v5);
      v27(v26 + v11, *MEMORY[0x263F7A870], v5);
      v27(v26 + v12, *MEMORY[0x263F7A848], v5);
      v27(v26 + 5 * v7, *MEMORY[0x263F7A860], v5);
      v27(v26 + 6 * v7, *MEMORY[0x263F7A868], v5);
      v27(v26 + 7 * v7, *MEMORY[0x263F7A858], v5);
      v27(v26 + 8 * v7, *MEMORY[0x263F7A830], v5);
    }
  }
  else
  {
    sub_20A8C4250();
    sub_20A8C4230();
    if (qword_26AC69060 != -1) {
      swift_once();
    }
    sub_20A8C4220();
    swift_release();
    int v16 = v34;
    sub_20A54A560();
    uint64_t v17 = sub_20A8C2BC0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(void *)(v18 + 72);
    unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    long long v21 = (void (**)(unint64_t, void, uint64_t))(v18 + 104);
    uint64_t v22 = 2 * v19;
    uint64_t v31 = 3 * v19;
    uint64_t v32 = 4 * v19;
    uint64_t v13 = swift_allocObject();
    if (v16 == 1)
    {
      *(_OWORD *)(v13 + 16) = xmmword_20A8DCB30;
      unint64_t v23 = v13 + v20;
      uint64_t v24 = *v21;
      (*v21)(v23, *MEMORY[0x263F7A838], v17);
      v24(v23 + v19, *MEMORY[0x263F7A840], v17);
      v24(v23 + v22, *MEMORY[0x263F7A850], v17);
      v24(v23 + v31, *MEMORY[0x263F7A828], v17);
      v24(v23 + v32, *MEMORY[0x263F7A870], v17);
      v24(v23 + 5 * v19, *MEMORY[0x263F7A818], v17);
      v24(v23 + 6 * v19, *MEMORY[0x263F7A848], v17);
      v24(v23 + 7 * v19, *MEMORY[0x263F7A860], v17);
      v24(v23 + 8 * v19, *MEMORY[0x263F7A868], v17);
      v24(v23 + 9 * v19, *MEMORY[0x263F7A858], v17);
      unint64_t v25 = v23 + 10 * v19;
    }
    else
    {
      *(_OWORD *)(v13 + 16) = xmmword_20A8DCB20;
      unint64_t v28 = v13 + v20;
      uint64_t v24 = *v21;
      (*v21)(v28, *MEMORY[0x263F7A838], v17);
      v24(v28 + v19, *MEMORY[0x263F7A840], v17);
      v24(v28 + v22, *MEMORY[0x263F7A850], v17);
      v24(v28 + v31, *MEMORY[0x263F7A828], v17);
      v24(v28 + v32, *MEMORY[0x263F7A870], v17);
      v24(v28 + 5 * v19, *MEMORY[0x263F7A848], v17);
      v24(v28 + 6 * v19, *MEMORY[0x263F7A860], v17);
      v24(v28 + 7 * v19, *MEMORY[0x263F7A868], v17);
      v24(v28 + 8 * v19, *MEMORY[0x263F7A858], v17);
      unint64_t v25 = v28 + 9 * v19;
    }
    v24(v25, *MEMORY[0x263F7A830], v17);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v13;
}

void sub_20A54A560()
{
  if (!qword_26AC7FE78)
  {
    sub_20A8C2BC0();
    unint64_t v0 = sub_20A8CF730();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC7FE78);
    }
  }
}

uint64_t sub_20A54A5B8(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A43F7E0(0, (unint64_t *)&unk_26AC78CA0);
  uint64_t result = sub_20A8C5BB0();
  if (*((void *)&v7 + 1))
  {
    sub_20A42BEBC(&v6, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
    int v4 = sub_20A5B06E8(a1, (uint64_t)&v6);
    sub_20A54A6BC((uint64_t)&v6);
    if (v4)
    {
      sub_20A42F250();
      uint64_t v5 = (void (*)(char *))sub_20A8CB490();
      v5(v4);
      swift_release();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A54A6BC(uint64_t a1)
{
  sub_20A54A718();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A54A718()
{
  if (!qword_26763AB80)
  {
    sub_20A43F7E0(255, &qword_26763C420);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763AB80);
    }
  }
}

uint64_t type metadata accessor for StockFeedViewerPageViewControllerProvider()
{
  return self;
}

uint64_t sub_20A54A7A4()
{
  return sub_20A54A920(&qword_26AC71328, (void (*)(uint64_t))type metadata accessor for StockFeedViewerPage);
}

uint64_t sub_20A54A7F0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockFeedPage();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StockFeedViewerPage();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  sub_20A4C9484(a1, (uint64_t)v8);
  sub_20A4C94E8((uint64_t)v8, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
  uint64_t v10 = sub_20A513E70((uint64_t)v5);
  sub_20A4CF854((uint64_t)v5);
  sub_20A54A920((unint64_t *)&unk_26AC751B8, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
  return v10;
}

uint64_t sub_20A54A920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A54A968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    *((void *)&v10 + 1) = sub_20A8C4990();
    *(void *)&long long v9 = a2;
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  sub_20A4B2A1C(a3, (uint64_t)v8);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  sub_20A4B2AE0((uint64_t)v8, v5 + 24);
  sub_20A491334();
  sub_20A54C664((unint64_t *)&qword_26AC69E50, (void (*)(uint64_t))sub_20A491334);
  swift_retain_n();
  uint64_t v6 = sub_20A8CBC70();
  swift_release();
  sub_20A54C3F8((uint64_t)&v9, (uint64_t (*)(void))sub_20A42F348);
  return v6;
}

uint64_t sub_20A54AADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a3;
  uint64_t v73 = a2;
  uint64_t v83 = (char *)a1;
  uint64_t v4 = sub_20A8C2530();
  uint64_t v78 = *(void *)(v4 - 8);
  uint64_t v79 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v74 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A54C240(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v77 = (uint64_t)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v82 = (char *)&v64 - v9;
  sub_20A54C240(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v66 = (char *)&v64 - v11;
  uint64_t v72 = sub_20A8CA0D0();
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_20A8CA640();
  uint64_t v81 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v75 = (char *)&v64 - v15;
  uint64_t v76 = type metadata accessor for StocksActivity(0);
  uint64_t v80 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  unint64_t v23 = (char *)&v64 - v22;
  sub_20A54C240(0, (unint64_t *)&unk_26763BAA0, (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  MEMORY[0x270FA5388](v24 - 8);
  unint64_t v26 = (char *)&v64 - v25;
  uint64_t v27 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v64 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  unsigned __int8 v33 = (char *)&v64 - v32;
  uint64_t v34 = v3;
  sub_20A54B600((uint64_t)v83, (uint64_t)v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    uint64_t v35 = (unint64_t *)&unk_26763BAA0;
    int v36 = (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute;
    uint64_t v37 = (uint64_t)v26;
    return sub_20A54C708(v37, v35, v36);
  }
  uint64_t v39 = v80;
  uint64_t v40 = (uint64_t)v82;
  uint64_t v65 = v34;
  uint64_t v83 = v23;
  uint64_t v41 = v81;
  sub_20A54C328((uint64_t)v26, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  sub_20A54C390((uint64_t)v33, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  uint64_t v42 = (uint64_t)v33;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
    uint64_t v44 = v40;
    sub_20A54C58C((uint64_t)v30, v40, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    uint64_t v45 = v77;
    sub_20A54C5F8(v40, v77, (unint64_t *)&unk_26AC68C70, v43);
    uint64_t v47 = v78;
    uint64_t v46 = v79;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v45, 1, v79) != 1)
    {
      uint64_t v50 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v74, v45, v46);
      id v51 = objc_msgSend(self, sel_sharedApplication);
      uint64_t v52 = (void *)sub_20A8C24D0();
      sub_20A4CFA44(MEMORY[0x263F8EE78]);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_20A54C664(&qword_26763B630, type metadata accessor for OpenExternalURLOptionsKey);
      uint64_t v53 = (void *)sub_20A8CE170();
      swift_bridgeObjectRelease();
      objc_msgSend(v51, sel_openURL_options_completionHandler_, v52, v53, 0);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
      sub_20A54C708(v44, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
      return sub_20A54C3F8(v42, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    }
    uint64_t v48 = (void (*)(uint64_t))MEMORY[0x263F06EA8];
    sub_20A54C708(v40, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    sub_20A54C3F8((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    uint64_t v37 = v45;
    uint64_t v35 = (unint64_t *)&unk_26AC68C70;
    int v36 = v48;
    return sub_20A54C708(v37, v35, v36);
  }
  uint64_t v82 = v33;
  uint64_t v49 = (uint64_t)v83;
  sub_20A54C58C((uint64_t)v30, (uint64_t)v83, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  sub_20A54C5F8(v49, (uint64_t)v20, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v20, 1, v76) == 1)
  {
    sub_20A54C708(v49, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    sub_20A54C3F8((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    uint64_t v37 = (uint64_t)v20;
    uint64_t v35 = (unint64_t *)&qword_26AC6C780;
    int v36 = (void (*)(uint64_t))type metadata accessor for StocksActivity;
    return sub_20A54C708(v37, v35, v36);
  }
  sub_20A54C328((uint64_t)v20, (uint64_t)v17, type metadata accessor for StocksActivity);
  (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v73, v72);
  uint64_t v54 = v75;
  sub_20A8CA650();
  uint64_t v55 = v69;
  uint64_t v56 = v68;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v69, v54, v68);
  int v57 = (*(uint64_t (**)(char *, uint64_t))(v41 + 88))(v55, v56);
  int v58 = *MEMORY[0x263F7DCB0];
  uint64_t v59 = *(void (**)(char *, uint64_t))(v41 + 8);
  v59(v55, v56);
  if (v57 == v58)
  {
    uint64_t v60 = v65;
    uint64_t v61 = sub_20A8C6D60();
    uint64_t v62 = (uint64_t)v66;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v66, 1, 1, v61);
    sub_20A4342F4(v60 + 64, (uint64_t)v86);
    uint64_t v85 = 0;
    memset(v84, 0, sizeof(v84));
    swift_retain();
    sub_20A5BFAAC((uint64_t)v17, v67, v62, (uint64_t)v86, 0, 0, (uint64_t)v84);
    swift_release();
    sub_20A54C6AC((uint64_t)v84, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
    sub_20A54C6AC((uint64_t)v86, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
    sub_20A54C708(v62, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28]);
    swift_release();
    uint64_t v63 = v75;
  }
  else
  {
    sub_20A8C8590();
    uint64_t v63 = v54;
  }
  v59(v63, v56);
  sub_20A54C3F8((uint64_t)v17, type metadata accessor for StocksActivity);
  sub_20A54C708((uint64_t)v83, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  return sub_20A54C3F8((uint64_t)v82, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
}

uint64_t sub_20A54B600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C5920();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_20A8C4DA0();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = &v33[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_20A8C5390();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v33[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_20A8C4AC0();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (void **)&v33[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(void **, uint64_t, uint64_t, double))(v13 + 16))(v16, a1, v12, v14);
  int v17 = (*(uint64_t (**)(void **, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x263F589C0])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    uint64_t v18 = *v16;
    unint64_t v34 = 0;
    unint64_t v35 = 0xE000000000000000;
    sub_20A8CF3C0();
    swift_bridgeObjectRelease();
    unint64_t v34 = 0xD000000000000013;
    unint64_t v35 = 0x800000020A8FF870;
    id v19 = objc_msgSend(v18, sel_identifier);
    sub_20A8CE280();

    sub_20A8CE3D0();
    swift_bridgeObjectRelease();
    sub_20A8C2520();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    uint64_t v20 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 0, 1, v20);
  }
  if (v17 == *MEMORY[0x263F589B8])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    sub_20A54C458();
    uint64_t v22 = (long long *)((char *)v16 + *(int *)(v21 + 64));
    (*(void (**)(unsigned char *, char *, uint64_t))(v9 + 32))(v11, (char *)v16 + *(int *)(v21 + 48), v8);
    sub_20A42BEBC(v22, (uint64_t)&v34);
    swift_unknownObjectRetain();
    sub_20A8C58F0();
    sub_20A4342F4((uint64_t)&v34, (uint64_t)v33);
    sub_20A8C5590();
    swift_allocObject();
    swift_unknownObjectRetain();
    sub_20A8C5580();
    sub_20A8C4D90();
    swift_release();
    sub_20A42FC8C();
    uint64_t v24 = *(int *)(v23 + 48);
    uint64_t v25 = a2 + *(int *)(v23 + 64);
    sub_20A54C390((uint64_t)v7, a2, MEMORY[0x263F58AA8]);
    *(_OWORD *)uint64_t v25 = 0u;
    *(_OWORD *)(v25 + 16) = 0u;
    *(void *)(v25 + 32) = 0;
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    *(void *)(a2 + v24) = 0;
    sub_20A54C3F8((uint64_t)v7, MEMORY[0x263F58AA8]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_7:
    type metadata accessor for StocksActivity.Article(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = type metadata accessor for StocksActivity(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a2, 0, 1, v29);
    uint64_t v20 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
    goto LABEL_8;
  }
  if (v17 == *MEMORY[0x263F589A8])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    sub_20A54C328((uint64_t)v16, (uint64_t)v7, MEMORY[0x263F58AA8]);
    sub_20A42FC8C();
    uint64_t v27 = *(int *)(v26 + 48);
    uint64_t v28 = a2 + *(int *)(v26 + 64);
    sub_20A54C390((uint64_t)v7, a2, MEMORY[0x263F58AA8]);
    *(_OWORD *)uint64_t v28 = 0u;
    *(_OWORD *)(v28 + 16) = 0u;
    *(void *)(v28 + 32) = 0;
    *(void *)(a2 + v27) = 0;
    sub_20A54C3F8((uint64_t)v7, MEMORY[0x263F58AA8]);
    goto LABEL_7;
  }
  if (v17 == *MEMORY[0x263F589B0])
  {
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    swift_bridgeObjectRelease();
    uint64_t v31 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
  else
  {
    uint64_t v32 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
    return (*(uint64_t (**)(void **, uint64_t))(v13 + 8))(v16, v12);
  }
}

uint64_t sub_20A54BC98(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v4 = type metadata accessor for StocksActivity(0);
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v30 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - v10;
  sub_20A54C240(0, (unint64_t *)&unk_26763BAA0, (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
  MEMORY[0x270FA5388](v12 - 8);
  double v14 = (char *)&v28 - v13;
  uint64_t v15 = type metadata accessor for StocksNewsArticlesRouter.ArticleRoute();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v28 - v20;
  sub_20A54B600(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v22 = (unint64_t *)&unk_26763BAA0;
    uint64_t v23 = (void (*)(uint64_t))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute;
    uint64_t v24 = (uint64_t)v14;
  }
  else
  {
    sub_20A54C328((uint64_t)v14, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    sub_20A54C390((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_20A54C3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
      sub_20A54C3F8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
      return 0;
    }
    sub_20A54C58C((uint64_t)v18, (uint64_t)v11, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    sub_20A54C5F8((uint64_t)v11, (uint64_t)v8, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v4) != 1)
    {
      uint64_t v27 = v30;
      sub_20A54C328((uint64_t)v8, v30, type metadata accessor for StocksActivity);
      sub_20A4342F4(v2 + 64, (uint64_t)v32);
      swift_retain();
      uint64_t v25 = sub_20A54A968(v27, v29, (uint64_t)v32);
      sub_20A54C6AC((uint64_t)v32, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
      swift_release();
      sub_20A54C3F8(v27, type metadata accessor for StocksActivity);
      sub_20A54C708((uint64_t)v11, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
      sub_20A54C3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
      return v25;
    }
    sub_20A54C708((uint64_t)v11, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
    sub_20A54C3F8((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    uint64_t v24 = (uint64_t)v8;
    uint64_t v22 = (unint64_t *)&qword_26AC6C780;
    uint64_t v23 = (void (*)(uint64_t))type metadata accessor for StocksActivity;
  }
  sub_20A54C708(v24, v22, v23);
  return 0;
}

uint64_t sub_20A54C174()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StocksNewsArticlesRouter()
{
  return self;
}

uint64_t sub_20A54C1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20A54AADC(a1, a2, a3);
}

uint64_t sub_20A54C218(uint64_t a1, uint64_t a2)
{
  return sub_20A54BC98(a1, a2);
}

void sub_20A54C240(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for StocksNewsArticlesRouter.ArticleRoute()
{
  uint64_t result = qword_26763BAC8;
  if (!qword_26763BAC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A54C2E0()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  }

  return swift_deallocObject();
}

uint64_t sub_20A54C328(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A54C390(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A54C3F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A54C458()
{
  if (!qword_26763BAB0)
  {
    MEMORY[0x270FA5388](0);
    sub_20A4549BC();
    sub_20A8C5390();
    sub_20A4301D4(255, &qword_26AC69570);
    sub_20A4301D4(255, &qword_26AC694D8);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_26763BAB0);
    }
  }
}

uint64_t sub_20A54C58C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A54C240(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A54C5F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A54C240(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A54C664(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A54C6AC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_20A42FC30(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A54C708(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A54C240(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t *sub_20A54C764(unint64_t *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = (char *)*a2;
    *a1 = *a2;
    a1 = (unint64_t *)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_20A8C2530();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        sub_20A54C240(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(unint64_t *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
    }
    else
    {
      uint64_t v10 = type metadata accessor for StocksActivity(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            unint64_t v13 = a2[1];
            *a1 = *a2;
            a1[1] = v13;
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            unint64_t v14 = a2[4];
            unint64_t v15 = a2[5];
            a1[4] = v14;
            a1[5] = v15;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_60;
          case 1u:
            uint64_t v16 = type metadata accessor for ForYouSectionDescriptor();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              uint64_t v67 = sub_20A8CC310();
              (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload == 1)
            {
              unint64_t v68 = a2[1];
              *a1 = *a2;
              a1[1] = v68;
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
            }
            else
            {
              uint64_t v18 = sub_20A8C3F00();
              (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
              swift_storeEnumTagMultiPayload();
            }
            sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
            uint64_t v70 = *(int *)(v69 + 48);
            uint64_t v71 = (char *)a1 + v70;
            uint64_t v72 = (char *)a2 + v70;
            uint64_t v73 = sub_20A8CA180();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            goto LABEL_60;
          case 2u:
            type metadata accessor for StocksActivity.StockFeed(0);
            int v19 = swift_getEnumCaseMultiPayload();
            uint64_t v20 = sub_20A8C3F00();
            (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
            if (v19 == 1)
            {
              uint64_t v21 = type metadata accessor for StocksActivity.StockFeed.Series(0);
              *(unint64_t *)((char *)a1 + *(int *)(v21 + 20)) = *(void *)((char *)a2 + *(int *)(v21 + 20));
              sub_20A54D5A4(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
              *(unint64_t *)((char *)a1 + *(int *)(v22 + 48)) = *(void *)((char *)a2 + *(int *)(v22 + 48));
              swift_bridgeObjectRetain();
            }
            else
            {
              sub_20A54D5A4(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
              *(unint64_t *)((char *)a1 + *(int *)(v59 + 48)) = *(void *)((char *)a2 + *(int *)(v59 + 48));
            }
            goto LABEL_59;
          case 3u:
            unint64_t v23 = a2[1];
            *a1 = *a2;
            a1[1] = v23;
            swift_bridgeObjectRetain();
            goto LABEL_60;
          case 4u:
            type metadata accessor for StocksActivity.Article(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *a1 = *a2;
              swift_unknownObjectRetain();
            }
            else
            {
              sub_20A8C4DA0();
              int v60 = swift_getEnumCaseMultiPayload();
              *a1 = *a2;
              if (v60 == 1)
              {
                swift_retain();
              }
              else
              {
                sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
                uint64_t v78 = *(int *)(v77 + 48);
                uint64_t v95 = (char *)a2 + v78;
                uint64_t v99 = (char *)a1 + v78;
                uint64_t v79 = sub_20A8C5390();
                __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16);
                swift_retain();
                __dsta(v99, v95, v79);
              }
              swift_storeEnumTagMultiPayload();
              sub_20A42FC8C();
              *(unint64_t *)((char *)a1 + *(int *)(v80 + 48)) = *(void *)((char *)a2 + *(int *)(v80 + 48));
              uint64_t v81 = *(int *)(v80 + 64);
              uint64_t v82 = (char *)a1 + v81;
              uint64_t v83 = (char *)a2 + v81;
              uint64_t v84 = *(void *)((char *)a2 + v81 + 24);
              if (v84)
              {
                uint64_t v85 = *((void *)v83 + 4);
                *((void *)v82 + 3) = v84;
                *((void *)v82 + 4) = v85;
                (**(void (***)(void))(v84 - 8))();
              }
              else
              {
                long long v86 = *((_OWORD *)v83 + 1);
                *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
                *((_OWORD *)v82 + 1) = v86;
                *((void *)v82 + 4) = *((void *)v83 + 4);
              }
            }
LABEL_59:
            swift_storeEnumTagMultiPayload();
            goto LABEL_60;
          case 5u:
            uint64_t v24 = sub_20A8C2530();
            (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
            goto LABEL_60;
          case 6u:
            switch(*((unsigned char *)a2 + 40))
            {
              case 1:
                long long v74 = *(_OWORD *)(a2 + 3);
                *(_OWORD *)(a1 + 3) = v74;
                (**(void (***)(unint64_t *, void *))(v74 - 8))(a1, a2);
                *((unsigned char *)a1 + 40) = 1;
                break;
              case 2:
                uint64_t v75 = (void *)*a2;
                *a1 = *a2;
                *((unsigned char *)a1 + 40) = 2;
                id v76 = v75;
                break;
              case 3:
                *a1 = *a2;
                *((unsigned char *)a1 + 40) = 3;
                goto LABEL_53;
              default:
                *a1 = *a2;
                *((unsigned char *)a1 + 40) = 0;
LABEL_53:
                swift_retain();
                break;
            }
            goto LABEL_60;
          case 7u:
            unint64_t v25 = a2[1];
            *a1 = *a2;
            a1[1] = v25;
            uint64_t v26 = (int *)type metadata accessor for CampaignRouteModel();
            uint64_t v27 = v26[5];
            uint64_t v92 = (char *)a2 + v27;
            uint64_t v96 = (char *)a1 + v27;
            uint64_t v28 = sub_20A8C56A0();
            uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
            swift_bridgeObjectRetain();
            v29(v96, v92, v28);
            uint64_t v30 = v26[6];
            uint64_t v31 = (unint64_t *)((char *)a1 + v30);
            uint64_t v32 = (void *)((char *)a2 + v30);
            uint64_t v97 = v32[1];
            void *v31 = *v32;
            v31[1] = v97;
            uint64_t v33 = v26[7];
            unint64_t v34 = (unint64_t *)((char *)a1 + v33);
            unint64_t v35 = (void *)((char *)a2 + v33);
            uint64_t v36 = v35[1];
            *unint64_t v34 = *v35;
            v34[1] = v36;
            *(unint64_t *)((char *)a1 + v26[8]) = *(void *)((char *)a2 + v26[8]);
            *(unint64_t *)((char *)a1 + v26[9]) = *(void *)((char *)a2 + v26[9]);
            uint64_t v37 = v26[10];
            uint64_t v89 = v26;
            __dst = (char *)a1 + v37;
            uint64_t v38 = (char *)a2 + v37;
            uint64_t v39 = sub_20A8C7B50();
            uint64_t v88 = *(void *)(v39 - 8);
            uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v93(v38, 1, v39))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
              memcpy(__dst, v38, *(void *)(*(void *)(v40 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v88 + 16))(__dst, v38, v39);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v39);
            }
            uint64_t v62 = (char *)a2 + v89[11];
            *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v62 + 1);
            goto LABEL_60;
          case 8u:
            unint64_t v41 = *a2;
            sub_20A4855D4(v41);
            *a1 = v41;
            goto LABEL_60;
          case 9u:
            if (*a2)
            {
              unint64_t v42 = a2[1];
              *a1 = *a2;
              a1[1] = v42;
              swift_retain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_60;
          case 0xAu:
            uint64_t v43 = sub_20A8C3F00();
            uint64_t v44 = *(void *)(v43 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v44 + 48))(a2, 1, v43))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
              memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, void *, uint64_t))(v44 + 16))(a1, a2, v43);
              (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
            }
            uint64_t v63 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
            uint64_t v64 = (unint64_t *)((char *)a1 + v63);
            uint64_t v65 = (void *)((char *)a2 + v63);
            if (*v65)
            {
              uint64_t v66 = v65[1];
              *uint64_t v64 = *v65;
              v64[1] = v66;
              swift_retain();
            }
            else
            {
              *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
            }
            goto LABEL_60;
          case 0xBu:
            uint64_t v46 = sub_20A8C3F00();
            uint64_t v47 = *(void *)(v46 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v47 + 48))(a2, 1, v46))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
              memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, void *, uint64_t))(v47 + 16))(a1, a2, v46);
              (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v46);
            }
            sub_20A4B2908();
            *(unint64_t *)((char *)a1 + *(int *)(v61 + 48)) = *(void *)((char *)a2 + *(int *)(v61 + 48));
            swift_retain();
            goto LABEL_60;
          case 0xCu:
            uint64_t v49 = (void *)*a2;
            *a1 = *a2;
            uint64_t v50 = type metadata accessor for PreBuyFlowRouteModel();
            uint64_t v51 = *(int *)(v50 + 20);
            uint64_t v94 = (char *)a2 + v51;
            uint64_t v98 = (char *)a1 + v51;
            uint64_t v52 = sub_20A8C78E0();
            uint64_t v53 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
            id v54 = v49;
            v53(v98, v94, v52);
            uint64_t v55 = *(int *)(v50 + 24);
            uint64_t v56 = (char *)a1 + v55;
            int v57 = (char *)a2 + v55;
            uint64_t v58 = sub_20A8C79F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
LABEL_60:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(v11 + 64));
            break;
        }
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_20A54D5A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_20A54D60C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_20A54D694(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_20A8C2530();
    uint64_t v34 = *(void *)(v2 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(a1, 1, v2)) {
      return;
    }
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    uint64_t v4 = a1;
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v6 = type metadata accessor for StocksActivity(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6)) {
      return;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        goto LABEL_13;
      case 1u:
        type metadata accessor for ForYouSectionDescriptor();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v22 = sub_20A8CC310();
        }
        else
        {
          if (EnumCaseMultiPayload == 1)
          {
            swift_bridgeObjectRelease();
            goto LABEL_53;
          }
          if (EnumCaseMultiPayload) {
            goto LABEL_53;
          }
          uint64_t v22 = sub_20A8C3F00();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
LABEL_53:
        sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
        a1 += *(int *)(v32 + 48);
        uint64_t v20 = sub_20A8CA180();
LABEL_54:
        uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8);
        uint64_t v5 = v20;
        uint64_t v4 = a1;
        break;
      case 2u:
        type metadata accessor for StocksActivity.StockFeed(0);
        int v7 = swift_getEnumCaseMultiPayload();
        uint64_t v8 = sub_20A8C3F00();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
        if (v7 != 1) {
          return;
        }
        type metadata accessor for StocksActivity.StockFeed.Series(0);
LABEL_13:
        swift_bridgeObjectRelease();
        return;
      case 3u:
        goto LABEL_13;
      case 4u:
        type metadata accessor for StocksActivity.Article(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_20A8C4DA0();
          int v26 = swift_getEnumCaseMultiPayload();
          swift_release();
          if (v26 != 1)
          {
            sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
            uint64_t v28 = a1 + *(int *)(v27 + 48);
            uint64_t v29 = sub_20A8C5390();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
          }
          sub_20A42FC8C();
          uint64_t v31 = a1 + *(int *)(v30 + 64);
          if (*(void *)(v31 + 24))
          {
LABEL_56:
            __swift_destroy_boxed_opaque_existential_1(v31);
          }
        }
        return;
      case 5u:
        uint64_t v20 = sub_20A8C2530();
        goto LABEL_54;
      case 6u:
        switch(*(unsigned char *)(a1 + 40))
        {
          case 0:
          case 3:
            goto LABEL_43;
          case 1:
            uint64_t v31 = a1;
            goto LABEL_56;
          case 2:
            id v33 = *(id *)a1;

            break;
          default:
            return;
        }
        return;
      case 7u:
        swift_bridgeObjectRelease();
        uint64_t v9 = type metadata accessor for CampaignRouteModel();
        uint64_t v10 = a1 + *(int *)(v9 + 20);
        uint64_t v11 = sub_20A8C56A0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v9 + 40);
        uint64_t v13 = sub_20A8C7B50();
        uint64_t v14 = *(void *)(v13 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
        }
        swift_unknownObjectWeakDestroy();
        return;
      case 8u:
        unint64_t v23 = *(void *)a1;
        sub_20A485620(v23);
        return;
      case 9u:
        if (*(void *)a1) {
          goto LABEL_43;
        }
        return;
      case 0xAu:
        uint64_t v24 = sub_20A8C3F00();
        uint64_t v25 = *(void *)(v24 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(a1, 1, v24)) {
          (*(void (**)(uint64_t, uint64_t))(v25 + 8))(a1, v24);
        }
        if (*(void *)(a1 + *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20))) {
          goto LABEL_43;
        }
        return;
      case 0xBu:
        uint64_t v15 = sub_20A8C3F00();
        uint64_t v16 = *(void *)(v15 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, 1, v15)) {
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
        }
        sub_20A4B2908();
LABEL_43:
        swift_release();
        return;
      case 0xCu:

        uint64_t v17 = type metadata accessor for PreBuyFlowRouteModel();
        uint64_t v18 = a1 + *(int *)(v17 + 20);
        uint64_t v19 = sub_20A8C78E0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        a1 += *(int *)(v17 + 24);
        uint64_t v20 = sub_20A8C79F0();
        goto LABEL_54;
      default:
        return;
    }
  }

  v3(v4, v5);
}

unint64_t *sub_20A54DEBC(unint64_t *a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_20A8C2530();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      sub_20A54C240(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(unint64_t *, void **, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  else
  {
    uint64_t v7 = type metadata accessor for StocksActivity(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          unint64_t v10 = (unint64_t)a2[1];
          *a1 = (unint64_t)*a2;
          a1[1] = v10;
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          unint64_t v11 = (unint64_t)a2[4];
          unint64_t v12 = (unint64_t)a2[5];
          a1[4] = v11;
          a1[5] = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_58;
        case 1u:
          uint64_t v13 = type metadata accessor for ForYouSectionDescriptor();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v64 = sub_20A8CC310();
            (*(void (**)(unint64_t *, void **, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload == 1)
          {
            unint64_t v65 = (unint64_t)a2[1];
            *a1 = (unint64_t)*a2;
            a1[1] = v65;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
          }
          else
          {
            uint64_t v15 = sub_20A8C3F00();
            (*(void (**)(unint64_t *, void **, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            swift_storeEnumTagMultiPayload();
          }
          sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
          uint64_t v67 = *(int *)(v66 + 48);
          unint64_t v68 = (char *)a1 + v67;
          uint64_t v69 = (char *)a2 + v67;
          uint64_t v70 = sub_20A8CA180();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
          goto LABEL_58;
        case 2u:
          type metadata accessor for StocksActivity.StockFeed(0);
          int v16 = swift_getEnumCaseMultiPayload();
          uint64_t v17 = sub_20A8C3F00();
          (*(void (**)(unint64_t *, void **, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
          if (v16 == 1)
          {
            uint64_t v18 = type metadata accessor for StocksActivity.StockFeed.Series(0);
            *(unint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v18 + 20));
            sub_20A54D5A4(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
            *(unint64_t *)((char *)a1 + *(int *)(v19 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v19 + 48));
            swift_bridgeObjectRetain();
          }
          else
          {
            sub_20A54D5A4(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
            *(unint64_t *)((char *)a1 + *(int *)(v56 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v56 + 48));
          }
          goto LABEL_57;
        case 3u:
          unint64_t v20 = (unint64_t)a2[1];
          *a1 = (unint64_t)*a2;
          a1[1] = v20;
          swift_bridgeObjectRetain();
          goto LABEL_58;
        case 4u:
          type metadata accessor for StocksActivity.Article(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *a1 = (unint64_t)*a2;
            swift_unknownObjectRetain();
          }
          else
          {
            sub_20A8C4DA0();
            int v57 = swift_getEnumCaseMultiPayload();
            *a1 = (unint64_t)*a2;
            if (v57 == 1)
            {
              swift_retain();
            }
            else
            {
              sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
              uint64_t v75 = *(int *)(v74 + 48);
              uint64_t v92 = (char *)a2 + v75;
              uint64_t v96 = (char *)a1 + v75;
              uint64_t v76 = sub_20A8C5390();
              __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
              swift_retain();
              __dsta(v96, v92, v76);
            }
            swift_storeEnumTagMultiPayload();
            sub_20A42FC8C();
            *(unint64_t *)((char *)a1 + *(int *)(v77 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v77 + 48));
            uint64_t v78 = *(int *)(v77 + 64);
            uint64_t v79 = (char *)a1 + v78;
            uint64_t v80 = (char *)a2 + v78;
            uint64_t v81 = *(uint64_t *)((char *)a2 + v78 + 24);
            if (v81)
            {
              uint64_t v82 = *((void *)v80 + 4);
              *((void *)v79 + 3) = v81;
              *((void *)v79 + 4) = v82;
              (**(void (***)(void))(v81 - 8))();
            }
            else
            {
              long long v83 = *((_OWORD *)v80 + 1);
              *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
              *((_OWORD *)v79 + 1) = v83;
              *((void *)v79 + 4) = *((void *)v80 + 4);
            }
          }
LABEL_57:
          swift_storeEnumTagMultiPayload();
          goto LABEL_58;
        case 5u:
          uint64_t v21 = sub_20A8C2530();
          (*(void (**)(unint64_t *, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          goto LABEL_58;
        case 6u:
          switch(*((unsigned char *)a2 + 40))
          {
            case 1:
              long long v71 = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 3) = v71;
              (**(void (***)(unint64_t *, void **))(v71 - 8))(a1, a2);
              *((unsigned char *)a1 + 40) = 1;
              break;
            case 2:
              uint64_t v72 = *a2;
              *a1 = (unint64_t)*a2;
              *((unsigned char *)a1 + 40) = 2;
              id v73 = v72;
              break;
            case 3:
              *a1 = (unint64_t)*a2;
              *((unsigned char *)a1 + 40) = 3;
              goto LABEL_51;
            default:
              *a1 = (unint64_t)*a2;
              *((unsigned char *)a1 + 40) = 0;
LABEL_51:
              swift_retain();
              break;
          }
          goto LABEL_58;
        case 7u:
          unint64_t v22 = (unint64_t)a2[1];
          *a1 = (unint64_t)*a2;
          a1[1] = v22;
          unint64_t v23 = (int *)type metadata accessor for CampaignRouteModel();
          uint64_t v24 = v23[5];
          uint64_t v89 = (char *)a2 + v24;
          uint64_t v93 = (char *)a1 + v24;
          uint64_t v25 = sub_20A8C56A0();
          int v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v93, v89, v25);
          uint64_t v27 = v23[6];
          uint64_t v28 = (unint64_t *)((char *)a1 + v27);
          uint64_t v29 = (void **)((char *)a2 + v27);
          uint64_t v94 = v29[1];
          *uint64_t v28 = *v29;
          v28[1] = v94;
          uint64_t v30 = v23[7];
          uint64_t v31 = (unint64_t *)((char *)a1 + v30);
          uint64_t v32 = (void **)((char *)a2 + v30);
          uint64_t v33 = v32[1];
          void *v31 = *v32;
          v31[1] = v33;
          *(unint64_t *)((char *)a1 + v23[8]) = *(unint64_t *)((char *)a2 + v23[8]);
          *(unint64_t *)((char *)a1 + v23[9]) = *(unint64_t *)((char *)a2 + v23[9]);
          uint64_t v34 = v23[10];
          long long v86 = v23;
          __dst = (char *)a1 + v34;
          unint64_t v35 = (char *)a2 + v34;
          uint64_t v36 = sub_20A8C7B50();
          uint64_t v85 = *(void *)(v36 - 8);
          uint64_t v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v90(v35, 1, v36))
          {
            sub_20A54C240(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
            memcpy(__dst, v35, *(void *)(*(void *)(v37 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v85 + 16))(__dst, v35, v36);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(__dst, 0, 1, v36);
          }
          uint64_t v59 = (char *)a2 + v86[11];
          *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v59 + 1);
          goto LABEL_58;
        case 8u:
          unint64_t v38 = (unint64_t)*a2;
          sub_20A4855D4(v38);
          *a1 = v38;
          goto LABEL_58;
        case 9u:
          if (*a2)
          {
            unint64_t v39 = (unint64_t)a2[1];
            *a1 = (unint64_t)*a2;
            a1[1] = v39;
            swift_retain();
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          goto LABEL_58;
        case 0xAu:
          uint64_t v40 = sub_20A8C3F00();
          uint64_t v41 = *(void *)(v40 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v41 + 48))(a2, 1, v40))
          {
            sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
            memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            (*(void (**)(unint64_t *, void **, uint64_t))(v41 + 16))(a1, a2, v40);
            (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v41 + 56))(a1, 0, 1, v40);
          }
          uint64_t v60 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
          uint64_t v61 = (unint64_t *)((char *)a1 + v60);
          uint64_t v62 = (void **)((char *)a2 + v60);
          if (*v62)
          {
            uint64_t v63 = v62[1];
            void *v61 = *v62;
            v61[1] = v63;
            swift_retain();
          }
          else
          {
            *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
          }
          goto LABEL_58;
        case 0xBu:
          uint64_t v43 = sub_20A8C3F00();
          uint64_t v44 = *(void *)(v43 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48))(a2, 1, v43))
          {
            sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
            memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(unint64_t *, void **, uint64_t))(v44 + 16))(a1, a2, v43);
            (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v43);
          }
          sub_20A4B2908();
          *(unint64_t *)((char *)a1 + *(int *)(v58 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(v58 + 48));
          swift_retain();
          goto LABEL_58;
        case 0xCu:
          uint64_t v46 = *a2;
          *a1 = (unint64_t)*a2;
          uint64_t v47 = type metadata accessor for PreBuyFlowRouteModel();
          uint64_t v48 = *(int *)(v47 + 20);
          uint64_t v91 = (char *)a2 + v48;
          uint64_t v95 = (char *)a1 + v48;
          uint64_t v49 = sub_20A8C78E0();
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
          id v51 = v46;
          v50(v95, v91, v49);
          uint64_t v52 = *(int *)(v47 + 24);
          uint64_t v53 = (char *)a1 + v52;
          id v54 = (char *)a2 + v52;
          uint64_t v55 = sub_20A8C79F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
LABEL_58:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(v8 + 64));
          break;
      }
      (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t *sub_20A54ECAC(unint64_t *a1, unint64_t *a2)
{
  if (a1 != a2)
  {
    sub_20A54C3F8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_20A8C2530();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        sub_20A54C240(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    else
    {
      uint64_t v7 = type metadata accessor for StocksActivity(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *a1 = *a2;
            a1[1] = a2[1];
            *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            a1[4] = a2[4];
            a1[5] = a2[5];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_59;
          case 1u:
            uint64_t v10 = type metadata accessor for ForYouSectionDescriptor();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              uint64_t v58 = sub_20A8CC310();
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload == 1)
            {
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            }
            else
            {
              uint64_t v12 = sub_20A8C3F00();
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
              swift_storeEnumTagMultiPayload();
            }
            sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
            uint64_t v60 = *(int *)(v59 + 48);
            uint64_t v61 = (char *)a1 + v60;
            uint64_t v62 = (char *)a2 + v60;
            uint64_t v63 = sub_20A8CA180();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
            goto LABEL_59;
          case 2u:
            type metadata accessor for StocksActivity.StockFeed(0);
            int v13 = swift_getEnumCaseMultiPayload();
            uint64_t v14 = sub_20A8C3F00();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
            if (v13 == 1)
            {
              uint64_t v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
              *(unint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v15 + 20));
              sub_20A54D5A4(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
              *(unint64_t *)((char *)a1 + *(int *)(v16 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v16 + 48));
              swift_bridgeObjectRetain();
            }
            else
            {
              sub_20A54D5A4(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
              *(unint64_t *)((char *)a1 + *(int *)(v50 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v50 + 48));
            }
            goto LABEL_58;
          case 3u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_59;
          case 4u:
            type metadata accessor for StocksActivity.Article(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *a1 = *a2;
              swift_unknownObjectRetain();
            }
            else
            {
              sub_20A8C4DA0();
              int v51 = swift_getEnumCaseMultiPayload();
              *a1 = *a2;
              if (v51 == 1)
              {
                swift_retain();
              }
              else
              {
                sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
                uint64_t v68 = *(int *)(v67 + 48);
                uint64_t v85 = (char *)a2 + v68;
                uint64_t v88 = (char *)a1 + v68;
                uint64_t v69 = sub_20A8C5390();
                __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
                swift_retain();
                __dsta(v88, v85, v69);
              }
              swift_storeEnumTagMultiPayload();
              sub_20A42FC8C();
              *(unint64_t *)((char *)a1 + *(int *)(v70 + 48)) = *(unint64_t *)((char *)a2
                                                                                           + *(int *)(v70 + 48));
              uint64_t v71 = *(int *)(v70 + 64);
              uint64_t v72 = (char *)a1 + v71;
              id v73 = (char *)a2 + v71;
              uint64_t v74 = *(unint64_t *)((char *)a2 + v71 + 24);
              if (v74)
              {
                *((void *)v72 + 3) = v74;
                *((void *)v72 + 4) = *((void *)v73 + 4);
                (**(void (***)(void))(v74 - 8))();
              }
              else
              {
                long long v75 = *(_OWORD *)v73;
                long long v76 = *((_OWORD *)v73 + 1);
                *((void *)v72 + 4) = *((void *)v73 + 4);
                *(_OWORD *)uint64_t v72 = v75;
                *((_OWORD *)v72 + 1) = v76;
              }
            }
LABEL_58:
            swift_storeEnumTagMultiPayload();
            goto LABEL_59;
          case 5u:
            uint64_t v17 = sub_20A8C2530();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            goto LABEL_59;
          case 6u:
            switch(*((unsigned char *)a2 + 40))
            {
              case 1:
                unint64_t v64 = a2[3];
                a1[3] = v64;
                a1[4] = a2[4];
                (**(void (***)(unint64_t *, unint64_t *))(v64 - 8))(a1, a2);
                *((unsigned char *)a1 + 40) = 1;
                break;
              case 2:
                unint64_t v65 = (void *)*a2;
                *a1 = *a2;
                *((unsigned char *)a1 + 40) = 2;
                id v66 = v65;
                break;
              case 3:
                *a1 = *a2;
                *((unsigned char *)a1 + 40) = 3;
                goto LABEL_52;
              default:
                *a1 = *a2;
                *((unsigned char *)a1 + 40) = 0;
LABEL_52:
                swift_retain();
                break;
            }
            goto LABEL_59;
          case 7u:
            *a1 = *a2;
            a1[1] = a2[1];
            uint64_t v18 = (int *)type metadata accessor for CampaignRouteModel();
            uint64_t v19 = v18[5];
            uint64_t v82 = (char *)a2 + v19;
            long long v86 = (char *)a1 + v19;
            uint64_t v20 = sub_20A8C56A0();
            uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
            swift_bridgeObjectRetain();
            v21(v86, v82, v20);
            uint64_t v22 = v18[6];
            unint64_t v23 = (unint64_t *)((char *)a1 + v22);
            uint64_t v24 = (unint64_t *)((char *)a2 + v22);
            void *v23 = *v24;
            v23[1] = v24[1];
            uint64_t v25 = v18[7];
            int v26 = (unint64_t *)((char *)a1 + v25);
            uint64_t v27 = (unint64_t *)((char *)a2 + v25);
            *int v26 = *v27;
            v26[1] = v27[1];
            *(unint64_t *)((char *)a1 + v18[8]) = *(unint64_t *)((char *)a2 + v18[8]);
            *(unint64_t *)((char *)a1 + v18[9]) = *(unint64_t *)((char *)a2 + v18[9]);
            uint64_t v28 = v18[10];
            uint64_t v79 = v18;
            __dst = (char *)a1 + v28;
            uint64_t v29 = (char *)a2 + v28;
            uint64_t v30 = sub_20A8C7B50();
            uint64_t v78 = *(void *)(v30 - 8);
            long long v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v83(v29, 1, v30))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
              memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v78 + 16))(__dst, v29, v30);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(__dst, 0, 1, v30);
            }
            uint64_t v53 = (char *)a2 + v79[11];
            *(void *)(swift_unknownObjectWeakCopyInit() + 8) = *((void *)v53 + 1);
            goto LABEL_59;
          case 8u:
            unint64_t v32 = *a2;
            sub_20A4855D4(v32);
            *a1 = v32;
            goto LABEL_59;
          case 9u:
            if (*a2)
            {
              unint64_t v33 = a2[1];
              *a1 = *a2;
              a1[1] = v33;
              swift_retain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_59;
          case 0xAu:
            uint64_t v34 = sub_20A8C3F00();
            uint64_t v35 = *(void *)(v34 - 8);
            if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
              memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v35 + 16))(a1, a2, v34);
              (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
            }
            uint64_t v54 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
            uint64_t v55 = (unint64_t *)((char *)a1 + v54);
            uint64_t v56 = (unint64_t *)((char *)a2 + v54);
            if (*v56)
            {
              uint64_t v57 = v56[1];
              *uint64_t v55 = *v56;
              v55[1] = v57;
              swift_retain();
            }
            else
            {
              *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
            }
            goto LABEL_59;
          case 0xBu:
            uint64_t v37 = sub_20A8C3F00();
            uint64_t v38 = *(void *)(v37 - 8);
            if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
              memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
            }
            else
            {
              (*(void (**)(unint64_t *, unint64_t *, uint64_t))(v38 + 16))(a1, a2, v37);
              (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
            }
            sub_20A4B2908();
            *(unint64_t *)((char *)a1 + *(int *)(v52 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v52 + 48));
            swift_retain();
            goto LABEL_59;
          case 0xCu:
            uint64_t v40 = (void *)*a2;
            *a1 = *a2;
            uint64_t v41 = type metadata accessor for PreBuyFlowRouteModel();
            uint64_t v42 = *(int *)(v41 + 20);
            uint64_t v84 = (char *)a2 + v42;
            uint64_t v87 = (char *)a1 + v42;
            uint64_t v43 = sub_20A8C78E0();
            uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
            id v45 = v40;
            v44(v87, v84, v43);
            uint64_t v46 = *(int *)(v41 + 24);
            uint64_t v47 = (char *)a1 + v46;
            uint64_t v48 = (char *)a2 + v46;
            uint64_t v49 = sub_20A8C79F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
LABEL_59:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(v8 + 64));
            break;
        }
        (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_20A54FB00(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_20A8C2530();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      sub_20A54C240(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  else
  {
    uint64_t v7 = type metadata accessor for StocksActivity(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v10 = type metadata accessor for ForYouSectionDescriptor();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 2)
          {
            uint64_t v53 = sub_20A8CC310();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32))(a1, a2, v53);
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
          }
          else
          {
            uint64_t v12 = sub_20A8C3F00();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
            swift_storeEnumTagMultiPayload();
          }
          sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
          uint64_t v55 = *(int *)(v54 + 48);
          uint64_t v56 = (char *)a1 + v55;
          uint64_t v57 = (char *)a2 + v55;
          uint64_t v58 = sub_20A8CA180();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          goto LABEL_42;
        case 2u:
          type metadata accessor for StocksActivity.StockFeed(0);
          int v13 = swift_getEnumCaseMultiPayload();
          uint64_t v14 = sub_20A8C3F00();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          if (v13 == 1)
          {
            uint64_t v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
            *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
            sub_20A54D5A4(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
          }
          else
          {
            sub_20A54D5A4(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
          }
          *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
          swift_storeEnumTagMultiPayload();
          goto LABEL_42;
        case 4u:
          uint64_t v17 = type metadata accessor for StocksActivity.Article(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
          }
          else
          {
            uint64_t v45 = sub_20A8C4DA0();
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              *a1 = *a2;
              sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
              uint64_t v60 = *(int *)(v59 + 48);
              uint64_t v61 = (char *)a1 + v60;
              uint64_t v62 = (char *)a2 + v60;
              uint64_t v63 = sub_20A8C5390();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
              swift_storeEnumTagMultiPayload();
            }
            sub_20A42FC8C();
            *(void *)((char *)a1 + *(int *)(v64 + 48)) = *(void *)((char *)a2 + *(int *)(v64 + 48));
            uint64_t v65 = *(int *)(v64 + 64);
            id v66 = (char *)a1 + v65;
            uint64_t v67 = (char *)a2 + v65;
            *((void *)v66 + 4) = *((void *)v67 + 4);
            long long v68 = *((_OWORD *)v67 + 1);
            *(_OWORD *)id v66 = *(_OWORD *)v67;
            *((_OWORD *)v66 + 1) = v68;
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_42;
        case 5u:
          uint64_t v18 = sub_20A8C2530();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          goto LABEL_42;
        case 7u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v19 = (int *)type metadata accessor for CampaignRouteModel();
          uint64_t v20 = v19[5];
          uint64_t v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_20A8C56A0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
          *(_OWORD *)((char *)a1 + v19[6]) = *(_OWORD *)((char *)a2 + v19[6]);
          *(_OWORD *)((char *)a1 + v19[7]) = *(_OWORD *)((char *)a2 + v19[7]);
          *(void *)((char *)a1 + v19[8]) = *(void *)((char *)a2 + v19[8]);
          *(void *)((char *)a1 + v19[9]) = *(void *)((char *)a2 + v19[9]);
          uint64_t v24 = v19[10];
          uint64_t v25 = (char *)a1 + v24;
          int v26 = (char *)a2 + v24;
          uint64_t v27 = sub_20A8C7B50();
          uint64_t v28 = *(void *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          {
            sub_20A54C240(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
            memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          }
          uint64_t v46 = (char *)a2 + v19[11];
          *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v46 + 1);
          goto LABEL_42;
        case 0xAu:
          uint64_t v30 = sub_20A8C3F00();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(a2, 1, v30))
          {
            sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
            memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v31 + 32))(a1, a2, v30);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
          }
          uint64_t v47 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
          uint64_t v48 = (void *)((char *)a1 + v47);
          uint64_t v49 = (void *)((char *)a2 + v47);
          uint64_t v50 = *v49;
          if (*v49)
          {
            uint64_t v51 = v49[1];
            *uint64_t v48 = v50;
            v48[1] = v51;
          }
          else
          {
            *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
          }
          goto LABEL_42;
        case 0xBu:
          uint64_t v33 = sub_20A8C3F00();
          uint64_t v34 = *(void *)(v33 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
          {
            sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
            memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v34 + 32))(a1, a2, v33);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
          }
          sub_20A4B2908();
          *(void *)((char *)a1 + *(int *)(v52 + 48)) = *(void *)((char *)a2 + *(int *)(v52 + 48));
          goto LABEL_42;
        case 0xCu:
          *a1 = *a2;
          uint64_t v36 = type metadata accessor for PreBuyFlowRouteModel();
          uint64_t v37 = *(int *)(v36 + 20);
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = sub_20A8C78E0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
          uint64_t v41 = *(int *)(v36 + 24);
          uint64_t v42 = (char *)a1 + v41;
          uint64_t v43 = (char *)a2 + v41;
          uint64_t v44 = sub_20A8C79F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(v8 + 64));
          break;
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_20A5506A4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20A54C3F8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for StocksNewsArticlesRouter.ArticleRoute);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_20A8C2530();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        sub_20A54C240(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    else
    {
      uint64_t v7 = type metadata accessor for StocksActivity(0);
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_20A54C240(0, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v10 = type metadata accessor for ForYouSectionDescriptor();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 2)
            {
              uint64_t v53 = sub_20A8CC310();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32))(a1, a2, v53);
              swift_storeEnumTagMultiPayload();
            }
            else if (EnumCaseMultiPayload)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            }
            else
            {
              uint64_t v12 = sub_20A8C3F00();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
              swift_storeEnumTagMultiPayload();
            }
            sub_20A54D60C(0, (unint64_t *)&qword_26AC74940, (void (*)(uint64_t))type metadata accessor for ForYouSectionDescriptor, MEMORY[0x263F7DB68]);
            uint64_t v55 = *(int *)(v54 + 48);
            uint64_t v56 = (char *)a1 + v55;
            uint64_t v57 = (char *)a2 + v55;
            uint64_t v58 = sub_20A8CA180();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
            goto LABEL_43;
          case 2u:
            type metadata accessor for StocksActivity.StockFeed(0);
            int v13 = swift_getEnumCaseMultiPayload();
            uint64_t v14 = sub_20A8C3F00();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
            if (v13 == 1)
            {
              uint64_t v15 = type metadata accessor for StocksActivity.StockFeed.Series(0);
              *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
              sub_20A54D5A4(0, (unint64_t *)&qword_26AC677E0, (void (*)(uint64_t))type metadata accessor for StocksActivity.StockFeed.Series);
            }
            else
            {
              sub_20A54D5A4(0, (unint64_t *)&qword_26AC68FE0, MEMORY[0x263F7AF08]);
            }
            *(void *)((char *)a1 + *(int *)(v16 + 48)) = *(void *)((char *)a2 + *(int *)(v16 + 48));
            swift_storeEnumTagMultiPayload();
            goto LABEL_43;
          case 4u:
            uint64_t v17 = type metadata accessor for StocksActivity.Article(0);
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
            }
            else
            {
              uint64_t v45 = sub_20A8C4DA0();
              if (swift_getEnumCaseMultiPayload())
              {
                memcpy(a1, a2, *(void *)(*(void *)(v45 - 8) + 64));
              }
              else
              {
                *a1 = *a2;
                sub_20A54D60C(0, (unint64_t *)&qword_26AC81280, MEMORY[0x263F58E88], MEMORY[0x263F58CE8]);
                uint64_t v60 = *(int *)(v59 + 48);
                uint64_t v61 = (char *)a1 + v60;
                uint64_t v62 = (char *)a2 + v60;
                uint64_t v63 = sub_20A8C5390();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
                swift_storeEnumTagMultiPayload();
              }
              sub_20A42FC8C();
              *(void *)((char *)a1 + *(int *)(v64 + 48)) = *(void *)((char *)a2 + *(int *)(v64 + 48));
              uint64_t v65 = *(int *)(v64 + 64);
              id v66 = (char *)a1 + v65;
              uint64_t v67 = (char *)a2 + v65;
              *((void *)v66 + 4) = *((void *)v67 + 4);
              long long v68 = *((_OWORD *)v67 + 1);
              *(_OWORD *)id v66 = *(_OWORD *)v67;
              *((_OWORD *)v66 + 1) = v68;
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_43;
          case 5u:
            uint64_t v18 = sub_20A8C2530();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
            goto LABEL_43;
          case 7u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v19 = (int *)type metadata accessor for CampaignRouteModel();
            uint64_t v20 = v19[5];
            uint64_t v21 = (char *)a1 + v20;
            uint64_t v22 = (char *)a2 + v20;
            uint64_t v23 = sub_20A8C56A0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
            *(_OWORD *)((char *)a1 + v19[6]) = *(_OWORD *)((char *)a2 + v19[6]);
            *(_OWORD *)((char *)a1 + v19[7]) = *(_OWORD *)((char *)a2 + v19[7]);
            *(void *)((char *)a1 + v19[8]) = *(void *)((char *)a2 + v19[8]);
            *(void *)((char *)a1 + v19[9]) = *(void *)((char *)a2 + v19[9]);
            uint64_t v24 = v19[10];
            uint64_t v25 = (char *)a1 + v24;
            int v26 = (char *)a2 + v24;
            uint64_t v27 = sub_20A8C7B50();
            uint64_t v28 = *(void *)(v27 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8]);
              memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
            }
            uint64_t v46 = (char *)a2 + v19[11];
            *(void *)(swift_unknownObjectWeakTakeInit() + 8) = *((void *)v46 + 1);
            goto LABEL_43;
          case 0xAu:
            uint64_t v30 = sub_20A8C3F00();
            uint64_t v31 = *(void *)(v30 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v31 + 48))(a2, 1, v30))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
              memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(v31 + 32))(a1, a2, v30);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
            }
            uint64_t v47 = *(int *)(type metadata accessor for WatchlistCreationRouteModel() + 20);
            uint64_t v48 = (void *)((char *)a1 + v47);
            uint64_t v49 = (void *)((char *)a2 + v47);
            uint64_t v50 = *v49;
            if (*v49)
            {
              uint64_t v51 = v49[1];
              *uint64_t v48 = v50;
              v48[1] = v51;
            }
            else
            {
              *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
            }
            goto LABEL_43;
          case 0xBu:
            uint64_t v33 = sub_20A8C3F00();
            uint64_t v34 = *(void *)(v33 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
            {
              sub_20A54C240(0, (unint64_t *)&qword_26AC68FD0, MEMORY[0x263F7AF08]);
              memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, void *, uint64_t))(v34 + 32))(a1, a2, v33);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
            }
            sub_20A4B2908();
            *(void *)((char *)a1 + *(int *)(v52 + 48)) = *(void *)((char *)a2 + *(int *)(v52 + 48));
            goto LABEL_43;
          case 0xCu:
            *a1 = *a2;
            uint64_t v36 = type metadata accessor for PreBuyFlowRouteModel();
            uint64_t v37 = *(int *)(v36 + 20);
            uint64_t v38 = (char *)a1 + v37;
            uint64_t v39 = (char *)a2 + v37;
            uint64_t v40 = sub_20A8C78E0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
            uint64_t v41 = *(int *)(v36 + 24);
            uint64_t v42 = (char *)a1 + v41;
            uint64_t v43 = (char *)a2 + v41;
            uint64_t v44 = sub_20A8C79F0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
LABEL_43:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(v8 + 64));
            break;
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_20A55126C()
{
  sub_20A54C240(319, (unint64_t *)&qword_26AC6C780, (void (*)(uint64_t))type metadata accessor for StocksActivity);
  if (v0 <= 0x3F)
  {
    sub_20A54C240(319, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_20A551368(uint64_t a1)
{
  sub_20A4BE14C(0, &qword_26AC6D488);
  sub_20A8C6670();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  swift_retain();
  uint64_t v4 = (void *)sub_20A8C6450();
  sub_20A8CD5E0();
  sub_20A8C64F0();
  swift_release();
  swift_release();

  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = a1;
  swift_retain();
  swift_retain();
  uint64_t v6 = (void *)sub_20A8C6450();
  sub_20A5535B8(0);
  sub_20A8C64F0();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v7 = (void *)sub_20A8C6450();
  uint64_t v8 = sub_20A8C65C0();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_20A551514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v95 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A5536E4(0, &qword_26AC6B268, MEMORY[0x263F59CA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v91 = (char *)&v70 - v5;
  sub_20A5536E4(0, &qword_26AC6B2A0, MEMORY[0x263F59D38], v3);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v90 = (char *)&v70 - v7;
  sub_20A5536E4(0, (unint64_t *)&qword_26AC6B038, (uint64_t (*)(uint64_t))sub_20A55361C, v3);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v85 = (char *)&v70 - v9;
  uint64_t v10 = sub_20A8CD660();
  uint64_t v93 = *(void *)(v10 - 8);
  uint64_t v94 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v92 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CD320();
  uint64_t v101 = *(void *)(v12 - 8);
  uint64_t v102 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v100 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for CuratedForYouFeedGroupConfigData() - 8;
  MEMORY[0x270FA5388](v96);
  uint64_t v89 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v88 = (char *)&v70 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v84 = (char **)((char *)&v70 - v18);
  MEMORY[0x270FA5388](v19);
  uint64_t v81 = (char *)&v70 - v20;
  uint64_t v79 = sub_20A8CCC30();
  uint64_t v77 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  long long v76 = (char **)((char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v75 = sub_20A8CCE10();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  id v73 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5536E4(0, &qword_26AC6B140, MEMORY[0x263F59A48], v3);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v72 = (char *)&v70 - v24;
  uint64_t v25 = sub_20A8CCFE0();
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v70 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5536E4(0, &qword_26AC6B278, MEMORY[0x263F59CD8], v3);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v71 = (char *)&v70 - v28;
  uint64_t v80 = sub_20A8CD600();
  uint64_t v82 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v104 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_20A8CC510();
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v31 = sub_20A8CD8D0();
  uint64_t v98 = *(void *)(v31 - 8);
  uint64_t v99 = v31;
  MEMORY[0x270FA5388](v31);
  uint64_t v97 = (char *)&v70 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5536E4(0, (unint64_t *)&unk_26AC675B0, MEMORY[0x263F58808], v3);
  MEMORY[0x270FA5388](v33 - 8);
  uint64_t v35 = (char *)&v70 - v34;
  uint64_t v87 = sub_20A8CD440();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v37 = (char *)&v70 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_20A8CBFE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v35, 1, 1, v38);
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_20A553748(MEMORY[0x263F8EE78]);
  sub_20A553748(v39);
  sub_20A5538AC(v39, sub_20A553D88);
  sub_20A5538AC(v39, sub_20A553D2C);
  sub_20A5538AC(v39, sub_20A553CD0);
  sub_20A5539E0(v39);
  long long v83 = v37;
  sub_20A8CD430();
  sub_20A8CCAE0();
  uint64_t v40 = v97;
  sub_20A8CD8E0();
  sub_20A8CCB30();
  uint64_t v41 = v78;
  uint64_t v42 = v78 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs;
  v103[3] = type metadata accessor for CuratedForYouFeedGroupKnobs();
  v103[4] = sub_20A553F30((unint64_t *)&unk_26AC77558, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v103);
  sub_20A553C68(v42, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
  uint64_t v44 = v71;
  sub_20A8CD670();
  uint64_t v45 = sub_20A8CD680();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 0, 1, v45);
  sub_20A5536E4(0, &qword_26AC68710, MEMORY[0x263F59D58], MEMORY[0x263F8E0F8]);
  uint64_t v46 = sub_20A8CD900();
  uint64_t v47 = *(void *)(v46 - 8);
  unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, void, uint64_t))(v47 + 104))(v49 + v48, *MEMORY[0x263F59D50], v46);
  sub_20A7BB41C(v49);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v50 = sub_20A8CCEC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v72, 1, 1, v50);
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v73, *MEMORY[0x263F59A00], v75);
  (*(void (**)(void *, void, uint64_t))(v77 + 104))(v76, *MEMORY[0x263F599B8], v79);
  sub_20A8CD5F0();
  uint64_t v51 = *(void *)(v41 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService + 24);
  uint64_t v77 = *(void *)(v41 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService + 32);
  uint64_t v79 = v51;
  long long v76 = __swift_project_boxed_opaque_existential_1((void *)(v41 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService), v51);
  sub_20A460E5C();
  uint64_t v52 = (uint64_t)v81;
  sub_20A8CC550();
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v100, v52 + *(int *)(v96 + 28), v102);
  sub_20A554000(v52, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_20A55361C(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v85, 1, 1, v53);
  swift_retain();
  uint64_t v54 = v84;
  sub_20A8CC550();
  uint64_t v81 = *v54;
  swift_bridgeObjectRetain();
  sub_20A554000((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  uint64_t v55 = v98;
  uint64_t v56 = v90;
  uint64_t v57 = v40;
  uint64_t v58 = v99;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v90, v57, v99);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v56, 0, 1, v58);
  LOBYTE(v103[0]) = 2;
  sub_20A553664(0, (unint64_t *)&unk_26AC6B2B8, (uint64_t (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig, sub_20A4F0534, MEMORY[0x263F59D48]);
  swift_allocObject();
  uint64_t v59 = v80;
  sub_20A8CD8F0();
  uint64_t v60 = (uint64_t)v88;
  sub_20A8CC550();
  sub_20A7D88A0();
  sub_20A554000(v60, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  uint64_t v61 = (uint64_t)v89;
  uint64_t v62 = v82;
  uint64_t v63 = v91;
  sub_20A8CC550();
  sub_20A554000(v61, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v63, v104, v59);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v59);
  uint64_t v64 = qword_26AC6D3D0;
  (id)*MEMORY[0x263F592F0];
  if (v64 != -1) {
    swift_once();
  }
  (id)qword_26AC6D3C8;
  uint64_t v65 = v92;
  sub_20A8CD650();
  id v66 = v100;
  uint64_t v67 = v83;
  uint64_t v68 = sub_20A8CD490();
  (*(void (**)(char *, uint64_t))(v93 + 8))(v65, v94);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v66, v102);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v104, v59);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v97, v99);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v67, v87);
  return v68;
}

uint64_t sub_20A5524D0()
{
  sub_20A5535B8(0);
  uint64_t v36 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v35 = (uint64_t)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v32 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CuratedForYouFeedGroup() - 8;
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5536E4(0, &qword_26AC677B0, MEMORY[0x263F59840], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v27 - v6;
  uint64_t v8 = sub_20A8CCC20();
  MEMORY[0x270FA5388](v8 - 8);
  v27[1] = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_20A8CC470();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v28 = (char *)v27 - v14;
  sub_20A460E5C();
  swift_retain();
  sub_20A8CC540();
  sub_20A8CC540();
  sub_20A55361C(0);
  sub_20A8CC8B0();
  sub_20A8CC8A0();
  sub_20A8CC8C0();
  uint64_t v15 = sub_20A8CC740();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  uint64_t v16 = v28;
  sub_20A8CC430();
  uint64_t v18 = v29;
  uint64_t v17 = v30;
  uint64_t v19 = v31;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v29, v16, v31);
  uint64_t v20 = (uint64_t *)v32;
  sub_20A8CC550();
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  swift_bridgeObjectRetain();
  sub_20A554000((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  uint64_t v23 = (uint64_t)v33;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v33, v18, v19);
  uint64_t v24 = (void *)(v23 + *(int *)(v34 + 28));
  *uint64_t v24 = v22;
  v24[1] = v21;
  sub_20A553C68(v23, v35, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
  type metadata accessor for ForYouFeedGroup();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_20A5536E4(0, (unint64_t *)&qword_26AC69860, (uint64_t (*)(uint64_t))sub_20A5535B8, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v25 = sub_20A8C6580();
  sub_20A554000(v23, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroup);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v19);
  return v25;
}

void sub_20A552A1C()
{
  uint64_t v0 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5[0] = 0x2064657461727543;
  v5[1] = 0xE900000000000028;
  sub_20A460E5C();
  sub_20A8CC550();
  swift_bridgeObjectRetain();
  sub_20A554000((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  if (qword_26AC6D3D0 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_26AC6D3C8;
  type metadata accessor for ForYouFeedGroup();
  sub_20A46A38C();
  id v4 = v3;
  sub_20A8CCB40();
  swift_bridgeObjectRelease();
}

uint64_t sub_20A552BC0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_config;
  sub_20A460E5C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_20A554000(v0 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_formatService);

  return swift_deallocClassInstance();
}

uint64_t sub_20A552C94()
{
  return type metadata accessor for CuratedForYouFeedGroupEmitter();
}

uint64_t type metadata accessor for CuratedForYouFeedGroupEmitter()
{
  uint64_t result = qword_26AC78FF0;
  if (!qword_26AC78FF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A552CE8()
{
  sub_20A460E5C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for CuratedForYouFeedGroupKnobs();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_20A552DBC()
{
  return sub_20A8C6580();
}

uint64_t sub_20A552E08(uint64_t a1)
{
  return sub_20A551368(a1);
}

uint64_t sub_20A552E2C()
{
  uint64_t v0 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[0] = 0x2064657461727543;
  v4[1] = 0xE900000000000028;
  sub_20A460E5C();
  sub_20A8CC550();
  swift_bridgeObjectRetain();
  sub_20A554000((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  return v4[0];
}

uint64_t sub_20A552F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_config;
  sub_20A460E5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
  type metadata accessor for ForYouFeedGroupConfig();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20A552FB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8StocksUI29CuratedForYouFeedGroupEmitter_knobs;
  a1[3] = type metadata accessor for CuratedForYouFeedGroupKnobs();
  a1[4] = sub_20A553F30(&qword_26AC77568, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs);
  a1[5] = sub_20A553F30((unint64_t *)&unk_26763BB40, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupKnobs);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_20A553C68(v3, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupKnobs);
}

uint64_t sub_20A553098()
{
  return sub_20A8CC880();
}

uint64_t sub_20A5530F0()
{
  return sub_20A8CC530();
}

uint64_t sub_20A553128@<X0>(uint64_t *a1@<X8>)
{
  return sub_20A55314C(a1);
}

uint64_t sub_20A55314C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CuratedForYouFeedGroupConfigData();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = 0x2064657461727543;
  unint64_t v12 = 0xE900000000000028;
  sub_20A460E5C();
  sub_20A8CC550();
  swift_bridgeObjectRetain();
  sub_20A554000((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for CuratedForYouFeedGroupConfigData);
  sub_20A8CE3D0();
  swift_bridgeObjectRelease();
  sub_20A8CE3D0();
  sub_20A5536E4(0, &qword_26AC800E8, (uint64_t (*)(uint64_t))sub_20A4D27BC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D3DC0;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  uint64_t v6 = sub_20A8CC530();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  sub_20A4CFBE4(inited);
  sub_20A5536E4(0, &qword_26AC696B8, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, MEMORY[0x263F7CE78]);
  a1[3] = v8;
  a1[4] = sub_20A553F78();
  __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_20A8C5EF0();
}

uint64_t sub_20A553380()
{
  sub_20A553F30((unint64_t *)&unk_26AC78FD0, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter);

  return sub_20A8C5EE0();
}

uint64_t sub_20A5533EC()
{
  return sub_20A553F30((unint64_t *)&unk_26AC78FE0, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter);
}

uint64_t sub_20A553434()
{
  return sub_20A553F30(&qword_26AC78FC8, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter);
}

uint64_t sub_20A55347C()
{
  return sub_20A553F30((unint64_t *)&unk_26AC78FD0, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter);
}

uint64_t sub_20A5534C8()
{
  return sub_20A553F30(&qword_26AC82BC0, (void (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter);
}

uint64_t sub_20A553510()
{
  return sub_20A8CCB20();
}

uint64_t sub_20A55353C(uint64_t a1)
{
  return sub_20A551514(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroyTm_4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A55359C()
{
  return sub_20A5524D0();
}

void sub_20A5535B8(uint64_t a1)
{
}

void sub_20A553600()
{
}

void sub_20A55361C(uint64_t a1)
{
}

void sub_20A553664(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_20A5536E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A553748(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A553E60(0, (unint64_t *)&unk_26763BB30, sub_20A553E2C);
  uint64_t v2 = (void *)sub_20A8CF570();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_20A62F470(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A55387C(uint64_t a1)
{
  return sub_20A5538AC(a1, sub_20A553D88);
}

unint64_t sub_20A553894(uint64_t a1)
{
  return sub_20A5538AC(a1, sub_20A553D2C);
}

unint64_t sub_20A5538AC(uint64_t a1, void (*a2)(void))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v3 = (void *)sub_20A8CF570();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_20A62F470(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20A5539C8(uint64_t a1)
{
  return sub_20A5538AC(a1, sub_20A553CD0);
}

unint64_t sub_20A5539E0(uint64_t a1)
{
  sub_20A553C00();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (void *)((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_20A553E60(0, &qword_26763BAD8, MEMORY[0x263F59E08]);
  uint64_t v7 = sub_20A8CF570();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_20A553C68(v13, (uint64_t)v6, (uint64_t (*)(void))sub_20A553C00);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_20A62F470(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_20A8CDAA0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    long long v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_20A553C00()
{
  if (!qword_26AC686B0)
  {
    sub_20A8CDAA0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26AC686B0);
    }
  }
}

uint64_t sub_20A553C68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A553CD0(uint64_t a1)
{
}

void sub_20A553CF8(uint64_t a1)
{
}

void sub_20A553D2C(uint64_t a1)
{
}

void sub_20A553D54(uint64_t a1)
{
}

void sub_20A553D88(uint64_t a1)
{
}

void sub_20A553DB0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_20A5536E4(255, a3, a4, MEMORY[0x263F7D028]);
    unint64_t v5 = sub_20A8CF580();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A553E2C(uint64_t a1)
{
}

void sub_20A553E60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF580();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_20A553EC4()
{
  if (!qword_26AC698D8)
  {
    sub_20A4BE14C(255, (unint64_t *)&qword_26AC80170);
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC698D8);
    }
  }
}

uint64_t sub_20A553F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20A553F78()
{
  unint64_t result = qword_26AC696A0[0];
  if (!qword_26AC696A0[0])
  {
    sub_20A5536E4(255, &qword_26AC696B8, (uint64_t (*)(uint64_t))type metadata accessor for CuratedForYouFeedGroupEmitter, MEMORY[0x263F7CE78]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26AC696A0);
  }
  return result;
}

uint64_t sub_20A554000(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A554060(double a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  double v4 = v3;
  double v158 = a1;
  uint64_t v140 = a3;
  uint64_t v6 = sub_20A8C2990();
  uint64_t v154 = *(void *)(v6 - 8);
  uint64_t v155 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v147 = a2;
  double v8 = a2[5];
  double v9 = *a2;
  double v10 = a2[1];
  CGFloat v139 = a2[3];
  double v11 = v9 - v139 - v8;
  CGFloat v151 = v4;
  uint64_t v152 = (void *)(*(void *)&v4 + 16);
  uint64_t v153 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)&v4 + 16), *(void *)(*(void *)&v4 + 40));
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  unint64_t v132 = 0x800000020A8FF950;
  id v156 = (id)sub_20A8C2370();

  uint64_t v15 = (void *)*v12;
  sub_20A42CF04();
  CGFloat v149 = v16;
  uint64_t inited = swift_initStackObject();
  long long v150 = xmmword_20A8D4540;
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  char v18 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  uint64_t v157 = *MEMORY[0x263F83570];
  unint64_t v20 = *MEMORY[0x263F81800];
  swift_bridgeObjectRetain();
  double v148 = COERCE_DOUBLE(v18);
  *(void *)(inited + 40) = sub_20A8CEE20();
  uint64_t v21 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = v21;
  uint64_t v22 = v15 + 2;
  uint64_t v23 = v15[5];
  uint64_t v24 = v15[6];
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 184);
  double v145 = COERCE_DOUBLE(v21);
  uint64_t v27 = v26(v23, v25);
  CGFloat v146 = COERCE_DOUBLE(sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0));
  *(CGFloat *)(inited + 104) = v146;
  *(void *)(inited + 80) = v27;
  sub_20A4CF8B0(inited);
  id v28 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v29 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  CGFloat v144 = v30;
  unint64_t v143 = sub_20A4393AC();
  uint64_t v142 = MEMORY[0x263F8EE58] + 8;
  uint64_t v31 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v156 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v31);
  swift_bridgeObjectRelease();

  uint64_t v32 = __swift_project_boxed_opaque_existential_1(v152, *(void *)(*(void *)&v151 + 40));
  sub_20A8C3EF0();
  uint64_t v33 = (void *)*v32;
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = v150;
  double v35 = v148;
  *(double *)(v34 + 32) = v148;
  swift_bridgeObjectRetain();
  id v36 = *(id *)&v35;
  uint64_t v141 = v19;
  *(void *)(v34 + 40) = sub_20A8CEE20();
  *(void *)(v34 + 64) = v19;
  double v37 = v145;
  *(double *)(v34 + 72) = v145;
  uint64_t v38 = v33 + 2;
  uint64_t v40 = v33[5];
  uint64_t v39 = v33[6];
  __swift_project_boxed_opaque_existential_1(v38, v40);
  uint64_t v41 = *(void *)(v39 + 16);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 40);
  id v43 = *(id *)&v37;
  uint64_t v44 = v40;
  uint64_t v45 = v147;
  uint64_t v46 = v42(v44, v41);
  *(CGFloat *)(v34 + 104) = v146;
  *(void *)(v34 + 80) = v46;
  sub_20A4CF8B0(v34);
  id v47 = objc_allocWithZone(MEMORY[0x263F086A0]);
  unint64_t v48 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v49 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(v47, sel_initWithString_attributes_, v48, v49);
  swift_bridgeObjectRelease();

  objc_msgSend(v156, sel_boundingRectWithSize_options_context_, 32, 0, v11, v10);
  CGFloat v144 = v51;
  double v145 = v52;
  CGFloat v146 = v53;
  CGFloat v55 = v54;
  id v137 = v50;
  double v138 = v11;
  objc_msgSend(v50, sel_boundingRectWithSize_options_context_, 32, 0, v11, v10);
  double v148 = v56;
  CGFloat v149 = v57;
  *(void *)&long long v150 = v58;
  CGFloat v151 = v59;
  uint64_t v60 = (void *)sub_20A8CEE20();
  objc_msgSend(v60, sel_capHeight);
  double v62 = v61;

  double v158 = v62 * v45[10];
  unint64_t v143 = v20;
  uint64_t v63 = (void *)sub_20A8CEE20();
  objc_msgSend(v63, sel_capHeight);
  uint64_t v152 = v64;

  char v65 = sub_20A8CECD0();
  uint64_t v142 = *(void *)&v9;
  double v66 = v9 - v8;
  if (v65)
  {
    p_y = &v174.origin.y;
    p_size = &v174.size;
    p_height = &v174.size.height;
    uint64_t v70 = &v175;
    CGFloat v71 = v158;
    CGFloat v72 = v66 - v158;
    CGFloat v136 = v45[11] + v45[13];
    CGFloat v73 = v136;
    uint64_t v74 = (void *)sub_20A8CEE20();
    objc_msgSend(v74, sel_ascender);
    double v76 = v75;

    uint64_t v77 = (void *)sub_20A8CEE20();
    objc_msgSend(v77, sel_capHeight);
    double v79 = v78;

    v182.origin.y = v73 + v76 - v79;
    v170.origin.x = v72;
    v170.origin.y = v182.origin.y;
    v170.size.width = v71;
    *(void *)&v170.size.height = v152;
    char v171 = 0;
    v182.origin.x = v72;
    v182.size.width = v71;
    *(void *)&v182.size.height = v152;
    CGFloat v80 = CGRectGetMinX(v182) - v45[9];
    CGFloat v81 = v55;
    CGFloat v83 = v148;
    CGFloat v82 = v149;
    v183.origin.x = v148;
    v183.origin.y = v149;
    CGFloat v84 = *(double *)&v150;
    *(void *)&v183.size.width = v150;
    CGFloat v85 = v151;
    v183.size.height = v151;
    CGFloat v86 = v80 - CGRectGetWidth(v183);
    v184.origin.x = v83;
    v184.origin.y = v82;
    v184.size.width = v84;
    v184.size.height = v85;
    CGFloat Width = CGRectGetWidth(v184);
    v185.origin.x = v83;
    v185.origin.y = v82;
    v185.size.width = v84;
    v185.size.height = v85;
    v186.size.height = CGRectGetHeight(v185);
    v186.origin.y = v136;
    v172.origin.x = v86;
    v172.origin.y = v136;
    v172.size.width = Width;
    v172.size.height = v186.size.height;
    char v173 = 0;
    v186.origin.x = v86;
    CGFloat v88 = v136;
    v186.size.width = Width;
    CGFloat v89 = CGRectGetMinX(v186) - v45[8];
    CGFloat v91 = v144;
    CGFloat v90 = v145;
    v187.origin.x = v144;
    v187.origin.y = v145;
    CGFloat v92 = v146;
    v187.size.width = v146;
    v187.size.height = v81;
    CGFloat v93 = v89 - CGRectGetWidth(v187);
    v188.origin.x = v91;
    v188.origin.y = v90;
    v188.size.width = v92;
    v188.size.height = v81;
    CGFloat v94 = CGRectGetWidth(v188);
    v189.origin.x = v91;
    v189.origin.y = v90;
    v189.size.width = v92;
    v189.size.height = v81;
    double v95 = v88;
    double Height = CGRectGetHeight(v189);
    v174.origin.x = v93;
  }
  else
  {
    p_y = &v172.origin.y;
    p_size = &v172.size;
    p_height = &v172.size.height;
    uint64_t v70 = &v173;
    CGFloat v98 = v144;
    CGFloat v97 = v145;
    v190.origin.x = v144;
    v190.origin.y = v145;
    CGFloat v99 = v146;
    v190.size.width = v146;
    v190.size.height = v55;
    CGFloat v100 = v66 - CGRectGetWidth(v190);
    CGFloat v101 = v45[11] + v45[13];
    v191.origin.x = v98;
    v191.origin.y = v97;
    v191.size.width = v99;
    v191.size.height = v55;
    CGFloat v102 = CGRectGetWidth(v191);
    v192.origin.x = v98;
    v192.origin.y = v97;
    v192.size.width = v99;
    v192.size.height = v55;
    CGFloat v103 = CGRectGetHeight(v192);
    v193.origin.x = v100;
    CGFloat v135 = v101;
    CGFloat v136 = v100;
    v174.origin.x = v100;
    v174.origin.y = v101;
    v193.origin.y = v101;
    CGFloat v134 = v102;
    v174.size.width = v102;
    v174.size.height = v103;
    CGFloat v104 = v158;
    CGFloat v105 = v66 - v158;
    char v175 = 0;
    v193.size.width = v102;
    v193.size.height = v103;
    CGFloat MaxY = CGRectGetMaxY(v193);
    CGFloat v146 = v45[12];
    CGFloat v107 = MaxY + v146;
    unsigned int v108 = (void *)sub_20A8CEE20();
    objc_msgSend(v108, sel_ascender);
    double v110 = v109;

    uint64_t v111 = (void *)sub_20A8CEE20();
    objc_msgSend(v111, sel_capHeight);
    double v113 = v112;

    v194.origin.y = v107 + v110 - v113;
    v170.origin.x = v105;
    v170.origin.y = v194.origin.y;
    v170.size.width = v104;
    *(void *)&v170.size.height = v152;
    char v171 = 0;
    v194.origin.x = v105;
    v194.size.width = v104;
    *(void *)&v194.size.height = v152;
    CGFloat v114 = CGRectGetMinX(v194) - v45[9];
    CGFloat v115 = v148;
    CGFloat v116 = v149;
    v195.origin.x = v148;
    v195.origin.y = v149;
    CGFloat v117 = *(double *)&v150;
    *(void *)&v195.size.width = v150;
    CGFloat v118 = v151;
    v195.size.height = v151;
    CGFloat v119 = v114 - CGRectGetWidth(v195);
    v196.origin.y = v135;
    v196.origin.x = v136;
    v196.size.width = v134;
    v196.size.height = v103;
    double v95 = v146 + CGRectGetMaxY(v196);
    v197.origin.x = v115;
    v197.origin.y = v116;
    v197.size.width = v117;
    v197.size.height = v118;
    CGFloat v94 = CGRectGetWidth(v197);
    v198.origin.x = v115;
    v198.origin.y = v116;
    v198.size.width = v117;
    v198.size.height = v118;
    double Height = CGRectGetHeight(v198);
    v172.origin.x = v119;
  }
  CGFloat *p_y = v95;
  p_size->width = v94;
  CGFloat *p_height = Height;
  char *v70 = 0;
  CGMutablePathRef Mutable = CGPathCreateMutable();
  uint64_t v121 = v153;
  sub_20A8C2940();
  sub_20A8C2840();
  (*(void (**)(char *, uint64_t))(v154 + 8))(v121, v155);
  uint64_t v176 = 0x3FF0000000000000;
  uint64_t v177 = 0;
  uint64_t v178 = 0;
  uint64_t v179 = 0x3FF0000000000000;
  uint64_t v180 = 0;
  uint64_t v181 = 0;
  sub_20A8CEAB0();
  sub_20A8CEAC0();
  sub_20A8CEAC0();
  sub_20A8CEAC0();
  if (v175)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v122 = *((void *)v45 + 11);
  double v123 = v45[6];
  CGRectGetMaxY(v174);
  if (v173)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  CGRectGetMaxY(v172);
  if ((v171 & 1) == 0)
  {
    CGRectGetMaxY(v170);
    MEMORY[0x270FA5388](v124);
    *((void *)&v134 - 10) = v45;
    *((void *)&v134 - 9) = v125;
    *((void *)&v134 - 8) = &v174;
    *((void *)&v134 - 7) = &v172;
    *((void *)&v134 - 6) = &v170;
    *((void *)&v134 - 5) = Mutable;
    *(&v134 - 4) = v139;
    *((void *)&v134 - 3) = v122;
    unint64_t v132 = *(void *)&v138;
    double v133 = 1.0 / v123;
    sub_20A8C9690();

    long long v126 = v168;
    uint64_t v127 = v140;
    *(_OWORD *)(v140 + 128) = v167;
    *(_OWORD *)(v127 + 144) = v126;
    *(void *)(v127 + 160) = v169;
    long long v128 = v164;
    *(_OWORD *)(v127 + 64) = v163;
    *(_OWORD *)(v127 + 80) = v128;
    long long v129 = v166;
    *(_OWORD *)(v127 + 96) = v165;
    *(_OWORD *)(v127 + 112) = v129;
    long long v130 = v160;
    *(_OWORD *)uint64_t v127 = v159;
    *(_OWORD *)(v127 + 16) = v130;
    long long v131 = v162;
    *(_OWORD *)(v127 + 32) = v161;
    *(_OWORD *)(v127 + 48) = v131;
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_20A554B74(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, void *a5@<X5>, double *a6@<X8>, double a7@<D0>, double a8@<D1>, double a9@<D2>, double a10@<D3>, double a11@<D4>)
{
  double v74 = a8;
  double v75 = a5;
  CGFloat v73 = a1;
  uint64_t v19 = sub_20A8C8180();
  uint64_t v20 = *(void *)(v19 - 8);
  double v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a2 + 32))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v24 = *(void (**)(char *, double))(v20 + 104);
  unsigned int v72 = *MEMORY[0x263F7D268];
  v24(v23, v21);
  sub_20A8C8170();
  uint64_t v26 = v25;
  uint64_t v70 = v28;
  uint64_t v71 = v27;
  uint64_t v69 = v29;
  double v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  v30(v23, v19);
  if (*(unsigned char *)(a3 + 32))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v64 = v26;
  double v65 = a9;
  double v66 = a10;
  double v67 = a11;
  double v68 = a7;
  uint64_t v31 = v72;
  ((void (*)(char *, void, uint64_t))v24)(v23, v72, v19);
  sub_20A8C8170();
  uint64_t v63 = v32;
  uint64_t v62 = v33;
  uint64_t v61 = v34;
  uint64_t v60 = v35;
  v30(v23, v19);
  if (*(unsigned char *)(a4 + 32))
  {
LABEL_9:
    __break(1u);
    return;
  }
  CGFloat v73 = (void *)*v73;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v23, v31, v19);
  sub_20A8C8170();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  v30(v23, v19);
  ((void (*)(char *, void, uint64_t))v24)(v23, *MEMORY[0x263F7D260], v19);
  sub_20A8C8170();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v51 = v50;
  v30(v23, v19);
  *a6 = 0.0;
  a6[1] = 0.0;
  double v52 = v68;
  *((void *)a6 + 2) = v73;
  a6[3] = v52;
  uint64_t v53 = v71;
  *((void *)a6 + 4) = v64;
  *((void *)a6 + 5) = v53;
  uint64_t v54 = v69;
  *((void *)a6 + 6) = v70;
  *((void *)a6 + 7) = v54;
  uint64_t v55 = v62;
  *((void *)a6 + 8) = v63;
  *((void *)a6 + 9) = v55;
  uint64_t v56 = v60;
  *((void *)a6 + 10) = v61;
  *((void *)a6 + 11) = v56;
  *((void *)a6 + 12) = v37;
  *((void *)a6 + 13) = v39;
  *((void *)a6 + 14) = v41;
  *((void *)a6 + 15) = v43;
  double v57 = v75;
  *((void *)a6 + 16) = v75;
  *((void *)a6 + 17) = v45;
  *((void *)a6 + 18) = v47;
  *((void *)a6 + 19) = v49;
  *((void *)a6 + 20) = v51;

  id v58 = v57;
}

uint64_t type metadata accessor for StockSectionFooterViewLayoutAttributesFactory()
{
  return self;
}

void sub_20A554EE4(double *a1@<X8>)
{
  sub_20A554B74(*(void **)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), a1, *(double *)(v1 + 24), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88));
}

uint64_t sub_20A554F00()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_20A554F58();
    return swift_release();
  }
  return result;
}

uint64_t sub_20A554F58()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_20A8C34C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 40), *(void *)(v0 + 64));
  sub_20A8C3600();
  sub_20A8C40D0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v10 == *MEMORY[0x263F7ABB8])
  {
    uint64_t v11 = sub_20A8C3460();
    swift_retain();
    unint64_t v12 = (unsigned int *)MEMORY[0x263F7ABB8];
    uint64_t v13 = &v17;
LABEL_11:
    uint64_t v14 = sub_20A5552B4(v11, v1, (uint64_t)v13, v12);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_12:
    uint64_t v21 = v14;
    swift_retain();
    sub_20A8C5D30();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  if (v10 == *MEMORY[0x263F7ABC8])
  {
    uint64_t v11 = sub_20A8C3460();
    swift_retain();
    unint64_t v12 = (unsigned int *)MEMORY[0x263F7ABC8];
    uint64_t v13 = &v18;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x263F7AC00])
  {
    uint64_t v11 = sub_20A8C3460();
    swift_retain();
    unint64_t v12 = (unsigned int *)MEMORY[0x263F7AC00];
    uint64_t v13 = &v19;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x263F7ABF8])
  {
    uint64_t v11 = sub_20A8C3460();
    swift_retain();
    unint64_t v12 = (unsigned int *)MEMORY[0x263F7ABF8];
    uint64_t v13 = &v20;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x263F7ABD0])
  {
    uint64_t v11 = sub_20A8C3460();
    swift_retain();
    unint64_t v12 = (unsigned int *)MEMORY[0x263F7ABD0];
    uint64_t v13 = &v22;
    goto LABEL_11;
  }
  if (v10 == *MEMORY[0x263F7ABF0])
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    goto LABEL_12;
  }
  uint64_t result = sub_20A8CF750();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for OrderWatchlistMenuGroupOptionProvider()
{
  return self;
}

uint64_t sub_20A5552B4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v8 = type metadata accessor for SortWatchlistCommandContext(0);
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (v11)
  {
    v25[1] = v4;
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_20A68C7AC(0, v11, 0);
    uint64_t v12 = v32;
    uint64_t v13 = sub_20A8C3480();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v28 = (void *)(a2 + 40);
    uint64_t v29 = v13;
    uint64_t v27 = *(void *)(v14 + 72);
    uint64_t v16 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    unsigned int v26 = *a4;
    do
    {
      uint64_t v17 = a2;
      __swift_project_boxed_opaque_existential_1(v28, *(void *)(a2 + 64));
      sub_20A8C3600();
      uint64_t v18 = v31;
      char v19 = &v10[*(int *)(v31 + 20)];
      (*v16)(v19, v15, v29);
      uint64_t v20 = sub_20A8C34C0();
      (*(void (**)(char *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v19, v26, v20);
      v10[*(int *)(v18 + 24)] = 1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v32 = v12;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_20A68C7AC(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v32;
      }
      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_20A68C7AC(v22 > 1, v23 + 1, 1);
        uint64_t v12 = v32;
      }
      *(void *)(v12 + 16) = v23 + 1;
      sub_20A5559BC((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v23);
      v15 += v27;
      --v11;
      a2 = v17;
    }
    while (v11);
  }
  return v12;
}

void *sub_20A555560(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  v10[0] = MEMORY[0x263F8EE78];
  sub_20A5558A8(0, &qword_26AC82C18, (uint64_t (*)(uint64_t))sub_20A555874, MEMORY[0x263F7CE10]);
  swift_allocObject();
  v3[2] = sub_20A8C5D40();
  v3[3] = a1;
  void v3[4] = a2;
  sub_20A4342F4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  uint64_t v8 = qword_26AC6AC30;
  swift_unknownObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C40E0();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (qword_26AC6AC00 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (qword_26AC6AC58 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_20A555968();
  swift_retain();
  sub_20A8C3670();
  swift_release();
  sub_20A554F58();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

void sub_20A555874(uint64_t a1)
{
}

void sub_20A5558A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A55590C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A555944()
{
  return sub_20A554F00();
}

uint64_t sub_20A55594C()
{
  return sub_20A554F00();
}

unint64_t sub_20A555968()
{
  unint64_t result = qword_26AC82C90;
  if (!qword_26AC82C90)
  {
    type metadata accessor for OrderWatchlistMenuGroupOptionProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82C90);
  }
  return result;
}

uint64_t sub_20A5559BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SortWatchlistCommandContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A555A20(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  v26[0] = a4;
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (void *)((char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A556120(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE208(0);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v21 = *a2;
  sub_20A5561B8(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1) {
    return sub_20A46A1E8((uint64_t)v15, (uint64_t (*)(void))sub_20A556120);
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v15, v17);
  if (v21 != 2 && a3)
  {
    swift_retain();
    char v23 = sub_20A8CD520();
    if (v23 == 2 || (char v24 = v23, (sub_20A8CD530() & 1) == 0))
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      return swift_release();
    }
    unint64_t *v12 = a3 | ((unint64_t)(v24 & 1) << 61);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = sub_20A8C6D60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    swift_retain();
    sub_20A5BFAAC((uint64_t)v12, 0, (uint64_t)v9, (uint64_t)v29, 0, 0, (uint64_t)v27);
    swift_release();
    swift_release();
    sub_20A49127C((uint64_t)v27, &qword_26AC69600, (unint64_t *)&unk_26AC695F0);
    sub_20A49127C((uint64_t)v29, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70);
    sub_20A46A1E8((uint64_t)v9, (uint64_t (*)(void))sub_20A556CDC);
    sub_20A46A1E8((uint64_t)v12, type metadata accessor for StocksActivity);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
}

uint64_t sub_20A555DF0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  sub_20A556120(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4AE208(0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v24 - v16;
  int v18 = *a2;
  sub_20A5561B8(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1) {
    return sub_20A46A1E8((uint64_t)v9, (uint64_t (*)(void))sub_20A556120);
  }
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v20(v17, v9, v11);
  if (a3)
  {
    sub_20A8C99A0();
    sub_20A43F7E0(0, (unint64_t *)&qword_26AC69E00);
    sub_20A8C4990();
    if (swift_dynamicCast())
    {
      if (v18 == 2)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
        return swift_release();
      }
      int v26 = v18 & 1;
      uint64_t v27 = v29;
      sub_20A8CD510();
      uint64_t v21 = v30;
      v24[1] = v30;
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
      unint64_t v22 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v25 = v22 + v13;
      char v23 = (char *)swift_allocObject();
      *((void *)v23 + 2) = v21;
      *((void *)v23 + 3) = a3;
      *((void *)v23 + 4) = v28;
      v20(&v23[v22], v14, v11);
      v23[v25] = v26;
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_20A8C48E0();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

void sub_20A556120(uint64_t a1)
{
}

void sub_20A556154(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5561B8(uint64_t a1, uint64_t a2)
{
  sub_20A556120(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A55621C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v64 = a6;
  uint64_t v62 = a5;
  uint64_t v63 = a4;
  uint64_t v55 = a3;
  uint64_t v71 = a1;
  uint64_t v51 = sub_20A8C6890();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C72F0();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v59 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A556154(0, &qword_26763BB50, MEMORY[0x263F7DA80], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_20A8C6950();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v53 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_20A8C6730();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20A8C6CB0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v58 = a2;
  sub_20A670898((uint64_t)v20);
  sub_20A556154(0, (unint64_t *)&qword_26AC7FEC0, MEMORY[0x263F24D50], MEMORY[0x263F8E0F8]);
  uint64_t v22 = v21;
  uint64_t v23 = sub_20A8C4620();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void *)(v24 + 72);
  uint64_t v26 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v27 = (v26 + 32) & ~v26;
  uint64_t v68 = v22;
  uint64_t v28 = v27 + v25;
  uint64_t v66 = v26 | 7;
  uint64_t v29 = swift_allocObject();
  long long v72 = xmmword_20A8D3DC0;
  *(_OWORD *)(v29 + 16) = xmmword_20A8D3DC0;
  uint64_t v67 = v27;
  uint64_t v30 = *(void (**)(void))(v24 + 104);
  unsigned int v73 = *MEMORY[0x263F24D48];
  uint64_t v69 = v24 + 104;
  uint64_t v70 = v23;
  double v65 = (void (*)(uint64_t, void, uint64_t))v30;
  v30(v29 + v27);
  sub_20A556C94((unint64_t *)&unk_26AC699D0, MEMORY[0x263F79DF8]);
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (v55)
  {
    sub_20A8C99C0();
    uint64_t v31 = sub_20A8C9F40();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v12, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = sub_20A8C9F40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v12, 1, 1, v32);
  }
  sub_20A8C6960();
  sub_20A8C6720();
  uint64_t v52 = v28;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v72;
  uint64_t v34 = v67;
  uint64_t v35 = v65;
  v65(v33 + v67, v73, v70);
  sub_20A556C94((unint64_t *)&unk_26763B740, MEMORY[0x263F79960]);
  uint64_t v36 = v57;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v36);
  uint64_t v37 = v63;
  uint64_t v38 = v59;
  sub_20A67115C(*(void **)(v63 + 80));
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = v72;
  uint64_t v40 = v39 + v34;
  uint64_t v41 = v70;
  v35(v40, v73, v70);
  sub_20A556C94((unint64_t *)&unk_26AC69AD0, MEMORY[0x263F7A270]);
  unint64_t v58 = 0x800000020A8FF9D0;
  uint64_t v42 = v61;
  sub_20A8C45B0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v42);
  sub_20A4AE208(0);
  sub_20A8CD510();
  id v43 = objc_msgSend(*(id *)&v74[0], sel_sourceChannel);
  uint64_t result = swift_unknownObjectRelease();
  if (v43)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v37 + 40), *(void *)(v37 + 64));
    uint64_t v45 = v49;
    sub_20A661B70(v43);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v72;
    v65(v46 + v67, v73, v41);
    sub_20A556C94((unint64_t *)&unk_26AC69930, MEMORY[0x263F79AA0]);
    uint64_t v47 = v51;
    sub_20A8C45B0();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v45, v47);
  }
  if ((v64 & 1) == 0)
  {
    sub_20A8C7840();
    sub_20A556C94(&qword_26763BB58, MEMORY[0x263F7A798]);
    memset(v74, 0, sizeof(v74));
    sub_20A8C45D0();
    return sub_20A46A1E8((uint64_t)v74, (uint64_t (*)(void))sub_20A42F348);
  }
  return result;
}

uint64_t sub_20A556B18()
{
  sub_20A4AE208(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);

  return swift_deallocObject();
}

uint64_t sub_20A556BF8(uint64_t a1)
{
  sub_20A4AE208(0);
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  int v9 = *((unsigned __int8 *)v1 + v5 + *(void *)(v4 + 64));

  return sub_20A55621C(a1, v6, v7, v8, (uint64_t)v1 + v5, v9);
}

uint64_t sub_20A556C94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A556CDC(uint64_t a1)
{
}

uint64_t sub_20A556D10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v30 = a1;
  sub_20A4573F8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v28 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_20A457498;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263EFDAF8];
  sub_20A55B3AC(0, (unint64_t *)&unk_26AC6ADB0, (uint64_t (*)(uint64_t))sub_20A457498, sub_20A457580, MEMORY[0x263EFDAF8]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v9 = (char *)&v24 - v8;
  sub_20A457724();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A457724;
  uint64_t v25 = sub_20A457868;
  sub_20A55B3AC(0, &qword_26AC6AD98, (uint64_t (*)(uint64_t))sub_20A457724, sub_20A457868, v4);
  uint64_t v27 = v15;
  uint64_t v29 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - v16;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager), *(void *)(v1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager + 24));
  sub_20A8C36D0();
  swift_getKeyPath();
  sub_20A55B044((unint64_t *)&unk_26AC6ADA0, (unint64_t *)&unk_26AC6ADB0, (uint64_t (*)(uint64_t))v24, sub_20A457580);
  sub_20A8CBE80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A457868();
  sub_20A55AFFC(&qword_26AC68E08, MEMORY[0x263F7AB98]);
  sub_20A8CBEB0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_20A44D17C();
  id v31 = (id)sub_20A8CEBE0();
  uint64_t v18 = sub_20A8CEBC0();
  uint64_t v19 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v28, 1, 1, v18);
  sub_20A55B0AC();
  uint64_t v20 = v30;
  v30[3] = v21;
  v20[4] = sub_20A55AFFC(&qword_26AC6ADE0, (void (*)(uint64_t))sub_20A55B0AC);
  __swift_allocate_boxed_opaque_existential_1(v20);
  sub_20A55B044(&qword_26AC6AD90, &qword_26AC6AD98, (uint64_t (*)(uint64_t))v26, v25);
  sub_20A55AFFC(&qword_26AC7F938, (void (*)(uint64_t))sub_20A44D17C);
  uint64_t v22 = v27;
  sub_20A8CBE90();
  sub_20A55B34C(v19, (uint64_t (*)(void))sub_20A4573F8);

  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v22);
}

uint64_t sub_20A5571F0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager;
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager), *(void *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager + 24));
  sub_20A55AFFC(&qword_26AC67CC8, (void (*)(uint64_t))type metadata accessor for StockFeedDataManager);
  sub_20A8C39D0();
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_watchlistManager);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_20A55AFFC(&qword_26AC71FB0, (void (*)(uint64_t))type metadata accessor for StockFeedDataManager);
  sub_20A8C36A0();
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataRefreshManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, ObjectType, v3);
  sub_20A4380C4(v0 + 16);
  uint64_t v6 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_quoteDetailManager);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_appConfigurationManager);

  sub_20A55B34C(v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_lastNewsRefreshDate, (uint64_t (*)(void))sub_20A42D040);
  return v0;
}

uint64_t sub_20A557410()
{
  sub_20A5571F0();

  return swift_deallocClassInstance();
}

uint64_t sub_20A557468()
{
  return type metadata accessor for StockFeedDataManager();
}

uint64_t type metadata accessor for StockFeedDataManager()
{
  uint64_t result = qword_26AC71FB8;
  if (!qword_26AC71FB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5574BC()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A42D040(319);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_20A5575C8()
{
  uint64_t v0 = sub_20A8C2830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFTimeInterval v4 = CACurrentMediaTime();
  sub_20A8C2820();
  uint64_t v5 = sub_20A8C2810();
  uint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A8D4540;
  id v10 = v8;
  uint64_t v11 = sub_20A8C3EC0();
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v15 = sub_20A43F830();
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 104) = v15;
  *(void *)(v9 + 64) = v15;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v7;
  swift_bridgeObjectRetain();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  sub_20A55B2E8(0, &qword_26AC68DA0, MEMORY[0x263F7A890], MEMORY[0x263F8D8F0]);
  sub_20A8C6660();
  uint64_t v16 = (CFTimeInterval *)swift_allocObject();
  void v16[2] = v4;
  *((void *)v16 + 3) = v5;
  *((void *)v16 + 4) = v7;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_20A8C6450();
  type metadata accessor for StockFeedQuoteData();
  sub_20A8C6510();
  swift_release();
  swift_release();

  uint64_t v18 = (CFTimeInterval *)swift_allocObject();
  v18[2] = v4;
  *((void *)v18 + 3) = v5;
  *((void *)v18 + 4) = v7;
  uint64_t v19 = (void *)sub_20A8C6450();
  uint64_t v20 = sub_20A8C6560();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_20A557920(uint64_t a1)
{
  uint64_t v2 = sub_20A8C59F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_quoteDetailManager), *(void *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_quoteDetailManager + 24));
  sub_20A8C3EC0();
  *uint64_t v5 = 0x4014000000000000;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7CD70], v2);
  uint64_t v6 = sub_20A8C37C0();
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_20A557A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  uint64_t v6 = type metadata accessor for StockFeedQuoteData();
  MEMORY[0x270FA5388](v6);
  uint64_t v28 = (uint64_t)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_20A8C3E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  sub_20A55AF00(a1, (uint64_t)&v10[*(int *)(v6 + 20)]);
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20A8D7FF0;
  id v14 = v12;
  uint64_t v15 = sub_20A8C3EC0();
  uint64_t v17 = v16;
  uint64_t v18 = MEMORY[0x263F8D310];
  *(void *)(v13 + 56) = MEMORY[0x263F8D310];
  unint64_t v19 = sub_20A43F830();
  *(void *)(v13 + 64) = v19;
  *(void *)(v13 + 32) = v15;
  *(void *)(v13 + 40) = v17;
  sub_20A8CE780();
  uint64_t v20 = MEMORY[0x263F8D5B8];
  *(void *)(v13 + 96) = MEMORY[0x263F8D538];
  *(void *)(v13 + 104) = v20;
  *(void *)(v13 + 72) = v21;
  *(void *)(v13 + 136) = v18;
  *(void *)(v13 + 144) = v19;
  *(void *)(v13 + 112) = v27;
  *(void *)(v13 + 120) = a4;
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  uint64_t v22 = v29;
  unint64_t v23 = v30;
  *(void *)(v13 + 176) = v18;
  *(void *)(v13 + 184) = v19;
  *(void *)(v13 + 152) = v22;
  *(void *)(v13 + 160) = v23;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  sub_20A55AF94((uint64_t)v10, v28, (uint64_t (*)(void))type metadata accessor for StockFeedQuoteData);
  sub_20A55B2E8(0, &qword_26AC676D0, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedQuoteData, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v24 = sub_20A8C6580();
  sub_20A55B34C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StockFeedQuoteData);
  return v24;
}

uint64_t sub_20A557D84(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v33 = *v1;
  uint64_t v32 = sub_20A8C2BC0();
  uint64_t v2 = *(void *)(v32 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v32);
  unint64_t v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C2830();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFTimeInterval v8 = CACurrentMediaTime();
  sub_20A8C2820();
  uint64_t v9 = sub_20A8C2810();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20A8D4540;
  id v14 = v12;
  uint64_t v15 = sub_20A8C3EC0();
  uint64_t v17 = v16;
  uint64_t v18 = MEMORY[0x263F8D310];
  *(void *)(v13 + 56) = MEMORY[0x263F8D310];
  unint64_t v19 = sub_20A43F830();
  *(void *)(v13 + 32) = v15;
  *(void *)(v13 + 40) = v17;
  *(void *)(v13 + 96) = v18;
  *(void *)(v13 + 104) = v19;
  *(void *)(v13 + 64) = v19;
  *(void *)(v13 + 72) = v9;
  *(void *)(v13 + 80) = v11;
  swift_bridgeObjectRetain();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  uint64_t v20 = v30;
  uint64_t v21 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v30, v31, v32);
  unint64_t v22 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v23 + v22, v20, v21);
  sub_20A8C3D00();
  sub_20A8C6660();
  swift_release();
  uint64_t v24 = (CFTimeInterval *)swift_allocObject();
  void v24[2] = v8;
  *((void *)v24 + 3) = v9;
  *((void *)v24 + 4) = v11;
  swift_bridgeObjectRetain();
  uint64_t v25 = (void *)sub_20A8C6450();
  sub_20A8C6510();
  swift_release();
  swift_release();

  uint64_t v26 = (CFTimeInterval *)swift_allocObject();
  void v26[2] = v8;
  *((void *)v26 + 3) = v9;
  *((void *)v26 + 4) = v11;
  uint64_t v27 = (void *)sub_20A8C6450();
  uint64_t v28 = sub_20A8C6560();
  swift_release();
  swift_release();

  return v28;
}

uint64_t sub_20A558198(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v14 = sub_20A8C5B40();
  uint64_t v3 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C59F0();
  v13[0] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13[1] = *(void *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_chartManager + 8);
  swift_getObjectType();
  sub_20A8C3EC0();
  *uint64_t v9 = 0x404E000000000000;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7CD70], v6);
  uint64_t v10 = v14;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7CDA0], v14);
  uint64_t v11 = sub_20A8C31C0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v10);
  (*(void (**)(void *, void))(v7 + 8))(v9, v13[0]);
  return v11;
}

uint64_t sub_20A5583D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x263F7CDA0];
  uint64_t v3 = sub_20A8C5B40();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_20A55844C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a1;
  uint64_t v5 = sub_20A8C3D00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v24 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A8D7FF0;
  id v10 = v8;
  uint64_t v11 = sub_20A8C3EC0();
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v15 = sub_20A43F830();
  *(void *)(v9 + 64) = v15;
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  sub_20A8CE780();
  uint64_t v16 = MEMORY[0x263F8D5B8];
  *(void *)(v9 + 96) = MEMORY[0x263F8D538];
  *(void *)(v9 + 104) = v16;
  *(void *)(v9 + 72) = v17;
  *(void *)(v9 + 136) = v14;
  *(void *)(v9 + 144) = v15;
  *(void *)(v9 + 112) = v22;
  *(void *)(v9 + 120) = a4;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  uint64_t v18 = v23;
  sub_20A8CF4E0();
  uint64_t v19 = v25;
  unint64_t v20 = v26;
  *(void *)(v9 + 176) = v14;
  *(void *)(v9 + 184) = v15;
  *(void *)(v9 + 152) = v19;
  *(void *)(v9 + 160) = v20;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v24, v18, v5);
  sub_20A55B2E8(0, &qword_26AC810B8, MEMORY[0x263F7AEB8], MEMORY[0x263F7D028]);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A5586D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D7FF0;
  id v8 = v6;
  uint64_t v9 = sub_20A8C3EC0();
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x263F8D310];
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  unint64_t v13 = sub_20A43F830();
  *(void *)(v7 + 64) = v13;
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v11;
  sub_20A8CE780();
  uint64_t v14 = MEMORY[0x263F8D5B8];
  *(void *)(v7 + 96) = MEMORY[0x263F8D538];
  *(void *)(v7 + 104) = v14;
  *(void *)(v7 + 72) = v15;
  *(void *)(v7 + 136) = v12;
  *(void *)(v7 + 144) = v13;
  *(void *)(v7 + 112) = a3;
  *(void *)(v7 + 120) = a4;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  *(void *)(v7 + 176) = v12;
  *(void *)(v7 + 184) = v13;
  *(void *)(v7 + 152) = 0;
  *(void *)(v7 + 160) = 0xE000000000000000;
  sub_20A8CEA00();
  sub_20A8C7D90();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A55888C()
{
  uint64_t v0 = sub_20A8C2830();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFTimeInterval v4 = CACurrentMediaTime();
  sub_20A8C2820();
  uint64_t v5 = sub_20A8C2810();
  uint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (qword_26AC6CF90 != -1) {
    swift_once();
  }
  id v8 = (void *)qword_26AC6CF88;
  sub_20A43F778();
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20A8D4540;
  id v10 = v8;
  uint64_t v11 = sub_20A8C3EC0();
  uint64_t v13 = v12;
  uint64_t v14 = MEMORY[0x263F8D310];
  *(void *)(v9 + 56) = MEMORY[0x263F8D310];
  unint64_t v15 = sub_20A43F830();
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  *(void *)(v9 + 96) = v14;
  *(void *)(v9 + 104) = v15;
  *(void *)(v9 + 64) = v15;
  *(void *)(v9 + 72) = v5;
  *(void *)(v9 + 80) = v7;
  swift_bridgeObjectRetain();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  type metadata accessor for StockFeedServiceConfig();
  sub_20A8C6670();
  sub_20A55B3AC(0, (unint64_t *)&unk_26AC6B098, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_20A524428, MEMORY[0x263F59938]);
  sub_20A8C6510();
  swift_release();
  uint64_t v16 = (CFTimeInterval *)swift_allocObject();
  void v16[2] = v4;
  *((void *)v16 + 3) = v5;
  *((void *)v16 + 4) = v7;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_20A8C6450();
  sub_20A8C6510();
  swift_release();
  swift_release();

  uint64_t v18 = (CFTimeInterval *)swift_allocObject();
  v18[2] = v4;
  *((void *)v18 + 3) = v5;
  *((void *)v18 + 4) = v7;
  uint64_t v19 = (void *)sub_20A8C6450();
  uint64_t v20 = sub_20A8C6560();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_20A558C24(uint64_t a1)
{
  uint64_t v20 = sub_20A8C2830();
  uint64_t v2 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  CFTimeInterval v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockFeedServiceContext();
  uint64_t v10 = v9 - 8;
  double v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (uint64_t *)((char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedServiceConfigFetcher);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, v5, v11);
  sub_20A8C2820();
  uint64_t v14 = sub_20A8C2810();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
  *uint64_t v13 = v14;
  v13[1] = v16;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v13 + *(int *)(v10 + 28), v8, v5);
  uint64_t v17 = sub_20A8CC320();
  sub_20A55B34C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
  return v17;
}

uint64_t sub_20A558E64(uint64_t a1, uint64_t a2)
{
  sub_20A55ADEC(0);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C27F0();
  uint64_t v11 = sub_20A8C2800();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 0, 1, v11);
  uint64_t v12 = a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_lastNewsRefreshDate;
  swift_beginAccess();
  sub_20A55B284((uint64_t)v10, v12);
  swift_endAccess();
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService), *(void *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService + 24));
  type metadata accessor for StockFeedServiceConfig();
  sub_20A524428();
  sub_20A8CD100();
  uint64_t v13 = off_26BE6A738;
  type metadata accessor for StockFeedServiceProxy();
  uint64_t v14 = v13();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_20A559080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = qword_26AC6CF90;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26AC6CF88;
  sub_20A43F778();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D7FF0;
  id v9 = v7;
  uint64_t v10 = sub_20A8C3EC0();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v14 = sub_20A43F830();
  *(void *)(v8 + 64) = v14;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v12;
  sub_20A8CE780();
  uint64_t v15 = MEMORY[0x263F8D5B8];
  *(void *)(v8 + 96) = MEMORY[0x263F8D538];
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 72) = v16;
  *(void *)(v8 + 136) = v13;
  *(void *)(v8 + 144) = v14;
  *(void *)(v8 + 112) = a3;
  *(void *)(v8 + 120) = a4;
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  *(void *)(v8 + 176) = v13;
  *(void *)(v8 + 184) = v14;
  *(void *)(v8 + 152) = 0;
  *(void *)(v8 + 160) = 0xE000000000000000;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  sub_20A55B23C(0, &qword_26763BB60);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A559260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CFTimeInterval v6 = CACurrentMediaTime();
  if (qword_26AC6DC58 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26AC6DC48;
  sub_20A43F778();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D4540;
  id v9 = v7;
  uint64_t v10 = sub_20A8C3EC0();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v14 = sub_20A43F830();
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v12;
  *(void *)(v8 + 96) = v13;
  *(void *)(v8 + 104) = v14;
  *(void *)(v8 + 64) = v14;
  *(void *)(v8 + 72) = a1;
  *(void *)(v8 + 80) = a2;
  swift_bridgeObjectRetain();
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = a3;
  sub_20A55ADEC(0);
  swift_retain();
  sub_20A8C6660();
  swift_release();
  sub_20A55B3AC(0, (unint64_t *)&unk_26AC6B098, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedServiceConfig, sub_20A524428, MEMORY[0x263F59938]);
  sub_20A8C6510();
  swift_release();
  uint64_t v15 = (CFTimeInterval *)swift_allocObject();
  *((void *)v15 + 2) = a1;
  *((void *)v15 + 3) = a2;
  v15[4] = v6;
  swift_bridgeObjectRetain();
  sub_20A8C6510();
  swift_release();
  swift_release();
  uint64_t v16 = (CFTimeInterval *)swift_allocObject();
  void v16[2] = v6;
  *((void *)v16 + 3) = a1;
  *((void *)v16 + 4) = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = (void *)sub_20A8C6450();
  uint64_t v18 = sub_20A8C6560();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_20A55959C(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a1;
  sub_20A55ADEC(0);
  uint64_t v28 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  CFTimeInterval v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_20A8C2830();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StockFeedServiceContext();
  double v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (uint64_t *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *CFTimeInterval v6 = v18;
    (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F59B10], v28);
    sub_20A55B2E8(0, &qword_26AC676C8, (uint64_t (*)(uint64_t))sub_20A55ADEC, MEMORY[0x263F7D028]);
    swift_allocObject();
    swift_retain();
    return sub_20A8C6580();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v13, v27 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, v10, v15);
    sub_20A8C2820();
    uint64_t v20 = sub_20A8C2810();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
    *uint64_t v17 = v20;
    v17[1] = v22;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))((char *)v17 + *(int *)(v14 + 20), v13, v10);
    sub_20A8CC320();
    sub_20A55B34C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedServiceContext);
    uint64_t v23 = (void *)sub_20A8C6450();
    uint64_t v19 = sub_20A8C6500();
    swift_release();
  }
  return v19;
}

uint64_t sub_20A55993C()
{
  return sub_20A8CD100();
}

uint64_t sub_20A559994(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService), *(void *)(a2 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_feedService + 24));
  uint64_t v2 = off_26BE6A738;
  type metadata accessor for StockFeedServiceProxy();
  return v2();
}

uint64_t sub_20A559A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = qword_26AC6CF90;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = (void *)qword_26AC6CF88;
  sub_20A43F778();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20A8D7FF0;
  id v9 = v7;
  uint64_t v10 = sub_20A8C3EC0();
  uint64_t v12 = v11;
  uint64_t v13 = MEMORY[0x263F8D310];
  *(void *)(v8 + 56) = MEMORY[0x263F8D310];
  unint64_t v14 = sub_20A43F830();
  *(void *)(v8 + 64) = v14;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v12;
  sub_20A8CE780();
  uint64_t v15 = MEMORY[0x263F8D5B8];
  *(void *)(v8 + 96) = MEMORY[0x263F8D538];
  *(void *)(v8 + 104) = v15;
  *(void *)(v8 + 72) = v16;
  *(void *)(v8 + 136) = v13;
  *(void *)(v8 + 144) = v14;
  *(void *)(v8 + 112) = a3;
  *(void *)(v8 + 120) = a4;
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  *(void *)(v8 + 176) = v13;
  *(void *)(v8 + 184) = v14;
  *(void *)(v8 + 152) = 0;
  *(void *)(v8 + 160) = 0xE000000000000000;
  sub_20A8CEA00();
  sub_20A8C7D90();

  swift_bridgeObjectRelease();
  sub_20A55B23C(0, &qword_26AC698A0);
  swift_allocObject();
  return sub_20A8C6580();
}

uint64_t sub_20A559C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_26AC6CF90 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_26AC6CF88;
  sub_20A43F778();
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_20A8D7FF0;
  id v8 = v6;
  uint64_t v9 = sub_20A8C3EC0();
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x263F8D310];
  *(void *)(v7 + 56) = MEMORY[0x263F8D310];
  unint64_t v13 = sub_20A43F830();
  *(void *)(v7 + 64) = v13;
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v11;
  sub_20A8CE780();
  uint64_t v14 = MEMORY[0x263F8D5B8];
  *(void *)(v7 + 96) = MEMORY[0x263F8D538];
  *(void *)(v7 + 104) = v14;
  *(void *)(v7 + 72) = v15;
  *(void *)(v7 + 136) = v12;
  *(void *)(v7 + 144) = v13;
  *(void *)(v7 + 112) = a3;
  *(void *)(v7 + 120) = a4;
  sub_20A43F7E0(0, (unint64_t *)&qword_26AC80150);
  swift_bridgeObjectRetain();
  sub_20A8CF4E0();
  *(void *)(v7 + 176) = v12;
  *(void *)(v7 + 184) = v13;
  *(void *)(v7 + 152) = 0;
  *(void *)(v7 + 160) = 0xE000000000000000;
  sub_20A8CEA00();
  sub_20A8C7D90();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A559DC4()
{
  uint64_t v0 = sub_20A8C3190();
  uint64_t v26 = *(void *)(v0 - 8);
  uint64_t v27 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D040(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2800();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = sub_20A8CCBA0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C4250();
  sub_20A8C4230();
  if (qword_26AC69238 != -1) {
    swift_once();
  }
  sub_20A8C4220();
  swift_release();
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x263F59970])
  {
    uint64_t v18 = v28;
    uint64_t v19 = v28 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_lastNewsRefreshDate;
    swift_beginAccess();
    sub_20A55AF94(v19, (uint64_t)v5, (uint64_t (*)(void))sub_20A42D040);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_20A55B34C((uint64_t)v5, (uint64_t (*)(void))sub_20A42D040);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    sub_20A8C27F0();
    sub_20A8C2710();
    double v22 = v21;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v9, v6);
    __swift_project_boxed_opaque_existential_1((void *)(v18 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_appConfigurationManager), *(void *)(v18 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_appConfigurationManager + 24));
    sub_20A8C3AC0();
    sub_20A8C3150();
    double v25 = v24;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v2, v27);
    v23(v12, v6);
    return v25 < v22;
  }
  else
  {
    if (v17 == *MEMORY[0x263F59978]) {
      return 0;
    }
    if (v17 == *MEMORY[0x263F59968])
    {
      return 1;
    }
    else
    {
      uint64_t result = sub_20A8CF750();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_20A55A1F4(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager), *(void *)(a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_priceDataManager + 24));
  sub_20A55B2E8(0, (unint64_t *)&qword_26AC7FEA0, MEMORY[0x263F7AF08], MEMORY[0x263F8E0F8]);
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20A8D3DC0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, a1 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock, v2);
  uint64_t v6 = sub_20A8C39E0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20A55A358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8C2EE0();
  uint64_t v3 = sub_20A8C3EC0();
  if (*(void *)(v2 + 16) && (unint64_t v5 = sub_20A4D1B24(v3, v4), (v6 & 1) != 0))
  {
    unint64_t v7 = v5;
    uint64_t v8 = *(void *)(v2 + 56);
    uint64_t v9 = sub_20A8C3E10();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a1, v8 + *(void *)(v10 + 72) * v7, v9);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = sub_20A8C3E10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20A55A4D0()
{
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8C3E10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2EE0();
  uint64_t v9 = sub_20A8C3EC0();
  if (*(void *)(v8 + 16) && (unint64_t v11 = sub_20A4D1B24(v9, v10), (v12 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, *(void *)(v8 + 56) + *(void *)(v5 + 72) * v11, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_20A55B34C((uint64_t)v3, (uint64_t (*)(void))sub_20A42C470);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  if (MEMORY[0x2105289B0](v0 + 16))
  {
    uint64_t v14 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v14 + 8))(v0, &off_26BE64648, v7, ObjectType, v14);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A55A740()
{
  uint64_t v1 = sub_20A8C3F00();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v52 = (char *)&v43 - v6;
  sub_20A55B3AC(0, (unint64_t *)&unk_26AC82F10, MEMORY[0x263F7AF08], sub_20A55B42C, MEMORY[0x263F7CE70]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)&v43 - v10;
  uint64_t v12 = sub_20A8C2E60();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v51 = v0 + OBJC_IVAR____TtC8StocksUI20StockFeedDataManager_stock;
    uint64_t v46 = v0;
    uint64_t v48 = v0 + 16;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v14 = v9 + 16;
    uint64_t v55 = v15;
    unint64_t v16 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
    uint64_t v43 = v12;
    unint64_t v17 = v12 + v16;
    uint64_t v18 = v2;
    uint64_t v19 = (uint64_t (**)(char *, uint64_t))(v14 + 72);
    int v54 = *MEMORY[0x263F7CE60];
    int v49 = *MEMORY[0x263F7CE68];
    int v47 = *MEMORY[0x263F7CE58];
    uint64_t v20 = (void (**)(char *, uint64_t))(v14 + 80);
    uint64_t v21 = v14;
    double v22 = (void (**)(char *))(v18 + 8);
    uint64_t v50 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v56 = v21;
    uint64_t v53 = *(void *)(v21 + 56);
    uint64_t v44 = v4;
    uint64_t v45 = v1;
    v15(v11, v17, v8);
    while (1)
    {
      int v23 = (*v19)(v11, v8);
      if (v23 == v54)
      {
        (*v20)(v11, v8);
        double v24 = v52;
        (*v50)(v52, v11, v1);
        char v25 = MEMORY[0x21051C160](v24, v51);
        uint64_t v26 = v24;
        if (v25)
        {
          uint64_t v27 = MEMORY[0x2105289B0](v48);
          uint64_t v26 = v52;
          if (v27)
          {
            uint64_t v28 = v46;
            uint64_t v29 = *(void *)(v46 + 24);
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v31 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v29 + 16);
            uint64_t v32 = v28;
            uint64_t v33 = v29;
            uint64_t v4 = v44;
            uint64_t v1 = v45;
            v31(v32, &off_26BE64648, 1, ObjectType, v33);
            swift_unknownObjectRelease();
            uint64_t v26 = v52;
          }
        }
      }
      else if (v23 == v49)
      {
        (*v20)(v11, v8);
        (*v50)(v4, v11, v1);
        char v34 = MEMORY[0x21051C160](v4, v51);
        uint64_t v26 = v4;
        if (v34)
        {
          uint64_t v35 = MEMORY[0x2105289B0](v48);
          uint64_t v26 = v4;
          if (v35)
          {
            uint64_t v36 = v46;
            uint64_t v37 = *(void *)(v46 + 24);
            uint64_t v38 = swift_getObjectType();
            uint64_t v39 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v37 + 16);
            uint64_t v40 = v36;
            uint64_t v41 = v37;
            uint64_t v4 = v44;
            uint64_t v1 = v45;
            v39(v40, &off_26BE64648, 2, v38, v41);
            swift_unknownObjectRelease();
            uint64_t v26 = v4;
          }
        }
      }
      else
      {
        if (v23 != v47)
        {
          uint64_t result = sub_20A8CF520();
          __break(1u);
          return result;
        }
        (*v20)(v11, v8);
        uint64_t v26 = v11;
      }
      (*v22)(v26);
      v17 += v53;
      if (!--v13) {
        return swift_bridgeObjectRelease();
      }
      v55(v11, v17, v8);
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A55AC1C()
{
  uint64_t v1 = sub_20A8C2BC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_20A55ACAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C2BC0() - 8);
  return sub_20A558198(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_20A55AD18()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A55AD50(uint64_t a1, uint64_t a2)
{
  return sub_20A55844C(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A55AD70(uint64_t a1, uint64_t a2)
{
  return sub_20A5586D8(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A55AD98()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A55ADD0(uint64_t a1)
{
  return sub_20A55959C(a1, *(void *)(v1 + 16));
}

void sub_20A55ADEC(uint64_t a1)
{
}

uint64_t sub_20A55AE34()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A55AE6C(uint64_t a1, uint64_t a2)
{
  return sub_20A559A18(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_20A55AE8C(uint64_t a1, uint64_t a2)
{
  return sub_20A559C0C(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A55AEB8(uint64_t a1, uint64_t a2)
{
  return sub_20A557A8C(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A55AED8(uint64_t a1, uint64_t a2)
{
  return sub_20A5586D8(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A55AF00(uint64_t a1, uint64_t a2)
{
  sub_20A55B2E8(0, &qword_26AC68DA0, MEMORY[0x263F7A890], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A55AF94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A55AFFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A55B044(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A55B3AC(255, a2, a3, a4, MEMORY[0x263EFDAF8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A55B0AC()
{
  if (!qword_26AC6ADE8)
  {
    sub_20A55B3AC(255, &qword_26AC6AD98, (uint64_t (*)(uint64_t))sub_20A457724, sub_20A457868, MEMORY[0x263EFDAF8]);
    sub_20A44D17C();
    sub_20A55B044(&qword_26AC6AD90, &qword_26AC6AD98, (uint64_t (*)(uint64_t))sub_20A457724, sub_20A457868);
    sub_20A55AFFC(&qword_26AC7F938, (void (*)(uint64_t))sub_20A44D17C);
    unint64_t v0 = sub_20A8CBE40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6ADE8);
    }
  }
}

uint64_t sub_20A55B1D4()
{
  return sub_20A558C24(v0);
}

uint64_t sub_20A55B1F0(uint64_t a1, uint64_t a2)
{
  return sub_20A559080(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_20A55B210(uint64_t a1, uint64_t a2)
{
  return sub_20A559C0C(a1, a2, *(void *)(v2 + 24), *(void *)(v2 + 32));
}

void sub_20A55B23C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_20A8C65F0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_20A55B284(uint64_t a1, uint64_t a2)
{
  sub_20A42D040(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_20A55B2E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A55B34C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A55B3AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A55B42C()
{
  return sub_20A55AFFC(&qword_26AC82440, MEMORY[0x263F7AF08]);
}

id sub_20A55B47C(char a1)
{
  uint64_t v2 = (void *)sub_20A55B610(a1);
  if (a1)
  {
    if (qword_2676398B0 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_267652CB8;
  }
  else
  {
    if (qword_26AC826F8 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_26AC9ECA0;
  }
  uint64_t v4 = (void *)*v3;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v5 = v4;
  uint64_t v6 = (void *)sub_20A8CEE20();
  id v7 = objc_msgSend(self, sel_configurationWithFont_scale_, v6, 1);

  id v8 = objc_msgSend(v5, sel_imageWithConfiguration_, v7);
  id v9 = objc_msgSend(v8, sel_imageWithTintColor_, v2);

  return v9;
}

uint64_t sub_20A55B610(char a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 72))(v10, v3, v4);
  uint64_t v5 = v11;
  uint64_t v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  if (a1) {
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 112))(v5, v6);
  }
  else {
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 120))(v5, v6);
  }
  uint64_t v8 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

uint64_t sub_20A55B70C(void *a1, char a2)
{
  uint64_t v3 = v2;
  id v58 = a1;
  sub_20A439404(0, (unint64_t *)&qword_26AC7FC70, MEMORY[0x263F82228], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v57 = (char *)&v45 - v6;
  uint64_t v7 = sub_20A8CF020();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_20A8CF0B0();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  int v49 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = (void *)sub_20A8CEFB0();
  uint64_t v47 = *(v48 - 1);
  MEMORY[0x270FA5388](v48);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CF110();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v46 = objc_msgSend(self, sel_clearColor);
  }
  else
  {
    uint64_t v15 = v2[3];
    uint64_t v16 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v15);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 72))(v59, v15, v16);
    uint64_t v17 = v60;
    uint64_t v18 = v61;
    __swift_project_boxed_opaque_existential_1(v59, v60);
    id v46 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 112))(v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  }
  id v45 = (id)sub_20A55B610(a2 & 1);
  uint64_t v19 = (void *)sub_20A55B610(a2 & 1);
  if (a2)
  {
    if (qword_2676398B0 != -1) {
      swift_once();
    }
    uint64_t v20 = &qword_267652CB8;
  }
  else
  {
    if (qword_26AC826F8 != -1) {
      swift_once();
    }
    uint64_t v20 = &qword_26AC9ECA0;
  }
  uint64_t v21 = (void *)*v20;
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  id v22 = v21;
  int v23 = (void *)sub_20A8CEE20();
  double v24 = self;
  id v25 = objc_msgSend(v24, sel_configurationWithFont_scale_, v23, 1);

  id v26 = objc_msgSend(v22, sel_imageWithConfiguration_, v25);
  id v27 = objc_msgSend(v26, sel_imageWithTintColor_, v19);

  uint64_t v28 = v3[3];
  uint64_t v29 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v28);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v29 + 72))(v59, v28, v29);
  uint64_t v30 = v60;
  uint64_t v31 = v61;
  __swift_project_boxed_opaque_existential_1(v59, v60);
  uint64_t v32 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 112))(v30, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  objc_msgSend(v58, sel_setPreferredBehavioralStyle_, 1);
  sub_20A8CF100();
  sub_20A8CF010();
  (*(void (**)(char *, void, void *))(v47 + 104))(v11, *MEMORY[0x263F821C0], v48);
  sub_20A8CEFC0();
  uint64_t v48 = v46;
  sub_20A8CF070();
  id v33 = v45;
  sub_20A8CF080();
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v49, *MEMORY[0x263F82200], v51);
  sub_20A8CEFA0();
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, *MEMORY[0x263F821C8], v54);
  sub_20A8CF040();
  id v34 = v27;
  sub_20A8CF0E0();
  sub_20A8CF030();
  uint64_t v35 = (void *)sub_20A8CEE20();
  id v36 = objc_msgSend(v24, sel_configurationWithFont_scale_, v35, 1);

  sub_20A8CEF80();
  id v37 = v32;
  uint64_t v38 = (void (*)(void *, void))sub_20A8CEF90();
  sub_20A8CBD50();
  v38(v59, 0);
  uint64_t v39 = (void (*)(void *, void))sub_20A8CEF90();
  sub_20A8CBD60();
  v39(v59, 0);
  uint64_t v40 = (void (*)(void *, void))sub_20A8CEF90();
  sub_20A8CBD70();
  v40(v59, 0);
  uint64_t v42 = v55;
  uint64_t v41 = v56;
  uint64_t v43 = v57;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v57, v14, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  sub_20A8CF130();

  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v14, v41);
}

id sub_20A55BF30(uint64_t a1, uint64_t a2, char a3)
{
  sub_20A439404(0, (unint64_t *)&qword_26AC80108, (uint64_t (*)(uint64_t))sub_20A431D64, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D5CB0;
  uint64_t v5 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  uint64_t v6 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v7 = v5;
  *(void *)(inited + 40) = sub_20A8CEE20();
  uint64_t v8 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = v8;
  id v9 = v8;
  uint64_t v10 = sub_20A55B610(a3);
  uint64_t v11 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v10;
  uint64_t v12 = (void *)*MEMORY[0x263F81510];
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 112) = v12;
  *(void *)(inited + 144) = MEMORY[0x263F8D538];
  *(void *)(inited + 120) = 0xBFD51EB851EB851FLL;
  id v13 = v12;
  sub_20A4CF8B0(inited);
  id v14 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v15 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v16 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v14, sel_initWithString_attributes_, v15, v16);

  return v17;
}

double sub_20A55C154()
{
  return 5.0;
}

double sub_20A55C168()
{
  return 72.0;
}

uint64_t sub_20A55C17C(void *a1, char a2)
{
  return sub_20A55B70C(a1, a2);
}

ValueMetadata *type metadata accessor for AddButtonStyler()
{
  return &type metadata for AddButtonStyler;
}

void sub_20A55C1A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v5 = sub_20A8C6F60();
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55C54C();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_20A8C4530();
  double v14 = MEMORY[0x270FA5388](v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))((char *)&v24 - v15, a1, v13, v14);
  if (swift_dynamicCast())
  {
    id v25 = v7;
    uint64_t v17 = v28;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v18 = (void *)sub_20A8C4510();
    uint64_t v19 = sub_20A8C4840();
    unint64_t v21 = v20;

    if (!v3)
    {
      sub_20A55C5E0(&qword_26AC69A20, MEMORY[0x263F79F98]);
      sub_20A8C5950();
      sub_20A531704(v19, v21);
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v17, v25, v5);
      uint64_t v22 = type metadata accessor for EngagementEvent();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
    }
  }
  else
  {
    uint64_t v23 = type metadata accessor for EngagementEvent();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v28, 1, 1, v23);
  }
}

uint64_t type metadata accessor for AppSessionEndEventTranslator()
{
  return self;
}

void sub_20A55C534(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
}

void sub_20A55C54C()
{
  if (!qword_26AC67690)
  {
    sub_20A8C6F70();
    sub_20A55C5E0(&qword_26AC69A28, MEMORY[0x263F79FA8]);
    unint64_t v0 = sub_20A8C4530();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC67690);
    }
  }
}

uint64_t sub_20A55C5E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A55C628()
{
  uint64_t v0 = sub_20A8C8F40();
  uint64_t v21 = *(void *)(v0 - 8);
  uint64_t v22 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v23 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_20A8CD1F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CD3A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CD640();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4D7CAC();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v20 = sub_20A8CB6F0();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x263F59CC0], v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F59C08], v6);
  long long v24 = 0u;
  long long v25 = 0u;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F59B78], v2);
  sub_20A8CD540();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  if (qword_267639900 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_267652D00;
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F7D600], v22);
  sub_20A8C8720();
  swift_allocObject();
  id v18 = v17;
  return sub_20A8C86B0();
}

uint64_t sub_20A55CA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C8F40();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55CD34();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = sub_20A8CB790();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  if (qword_2676398F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_267652CF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D600], v6);
  sub_20A8C8720();
  swift_allocObject();
  id v19 = v17;
  sub_20A480ED4(a2);
  return sub_20A8C86B0();
}

void sub_20A55CD34()
{
  if (!qword_26AC6B250)
  {
    sub_20A4549BC();
    unint64_t v0 = sub_20A8CD5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B250);
    }
  }
}

uint64_t sub_20A55CD8C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_20A55CDCC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(0);
  }
  return result;
}

uint64_t destroy for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

uint64_t initializeWithCopy for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 24, v4, v6);
  return a1;
}

uint64_t assignWithCopy for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedWatchStateChangeBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedWatchStateChangeBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedWatchStateChangeBlueprintModifier()
{
  return &type metadata for StockFeedWatchStateChangeBlueprintModifier;
}

uint64_t sub_20A55D04C(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  sub_20A55E448(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v27 - v5;
  sub_20A46CC8C();
  MEMORY[0x270FA5388](v7 - 8);
  sub_20A55E448(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v27 - v11;
  v27[1] = sub_20A8CBA50();
  uint64_t v33 = v3;
  uint64_t v13 = sub_20A4499C0((void (*)(char *))sub_20A55E53C, (uint64_t)v32, (uint64_t)v36);
  sub_20A55E448(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v15 = v14;
  uint64_t v16 = sub_20A55E3E8(&qword_26AC69EF8);
  uint64_t v17 = sub_20A55E3E8(&qword_26AC69EF0);
  MEMORY[0x21051E250](v13, v15, v16, v17);
  type metadata accessor for StockFeedSectionDescriptor();
  type metadata accessor for StockFeedModel();
  sub_20A55E3A0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A55E3A0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8CBA40();
  uint64_t v18 = sub_20A44E664();
  sub_20A8CCAC0();
  sub_20A8CCAB0();
  type metadata accessor for StockFeedServiceConfig();
  sub_20A55E3A0(&qword_26AC73FD0, (void (*)(uint64_t))type metadata accessor for StockFeedServiceConfig);
  uint64_t v19 = sub_20A8CCA90();
  swift_release();
  if (v19)
  {
    *((void *)&v35 + 1) = sub_20A8CC520();
    *(void *)&long long v34 = v19;
  }
  else
  {
    long long v34 = 0u;
    long long v35 = 0u;
  }
  sub_20A8CBB10();
  sub_20A55E55C(v18);
  sub_20A4C7E5C();
  uint64_t v21 = &v6[*(int *)(v20 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v12, v9);
  uint64_t v22 = *MEMORY[0x263F7D528];
  uint64_t v23 = sub_20A8C8B80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  uint64_t v25 = v28;
  uint64_t v24 = v29;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v6, *MEMORY[0x263F7D938], v29);
  v31(v6);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_20A55D4F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  sub_20A42C84C();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v16 - v8;
  sub_20A55D798(a1, (uint64_t)v16 - v8);
  sub_20A55E6BC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
  uint64_t v18 = a1;
  uint64_t v10 = sub_20A449958((void (*)(char *))sub_20A55E574, (uint64_t)v17, (uint64_t)v19);
  sub_20A42C4A4();
  uint64_t v12 = v11;
  uint64_t v13 = sub_20A55E3A0(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
  uint64_t v14 = sub_20A55E3A0(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
  MEMORY[0x21051E250](v10, v12, v13, v14);
  type metadata accessor for StockFeedModel();
  sub_20A55E3A0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
  sub_20A55E3A0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
  sub_20A8C8810();
  return sub_20A55E594((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A55D798@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = sub_20A8C3410();
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v32 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55E724(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v34 = (uint64_t)&v28 - v5;
  sub_20A55E724(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_20A8C3F00();
  uint64_t v29 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55E448(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      sub_20A42C980();
      sub_20A55E5F4((uint64_t)&v20[*(int *)(v27 + 64)], &qword_26AC6AF30, MEMORY[0x263F59740]);
      goto LABEL_2;
    case 2u:
      sub_20A55E594((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedSectionDescriptor);
      goto LABEL_2;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
LABEL_2:
      uint64_t result = sub_20A8C8820();
      break;
    default:
      sub_20A546830((uint64_t)v20, (uint64_t)v17);
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v11, v17, v9);
      sub_20A55E650((uint64_t)&v17[v12[5]], (uint64_t)v8, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      sub_20A55E650((uint64_t)&v17[v12[6]], v34, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      uint64_t v22 = v12[7];
      uint64_t v23 = type metadata accessor for QuoteViewModel();
      uint64_t v24 = (uint64_t)v32;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v32, &v17[v22 + *(int *)(v23 + 20)], v31);
      int v25 = *(unsigned __int8 *)(v33 + 16);
      __swift_project_boxed_opaque_existential_1((void *)(v33 + 24), *(void *)(v33 + 48));
      char v26 = sub_20A8C3870();
      sub_20A6FC190((uint64_t)v11, (uint64_t)v8, v34, v24, v25, v26 & 1, (uint64_t)v14);
      sub_20A55E594((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      sub_20A546830((uint64_t)v14, v35);
      uint64_t result = swift_storeEnumTagMultiPayload();
      break;
  }
  return result;
}

uint64_t sub_20A55DC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v46 = a3;
  uint64_t v4 = sub_20A8C3410();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v41 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55E724(0, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v44 = (uint64_t)&v37 - v7;
  sub_20A55E724(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v43 = (uint64_t)&v37 - v9;
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v45 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for StockFeedMastheadModel();
  MEMORY[0x270FA5388](v13);
  uint64_t v38 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v37 - v22;
  sub_20A42C4A4();
  uint64_t v25 = v24;
  sub_20A8C8330();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_20A546830((uint64_t)v23, (uint64_t)v17);
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v12, v17, v10);
      sub_20A55E650((uint64_t)&v17[v13[5]], v43, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      sub_20A55E650((uint64_t)&v17[v13[6]], v44, (unint64_t *)&unk_26AC68F80, MEMORY[0x263F7AEB8]);
      uint64_t v27 = v13[7];
      uint64_t v28 = type metadata accessor for QuoteViewModel();
      uint64_t v29 = (uint64_t)v41;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v41, &v17[v27 + *(int *)(v28 + 20)], v40);
      int v30 = *(unsigned __int8 *)(v42 + 16);
      __swift_project_boxed_opaque_existential_1((void *)(v42 + 24), *(void *)(v42 + 48));
      char v31 = sub_20A8C3870();
      uint64_t v32 = v38;
      sub_20A6FC190((uint64_t)v12, v43, v44, v29, v30, v31 & 1, v38);
      sub_20A55E6BC(v32, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      swift_storeEnumTagMultiPayload();
      sub_20A55E3A0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
      sub_20A8C8320();
      sub_20A55E594(v32, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
      return sub_20A55E594((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
    case 2u:
      goto LABEL_6;
    case 3u:
      sub_20A42C53C();
      uint64_t v35 = (uint64_t)&v23[*(int *)(v34 + 48)];
      sub_20A55E5F4((uint64_t)&v23[*(int *)(v34 + 64)], &qword_26AC68DA0, MEMORY[0x263F7A890]);
      sub_20A55E5F4(v35, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
LABEL_6:
      (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v10);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v46, a1, v25);
    case 4u:
      char v26 = type metadata accessor for StockEarningsModel;
      goto LABEL_8;
    case 5u:
    case 6u:
    case 7u:
    case 9u:
      char v26 = type metadata accessor for StockFeedModel;
      goto LABEL_8;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v36 = sub_20A8CD2C0();
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v23, v36);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v46, a1, v25);
    case 0xAu:
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v46, a1, v25);
    default:
      char v26 = type metadata accessor for StockFeedMastheadModel;
LABEL_8:
      sub_20A55E594((uint64_t)v23, (uint64_t (*)(void))v26);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v46, a1, v25);
  }
}

unint64_t sub_20A55E2BC()
{
  unint64_t result = qword_26763BB68;
  if (!qword_26763BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BB68);
  }
  return result;
}

uint64_t sub_20A55E310()
{
  return sub_20A55E3A0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A55E358()
{
  return sub_20A55E3A0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

uint64_t sub_20A55E3A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A55E3E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A55E448(255, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A55E448(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    long long v8[2] = sub_20A55E3A0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A55E3A0(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A55E53C@<X0>(uint64_t a1@<X8>)
{
  return sub_20A55D4F8(*(void *)(v1 + 16), a1);
}

uint64_t sub_20A55E55C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_20A55E574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A55DC74(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_20A55E594(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A55E5F4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A55E724(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_20A55E650(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A55E724(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A55E6BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A55E724(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A55E778(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v1);
  if (result)
  {
    uint64_t v3 = (void *)result;
    unint64_t v4 = (void *)MEMORY[0x2105289B0](result + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);
    uint64_t v5 = v4;
    if (v4)
    {
      id v6 = objc_msgSend(v4, sel_text);

      if (v6)
      {
        uint64_t v7 = sub_20A8CE280();
        uint64_t v5 = v8;
      }
      else
      {
        uint64_t v7 = 0;
        uint64_t v5 = 0;
      }
    }
    else
    {
      uint64_t v7 = 0;
    }
    sub_20A55E848(v7, (uint64_t)v5);

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20A55E848(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C2B70();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v47 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController);
  sub_20A8C9BF0();
  uint64_t v15 = (void *)sub_20A8C94C0();
  swift_release();
  id v16 = objc_msgSend(v15, sel_indexPathsForSelectedItems);

  uint64_t v39 = a1;
  if (v16)
  {
    uint64_t v17 = sub_20A8CE5E0();
  }
  else
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v40 = a2;
  uint64_t v37 = v3;
  uint64_t v38 = v8;
  uint64_t v36 = v17;
  if (v18)
  {
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
    uint64_t v19 = v10 + 16;
    unint64_t v21 = v17 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    uint64_t v43 = *(void *)(v19 + 56);
    uint64_t v44 = v20;
    unint64_t v22 = v19 + 40;
    uint64_t v23 = v19;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    uint64_t v45 = v23;
    uint64_t v41 = (void (**)(char *, uint64_t))(v23 - 8);
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    unint64_t v35 = v22 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v25 = v47;
    while (1)
    {
      v44(v14, v21, v9);
      char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v22;
      (*(void (**)(char *, void, uint64_t, uint64_t))v22)(v14, 0, 1, v9);
      if ((*v24)(v14, 1, v9) == 1) {
        break;
      }
      (*v42)(v25, v14, v9);
      sub_20A8C9BF0();
      uint64_t v27 = (void *)sub_20A8C94C0();
      swift_release();
      uint64_t v28 = (void *)sub_20A8C2B00();
      objc_msgSend(v27, sel_deselectItemAtIndexPath_animated_, v28, 0, v35, v36);

      (*v41)(v25, v9);
      v21 += v43;
      if (!--v18) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    char v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_10:
    v26(v14, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v37 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  uint64_t v30 = v37 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  uint64_t v31 = (uint64_t)v38;
  sub_20A56235C(v30, (uint64_t)v38, type metadata accessor for StockSearchMode);
  uint64_t v32 = *(void *)(v29 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 72))(v39, v40, v31, ObjectType, v32);
  return sub_20A56252C(v31, type metadata accessor for StockSearchMode);
}

uint64_t sub_20A55EE64()
{
  return type metadata accessor for StockSearchViewController(0);
}

uint64_t type metadata accessor for StockSearchViewController(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26AC76908);
}

uint64_t sub_20A55EE8C()
{
  uint64_t result = type metadata accessor for StockSearchMode(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for StockSearchMode(uint64_t a1)
{
  return sub_20A4D9778(a1, (uint64_t *)&unk_26AC6E998);
}

id sub_20A55EF88()
{
  unint64_t v1 = v0;
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v24, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController];
  objc_msgSend(v0, sel_addChildViewController_, v2);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  unint64_t v4 = result;
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = result;
  objc_msgSend(v4, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  objc_msgSend(result, sel_bounds);
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;

  objc_msgSend(v6, sel_setFrame_, v9, v11, v13, v15);
  sub_20A8C9BF0();
  id v16 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v16, sel_setSelectionFollowsFocus_, 1);

  id v17 = objc_msgSend(v1, sel_traitCollection);
  sub_20A55F2B4((uint64_t)v17);

  uint64_t v18 = MEMORY[0x2105289B0](&v1[OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar]);
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v21 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    unint64_t v22 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_setCancelButtonText_, v22, 0x800000020A900250);
  }
  sub_20A8C9C10();
  sub_20A8C8C30();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8C5D60();
  swift_release();
  swift_release();
  return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

id sub_20A55F2B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (uint64_t)v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler;
  swift_beginAccess();
  sub_20A4342F4(v4, (uint64_t)v20);
  uint64_t v5 = v21;
  uint64_t v6 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  uint64_t v7 = *(void *)(v6 + 8);
  double v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v18 = v5;
  uint64_t v19 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_20A42BEBC(&v17, v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  sub_20A4342F4(v4, (uint64_t)v20);
  double v9 = __swift_project_boxed_opaque_existential_1(v20, v21);
  id result = objc_msgSend(v2, sel_view);
  if (result)
  {
    double v11 = result;
    double v12 = (void *)(*v9 + 16);
    uint64_t v14 = *(void *)(*v9 + 40);
    uint64_t v13 = *(void *)(*v9 + 48);
    __swift_project_boxed_opaque_existential_1(v12, v14);
    double v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v13 + 16) + 56))(v14);
    objc_msgSend(v11, sel_setBackgroundColor_, v15);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_20A4342F4(v4, (uint64_t)v20);
    __swift_project_boxed_opaque_existential_1(v20, v21);
    sub_20A8C9BF0();
    id v16 = (void *)sub_20A8C94C0();
    swift_release();
    sub_20A65355C(v16);

    return (id)__swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A55F4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void *)(result + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
    swift_unknownObjectRetain();

    uint64_t v6 = *(void *)(v5 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v6 + 88))(ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A55F70C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_20A562728(a1, v6);
  swift_endAccess();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  double v8 = (void *)MEMORY[0x2105289B0](v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);
  double v9 = v8;
  if (v8)
  {
    id v10 = objc_msgSend(v8, sel_text);

    if (v10)
    {
      uint64_t v11 = sub_20A8CE280();
      double v9 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      double v9 = 0;
    }
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_20A56235C(v6, (uint64_t)v5, type metadata accessor for StockSearchMode);
  uint64_t v13 = *(void *)(v7 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v13 + 72))(v11, v9, v5, ObjectType, v13);
  swift_bridgeObjectRelease();
  return sub_20A56252C((uint64_t)v5, type metadata accessor for StockSearchMode);
}

uint64_t sub_20A55F8AC(uint64_t a1, uint64_t a2)
{
  v21[1] = a2;
  uint64_t v22 = sub_20A8CBBB0();
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CBBC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BD0();
  sub_20A562644();
  uint64_t v11 = (uint64_t *)&v9[*(int *)(v10 + 48)];
  double v12 = &v9[*(int *)(v10 + 64)];
  sub_20A8CD240();
  uint64_t v13 = (void *)(a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler);
  swift_beginAccess();
  uint64_t v14 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  uint64_t v15 = *(void *)(*v14 + 40);
  uint64_t v16 = *(void *)(*v14 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v14 + 16), v15);
  sub_20A819910(v15, v16, v11);
  uint64_t v17 = *MEMORY[0x263F7D2F0];
  uint64_t v18 = sub_20A8C8380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v12, v17, v18);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7E0D0], v6);
  uint64_t v19 = v22;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7E0D8], v22);
  sub_20A8C8AB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A55FB64(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = sub_20A8CBBB0();
  uint64_t v4 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20A8CBBC0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BD0();
  sub_20A562644();
  double v12 = (uint64_t *)&v10[*(int *)(v11 + 48)];
  uint64_t v13 = &v10[*(int *)(v11 + 64)];
  uint64_t v14 = sub_20A8C7FE0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v10, a2, v14);
  uint64_t v15 = (void *)(a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_styler);
  swift_beginAccess();
  uint64_t v16 = __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  uint64_t v17 = *(void *)(*v16 + 40);
  uint64_t v18 = *(void *)(*v16 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v16 + 16), v17);
  sub_20A819910(v17, v18, v12);
  uint64_t v19 = *MEMORY[0x263F7D2F0];
  uint64_t v20 = sub_20A8C8380();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v13, v19, v20);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7E0D0], v7);
  uint64_t v21 = v23;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7E0D8], v23);
  sub_20A8C8AB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_20A55FE4C(uint64_t a1)
{
  uint64_t v2 = sub_20A8CBBB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CBBC0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BD0();
  char v10 = sub_20A8C8AA0();
  swift_release();
  if (v10)
  {
    sub_20A8C9BD0();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7E0C8], v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F7E0D8], v2);
    sub_20A8C8AB0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t result = MEMORY[0x2105289B0](a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_delegate);
  if (result)
  {
    sub_20A71ABA0(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_20A56007C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StockSearchMode(0);
  double v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  uint64_t v7 = (void *)MEMORY[0x2105289B0](a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar, v3);
  uint64_t v8 = v7;
  if (v7)
  {
    id v9 = objc_msgSend(v7, sel_text);

    if (v9)
    {
      uint64_t v10 = sub_20A8CE280();
      uint64_t v8 = v11;
    }
    else
    {
      uint64_t v10 = 0;
      uint64_t v8 = 0;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v12 = a1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_20A56235C(v12, (uint64_t)v5, type metadata accessor for StockSearchMode);
  uint64_t v13 = *(void *)(v6 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v13 + 72))(v10, v8, v5, ObjectType, v13);
  swift_bridgeObjectRelease();
  return sub_20A56252C((uint64_t)v5, type metadata accessor for StockSearchMode);
}

uint64_t sub_20A560200()
{
  uint64_t v0 = type metadata accessor for StockSearchMode(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C40E0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_20A55F70C((uint64_t)v2);
  return sub_20A56252C((uint64_t)v2, type metadata accessor for StockSearchMode);
}

void sub_20A5602CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_20A56235C(a3, (uint64_t)v6, (uint64_t (*)(void))sub_20A469FF4);
  sub_20A8CB170();
  sub_20A8C9BF0();
  uint64_t v7 = (void *)sub_20A8C94C0();
  swift_release();
  sub_20A8CEAD0();
}

uint64_t sub_20A5603D0(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v2 = sub_20A8CC220();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_20A8CC250();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A44DB30(0);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4A22E4();
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5623C4();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A562438(0, (unint64_t *)&qword_26AC6AD38, MEMORY[0x263F7E0A8]);
  sub_20A8CBAD0();
  sub_20A562438(0, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18) == 1)
  {
    sub_20A56252C((uint64_t)v17, (uint64_t (*)(void))sub_20A5623C4);
    uint64_t v21 = 0;
  }
  else
  {
    sub_20A8C8870();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    uint64_t v21 = sub_20A8C5F40();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v23 = v35;
  uint64_t v22 = v36;
  uint64_t v24 = v41;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v25(v9, v41, v6);
  if (!v21)
  {
    sub_20A5625E0(0, (unint64_t *)&unk_26763BC20, (uint64_t (*)(uint64_t))sub_20A44DB30, MEMORY[0x263F8E0F8]);
    unint64_t v26 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_20A8D3DC0;
    unint64_t v27 = v21 + v26;
    uint64_t v24 = v41;
    v25((char *)v27, (uint64_t)v9, v6);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_20A6A66CC(v24, v21);
  swift_bridgeObjectRelease();
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  uint64_t v28 = (void *)sub_20A8CEBE0();
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_20A5625C4;
  void aBlock[5] = v29;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_15;
  uint64_t v30 = _Block_copy(aBlock);
  swift_release();
  uint64_t v31 = v37;
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A562314(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A562314((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  uint64_t v32 = v39;
  sub_20A8CF290();
  MEMORY[0x210526F10](0, v31, v32, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v31, v40);
}

void sub_20A560A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CAE00();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, a3, v5, v7);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v10 == *MEMORY[0x263F7DEA0])
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_3:
    uint64_t v11 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v11 + 40))(ObjectType, v11);
    return;
  }
  if (v10 == *MEMORY[0x263F7DE88])
  {
    uint64_t v13 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
    uint64_t v14 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v14, v13);
  }
  else
  {
    if (v10 == *MEMORY[0x263F7DE98] || v10 == *MEMORY[0x263F7DE90]) {
      goto LABEL_3;
    }
    if (v10 != *MEMORY[0x263F7DEA8])
    {
      if (v10 == *MEMORY[0x263F7DEB0])
      {
        sub_20A8C9BF0();
        uint64_t v16 = (void *)sub_20A8C94C0();
        swift_release();
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
        sub_20A8C8C70();
      }
      else
      {
        sub_20A8CF520();
        __break(1u);
      }
    }
  }
}

void sub_20A560CB4()
{
  id v1 = objc_msgSend(v0, sel_navigationController);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_navigationBar);

    sub_20A8CEE80();
  }
}

uint64_t sub_20A560D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C3A0](a1, a2, a3, a4, ObjectType, a6);
}

uint64_t sub_20A560DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C340](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A560E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 80))(a2, ObjectType, v4);
}

uint64_t sub_20A560E94()
{
  return sub_20A6A6D60();
}

uint64_t sub_20A560ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C340](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A560F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a2, ObjectType, v4);
}

uint64_t sub_20A560F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C348](a1, a2, ObjectType, a4);
}

uint64_t sub_20A560FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a2, ObjectType, v4);
}

uint64_t sub_20A56104C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C348](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5610A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C348](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5610FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C348](a1, a2, ObjectType, a4);
}

uint64_t sub_20A561154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C348](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5611B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C388](a1, a2, ObjectType, a4);
}

uint64_t sub_20A561208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C340](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A561270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C350](a1, a2, a3, ObjectType, a5);
}

uint64_t sub_20A5612D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C2F8](a1, ObjectType, a3);
}

uint64_t sub_20A561328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C2F8](a1, ObjectType, a3);
}

uint64_t sub_20A561378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C328](a1, ObjectType, a3);
}

uint64_t sub_20A5613C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C2F8](a1, ObjectType, a3);
}

uint64_t sub_20A561418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C2F8](a1, ObjectType, a3);
}

uint64_t sub_20A561468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C338](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5614C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C310](a1, a2, ObjectType, a4);
}

uint64_t sub_20A561518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C310](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5615E8()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_20A8C9C50();
  if (result)
  {
    uint64_t v3 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler) + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(ObjectType, v3);
  }
  return result;
}

uint64_t sub_20A561654()
{
  return sub_20A8C9C80();
}

void sub_20A5618A4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2105289B0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = (void *)MEMORY[0x2105289B0](v2 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar);

    if (v4)
    {
      objc_msgSend(v4, sel_resignFirstResponder);
    }
  }
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x2105289B0](v1);
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    id v7 = *(id *)(v5 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_blueprintViewController);

    sub_20A8C9C30();
  }
}

uint64_t *sub_20A5619CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_20A8C40E0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

void *sub_20A561B18(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_20A561C28(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_20A561D9C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_20A561EAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_20A562020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A562034);
}

uint64_t sub_20A562034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C40E0();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A5620A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5620B4);
}

uint64_t sub_20A5620B4(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_20A8C40E0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_20A562134(uint64_t a1)
{
  uint64_t v2 = sub_20A8C40E0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_20A56219C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C40E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t sub_20A56220C()
{
  uint64_t result = sub_20A8C40E0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_20A562284()
{
  return sub_20A562314(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
}

uint64_t sub_20A5622CC()
{
  return sub_20A562314(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
}

uint64_t sub_20A562314(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A56235C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_20A5623C4()
{
  if (!qword_26763BC18)
  {
    sub_20A562438(255, (unint64_t *)&qword_26AC82470, MEMORY[0x263F7D450]);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BC18);
    }
  }
}

void sub_20A562438(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockSearchSectionDescriptor();
    v8[1] = type metadata accessor for StockSearchModel();
    long long v8[2] = sub_20A562314(&qword_26AC78AC0, (void (*)(uint64_t))type metadata accessor for StockSearchSectionDescriptor);
    v8[3] = sub_20A562314(&qword_26AC6F3E0, (void (*)(uint64_t))type metadata accessor for StockSearchModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A56252C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A56258C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_20A5625C4()
{
  sub_20A5618A4(v0);
}

void sub_20A5625E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_20A562644()
{
  if (!qword_26AC818F0)
  {
    sub_20A8C7FE0();
    sub_20A5626D0();
    sub_20A8C8380();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC818F0);
    }
  }
}

unint64_t sub_20A5626D0()
{
  unint64_t result = qword_26AC81900;
  if (!qword_26AC81900)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC81900);
  }
  return result;
}

uint64_t sub_20A562728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockSearchMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A56278C()
{
  uint64_t v1 = type metadata accessor for StockSearchMode(0);
  double v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_eventHandler);
  unint64_t v6 = (void *)MEMORY[0x2105289B0](v0 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_searchBar, v2);
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = objc_msgSend(v6, sel_text);

    if (v8)
    {
      uint64_t v9 = sub_20A8CE280();
      uint64_t v7 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v7 = 0;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v11 = v0 + OBJC_IVAR____TtC8StocksUI25StockSearchViewController_stockSearchMode;
  swift_beginAccess();
  sub_20A56235C(v11, (uint64_t)v4, type metadata accessor for StockSearchMode);
  uint64_t v12 = *(void *)(v5 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v12 + 72))(v9, v7, v4, ObjectType, v12);
  swift_bridgeObjectRelease();
  return sub_20A56252C((uint64_t)v4, type metadata accessor for StockSearchMode);
}

uint64_t sub_20A56290C()
{
  uint64_t v0 = sub_20A8CC220();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CC250();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
  id v8 = (void *)sub_20A8CEBE0();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_20A5625C4;
  void aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4713FC;
  aBlock[3] = &block_descriptor_16_0;
  int v10 = _Block_copy(aBlock);
  swift_release();
  sub_20A8CC240();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_20A562314(&qword_26AC677A0, MEMORY[0x263F8F030]);
  sub_20A44D1C4(0);
  sub_20A562314((unint64_t *)&qword_26AC7F7B0, sub_20A44D1C4);
  sub_20A8CF290();
  MEMORY[0x210526F10](0, v7, v3, v10);
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A562BF8(uint64_t a1)
{
  return sub_20A55F4A4(a1, v1);
}

uint64_t sub_20A562C08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A5637C4();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = sub_20A8C2990();
  sub_20A8C5BB0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = &type metadata for SystemTheme;
    uint64_t v21 = &off_26BE61AA0;
    uint64_t v9 = type metadata accessor for BaseStyler();
    uint64_t v10 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v10 + OBJC_IVAR____TtC8StocksUI10BaseStyler_locale, v6, v7);
    id v11 = objc_msgSend(self, sel_currentDevice);
    id v12 = objc_msgSend(v11, sel_userInterfaceIdiom);

    if ((unint64_t)v12 + 1 <= 6)
    {
      if (((1 << (v12 + 1)) & 0x5D) != 0)
      {
        sub_20A4342F4((uint64_t)&v19, (uint64_t)v15);
        uint64_t v17 = &type metadata for LightTheme;
        uint64_t v18 = &off_26BE66578;
        *(void *)&long long v16 = swift_allocObject();
        sub_20A5B78C8(v15, v16 + 16);
LABEL_5:
        (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
        sub_20A42BEBC(&v16, v10 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
        uint64_t result = sub_20A42BEBC(&v19, v10 + OBJC_IVAR____TtC8StocksUI10BaseStyler_systemTheme);
        a2[3] = v9;
        a2[4] = (uint64_t)&off_26BE65300;
        *a2 = v10;
        return result;
      }
      if (!v12)
      {
        sub_20A4342F4((uint64_t)&v19, (uint64_t)v15);
        uint64_t v17 = &type metadata for DarkTheme;
        uint64_t v18 = &off_26BE721B8;
        *(void *)&long long v16 = swift_allocObject();
        sub_20A873DAC(v15, 0, v16 + 16);
        goto LABEL_5;
      }
    }
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A562F10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v17[3] = sub_20A8C2990();
  v17[4] = sub_20A56376C();
  __swift_allocate_boxed_opaque_existential_1(v17);
  sub_20A8C2940();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v15;
  if (v15)
  {
    uint64_t v6 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 72))(v11, v5, v6);
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 96))(v7, v8);
    uint64_t v9 = sub_20A8C4AA0();
    uint64_t v10 = MEMORY[0x263F58960];
    a2[3] = v9;
    a2[4] = v10;
    __swift_allocate_boxed_opaque_existential_1(a2);
    sub_20A8C4A90();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A563058@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for AppBackgroundStyler;
    a2[4] = (uint64_t)&off_26BE60368;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_20A42BEBC(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A563108@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for FeedColorPalette;
    a2[4] = sub_20A5636E0();
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_20A42BEBC(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A5631B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A43F7E0(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for WebViewControllerStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_20A431A50((uint64_t)v10, v5, v4, v6);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE635D0;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for StylerAssembly()
{
  return self;
}

uint64_t sub_20A563340()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CC0();
  sub_20A43F7E0(0, qword_26AC6D3E0);
  sub_20A8C62A0();
  swift_release();
  uint64_t v4 = *MEMORY[0x263F7D010];
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A43F7E0(0, &qword_26AC693D8);
  sub_20A8C62A0();
  swift_release();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_20A8C5CC0();
  sub_20A43F7E0(0, &qword_26AC71788);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A43F7E0(0, &qword_26AC6B280);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CC0();
  sub_20A43F7E0(0, &qword_26AC782C0);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C2990();
  sub_20A8C62A0();
  swift_release();
  v5(v3, v4, v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

unint64_t sub_20A5636E0()
{
  unint64_t result = qword_26AC6ED80;
  if (!qword_26AC6ED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6ED80);
  }
  return result;
}

uint64_t sub_20A563734()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

unint64_t sub_20A56376C()
{
  unint64_t result = qword_26AC68CE0;
  if (!qword_26AC68CE0)
  {
    sub_20A8C2990();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC68CE0);
  }
  return result;
}

void sub_20A5637C4()
{
  if (!qword_26AC68CE8)
  {
    sub_20A8C2990();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68CE8);
    }
  }
}

uint64_t sub_20A56381C()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_20A56399C()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_20A563B20(uint64_t a1)
{
  uint64_t v69 = a1;
  sub_20A5646EC(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v55 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A564720(0);
  MEMORY[0x270FA5388](v4 - 8);
  id v58 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8CD1F0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v57 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CD3A0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v56 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_20A8CD640();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v54 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55CD34();
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v62 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v60 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_20A8CA640();
  uint64_t v67 = *(void *)(v14 - 8);
  uint64_t v68 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C5390();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C5920();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v26 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v1;
  uint64_t v65 = *(void *)(v1 + 16);
  sub_20A42FC8C();
  uint64_t v31 = *(int *)(v30 + 48);
  uint64_t v63 = &v29[*(int *)(v30 + 64)];
  uint64_t v64 = v31;
  sub_20A8C5680();
  sub_20A8C58F0();
  uint64_t v32 = sub_20A8C2530();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v22, 1, 1, v32);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F58CD8], v16);
  sub_20A8C4D60();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v33 = v66;
  sub_20A5647B8((uint64_t)v22, (uint64_t (*)(void))sub_20A4845D0);
  uint64_t v34 = v26;
  uint64_t v35 = v23;
  uint64_t v37 = v67;
  uint64_t v36 = v68;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v34, v35);
  uint64_t v73 = 0;
  long long v71 = 0u;
  long long v72 = 0u;
  sub_20A42FD84((uint64_t)&v71, (uint64_t)v63);
  *(void *)&v29[v64] = 0;
  type metadata accessor for StocksActivity.Article(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v33, *MEMORY[0x263F7DCB0], v36);
  sub_20A8C8590();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v33, v36);
  sub_20A5647B8((uint64_t)v29, type metadata accessor for StocksActivity);
  LODWORD(v29) = sub_20A564544();
  uint64_t v70 = sub_20A8C5680();
  sub_20A8C5660();
  sub_20A8C5640();
  sub_20A8C5650();
  sub_20A4549BC();
  long long v71 = 0u;
  long long v72 = 0u;
  uint64_t v38 = v60;
  sub_20A8CD540();
  uint64_t ObjectType = swift_getObjectType();
  sub_20A8CB790();
  uint64_t v40 = v61;
  uint64_t v41 = (uint64_t)v58;
  uint64_t v42 = v38;
  uint64_t v43 = v62;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v42, v62);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v43);
  uint64_t v67 = ObjectType;
  sub_20A8C8D40();
  sub_20A5647B8(v41, (uint64_t (*)(void))sub_20A564720);
  swift_release();
  char v44 = sub_20A8C5630();
  LODWORD(v68) = v29;
  if (v44) {
    sub_20A8CB660();
  }
  else {
    sub_20A8CB650();
  }
  uint64_t v45 = *MEMORY[0x263F7E070];
  uint64_t v46 = sub_20A8CB670();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v55, v45, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  sub_20A8C8D40();
  sub_20A5647B8(v48, (uint64_t (*)(void))sub_20A5646EC);
  if ((v68 & 1) != 0 && (char v49 = sub_20A8C5670(), v51 = v61, v50 = v62, v52 = v60, (v49 & 1) == 0))
  {
    sub_20A8C5310();
    swift_release();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v62);
    swift_release();
  }
  return 1;
}

uint64_t sub_20A564544()
{
  unint64_t v0 = (void *)sub_20A8C52C0();
  id v1 = objc_msgSend(v0, sel_value);

  if (v1 && (uint64_t v2 = sub_20A8C4FC0(), v4 = v3, v1, v4))
  {
    id v5 = objc_msgSend((id)sub_20A8C5680(), sel_articleID);
    swift_unknownObjectRelease();
    uint64_t v6 = sub_20A8CE280();
    uint64_t v8 = v7;

    if (v2 == v6 && v4 == v8)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v9 = 0;
    }
    else
    {
      char v10 = sub_20A8CF760();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v9 = v10 ^ 1;
    }
  }
  else
  {
    char v9 = 1;
  }
  return v9 & 1;
}

uint64_t sub_20A564658()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NowPlayingPresenter()
{
  return self;
}

uint64_t sub_20A5646C4(uint64_t a1)
{
  return sub_20A563B20(a1) & 1;
}

void sub_20A5646EC(uint64_t a1)
{
}

void sub_20A564720(uint64_t a1)
{
}

void sub_20A564754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A5647B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A564818(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_20A8CD5D0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C9F40();
  double v10 = MEMORY[0x270FA5388](v9);
  (*(void (**)(char *, void, double))(v12 + 104))((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7DA38], v10);
  uint64_t v13 = *(void *)(v3 + 32);
  v28[4] = sub_20A8C4990();
  void v28[5] = sub_20A564C14();
  v28[1] = v13;
  long long v29 = 0u;
  long long v30 = 0u;
  char v31 = 1;
  sub_20A8C99D0();
  swift_allocObject();
  swift_retain();
  id v14 = a2;
  sub_20A8C99B0();
  sub_20A564CA0(0, (unint64_t *)&qword_26AC7FF90, (uint64_t (*)(uint64_t))sub_20A564C6C, MEMORY[0x263F8E0F8]);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20A8D7FF0;
  uint64_t v16 = sub_20A8C8720();
  uint64_t v17 = sub_20A8C86F0();
  uint64_t v18 = MEMORY[0x263F7D410];
  *(void *)(v15 + 56) = v16;
  *(void *)(v15 + 64) = v18;
  *(void *)(v15 + 32) = v17;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F59C90], v5);
  uint64_t v19 = sub_20A8C8710();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (v19)
  {
    uint64_t v20 = MEMORY[0x263F7D410];
    uint64_t v21 = v16;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v20 = 0;
    *(void *)(v15 + 80) = 0;
    *(void *)(v15 + 88) = 0;
  }
  *(void *)(v15 + 72) = v19;
  *(void *)(v15 + 96) = v21;
  *(void *)(v15 + 104) = v20;
  uint64_t v22 = sub_20A564D5C();
  if (v22)
  {
    uint64_t v23 = MEMORY[0x263F7D410];
    uint64_t v24 = v16;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v23 = 0;
    *(void *)(v15 + 120) = 0;
    *(void *)(v15 + 128) = 0;
  }
  *(void *)(v15 + 112) = v22;
  *(void *)(v15 + 136) = v24;
  *(void *)(v15 + 144) = v23;
  sub_20A8C80C0();
  uint64_t v25 = sub_20A55C628();
  *(void *)(v15 + 176) = v16;
  *(void *)(v15 + 184) = v18;
  *(void *)(v15 + 152) = v25;
  uint64_t result = sub_20A8C8080();
  if (result)
  {
    sub_20A564F1C();
    sub_20A8C8030();
    uint64_t v27 = sub_20A8CEE50();
    swift_release();
    swift_release();
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A564B8C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NowPlayingMenuFactory()
{
  return self;
}

uint64_t sub_20A564BF0(uint64_t a1, void *a2)
{
  return sub_20A564818(a1, a2);
}

unint64_t sub_20A564C14()
{
  unint64_t result = qword_26AC69370;
  if (!qword_26AC69370)
  {
    sub_20A8C4990();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC69370);
  }
  return result;
}

void sub_20A564C6C(uint64_t a1)
{
}

void sub_20A564CA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A564D04()
{
  unint64_t result = qword_26AC6A1F0;
  if (!qword_26AC6A1F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC6A1F0);
  }
  return result;
}

uint64_t sub_20A564D5C()
{
  uint64_t v0 = sub_20A8C8F40();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8CB7D0();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  sub_20A8CDB50();
  sub_20A8CDB40();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D600], v0);
  sub_20A8C8720();
  swift_allocObject();
  return sub_20A8C86A0();
}

unint64_t sub_20A564F1C()
{
  unint64_t result = qword_26AC7FB90;
  if (!qword_26AC7FB90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26AC7FB90);
  }
  return result;
}

uint64_t sub_20A564F5C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + *(int *)(a1 + 28))) {
    return MEMORY[0x263F8EE78];
  }
  else {
    return sub_20A8CE5F0();
  }
}

unint64_t sub_20A564F7C(uint64_t a1)
{
  if (*(unsigned char *)(v1 + *(int *)(a1 + 28))) {
    return sub_20A4CFD34(MEMORY[0x263F8EE78]);
  }
  else {
    return sub_20A8CE600();
  }
}

double sub_20A564F9C(uint64_t a1)
{
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A546928(v1 + *(int *)(a1 + 32), (uint64_t)v5);
  uint64_t v6 = sub_20A8CC470();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_20A5467A4((uint64_t)v5);
    return 1.0;
  }
  else
  {
    sub_20A8CC3E0();
    double v8 = v9;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v6);
  }
  return v8;
}

double sub_20A5650BC(uint64_t a1, uint64_t a2)
{
  return sub_20A5650EC(a1, a2, MEMORY[0x263F59730]);
}

double sub_20A5650D4(uint64_t a1, uint64_t a2)
{
  return sub_20A5650EC(a1, a2, MEMORY[0x263F59728]);
}

double sub_20A5650EC(uint64_t a1, uint64_t a2, double (*a3)(void))
{
  sub_20A42C764(0);
  MEMORY[0x270FA5388](v6 - 8);
  double v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A546928(v3 + *(int *)(a1 + 32), (uint64_t)v8);
  uint64_t v9 = sub_20A8CC470();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_20A5467A4((uint64_t)v8);
    return 0.0;
  }
  else
  {
    double v11 = a3();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  return v11;
}

uint64_t sub_20A56521C(uint64_t a1)
{
  uint64_t v2 = sub_20A565394(&qword_26763BD10);

  return MEMORY[0x270F4FAB8](a1, v2);
}

uint64_t sub_20A565274()
{
  return 1937204558;
}

uint64_t sub_20A565284()
{
  return sub_20A8C3EC0();
}

uint64_t sub_20A5652AC()
{
  return sub_20A565394(&qword_26763BCF8);
}

uint64_t type metadata accessor for NewsStockFeedGroup()
{
  uint64_t result = qword_26AC706E0;
  if (!qword_26AC706E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A56532C()
{
  return sub_20A565394(&qword_26763BD00);
}

uint64_t sub_20A565360()
{
  return sub_20A565394(&qword_26763BD08);
}

uint64_t sub_20A565394(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NewsStockFeedGroup();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_20A5653D8(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_20A8C3F00();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    id v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_20A8CC470();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      sub_20A42C764(0);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  return v4;
}

uint64_t sub_20A5655BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_20A8CC470();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

void *sub_20A5656E0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3F00();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v13 = (char *)a1 + v12;
  id v14 = (char *)a2 + v12;
  uint64_t v15 = sub_20A8CC470();
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    sub_20A42C764(0);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

void *sub_20A565874(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_20A8CC470();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v8)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_20A42C764(0);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_20A565A74(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_20A8CC470();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_20A42C764(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

void *sub_20A565BE4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_20A8CC470();
  uint64_t v15 = *(void *)(v14 - 8);
  int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  int v17 = v16(v13, 1, v14);
  if (!v9)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_20A42C764(0);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_20A565DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A565DDC);
}

uint64_t sub_20A565DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3F00();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_20A42C764(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_20A565F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A565F1C);
}

uint64_t sub_20A565F1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3F00();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_20A42C764(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_20A566048()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A42C764(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

char *sub_20A566130(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_quoteSummaryView;
  id v11 = objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView());
  uint64_t v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v13 = OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_exchangeLabel;
  *(void *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v12;
  v18.super_class = ObjectType;
  uint64_t v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_quoteSummaryView];
  uint64_t v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(void *)&v16[OBJC_IVAR____TtC8StocksUI18StockFeedPriceView_exchangeLabel]);

  return v16;
}

uint64_t type metadata accessor for StockFeedPriceView()
{
  return self;
}

void sub_20A5663E0()
{
  sub_20A56646C(qword_26AC70978);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A566438()
{
  return sub_20A56646C(&qword_26AC70970);
}

uint64_t sub_20A56646C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockFeedPriceView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OnboardingViewController.cardSplitViewPresentation(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C8EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F7DB00];
LABEL_5:
    uint64_t v11 = *v10;
    uint64_t v12 = sub_20A8CA130();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
    uint64_t v13 = *MEMORY[0x263F7DAF8];
    uint64_t v14 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
  }
  if (v9 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v10 = (unsigned int *)MEMORY[0x263F7DB08];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A5666B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OnboardingViewController.cardSplitViewPresentation(for:)(a1, a2);
}

void *destroy for OnboardingRouteModel(void *result)
{
  if (*result) {
    return (void *)swift_release();
  }
  return result;
}

void *_s8StocksUI20OnboardingRouteModelVwCP_0(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for OnboardingRouteModel(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for OnboardingRouteModel(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      uint64_t v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnboardingRouteModel(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OnboardingRouteModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnboardingRouteModel()
{
  return &type metadata for OnboardingRouteModel;
}

uint64_t *sub_20A5668C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    int v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_20A55361C(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)v4 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_20A5669A0(uint64_t a1)
{
  sub_20A55361C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();

  return swift_release();
}

uint64_t sub_20A566A20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A55361C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20A566AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A55361C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20A566B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A55361C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_20A566BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A55361C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_20A566C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A566C88);
}

uint64_t sub_20A566C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A55361C(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_20A566D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A566D5C);
}

void sub_20A566D5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A55361C(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for CuratedForYouFeedGroupKnobs()
{
  uint64_t result = qword_26AC77570;
  if (!qword_26AC77570) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A566E64()
{
  sub_20A55361C(319);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_20A566F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  sub_20A460D90();
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A55361C(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A567998(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    type metadata accessor for ForYouFeedServiceConfig();
    sub_20A567ABC(&qword_26AC74890, (void (*)(uint64_t))type metadata accessor for ForYouFeedServiceConfig);
    sub_20A8CC890();
    sub_20A5679FC((uint64_t)v10);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a4, v15, v12);
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v16(v15, v10, v12);
    v16(a4, v15, v12);
  }
  if (!a2)
  {
    uint64_t v20 = 1;
    sub_20A567920();
    swift_allocObject();
    a2 = sub_20A8CCC00();
  }
  uint64_t v17 = type metadata accessor for CuratedForYouFeedGroupKnobs();
  *(void *)&a4[*(int *)(v17 + 20)] = a2;
  if (!a3)
  {
    uint64_t v20 = 0x7FFFFFFFFFFFFFFFLL;
    sub_20A567920();
    swift_allocObject();
    a3 = sub_20A8CCC00();
  }
  uint64_t result = sub_20A5679FC(a1);
  *(void *)&a4[*(int *)(v17 + 24)] = a3;
  return result;
}

uint64_t sub_20A5671B8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  sub_20A460D90();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A567A58(0, &qword_26AC7FE30, MEMORY[0x263F8E040]);
  uint64_t v9 = v8;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5678CC();
  sub_20A8CF8E0();
  if (!v2)
  {
    sub_20A55361C(0);
    LOBYTE(v17) = 0;
    sub_20A567ABC(&qword_26AC6B028, sub_20A55361C);
    sub_20A8CF5C0();
    sub_20A567920();
    LOBYTE(v16) = 1;
    sub_20A567ABC(&qword_26AC6B0F8, (void (*)(uint64_t))sub_20A567920);
    sub_20A8CF5C0();
    uint64_t v13 = v17;
    char v15 = 2;
    sub_20A8CF5C0();
    sub_20A566F00((uint64_t)v7, v13, v16, a2);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_20A567454(void *a1)
{
  uint64_t v3 = v1;
  sub_20A567A58(0, &qword_26763BD28, MEMORY[0x263F8E0C0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5678CC();
  sub_20A8CF8F0();
  LOBYTE(v14) = 0;
  sub_20A55361C(0);
  sub_20A567ABC(&qword_26763BD30, sub_20A55361C);
  sub_20A8CF6E0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CuratedForYouFeedGroupKnobs();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 20));
    char v13 = 1;
    sub_20A567920();
    sub_20A567ABC(&qword_26763BD38, (void (*)(uint64_t))sub_20A567920);
    sub_20A8CF6E0();
    uint64_t v14 = *(void *)(v3 + *(int *)(v10 + 24));
    char v13 = 2;
    sub_20A8CF6E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20A5676B8()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x73656C7572;
  }
}

uint64_t sub_20A567718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20A567D10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20A567740(uint64_t a1)
{
  unint64_t v2 = sub_20A5678CC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20A56777C(uint64_t a1)
{
  unint64_t v2 = sub_20A5678CC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20A5677B8@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_20A5671B8(a1, a2);
}

uint64_t sub_20A5677D0(void *a1)
{
  return sub_20A567454(a1);
}

uint64_t sub_20A5677E8()
{
  if (sub_20A8CC8D0() & 1) != 0 && (sub_20A567920(), (sub_20A8CCBE0())) {
    return sub_20A8CCBE0() & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_20A5678AC()
{
  return swift_retain();
}

uint64_t sub_20A5678B8()
{
  return swift_retain();
}

unint64_t sub_20A5678CC()
{
  unint64_t result = qword_26AC77538;
  if (!qword_26AC77538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC77538);
  }
  return result;
}

void sub_20A567920()
{
  if (!qword_26AC6B100)
  {
    unint64_t v0 = sub_20A8CCC10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6B100);
    }
  }
}

uint64_t sub_20A567998(uint64_t a1, uint64_t a2)
{
  sub_20A460D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A5679FC(uint64_t a1)
{
  sub_20A460D90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_20A567A58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_20A5678CC();
    unint64_t v7 = a3(a1, &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A567ABC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CuratedForYouFeedGroupKnobs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A567BD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CuratedForYouFeedGroupKnobs.CodingKeys()
{
  return &type metadata for CuratedForYouFeedGroupKnobs.CodingKeys;
}

unint64_t sub_20A567C0C()
{
  unint64_t result = qword_26763BD40;
  if (!qword_26763BD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BD40);
  }
  return result;
}

unint64_t sub_20A567C64()
{
  unint64_t result = qword_26AC77548;
  if (!qword_26AC77548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC77548);
  }
  return result;
}

unint64_t sub_20A567CBC()
{
  unint64_t result = qword_26AC77540;
  if (!qword_26AC77540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC77540);
  }
  return result;
}

uint64_t sub_20A567D10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C7572 && a2 == 0xE500000000000000;
  if (v2 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A900480 || (sub_20A8CF760() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000020A9004A0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_20A8CF760();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_20A567E54(void *a1)
{
  if (a1 && (unint64_t)objc_msgSend(a1, sel_horizontalSizeClass) >= 3)
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  else
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    uint64_t v1 = (void *)sub_20A8CEE20();
    uint64_t v2 = sub_20A8CEE40();

    return v2;
  }
  return result;
}

uint64_t sub_20A567F70(void *a1)
{
  if (a1 && (unint64_t)objc_msgSend(a1, sel_horizontalSizeClass) >= 3)
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  else
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    uint64_t v1 = (void *)sub_20A8CEE20();
    uint64_t v2 = sub_20A8CEE40();

    return v2;
  }
  return result;
}

uint64_t sub_20A56808C(void *a1)
{
  if (a1 && (unint64_t)objc_msgSend(a1, sel_horizontalSizeClass) >= 3)
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  else
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    uint64_t v1 = (void *)sub_20A8CEE20();
    uint64_t v2 = sub_20A8CEE40();

    return v2;
  }
  return result;
}

uint64_t sub_20A5681A4(void *a1)
{
  if (!a1
    || ((id v1 = objc_msgSend(a1, sel_horizontalSizeClass)) != 0 ? (v2 = v1 == (id)2) : (v2 = 1), v2 || v1 == (id)1))
  {
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    int v3 = (void *)sub_20A8CEE20();
    uint64_t v4 = sub_20A8CEE40();

    return v4;
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

id sub_20A5682EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 32);
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v2 + 16);
  *(void *)(a2 + 32) = v4;
  swift_retain();
  swift_retain();

  return a1;
}

uint64_t sub_20A568350(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v32 = *v1;
  uint64_t v5 = v1[5];
  uint64_t v4 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v5);
  uint64_t v31 = v4;
  uint64_t v6 = *(void *)(v4 + 8);
  unint64_t v7 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 8);
  void v34[3] = v5;
  v34[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  v7(a1, v5, v6);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v2 + 7, v2[10]);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 8);
  void v33[3] = v9;
  v33[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v33);
  uint64_t v13 = v11(a1, v9, v10);
  uint64_t v14 = v1[13];
  uint64_t v15 = v1[16];
  v35[0] = a1;
  v35[1] = v14;
  long long v30 = *((_OWORD *)v2 + 7);
  long long v36 = v30;
  uint64_t v37 = v15;
  double v16 = MEMORY[0x270FA5388](v13);
  objc_super v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v19 + 16))(v18, boxed_opaque_existential_1, v5, v16);
  double v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v24 + 16))(v23, v12, v9, v21);
  uint64_t v25 = sub_20A568E78((uint64_t)v18, (uint64_t)v23, (uint64_t)v35, v32, v5, v9, v31, v8);
  swift_retain();
  swift_retain();
  id v26 = a1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v25;
}

uint64_t sub_20A5685DC(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  objc_msgSend(a1, sel_setBackgroundColor_, v6);

  unint64_t v7 = *(void **)&a1[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_headingLabel];
  objc_msgSend(v7, sel_setNumberOfLines_, 2);
  objc_msgSend(v7, sel_setLineBreakMode_, 0);
  uint64_t v8 = *(void **)&a1[OBJC_IVAR____TtC8StocksUI15ForYouTitleView_subheadingLabel];
  objc_msgSend(v8, sel_setNumberOfLines_, 1);
  objc_msgSend(v8, sel_setLineBreakMode_, 4);
  uint64_t v9 = v2 + 2;
  uint64_t v11 = v2[5];
  uint64_t v10 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v11);
  (*(void (**)(uint64_t))(*(void *)(v10 + 16) + 496))(v11);
  sub_20A8C7940();
  uint64_t v13 = v2[5];
  uint64_t v12 = v2[6];
  __swift_project_boxed_opaque_existential_1(v9, v13);
  (*(void (**)(uint64_t))(*(void *)(v12 + 16) + 504))(v13);
  return sub_20A8C7950();
}

id sub_20A568748()
{
  id v1 = v0;
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  uint64_t v3 = (void **)MEMORY[0x263F814F0];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v4 = *v3;
  *(void *)(inited + 32) = *v3;
  uint64_t v5 = v0[12];
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[13];
  swift_bridgeObjectRetain();
  id v7 = v4;
  uint64_t v8 = v6(v5);
  uint64_t v9 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 40) = v8;
  uint64_t v10 = (void *)*MEMORY[0x263F81500];
  *(void *)(inited + 64) = v9;
  *(void *)(inited + 72) = v10;
  uint64_t v11 = v1 + 2;
  uint64_t v13 = v1[5];
  uint64_t v12 = v1[6];
  __swift_project_boxed_opaque_existential_1(v11, v13);
  uint64_t v14 = *(void *)(v12 + 16);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 224);
  id v16 = v10;
  uint64_t v17 = v15(v13, v14);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 80) = v17;
  sub_20A4CF8B0(inited);
  id v18 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v19 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v20 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initWithString_attributes_, v19, v20);

  return v21;
}

id sub_20A568908(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v6 = objc_allocWithZone(MEMORY[0x263F089B8]);
  swift_bridgeObjectRetain();
  id v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v6, sel_initWithString_, v7);

  if (a3)
  {
    id v9 = objc_allocWithZone(MEMORY[0x263F086A0]);
    id v10 = a3;
    uint64_t v11 = (void *)sub_20A8CE240();
    id v12 = objc_msgSend(v9, sel_initWithString_, v11);

    objc_msgSend(v8, sel_appendAttributedString_, v12);
    type metadata accessor for IconTextAttachment();
    uint64_t v13 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v13, sel_setImage_, v10);
    uint64_t v14 = &v13[OBJC_IVAR____TtC8StocksUI18IconTextAttachment_baselineAdjustment];
    *(void *)uint64_t v14 = 0x3FF0000000000000;
    v14[8] = 0;
    uint64_t v15 = &v13[OBJC_IVAR____TtC8StocksUI18IconTextAttachment_imageHeightOverride];
    *(void *)uint64_t v15 = 0x402A000000000000;
    v15[8] = 0;
    id v16 = objc_msgSend(self, sel_attributedStringWithAttachment_, v13);
    objc_msgSend(v8, sel_appendAttributedString_, v16);
  }
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  id v18 = (void **)MEMORY[0x263F81500];
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  uint64_t v19 = *v18;
  *(void *)(inited + 32) = *v18;
  uint64_t v20 = v4[5];
  uint64_t v21 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v20);
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 232);
  id v24 = v19;
  uint64_t v25 = v23(v20, v22);
  uint64_t v26 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
  *(void *)(inited + 40) = v25;
  uint64_t v27 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 64) = v26;
  *(void *)(inited + 72) = v27;
  uint64_t v28 = v4[12];
  long long v29 = (uint64_t (*)(uint64_t))v4[15];
  id v30 = v27;
  uint64_t v31 = v29(v28);
  *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  *(void *)(inited + 80) = v31;
  sub_20A4CF8B0(inited);
  type metadata accessor for Key(0);
  sub_20A4393AC();
  uint64_t v32 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_addAttributes_range_, v32, 0, objc_msgSend(v8, sel_length));

  return v8;
}

uint64_t sub_20A568BF8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  id v1 = *(void **)(v0 + 96);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ForYouTitleViewStyler()
{
  return self;
}

uint64_t destroy for ForYouTitleViewFontBook(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ForYouTitleViewFontBook(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 4);
  long long v4 = *a2;
  long long v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v3;
  id v6 = (id)v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ForYouTitleViewFontBook(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  long long v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ForYouTitleViewFontBook(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ForYouTitleViewFontBook()
{
  return &type metadata for ForYouTitleViewFontBook;
}

id sub_20A568E04()
{
  return sub_20A568748();
}

id sub_20A568E28(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_20A568908(a1, a2, a3);
}

uint64_t sub_20A568E4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A568350(a1);
  *a2 = result;
  return result;
}

uint64_t sub_20A568E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v23 = a5;
  uint64_t v24 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  uint64_t v20 = a6;
  uint64_t v21 = a8;
  uint64_t v15 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v15, a2, a6);
  uint64_t v16 = swift_allocObject();
  sub_20A42BEBC(&v22, v16 + 16);
  sub_20A42BEBC(&v19, v16 + 56);
  long long v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v16 + 96) = *(_OWORD *)a3;
  *(_OWORD *)(v16 + 112) = v17;
  *(void *)(v16 + 128) = *(void *)(a3 + 32);
  return v16;
}

uint64_t sub_20A568F88@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  if (*v3 > 1u) {
    goto LABEL_6;
  }
  id v7 = objc_msgSend(self, sel_currentDevice);
  id v8 = objc_msgSend(v7, sel_userInterfaceIdiom);

  if ((unint64_t)v8 + 1 > 6) {
    goto LABEL_7;
  }
  if (((1 << (v8 + 1)) & 0x5D) != 0)
  {
    sub_20A4342F4(a1, (uint64_t)v14);
    a3[3] = (uint64_t)&type metadata for LightTheme;
    a3[4] = (uint64_t)&off_26BE66578;
    uint64_t v9 = swift_allocObject();
    *a3 = v9;
    return sub_20A5B78C8(v14, v9 + 16);
  }
  if (v8)
  {
LABEL_7:
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  else
  {
LABEL_6:
    sub_20A4342F4(a1, (uint64_t)v14);
    a3[3] = (uint64_t)&type metadata for DarkTheme;
    a3[4] = (uint64_t)&off_26BE721B8;
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11 + 16;
    *a3 = v11;
    id v13 = a2;
    return sub_20A873DAC(v14, (uint64_t)a2, v12);
  }
  return result;
}

StocksUI::Theme_optional __swiftcall Theme.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20A8CF5B0();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t Theme.rawValue.getter()
{
  uint64_t v1 = 0x746867696CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1802658148;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_20A5691C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20A44EE8C(*a1, *a2);
}

unint64_t sub_20A5691D4()
{
  unint64_t result = qword_26763BD48;
  if (!qword_26763BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BD48);
  }
  return result;
}

uint64_t sub_20A569228()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A5692C0()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A569344()
{
  return sub_20A8CF8C0();
}

StocksUI::Theme_optional sub_20A5693D8(Swift::String *a1)
{
  return Theme.init(rawValue:)(*a1);
}

void sub_20A5693E4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x746867696CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 1802658148;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_20A569438(uint64_t a1)
{
  unint64_t v2 = sub_20A569940();
  uint64_t v3 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9D8](a1, v2, v3);
}

uint64_t sub_20A56948C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_20A569940();
  uint64_t v5 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9D0](a1, a2, v4, v5);
}

uint64_t sub_20A5694E8(uint64_t a1)
{
  unint64_t v2 = sub_20A569940();
  uint64_t v3 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9C8](a1, v2, v3);
}

unsigned char *storeEnumTagSinglePayload for Theme(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A569608);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme()
{
  return &type metadata for Theme;
}

uint64_t sub_20A569640()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_20A5697C0()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

unint64_t sub_20A569940()
{
  unint64_t result = qword_26763BD50;
  if (!qword_26763BD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BD50);
  }
  return result;
}

uint64_t sub_20A569994()
{
  type metadata accessor for AudioQueueCommandHandler();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for AudioPlaybackCommandHandler();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for FeedHeadlinePlaybackCommandHandler();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for FeedAudioTrackProgressCommandHandler();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for AudioSeekCommandHandler();
  sub_20A8C6290();
  swift_release();
  type metadata accessor for AudioNewsProxyCommandHandler();
  sub_20A8C6290();

  return swift_release();
}

uint64_t sub_20A569AF8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksAudioPlaybackQueue();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC694E0);
  uint64_t result = sub_20A8C5BB0();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC72760);
  uint64_t result = sub_20A8C5BB0();
  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC758A0);
  uint64_t result = sub_20A8C5BB0();
  if (!v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC7F900);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    type metadata accessor for AudioQueueCommandHandler();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    sub_20A42BEBC(&v10, v5 + 24);
    sub_20A42BEBC(&v8, v5 + 64);
    sub_20A42BEBC(&v6, v5 + 104);
    *(void *)(v5 + 144) = v4;
    return v5;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A569CE4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A570BA0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC7F900);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC758A0);
  uint64_t result = sub_20A8C5BB0();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  type metadata accessor for StocksAudioPlaybackQueue();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    type metadata accessor for AudioPlaybackCommandHandler();
    long long v6 = (void *)swift_allocObject();
    v6[2] = v3;
    v6[3] = v4;
    sub_20A42BEBC(&v7, (uint64_t)(v6 + 4));
    v6[9] = v5;
    return (uint64_t)v6;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A569E50(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A570BA0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC7F900);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC75890);
  uint64_t result = sub_20A8C5BB0();
  if (v8)
  {
    id v5 = objc_allocWithZone((Class)type metadata accessor for FeedHeadlinePlaybackCommandHandler());
    id v6 = sub_20A7CBA70(v3, v4, v9, v10, (uint64_t)v7);
    swift_release();

    swift_unknownObjectRelease();
    return (uint64_t)v6;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A569FF4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A570BA0();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&unk_26AC7F900);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (v9)
  {
    uint64_t v5 = v10;
    type metadata accessor for FeedAudioTrackProgressCommandHandler();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v4;
    swift_retain();
    id v7 = v4;
    sub_20A8C52B0();
    *(void *)(swift_allocObject() + 24) = v5;
    swift_unknownObjectWeakInit();
    sub_20A8C5D70();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    swift_release();

    swift_unknownObjectRelease();
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A56A1B4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC694E0);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC758A0);
    uint64_t result = sub_20A8C5BB0();
    if (v5)
    {
      type metadata accessor for AudioSeekCommandHandler();
      uint64_t v3 = swift_allocObject();
      sub_20A42BEBC(&v6, v3 + 16);
      sub_20A42BEBC(&v4, v3 + 56);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56A2B4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D42C0(0, (unint64_t *)&qword_26AC7FB20);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v15 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6B290);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v18;
  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v19;
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v17, v18);
  void v16[3] = v3;
  v16[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  uint64_t v7 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v3 - 8) + 16);
  ((void (*)(uint64_t *, void *, uint64_t))v7)(boxed_opaque_existential_1, v5, v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D42C0(0, &qword_26AC7F980);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = type metadata accessor for AudioNewsProxyCommandHandler();
    double v10 = MEMORY[0x270FA5388](v9);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    v7(v12, boxed_opaque_existential_1, v3, v10);
    uint64_t v13 = sub_20A610834(v15, (uint64_t)v12, v8, v9, v3, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return v13;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A56A4D0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6B290);
  uint64_t result = sub_20A8C5BB0();
  if (!v10)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_20A42BEBC(&v9, (uint64_t)v11);
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  if ((sub_20A8CD7C0() & 1) == 0) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AudioQueueCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v4 = result;
  swift_getObjectType();
  *(void *)&long long v9 = v4;
  sub_20A8CB790();
  sub_20A5708E4(0, (unint64_t *)&qword_26AC6B250, MEMORY[0x263F59C60]);
  sub_20A5703C0((unint64_t *)&unk_26AC758B0, (void (*)(uint64_t))type metadata accessor for AudioQueueCommandHandler);
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v4;
  sub_20A8CB730();
  sub_20A8C8CE0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AudioPlaybackCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v5 = result;
  *(void *)&long long v9 = result;
  sub_20A8CB770();
  sub_20A570B54(0, (unint64_t *)&qword_26AC6B260, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F59C60]);
  sub_20A5703C0(&qword_26AC77330, (void (*)(uint64_t))type metadata accessor for AudioPlaybackCommandHandler);
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v5;
  sub_20A8CB760();
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v5;
  sub_20A8CB750();
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v5;
  sub_20A8CB720();
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v5;
  sub_20A8CB6F0();
  sub_20A8C8CE0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedHeadlinePlaybackCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  long long v6 = (void *)result;
  *(void *)&long long v9 = result;
  sub_20A8CB690();
  sub_20A8CCE70();
  sub_20A8CCA50();
  sub_20A5703C0(&qword_26AC7C5C8, (void (*)(uint64_t))type metadata accessor for FeedHeadlinePlaybackCommandHandler);
  sub_20A8C8CF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for FeedAudioTrackProgressCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  *(void *)&long long v9 = result;
  sub_20A8CB6A0();
  sub_20A8CD0F0();
  sub_20A8CC9C0();
  sub_20A5703C0(&qword_26AC7D350, (void (*)(uint64_t))type metadata accessor for FeedAudioTrackProgressCommandHandler);
  sub_20A8C8CF0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AudioSeekCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = result;
  *(void *)&long long v9 = result;
  sub_20A8CB780();
  sub_20A570B54(0, (unint64_t *)&qword_26AC6B248, MEMORY[0x263F8D538], MEMORY[0x263F59C60]);
  sub_20A5703C0(&qword_26AC74470, (void (*)(uint64_t))type metadata accessor for AudioSeekCommandHandler);
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v7;
  sub_20A8CB700();
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v7;
  sub_20A8CB740();
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v7;
  sub_20A8CB710();
  sub_20A8C8CE0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for AudioNewsProxyCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = result;
  *(void *)&long long v9 = result;
  sub_20A8CB6E0();
  sub_20A5703C0(&qword_26AC78368, (void (*)(uint64_t))type metadata accessor for AudioNewsProxyCommandHandler);
  sub_20A8C8CE0();
  swift_release();
  *(void *)&long long v9 = v8;
  sub_20A8CB6D0();
  sub_20A8C8CE0();
  swift_release();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CreateWatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(void *)&long long v9 = result;
  if (qword_26AC67788 != -1) {
    swift_once();
  }
  type metadata accessor for CreateWatchlistCommandContext(0);
  sub_20A5703C0(&qword_26AC78F00, (void (*)(uint64_t))type metadata accessor for CreateWatchlistCommandHandler);
  sub_20A8C8CE0();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ViewWatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    *(void *)&long long v9 = result;
    if (qword_26AC6AC30 != -1) {
      swift_once();
    }
    sub_20A8C40E0();
    sub_20A5703C0(&qword_26AC78178, (void (*)(uint64_t))type metadata accessor for ViewWatchlistCommandHandler);
    sub_20A8C8CF0();
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_20A56AE60(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for ReadStoryCommandHandler);
}

uint64_t sub_20A56AE8C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A8C4990();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for ReadStoryCommandHandler();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v3;
      *(void *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56AF40(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ReadStoryCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    sub_20A8CB810();
    sub_20A4D42C0(0, (unint64_t *)&qword_26AC7F990);
    sub_20A5703C0((unint64_t *)&unk_26AC74CC0, (void (*)(uint64_t))type metadata accessor for ReadStoryCommandHandler);
    sub_20A8C8CE0();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56B058(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for WatchlistCommandHandler);
}

uint64_t sub_20A56B084(void *a1)
{
  return sub_20A56BE50(a1, (void (*)(void))sub_20A491334, (uint64_t (*)(void))type metadata accessor for WatchlistCommandHandler, (uint64_t (*)(unsigned char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_20A597644);
}

uint64_t sub_20A56B0C4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AC40 != -1) {
      swift_once();
    }
    sub_20A8C3F00();
    sub_20A5703C0(&qword_26AC75578, (void (*)(uint64_t))type metadata accessor for WatchlistCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56B1FC(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for WatchlistMembershipCommandHandler);
}

uint64_t sub_20A56B228(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    uint64_t v3 = v8;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
    uint64_t result = sub_20A8C5BB0();
    if (v6)
    {
      type metadata accessor for WatchlistMembershipCommandHandler();
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 64) = 0;
      swift_unknownObjectWeakInit();
      *(void *)(v4 + 64) = v3;
      swift_unknownObjectWeakAssign();
      sub_20A4342F4((uint64_t)v5, v4 + 16);
      __swift_project_boxed_opaque_existential_1(v5, v6);
      sub_20A5703C0(&qword_26AC7C510, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandHandler);
      swift_retain();
      sub_20A8C3670();
      swift_release();
      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56B3C0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for WatchlistMembershipCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABF8 != -1) {
      swift_once();
    }
    type metadata accessor for WatchlistMembershipCommandContext(0);
    sub_20A5703C0(&qword_26AC7C508, (void (*)(uint64_t))type metadata accessor for WatchlistMembershipCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56B4F8(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for CreateWatchlistCommandHandler);
}

uint64_t sub_20A56B524(void *a1)
{
  return sub_20A56D844(a1, (void (*)(void))type metadata accessor for CreateWatchlistCommandHandler);
}

uint64_t sub_20A56B53C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CreateWatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC67788 != -1) {
      swift_once();
    }
    type metadata accessor for CreateWatchlistCommandContext(0);
    sub_20A5703C0(&qword_26AC78F00, (void (*)(uint64_t))type metadata accessor for CreateWatchlistCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56B66C(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for ViewWatchlistCommandHandler);
}

uint64_t sub_20A56B698(void *a1)
{
  return sub_20A56B874(a1, (unint64_t *)&unk_26AC68E50, MEMORY[0x263F7AC60], (void (*)(void))type metadata accessor for ViewWatchlistCommandHandler, (void (*)(unsigned char *, uint64_t))sub_20A42BEBC);
}

uint64_t sub_20A56B6D4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ViewWatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AC30 != -1) {
      swift_once();
    }
    sub_20A8C40E0();
    sub_20A5703C0(&qword_26AC78178, (void (*)(uint64_t))type metadata accessor for ViewWatchlistCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56B80C(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for ViewNextPreviousWatchlistCommandHandler);
}

uint64_t sub_20A56B838(void *a1)
{
  return sub_20A56B874(a1, (unint64_t *)&unk_26AC68E50, MEMORY[0x263F7AC60], (void (*)(void))type metadata accessor for ViewNextPreviousWatchlistCommandHandler, (void (*)(unsigned char *, uint64_t))sub_20A42BEBC);
}

uint64_t sub_20A56B874(void *a1, unint64_t *a2, uint64_t a3, void (*a4)(void), void (*a5)(unsigned char *, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, a2);
  uint64_t result = sub_20A8C5BB0();
  if (v11)
  {
    a4(0);
    uint64_t v9 = swift_allocObject();
    a5(v10, v9 + 16);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56B938(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ViewNextPreviousWatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AC58 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC7DFF0, (void (*)(uint64_t))type metadata accessor for ViewNextPreviousWatchlistCommandHandler);
    sub_20A8C8CE0();
    if (qword_26AC6AC00 != -1) {
      swift_once();
    }
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56BAC8(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for SortWatchlistCommandHandler);
}

uint64_t sub_20A56BAF4(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (v20)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v3 = v17;
    if (v17)
    {
      uint64_t v4 = type metadata accessor for SortWatchlistCommandHandler();
      uint64_t v5 = v18;
      uint64_t v6 = __swift_project_boxed_opaque_existential_1(v16, v17);
      v15[3] = v3;
      v15[4] = v5;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
      uint64_t v8 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v3 - 8) + 16);
      uint64_t v9 = ((uint64_t (*)(uint64_t *, void *, uint64_t))v8)(boxed_opaque_existential_1, v6, v3);
      double v10 = MEMORY[0x270FA5388](v9);
      uint64_t v12 = (char *)&v15[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      v8(v12, boxed_opaque_existential_1, v3, v10);
      uint64_t v13 = sub_20A4486E8(&v19, (uint64_t)v12, v4, v3, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56BCAC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for SortWatchlistCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AC20 != -1) {
      swift_once();
    }
    type metadata accessor for SortWatchlistCommandContext(0);
    sub_20A5703C0(&qword_26AC77908, (void (*)(uint64_t))type metadata accessor for SortWatchlistCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56BDE4(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for ChangeWatchlistDisplayCommandHandler);
}

uint64_t sub_20A56BE10(void *a1)
{
  return sub_20A56BE50(a1, MEMORY[0x263F24E68], (uint64_t (*)(void))type metadata accessor for ChangeWatchlistDisplayCommandHandler, (uint64_t (*)(unsigned char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))sub_20A597644);
}

uint64_t sub_20A56BE50(void *a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(unsigned char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v28)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v21 = a4;
  long long v22 = a2;
  uint64_t v20 = a3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v9 = v25;
  if (!v25)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v10 = v26;
  uint64_t v11 = __swift_project_boxed_opaque_existential_1(v24, v25);
  v23[3] = v9;
  v23[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  uint64_t v13 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v9 - 8) + 16);
  ((void (*)(uint64_t *, void *, uint64_t))v13)(boxed_opaque_existential_1, v11, v9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v22(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v15 = v20(0);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    v13(v18, boxed_opaque_existential_1, v9, v16);
    uint64_t v19 = v21(v27, v18, v14, v15, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return v19;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_20A56C090(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ChangeWatchlistDisplayCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AC08 != -1) {
      swift_once();
    }
    type metadata accessor for ChangeWatchlistDisplayContext(0);
    sub_20A5703C0(&qword_26AC7D1C8, (void (*)(uint64_t))type metadata accessor for ChangeWatchlistDisplayCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56C1C8(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for CurrencyDisplayCommandHandler);
}

uint64_t sub_20A56C1F4()
{
  type metadata accessor for CurrencyDisplayCommandHandler();

  return swift_allocObject();
}

uint64_t sub_20A56C228(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CurrencyDisplayCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AB98 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC790C0, (void (*)(uint64_t))type metadata accessor for CurrencyDisplayCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56C354(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for CopyLinkCommandHandler);
}

uint64_t sub_20A56C380()
{
  type metadata accessor for CopyLinkCommandHandler();

  return swift_allocObject();
}

uint64_t sub_20A56C3B4(uint64_t a1, void *a2)
{
  return sub_20A56C5D4(a1, a2, (void (*)(void))type metadata accessor for CopyLinkCommandHandler, MEMORY[0x263F7E080], (void (*)(void))sub_20A570B20);
}

uint64_t sub_20A56C3F4(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for CopyLink2CommandHandler);
}

uint64_t sub_20A56C420()
{
  type metadata accessor for CopyLink2CommandHandler();

  return swift_allocObject();
}

uint64_t sub_20A56C454(uint64_t a1, void *a2)
{
  return sub_20A56C5D4(a1, a2, (void (*)(void))type metadata accessor for CopyLink2CommandHandler, MEMORY[0x263F7E088], (void (*)(void))sub_20A570AEC);
}

uint64_t sub_20A56C494(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for CopyArticleCommandHandler);
}

uint64_t sub_20A56C4C0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4D42C0(0, (unint64_t *)&qword_26AC7FB20);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v3 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4D42C0(0, &qword_26AC7FA40);
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v4 = result;
      type metadata accessor for CopyArticleCommandHandler();
      uint64_t result = swift_allocObject();
      *(void *)(result + 16) = v3;
      *(void *)(result + 24) = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56C594(uint64_t a1, void *a2)
{
  return sub_20A56C5D4(a1, a2, (void (*)(void))type metadata accessor for CopyArticleCommandHandler, MEMORY[0x263F596D8], (void (*)(void))sub_20A570AB8);
}

uint64_t sub_20A56C5D4(uint64_t a1, void *a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  a3(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A8CB840();
    a4();
    a5();
    sub_20A8C8360();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56C6B0(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for ResetIdentifierCommandHandler);
}

uint64_t sub_20A56C6DC(void *a1)
{
  return sub_20A56CA30(a1, (void (*)(void))type metadata accessor for IdentificationResetManager, (uint64_t (*)(void))type metadata accessor for ResetIdentifierCommandHandler, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_20A581544);
}

uint64_t sub_20A56C71C(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ResetIdentifierCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABF0 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC79520, (void (*)(uint64_t))type metadata accessor for ResetIdentifierCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56C840(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for PrivacyCommandHandler);
}

uint64_t sub_20A56C86C()
{
  type metadata accessor for PrivacyCommandHandler();

  return swift_allocObject();
}

uint64_t sub_20A56C8A0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for PrivacyCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABE0 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC72E68, (void (*)(uint64_t))type metadata accessor for PrivacyCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56C9C4(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for ProvideFeedbackCommandHandler);
}

uint64_t sub_20A56C9F0(void *a1)
{
  return sub_20A56CA30(a1, (void (*)(void))sub_20A491334, (uint64_t (*)(void))type metadata accessor for ProvideFeedbackCommandHandler, (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_20A581544);
}

uint64_t sub_20A56CA30(void *a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a2(0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v9 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&unk_26AC68E90);
    uint64_t result = sub_20A8C5BB0();
    uint64_t v10 = v23;
    if (v23)
    {
      uint64_t v11 = a3(0);
      uint64_t v12 = v24;
      uint64_t v13 = __swift_project_boxed_opaque_existential_1(v22, v23);
      v21[3] = v10;
      void v21[4] = v12;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
      uint64_t v15 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v10 - 8) + 16);
      uint64_t v16 = ((uint64_t (*)(uint64_t *, void *, uint64_t))v15)(boxed_opaque_existential_1, v13, v10);
      double v17 = MEMORY[0x270FA5388](v16);
      uint64_t v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      v15(v19, boxed_opaque_existential_1, v10, v17);
      uint64_t v20 = a4(v9, v19, v11, v10, v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      return v20;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56CBF4(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for ProvideFeedbackCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABC8 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC81678, (void (*)(uint64_t))type metadata accessor for ProvideFeedbackCommandHandler);
    sub_20A8C8CF0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56CD20(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for DataRefreshCommandHandler);
}

uint64_t sub_20A56CD4C(void *a1)
{
  return sub_20A56B874(a1, (unint64_t *)&unk_26AC73880, (uint64_t)&protocol descriptor for DataRefreshManagerType, (void (*)(void))type metadata accessor for DataRefreshCommandHandler, (void (*)(unsigned char *, uint64_t))sub_20A42BEBC);
}

uint64_t sub_20A56CD88(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DataRefreshCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABB0 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC761A8, (void (*)(uint64_t))type metadata accessor for DataRefreshCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56CEAC(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for BilingualFeedCommandHandler);
}

uint64_t sub_20A56CED8(void *a1)
{
  return sub_20A56B874(a1, &qword_26AC68E40, MEMORY[0x263F7AC28], (void (*)(void))type metadata accessor for BilingualFeedCommandHandler, (void (*)(unsigned char *, uint64_t))sub_20A42BEBC);
}

uint64_t sub_20A56CF14(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for BilingualFeedCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABA0 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC77488, (void (*)(uint64_t))type metadata accessor for BilingualFeedCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56D038(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for DebugMenuCommandHandler);
}

uint64_t sub_20A56D064()
{
  type metadata accessor for DebugMenuCommandHandler();

  return swift_allocObject();
}

uint64_t sub_20A56D098(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for DebugMenuCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABC0 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC74680, (void (*)(uint64_t))type metadata accessor for DebugMenuCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56D1BC(uint64_t a1)
{
  return sub_20A56E274(a1, sub_20A570A70);
}

uint64_t sub_20A56D1E8(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    sub_20A570A70(0);
    swift_allocObject();
    return sub_20A8CA720();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A56D278(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_20A570A70(0);
    if (sub_20A8C5BA0())
    {
      swift_getObjectType();
      if (qword_26AC81128 != -1) {
        swift_once();
      }
      type metadata accessor for StocksActivity(0);
      sub_20A5703C0((unint64_t *)&unk_26AC810F0, sub_20A570A70);
      sub_20A8C8CE0();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_20A56D3E8()
{
  uint64_t v0 = sub_20A8C6410();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A570CF0(0, &qword_26AC6A628, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7DC28]);
  sub_20A8C6290();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D000], v0);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_20A56D558(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6A0A0);
    uint64_t result = sub_20A8C5BB0();
    if (v3)
    {
      sub_20A570CF0(0, &qword_26AC6A628, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7DC28]);
      swift_allocObject();
      return sub_20A8CA420();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A56D67C(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_20A570CF0(0, &qword_26AC6A628, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7DC28]);
    if (sub_20A8C5BA0())
    {
      swift_getObjectType();
      if (qword_26AC81110 != -1) {
        swift_once();
      }
      type metadata accessor for StocksActivity(0);
      sub_20A5709D4();
      sub_20A8C8CE0();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_20A56D800(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for OpenMainWindowCommandHandler);
}

uint64_t sub_20A56D82C(void *a1)
{
  return sub_20A56D844(a1, (void (*)(void))type metadata accessor for OpenMainWindowCommandHandler);
}

uint64_t sub_20A56D844(void *a1, void (*a2)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v4 = result;
    a2(0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A56D8BC(uint64_t a1, void *a2)
{
  id v3 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v4 = objc_msgSend(v3, sel_supportsMultipleScenes);

  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    type metadata accessor for OpenMainWindowCommandHandler();
    if (sub_20A8C5BA0())
    {
      swift_getObjectType();
      if (qword_26AC81118 != -1) {
        swift_once();
      }
      sub_20A5703C0(&qword_26AC811C0, (void (*)(uint64_t))type metadata accessor for OpenMainWindowCommandHandler);
      sub_20A8C8CE0();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_20A56DA20(uint64_t a1)
{
  return sub_20A56E274(a1, MEMORY[0x263F7D708]);
}

uint64_t sub_20A56DA4C(void *a1)
{
  uint64_t v2 = sub_20A8C8560();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26AC69E48 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_project_value_buffer(v2, (uint64_t)qword_26AC69E30);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6A648);
  uint64_t result = sub_20A8C5BB0();
  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6A0A0);
    uint64_t result = sub_20A8C5BB0();
    if (v9)
    {
      sub_20A8C9250();
      swift_allocObject();
      return sub_20A8C9240();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56DC20(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_20A8C9250();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    sub_20A57097C();
    sub_20A8CB5D0();
    sub_20A8CB480();
    sub_20A8C8CE0();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56DD00()
{
  return swift_release();
}

uint64_t sub_20A56DDEC(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for StocksSharingCommandHandler);
}

uint64_t sub_20A56DE18(void *a1)
{
  return sub_20A56B874(a1, &qword_26AC6A0A0, MEMORY[0x263F7D590], (void (*)(void))type metadata accessor for StocksSharingCommandHandler, (void (*)(unsigned char *, uint64_t))sub_20A42BEBC);
}

uint64_t sub_20A56DE54(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksSharingCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AB90 != -1) {
      swift_once();
    }
    type metadata accessor for CommandShareContent(0);
    sub_20A5703C0(&qword_26AC6C000, (void (*)(uint64_t))type metadata accessor for StocksSharingCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56DF84(uint64_t a1)
{
  return sub_20A56DFB0(a1, (void (*)(void, double))type metadata accessor for StocksSharingCompleteCommandHandler);
}

uint64_t sub_20A56DFB0(uint64_t a1, void (*a2)(void, double))
{
  uint64_t v3 = sub_20A8C6410();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(0, v5);
  sub_20A8C6290();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x263F7D000], v3);
  sub_20A8C59B0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20A56E0E4()
{
  type metadata accessor for StocksSharingCompleteCommandHandler();

  return swift_allocObject();
}

uint64_t sub_20A56E118(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StocksSharingCompleteCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6AB88 != -1) {
      swift_once();
    }
    type metadata accessor for CommandStocksShareContentComplete(0);
    sub_20A5703C0(&qword_26AC6C448, (void (*)(uint64_t))type metadata accessor for StocksSharingCompleteCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56E248(uint64_t a1)
{
  return sub_20A56E274(a1, (void (*)(void))type metadata accessor for EarningsShownCommandHandler);
}

uint64_t sub_20A56E274(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_20A8C6290();

  return swift_release();
}

uint64_t sub_20A56E2CC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC67650);
  uint64_t result = sub_20A8C5BB0();
  if (v6)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A491334();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v3 = result;
      type metadata accessor for EarningsShownCommandHandler();
      uint64_t v4 = swift_allocObject();
      sub_20A42BEBC(&v5, v4 + 16);
      *(void *)(v4 + 56) = v3;
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A56E3AC(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for EarningsShownCommandHandler();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    swift_getObjectType();
    if (qword_26AC6ABE8 != -1) {
      swift_once();
    }
    sub_20A5703C0(&qword_26AC77618, (void (*)(uint64_t))type metadata accessor for EarningsShownCommandHandler);
    sub_20A8C8CE0();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A56E4D0(uint64_t a1)
{
  return sub_20A56DFB0(a1, (void (*)(void, double))type metadata accessor for CommandObserver);
}

uint64_t sub_20A56E4FC(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v24;
  if (!v24)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A3C0);
  uint64_t result = sub_20A8C5BB0();
  if (!v23)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F9E0);
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v6 = (void *)result;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = (void *)((char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    uint64_t v13 = type metadata accessor for AnalyticsChannelDataFactory();
    v21[3] = v13;
    void v21[4] = &off_26BE69918;
    v21[0] = v12;
    type metadata accessor for CommandObserver();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v13);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_20A57050C(v3, v4, v5, *v18, v6, v14);
    swift_unknownObjectRelease();
    swift_release();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return (uint64_t)v20;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_20A56E820(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for CommandObserver();
  sub_20A8C5BA0();

  return swift_release();
}

uint64_t sub_20A56E880(uint64_t a1)
{
  return sub_20A56DFB0(a1, (void (*)(void, double))type metadata accessor for HeadlineOpenInNewWindowCommandHandler);
}

uint64_t sub_20A56E8AC(void *a1)
{
  return sub_20A56E948(a1, (void (*)(void))type metadata accessor for HeadlineOpenInNewWindowCommandHandler);
}

void sub_20A56E8C4(uint64_t a1, void *a2)
{
}

uint64_t sub_20A56E904(uint64_t a1)
{
  return sub_20A56DFB0(a1, (void (*)(void, double))type metadata accessor for HeadlineOpenInNewTabCommandHandler);
}

uint64_t sub_20A56E930(void *a1)
{
  return sub_20A56E948(a1, (void (*)(void))type metadata accessor for HeadlineOpenInNewTabCommandHandler);
}

uint64_t sub_20A56E948(void *a1, void (*a2)(void))
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A491334();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC6A0A0);
    uint64_t result = sub_20A8C5BB0();
    if (v8)
    {
      sub_20A42BEBC(&v7, (uint64_t)v9);
      a2(0);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v5;
      sub_20A570408((uint64_t)v9, v6 + 24);
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_20A56EA44(uint64_t a1, void *a2)
{
}

void sub_20A56EA84(uint64_t a1, void *a2, void (*a3)(void), void (*a4)(void), void (*a5)(void))
{
  id v9 = objc_msgSend(self, sel_sharedApplication);
  unsigned int v10 = objc_msgSend(v9, sel_supportsMultipleScenes);

  if (v10)
  {
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    a3(0);
    if (sub_20A8C5BA0())
    {
      swift_getObjectType();
      sub_20A8CB840();
      a4();
      sub_20A8CD4F0();
      a5();
      sub_20A8C8CE0();
      swift_release();
      swift_release();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for CommandAssembly()
{
  return self;
}

uint64_t sub_20A56EBF4(uint64_t a1)
{
  uint64_t v2 = sub_20A8C5C10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v6 = sub_20A4301D4(0, (unint64_t *)&qword_26AC6A080);
  uint64_t v7 = *MEMORY[0x263F7CDE0];
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v56 = v3 + 104;
  v8(v5, v7, v2);
  uint64_t v55 = v8;
  sub_20A8C6300();
  id v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v53 = v3 + 8;
  v9(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  uint64_t v51 = a1;
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v8(v5, v7, v2);
  sub_20A8C6300();
  uint64_t v52 = v9;
  v9(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v55(v5, v7, v2);
  sub_20A8C6300();
  v9(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  unsigned int v54 = v7;
  unsigned int v10 = v55;
  v55(v5, v7, v2);
  uint64_t v57 = v6;
  sub_20A8C6300();
  v52(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v10(v5, v7, v2);
  sub_20A8C6300();
  uint64_t v11 = v52;
  v52(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v12 = v54;
  v10(v5, v54, v2);
  sub_20A8C6300();
  v11(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v10(v5, v12, v2);
  sub_20A8C6300();
  v52(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v10(v5, v12, v2);
  sub_20A8C6300();
  uint64_t v13 = v52;
  v52(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v14 = v54;
  v55(v5, v54, v2);
  sub_20A8C6300();
  v13(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v15 = v14;
  uint64_t v50 = v2;
  double v16 = v55;
  v55(v5, v15, v2);
  sub_20A8C6300();
  v13(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  sub_20A8C8370();
  uint64_t v17 = v54;
  uint64_t v18 = v50;
  v16(v5, v54, v50);
  sub_20A8C62F0();
  uint64_t v19 = v52;
  v52(v5, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v20 = v55;
  v55(v5, v17, v18);
  sub_20A8C62F0();
  v19(v5, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v21 = v54;
  v20(v5, v54, v18);
  sub_20A8C62F0();
  uint64_t v22 = v18;
  uint64_t v23 = v18;
  uint64_t v24 = v52;
  v52(v5, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v25 = v23;
  uint64_t v26 = v23;
  uint64_t v27 = v55;
  v55(v5, v21, v26);
  sub_20A8C6300();
  v24(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v28 = v54;
  v27(v5, v54, v25);
  sub_20A8C6300();
  long long v29 = v52;
  v52(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  id v30 = v55;
  v55(v5, v28, v25);
  sub_20A8C6300();
  v29(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v31 = v54;
  v30(v5, v54, v25);
  sub_20A8C6300();
  uint64_t v32 = v52;
  v52(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v55(v5, v31, v25);
  sub_20A8C6300();
  v32(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5AC0();
  if (sub_20A8C5AB0())
  {
    sub_20A8C5CD0();
    sub_20A8C6280();
    swift_release();
    sub_20A8C5CE0();
    __swift_project_boxed_opaque_existential_1(v58, v59);
    v55(v5, v54, v25);
    sub_20A8C6300();
    v52(v5, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v55(v5, v54, v25);
  sub_20A8C6300();
  v52(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v33 = v54;
  uint64_t v34 = v55;
  v55(v5, v54, v25);
  sub_20A8C6300();
  uint64_t v35 = v52;
  v52(v5, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v36 = v33;
  uint64_t v37 = v50;
  v34(v5, v36, v50);
  sub_20A8C6300();
  v35(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v38 = v54;
  uint64_t v39 = v55;
  v55(v5, v54, v37);
  sub_20A8C6300();
  v52(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v39(v5, v38, v37);
  sub_20A8C6300();
  uint64_t v40 = v52;
  v52(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v39(v5, v54, v37);
  sub_20A8C6300();
  v40(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v41 = v54;
  v39(v5, v54, v37);
  sub_20A8C6300();
  v40(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v42 = v41;
  v55(v5, v41, v37);
  sub_20A8C6300();
  uint64_t v43 = v40;
  v40(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v44 = v42;
  uint64_t v45 = v55;
  v55(v5, v44, v37);
  sub_20A8C6300();
  v40(v5, v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  uint64_t v46 = v54;
  uint64_t v47 = v50;
  v45(v5, v54, v50);
  sub_20A8C6300();
  v43(v5, v47);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  sub_20A8C5CD0();
  sub_20A8C6280();
  swift_release();
  sub_20A8C5CE0();
  __swift_project_boxed_opaque_existential_1(v58, v59);
  v55(v5, v46, v47);
  sub_20A8C6300();
  v43(v5, v47);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
}

uint64_t sub_20A57038C()
{
  return sub_20A5703C0((unint64_t *)&unk_26763BD58, (void (*)(uint64_t))type metadata accessor for HeadlineOpenInNewTabCommandHandler);
}

uint64_t sub_20A5703C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A570408(uint64_t a1, uint64_t a2)
{
  sub_20A57046C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20A57046C()
{
  if (!qword_26763BD68)
  {
    sub_20A4301D4(255, &qword_26AC6A0A0);
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BD68);
    }
  }
}

uint64_t sub_20A5704D8()
{
  return sub_20A5703C0(&qword_26763BD70, (void (*)(uint64_t))type metadata accessor for HeadlineOpenInNewWindowCommandHandler);
}

void *sub_20A57050C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  v15[3] = type metadata accessor for AnalyticsChannelDataFactory();
  v15[4] = &off_26BE69918;
  v15[0] = a4;
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  sub_20A4342F4((uint64_t)v15, (uint64_t)(a6 + 5));
  a6[10] = a5;
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_retain();
  id v12 = a5;
  sub_20A8CB6E0();
  sub_20A5708E4(0, (unint64_t *)&qword_26AC6B250, MEMORY[0x263F59C60]);
  swift_retain();
  sub_20A8C8CA0();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_20A8CB6D0();
  swift_retain();
  sub_20A8C8CA0();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_20A8CB7A0();
  sub_20A5708E4(0, (unint64_t *)&unk_26AC6B230, MEMORY[0x263F59C48]);
  sub_20A4AE1B4();
  swift_retain();
  sub_20A8C8C90();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_20A8CB7A0();
  swift_retain();
  sub_20A8C8C90();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_20A8CB7B0();
  sub_20A8CD950();
  swift_retain();
  sub_20A8C8CA0();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_20A8CB7B0();
  swift_retain();
  sub_20A8C8CA0();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  if (qword_26AC6AB88 != -1) {
    swift_once();
  }
  type metadata accessor for CommandStocksShareContentComplete(0);
  swift_retain();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return a6;
}

uint64_t sub_20A5708DC(uint64_t a1, uint64_t a2)
{
  return sub_20A7DB8D0(a1, a2, v2);
}

void sub_20A5708E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_20A4D42C0(255, (unint64_t *)&qword_26AC7F990);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_20A570954(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_20A555A20(a1, a2, a3, v3);
}

uint64_t sub_20A57095C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_20A555DF0(a1, a2, a3, v3);
}

uint64_t sub_20A570964(uint64_t a1, uint64_t a2)
{
  return sub_20A4EDB60(a1, a2, v2);
}

uint64_t sub_20A57096C(uint64_t a1, uint64_t a2)
{
  return sub_20A4EE1DC(a1, a2, v2);
}

uint64_t sub_20A570974(uint64_t a1, uint64_t a2)
{
  return sub_20A886778(a1, a2);
}

void sub_20A57097C()
{
  if (!qword_26AC6AB70)
  {
    sub_20A8CB480();
    unint64_t v0 = sub_20A8CB5B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AB70);
    }
  }
}

unint64_t sub_20A5709D4()
{
  unint64_t result = qword_26AC810E0;
  if (!qword_26AC810E0)
  {
    sub_20A570CF0(255, &qword_26AC6A628, type metadata accessor for StocksActivity, sub_20A46A2C8, MEMORY[0x263F7DC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC810E0);
  }
  return result;
}

void sub_20A570A70(uint64_t a1)
{
}

uint64_t sub_20A570AB8()
{
  return sub_20A5703C0(&qword_26AC760F8, (void (*)(uint64_t))type metadata accessor for CopyArticleCommandHandler);
}

uint64_t sub_20A570AEC()
{
  return sub_20A5703C0(&qword_26AC745E0, (void (*)(uint64_t))type metadata accessor for CopyLink2CommandHandler);
}

uint64_t sub_20A570B20()
{
  return sub_20A5703C0(&qword_26AC73748, (void (*)(uint64_t))type metadata accessor for CopyLinkCommandHandler);
}

void sub_20A570B54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_20A570BA0()
{
  if (!qword_26AC694A8)
  {
    sub_20A570CF0(255, &qword_26AC693B0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_20A570D70, MEMORY[0x263F589D0]);
    type metadata accessor for StocksAudioPlaybackQueue();
    type metadata accessor for AudioListeningProgressAdapter();
    sub_20A570DA4();
    sub_20A5703C0(&qword_26AC6BCB8, (void (*)(uint64_t))type metadata accessor for StocksAudioPlaybackQueue);
    sub_20A5703C0(&qword_26AC78CB0, (void (*)(uint64_t))type metadata accessor for AudioListeningProgressAdapter);
    unint64_t v0 = sub_20A8C5330();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC694A8);
    }
  }
}

void sub_20A570CF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A570D70()
{
  return sub_20A5703C0((unint64_t *)&unk_26AC6B910, (void (*)(uint64_t))type metadata accessor for StocksAudioTrack);
}

unint64_t sub_20A570DA4()
{
  unint64_t result = qword_26AC693A0;
  if (!qword_26AC693A0)
  {
    sub_20A570CF0(255, &qword_26AC693B0, (uint64_t (*)(uint64_t))type metadata accessor for StocksAudioTrack, sub_20A570D70, MEMORY[0x263F589D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC693A0);
  }
  return result;
}

uint64_t sub_20A570E40()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A570E78(uint64_t a1, uint64_t a2)
{
  return sub_20A665978(a1, a2, v2);
}

unsigned char *storeEnumTagSinglePayload for TickerLayoutSectionDescriptor(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A570F1CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerLayoutSectionDescriptor()
{
  return &type metadata for TickerLayoutSectionDescriptor;
}

uint64_t sub_20A570F58(uint64_t a1)
{
  unint64_t v2 = sub_20A571030();

  return MEMORY[0x270F7C578](a1, v2);
}

uint64_t sub_20A570F94()
{
  sub_20A52A6A0();

  return sub_20A8CACE0();
}

unint64_t sub_20A570FDC()
{
  unint64_t result = qword_26763BD78;
  if (!qword_26763BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BD78);
  }
  return result;
}

unint64_t sub_20A571030()
{
  unint64_t result = qword_26763BD80;
  if (!qword_26763BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BD80);
  }
  return result;
}

uint64_t type metadata accessor for DataRefreshCommandHandler()
{
  return self;
}

uint64_t sub_20A5710A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t type metadata accessor for FeatureAvailability()
{
  return self;
}

uint64_t sub_20A571124(uint64_t a1, uint64_t a2)
{
  return sub_20A571194(a1, a2, MEMORY[0x263F7AD20]);
}

uint64_t sub_20A571140(uint64_t a1, uint64_t a2)
{
  return sub_20A571194(a1, a2, MEMORY[0x263F7AD28]);
}

uint64_t sub_20A57117C(uint64_t a1, uint64_t a2)
{
  return sub_20A571194(a1, a2, MEMORY[0x263F7AD40]);
}

uint64_t sub_20A571194(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(*(void *)v3 + 40);
  uint64_t v6 = *(void *)(*(void *)v3 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v3 + 16), v5);
  return a3(v5, v6) & 1;
}

uint64_t sub_20A5711F0()
{
  sub_20A8C4250();
  sub_20A8C4230();
  sub_20A8C4190();
  char v0 = sub_20A8C4240();
  swift_release();
  swift_release();
  return v0 & 1;
}

uint64_t sub_20A571258(uint64_t a1)
{
  uint64_t v3 = (int *)type metadata accessor for TickerPrewarmBlueprintModifier();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  sub_20A4342F4(v1 + 16, (uint64_t)&v15 - v7 + 16);
  sub_20A4342F4(v1 + 56, (uint64_t)(v8 + 7));
  sub_20A4342F4(v1 + 136, (uint64_t)(v8 + 12));
  sub_20A4342F4(v1 + 96, (uint64_t)v8 + v3[9]);
  uint64_t v9 = (char *)v8 + v3[8];
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  *uint64_t v8 = 0x6D726177657250;
  v8[1] = 0xE700000000000000;
  unint64_t v11 = (char *)v8 + v3[10];
  id v12 = objc_msgSend(self, sel_sharedApplication);
  LOBYTE(a1) = objc_msgSend(v12, sel_isRunningPerformanceTest);

  *(void *)unint64_t v11 = 0x4008000000000000;
  *((void *)v11 + 1) = 4;
  unsigned char v11[16] = a1;
  sub_20A572790((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  sub_20A57258C();
  swift_allocObject();
  sub_20A5727F8(&qword_26AC7A3A8, (void (*)(uint64_t))type metadata accessor for TickerPrewarmBlueprintModifier);
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A572644((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TickerPrewarmBlueprintModifier);
  return v13;
}

uint64_t sub_20A571478(uint64_t a1)
{
  uint64_t v37 = a1;
  sub_20A5726A4(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_20A8C34C0();
  uint64_t v35 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v44 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C3410();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C40E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v39 = type metadata accessor for TickerWatchlistChangeBlueprintModifier();
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = (uint64_t)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v32 - v17;
  sub_20A4342F4(v1 + 56, (uint64_t)v48);
  sub_20A4342F4(v1 + 96, (uint64_t)v47);
  sub_20A4342F4(v1 + 136, (uint64_t)v46);
  uint64_t v19 = *(void *)(v1 + 40);
  uint64_t v32 = (void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), v19);
  sub_20A8C3600();
  uint64_t v40 = v8;
  sub_20A8C4060();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v21 = v14;
  uint64_t v22 = v35;
  uint64_t v34 = v9;
  v20(v21, v9);
  uint64_t v45 = sub_20A8C2E10();
  sub_20A5726D8(0, &qword_26AC698B8, (uint64_t (*)(uint64_t))sub_20A4C76AC, MEMORY[0x263F7D028]);
  swift_allocObject();
  uint64_t v36 = sub_20A8C6580();
  sub_20A8C2E40();
  uint64_t v23 = v38;
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 48))(v4, 1) == 1)
  {
    __swift_project_boxed_opaque_existential_1(v32, *(void *)(v1 + 40));
    uint64_t v24 = v33;
    sub_20A8C3600();
    sub_20A8C40D0();
    v20(v24, v34);
    sub_20A572644((uint64_t)v4, (uint64_t (*)(void))sub_20A5726A4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v44, v4, v23);
  }
  uint64_t v25 = v23;
  *(void *)uint64_t v18 = 0x73696C6863746157;
  *((void *)v18 + 1) = 0xEF65676E61684374;
  uint64_t v26 = (int *)v39;
  uint64_t v27 = &v18[*(int *)(v39 + 44)];
  id v28 = objc_msgSend(self, sel_sharedApplication);
  unsigned __int8 v29 = objc_msgSend(v28, sel_isRunningPerformanceTest);

  *(void *)uint64_t v27 = 0x4008000000000000;
  *((void *)v27 + 1) = 4;
  v27[16] = v29;
  sub_20A42BEBC(v48, (uint64_t)(v18 + 16));
  sub_20A42BEBC(v47, (uint64_t)(v18 + 56));
  sub_20A42BEBC(v46, (uint64_t)(v18 + 96));
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v18[v26[8]], v40, v43);
  *(void *)&v18[v26[9]] = v36;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v18[v26[10]], v44, v25);
  sub_20A572790((uint64_t)v18, v41, (uint64_t (*)(void))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  sub_20A57258C();
  swift_allocObject();
  sub_20A5727F8(&qword_26AC7DD18, (void (*)(uint64_t))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  uint64_t v30 = sub_20A8C8BA0();
  sub_20A572644((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  return v30;
}

uint64_t sub_20A571A84()
{
  uint64_t v1 = sub_20A8C34C0();
  uint64_t v33 = *(void *)(v1 - 8);
  uint64_t v34 = v1;
  MEMORY[0x270FA5388](v1);
  unsigned __int8 v29 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20A8C3410();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  id v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A8C40E0();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v27 = type metadata accessor for TickerWatchlistChangeBlueprintModifier();
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (uint64_t)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - v13;
  sub_20A4342F4(v0 + 56, (uint64_t)v37);
  sub_20A4342F4(v0 + 96, (uint64_t)v36);
  sub_20A4342F4(v0 + 136, (uint64_t)v35);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_20A8C3600();
  sub_20A8C4060();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v25 = v5 + 8;
  uint64_t v16 = v26;
  v15(v10, v26);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v17 = sub_20A8C35B0();
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_20A8C3600();
  uint64_t v18 = v29;
  sub_20A8C40D0();
  v15(v7, v16);
  *(void *)uint64_t v14 = 0x73696C6863746157;
  *((void *)v14 + 1) = 0xEF65676E61684374;
  uint64_t v19 = (int *)v27;
  uint64_t v20 = &v14[*(int *)(v27 + 44)];
  id v21 = objc_msgSend(self, sel_sharedApplication);
  unsigned __int8 v22 = objc_msgSend(v21, sel_isRunningPerformanceTest);

  *(void *)uint64_t v20 = 0x4008000000000000;
  *((void *)v20 + 1) = 4;
  unsigned char v20[16] = v22;
  sub_20A42BEBC(v37, (uint64_t)(v14 + 16));
  sub_20A42BEBC(v36, (uint64_t)(v14 + 56));
  sub_20A42BEBC(v35, (uint64_t)(v14 + 96));
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v14[v19[8]], v28, v32);
  *(void *)&v14[v19[9]] = v17;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v14[v19[10]], v18, v34);
  sub_20A572790((uint64_t)v14, v30, (uint64_t (*)(void))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  sub_20A57258C();
  swift_allocObject();
  sub_20A5727F8(&qword_26AC7DD18, (void (*)(uint64_t))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  uint64_t v23 = sub_20A8C8BA0();
  sub_20A572644((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TickerWatchlistChangeBlueprintModifier);
  return v23;
}

uint64_t sub_20A571F58()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI30TickerBlueprintModifierFactory_appConfiguration;
  uint64_t v2 = sub_20A8C3190();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_20A572018()
{
  return type metadata accessor for TickerBlueprintModifierFactory();
}

uint64_t type metadata accessor for TickerBlueprintModifierFactory()
{
  uint64_t result = qword_26AC7A2D8;
  if (!qword_26AC7A2D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A57206C()
{
  uint64_t result = sub_20A8C3190();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A57210C(uint64_t a1)
{
  return sub_20A571258(a1);
}

uint64_t sub_20A572130()
{
  return sub_20A8C8BA0();
}

uint64_t sub_20A57219C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TickerPriceChangeDisplayBlueprintModifier();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v9 = (char *)&v13 + *(int *)(v8 + 20) - v6;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  strcpy(v7, "ChangeDisplay");
  *((_WORD *)v7 + 7) = -4864;
  sub_20A572790((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier);
  sub_20A57258C();
  swift_allocObject();
  sub_20A5727F8(&qword_26AC81F18, (void (*)(uint64_t))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier);
  uint64_t v11 = sub_20A8C8BA0();
  sub_20A572644((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier);
  return v11;
}

uint64_t sub_20A572348(uint64_t a1)
{
  return sub_20A571478(a1);
}

uint64_t sub_20A57236C()
{
  return sub_20A571A84();
}

uint64_t sub_20A572390(uint64_t a1)
{
  uint64_t refreshed = type metadata accessor for TickerRefreshPriceDataBlueprintModifier();
  MEMORY[0x270FA5388](refreshed);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  uint64_t v9 = *v1;
  uint64_t v11 = (char *)&v15 + *(int *)(v10 + 20) - v7;
  uint64_t v12 = sub_20A8C2EF0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, a1, v12);
  sub_20A4342F4(v9 + 96, (uint64_t)v8 + *(int *)(refreshed + 24));
  *uint64_t v8 = 0xD000000000000010;
  v8[1] = 0x800000020A900620;
  sub_20A572790((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TickerRefreshPriceDataBlueprintModifier);
  sub_20A57258C();
  swift_allocObject();
  sub_20A5727F8(&qword_26AC7DF50, (void (*)(uint64_t))type metadata accessor for TickerRefreshPriceDataBlueprintModifier);
  uint64_t v13 = sub_20A8C8BA0();
  sub_20A572644((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TickerRefreshPriceDataBlueprintModifier);
  return v13;
}

uint64_t sub_20A572544()
{
  return sub_20A5727F8(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

void sub_20A57258C()
{
  if (!qword_26AC69F98)
  {
    type metadata accessor for TickerModel();
    sub_20A44DD30();
    sub_20A5727F8(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
    unint64_t v0 = sub_20A8C8BB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69F98);
    }
  }
}

uint64_t sub_20A572644(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_20A5726A4(uint64_t a1)
{
}

void sub_20A5726D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_20A57273C()
{
  unint64_t result = qword_26AC80F20;
  if (!qword_26AC80F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC80F20);
  }
  return result;
}

uint64_t sub_20A572790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A5727F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_20A572840(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap;
  sub_20A45A1DC();
  id v13 = objc_allocWithZone(v12);
  uint64_t v14 = v4;
  *(void *)&v5[v11] = objc_msgSend(v13, sel_init);
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel;
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel;
  *(void *)&v14[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v17 = OBJC_IVAR____TtC8StocksUI13EmptyListView_button;
  *(void *)&v14[v17] = objc_msgSend(self, sel_buttonWithType_, 1);

  v32.receiver = v14;
  v32.super_class = ObjectType;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v19 = *(void *)&v18[OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel];
  uint64_t v20 = v18;
  objc_msgSend(v20, sel_addSubview_, v19);
  objc_msgSend(v20, sel_addSubview_, *(void *)&v20[OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel]);
  uint64_t v21 = OBJC_IVAR____TtC8StocksUI13EmptyListView_button;
  unsigned __int8 v22 = *(void **)&v20[OBJC_IVAR____TtC8StocksUI13EmptyListView_button];
  objc_msgSend(v20, sel_addSubview_, v22);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v24 = self;
  id v25 = v22;
  id v26 = objc_msgSend(v24, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v27 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setAccessibilityHint_, v27, 0x800000020A9006D0);

  id v28 = *(void **)&v20[v21];
  id v29 = *(id *)&v20[OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap];
  id v30 = v28;
  sub_20A8CB530();

  return v20;
}

uint64_t type metadata accessor for EmptyListView()
{
  return self;
}

void sub_20A572BC8()
{
  unint64_t v0 = (void *)sub_20A8CB4F0();
}

void sub_20A572C08()
{
  sub_20A572C94(&qword_26AC6D118);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A572C60()
{
  return sub_20A572C94(&qword_26AC6D110);
}

uint64_t sub_20A572C94(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EmptyListView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A572CD4()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI13EmptyListView_onTap;
  sub_20A45A1DC();
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI13EmptyListView_titleLabel;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI13EmptyListView_descriptionLabel;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = OBJC_IVAR____TtC8StocksUI13EmptyListView_button;
  *(void *)&v0[v5] = objc_msgSend(self, sel_buttonWithType_, 1);

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A572DF0(uint64_t a1)
{
  uint64_t v2 = sub_20A8C7830();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_20A8C4F20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  Class v12 = &v20[-v11];
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_20A8C4F00());
  if (v14)
  {
LABEL_5:
    sub_20A8C4EF0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v9, v12, v6);
    int v15 = (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 88))(v9, v6);
    if (v15 == *MEMORY[0x263F58B68])
    {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F7A788];
    }
    else if (v15 == *MEMORY[0x263F58B58])
    {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F7A778];
    }
    else if (v15 == *MEMORY[0x263F58B50])
    {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F7A770];
    }
    else if (v15 == *MEMORY[0x263F58B60])
    {
      uint64_t v16 = (unsigned int *)MEMORY[0x263F7A780];
    }
    else
    {
      if (v15 != *MEMORY[0x263F58B48])
      {
        uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 104);
        if (v15 != *MEMORY[0x263F58B40])
        {
          v18(v5, *MEMORY[0x263F7A788], v2);
          (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
          goto LABEL_17;
        }
        uint64_t v17 = *MEMORY[0x263F7A760];
LABEL_16:
        v18(v5, v17, v2);
LABEL_17:
        (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
        sub_20A8C4EE0();
        v20[12] = 0;
        sub_20A8C7810();
        uint64_t v19 = sub_20A8C4F10();
        *(double *)&uint64_t result = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19));
        return result;
      }
      uint64_t v16 = (unsigned int *)MEMORY[0x263F7A768];
    }
    uint64_t v17 = *v16;
    uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 104);
    goto LABEL_16;
  }
  if ((~result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (*(double *)&result <= -2147483650.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(double *)&result < 2147483650.0) {
    goto LABEL_5;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_20A57317C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A573210(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)v2 + 184) + 8))(a1, a2, *(void *)(*(void *)v2 + 176));
}

uint64_t sub_20A573288()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 176) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 192));
}

uint64_t sub_20A5732E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_20A460AD8();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 176) - 8) + 8))(v2 + *(void *)(*(void *)v2 + 192));
  return v2;
}

uint64_t sub_20A573368()
{
  sub_20A5732E0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProxyForYouFeedGroupEmitterFactory()
{
  return __swift_instantiateGenericMetadata();
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for WatchlistCellViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WatchlistCellViewLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 168) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WatchlistCellViewLayoutAttributes()
{
  return &type metadata for WatchlistCellViewLayoutAttributes;
}

id sub_20A573494()
{
  id v0 = objc_msgSend(self, sel_buttonWithType_, 7);
  objc_msgSend(v0, sel_setShowsMenuAsPrimaryAction_, 1);
  sub_20A564F1C();
  uint64_t v1 = (void *)sub_20A8CEE50();
  objc_msgSend(v0, sel_setMenu_, v1);

  objc_msgSend(v0, sel_setShowsLargeContentViewer_, 1);
  id v2 = v0;
  char v3 = (void *)sub_20A8CE240();
  id v4 = objc_msgSend(self, sel_systemImageNamed_, v3);

  objc_msgSend(v2, sel_setLargeContentImage_, v4);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  long long v6 = self;
  id v7 = v2;
  id v8 = objc_msgSend(v6, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  long long v9 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setLargeContentTitle_, v9, 0x800000020A900810);

  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828F8]), sel_init);
  objc_msgSend(v7, sel_addInteraction_, v10);

  return v7;
}

char *sub_20A5736AC(double a1, double a2, double a3, double a4)
{
  long long v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel;
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v15 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton;
  *(void *)&v13[v15] = sub_20A573494();
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton;
  uint64_t v17 = (objc_class *)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  *(void *)&v13[v16] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  uint64_t v18 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton;
  *(void *)&v13[v18] = objc_msgSend(objc_allocWithZone(v17), sel_init);
  uint64_t v19 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView;
  *(void *)&v13[v19] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v20 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView;
  *(void *)&v13[v20] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v21 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel;
  *(void *)&v13[v21] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v29.receiver = v13;
  v29.super_class = ObjectType;
  unsigned __int8 v22 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v23 = *(void **)&v22[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel];
  uint64_t v24 = v22;
  objc_msgSend(v24, sel_addSubview_, v23);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView]);
  objc_msgSend(v24, sel_addSubview_, *(void *)&v24[OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel]);
  unint64_t v25 = (unint64_t)objc_msgSend(v23, sel_accessibilityTraits);
  unint64_t v26 = v25;
  uint64_t v27 = *MEMORY[0x263F83268];
  if (v25)
  {
    if ((v27 & ~v25) == 0) {
      goto LABEL_7;
    }
  }
  else if (!v27)
  {
    unint64_t v26 = 0;
    goto LABEL_7;
  }
  unint64_t v26 = v27 | v25;
LABEL_7:
  objc_msgSend(v23, sel_setAccessibilityTraits_, v26);

  return v24;
}

char *sub_20A5739F0()
{
  id v0 = (char *)objc_msgSend((id)swift_getObjCClassFromObject(), sel_buttonWithType_, 7);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v1 = *(void **)&v0[qword_26AC73208];
  id v2 = v0;
  id v3 = v1;
  sub_20A8CB530();

  objc_msgSend(v2, sel_setShowsLargeContentViewer_, 1);
  id v4 = objc_allocWithZone(MEMORY[0x263F828F8]);
  long long v5 = v2;
  id v6 = objc_msgSend(v4, sel_init);
  objc_msgSend(v5, sel_addInteraction_, v6);

  return v5;
}

char *sub_20A573ADC()
{
  return sub_20A5739F0();
}

id sub_20A573B00(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = qword_26AC73208;
  sub_20A45A1DC();
  id v12 = objc_allocWithZone(v11);
  id v13 = a1;
  *(void *)&a1[v10] = objc_msgSend(v12, sel_init);

  v15.receiver = v13;
  v15.super_class = (Class)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  return objc_msgSendSuper2(&v15, sel_initWithFrame_, a2, a3, a4, a5);
}

id sub_20A573BB4(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_26AC73208;
  sub_20A45A1DC();
  id v7 = objc_allocWithZone(v6);
  id v8 = a3;
  long long v9 = a1;
  *(void *)&a1[v5] = objc_msgSend(v7, sel_init);

  v12.receiver = v9;
  v12.super_class = (Class)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  id v10 = objc_msgSendSuper2(&v12, sel_initWithCoder_, v8);

  return v10;
}

void sub_20A573C5C()
{
}

id sub_20A573C6C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_20A573CA4(uint64_t a1)
{
}

uint64_t type metadata accessor for StockFeedMastheadView()
{
  return self;
}

uint64_t type metadata accessor for StockFeedMastheadView.CloseStyleButton()
{
  uint64_t result = qword_26AC73210;
  if (!qword_26AC73210) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A573DD0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A573E20()
{
  return type metadata accessor for StockFeedMastheadView.CloseStyleButton();
}

void sub_20A573E28()
{
  uint64_t v1 = *v0;
  id v2 = objc_retain(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton)
                         + qword_26AC73208));

  id v3 = objc_retain(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton)
                         + qword_26AC73208));
}

void sub_20A573EC0()
{
  sub_20A573F54(&qword_26AC73228);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A573F20()
{
  return sub_20A573F54(&qword_26AC73220);
}

uint64_t sub_20A573F54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StockFeedMastheadView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A573F94()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_symbolLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_nameLabel;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_moreOptionsButton;
  *(void *)&v0[v3] = sub_20A573494();
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_shareButton;
  uint64_t v5 = (objc_class *)type metadata accessor for StockFeedMastheadView.CloseStyleButton();
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_watchStockButton;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(v5), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_quoteSummaryView;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for QuoteSummaryView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_separatorView;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = OBJC_IVAR____TtC8StocksUI21StockFeedMastheadView_exchangeLabel;
  *(void *)&v0[v9] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

char *sub_20A574140(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel;
  id v12 = objc_allocWithZone(MEMORY[0x263F828E0]);
  id v13 = v4;
  *(void *)&v5[v11] = objc_msgSend(v12, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v14 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton;
  objc_super v15 = (objc_class *)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  *(void *)&v13[v14] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v16 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton;
  *(void *)&v13[v16] = objc_msgSend(objc_allocWithZone(v15), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v21.receiver = v13;
  v21.super_class = ObjectType;
  uint64_t v17 = (char *)objc_msgSendSuper2(&v21, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v18 = *(void *)&v17[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel];
  uint64_t v19 = v17;
  objc_msgSend(v19, sel_addSubview_, v18);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v19[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton]);
  objc_msgSend(v19, sel_addSubview_, *(void *)&v19[OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton]);

  return v19;
}

char *sub_20A574310(char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = qword_26763BE80;
  sub_20A45A1DC();
  id v12 = objc_allocWithZone(v11);
  id v13 = a1;
  *(void *)&a1[v10] = objc_msgSend(v12, sel_init);

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  uint64_t v14 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a2, a3, a4, a5);
  objc_super v15 = *(void **)&v14[qword_26763BE80];
  uint64_t v16 = v14;
  id v17 = v15;
  sub_20A8CB530();

  return v16;
}

void sub_20A5743FC(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = qword_26763BE80;
  sub_20A45A1DC();
  id v7 = objc_allocWithZone(v6);
  id v8 = a3;
  *(void *)&a1[v5] = objc_msgSend(v7, sel_init);

  sub_20A8CF520();
  __break(1u);
}

void sub_20A57449C()
{
}

id sub_20A5744AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_20A5744E4(uint64_t a1)
{
}

uint64_t type metadata accessor for BilingualFeedPromptView()
{
  return self;
}

uint64_t type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton()
{
  uint64_t result = qword_26763BE88;
  if (!qword_26763BE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5745C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A574610()
{
  return type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
}

void sub_20A574618()
{
  uint64_t v1 = *v0;
  id v2 = objc_retain(*(id *)(*(void *)(*v0 + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton)
                         + qword_26763BE80));

  id v3 = objc_retain(*(id *)(*(void *)(v1
                                     + OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton)
                         + qword_26763BE80));
}

void sub_20A5746B0()
{
  sub_20A57473C(&qword_26AC74528);

  JUMPOUT(0x210523C60);
}

uint64_t sub_20A574708()
{
  return sub_20A57473C(&qword_26AC74520);
}

uint64_t sub_20A57473C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for BilingualFeedPromptView();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A57477C()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_messageLabel;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x263F828E0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_enableBilingualFeedButton;
  id v3 = (objc_class *)type metadata accessor for BilingualFeedPromptView.FeedPreferenceButton();
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = OBJC_IVAR____TtC8StocksUI23BilingualFeedPromptView_neverShowBilingualFeedPromptsButton;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(v3), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A574878()
{
  sub_20A574974();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A5749D0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7E058], v1);
  uint64_t result = sub_20A8CB5C0();
  qword_26AC9E9C8 = result;
  return result;
}

void sub_20A574974()
{
  if (!qword_26AC6AB40)
  {
    unint64_t v0 = sub_20A8CB590();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC6AB40);
    }
  }
}

void sub_20A5749D0()
{
  if (!qword_26AC69D48)
  {
    unint64_t v0 = sub_20A8C82B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69D48);
    }
  }
}

uint64_t sub_20A574A3C()
{
  sub_20A574D54();
  MEMORY[0x270FA5388](v0 - 8);
  sub_20A574DB4();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A574E74();
  MEMORY[0x270FA5388](v4 - 8);
  if (qword_26AC6AB98 != -1) {
    swift_once();
  }
  swift_retain();
  sub_20A8CB5A0();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v7 = sub_20A8C2370();
  uint64_t v9 = v8;

  v14[0] = v7;
  v14[1] = v9;
  uint64_t result = sub_20A8CA050();
  if (qword_26AC818B8 != -1) {
    uint64_t result = swift_once();
  }
  Class v11 = (void *)qword_26AC9EC98;
  if (qword_26AC9EC98)
  {
    v14[0] = qword_26AC9EC98;
    sub_20A45A06C();
    id v12 = v11;
    sub_20A8C8E30();
    sub_20A574E0C();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 0, 1, v13);
    sub_20A8C9290();
    sub_20A8C8720();
    swift_allocObject();
    return sub_20A8C8650();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_20A574D54()
{
  if (!qword_26763BE98)
  {
    unint64_t v0 = sub_20A8C92B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BE98);
    }
  }
}

void sub_20A574DB4()
{
  if (!qword_26763BEA0)
  {
    sub_20A574E0C();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BEA0);
    }
  }
}

void sub_20A574E0C()
{
  if (!qword_26763BEA8)
  {
    sub_20A45A06C();
    unint64_t v0 = sub_20A8C8E40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BEA8);
    }
  }
}

void sub_20A574E74()
{
  if (!qword_26763BEB0)
  {
    unint64_t v0 = sub_20A8CA060();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BEB0);
    }
  }
}

uint64_t *sub_20A574EF0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C3E10();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    id v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_20A8C2CB0();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = a3[7];
    objc_super v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *objc_super v19 = *v20;
    v19[1] = v21;
    unsigned __int8 v22 = (void *)v20[2];
    void v19[2] = v22;
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v23 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    uint64_t v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)a1 + v23) = (uint64_t)v24;
    uint64_t v25 = a3[10];
    unint64_t v26 = *(void **)((char *)a2 + v25);
    *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
    swift_bridgeObjectRetain();
    id v27 = v22;
    swift_retain();
    swift_retain();
    id v28 = v24;
    id v29 = v26;
  }
  return a1;
}

void sub_20A5751E4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_20A8C3E10();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_20A8C2CB0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = a1 + a2[6];
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  uint64_t v10 = *(void **)(a1 + a2[10]);
}

char *sub_20A575384(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_20A8C2CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  uint64_t v20 = (void *)*((void *)v18 + 2);
  *((void *)v17 + 2) = v20;
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v21 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  unsigned __int8 v22 = *(void **)&a2[v21];
  *(void *)&a1[v21] = v22;
  uint64_t v23 = a3[10];
  uint64_t v24 = *(void **)&a2[v23];
  *(void *)&a1[v23] = v24;
  swift_bridgeObjectRetain();
  id v25 = v20;
  swift_retain();
  swift_retain();
  id v26 = v22;
  id v27 = v24;
  return a1;
}

char *sub_20A575628(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_20A8C2CB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  unsigned __int8 v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(void *)unsigned __int8 v22 = *(void *)&a2[v21];
  *((void *)v22 + 1) = *(void *)&a2[v21 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)*((void *)v22 + 2);
  id v25 = (void *)*((void *)v23 + 2);
  *((void *)v22 + 2) = v25;
  id v26 = v25;

  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_retain();
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_retain();
  swift_release();
  uint64_t v27 = a3[9];
  id v28 = *(void **)&a2[v27];
  id v29 = *(void **)&a1[v27];
  *(void *)&a1[v27] = v28;
  id v30 = v28;

  uint64_t v31 = a3[10];
  objc_super v32 = *(void **)&a2[v31];
  uint64_t v33 = *(void **)&a1[v31];
  *(void *)&a1[v31] = v32;
  id v34 = v32;

  return a1;
}

char *sub_20A5759D0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_20A8C2CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v15];
  int v18 = &a2[v15];
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((void *)v17 + 2) = *((void *)v18 + 2);
  *(void *)&a1[v16] = *(void *)&a2[v16];
  uint64_t v19 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v19] = *(void *)&a2[v19];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  return a1;
}

char *sub_20A575C54(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_20A8C3E10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_20A8C2CB0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_13:
  uint64_t v21 = a3[6];
  unsigned __int8 v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(void *)&a2[v21 + 8];
  *(void *)unsigned __int8 v22 = *(void *)&a2[v21];
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  id v25 = (void *)*((void *)v22 + 2);
  *((void *)v22 + 2) = *((void *)v23 + 2);

  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_release();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = *(void **)&a1[v26];
  *(void *)&a1[v26] = *(void *)&a2[v26];

  uint64_t v28 = a3[10];
  id v29 = *(void **)&a1[v28];
  *(void *)&a1[v28] = *(void *)&a2[v28];

  return a1;
}

uint64_t sub_20A575FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A575FE4);
}

uint64_t sub_20A575FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_20A576134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A576148);
}

void sub_20A576148(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return;
    }
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for QuoteDetailViewModel()
{
  uint64_t result = qword_26AC71BF8;
  if (!qword_26AC71BF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A5762E0()
{
  sub_20A578664(319, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  if (v0 <= 0x3F)
  {
    sub_20A578664(319, &qword_26AC68DA0, MEMORY[0x263F7A890]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_20A576408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  uint64_t v28 = type metadata accessor for AttributionSource;
  sub_20A578664(0, (unint64_t *)&unk_26AC68B78, (void (*)(uint64_t))type metadata accessor for AttributionSource);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = (int *)type metadata accessor for QuoteDetailViewModel();
  uint64_t v12 = v11[7];
  type metadata accessor for PriceFormatter();
  uint64_t v13 = swift_allocObject();
  sub_20A8C2910();
  *(void *)(a4 + v12) = v13;
  uint64_t v14 = v11[8];
  type metadata accessor for UnitNumberFormatter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F7AFE8]), sel_init);
  *(void *)(a4 + v14) = v15;
  uint64_t v16 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A57859C(a1, a4, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  uint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F7A890];
  sub_20A57859C(a2, a4 + v11[5], &qword_26AC68DA0, MEMORY[0x263F7A890]);
  sub_20A57859C(a3, (uint64_t)v10, (unint64_t *)&unk_26AC68B78, (void (*)(uint64_t))type metadata accessor for AttributionSource);
  uint64_t v18 = sub_20A850EC4((uint64_t)v10);
  int v19 = (uint64_t *)(a4 + v11[6]);
  *int v19 = v18;
  v19[1] = v20;
  void v19[2] = v21;
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), (SEL)&_OBJC_LABEL_PROTOCOL___NSItemProviderWriting);
  *(void *)(a4 + v11[9]) = v22;
  id v23 = v22;
  objc_msgSend(v23, sel_setNumberStyle_, 3);
  sub_20A4434F8();
  uint64_t v24 = (void *)sub_20A8CEF00();
  objc_msgSend(v23, sel_setMultiplier_, v24);

  objc_msgSend(v23, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v23, sel_setMaximumFractionDigits_, 2);

  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A30]), sel_init);
  *(void *)(a4 + v11[10]) = v25;
  id v26 = v25;
  objc_msgSend(v26, sel_setNumberStyle_, 1);
  objc_msgSend(v26, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v26, sel_setMaximumFractionDigits_, 2);

  sub_20A578608(v29, (unint64_t *)&unk_26AC68B78, (void (*)(uint64_t))v28);
  sub_20A578608(v30, &qword_26AC68DA0, v17);
  return sub_20A578608(v31, &qword_26AC68FB0, v16);
}

uint64_t sub_20A5766F0(char a1)
{
  switch(a1)
  {
    case 1:
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v7 = self;
      id v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A900F80);
      break;
    case 2:
      type metadata accessor for Localized();
      uint64_t v9 = swift_getObjCClassFromMetadata();
      uint64_t v10 = self;
      id v11 = objc_msgSend(v10, sel_bundleForClass_, v9);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v10, sel_bundleForClass_, v9, 0x800000020A900F00);
      break;
    case 3:
      type metadata accessor for Localized();
      uint64_t v12 = swift_getObjCClassFromMetadata();
      uint64_t v13 = self;
      id v14 = objc_msgSend(v13, sel_bundleForClass_, v12);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v13, sel_bundleForClass_, v12, 0x800000020A900E80);
      break;
    case 4:
      type metadata accessor for Localized();
      uint64_t v15 = swift_getObjCClassFromMetadata();
      uint64_t v16 = self;
      id v17 = objc_msgSend(v16, sel_bundleForClass_, v15);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v16, sel_bundleForClass_, v15, 0x800000020A900E00);
      break;
    case 5:
      _s6MarkerCMa();
      uint64_t v18 = swift_getObjCClassFromMetadata();
      int v19 = self;
      id v20 = objc_msgSend(v19, sel_bundleForClass_, v18);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v19, sel_bundleForClass_, v18, 0x800000020A900D60);
      break;
    case 6:
      type metadata accessor for Localized();
      uint64_t v21 = swift_getObjCClassFromMetadata();
      id v22 = self;
      id v23 = objc_msgSend(v22, sel_bundleForClass_, v21);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v22, sel_bundleForClass_, v21, 0x800000020A900CC0);
      break;
    case 7:
      type metadata accessor for Localized();
      uint64_t v24 = swift_getObjCClassFromMetadata();
      id v25 = self;
      id v26 = objc_msgSend(v25, sel_bundleForClass_, v24);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v25, sel_bundleForClass_, v24, 0x800000020A900C60);
      break;
    case 8:
      type metadata accessor for Localized();
      uint64_t v27 = swift_getObjCClassFromMetadata();
      uint64_t v28 = self;
      id v29 = objc_msgSend(v28, sel_bundleForClass_, v27);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v28, sel_bundleForClass_, v27, 0x800000020A900BE0);
      break;
    case 9:
      type metadata accessor for Localized();
      uint64_t v30 = swift_getObjCClassFromMetadata();
      uint64_t v31 = self;
      id v32 = objc_msgSend(v31, sel_bundleForClass_, v30);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v31, sel_bundleForClass_, v30, 0x800000020A900B40);
      break;
    case 10:
      _s6MarkerCMa();
      uint64_t v33 = swift_getObjCClassFromMetadata();
      id v34 = self;
      id v35 = objc_msgSend(v34, sel_bundleForClass_, v33);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v34, sel_bundleForClass_, v33, 0x800000020A900AC0);
      break;
    case 11:
      type metadata accessor for Localized();
      uint64_t v36 = swift_getObjCClassFromMetadata();
      uint64_t v37 = self;
      id v38 = objc_msgSend(v37, sel_bundleForClass_, v36);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v37, sel_bundleForClass_, v36, 0x800000020A900A00);
      break;
    default:
      type metadata accessor for Localized();
      uint64_t v1 = swift_getObjCClassFromMetadata();
      uint64_t v2 = self;
      id v3 = objc_msgSend(v2, sel_bundleForClass_, v1);
      uint64_t v4 = sub_20A8C2370();

      id v5 = objc_msgSend(v2, sel_bundleForClass_, v1, 0x800000020A901000);
      break;
  }
  sub_20A8C2370();

  return v4;
}

uint64_t sub_20A577278(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v127 = a1;
  sub_20A578664(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v5 - 8);
  long long v126 = &v119[-v6];
  sub_20A578664(0, &qword_26AC68DA0, MEMORY[0x263F7A890]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v125 = &v119[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  uint64_t v124 = &v119[-v10];
  MEMORY[0x270FA5388](v11);
  double v123 = &v119[-v12];
  MEMORY[0x270FA5388](v13);
  uint64_t v122 = &v119[-v14];
  MEMORY[0x270FA5388](v15);
  uint64_t v121 = &v119[-v16];
  MEMORY[0x270FA5388](v17);
  int v19 = &v119[-v18];
  MEMORY[0x270FA5388](v20);
  id v22 = &v119[-v21];
  MEMORY[0x270FA5388](v23);
  id v25 = &v119[-v24];
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = &v119[-v27];
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = &v119[-v30];
  MEMORY[0x270FA5388](v32);
  id v34 = &v119[-v33];
  int v120 = a2;
  if (a2)
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    uint64_t v36 = v3;
    id v37 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    uint64_t v38 = sub_20A8C2370();
    uint64_t v40 = v39;

    uint64_t v3 = v36;
  }
  else
  {
    uint64_t v40 = 0xA300000000000000;
    uint64_t v38 = 9666786;
  }
  switch((char)v127)
  {
    case 1:
      uint64_t v47 = type metadata accessor for QuoteDetailViewModel();
      sub_20A57859C(v3 + *(int *)(v47 + 20), (uint64_t)v31, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v48 = sub_20A8C2CB0();
      uint64_t v49 = *(void *)(v48 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v49 + 48))(v31, 1, v48) == 1) {
        goto LABEL_33;
      }
      uint64_t v50 = sub_20A8C2BE0();
      char v52 = v51;
      (*(void (**)(unsigned char *, uint64_t))(v49 + 8))(v31, v48);
      if ((v52 & 1) == 0) {
        goto LABEL_41;
      }
      break;
    case 2:
      uint64_t v53 = type metadata accessor for QuoteDetailViewModel();
      sub_20A57859C(v3 + *(int *)(v53 + 20), (uint64_t)v28, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v54 = sub_20A8C2CB0();
      uint64_t v55 = *(void *)(v54 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v55 + 48))(v28, 1, v54) == 1)
      {
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        uint64_t v46 = (uint64_t)v28;
        goto LABEL_34;
      }
      uint64_t v50 = sub_20A8C2BF0();
      char v96 = v95;
      (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v28, v54);
      if ((v96 & 1) == 0) {
        goto LABEL_41;
      }
      break;
    case 3:
      uint64_t v56 = type metadata accessor for QuoteDetailViewModel();
      sub_20A57859C(v3 + *(int *)(v56 + 20), (uint64_t)v25, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v57 = sub_20A8C2CB0();
      uint64_t v58 = *(void *)(v57 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48))(v25, 1, v57) == 1)
      {
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        uint64_t v46 = (uint64_t)v25;
        goto LABEL_34;
      }
      uint64_t v50 = sub_20A8C2C10();
      char v98 = v97;
      (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v25, v57);
      if ((v98 & 1) == 0) {
        goto LABEL_41;
      }
      break;
    case 4:
      uint64_t v59 = type metadata accessor for QuoteDetailViewModel();
      sub_20A57859C(v3 + *(int *)(v59 + 20), (uint64_t)v22, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v60 = sub_20A8C2CB0();
      uint64_t v61 = *(void *)(v60 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v61 + 48))(v22, 1, v60) == 1) {
        goto LABEL_24;
      }
      uint64_t v50 = sub_20A8C2C40();
      char v63 = v62;
      (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v22, v60);
      if ((v63 & 1) == 0)
      {
LABEL_41:
        id v92 = (id)sub_20A658280(0, 5, 1, *(double *)&v50);
        objc_msgSend(v92, sel_setNumberStyle_, 1);
        id v93 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v50);
        id v94 = objc_msgSend(v92, sel_stringFromNumber_, v93);
        goto LABEL_42;
      }
      break;
    case 5:
      uint64_t v64 = type metadata accessor for QuoteDetailViewModel();
      sub_20A57859C(v3 + *(int *)(v64 + 20), (uint64_t)v19, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v65 = sub_20A8C2CB0();
      uint64_t v66 = *(void *)(v65 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v66 + 48))(v19, 1, v65) == 1)
      {
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        uint64_t v46 = (uint64_t)v19;
        goto LABEL_34;
      }
      sub_20A8C2C30();
      char v101 = v100;
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v19, v65);
      if ((v101 & 1) == 0)
      {
        CGFloat v102 = *(void **)(v3 + *(int *)(v64 + 36));
        CGFloat v103 = (void *)sub_20A8CE750();
        id v104 = objc_msgSend(v102, sel_stringForObjectValue_, v103);
        goto LABEL_56;
      }
      break;
    case 6:
      id v22 = v126;
      sub_20A57859C(v3, (uint64_t)v126, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
      uint64_t v67 = sub_20A8C3E10();
      uint64_t v68 = *(void *)(v67 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v68 + 48))(v22, 1, v67) == 1)
      {
        uint64_t v44 = &qword_26AC68FB0;
        uint64_t v69 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
        goto LABEL_25;
      }
      uint64_t v105 = sub_20A8C3DC0();
      char v107 = v106;
      (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v22, v67);
      if ((v107 & 1) == 0)
      {
        double v108 = *(double *)&v105;
        goto LABEL_53;
      }
      break;
    case 7:
      uint64_t v70 = type metadata accessor for QuoteDetailViewModel();
      long long v71 = v121;
      sub_20A57859C(v3 + *(int *)(v70 + 20), (uint64_t)v121, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v72 = sub_20A8C2CB0();
      uint64_t v73 = *(void *)(v72 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72) == 1)
      {
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        uint64_t v46 = (uint64_t)v71;
        goto LABEL_34;
      }
      uint64_t v109 = sub_20A8C2CA0();
      char v111 = v110;
      (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v71, v72);
      if ((v111 & 1) == 0) {
        goto LABEL_52;
      }
      break;
    case 8:
      uint64_t v74 = type metadata accessor for QuoteDetailViewModel();
      id v22 = v122;
      sub_20A57859C(v3 + *(int *)(v74 + 20), (uint64_t)v122, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v75 = sub_20A8C2CB0();
      uint64_t v76 = *(void *)(v75 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v76 + 48))(v22, 1, v75) == 1)
      {
LABEL_24:
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v69 = (void (*)(uint64_t))MEMORY[0x263F7A890];
LABEL_25:
        uint64_t v45 = v69;
        uint64_t v46 = (uint64_t)v22;
        goto LABEL_34;
      }
      uint64_t v109 = sub_20A8C2C20();
      char v113 = v112;
      (*(void (**)(unsigned char *, uint64_t))(v76 + 8))(v22, v75);
      if ((v113 & 1) == 0)
      {
LABEL_52:
        double v108 = (double)(unint64_t)v109;
LABEL_53:
        sub_20A5783B4(v108, v38, v40, v3, v120 & 1);
        uint64_t v38 = v114;
        swift_bridgeObjectRelease();
      }
      break;
    case 9:
      uint64_t v77 = type metadata accessor for QuoteDetailViewModel();
      uint64_t v31 = v123;
      sub_20A57859C(v3 + *(int *)(v77 + 20), (uint64_t)v123, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v78 = sub_20A8C2CB0();
      uint64_t v79 = *(void *)(v78 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v79 + 48))(v31, 1, v78) == 1) {
        goto LABEL_33;
      }
      sub_20A8C2C80();
      char v81 = v80;
      (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v31, v78);
      if ((v81 & 1) == 0) {
        goto LABEL_55;
      }
      break;
    case 10:
      uint64_t v77 = type metadata accessor for QuoteDetailViewModel();
      uint64_t v31 = v124;
      sub_20A57859C(v3 + *(int *)(v77 + 20), (uint64_t)v124, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v82 = sub_20A8C2CB0();
      uint64_t v83 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v83 + 48))(v31, 1, v82) == 1) {
        goto LABEL_33;
      }
      sub_20A8C2C90();
      char v85 = v84;
      (*(void (**)(unsigned char *, uint64_t))(v83 + 8))(v31, v82);
      if ((v85 & 1) == 0) {
        goto LABEL_55;
      }
      break;
    case 11:
      uint64_t v77 = type metadata accessor for QuoteDetailViewModel();
      uint64_t v31 = v125;
      sub_20A57859C(v3 + *(int *)(v77 + 20), (uint64_t)v125, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v86 = sub_20A8C2CB0();
      uint64_t v87 = *(void *)(v86 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v87 + 48))(v31, 1, v86) == 1)
      {
LABEL_33:
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        uint64_t v46 = (uint64_t)v31;
        goto LABEL_34;
      }
      sub_20A8C2C60();
      char v116 = v115;
      (*(void (**)(unsigned char *, uint64_t))(v87 + 8))(v31, v86);
      if ((v116 & 1) == 0)
      {
LABEL_55:
        CGFloat v117 = *(void **)(v3 + *(int *)(v77 + 40));
        CGFloat v103 = (void *)sub_20A8CE750();
        id v104 = objc_msgSend(v117, sel_stringForObjectValue_, v103);
LABEL_56:
        id v118 = v104;

        if (v118)
        {
          uint64_t v38 = sub_20A8CE280();
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      uint64_t v41 = type metadata accessor for QuoteDetailViewModel();
      sub_20A57859C(v3 + *(int *)(v41 + 20), (uint64_t)v34, &qword_26AC68DA0, MEMORY[0x263F7A890]);
      uint64_t v42 = sub_20A8C2CB0();
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v34, 1, v42) == 1)
      {
        uint64_t v44 = &qword_26AC68DA0;
        uint64_t v45 = (void (*)(uint64_t))MEMORY[0x263F7A890];
        uint64_t v46 = (uint64_t)v34;
LABEL_34:
        sub_20A578608(v46, v44, v45);
      }
      else
      {
        uint64_t v89 = sub_20A8C2C00();
        char v91 = v90;
        (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v34, v42);
        if ((v91 & 1) == 0)
        {
          id v92 = (id)sub_20A658280(0, 5, 1, *(double *)&v89);
          objc_msgSend(v92, sel_setNumberStyle_, 1);
          id v93 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&v89);
          id v94 = objc_msgSend(v92, sel_stringFromNumber_, v93);
LABEL_42:
          id v99 = v94;

          if (v99)
          {
            uint64_t v38 = sub_20A8CE280();
            swift_bridgeObjectRelease();
          }
        }
      }
      break;
  }
  return v38;
}

void sub_20A5783B4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8 = sub_20A8C2990();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 <= -9.22337204e18 || a1 >= 9.22337204e18)
  {
    swift_bridgeObjectRetain();
    return;
  }
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v13 = type metadata accessor for QuoteDetailViewModel();
  if ((uint64_t)a1 >= 1
    && (uint64_t v14 = *(void **)(*(void *)(a4 + *(int *)(v13 + 32)) + 16),
        sub_20A8C2940(),
        uint64_t v15 = (void *)sub_20A8C2900(),
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8),
        id v16 = objc_msgSend(v14, sel_formattedCount_withLocale_longform_compactDisplay_, (uint64_t)a1, v15, a5 & 1, 0),
        v15,
        v16))
  {
    sub_20A8CE280();
  }
  else
  {
    v17[1] = (uint64_t)a1;
    sub_20A8CF720();
  }
}

uint64_t sub_20A57859C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A578664(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A578608(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A578664(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A578664(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *sub_20A5786B8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_20A8C3410();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_20A5787A0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20A8C3410();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_20A578818(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_20A8C3410();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_20A5788B0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_20A57894C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_20A5789C8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_20A578A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A578A68);
}

uint64_t sub_20A578A68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20A8C3410();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_20A578B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A578B2C);
}

uint64_t sub_20A578B2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_20A8C3410();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TickerPriceChangeDisplayBlueprintModifier()
{
  uint64_t result = qword_26AC81890;
  if (!qword_26AC81890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A578C20()
{
  uint64_t result = sub_20A8C3410();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A578CB8(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  v22[1] = a1;
  uint64_t v24 = sub_20A8C8B80();
  uint64_t v4 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A579A64(0, &qword_26AC6A418, MEMORY[0x263F7D950]);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v26 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v22 - v8;
  sub_20A4949B4();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20A579A64(0, (unint64_t *)&qword_26AC6AC90, MEMORY[0x263F7E0A8]);
  uint64_t v23 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v22 - v13;
  uint64_t v30 = v3;
  uint64_t v15 = sub_20A449A28((void (*)(char *))sub_20A579B24, (uint64_t)v29, (uint64_t)v31);
  sub_20A579A64(0, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
  uint64_t v17 = v16;
  uint64_t v18 = sub_20A579A04(&qword_26AC69ED0);
  uint64_t v19 = sub_20A579A04(&qword_26AC69EC8);
  MEMORY[0x21051E250](v15, v17, v18, v19);
  type metadata accessor for TickerModel();
  sub_20A44DD30();
  sub_20A5799BC(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  sub_20A8CBB20();
  uint64_t v20 = v24;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F7D528], v24);
  sub_20A494BC0();
  sub_20A8C9B50();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v20);
  v28(v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
}

uint64_t sub_20A5790C4(uint64_t a1, uint64_t a2)
{
  sub_20A494C14();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20A579A64(0, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
  sub_20A8C8820();
  uint64_t v13 = v14;
  uint64_t v11 = a2;
  uint64_t v4 = sub_20A449A90((void (*)(char *))sub_20A579B44, (uint64_t)v10, (uint64_t)v12);
  sub_20A44DF90(0);
  uint64_t v6 = v5;
  uint64_t v7 = sub_20A5799BC(&qword_26AC69D58, sub_20A44DF90);
  uint64_t v8 = sub_20A5799BC(&qword_26AC69D50, sub_20A44DF90);
  MEMORY[0x21051E250](v4, v6, v7, v8);
  type metadata accessor for TickerModel();
  sub_20A44DD30();
  sub_20A5799BC(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  return sub_20A8C8810();
}

uint64_t sub_20A5792AC@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v61 = a1;
  uint64_t v2 = sub_20A8C4030();
  MEMORY[0x270FA5388](v2 - 8);
  char v63 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PriceViewModel();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v62 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_20A8C3410();
  uint64_t v67 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v58 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel;
  sub_20A579B64(0, &qword_26AC754A0, (void (*)(uint64_t))type metadata accessor for StockSparklineViewModel);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v68 = (uint64_t)&v47 - v8;
  uint64_t v9 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  uint64_t v48 = (void (*)(uint64_t))MEMORY[0x263F7AEF0];
  sub_20A579B64(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v65 = (uint64_t)&v47 - v13;
  uint64_t v15 = sub_20A8C3F00();
  uint64_t v52 = *(void *)(v15 - 8);
  uint64_t v16 = v52;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v18;
  uint64_t v19 = type metadata accessor for StockViewModel();
  uint64_t v20 = (int *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  char v51 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v47 - v23;
  uint64_t v60 = type metadata accessor for TickerModel();
  MEMORY[0x270FA5388](v60);
  uint64_t v56 = (uint64_t *)((char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (uint64_t *)((char *)&v47 - v27);
  sub_20A44DF90(0);
  sub_20A8C8330();
  uint64_t v55 = *v28;
  sub_20A494D04();
  uint64_t v53 = v29;
  sub_20A494EC0((uint64_t)v28 + *(int *)(v29 + 48), (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StockViewModel);
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v50 = v15;
  v49(v18, v24, v15);
  uint64_t v30 = (uint64_t)&v24[v20[7]];
  uint64_t v54 = v24;
  sub_20A579BB8(v30, (uint64_t)v14, &qword_26AC68FB0, v9);
  uint64_t v31 = (uint64_t)&v24[v20[8]];
  uint64_t v32 = v68;
  uint64_t v33 = v69;
  sub_20A579BB8(v31, v68, &qword_26AC754A0, v69);
  id v34 = &v61[*(int *)(type metadata accessor for TickerPriceChangeDisplayBlueprintModifier() + 20)];
  uint64_t v61 = *(char **)(v67 + 16);
  uint64_t v36 = v58;
  uint64_t v35 = v59;
  ((void (*)(char *, char *, uint64_t))v61)(v58, v34, v59);
  uint64_t v37 = (uint64_t)v51;
  v49(v51, v66, v15);
  uint64_t v38 = v65;
  uint64_t v39 = v48;
  sub_20A579BB8(v65, v37 + v20[7], &qword_26AC68FB0, v48);
  sub_20A579BB8(v32, v37 + v20[8], &qword_26AC754A0, v33);
  ((void (*)(uint64_t, char *, uint64_t))v61)(v37 + v20[10], v36, v35);
  *(unsigned char *)(v37 + v20[11]) = 0;
  uint64_t v40 = v57;
  uint64_t v41 = v39;
  sub_20A579BB8(v38, v57, &qword_26AC68FB0, v39);
  uint64_t v42 = v63;
  uint64_t v43 = v66;
  sub_20A8C3E70();
  uint64_t v44 = v62;
  sub_20A5EC850(v40, v42, 9666786, 0xA300000000000000, v62);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v36, v35);
  sub_20A579C24(v68, &qword_26AC754A0, v69);
  sub_20A579C24(v65, &qword_26AC68FB0, v41);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v50);
  sub_20A494EC0(v44, v37 + v20[9], (uint64_t (*)(void))type metadata accessor for PriceViewModel);
  uint64_t v45 = (uint64_t)v56 + *(int *)(v53 + 48);
  *uint64_t v56 = v55;
  sub_20A4A2540(v37, v45);
  sub_20A5799BC(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
  sub_20A8C8320();
  sub_20A4C88D8(v37);
  return sub_20A4C88D8((uint64_t)v54);
}

uint64_t sub_20A57992C()
{
  return sub_20A5799BC(qword_26AC81F20, (void (*)(uint64_t))type metadata accessor for TickerPriceChangeDisplayBlueprintModifier);
}

uint64_t sub_20A579974()
{
  return sub_20A5799BC(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
}

uint64_t sub_20A5799BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A579A04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A579A64(255, (unint64_t *)&qword_26AC69EE0, MEMORY[0x263F7D450]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A579A64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for TickerSectionDescriptor;
    v8[1] = type metadata accessor for TickerModel();
    long long v8[2] = sub_20A44DD30();
    v8[3] = sub_20A5799BC(&qword_26AC6CBD0, (void (*)(uint64_t))type metadata accessor for TickerModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A579B24(uint64_t a1)
{
  return sub_20A5790C4(a1, *(void *)(v1 + 16));
}

uint64_t sub_20A579B44@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5792AC(*(char **)(v1 + 16), a1);
}

void sub_20A579B64(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_20A8CF1B0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_20A579BB8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_20A579B64(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_20A579C24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_20A579B64(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t dispatch thunk of DynamicStylerType.dynamic(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of BaseStylerType.positiveColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BaseStylerType.negativeColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of BaseStylerType.positiveColorAgainstWhite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of BaseStylerType.negativeColorAgainstWhite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of BaseStylerType.positiveColorAgainstBlack.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of BaseStylerType.negativeColorAgainstBlack.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of BaseStylerType.theme.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of BaseStylerType.style(window:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of BaseStylerType.style(sidebarSearchBar:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of BaseStylerType.style(toolbarItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

void sub_20A579D5C(void *a1, BOOL a2)
{
  objc_msgSend(a1, sel_setSearchBarStyle_, 2);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v6 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v7 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setPlaceholder_, v7, 0x800000020A9010C0);

  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 32);
  __swift_project_boxed_opaque_existential_1(v8, v10);
  objc_msgSend(a1, sel_setKeyboardAppearance_, (*(uint64_t (**)(uint64_t))(*(void *)(v9 + 8) + 8))(v10));
  if (a2) {
    a2 = objc_msgSend((id)a2, sel_horizontalSizeClass) == (id)2;
  }
  uint64_t v11 = v8[3];
  uint64_t v12 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v11);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 32))(&v19, v11, v12);
  if (v19)
  {
    objc_msgSend(a1, sel_setTranslucent_, a2);
  }
  else
  {
    uint64_t v13 = self;
    id v14 = objc_msgSend(v13, sel_traitCollectionWithUserInterfaceStyle_, 1);
    sub_20A57C2A0();
    uint64_t v15 = (void *)swift_getObjCClassFromMetadata();
    id v16 = objc_msgSend(v15, sel_appearanceForTraitCollection_, v14);
    objc_msgSend(v16, sel_setBarStyle_, 0);
    id v17 = objc_msgSend(v13, sel_traitCollectionWithUserInterfaceStyle_, 2);
    id v18 = objc_msgSend(v15, sel_appearanceForTraitCollection_, v17);
    objc_msgSend(v18, sel_setBarStyle_, 1);
  }
}

uint64_t sub_20A57A018(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8C2990();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - v10;
  id v12 = objc_msgSend(a1, sel_userInterfaceStyle, v9);
  if (!v12)
  {
    swift_retain();
    return v2;
  }
  if (v12 == (id)1)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v7, v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_locale, v4);
    sub_20A4342F4(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_systemTheme, (uint64_t)v26);
    uint64_t v2 = swift_allocObject();
    v13((char *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_locale), (uint64_t)v7, v4);
    id v14 = self;
    id v15 = a1;
    id v16 = objc_msgSend(v14, sel_currentDevice);
    id v17 = objc_msgSend(v16, sel_userInterfaceIdiom);

    if ((unint64_t)v17 + 1 <= 6)
    {
      if (((1 << (v17 + 1)) & 0x5D) != 0)
      {
        sub_20A4342F4((uint64_t)v26, (uint64_t)v22);
        uint64_t v24 = &type metadata for LightTheme;
        uint64_t v25 = &off_26BE66578;
        *(void *)&long long v23 = swift_allocObject();
        sub_20A5B78C8(v22, v23 + 16);

LABEL_6:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_10:
        sub_20A42BEBC(&v23, v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
        sub_20A42BEBC(v26, v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_systemTheme);
        return v2;
      }
      if (!v17)
      {
        sub_20A4342F4((uint64_t)v26, (uint64_t)v22);
        uint64_t v24 = &type metadata for DarkTheme;
        uint64_t v25 = &off_26BE721B8;
        *(void *)&long long v23 = swift_allocObject();
        sub_20A873DAC(v22, (uint64_t)v15, v23 + 16);
        goto LABEL_6;
      }
    }
  }
  else if (v12 == (id)2)
  {
    id v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v18(v11, v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_locale, v4);
    sub_20A4342F4(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_systemTheme, (uint64_t)v26);
    uint64_t v2 = swift_allocObject();
    v18((char *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_locale), (uint64_t)v11, v4);
    LOBYTE(v22[0]) = 2;
    id v19 = a1;
    sub_20A568F88((uint64_t)v26, a1, (uint64_t *)&v23);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_10;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A57A440()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_locale;
  uint64_t v2 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_systemTheme);

  return swift_deallocClassInstance();
}

uint64_t sub_20A57A500()
{
  return type metadata accessor for BaseStyler();
}

uint64_t type metadata accessor for BaseStyler()
{
  uint64_t result = qword_26AC6C808;
  if (!qword_26AC6C808) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A57A554()
{
  uint64_t result = sub_20A8C2990();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20A57A5F0()
{
  uint64_t v1 = *v0;
  char v2 = sub_20A8C2850();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 152))(v4, v5);
  }
}

uint64_t sub_20A57A688()
{
  uint64_t v1 = *v0;
  char v2 = sub_20A8C2850();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 152))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 168))(v4, v5);
  }
}

uint64_t sub_20A57A720()
{
  uint64_t v1 = *v0;
  char v2 = sub_20A8C2850();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 200))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 192))(v4, v5);
  }
}

uint64_t sub_20A57A7B8()
{
  uint64_t v1 = *v0;
  char v2 = sub_20A8C2850();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 192))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 200))(v4, v5);
  }
}

uint64_t sub_20A57A850()
{
  uint64_t v1 = *v0;
  char v2 = sub_20A8C2850();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 216))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  }
}

uint64_t sub_20A57A8E8()
{
  uint64_t v1 = *v0;
  char v2 = sub_20A8C2850();
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  if (v2) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 208))(v4, v5);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 216))(v4, v5);
  }
}

uint64_t sub_20A57A980@<X0>(uint64_t a1@<X8>)
{
  return sub_20A4342F4(*v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme, a1);
}

void sub_20A57A9AC(void *a1)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  objc_msgSend(a1, sel_setTintColor_, v6);

  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  id v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 48))(v7, v8);
  objc_msgSend(a1, sel_setBackgroundColor_, v9);
}

void sub_20A57AA9C(void *a1, BOOL a2)
{
}

void sub_20A57AAC0(void *a1)
{
  uint64_t v2 = *v1;
  id v3 = objc_msgSend(a1, sel_customView);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 24);
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme), v5);
    id v7 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 96))(v5, v6);
    objc_msgSend(v4, sel_setTintColor_, v7);
  }
}

uint64_t sub_20A57AB88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A57A018(a1);
  *a2 = result;
  return result;
}

uint64_t sub_20A57ABB4()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
}

uint64_t sub_20A57AC1C()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
}

uint64_t sub_20A57AC84()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
}

uint64_t sub_20A57ACE8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 56))(v2, v3);
}

uint64_t sub_20A57AD48()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
}

uint64_t sub_20A57ADA8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(v2, v3);
}

uint64_t sub_20A57AE08()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 80))(v2, v3);
}

uint64_t sub_20A57AE68()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v2, v3);
}

uint64_t sub_20A57AEC8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 96))(v2, v3);
}

uint64_t sub_20A57AF28()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
}

uint64_t sub_20A57AF88()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 112))(v2, v3);
}

uint64_t sub_20A57AFE8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 120))(v2, v3);
}

uint64_t sub_20A57B048()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 128))(v2, v3);
}

uint64_t sub_20A57B0A8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 136))(v2, v3);
}

uint64_t sub_20A57B108()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 144))(v2, v3);
}

uint64_t sub_20A57B168()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 152))(v2, v3);
}

uint64_t sub_20A57B1C8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 160))(v2, v3);
}

uint64_t sub_20A57B228()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 168))(v2, v3);
}

uint64_t sub_20A57B288()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 176))(v2, v3);
}

uint64_t sub_20A57B2E8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 184))(v2, v3);
}

uint64_t sub_20A57B348()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 192))(v2, v3);
}

uint64_t sub_20A57B3A8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 200))(v2, v3);
}

uint64_t sub_20A57B408()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 208))(v2, v3);
}

uint64_t sub_20A57B468()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 216))(v2, v3);
}

uint64_t sub_20A57B4C8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 232))(v2, v3);
}

uint64_t sub_20A57B528()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 240))(v2, v3);
}

uint64_t sub_20A57B588()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 248))(v2, v3);
}

uint64_t sub_20A57B5E8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 256))(v2, v3);
}

uint64_t sub_20A57B648()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 264))(v2, v3);
}

uint64_t sub_20A57B6A8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 272))(v2, v3);
}

uint64_t sub_20A57B708()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 280))(v2, v3);
}

uint64_t sub_20A57B768()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 288))(v2, v3);
}

uint64_t sub_20A57B7C8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 296))(v2, v3);
}

uint64_t sub_20A57B828()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 304))(v2, v3);
}

uint64_t sub_20A57B888()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 312))(v2, v3);
}

uint64_t sub_20A57B8E8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 320))(v2, v3);
}

uint64_t sub_20A57B948()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 328))(v2, v3);
}

uint64_t sub_20A57B9A8()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 336))(v2, v3);
}

uint64_t sub_20A57BA08()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 344))(v2, v3);
}

uint64_t sub_20A57BA68()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 352))(v2, v3);
}

uint64_t sub_20A57BAD0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 360))(v2, v3);
}

uint64_t sub_20A57BB30()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 368))(v2, v3);
}

uint64_t sub_20A57BB90()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 376))(v2, v3);
}

uint64_t sub_20A57BBF0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 384))(v2, v3);
}

uint64_t sub_20A57BC50()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 392))(v2, v3);
}

uint64_t sub_20A57BCB0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 400))(v2, v3);
}

uint64_t sub_20A57BD10()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 408))(v2, v3);
}

uint64_t sub_20A57BD70()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 416))(v2, v3);
}

uint64_t sub_20A57BDD0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 424))(v2, v3);
}

uint64_t sub_20A57BE30()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 432))(v2, v3);
}

uint64_t sub_20A57BE90()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 440))(v2, v3);
}

uint64_t sub_20A57BEF0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 448))(v2, v3);
}

uint64_t sub_20A57BF50()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 456))(v2, v3);
}

uint64_t sub_20A57BFB0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 464))(v2, v3);
}

uint64_t sub_20A57C010()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
}

uint64_t sub_20A57C070()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 480))(v2, v3);
}

uint64_t sub_20A57C0D0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 488))(v2, v3);
}

uint64_t sub_20A57C130()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 496))(v2, v3);
}

uint64_t sub_20A57C190()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 504))(v2, v3);
}

uint64_t sub_20A57C1F0()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 8))(v2);
}

uint64_t sub_20A57C248()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI10BaseStyler_theme);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v2);
}

unint64_t sub_20A57C2A0()
{
  unint64_t result = qword_26763BEB8;
  if (!qword_26763BEB8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26763BEB8);
  }
  return result;
}

uint64_t sub_20A57C2E0()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

uint64_t sub_20A57C460()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));

  return swift_deallocObject();
}

Swift::Double __swiftcall Double.percentChange(with:)(Swift::Double with)
{
  double v2 = v1 - with;
  Swift::Double result = with / v2;
  if (v2 <= 0.0) {
    return 0.0;
  }
  return result;
}

void destroy for StockFeedNewsFailedBlueprintModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  double v2 = *(void **)(a1 + 80);
}

uint64_t initializeWithCopy for StockFeedNewsFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a2 + 40;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v8 = v7;
  id v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v9(a1 + 40, v6, v8);
  uint64_t v10 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v10;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  id v11 = v10;
  return a1;
}

uint64_t assignWithCopy for StockFeedNewsFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  uint64_t v4 = *(void **)(a2 + 80);
  uint64_t v5 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for StockFeedNewsFailedBlueprintModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 80);
  long long v7 = *(void **)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;

  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for StockFeedNewsFailedBlueprintModifier(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StockFeedNewsFailedBlueprintModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsFailedBlueprintModifier()
{
  return &type metadata for StockFeedNewsFailedBlueprintModifier;
}

uint64_t sub_20A57C928(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v106 = a3;
  uint64_t v107 = a1;
  uint64_t v109 = a2;
  uint64_t v4 = sub_20A8C8B80();
  uint64_t v89 = *(void *)(v4 - 8);
  uint64_t v90 = v4;
  MEMORY[0x270FA5388](v4);
  CGFloat v88 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57DA90(0, &qword_26AC6A420, MEMORY[0x263F7D950]);
  uint64_t v105 = v6;
  uint64_t v108 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v104 = (uint64_t *)((char *)&v79 - v7);
  sub_20A42C84C();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v86 = (void (*)(char *, uint64_t))((char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v87 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v87);
  uint64_t v83 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for StockFeedSectionDescriptor();
  MEMORY[0x270FA5388](v96);
  char v85 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CD2C0();
  uint64_t v97 = *(void *)(v12 - 8);
  uint64_t v98 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v95 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57DA90(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  id v15 = v14;
  uint64_t v94 = *((void *)v14 - 1);
  MEMORY[0x270FA5388](v14);
  id v93 = (char *)&v79 - v16;
  id v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A57DCA4(0, &qword_26AC68D50, MEMORY[0x263F07A30], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v18 - 8);
  char v91 = (char *)&v79 - v19;
  uint64_t v101 = sub_20A8C2B70();
  uint64_t v99 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  id v92 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57DCA4(0, &qword_26AC69D88, (uint64_t (*)(uint64_t))sub_20A42C4A4, v17);
  MEMORY[0x270FA5388](v21 - 8);
  long long v23 = (char *)&v79 - v22;
  sub_20A42C4A4();
  uint64_t v102 = *(void *)(v24 - 8);
  uint64_t v103 = v24;
  MEMORY[0x270FA5388](v24);
  char v100 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42D9D4();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v28 = (char *)&v79 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57DA90(0, (unint64_t *)&qword_26AC69F10, MEMORY[0x263F7D450]);
  uint64_t v30 = v29;
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v82 = (char *)&v79 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v79 - v34;
  uint64_t v84 = v3;
  uint64_t v36 = v15;
  uint64_t v37 = v107;
  sub_20A8CBAC0();
  uint64_t v38 = v30;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v28, 1, v30) == 1)
  {
    sub_20A57DB84((uint64_t)v28);
    sub_20A57DBE0();
    uint64_t v39 = swift_allocError();
    uint64_t v41 = v104;
    uint64_t v40 = v105;
    uint64_t *v104 = v39;
    uint64_t v42 = v108;
    (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))(v41, *MEMORY[0x263F7D930], v40);
    v109(v41);
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v42 + 8))(v41, v40);
  }
  else
  {
    uint64_t v44 = v31;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v35, v28, v38);
    uint64_t v45 = v36;
    uint64_t v46 = v38;
    uint64_t v47 = v37;
    sub_20A8CBA60();
    uint64_t v49 = v102;
    uint64_t v48 = v103;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v23, 1, v103) == 1)
    {
      sub_20A57DC34((uint64_t)v23, &qword_26AC69D88, (uint64_t (*)(uint64_t))sub_20A42C4A4);
      sub_20A57DBE0();
      uint64_t v50 = swift_allocError();
      uint64_t v52 = v104;
      uint64_t v51 = v105;
      uint64_t *v104 = v50;
      uint64_t v53 = v108;
      (*(void (**)(uint64_t *, void, uint64_t))(v108 + 104))(v52, *MEMORY[0x263F7D930], v51);
      v109(v52);
      (*(void (**)(uint64_t *, uint64_t))(v53 + 8))(v52, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v35, v46);
    }
    else
    {
      char v80 = v35;
      uint64_t v79 = v44;
      uint64_t v81 = v46;
      uint64_t v54 = v100;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v100, v23, v48);
      uint64_t v55 = (uint64_t)v91;
      sub_20A8CBB40();
      uint64_t v56 = v99;
      int v57 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v55, 1, v101);
      uint64_t v59 = v108;
      uint64_t v58 = v109;
      if (v57 == 1)
      {
        sub_20A57DC34(v55, &qword_26AC68D50, MEMORY[0x263F07A30]);
        sub_20A57DBE0();
        uint64_t v60 = swift_allocError();
        uint64_t v62 = v104;
        uint64_t v61 = v105;
        uint64_t *v104 = v60;
        (*(void (**)(uint64_t *, void, uint64_t))(v59 + 104))(v62, *MEMORY[0x263F7D930], v61);
        v58(v62);
        (*(void (**)(uint64_t *, uint64_t))(v59 + 8))(v62, v61);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v48);
        return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v80, v81);
      }
      else
      {
        (*(void (**)(void))(v56 + 32))();
        (*(void (**)(char *, uint64_t, char *))(v94 + 16))(v93, v47, v45);
        uint64_t v63 = v95;
        uint64_t v64 = v84;
        sub_20A57D6E4(v95);
        uint64_t v65 = *(void *)(v64 + 32);
        swift_storeEnumTagMultiPayload();
        sub_20A57DCA4(0, (unint64_t *)&qword_26AC7FF20, (uint64_t (*)(uint64_t))sub_20A42C4A4, MEMORY[0x263F8E0F8]);
        char v91 = v45;
        uint64_t v66 = v48;
        uint64_t v67 = swift_allocObject();
        *(_OWORD *)(v67 + 16) = xmmword_20A8D3DC0;
        sub_20A46CF6C();
        uint64_t v69 = *(int *)(v68 + 48);
        uint64_t v70 = v83;
        (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v83, v63, v98);
        *(void *)&v70[v69] = v65;
        swift_storeEnumTagMultiPayload();
        sub_20A57DD08(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
        swift_retain();
        sub_20A8C8320();
        uint64_t v71 = sub_20A57DD08(&qword_26AC69D78, (void (*)(uint64_t))sub_20A42C4A4);
        uint64_t v72 = sub_20A57DD08(&qword_26AC69D70, (void (*)(uint64_t))sub_20A42C4A4);
        MEMORY[0x21051E240](v67, v66, v71, v72);
        sub_20A57DD08(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
        uint64_t v73 = v82;
        sub_20A8C8810();
        uint64_t v74 = v93;
        sub_20A8CBAB0();
        uint64_t v86 = *(void (**)(char *, uint64_t))(v79 + 8);
        v86(v73, v81);
        uint64_t v75 = v89;
        uint64_t v76 = v90;
        uint64_t v77 = v88;
        (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, *MEMORY[0x263F7D528], v90);
        sub_20A57DD08(&qword_26AC76FA0, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
        uint64_t v78 = v104;
        sub_20A8C9B50();
        (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v76);
        v109(v78);
        (*(void (**)(uint64_t *, uint64_t))(v108 + 8))(v78, v105);
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v95, v98);
        (*(void (**)(char *, char *))(v94 + 8))(v74, v91);
        (*(void (**)(char *, uint64_t))(v99 + 8))(v92, v101);
        (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v103);
        return ((uint64_t (*)(char *, uint64_t))v86)(v80, v81);
      }
    }
  }
}

uint64_t sub_20A57D6E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_20A8CD2C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v23 - v7;
  sub_20A50C02C();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A6989CC((uint64_t)v11);
  sub_20A50C150();
  uint64_t v13 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12) == 1)
  {
    if (sub_20A8C2B50())
    {
      if (qword_267639BD8 != -1) {
        swift_once();
      }
      id v14 = qword_267652F60;
    }
    else
    {
      if (qword_267639BB8 != -1) {
        swift_once();
      }
      id v14 = qword_267652F18;
    }
    uint64_t v21 = __swift_project_value_buffer(v2, (uint64_t)v14);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(a1, v21, v2);
  }
  else
  {
    id v15 = &v11[*(int *)(v13 + 48)];
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v16(v8, v11, v2);
    v16(v5, v15, v2);
    uint64_t v17 = sub_20A8C2B50();
    uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    if (v17)
    {
      v18(v8, v2);
      uint64_t v19 = a1;
      uint64_t v20 = v5;
    }
    else
    {
      v18(v5, v2);
      uint64_t v19 = a1;
      uint64_t v20 = v8;
    }
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(v19, v20, v2);
  }
}

unint64_t sub_20A57D9AC()
{
  unint64_t result = qword_26AC81DD0;
  if (!qword_26AC81DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC81DD0);
  }
  return result;
}

uint64_t sub_20A57DA00()
{
  return sub_20A57DD08(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

uint64_t sub_20A57DA48()
{
  return sub_20A57DD08(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
}

void sub_20A57DA90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    long long v8[2] = sub_20A57DD08(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A57DD08(&qword_26AC6D860, (void (*)(uint64_t))type metadata accessor for StockFeedModel);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_20A57DB84(uint64_t a1)
{
  sub_20A42D9D4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20A57DBE0()
{
  unint64_t result = qword_26763BEC0;
  if (!qword_26763BEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BEC0);
  }
  return result;
}

uint64_t sub_20A57DC34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_20A57DCA4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_20A57DCA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A57DD08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StockFeedNewsFailedBlueprintModifier.ModifierError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20A57DDECLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StockFeedNewsFailedBlueprintModifier.ModifierError()
{
  return &type metadata for StockFeedNewsFailedBlueprintModifier.ModifierError;
}

unint64_t sub_20A57DE28()
{
  unint64_t result = qword_26763BEC8;
  if (!qword_26763BEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BEC8);
  }
  return result;
}

uint64_t sub_20A57DE7C()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DemoArticleRecirculationConfigurationService()
{
  return self;
}

uint64_t sub_20A57DED8()
{
  return sub_20A8C6580();
}

void sub_20A57DF30()
{
  if (!qword_26763BED0)
  {
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763BED0);
    }
  }
}

ValueMetadata *type metadata accessor for Settings.AppLaunch()
{
  return &type metadata for Settings.AppLaunch;
}

uint64_t sub_20A57DF98(uint64_t a1)
{
  return sub_20A57DFE0(a1, 0xD000000000000033, 0x800000020A901230, &qword_26AC9E8B8);
}

uint64_t sub_20A57DFBC(uint64_t a1)
{
  return sub_20A57DFE0(a1, 0xD000000000000035, 0x800000020A9011F0, &qword_26AC9E9B0);
}

uint64_t sub_20A57DFE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C4270();
  double v10 = MEMORY[0x270FA5388](v9);
  (*(void (**)(char *, void, double))(v12 + 104))((char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D110], v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D100], v5);
  v14[1] = 0;
  sub_20A57E3F0(0, (unint64_t *)&qword_26AC69300);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a4 = result;
  return result;
}

uint64_t sub_20A57E1B0(uint64_t a1)
{
  return sub_20A57E1F8(a1, 0xD00000000000003ALL, 0x800000020A9011B0, &qword_26AC9E9A8);
}

uint64_t sub_20A57E1D4(uint64_t a1)
{
  return sub_20A57E1F8(a1, 0xD00000000000001DLL, 0x800000020A901190, &qword_26AC9EC10);
}

uint64_t sub_20A57E1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_20A8C4260();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C4270();
  double v10 = MEMORY[0x270FA5388](v9);
  (*(void (**)(char *, void, double))(v12 + 104))((char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F7D110], v10);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F7D100], v5);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_20A57E3F0(0, &qword_26AC692F0);
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  *a4 = result;
  return result;
}

uint64_t sub_20A57E3CC(uint64_t a1)
{
  return sub_20A57E1F8(a1, 0xD000000000000029, 0x800000020A901160, &qword_26AC9EC18);
}

void sub_20A57E3F0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_20A8C42D0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t ForYouSection.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ForYouSection.headlines.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ForYouSection.descriptor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ForYouSection();
  return sub_20A57F0B4(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
}

uint64_t type metadata accessor for ForYouSection()
{
  uint64_t result = qword_26763BF38;
  if (!qword_26763BF38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ForYouSection.init(identifier:headlines:descriptor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v6 = (uint64_t)a5 + *(int *)(type metadata accessor for ForYouSection() + 24);

  return sub_20A57E55C(a4, v6);
}

uint64_t sub_20A57E55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ForYouSectionDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ForYouSection.startIndex.getter()
{
  return 0;
}

uint64_t ForYouSection.endIndex.getter()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t ForYouSection.subscript.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ForYouSection();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A57F0B4(v3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ForYouSection);
  uint64_t v9 = *(void *)(*((void *)v8 + 2) + 16);
  uint64_t result = sub_20A57FAE8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ForYouSection);
  if ((a1 & 0x8000000000000000) != 0 || v9 <= (uint64_t)a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = *(void *)(v3 + 16);
    if (*(void *)(v11 + 16) > a1)
    {
      uint64_t v12 = sub_20A8C4020();
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(a2, v11+ ((*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80))+ *(void *)(*(void *)(v12 - 8) + 72) * a1, v12);
    }
  }
  __break(1u);
  return result;
}

Swift::Int __swiftcall ForYouSection.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t ForYouSection.makeIterator()()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = *(void *)(v0 + 16);
  *(void *)(v1 + 24) = 0;
  sub_20A57F15C();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_20A57F154;
  *(void *)(v2 + 24) = v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_20A57E7A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  unint64_t v7 = *(void *)(v6 + 16);
  if (v5 == v7)
  {
    uint64_t v8 = sub_20A8C4020();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
  else if (v5 >= v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = sub_20A8C4020();
    uint64_t v10 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a2, v6+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v5, v9);
    *(void *)(a1 + 24) = v5 + 1;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v9);
  }
  return result;
}

void sub_20A57E904(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + 16);
}

void (*sub_20A57E914(uint64_t *a1, unint64_t *a2))(void *a1)
{
  uint64_t v4 = sub_20A8C4020();
  *a1 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  a1[1] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  ForYouSection.subscript.getter(*a2, (uint64_t)v6);
  return sub_20A57E9C0;
}

void sub_20A57E9C0(void *a1)
{
  uint64_t v1 = (void *)a1[2];
  (*(void (**)(void *, void))(a1[1] + 8))(v1, *a1);

  free(v1);
}

uint64_t *sub_20A57EA0C@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *result;
  if (*result < 0 || (uint64_t v5 = result[1], *(void *)(*(void *)(v2 + 16) + 16) < v5))
  {
    __break(1u);
  }
  else
  {
    sub_20A57F364(0, &qword_26763BF20, MEMORY[0x263F8E738]);
    uint64_t result = (uint64_t *)sub_20A57F0B4(v2, (uint64_t)a2 + *(int *)(v6 + 40), (uint64_t (*)(void))type metadata accessor for ForYouSection);
    *a2 = v3;
    a2[1] = v5;
  }
  return result;
}

void sub_20A57EAA0(uint64_t a1@<X8>)
{
  sub_20A57F0B4(v1, a1, (uint64_t (*)(void))type metadata accessor for ForYouSection);
  sub_20A57F364(0, &qword_26763BF08, MEMORY[0x263F8D0E0]);
  *(void *)(a1 + *(int *)(v3 + 36)) = 0;
  *(void *)(a1 + *(int *)(v3 + 40)) = *(void *)(*(void *)(v1 + 16) + 16);
}

BOOL sub_20A57EB1C()
{
  return *(void *)(*(void *)(v0 + 16) + 16) == 0;
}

void sub_20A57EB30(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_20A57EB40@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    unint64_t v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    unint64_t v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A57EB78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = sub_20A57EBB0(*a1, a2, *a3);
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_20A57EBB0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      int64x2_t v9 = (int64x2_t)(unint64_t)result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip2q_s64(v9, v8), vzip1q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    uint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t *sub_20A57EC88(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result) {
    return 0;
  }
  unint64_t v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    uint64_t result = 0;
    unint64_t v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      uint64_t result = (uint64_t *)((char *)result + 1);
      if (v4 == result) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_20A57ECE0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  uint64_t v3 = a2[1];
  if (*result >= *a2)
  {
    BOOL v5 = __OFSUB__(v2, v3);
    BOOL v4 = v2 - v3 < 0;
  }
  else
  {
    BOOL v5 = 0;
    BOOL v4 = 0;
  }
  if (v4 == v5) {
    __break(1u);
  }
  return result;
}

void *sub_20A57ECFC(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < *result) {
    __break(1u);
  }
  return result;
}

void *sub_20A57ED18(void *result, void *a2)
{
  if (*result < *a2 || a2[1] < result[1]) {
    __break(1u);
  }
  return result;
}

void *sub_20A57ED34@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    *a2 = *result + 1;
  }
  return result;
}

void *sub_20A57ED4C(void *result)
{
  if (__OFADD__(*result, 1)) {
    __break(1u);
  }
  else {
    ++*result;
  }
  return result;
}

uint64_t sub_20A57ED64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  *(void *)(v3 + 24) = 0;
  sub_20A57F15C();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_20A57F154;
  *(void *)(v4 + 24) = v3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_20A57FAE8(v1, (uint64_t (*)(void))type metadata accessor for ForYouSection);
  *a1 = v4;
  return result;
}

uint64_t sub_20A57EE08()
{
  return *(void *)(*(void *)(v0 + 16) + 16);
}

uint64_t sub_20A57EE14()
{
  return 2;
}

size_t sub_20A57EE1C()
{
  size_t v1 = sub_20A75C514(v0);
  sub_20A57FAE8(v0, (uint64_t (*)(void))type metadata accessor for ForYouSection);
  return v1;
}

uint64_t sub_20A57EE68()
{
  return sub_20A8CE520();
}

uint64_t ForYouSection.description.getter()
{
  return 0;
}

uint64_t _s8StocksUI13ForYouSectionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_20A8CF760() & 1) == 0 || (sub_20A4C8D58(a1[2], a2[2]) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(type metadata accessor for ForYouSection() + 24);

  return _s8StocksUI23ForYouSectionDescriptorO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v5, (uint64_t)a2 + v5);
}

uint64_t sub_20A57F0B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A57F11C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_20A57F154@<X0>(uint64_t a1@<X8>)
{
  return sub_20A57E7A0(v1, a1);
}

void sub_20A57F15C()
{
  if (!qword_26763BED8)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E008];
    sub_20A57F4D0(255, &qword_26763BEE0, MEMORY[0x263F8E008]);
    sub_20A57F48C(&qword_26763BEE8, &qword_26763BEE0, v0);
    unint64_t v1 = sub_20A8CF400();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26763BED8);
    }
  }
}

unint64_t sub_20A57F210()
{
  unint64_t result = qword_26763BEF0;
  if (!qword_26763BEF0)
  {
    type metadata accessor for ForYouSection();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26763BEF0);
  }
  return result;
}

uint64_t sub_20A57F24C()
{
  return sub_20A57F280(&qword_26763BEF8);
}

uint64_t sub_20A57F280(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ForYouSection();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A57F2C4()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_20A57F2D0()
{
  return sub_20A57F320(&qword_26763BF00, &qword_26763BF08, MEMORY[0x263F8D0E0]);
}

uint64_t sub_20A57F320(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A57F364(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A57F364(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for ForYouSection();
    uint64_t v7 = sub_20A57F280(&qword_26763BF10);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A57F3EC()
{
  return sub_20A57F320(&qword_26763BF18, &qword_26763BF20, MEMORY[0x263F8E738]);
}

uint64_t sub_20A57F43C()
{
  return sub_20A57F48C(&qword_26763BF28, &qword_26763BF30, MEMORY[0x263F8DB80]);
}

uint64_t sub_20A57F48C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20A57F4D0(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_20A57F4D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_20A8C4020();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ForYouSection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    unint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    uint64_t v9 = type metadata accessor for ForYouSectionDescriptor();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v8[1];
      *unint64_t v7 = *v8;
      v7[1] = v14;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v3;
}

uint64_t destroy for ForYouSection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for ForYouSectionDescriptor();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v6 = sub_20A8CC310();
LABEL_6:
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v4, v6);
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    uint64_t v6 = sub_20A8C3F00();
    goto LABEL_6;
  }

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ForYouSection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)((char *)a1 + v5);
  unint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for ForYouSectionDescriptor();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = sub_20A8CC310();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v6, v7, v11);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_20A8C3F00();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v7, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for ForYouSection(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    unint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_20A57FAE8((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
    uint64_t v9 = type metadata accessor for ForYouSectionDescriptor();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = sub_20A8CC310();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *unint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_20A8C3F00();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20A57FAE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for ForYouSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for ForYouSectionDescriptor();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = sub_20A8CC310();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_20A8C3F00();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ForYouSection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_20A57FAE8((uint64_t)a1 + v7, (uint64_t (*)(void))type metadata accessor for ForYouSectionDescriptor);
    uint64_t v10 = type metadata accessor for ForYouSectionDescriptor();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_20A8CC310();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_20A8C3F00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouSection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A57FDF0);
}

uint64_t sub_20A57FDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ForYouSectionDescriptor();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ForYouSection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A57FEB4);
}

uint64_t sub_20A57FEB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ForYouSectionDescriptor();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_20A57FF5C()
{
  uint64_t result = type metadata accessor for ForYouSectionDescriptor();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A580008@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4((uint64_t)a1, (uint64_t)v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A8C4990();
  uint64_t result = sub_20A8C5BA0();
  if (result)
  {
    uint64_t v5 = result;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, (unint64_t *)&qword_26AC6AE70);
    uint64_t result = sub_20A8C5BB0();
    if (v9)
    {
      uint64_t v6 = type metadata accessor for StockFeedViewerModule();
      uint64_t v7 = swift_allocObject();
      sub_20A42BEBC(v10, v7 + 16);
      *(void *)(v7 + 56) = v5;
      uint64_t result = sub_20A42BEBC(&v8, v7 + 64);
      a2[3] = v6;
      a2[4] = (uint64_t)&off_26BE60428;
      *a2 = v7;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A58011C()
{
  type metadata accessor for StockFeedViewerViewController();
  sub_20A8C6290();
  swift_release();
  sub_20A4301D4(0, &qword_26AC76798);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC76790);
  sub_20A8C62A0();
  type metadata accessor for StockFeedViewerRouter();
  sub_20A8C5990();
  swift_release();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7A980);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC79890);
  sub_20A8C62A0();
  swift_release();
  sub_20A4301D4(0, &qword_26AC7A008);
  sub_20A8C62A0();
  swift_release();
  type metadata accessor for StockFeedViewerPageViewControllerProvider();
  sub_20A8C6290();

  return swift_release();
}

uint64_t sub_20A580354(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC76798);
  uint64_t result = sub_20A8C5BB0();
  if (!v31)
  {
    __break(1u);
    goto LABEL_8;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A980);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v3 = v28;
  if (!v28)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v29;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A442EC4();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = (void *)result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC6A150);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v6 = v26;
  if (!v26)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC6A510);
  uint64_t result = sub_20A8C5BB0();
  if (v25)
  {
    uint64_t v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v30, v31);
    double v9 = MEMORY[0x270FA5388](v8);
    uint64_t v11 = (void *)((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
    uint64_t v13 = *v11;
    uint64_t v22 = type metadata accessor for StockFeedViewerStyler();
    uint64_t v23 = &off_26BE6BB28;
    v21[0] = v13;
    uint64_t v14 = (char *)objc_allocWithZone((Class)type metadata accessor for StockFeedViewerViewController());
    uint64_t v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
    double v16 = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (void *)((char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v19 + 16))(v18, v16);
    uint64_t v20 = sub_20A58128C(*v18, v3, v4, v5, v6, v7, (uint64_t)v24, v14);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    return (uint64_t)v20;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A5806D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, qword_26AC6D3E0);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v4 = v15;
  if (v15)
  {
    uint64_t v5 = type metadata accessor for StockFeedViewerStyler();
    uint64_t v6 = v16;
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    double v8 = MEMORY[0x270FA5388](v7);
    uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *, double))(v11 + 16))(v10, v8);
    uint64_t v12 = sub_20A431A50((uint64_t)v10, v5, v4, v6);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_26BE6BB28;
    *a2 = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A580834@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_20A4342F4(a1, (uint64_t)v6);
  uint64_t v3 = type metadata accessor for StockFeedViewerRouter();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t result = sub_20A42BEBC(v6, v4 + 24);
  a2[3] = v3;
  a2[4] = (uint64_t)&off_26BE728C8;
  *a2 = v4;
  return result;
}

void sub_20A5808B0(uint64_t a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  type metadata accessor for StockFeedViewerViewController();
  id v2 = (id)sub_20A8C5BA0();
  swift_unknownObjectWeakAssign();
}

uint64_t sub_20A580930@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC79890);
  uint64_t result = sub_20A8C5BB0();
  uint64_t v5 = v16;
  if (v16)
  {
    uint64_t v6 = v17;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A4301D4(0, &qword_26AC76790);
    uint64_t result = sub_20A8C5BB0();
    if (v15)
    {
      uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      double v8 = MEMORY[0x270FA5388](v7);
      uint64_t v10 = (uint64_t **)&v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(uint64_t **, double))(v11 + 16))(v10, v8);
      uint64_t v12 = sub_20A581114(v5, v6, *v10);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
      *a2 = v12;
      a2[1] = &off_26BE5FE28;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A580AD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC7A008);
  uint64_t result = sub_20A8C5BB0();
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20A5810BC();
    uint64_t result = sub_20A8C5BA0();
    if (result)
    {
      uint64_t v5 = result;
      type metadata accessor for StockFeedViewerInteractor();
      uint64_t v6 = (void *)swift_allocObject();
      v6[3] = 0;
      uint64_t result = swift_unknownObjectWeakInit();
      void v6[4] = v7;
      uint64_t v6[5] = v8;
      v6[6] = v5;
      *a2 = v6;
      a2[1] = &off_26BE67F70;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20A580BE0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A442DC8(0);
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, &qword_26AC68EC0);
  uint64_t result = sub_20A8C5BB0();
  if (!v11[3])
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A5810BC();
  uint64_t result = sub_20A8C5BA0();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = result;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68E50);
  uint64_t result = sub_20A8C5BB0();
  if (!v10[3])
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&unk_26AC68F00);
  uint64_t result = sub_20A8C5BB0();
  if (v9)
  {
    type metadata accessor for StockFeedViewerDataManager();
    swift_allocObject();
    uint64_t v7 = sub_20A5B7364(v5, v11, v6, v10, (uint64_t)v8);
    swift_release();
    uint64_t result = swift_release();
    *a2 = v7;
    a2[1] = (uint64_t)&off_26BE663F8;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20A580DD0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20A4301D4(0, (unint64_t *)&qword_26AC71310);
  uint64_t result = sub_20A8C5BB0();
  if (v18)
  {
    uint64_t v2 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
    double v3 = MEMORY[0x270FA5388](v2);
    uint64_t v5 = (void *)((char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v6 + 16))(v5, v3);
    uint64_t v7 = *v5;
    uint64_t v8 = type metadata accessor for StockFeedModule();
    void v16[3] = v8;
    v16[4] = &off_26BE63640;
    v16[0] = v7;
    type metadata accessor for StockFeedViewerPageViewControllerProvider();
    uint64_t v9 = (void *)swift_allocObject();
    uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v8);
    double v11 = MEMORY[0x270FA5388](v10);
    uint64_t v13 = (void *)((char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, double))(v14 + 16))(v13, v11);
    uint64_t v15 = *v13;
    void v9[5] = v8;
    v9[6] = &off_26BE63640;
    void v9[2] = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return (uint64_t)v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for StockFeedViewerAssembly()
{
  return self;
}

uint64_t sub_20A581004()
{
  sub_20A8C5CC0();
  sub_20A4301D4(0, &qword_26AC76788);
  sub_20A8C62A0();
  swift_release();
  swift_release();
  sub_20A8C5CD0();
  sub_20A8C6280();

  return swift_release();
}

void sub_20A5810BC()
{
  if (!qword_26AC69640)
  {
    type metadata accessor for StockListSelectionModel();
    unint64_t v0 = sub_20A8C5D90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC69640);
    }
  }
}

void *sub_20A581114(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  v15[3] = v5;
  v15[4] = &off_26BE728C8;
  v15[0] = a3;
  type metadata accessor for StockFeedViewerEventHandler();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v5);
  double v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (void *)((char *)v14 - v9);
  (*(void (**)(char *, double))(v11 + 16))((char *)v14 - v9, v8);
  uint64_t v12 = *v10;
  void v14[3] = v5;
  v14[4] = &off_26BE728C8;
  v14[0] = v12;
  v6[3] = 0;
  swift_unknownObjectWeakInit();
  void v6[4] = a1;
  uint64_t v6[5] = a2;
  sub_20A4342F4((uint64_t)v14, (uint64_t)(v6 + 6));
  *(void *)(v6[4] + 24) = &off_26BE5FE20;
  swift_unknownObjectWeakAssign();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return v6;
}

char *sub_20A58128C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  void v24[3] = type metadata accessor for StockFeedViewerStyler();
  v24[4] = &off_26BE6BB28;
  v24[0] = a1;
  sub_20A4342F4((uint64_t)v24, (uint64_t)&a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_styler]);
  uint64_t v17 = &a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_eventHandler];
  *(void *)uint64_t v17 = a2;
  *((void *)v17 + 1) = a3;
  *(void *)&a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_blueprintPageViewController] = a4;
  uint64_t v18 = &a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_toolbarManager];
  *(void *)uint64_t v18 = a5;
  *((void *)v18 + 1) = a6;
  sub_20A4342F4(a7, (uint64_t)&a8[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_shareMenuItemManager]);
  v23.receiver = a8;
  v23.super_class = ObjectType;
  swift_unknownObjectRetain();
  id v19 = a4;
  swift_unknownObjectRetain();
  uint64_t v20 = (char *)objc_msgSendSuper2(&v23, sel_initWithNibName_bundle_, 0, 0);
  *(void *)(*(void *)&v20[OBJC_IVAR____TtC8StocksUI29StockFeedViewerViewController_eventHandler] + 24) = &off_26BE62740;
  swift_unknownObjectWeakAssign();
  uint64_t v21 = v20;
  sub_20A8C9020();

  __swift_destroy_boxed_opaque_existential_1(a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v21;
}

uint64_t sub_20A5813F4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
    sub_20A8C3970();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_20A8C4460();
    swift_release_n();
    sub_20A8C48F0();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for ResetIdentifierCommandHandler()
{
  return self;
}

void sub_20A581520()
{
}

uint64_t sub_20A581544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_20A42BEBC(&v11, v9 + 24);
  return v9;
}

void sub_20A5815E4()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), *(void *)(v0 + 48));
  sub_20A8C3850();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  double v3 = self;
  id v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x800000020A9013F0);
  sub_20A8C2370();

  uint64_t v5 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v5, v6, 1, 0x800000020A901450);

  id v8 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v9 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v9, 1, 0, 0x800000020A901480);

  objc_msgSend(v7, sel_addAction_, v11);
  id v12 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v14 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_20A581AF0;
  void aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20A4391D4;
  aBlock[3] = &block_descriptor_16;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  id v16 = objc_msgSend(v10, sel_actionWithTitle_style_handler_, v14, 0, v15, 0x800000020A9014C0);
  _Block_release(v15);
  swift_release();

  objc_msgSend(v7, sel_addAction_, v16);
  id v17 = objc_msgSend(self, sel_sharedApplication);
  id v18 = objc_msgSend(v17, sel_key_window);

  if (v18)
  {
    id v19 = objc_msgSend(v18, sel_rootViewController);

    if (v19)
    {
      objc_msgSend(v19, sel_presentViewController_animated_completion_, v7, 1, 0);
    }
  }
}

uint64_t sub_20A581AB8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A581AF0()
{
  return sub_20A5813F4();
}

uint64_t sub_20A581AF8()
{
  return sub_20A675568();
}

uint64_t type metadata accessor for MainSplitViewController()
{
  uint64_t result = qword_26AC74BE8;
  if (!qword_26AC74BE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A581B50()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20A581BA8(unsigned char *a1, id a2)
{
  if (a1[8] != 1) {
    return *(void *)a1;
  }
  id v3 = objc_msgSend(a2, sel_viewControllers);
  sub_20A4CF814();
  sub_20A8CE5E0();

  uint64_t v4 = sub_20A8CE630();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)a1 = v4;
  a1[8] = 0;
  return v4;
}

BOOL sub_20A581C7C(void **a1)
{
  uint64_t v1 = *a1;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2) {
    return 1;
  }
  id v3 = (void *)v2;
  id v4 = v1;
  id v5 = objc_msgSend(v3, sel_viewControllers);
  sub_20A4CF814();
  unint64_t v6 = sub_20A8CE5E0();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20A8CF540();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  return v7 != 0;
}

void sub_20A581D64(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x2105289B0](v1);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v2, sel_viewControllers);
    sub_20A4CF814();
    unint64_t v5 = sub_20A8CE5E0();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_20A8CF540();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v6 < 2)
    {
    }
    else
    {
      id v7 = objc_msgSend(v3, sel_viewControllers);
      uint64_t v8 = sub_20A8CE5E0();

      if ((v8 & 0xC000000000000001) != 0)
      {
        MEMORY[0x210527700](1, v8);
        goto LABEL_8;
      }
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
      {
        id v9 = *(id *)(v8 + 40);
LABEL_8:
        swift_bridgeObjectRelease();

        return;
      }
      __break(1u);
    }
  }
}

void sub_20A581EC0(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_26AC74BD8] = 0;
  id v4 = a3;

  sub_20A8CF520();
  __break(1u);
}

void sub_20A581F38(void *a1)
{
  uint64_t v3 = (uint64_t)v1 + qword_26AC74BE0;
  swift_beginAccess();
  sub_20A4342F4(v3, (uint64_t)v22);
  uint64_t v4 = v23;
  uint64_t v5 = v24;
  __swift_project_boxed_opaque_existential_1(v22, v23);
  uint64_t v6 = *(void *)(v5 + 8);
  id v7 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 8);
  uint64_t v20 = v4;
  uint64_t v21 = v5;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  v7(a1, v4, v6);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_20A42BEBC(&v19, v3);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_20A4342F4(v3, (uint64_t)v22);
  __swift_project_boxed_opaque_existential_1(v22, v23);
  id v8 = objc_msgSend(v1, sel_view);
  if (!v8) {
    goto LABEL_16;
  }
  id v9 = v8;
  sub_20A448C14(v8, a1);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  id v10 = objc_msgSend(v1, sel_childViewControllers);
  sub_20A4CF814();
  unint64_t v11 = sub_20A8CE5E0();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_20A8CF540();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_4;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if ((v11 & 0xC000000000000001) != 0)
    {
      id v12 = (id)MEMORY[0x210527700](0, v11);
      goto LABEL_7;
    }
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v11 + 32);
LABEL_7:
      uint64_t v13 = v12;
      swift_bridgeObjectRelease();
      self;
      uint64_t v14 = swift_dynamicCastObjCClass();
      if (!v14)
      {

        return;
      }
      uint64_t v15 = (void *)v14;
      sub_20A4342F4(v3, (uint64_t)v22);
      __swift_project_boxed_opaque_existential_1(v22, v23);
      id v16 = objc_msgSend(v15, sel_toolbar);
      if (v16)
      {
        id v17 = v16;
        sub_20A448938(v16, a1);

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
        return;
      }
      goto LABEL_17;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  swift_bridgeObjectRelease();
}

void sub_20A5821CC(void *a1)
{
  v3.receiver = a1;
  v3.super_class = (Class)swift_getObjectType();
  id v1 = v3.receiver;
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  id v2 = objc_msgSend(v1, sel_traitCollection, v3.receiver, v3.super_class);
  sub_20A581F38(v2);
}

id sub_20A58224C(double a1, double a2)
{
  if (a2 >= a1)
  {
    if (qword_26AC6CB10 != -1) {
      swift_once();
    }
    objc_super v3 = &qword_26AC9E918;
  }
  else
  {
    if (qword_26AC80B38 != -1) {
      swift_once();
    }
    objc_super v3 = &qword_26AC9EBC8;
  }
  double v4 = *(double *)v3;
  id result = objc_msgSend(v2, sel_minimumPrimaryColumnWidth);
  if (v6 != v4)
  {
    id result = objc_msgSend(v2, sel_view);
    if (result)
    {
      id v7 = result;
      objc_msgSend(result, sel_bounds);
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      CGFloat v15 = v14;

      v22.origin.x = v9;
      v22.origin.y = v11;
      v22.size.width = v13;
      v22.size.height = v15;
      double Width = CGRectGetWidth(v22);
      id result = objc_msgSend(v2, sel_view);
      if (result)
      {
        id v17 = result;
        objc_msgSend(result, sel_bounds);
        double v19 = v18;

        if (v19 >= Width)
        {
          if (qword_26AC6CB10 != -1) {
            swift_once();
          }
          uint64_t v20 = &qword_26AC9E918;
        }
        else
        {
          if (qword_26AC80B38 != -1) {
            swift_once();
          }
          uint64_t v20 = &qword_26AC9EBC8;
        }
        objc_msgSend(v2, sel_setMinimumPrimaryColumnWidth_, *(double *)v20);
        return objc_msgSend(v2, sel_setMaximumPrimaryColumnWidth_, 1.79769313e308);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

void sub_20A582470(void *a1)
{
  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  id v1 = v8.receiver;
  objc_msgSendSuper2(&v8, sel_viewWillLayoutSubviews);
  id v2 = objc_msgSend(v1, sel_view, v8.receiver, v8.super_class);
  if (v2)
  {
    objc_super v3 = v2;
    objc_msgSend(v2, sel_bounds);
    double v5 = v4;
    double v7 = v6;

    sub_20A58224C(v5, v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_20A582518(void *a1, uint64_t a2, void *a3)
{
  v7.receiver = a1;
  v7.super_class = (Class)swift_getObjectType();
  id v4 = a3;
  id v5 = v7.receiver;
  objc_msgSendSuper2(&v7, sel_traitCollectionDidChange_, v4);
  id v6 = objc_msgSend(v5, sel_traitCollection, v7.receiver, v7.super_class);
  sub_20A581F38(v6);
}

id sub_20A5825A8(void *a1, double a2, double a3, uint64_t a4, uint64_t a5)
{
  v10.receiver = a1;
  v10.super_class = (Class)swift_getObjectType();
  swift_unknownObjectRetain();
  objc_super v8 = (char *)v10.receiver;
  objc_msgSendSuper2(&v10, sel_viewWillTransitionToSize_withTransitionCoordinator_, a5, a2, a3);
  id result = sub_20A58224C(a2, a3);
  if (*(void *)&v8[qword_26AC74BD8])
  {
    swift_retain();
    sub_20A8CAAF0();
    swift_unknownObjectRelease();

    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_20A582668(void *a1)
{
  return objc_msgSend(a1, sel_setNeedsStatusBarAppearanceUpdate);
}

void sub_20A582674()
{
}

uint64_t sub_20A5826A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_26AC74BE0);
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_26AC74BD0);
  swift_release();
  uint64_t v1 = v0 + qword_26AC74BC8;

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t sub_20A582704(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_26AC74BE0);
  __swift_destroy_boxed_opaque_existential_1(a1 + qword_26AC74BD0);
  swift_release();
  uint64_t v2 = a1 + qword_26AC74BC8;

  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t sub_20A582770()
{
  return type metadata accessor for MainSplitViewController();
}

id sub_20A582778()
{
  id result = objc_msgSend(v0, sel_ts_parentVC);
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for MainSplitViewController();
    id result = (id)swift_dynamicCastClass();
    if (!result)
    {
      uint64_t v3 = sub_20A582778();

      return (id)v3;
    }
  }
  return result;
}

double sub_20A5827DC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = v2;
  sub_20A8C9710();
  double v6 = v5;
  double v8 = v7;
  sub_20A8C9820();
  double v10 = v9 - v6 - v8;
  uint64_t v11 = type metadata accessor for StockFeedEarningsViewModel();
  double v12 = &off_263FDE000;
  if (*(void *)(a1 + *(int *)(v11 + 32) + 8))
  {
    uint64_t v86 = a1;
    char v13 = *(unsigned char *)(a1 + *(int *)(v11 + 36));
    uint64_t v83 = v2;
    double v14 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    sub_20A42CF04();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
    if (v13)
    {
      double v18 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      uint64_t v19 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
      id v85 = v18;
      *(void *)(inited + 40) = sub_20A8CEE20();
      uint64_t v20 = (void *)*MEMORY[0x263F81500];
      *(void *)(inited + 64) = v19;
      *(void *)(inited + 72) = v20;
      uint64_t v22 = v14[5];
      uint64_t v21 = v14[6];
      __swift_project_boxed_opaque_existential_1(v14 + 2, v22);
      uint64_t v23 = *(void *)(v21 + 16);
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 96);
      id v25 = v20;
      uint64_t v26 = v24(v22, v23);
      *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
      *(void *)(inited + 80) = v26;
      sub_20A4CF8B0(inited);
      id v27 = objc_allocWithZone(MEMORY[0x263F086A0]);
      uint64_t v28 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_20A4393AC();
      uint64_t v29 = (void *)sub_20A8CE170();
      swift_bridgeObjectRelease();
      double v12 = &off_263FDE000;
      id v30 = objc_msgSend(v27, sel_initWithString_attributes_, v28, v29);
    }
    else
    {
      uint64_t v31 = (void *)*MEMORY[0x263F814F0];
      *(void *)(inited + 32) = *MEMORY[0x263F814F0];
      uint64_t v32 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
      id v85 = v31;
      *(void *)(inited + 40) = sub_20A8CEE20();
      uint64_t v33 = (void *)*MEMORY[0x263F81500];
      *(void *)(inited + 64) = v32;
      *(void *)(inited + 72) = v33;
      uint64_t v34 = v14 + 2;
      uint64_t v35 = v14[5];
      uint64_t v36 = v14[6];
      __swift_project_boxed_opaque_existential_1(v34, v35);
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 96);
      id v39 = v33;
      uint64_t v40 = v38(v35, v37);
      *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
      *(void *)(inited + 80) = v40;
      sub_20A4CF8B0(inited);
      id v41 = objc_allocWithZone(MEMORY[0x263F086A0]);
      uint64_t v42 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_20A4393AC();
      uint64_t v43 = (void *)sub_20A8CE170();
      swift_bridgeObjectRelease();
      double v12 = &off_263FDE000;
      id v30 = objc_msgSend(v41, sel_initWithString_attributes_, v42, v43);
    }
    a1 = v86;
    uint64_t v3 = v83;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 56), *(void *)(v2 + 80));
    id v30 = sub_20A4380EC();
    id v85 = (id)*MEMORY[0x263F814F0];
  }
  uint64_t v81 = v30;
  objc_msgSend(v30, sel_boundingRectWithSize_options_context_, 1, 0, v10, 1.79769313e308);
  sub_20A583128(a1, v3, v44, v45, v46, v47);
  double v49 = v48;
  double v87 = v50;
  sub_20A42CF04();
  uint64_t v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = xmmword_20A8D3DC0;
  *(void *)(v51 + 32) = v85;
  uint64_t v52 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
  swift_bridgeObjectRetain();
  id v53 = v85;
  uint64_t v54 = sub_20A8CEE20();
  *(void *)(v51 + 64) = v52;
  *(void *)(v51 + 40) = v54;
  sub_20A4CF8B0(v51);
  id v55 = objc_allocWithZone(MEMORY[0x263F086A0]);
  uint64_t v56 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_20A4393AC();
  int v57 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  id v58 = objc_msgSend(v55, (SEL)v12[453], v56, v57);

  objc_msgSend(v58, sel_boundingRectWithSize_options_context_, 1, 0, v10, 1.79769313e308);
  CGFloat x = v96.origin.x;
  CGFloat y = v96.origin.y;
  CGFloat width = v96.size.width;
  CGFloat height = v96.size.height;
  CGFloat v84 = v49;
  if (v49 + CGRectGetWidth(v96) >= v10)
  {
    objc_msgSend(v58, sel_boundingRectWithSize_options_context_, 1, 0, v10, 1.79769313e308);
    CGFloat x = v99.origin.x;
    CGFloat y = v99.origin.y;
    CGFloat width = v99.size.width;
    CGFloat height = v99.size.height;
    double v80 = v87 + CGRectGetHeight(v99) + 12.5 + 5.0 + 12.0;
    v100.origin.CGFloat x = x;
    v100.origin.CGFloat y = y;
    v100.size.CGFloat width = width;
    v100.size.CGFloat height = height;
    CGFloat v70 = CGRectGetHeight(v100) + 12.5 + 5.0;
    v101.origin.CGFloat x = x;
    v101.origin.CGFloat y = y;
    v101.size.CGFloat width = width;
    v101.size.CGFloat height = height;
    double v65 = v70 - CGRectGetHeight(v101);
    double v79 = v70 + 5.0;
    sub_20A8C9710();
    double v69 = v71;
  }
  else
  {
    v97.origin.CGFloat x = x;
    v97.origin.CGFloat y = y;
    v97.size.CGFloat width = width;
    v97.size.CGFloat height = height;
    double v63 = CGRectGetHeight(v97);
    if (v87 > v63) {
      double v63 = v87;
    }
    double v64 = v63 + 12.5 + 12.0;
    v98.origin.CGFloat x = x;
    v98.origin.CGFloat y = y;
    v98.size.CGFloat width = width;
    v98.size.CGFloat height = height;
    double v65 = v64 - CGRectGetHeight(v98);
    double v79 = (v64 - v87) * 0.5;
    double v80 = v64;
    sub_20A8C9820();
    double v67 = v66;
    sub_20A8C9710();
    double v69 = v67 - v68 - v49;
  }
  CGFloat v72 = v65 * 0.5;
  sub_20A8C9710();
  sub_20A8C9820();
  sub_20A8C9710();
  sub_20A8C9710();
  sub_20A8C9710();
  CGFloat v74 = v73;
  v102.origin.CGFloat x = x;
  v102.origin.CGFloat y = y;
  v102.size.CGFloat width = width;
  v102.size.CGFloat height = height;
  CGFloat v75 = CGRectGetWidth(v102);
  v103.origin.CGFloat x = x;
  v103.origin.CGFloat y = y;
  v103.size.CGFloat width = width;
  v103.size.CGFloat height = height;
  v104.size.CGFloat height = CGRectGetHeight(v103);
  v104.origin.CGFloat x = v74;
  v104.origin.CGFloat y = v72;
  v104.size.CGFloat width = v75;
  CGRectIntegral(v104);
  v105.origin.CGFloat x = v69;
  v105.origin.CGFloat y = v79;
  v105.size.CGFloat width = v84;
  v105.size.CGFloat height = v87;
  CGRectIntegral(v105);
  sub_20A8C9820();
  v106.size.CGFloat width = v76;
  v106.origin.CGFloat x = 0.0;
  v106.origin.CGFloat y = 0.0;
  v106.size.CGFloat height = v80;
  CGRectIntegral(v106);
  MEMORY[0x270FA5388](v77);
  sub_20A8C96A0();

  a2[4] = v92;
  a2[5] = v93;
  a2[6] = v94;
  a2[7] = v95;
  *a2 = v88;
  a2[1] = v89;
  double result = *(double *)&v90;
  a2[2] = v90;
  a2[3] = v91;
  return result;
}

void sub_20A583128(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  double v12 = (int *)type metadata accessor for StockFeedEarningsViewModel();
  if (*(unsigned char *)(a1 + v12[9]) == 1)
  {
    v30.origin.CGFloat x = a3;
    v30.origin.CGFloat y = a4;
    v30.size.CGFloat width = a5;
    v30.size.CGFloat height = a6;
    CGRectGetWidth(v30);
    char v13 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
    if (qword_2676398B0 != -1) {
      swift_once();
    }
    double v14 = (void *)qword_267652CB8;
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    CGFloat v15 = (void *)sub_20A8CEE20();
    id v16 = objc_msgSend(self, sel_configurationWithFont_scale_, v15, 1);

    id v17 = objc_msgSend(v14, sel_imageWithConfiguration_, v16);
    uint64_t v19 = v13[5];
    uint64_t v18 = v13[6];
    __swift_project_boxed_opaque_existential_1(v13 + 2, v19);
    uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v18 + 16) + 96))(v19);
    id v21 = objc_msgSend(v17, sel_imageWithTintColor_renderingMode_, v20, 1);

LABEL_8:
    objc_msgSend(v21, sel_size);

LABEL_9:
    v32.origin.CGFloat x = a3;
    v32.origin.CGFloat y = a4;
    v32.size.CGFloat width = a5;
    v32.size.CGFloat height = a6;
    CGRectGetHeight(v32);
    return;
  }
  if (*(void *)(a1 + v12[8] + 8))
  {
    v31.origin.CGFloat x = a3;
    v31.origin.CGFloat y = a4;
    v31.size.CGFloat width = a5;
    v31.size.CGFloat height = a6;
    CGRectGetWidth(v31);
    uint64_t v22 = (void *)*__swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
    uint64_t v23 = (void *)sub_20A8CE240();
    id v24 = objc_msgSend(self, sel_systemImageNamed_, v23);

    if (!v24)
    {
      __break(1u);
      return;
    }
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    id v25 = (void *)sub_20A8CEE20();
    id v26 = objc_msgSend(self, sel_configurationWithFont_scale_, v25, 1);

    id v27 = objc_msgSend(v24, sel_imageWithConfiguration_, v26);
    uint64_t v29 = v22[5];
    uint64_t v28 = v22[6];
    __swift_project_boxed_opaque_existential_1(v22 + 2, v29);
    uint64_t v20 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v28 + 16) + 96))(v29);
    id v21 = objc_msgSend(v27, sel_imageWithTintColor_renderingMode_, v20, 1);

    goto LABEL_8;
  }
  if ((*(unsigned char *)(a1 + v12[11]) & 1) == 0)
  {
    v33.origin.CGFloat x = a3;
    v33.origin.CGFloat y = a4;
    v33.size.CGFloat width = a5;
    v33.size.CGFloat height = a6;
    CGRectGetWidth(v33);
    goto LABEL_9;
  }
}

double sub_20A583530@<D0>(double *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v58 = a6;
  uint64_t v57 = a7;
  uint64_t v56 = a8;
  uint64_t v55 = a9;
  uint64_t v54 = a2;
  uint64_t v53 = a3;
  uint64_t v52 = a4;
  uint64_t v51 = a5;
  uint64_t v10 = sub_20A8C8180();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = MEMORY[0x270FA5388](v10);
  double v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *MEMORY[0x263F7D268];
  id v16 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 104);
  v16(v14, v15, v10, v12);
  sub_20A8C8170();
  uint64_t v49 = v18;
  uint64_t v50 = v17;
  uint64_t v47 = v20;
  uint64_t v48 = v19;
  id v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v14, v10);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v10);
  sub_20A8C8170();
  uint64_t v45 = v23;
  uint64_t v46 = v22;
  uint64_t v44 = v24;
  double v43 = v25;
  v21(v14, v10);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v10);
  sub_20A8C8170();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  v21(v14, v10);
  ((void (*)(char *, uint64_t, uint64_t))v16)(v14, v15, v10);
  sub_20A8C8170();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  v21(v14, v10);
  *(void *)a1 = v50;
  *((void *)a1 + 1) = v49;
  *((void *)a1 + 2) = v48;
  *((void *)a1 + 3) = v47;
  *((void *)a1 + 4) = v46;
  *((void *)a1 + 5) = v45;
  *((void *)a1 + 6) = v44;
  double result = v43;
  a1[7] = v43;
  *((void *)a1 + 8) = v27;
  *((void *)a1 + 9) = v29;
  *((void *)a1 + 10) = v31;
  *((void *)a1 + 11) = v33;
  *((void *)a1 + 12) = v35;
  *((void *)a1 + 13) = v37;
  *((void *)a1 + 14) = v39;
  *((void *)a1 + 15) = v41;
  return result;
}

uint64_t sub_20A583820()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StockFeedEarningsViewLayoutAttributesFactory()
{
  return self;
}

double sub_20A58387C@<D0>(double *a1@<X8>)
{
  return sub_20A583530(a1, v1[10], v1[11], v1[12], v1[13], v1[14], v1[15], v1[16], v1[17]);
}

uint64_t sub_20A583B18()
{
  return type metadata accessor for StockFeedViewController();
}

uint64_t type metadata accessor for StockFeedViewController()
{
  uint64_t result = qword_26AC751C8;
  if (!qword_26AC751C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A583B6C()
{
  sub_20A8C3F00();
  if (v0 <= 0x3F)
  {
    sub_20A42C470(319);
    if (v1 <= 0x3F)
    {
      sub_20A4C7C24(319);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_20A583CE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

id sub_20A583D4C()
{
  unint64_t v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v28, sel_viewDidLoad);
  unint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController];
  sub_20A8C9BF0();
  uint64_t v3 = (void *)sub_20A8C94C0();
  swift_release();
  sub_20A8C3E60();
  id v4 = (void *)sub_20A8CE240();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setAccessibilityLabel_, v4);

  objc_msgSend(v0, sel_addChildViewController_, v2);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  double v6 = result;
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = result;
  objc_msgSend(v6, sel_addSubview_, result);

  objc_msgSend(v2, sel_didMoveToParentViewController_, v1);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v8 = result;
  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v9 = result;
  objc_msgSend(result, sel_bounds);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  objc_msgSend(v8, sel_setFrame_, v11, v13, v15, v17);
  id result = objc_msgSend(v2, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v18 = result;
  objc_msgSend(result, sel_setPreservesSuperviewLayoutMargins_, 1);

  id result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v19 = result;
  objc_msgSend(result, sel_addSubview_, *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView]);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A58DBA0((unint64_t *)&unk_26AC751A0, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
  sub_20A58DBA0(&qword_26AC751B0, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
  swift_retain();
  sub_20A8CC900();
  swift_release_n();
  id v20 = objc_msgSend(v1, sel_traitCollection);
  sub_20A584224((uint64_t)v20);

  id result = objc_msgSend(v1, sel_view);
  if (result)
  {
    id v21 = result;
    uint64_t v22 = *(void *)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView];
    objc_msgSend(result, sel_addSubview_, v22);

    uint64_t v23 = *(void **)(v22 + OBJC_IVAR____TtC8StocksUI24StockFeedViewOverlayView_onTap);
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    id v24 = v23;

    swift_release();
    uint64_t v25 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    uint64_t v26 = (uint64_t (**)(uint64_t, double, double))(v22
                                                           + OBJC_IVAR____TtC8StocksUI24StockFeedViewOverlayView_onHitTest);
    uint64_t v27 = *(void *)(v22 + OBJC_IVAR____TtC8StocksUI24StockFeedViewOverlayView_onHitTest);
    *uint64_t v26 = sub_20A58DC28;
    v26[1] = (uint64_t (*)(uint64_t, double, double))v25;
    sub_20A459CA4(v27);
    return sub_20A58512C();
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_20A58418C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2105289B0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = *(id *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController);

    sub_20A8C9BF0();
    double v5 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v5, sel_reloadData);
  }
}

void sub_20A584224(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = &v2[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_styler];
  swift_beginAccess();
  sub_20A4342F4((uint64_t)v4, (uint64_t)v37);
  uint64_t v5 = v38;
  uint64_t v6 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  uint64_t v7 = *(void *)(v6 + 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
  uint64_t v35 = v5;
  uint64_t v36 = v6;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
  v8(a1, v5, v7);
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  sub_20A42BEBC(&v34, (uint64_t)v4);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  sub_20A4342F4((uint64_t)v4, (uint64_t)v37);
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(v37, v38);
  id v10 = objc_msgSend(v2, sel_view);
  if (v10)
  {
    double v11 = v10;
    double v12 = (void *)(*v9 + 16);
    uint64_t v14 = *(void *)(*v9 + 40);
    uint64_t v13 = *(void *)(*v9 + 48);
    __swift_project_boxed_opaque_existential_1(v12, v14);
    double v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v13 + 16) + 64))(v14);
    objc_msgSend(v11, sel_setBackgroundColor_, v15);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    sub_20A4342F4((uint64_t)v4, (uint64_t)v37);
    double v16 = __swift_project_boxed_opaque_existential_1(v37, v38);
    sub_20A8C9BF0();
    double v17 = (void *)sub_20A8C94C0();
    swift_release();
    uint64_t v18 = *v16;
    uint64_t v19 = (void *)(*v16 + 16);
    uint64_t v21 = *(void *)(*v16 + 40);
    uint64_t v20 = *(void *)(v18 + 48);
    __swift_project_boxed_opaque_existential_1(v19, v21);
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v20 + 16) + 64))(v21);
    objc_msgSend(v17, sel_setBackgroundColor_, v22);

    objc_msgSend(v17, sel_setAlwaysBounceVertical_, 1);
    objc_msgSend(v17, sel_layoutMargins);
    objc_msgSend(v17, sel_setContentInset_, 0.0, 0.0, v23, 0.0);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    id v24 = (void *)*__swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
    uint64_t v25 = (void *)sub_20A8C7E70();
    uint64_t v27 = v24[5];
    uint64_t v26 = v24[6];
    __swift_project_boxed_opaque_existential_1(v24 + 2, v27);
    objc_super v28 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v26 + 16) + 64))(v27);
    sub_20A446AA0(v28);

    uint64_t v29 = __swift_project_boxed_opaque_existential_1(v4, *((void *)v4 + 3));
    uint64_t v30 = *(void **)&v2[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView];
    uint64_t v32 = *(void *)(*v29 + 40);
    uint64_t v31 = *(void *)(*v29 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(*v29 + 16), v32);
    uint64_t v33 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v31 + 16) + 64))(v32);
    objc_msgSend(v30, sel_setBackgroundColor_, v33);
  }
  else
  {
    __break(1u);
  }
}

void sub_20A584564()
{
  uint64_t v0 = sub_20A8CA180();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  uint64_t v4 = sub_20A8CEB40();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    unint64_t v6 = sub_20A8C9D20();
    if (v6 >> 62) {
      uint64_t v7 = sub_20A8CF540();
    }
    else {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (__OFSUB__(v7, 1))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7DB50], v0);
      sub_20A8C9CB0();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  else
  {
    id v8 = Strong;
  }
}

uint64_t sub_20A584704(uint64_t a1, double a2, double a3)
{
  uint64_t v58 = a1;
  uint64_t v61 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v61);
  double v65 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A58D160(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v8 = v7;
  uint64_t v60 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v57 - v9;
  sub_20A42C4A4();
  uint64_t v64 = v11;
  uint64_t v59 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v13 - 8);
  double v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_20A8C2B70();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v66 = v16;
  uint64_t v67 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  double v63 = (char *)v57 - v21;
  uint64_t v22 = sub_20A8CA180();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_20A8CEB40();
  if (!v26) {
    return 0;
  }
  uint64_t v27 = (void *)v26;
  sub_20A8C9CC0();
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v23 + 88))(v25, v22);
  if (v28 == *MEMORY[0x263F7DB28] || v28 == *MEMORY[0x263F7DB50] || v28 == *MEMORY[0x263F7DB58])
  {
LABEL_5:

    return 0;
  }
  if (v28 == *MEMORY[0x263F7DB48])
  {
    uint64_t v31 = *(void **)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView);
    uint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController);
    sub_20A8C9BF0();
    uint64_t v33 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v31, sel_convertPoint_toCoordinateSpace_, v33, a2, a3);
    double v35 = v34;
    double v37 = v36;

    sub_20A8C9BF0();
    uint64_t v38 = (void *)sub_20A8C94C0();
    swift_release();
    id v39 = objc_msgSend(v38, sel_indexPathForItemAtPoint_, v35, v37);

    if (v39)
    {
      sub_20A8C2B10();

      uint64_t v40 = v67;
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
      uint64_t v42 = v19;
      uint64_t v43 = v66;
      v41(v15, v42, v66);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v15, 0, 1, v43);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v15, 1, v43) != 1)
      {
        uint64_t v44 = v63;
        v41(v63, v15, v43);
        v57[1] = v32;
        sub_20A8C9C10();
        uint64_t v68 = v69;
        sub_20A58D160(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
        sub_20A58D224();
        sub_20A8C9490();
        swift_release();
        uint64_t v45 = v62;
        sub_20A8CBB80();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v10, v8);
        uint64_t v47 = v64;
        uint64_t v46 = (uint64_t)v65;
        sub_20A8C8330();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            goto LABEL_29;
          case 3u:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            sub_20A42C53C();
            uint64_t v56 = v46 + *(int *)(v55 + 48);
            sub_20A58BA28(v46 + *(int *)(v55 + 64), (uint64_t (*)(void))sub_20A42C43C);
            sub_20A58BA28(v56, (uint64_t (*)(void))sub_20A42C470);
LABEL_29:
            uint64_t v54 = sub_20A8C3F00();
            goto LABEL_30;
          case 4u:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            uint64_t v48 = type metadata accessor for StockEarningsModel;
            goto LABEL_25;
          case 5u:
          case 7u:
          case 9u:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            uint64_t v48 = type metadata accessor for StockFeedModel;
LABEL_25:
            uint64_t v49 = (void (*)(uint64_t))v48;
            uint64_t v50 = v46;
            goto LABEL_20;
          case 6u:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            sub_20A58BA28(v46, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
            return 0;
          case 8u:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            sub_20A46CF6C();
            swift_release();
            uint64_t v54 = sub_20A8CD2C0();
LABEL_30:
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v46, v54);
            return 1;
          case 0xAu:

            (*(void (**)(char *, uint64_t))(v59 + 8))(v45, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            return 1;
          default:
            sub_20A58BA28(v46, (uint64_t (*)(void))type metadata accessor for StockFeedMastheadModel);
            sub_20A8C9BF0();
            uint64_t v51 = v45;
            uint64_t v52 = (void *)sub_20A8C94C0();
            swift_release();
            id v53 = objc_msgSend(v52, sel_hitTest_withEvent_, v58, a2, a3);

            (*(void (**)(char *, uint64_t))(v59 + 8))(v51, v47);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v43);
            if (!v53) {
              return 1;
            }
            self;
            BOOL v29 = swift_dynamicCastObjCClass() == 0;

            return v29;
        }
      }
      goto LABEL_19;
    }
  }
  else
  {
    if (v28 == *MEMORY[0x263F7DB60]
      || v28 == *MEMORY[0x263F7DB40]
      || v28 == *MEMORY[0x263F7DB38]
      || v28 == *MEMORY[0x263F7DB30])
    {
      goto LABEL_5;
    }
    sub_20A8CF520();
    __break(1u);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v15, 1, 1, v66);
LABEL_19:

  uint64_t v49 = sub_20A469FF4;
  uint64_t v50 = (uint64_t)v15;
LABEL_20:
  sub_20A58BA28(v50, (uint64_t (*)(void))v49);
  return 1;
}

id sub_20A58512C()
{
  uint64_t v1 = sub_20A8C1FA0();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v2 = sub_20A8C3F00();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20A8C2D10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - v12;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, (uint64_t)v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v2, v11);
  sub_20A8C2D00();
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    double v15 = result;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);
    sub_20A8C1F80();
    id v16 = objc_allocWithZone((Class)sub_20A8C7D10());
    sub_20A58DBA0(&qword_26AC67568, MEMORY[0x263F7A960]);
    uint64_t v17 = (void *)sub_20A8C7D00();
    sub_20A8CEE70();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20A585428(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for StockListSelectionModel();
  double v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15.receiver = v2;
  v15.super_class = ObjectType;
  objc_msgSendSuper2(&v15, sel_viewWillAppear_, a1 & 1, v6);
  sub_20A8C9C00();
  sub_20A8C5D50();
  swift_release();
  if ((v14[15] & 1) == 0)
  {
    sub_20A8C9BF0();
    uint64_t v9 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v9, sel_selectItemAtIndexPath_animated_scrollPosition_, 0, 1, 0);
  }
  uint64_t result = sub_20A8CEB70();
  if ((result & 1) == 0)
  {
    double v11 = &v2[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock];
    uint64_t v12 = sub_20A8C3F00();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(unsigned char *, char *, uint64_t))(v13 + 16))(v8, v11, v12);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
    sub_20A58DBA0((unint64_t *)&qword_26AC75290, (void (*)(uint64_t))type metadata accessor for StockListSelectionModel);
    sub_20A8C5D80();
    return sub_20A58BA28((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StockListSelectionModel);
  }
  return result;
}

void sub_20A585688(char a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v8, sel_viewDidAppear_, a1 & 1);
  id v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_window);

    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_windowScene);

      if (v6)
      {
        id v7 = objc_msgSend(v1, sel_title);
        objc_msgSend(v6, sel_setTitle_, v7);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_20A5857CC()
{
  uint64_t v1 = (void *)sub_20A8CEB50();
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();

  if (v2 || (id v3 = (void *)sub_20A8CEB50(), sub_20A8C4E90(), v4 = swift_dynamicCastClass(), v3, v4))
  {
    id v5 = (void *)sub_20A8CEB50();
    objc_msgSend(v5, sel_dismissViewControllerAnimated_completion_, 0, 0);
  }
  uint64_t v6 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation;
  if (*(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation))
  {
    swift_retain();
    sub_20A8CE730();
    swift_release();
  }
  *(void *)(v0 + v6) = 0;

  return swift_release();
}

id sub_20A585928()
{
  v22.receiver = v0;
  v22.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v22, sel_viewWillLayoutSubviews);
  id result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController], sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v2 = result;
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  id v3 = result;
  objc_msgSend(result, sel_bounds);
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;

  objc_msgSend(v2, sel_setFrame_, v5, v7, v9, v11);
  uint64_t v12 = *(void **)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView];
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v13 = result;
    objc_msgSend(result, sel_bounds);
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    double v21 = v20;

    return objc_msgSend(v12, sel_setFrame_, v15, v17, v19, v21);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_20A585AC4(uint64_t a1)
{
  v17.receiver = v1;
  v17.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v17, sel_traitCollectionDidChange_, a1);
  id v3 = objc_msgSend(v1, sel_traitCollection);
  sub_20A584224((uint64_t)v3);

  double v4 = (void *)sub_20A8CEB40();
  if (v4)
  {
    if (qword_26AC6CF90 != -1) {
      swift_once();
    }
    id v5 = (id)qword_26AC6CF88;
    sub_20A8CEA00();
    sub_20A8C7D90();

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView], sel_setHidden_, 1);
    sub_20A58DBA0(&qword_26AC75190, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
    sub_20A8CA500();
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_20A8C2370();

    id v8 = objc_msgSend(v1, sel_view, 0x800000020A901C40);
    if (v8)
    {
      double v9 = v8;
      sub_20A4F6E50(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_20A8D3DC0;
      uint64_t v11 = sub_20A8C3EF0();
      uint64_t v13 = v12;
      *(void *)(v10 + 56) = MEMORY[0x263F8D310];
      *(void *)(v10 + 64) = sub_20A43F830();
      *(void *)(v10 + 32) = v11;
      *(void *)(v10 + 40) = v13;
      sub_20A8CE250();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v14 = (void *)sub_20A8CE240();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setAccessibilityLabel_, v14);

LABEL_8:
      return;
    }
    __break(1u);
  }
  else
  {
    double v15 = *(void **)&v1[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView];
    objc_msgSend(v15, sel_setHidden_, 0);
    objc_msgSend(v15, sel_setNeedsLayout);
    objc_msgSend(v15, sel_layoutIfNeeded);
    id v16 = objc_msgSend(v1, sel_view);
    if (v16)
    {
      double v14 = v16;
      objc_msgSend(v16, sel_setAccessibilityLabel_, 0);
      goto LABEL_8;
    }
  }
  __break(1u);
}

void sub_20A586068()
{
  uint64_t v1 = v0;
  uint64_t v76 = sub_20A8C9F40();
  uint64_t v2 = *(char **)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v78 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v79);
  id v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  uint64_t v85 = v6;
  uint64_t v77 = *(char ***)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  double v80 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A58D160(0, (unint64_t *)&qword_26AC6ACC0, MEMORY[0x263F7E0A8]);
  uint64_t v83 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v82 = (char *)v52 - v10;
  sub_20A42DA48(0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v81 = (uint64_t)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  double v15 = (char *)v52 - v14;
  uint64_t v16 = sub_20A8C2B70();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  double v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v20 - 8);
  CGFloat v84 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_20A8CEB70() & 1) == 0)
  {
    objc_super v22 = (void *)sub_20A8CEB50();
    sub_20A8C4E90();
    uint64_t v23 = swift_dynamicCastClass();

    if (!v23)
    {
      swift_getObjectType();
      sub_20A8C3BF0();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      if (!v25)
      {
        CGFloat v72 = v2;
        uint64_t v75 = *(void *)(v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_blueprintViewController);
        sub_20A8C9BF0();
        uint64_t v26 = (void *)sub_20A8C94C0();
        swift_release();
        id v63 = v26;
        id v27 = objc_msgSend(v26, sel_indexPathsForVisibleItems);
        uint64_t v28 = sub_20A8CE5E0();

        uint64_t v29 = v1;
        uint64_t v30 = *(void *)(v28 + 16);
        uint64_t v62 = v28;
        if (v30)
        {
          uint64_t v61 = 0;
          uint64_t v59 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_commandTracker;
          uint64_t v60 = v29;
          uint64_t v58 = v29 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_commandCenter;
          uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
          uint64_t v31 = v17 + 16;
          CGFloat v74 = v32;
          unint64_t v33 = v28 + ((*(unsigned __int8 *)(v31 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 64));
          uint64_t v71 = *(void *)(v31 + 56);
          double v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 32);
          CGFloat v70 = (void (**)(char *, char *, uint64_t))(v31 + 16);
          uint64_t v69 = (void (**)(char *, uint64_t))(v9 + 8);
          uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 6);
          double v65 = (void (**)(char *, uint64_t, uint64_t))(v77 + 4);
          uint64_t v64 = (void (**)(char *, uint64_t))(v77 + 1);
          uint64_t v67 = (void (**)(char *, uint64_t))(v31 - 8);
          unsigned int v57 = *MEMORY[0x263F7DA60];
          uint64_t v56 = (void (**)(char *, void, uint64_t))(v72 + 104);
          uint64_t v77 = (char **)(v31 + 40);
          v52[0] = (v31 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          uint64_t v55 = MEMORY[0x263F8EE60] + 8;
          double v34 = v84;
          uint64_t v66 = v5;
          while (1)
          {
            v74(v34, v33, v16);
            CGFloat v72 = *v77;
            ((void (*)(char *, void, uint64_t, uint64_t))v72)(v34, 0, 1, v16);
            if ((*v73)(v34, 1, v16) == 1) {
              goto LABEL_27;
            }
            uint64_t v35 = v31;
            (*v70)(v19, v34, v16);
            sub_20A8C9C10();
            uint64_t v89 = v86;
            sub_20A58D160(0, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
            sub_20A58D224();
            double v36 = v82;
            sub_20A8C9490();
            uint64_t v37 = v85;
            swift_release();
            uint64_t v38 = v83;
            sub_20A8CBA70();
            (*v69)(v36, v38);
            uint64_t v39 = v81;
            sub_20A58D3A4((uint64_t)v15, v81, (uint64_t (*)(void))sub_20A42DA48);
            if ((*v68)(v39, 1, v37) == 1)
            {
              sub_20A58BA28((uint64_t)v15, (uint64_t (*)(void))sub_20A42DA48);
              (*v67)(v19, v16);
              sub_20A58BA28(v39, (uint64_t (*)(void))sub_20A42DA48);
              uint64_t v31 = v35;
            }
            else
            {
              uint64_t v40 = v80;
              (*v65)(v80, v39, v37);
              uint64_t v41 = (uint64_t)v66;
              sub_20A8C8330();
              uint64_t v31 = v35;
              if (swift_getEnumCaseMultiPayload() == 4)
              {
                sub_20A58BA28(v41, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
                uint64_t v42 = (void *)sub_20A8C2B00();
                id v43 = objc_msgSend(v63, sel_cellForItemAtIndexPath_, v42, v52[0]);

                if (v43)
                {
                  sub_20A58D298(0, (unint64_t *)&qword_26AC6A120, (uint64_t (*)(uint64_t))type metadata accessor for StockFeedEarningsView, sub_20A58D318, MEMORY[0x263F7D5E8]);
                  if (swift_dynamicCastClass())
                  {
                    id v44 = v43;
                    uint64_t v45 = (char *)sub_20A8C8F10();
                    uint64_t v46 = *(void **)&v45[OBJC_IVAR____TtC8StocksUI21StockFeedEarningsView_addCalendarButton];
                    if (!objc_msgSend(v46, sel_isHidden))
                    {
                      id v53 = v44;
                      id v54 = v45;
                      (*v56)(v78, v57, v76);
                      uint64_t v47 = *(void *)(v60 + v59);
                      uint64_t v87 = sub_20A8C4990();
                      uint64_t v88 = sub_20A58DBA0((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
                      uint64_t v86 = v47;
                      long long v90 = 0u;
                      long long v91 = 0u;
                      char v92 = 1;
                      sub_20A8C99D0();
                      swift_allocObject();
                      swift_retain();
                      id v48 = v46;
                      sub_20A8C99B0();
                      v52[1] = *(void *)(v58 + 8);
                      swift_getObjectType();
                      if (qword_26AC6ABE8 != -1) {
                        swift_once();
                      }
                      LOBYTE(v86) = 0;
                      swift_retain();
                      uint64_t v49 = v61;
                      sub_20A8C8CD0();
                      if (v49)
                      {

                        swift_release_n();
                        id v50 = v53;

                        uint64_t v61 = 0;
                      }
                      else
                      {
                        uint64_t v61 = 0;

                        swift_release_n();
                        id v51 = v53;
                      }
                      double v34 = v84;
                      (*v64)(v80, v85);
                      sub_20A58BA28((uint64_t)v15, (uint64_t (*)(void))sub_20A42DA48);
                      (*v67)(v19, v16);
                      goto LABEL_18;
                    }
                  }
                  else
                  {
                  }
                }
                (*v64)(v80, v85);
                sub_20A58BA28((uint64_t)v15, (uint64_t (*)(void))sub_20A42DA48);
                (*v67)(v19, v16);
              }
              else
              {
                (*v64)(v40, v37);
                sub_20A58BA28((uint64_t)v15, (uint64_t (*)(void))sub_20A42DA48);
                (*v67)(v19, v16);
                sub_20A58BA28(v41, (uint64_t (*)(void))type metadata accessor for StockFeedModel);
              }
            }
            double v34 = v84;
LABEL_18:
            v33 += v71;
            if (!--v30)
            {
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v72)(v34, 1, 1, v16);
              goto LABEL_27;
            }
          }
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v84, 1, 1, v16);
LABEL_27:

        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_20A586C80()
{
  swift_getObjectType();
  sub_20A8C81B0();
  sub_20A8C8190();
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_20A8CB100();
  swift_allocObject();
  MEMORY[0x210523430](sub_20A58BA20, v0);
  sub_20A8C8B50();
  sub_20A58DBA0(&qword_26AC69F78, MEMORY[0x263F7D508]);
  sub_20A8C90C0();
  swift_release();
  return swift_release();
}

uint64_t sub_20A586DC0(uint64_t a1)
{
  sub_20A42C470(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20A8C3F00();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v9 = MEMORY[0x2105289B0](a1 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = (void *)v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, v9 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v5);
  uint64_t v12 = (uint64_t)v10 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_latestQuote;
  swift_beginAccess();
  sub_20A58D3A4(v12, (uint64_t)v4, (uint64_t (*)(void))sub_20A42C470);
  uint64_t v13 = (objc_class *)type metadata accessor for StockShareActivityItemSource();
  uint64_t v14 = (char *)objc_allocWithZone(v13);
  v11(&v14[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_stock], (uint64_t)v8, v5);
  sub_20A58D3A4((uint64_t)v4, (uint64_t)&v14[OBJC_IVAR____TtC8StocksUI28StockShareActivityItemSource_quote], (uint64_t (*)(void))sub_20A42C470);
  v19.receiver = v14;
  v19.super_class = v13;
  id v15 = objc_msgSendSuper2(&v19, sel_init);
  sub_20A58BA28((uint64_t)v4, (uint64_t (*)(void))sub_20A42C470);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = (void *)sub_20A51BF44();
  sub_20A8C9DF0();
  uint64_t v17 = sub_20A8CA5B0();

  return v17;
}

void sub_20A587024()
{
  uint64_t v1 = type metadata accessor for CommandShareContent(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26AC6AC40 != -1) {
    swift_once();
  }
  uint64_t v4 = v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock;
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_commandTracker);
  uint64_t v6 = sub_20A8C4990();
  uint64_t v17 = v6;
  uint64_t v7 = sub_20A58DBA0((unint64_t *)&qword_26AC69370, MEMORY[0x263F24E68]);
  uint64_t v18 = v7;
  v16[0] = v5;
  swift_retain();
  sub_20A8C89B0();
  sub_20A4F6EB8((uint64_t)v16, (unint64_t *)&unk_26AC69E10, (unint64_t *)&qword_26AC69E00, MEMORY[0x263F7D3A0]);
  id v8 = objc_msgSend(self, sel_currentDevice);
  id v9 = objc_msgSend(v8, sel_userInterfaceIdiom);

  if (v9 == (id)5)
  {
    if (qword_26AC6AB90 != -1) {
      swift_once();
    }
    sub_20A58B96C();
    uint64_t v11 = &v3[*(int *)(v10 + 48)];
    uint64_t v12 = *(int *)(v10 + 64);
    uint64_t v13 = sub_20A8C3F00();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v3, v4, v13);
    uint64_t v14 = sub_20A8C3E10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    v3[v12] = 3;
    uint64_t v17 = v6;
    uint64_t v18 = v7;
    v16[0] = v5;
    swift_retain();
    sub_20A8C89B0();
    sub_20A58BA28((uint64_t)v3, type metadata accessor for CommandShareContent);
    sub_20A4F6EB8((uint64_t)v16, (unint64_t *)&unk_26AC69E10, (unint64_t *)&qword_26AC69E00, MEMORY[0x263F7D3A0]);
  }
}

uint64_t sub_20A587310()
{
  uint64_t v0 = sub_20A8CBBB0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CBBC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A8C9BD0();
  uint64_t v8 = sub_20A8CA5F0();
  uint64_t v9 = sub_20A8CA5E0();
  uint64_t v10 = MEMORY[0x263F7DC80];
  v7[3] = v8;
  v7[4] = v10;
  *uint64_t v7 = v9;
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v12 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20A8C2370();

  uint64_t v13 = sub_20A8CE320();
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  v7[5] = v13;
  v7[6] = v15;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7E0C0], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7E0D8], v0);
  sub_20A8C8AB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20A5875CC()
{
  uint64_t v0 = sub_20A8CBBB0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CBBC0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BD0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7E0C8], v4);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7E0D8], v0);
  sub_20A8C8AB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_20A5877A8()
{
  uint64_t v0 = self;

  return objc_msgSend(v0, sel_openStocksSettings);
}

void sub_20A5877E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C8EA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_keyboardInputMonitor), *(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_keyboardInputMonitor + 24));
  sub_20A8C9F70();
  sub_20A8CEB90();
  if (v14)
  {
    sub_20A42BEBC(&v13, (uint64_t)v15);
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F7D5C8], v4);
    sub_20A8C9890();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_20A4F6EB8((uint64_t)&v13, &qword_26763D880, &qword_26AC82490, MEMORY[0x263F7D898]);
  }
  sub_20A8C9BF0();
  uint64_t v8 = (void *)sub_20A8C94C0();
  swift_release();
  uint64_t v9 = (void *)sub_20A8CEAE0();

  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  uint64_t v11 = v10[5];
  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v15[0]) = 0;
  (*(void (**)(uint64_t, void, void *, uint64_t, uint64_t))(v11 + 80))(a2, 0, v15, ObjectType, v11);
  __swift_project_boxed_opaque_existential_1(v10 + 11, v10[14]);
  sub_20A80F87C(a2);
}

void sub_20A587A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_20A8CC220();
  uint64_t v29 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8CC250();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_20A8CAE00();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a3, v12, v14);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v16, v12);
  if (v17 == *MEMORY[0x263F7DEA0])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
LABEL_3:
    uint64_t v18 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler] + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v18 + 48))(ObjectType, v18);
    return;
  }
  if (v17 == *MEMORY[0x263F7DE88])
  {
    uint64_t v20 = *(void *)(*(void *)&v3[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler] + 40);
    uint64_t v21 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v20 + 40))(v21, v20);
  }
  else if (v17 == *MEMORY[0x263F7DE98])
  {
    *(void *)(swift_allocObject() + 16) = v3;
    objc_super v22 = v3;
    sub_20A8C66A0();
    swift_release();
    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F940);
    uint64_t v23 = (void *)sub_20A8CEBE0();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    aBlock[4] = sub_20A58CF78;
    void aBlock[5] = v24;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_20A4713FC;
    aBlock[3] = &block_descriptor_17;
    uint64_t v25 = _Block_copy(aBlock);
    uint64_t v26 = v22;
    swift_release();
    sub_20A8CC240();
    aBlock[0] = MEMORY[0x263F8EE78];
    sub_20A58DBA0(&qword_26AC677A0, MEMORY[0x263F8F030]);
    sub_20A583CE8(0, (unint64_t *)&unk_26AC7F7A0, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_20A4F6C4C();
    sub_20A8CF290();
    MEMORY[0x210526F10](0, v11, v7, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    if (v17 == *MEMORY[0x263F7DE90]) {
      goto LABEL_3;
    }
    if (v17 != *MEMORY[0x263F7DEA8])
    {
      if (v17 == *MEMORY[0x263F7DEB0])
      {
        sub_20A8C9BF0();
        id v27 = (void *)sub_20A8C94C0();
        swift_release();
        sub_20A42CFF0(0, (unint64_t *)&qword_26AC7F910);
        sub_20A8C8C70();
      }
      else
      {
        sub_20A8CF520();
        __break(1u);
      }
    }
  }
}

uint64_t sub_20A587FBC()
{
  uint64_t v0 = sub_20A8C4020();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A456468();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StockFeedModel();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A42C4A4();
  sub_20A8C8330();
  uint64_t v12 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      goto LABEL_4;
    case 3u:
      sub_20A42C53C();
      uint64_t v15 = (uint64_t)&v11[*(int *)(v14 + 48)];
      sub_20A58BA28((uint64_t)&v11[*(int *)(v14 + 64)], (uint64_t (*)(void))sub_20A42C43C);
      sub_20A58BA28(v15, (uint64_t (*)(void))sub_20A42C470);
LABEL_4:
      uint64_t v16 = sub_20A8C3F00();
      goto LABEL_9;
    case 4u:
      uint64_t v13 = type metadata accessor for StockEarningsModel;
      goto LABEL_11;
    case 5u:
      swift_bridgeObjectRelease();
      return 0;
    case 6u:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
      sub_20A8CCF50();
      sub_20A8C3F80();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      uint64_t v12 = sub_20A8CDAE0();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v12;
    case 7u:
      swift_bridgeObjectRelease();
      swift_release();
      return 0;
    case 8u:
      sub_20A46CF6C();
      swift_release();
      uint64_t v16 = sub_20A8CD2C0();
LABEL_9:
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v11, v16);
      return 0;
    case 9u:
      uint64_t v13 = type metadata accessor for StockFeedModel;
      goto LABEL_11;
    case 0xAu:
      return v12;
    default:
      uint64_t v13 = type metadata accessor for StockFeedMastheadModel;
LABEL_11:
      sub_20A58BA28((uint64_t)v11, (uint64_t (*)(void))v13);
      return 0;
  }
}

uint64_t sub_20A588374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C330](a1, a2, ObjectType, a4);
}

uint64_t sub_20A5883CC(uint64_t a1, uint64_t a2)
{
  return sub_20A853B9C(a2);
}

uint64_t sub_20A5883FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A58851C(a1, a2, a3, a4, sub_20A80C2A4);
}

uint64_t sub_20A588414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  uint64_t v5 = v4[5];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 72))(a2, ObjectType, v5);
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  return sub_20A80AA14(a2);
}

uint64_t sub_20A58848C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  uint64_t v5 = v4[5];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64))(a2, ObjectType, v5);
  __swift_project_boxed_opaque_existential_1(v4 + 11, v4[14]);
  return sub_20A80A2A0(a2);
}

uint64_t sub_20A588504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20A58851C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_20A80BDFC);
}

uint64_t sub_20A58851C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v5 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 88), *(void *)(*(void *)(v5 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 112));
  return a5(a2);
}

uint64_t sub_20A588574(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a2, ObjectType, v4);
}

uint64_t sub_20A5885D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();

  return MEMORY[0x270F7C390](a1, a2, a3, ObjectType, a5);
}

void sub_20A588640(void *a1)
{
  uint64_t v2 = v1;
  sub_20A8C7F10();
  sub_20A588828();
  objc_msgSend(a1, sel_contentOffset);
  double v5 = v4;
  uint64_t v6 = (void *)sub_20A8C7E60();
  objc_msgSend(v6, sel_alpha);
  double v8 = v7;

  if (v5 <= 0.0)
  {
    if (v8 == 0.0) {
      return;
    }
    uint64_t v9 = self;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v2;
    objc_super v19 = sub_20A58DB1C;
    uint64_t v20 = v12;
    uint64_t v15 = MEMORY[0x263EF8330];
    uint64_t v16 = 1107296256;
    uint64_t v11 = &block_descriptor_46;
  }
  else
  {
    if (v8 == 1.0) {
      return;
    }
    uint64_t v9 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    objc_super v19 = sub_20A58DB24;
    uint64_t v20 = v10;
    uint64_t v15 = MEMORY[0x263EF8330];
    uint64_t v16 = 1107296256;
    uint64_t v11 = &block_descriptor_52;
  }
  int v17 = sub_20A4713FC;
  uint64_t v18 = v11;
  uint64_t v13 = _Block_copy(&v15);
  id v14 = v2;
  swift_release();
  objc_msgSend(v9, sel_animateWithDuration_animations_, v13, 0.25, v15, v16);
  _Block_release(v13);
}

void sub_20A588828()
{
  uint64_t v1 = sub_20A8C9540();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  double v4 = (void *)((char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20A8C9BF0();
  double v5 = (void *)sub_20A8C94C0();
  swift_release();
  objc_msgSend(v5, sel_contentOffset);
  double v7 = v6;

  uint64_t v8 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden;
  if (v7 <= 0.0 != *(unsigned char *)(v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden))
  {
    swift_getObjectType();
    sub_20A8C81B0();
    v10[1] = sub_20A8C81A0();
    if (v7 > 0.0)
    {
      uint64_t *v4 = sub_20A8C3EF0();
      v4[1] = v9;
      (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F7D7B8], v1);
      sub_20A8C9550();
      sub_20A58DBA0(&qword_26AC6A278, MEMORY[0x263F7D7C8]);
      sub_20A8C90C0();
      (*(void (**)(uint64_t *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      sub_20A8C9550();
      sub_20A58DBA0(&qword_26AC6A278, MEMORY[0x263F7D7C8]);
      sub_20A8C90D0();
    }
    swift_release();
    *(unsigned char *)(v0 + v8) = v7 <= 0.0;
  }
}

id sub_20A588B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8CA180();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v29 = v2;
  swift_unknownObjectRetain();
  sub_20A8C7F30();
  sub_20A8C7ED0();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11(v10, a2, v4);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v13 = v12(v10, v4);
  int v14 = *MEMORY[0x263F7DB28];
  int v15 = *MEMORY[0x263F7DB50];
  int v16 = *MEMORY[0x263F7DB58];
  if (v13 == *MEMORY[0x263F7DB28] || v13 == v15 || v13 == v16)
  {
LABEL_21:
    uint64_t v19 = 1;
    goto LABEL_22;
  }
  if (v13 != *MEMORY[0x263F7DB48])
  {
    if (v13 != *MEMORY[0x263F7DB60]
      && v13 != *MEMORY[0x263F7DB40]
      && v13 != *MEMORY[0x263F7DB38]
      && v13 != *MEMORY[0x263F7DB30])
    {
      goto LABEL_41;
    }
    goto LABEL_21;
  }
  uint64_t v19 = 0;
LABEL_22:
  objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v19);
  v11(v7, a2, v4);
  int v23 = v12(v7, v4);
  if (v23 == v14 || v23 == v15) {
    return sub_20A58512C();
  }
  BOOL v25 = v23 == v16 || v23 == *MEMORY[0x263F7DB48];
  BOOL v26 = v25 || v23 == *MEMORY[0x263F7DB60];
  if (v26 || v23 == *MEMORY[0x263F7DB40] || v23 == *MEMORY[0x263F7DB38] || v23 == *MEMORY[0x263F7DB30]) {
    return sub_20A58512C();
  }
  sub_20A8CF750();
  __break(1u);
LABEL_41:
  id result = (id)sub_20A8CF520();
  __break(1u);
  return result;
}

void sub_20A588E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_20A8C9F10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C7EC0();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == *MEMORY[0x263F7DA08])
  {
    sub_20A8C9BF0();
    double v7 = (void *)sub_20A8C94C0();
    swift_release();
    objc_msgSend(v7, sel_setShowsVerticalScrollIndicator_, 0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

id sub_20A588FF4(uint64_t a1, uint64_t a2)
{
  return sub_20A58BF54(a2);
}

uint64_t sub_20A589000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_20A8C8EB0();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x263F7D5D8])
  {
    uint64_t v10 = *MEMORY[0x263F7DB50];
    uint64_t v11 = sub_20A8CA180();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(a2, v10, v11);
    uint64_t v12 = (unsigned int *)MEMORY[0x263F7DB10];
LABEL_5:
    uint64_t v15 = *v12;
    uint64_t v16 = sub_20A8CA140();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(a2, v15, v16);
  }
  if (v9 == *MEMORY[0x263F7D5D0])
  {
    uint64_t v13 = *MEMORY[0x263F7DAE8];
    uint64_t v14 = sub_20A8CA120();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(a2, v13, v14);
    uint64_t v12 = (unsigned int *)MEMORY[0x263F7DAF0];
    goto LABEL_5;
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A589248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20A589000(a1, a2);
}

uint64_t sub_20A589260()
{
  uint64_t v1 = (void *)(*v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_styler);
  swift_beginAccess();
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  uint64_t v4 = *(void *)(*v2 + 40);
  uint64_t v3 = *(void *)(*v2 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v2 + 16), v4);
  (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 432))(v4);
  return sub_20A8C8EC0();
}

uint64_t sub_20A5892FC@<X0>(uint64_t a1@<X8>)
{
  v19[1] = a1;
  swift_getObjectType();
  v19[0] = sub_20A8C8940();
  uint64_t v1 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  uint64_t v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  double v6 = (char *)v19 - v5;
  uint64_t v7 = sub_20A8C8950();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)v19 - v12;
  if (qword_26AC69290 != -1) {
    swift_once();
  }
  sub_20A58DBA0(&qword_26AC751B0, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
  sub_20A8C41C0();
  if (v20 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, *MEMORY[0x263F7D488], v7);
    (*(void (**)(char *, void, void))(v1 + 104))(v6, *MEMORY[0x263F7D480], v19[0]);
  }
  else
  {
    sub_20A583CE8(0, (unint64_t *)&qword_26AC7FF60, MEMORY[0x263F7D4B0], MEMORY[0x263F8E0F8]);
    uint64_t v15 = sub_20A8C8960();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_20A8D3DC0;
    (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, *MEMORY[0x263F7D4A0], v15);
    sub_20A7BABC8(v18);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F7D490], v7);
    (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x263F7D480], v19[0]);
  }
  return sub_20A8C8980();
}

uint64_t sub_20A589734@<X0>(uint64_t a1@<X8>)
{
  return sub_20A5892FC(a1);
}

id sub_20A589758()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stockFeedTitleView);
}

uint64_t sub_20A58976C()
{
  if (qword_26AC69290 != -1) {
    swift_once();
  }
  sub_20A58DBA0(&qword_26AC751B0, (void (*)(uint64_t))type metadata accessor for StockFeedViewController);
  sub_20A8C41C0();
  return v1;
}

uint64_t sub_20A589824()
{
  return sub_20A8C9C80();
}

uint64_t sub_20A589850@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(*v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_styler);
  swift_beginAccess();
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v6 = *(void *)(*v4 + 40);
  uint64_t v5 = *(void *)(*v4 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*v4 + 16), v6);
  *a1 = (*(uint64_t (**)(uint64_t))(*(void *)(v5 + 16) + 64))(v6);
  uint64_t v7 = *MEMORY[0x263F7DD38];
  uint64_t v8 = sub_20A8CA830();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a1, v7, v8);
}

uint64_t sub_20A589930()
{
  return sub_20A8C3E20();
}

uint64_t sub_20A589960(uint64_t a1)
{
  uint64_t v27 = sub_20A8CA350();
  uint64_t v2 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2B70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v26 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_20A8C8EA0();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))(v15, a1, v11, v13);
  int v16 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v15, v11);
  if (v16 == *MEMORY[0x263F7D5C0])
  {
    sub_20A8C9BF0();
    unint64_t v17 = (void *)sub_20A8C94C0();
    swift_release();
    id v18 = objc_msgSend(v17, sel_indexPathsForSelectedItems);

    if (v18)
    {
      uint64_t v19 = sub_20A8CE5E0();

      if (*(void *)(v19 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v7, v19 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v8);
        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v20 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v20, 1, v8);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
      {
        objc_super v22 = v26;
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v26, v7, v8);
        sub_20A8C9BF0();
        int v23 = (void *)sub_20A8C94C0();
        swift_release();
        uint64_t v24 = (void *)sub_20A8C2B00();
        objc_msgSend(v23, sel_deselectItemAtIndexPath_animated_, v24, 1);

        (*(void (**)(char *, uint64_t))(v9 + 8))(v22, v8);
        goto LABEL_12;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    }
    sub_20A58BA28((uint64_t)v7, (uint64_t (*)(void))sub_20A469FF4);
LABEL_12:
    uint64_t v21 = (unsigned int *)MEMORY[0x263F7DBF8];
    goto LABEL_13;
  }
  if (v16 == *MEMORY[0x263F7D5C8])
  {
    uint64_t v21 = (unsigned int *)MEMORY[0x263F7DBF0];
LABEL_13:
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *v21, v27);
    return sub_20A8C9C20();
  }
  uint64_t result = sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A589E10(uint64_t a1)
{
  return sub_20A589960(a1);
}

uint64_t sub_20A589E34(unsigned __int8 *a1)
{
  return MEMORY[0x270F7BF00](*a1, 2);
}

void sub_20A589E40()
{
  swift_getObjectType();
  sub_20A8C90F0();
  sub_20A588828();
  sub_20A586C80();
  sub_20A587024();
  sub_20A58CFE4();
  sub_20A8C6670();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v0 = (void *)sub_20A8C6450();
  sub_20A8C6500();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_20A589F44()
{
  swift_retain();
  sub_20A8C9410();
  swift_release();
  sub_20A58D34C();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_20A8CAB80();
  swift_unknownObjectRelease();
  sub_20A8C6530();
  swift_release();
  uint64_t v0 = sub_20A8C6640();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_20A58A040(uint64_t a1, uint64_t a2)
{
  sub_20A583CE8(0, (unint64_t *)&qword_26AC7F850, MEMORY[0x263F8F520], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v16[-v4];
  uint64_t v6 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x2105289B0](v6);
  if (result)
  {
    uint64_t v8 = (char *)result;
    uint64_t v9 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation;
    if (*(void *)(result + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation))
    {
      swift_retain();
      sub_20A8CE730();
      swift_release();
    }
    uint64_t v10 = sub_20A8CE720();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    uint64_t v11 = swift_allocObject();
    swift_beginAccess();
    uint64_t v12 = (void *)MEMORY[0x2105289B0](v6);
    swift_unknownObjectWeakInit();

    sub_20A8CE700();
    swift_retain();
    uint64_t v13 = sub_20A8CE6F0();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = MEMORY[0x263F8F500];
    void v14[2] = v13;
    void v14[3] = v15;
    v14[4] = v11;
    swift_release();
    *(void *)&v8[v9] = sub_20A5D973C((uint64_t)v5, (uint64_t)&unk_26763C018, (uint64_t)v14);

    return swift_release();
  }
  return result;
}

uint64_t sub_20A58A26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a4;
  uint64_t v5 = sub_20A8CF4C0();
  v4[18] = v5;
  v4[19] = *(void *)(v5 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v6 = sub_20A8C3F00();
  v4[21] = v6;
  v4[22] = *(void *)(v6 - 8);
  v4[23] = swift_task_alloc();
  sub_20A8CE700();
  v4[24] = sub_20A8CE6F0();
  uint64_t v8 = sub_20A8CE6E0();
  v4[25] = v8;
  v4[26] = v7;
  return MEMORY[0x270FA2498](sub_20A58A3BC, v8, v7);
}

uint64_t sub_20A58A3BC()
{
  if (qword_26AC6CF90 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17] + 16;
  uint64_t v2 = (void *)qword_26AC6CF88;
  sub_20A4F6E50(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
  v0[27] = v3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20A8D4540;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x2105289B0](v1);
  uint64_t v6 = (void *)v5;
  if (v5)
  {
    uint64_t v8 = v0[22];
    uint64_t v7 = v0[23];
    uint64_t v9 = v0[21];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v5 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v9);
    id v10 = v2;

    uint64_t v6 = (void *)sub_20A8C3EC0();
    unint64_t v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    id v13 = v2;
    unint64_t v12 = 0;
  }
  uint64_t v14 = v0[17] + 16;
  uint64_t v15 = MEMORY[0x263F8D310];
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  unint64_t v16 = sub_20A43F830();
  v0[28] = v16;
  *(void *)(v4 + 64) = v16;
  if (v12) {
    uint64_t v17 = (uint64_t)v6;
  }
  else {
    uint64_t v17 = 0x44455341454C4552;
  }
  unint64_t v18 = 0xE800000000000000;
  if (v12) {
    unint64_t v18 = v12;
  }
  *(void *)(v4 + 32) = v17;
  *(void *)(v4 + 40) = v18;
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x2105289B0](v14);
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    uint64_t v21 = sub_20A8C3E20();
    unint64_t v23 = v22;

    uint64_t v24 = (uint64_t *)(v4 + 72);
    *(void *)(v4 + 96) = v15;
    *(void *)(v4 + 104) = v16;
    if (v23)
    {
      *uint64_t v24 = v21;
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v24 = (uint64_t *)(v4 + 72);
    *(void *)(v4 + 96) = v15;
    *(void *)(v4 + 104) = v16;
  }
  *uint64_t v24 = 0x44455341454C4552;
  unint64_t v23 = 0xE800000000000000;
LABEL_16:
  *(void *)(v4 + 80) = v23;
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  sub_20A8CF4B0();
  uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_26763C028 + dword_26763C028);
  BOOL v25 = (void *)swift_task_alloc();
  v0[29] = v25;
  *BOOL v25 = v0;
  v25[1] = sub_20A58A6D4;
  return v27(500000000000000000, 0, 0, 0, 1);
}

uint64_t sub_20A58A6D4()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 160);
  uint64_t v4 = *(void *)(*v1 + 152);
  uint64_t v5 = *(void *)(*v1 + 144);
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v2 + 208);
  uint64_t v7 = *(void *)(v2 + 200);
  if (v0) {
    uint64_t v8 = sub_20A58A9C0;
  }
  else {
    uint64_t v8 = sub_20A58A86C;
  }
  return MEMORY[0x270FA2498](v8, v7, v6);
}

uint64_t sub_20A58A86C()
{
  uint64_t v1 = v0[17];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2105289B0](v1 + 16);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = v0[28];
    uint64_t v5 = (void *)qword_26AC6CF88;
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_20A8D4540;
    id v7 = v5;
    uint64_t v8 = sub_20A8C3EC0();
    uint64_t v9 = MEMORY[0x263F8D310];
    *(void *)(v6 + 56) = MEMORY[0x263F8D310];
    *(void *)(v6 + 64) = v4;
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    uint64_t v11 = sub_20A8C3E20();
    *(void *)(v6 + 96) = v9;
    *(void *)(v6 + 104) = v4;
    *(void *)(v6 + 72) = v11;
    *(void *)(v6 + 80) = v12;
    sub_20A8CEA00();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    sub_20A586068();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_20A58A9C0()
{
  uint64_t v1 = 0x44455341454C4552;
  uint64_t v2 = v0[17];
  swift_release();
  uint64_t v3 = v2 + 16;
  uint64_t v4 = (void *)qword_26AC6CF88;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20A8D4540;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2105289B0](v3);
  uint64_t v7 = v0[28];
  uint64_t v8 = MEMORY[0x263F8D310];
  if (v6)
  {
    uint64_t v9 = (void *)v6;
    uint64_t v11 = v0[22];
    uint64_t v10 = v0[23];
    uint64_t v12 = v0[21];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v6 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock, v12);
    id v13 = v4;

    uint64_t v14 = sub_20A8C3EC0();
    unint64_t v16 = v15;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    uint64_t v8 = MEMORY[0x263F8D310];
    *(void *)(v5 + 56) = MEMORY[0x263F8D310];
    *(void *)(v5 + 64) = v7;
    if (!v16)
    {
      unint64_t v16 = 0xE800000000000000;
      uint64_t v14 = 0x44455341454C4552;
    }
    uint64_t v1 = 0x44455341454C4552;
  }
  else
  {
    *(void *)(v5 + 56) = MEMORY[0x263F8D310];
    *(void *)(v5 + 64) = v7;
    id v17 = v4;
    unint64_t v16 = 0xE800000000000000;
    uint64_t v14 = 0x44455341454C4552;
  }
  uint64_t v18 = v0[17] + 16;
  *(void *)(v5 + 32) = v14;
  *(void *)(v5 + 40) = v16;
  swift_beginAccess();
  uint64_t v19 = MEMORY[0x2105289B0](v18);
  uint64_t v20 = v0[28];
  if (v19)
  {
    uint64_t v21 = (void *)v19;
    uint64_t v22 = sub_20A8C3E20();
    unint64_t v24 = v23;

    *(void *)(v5 + 96) = v8;
    *(void *)(v5 + 104) = v20;
    if (v24)
    {
      uint64_t v1 = v22;
      goto LABEL_11;
    }
  }
  else
  {
    *(void *)(v5 + 96) = v8;
    *(void *)(v5 + 104) = v20;
  }
  unint64_t v24 = 0xE800000000000000;
LABEL_11:
  BOOL v25 = (void *)v0[30];
  *(void *)(v5 + 72) = v1;
  *(void *)(v5 + 80) = v24;
  sub_20A8CEA00();
  sub_20A8C7D90();
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

void sub_20A58AC34()
{
}

uint64_t sub_20A58AC58()
{
  uint64_t v1 = *v0;
  swift_getObjectType();
  sub_20A8C90E0();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden) = 1;
  sub_20A8C89E0();
  return sub_20A5857CC();
}

uint64_t sub_20A58ACD0(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v113 = a1;
  uint64_t v110 = sub_20A8C6FE0();
  uint64_t v107 = *(void *)(v110 - 8);
  uint64_t v5 = *(void *)(v107 + 64);
  MEMORY[0x270FA5388](v110);
  uint64_t v108 = (char *)v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v109 = (char *)v95 - v7;
  uint64_t v112 = sub_20A8C7150();
  uint64_t v106 = *(void *)(v112 - 8);
  uint64_t v8 = *(void *)(v106 + 64);
  MEMORY[0x270FA5388](v112);
  CGRect v105 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v111 = (char *)v95 - v10;
  sub_20A4C7C24(0);
  MEMORY[0x270FA5388](v11 - 8);
  id v13 = (char *)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (int *)type metadata accessor for StockEarningsModel();
  uint64_t v15 = *((void *)v14 - 1);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v95 - v19;
  uint64_t v21 = v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earnings;
  swift_beginAccess();
  sub_20A58D3A4(v21, (uint64_t)v13, (uint64_t (*)(void))sub_20A4C7C24);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v15 + 48))(v13, 1, v14) != 1)
  {
    sub_20A58D40C((uint64_t)v13, (uint64_t)v20);
    uint64_t v24 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earningsCalendarManager);
    uint64_t v25 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earningsCalendarManager + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stock;
    uint64_t v102 = ObjectType;
    uint64_t v103 = v24;
    uint64_t v104 = v25;
    uint64_t v28 = sub_20A8C3BF0();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    if (a2 == 2)
    {
      sub_20A8C3BE0();
      uint64_t v33 = sub_20A8C3F00();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v17, v27, v33);
      uint64_t v34 = v14[5];
      uint64_t v35 = &v20[v34];
      double v36 = &v17[v34];
      uint64_t v37 = sub_20A8C2800();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v36, v35, v37);
      sub_20A58D478((uint64_t)&v20[v14[6]], (uint64_t)&v17[v14[6]]);
      uint64_t v38 = v14[7];
      uint64_t v39 = &v20[v38];
      uint64_t v40 = &v17[v38];
      uint64_t v41 = sub_20A8C2AF0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v40, v39, v41);
      v17[v14[8]] = 0;
      v17[v14[9]] = 2;
      uint64_t v42 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 40);
      uint64_t v43 = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 128))(v17, v43, v42);
      sub_20A58BA28((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
      id v31 = v113;
    }
    else
    {
      uint64_t v100 = v27;
      id v31 = v113;
      if (a2 == 1)
      {
        id v99 = objc_msgSend(v113, sel_event);
        if (v99)
        {
          uint64_t v97 = v28;
          CGRect v101 = v20;
          uint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
          uint64_t v98 = v32;
          if (v30)
          {
            __swift_project_boxed_opaque_existential_1((void *)(v32 + 88), *(void *)(v32 + 112));
            sub_20A8C6F20();
            sub_20A58DBA0(&qword_26763C030, MEMORY[0x263F79F78]);
            sub_20A8C4980();
          }
          else
          {
            uint64_t v61 = v106;
            uint64_t v62 = v111;
            (*(void (**)(char *, void, uint64_t))(v106 + 104))(v111, *MEMORY[0x263F7A0E8], v112);
            uint64_t v63 = v107;
            (*(void (**)(char *, void, uint64_t))(v107 + 104))(v109, *MEMORY[0x263F79FF0], v110);
            v95[1] = *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(v32 + 88), *(void *)(v32 + 112))+ 16);
            uint64_t v64 = v105;
            double v65 = v62;
            uint64_t v66 = v112;
            (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v105, v65, v112);
            (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v108, v109, v110);
            uint64_t v67 = *(unsigned __int8 *)(v61 + 80);
            uint64_t v96 = 0;
            uint64_t v68 = (v67 + 16) & ~v67;
            unint64_t v69 = (v8 + *(unsigned __int8 *)(v63 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
            uint64_t v70 = swift_allocObject();
            uint64_t v71 = v70 + v68;
            uint64_t v30 = v96;
            (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v71, v64, v66);
            unint64_t v72 = v70 + v69;
            uint64_t v73 = v110;
            (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v72, v108, v110);
            sub_20A8C48E0();
            swift_release();
            (*(void (**)(char *, uint64_t))(v63 + 8))(v109, v73);
            id v31 = v113;
            (*(void (**)(char *, uint64_t))(v61 + 8))(v111, v66);
            type metadata accessor for Localized();
            uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
            id v75 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
            sub_20A8C2370();

            uint64_t v76 = (void *)sub_20A8CE240();
            swift_bridgeObjectRelease();
            MEMORY[0x210527DD0](v76);
          }
          BOOL v77 = v30 == 0;
          uint64_t v78 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar;
          *(unsigned char *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar) = (*(unsigned char *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar) | v77) & 1;
          id v79 = objc_msgSend(v99, sel_eventIdentifier);
          uint64_t v81 = v100;
          double v80 = v101;
          if (v79)
          {
            uint64_t v82 = v79;
            sub_20A8CE280();

            sub_20A8C3BD0();
            swift_bridgeObjectRelease();
          }
          uint64_t v83 = sub_20A8C3F00();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v17, v81, v83);
          uint64_t v84 = v14[5];
          uint64_t v85 = &v80[v84];
          uint64_t v86 = &v17[v84];
          uint64_t v87 = sub_20A8C2800();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v86, v85, v87);
          sub_20A58D478((uint64_t)&v80[v14[6]], (uint64_t)&v17[v14[6]]);
          uint64_t v88 = v14[7];
          uint64_t v89 = &v80[v88];
          long long v90 = &v17[v88];
          uint64_t v91 = sub_20A8C2AF0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v90, v89, v91);
          v17[v14[8]] = *(unsigned char *)(v3 + v78);
          v17[v14[9]] = 1;
          uint64_t v92 = *(void *)(v98 + 40);
          uint64_t v93 = swift_getObjectType();
          (*(void (**)(char *, uint64_t, uint64_t))(v92 + 128))(v17, v93, v92);

          sub_20A58BA28((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
          uint64_t v20 = v80;
          goto LABEL_16;
        }
      }
    }
    uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
    if (v30)
    {
      __swift_project_boxed_opaque_existential_1((void *)(v44 + 88), *(void *)(v44 + 112));
      sub_20A8C6F20();
      sub_20A58DBA0(&qword_26763C030, MEMORY[0x263F79F78]);
      sub_20A8C4980();
    }
    else
    {
      uint64_t v45 = v106;
      uint64_t v46 = v111;
      uint64_t v47 = v112;
      (*(void (**)(char *, void, uint64_t))(v106 + 104))(v111, *MEMORY[0x263F7A0E8], v112);
      uint64_t v48 = *MEMORY[0x263F79FE8];
      uint64_t v49 = v107;
      id v50 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 104);
      id v51 = v109;
      CGRect v101 = v20;
      uint64_t v52 = v110;
      v50(v109, v48, v110);
      uint64_t v104 = *(void *)(*__swift_project_boxed_opaque_existential_1((void *)(v44 + 88), *(void *)(v44 + 112)) + 16);
      id v53 = v105;
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v105, v46, v47);
      id v54 = v108;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v108, v51, v52);
      unint64_t v55 = (*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
      unint64_t v56 = (v8 + *(unsigned __int8 *)(v49 + 80) + v55) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v57 = swift_allocObject();
      unint64_t v58 = v57 + v55;
      uint64_t v59 = v112;
      (*(void (**)(unint64_t, char *, uint64_t))(v45 + 32))(v58, v53, v112);
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v57 + v56, v54, v52);
      sub_20A8C48E0();
      swift_release();
      uint64_t v60 = v52;
      uint64_t v20 = v101;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v51, v60);
      id v31 = v113;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v111, v59);
    }
LABEL_16:
    objc_msgSend(v31, sel_dismissViewControllerAnimated_completion_, 1, 0);
    uint64_t v22 = (uint64_t (*)(void))type metadata accessor for StockEarningsModel;
    uint64_t v23 = (uint64_t)v20;
    return sub_20A58BA28(v23, v22);
  }
  uint64_t v22 = (uint64_t (*)(void))sub_20A4C7C24;
  uint64_t v23 = (uint64_t)v13;
  return sub_20A58BA28(v23, v22);
}

uint64_t sub_20A58B924()
{
  return sub_20A58DBA0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
}

void sub_20A58B96C()
{
  if (!qword_26AC68FF0)
  {
    sub_20A8C3F00();
    sub_20A42C470(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26AC68FF0);
    }
  }
}

uint64_t sub_20A58B9E8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A58BA20()
{
  return sub_20A586DC0(v0);
}

uint64_t sub_20A58BA28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A58BA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_20A8CF4A0();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_20A58BB8C, 0, 0);
}

uint64_t sub_20A58BB8C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_20A8CF4C0();
  uint64_t v5 = sub_20A58DBA0(&qword_26AC7FCE0, MEMORY[0x263F8F710]);
  sub_20A8CF7E0();
  sub_20A58DBA0(&qword_26AC7FCD8, MEMORY[0x263F8F6D8]);
  sub_20A8CF4D0();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_20A58BD2C;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_20A58BD2C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_20A58BEE8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_20A58BEE8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_20A58BF54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_20A8CA180();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = &v31[-v9];
  sub_20A8C7EE0();
  uint64_t v11 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v11(v10, a1, v4);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88);
  int v13 = v12(v10, v4);
  int v14 = *MEMORY[0x263F7DB28];
  int v15 = *MEMORY[0x263F7DB50];
  BOOL v16 = v13 == *MEMORY[0x263F7DB28] || v13 == v15;
  uint64_t v34 = v2;
  if (v16)
  {
    uint64_t v33 = v7;
    sub_20A8C9BF0();
    int v17 = v14;
    uint64_t v18 = (void *)sub_20A8C94C0();
    uint64_t v7 = v33;
    swift_release();
    objc_msgSend(v18, sel_setShowsVerticalScrollIndicator_, 1);

    int v14 = v17;
    int v19 = *MEMORY[0x263F7DB58];
  }
  else
  {
    int v19 = *MEMORY[0x263F7DB58];
    if (v13 != *MEMORY[0x263F7DB58] && v13 != *MEMORY[0x263F7DB48])
    {
      if (v13 == *MEMORY[0x263F7DB60] || v13 == *MEMORY[0x263F7DB40] || v13 == *MEMORY[0x263F7DB38]) {
        goto LABEL_20;
      }
      if (v13 != *MEMORY[0x263F7DB30]) {
        goto LABEL_36;
      }
    }
    int v32 = v15;
    sub_20A8C9BF0();
    uint64_t v23 = sub_20A8C94C0();
    LODWORD(v33) = v14;
    uint64_t v24 = (void *)v23;
    int v15 = v32;
    swift_release();
    objc_msgSend(v24, sel_setShowsVerticalScrollIndicator_, 0);

    int v14 = (int)v33;
  }
LABEL_20:
  v11(v7, a1, v4);
  int v25 = v12(v7, v4);
  if (v25 == v14 || v25 == v15 || v25 == v19)
  {
    uint64_t v28 = 1;
    uint64_t v29 = v34;
    return objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v28);
  }
  uint64_t v29 = v34;
  if (v25 == *MEMORY[0x263F7DB48])
  {
    uint64_t v28 = 0;
    return objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v28);
  }
  uint64_t v28 = 1;
  if (v25 == *MEMORY[0x263F7DB60]
    || v25 == *MEMORY[0x263F7DB40]
    || v25 == *MEMORY[0x263F7DB38]
    || v25 == *MEMORY[0x263F7DB30])
  {
    return objc_msgSend(*(id *)(v29 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView), sel_setHidden_, v28);
  }
LABEL_36:
  id result = (id)sub_20A8CF520();
  __break(1u);
  return result;
}

uint64_t sub_20A58C32C(uint64_t a1)
{
  sub_20A42C43C(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20A8C2530();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A58D3A4(a1, (uint64_t)v4, (uint64_t (*)(void))sub_20A42C43C);
  uint64_t v12 = sub_20A8C2CB0();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
  {
    sub_20A58BA28((uint64_t)v4, (uint64_t (*)(void))sub_20A42C43C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_20A58BA28((uint64_t)v7, (uint64_t (*)(void))sub_20A4845D0);
  }
  sub_20A8C2BD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_20A58BA28((uint64_t)v7, (uint64_t (*)(void))sub_20A4845D0);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  id v15 = objc_msgSend(self, sel_sharedApplication);
  BOOL v16 = (void *)sub_20A8C24D0();
  sub_20A4CFA44(MEMORY[0x263F8EE78]);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_20A58DBA0(&qword_26763B630, type metadata accessor for OpenExternalURLOptionsKey);
  int v17 = (void *)sub_20A8CE170();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_openURL_options_completionHandler_, v16, v17, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_20A58C698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_20A4845D0(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20A8C2530();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A4C7C24(0);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A58D3A4(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StockEarningsModel);
  uint64_t v16 = type metadata accessor for StockEarningsModel();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 0, 1, v16);
  uint64_t v17 = v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earnings;
  swift_beginAccess();
  sub_20A58CA6C((uint64_t)v15, v17);
  swift_endAccess();
  if (a3)
  {
    v24[1] = 0;
    void v24[2] = 0xE000000000000000;
    sub_20A8CE3D0();
    sub_20A8C2570();
    sub_20A8CE770();
    sub_20A8C2520();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      return sub_20A58BA28((uint64_t)v8, (uint64_t (*)(void))sub_20A4845D0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      id v21 = objc_msgSend(self, sel_sharedApplication);
      uint64_t v22 = (void *)sub_20A8C24D0();
      sub_20A4CFA44(MEMORY[0x263F8EE78]);
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_20A58DBA0(&qword_26763B630, type metadata accessor for OpenExternalURLOptionsKey);
      uint64_t v23 = (void *)sub_20A8CE170();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_openURL_options_completionHandler_, v22, v23, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
    uint64_t v19 = *(void *)(*(void *)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 104))(a1, ObjectType, v19);
  }
}

uint64_t sub_20A58CA6C(uint64_t a1, uint64_t a2)
{
  sub_20A4C7C24(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_20A58CAD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_20A469FF4(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A8C9BF0();
  uint64_t v9 = (void *)sub_20A8C94C0();
  swift_release();
  uint64_t v10 = (void *)sub_20A8CEAE0();

  sub_20A8C9BF0();
  uint64_t v11 = (void *)sub_20A8C94C0();
  swift_release();
  uint64_t v12 = sub_20A8C2B70();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, a2, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  sub_20A8CEAD0();

  sub_20A58BA28((uint64_t)v8, (uint64_t (*)(void))sub_20A469FF4);
  uint64_t v14 = *(void **)(v3 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler);
  uint64_t v15 = v14[5];
  uint64_t ObjectType = swift_getObjectType();
  char v18 = 0;
  (*(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v15 + 80))(a1, 1, &v18, ObjectType, v15);
  __swift_project_boxed_opaque_existential_1(v14 + 11, v14[14]);
  sub_20A80F87C(a1);
}

uint64_t sub_20A58CCBC()
{
  return sub_20A58CD24((uint64_t)&type metadata for BilingualFeedAlert, (void (*)(void))sub_20A58CEE4);
}

uint64_t sub_20A58CCF0()
{
  return sub_20A58CD24((uint64_t)&type metadata for NeverShowBilingualFeedPromptAlert, (void (*)(void))sub_20A58CE50);
}

uint64_t sub_20A58CD24(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 48), *(void *)(*(void *)(v2 + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler) + 72));
  uint64_t result = MEMORY[0x2105289B0](*v4 + 16);
  if (result)
  {
    uint64_t v6 = (void *)result;
    a2();
    sub_20A8CB470();
    swift_allocObject();
    sub_20A8CB420();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_20A8CB450();
    swift_release();
    swift_release_n();
    sub_20A8CB430();

    return swift_release();
  }
  return result;
}

unint64_t sub_20A58CE50()
{
  unint64_t result = qword_26763BFF0;
  if (!qword_26763BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BFF0);
  }
  return result;
}

uint64_t sub_20A58CEA4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A58CEDC()
{
  return sub_20A4B23D8();
}

unint64_t sub_20A58CEE4()
{
  unint64_t result = qword_26763BFF8;
  if (!qword_26763BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763BFF8);
  }
  return result;
}

uint64_t sub_20A58CF38()
{
  return sub_20A4B2310();
}

uint64_t sub_20A58CF40()
{
  return swift_deallocObject();
}

uint64_t sub_20A58CF78()
{
  uint64_t v1 = *(void *)(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8StocksUI23StockFeedViewController_eventHandler)
                 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(ObjectType, v1);
}

uint64_t sub_20A58CFC8()
{
  return sub_20A589F44();
}

void sub_20A58CFE4()
{
  if (!qword_26763C000)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26763C000);
    }
  }
}

uint64_t sub_20A58D050(uint64_t a1)
{
  return sub_20A58A040(a1, v1);
}

uint64_t sub_20A58D06C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20A58D0AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_20A490F70;
  return sub_20A58A26C(a1, v4, v5, v6);
}

void sub_20A58D160(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = type metadata accessor for StockFeedSectionDescriptor();
    v8[1] = type metadata accessor for StockFeedModel();
    long long v8[2] = sub_20A58DBA0(&qword_26AC76F98, (void (*)(uint64_t))type metadata accessor for StockFeedSectionDescriptor);
    v8[3] = sub_20A44D39C();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_20A58D224()
{
  unint64_t result = qword_26AC6A020;
  if (!qword_26AC6A020)
  {
    sub_20A58D160(255, (unint64_t *)&qword_26AC6A030, MEMORY[0x263F7D550]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC6A020);
  }
  return result;
}

void sub_20A58D298(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_20A58D318()
{
  return sub_20A58DBA0((unint64_t *)&unk_26AC731D0, (void (*)(uint64_t))type metadata accessor for StockFeedEarningsView);
}

void sub_20A58D34C()
{
  if (!qword_26AC82AF0)
  {
    unint64_t v0 = sub_20A8C65F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC82AF0);
    }
  }
}

uint64_t sub_20A58D3A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A58D40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StockEarningsModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20A58D478(uint64_t a1, uint64_t a2)
{
  sub_20A583CE8(0, &qword_26AC68CC0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_35Tm()
{
  uint64_t v1 = sub_20A8C7150();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = sub_20A8C6FE0();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_20A58D660(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_20A8C7150() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_20A8C6FE0() - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_20A80FDDC(a1, v1 + v4, v7);
}

void sub_20A58D734()
{
  uint64_t v1 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_statusBarView;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C8480()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_stockFeedTitleView;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)sub_20A8C7E80()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = OBJC_IVAR____TtC8StocksUI23StockFeedViewController_overlayView;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for StockFeedViewOverlayView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_toolbarTitleIsHidden] = 1;
  v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_watchState] = 2;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_delayedTipPresentation] = 0;
  unint64_t v4 = &v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_latestQuote];
  uint64_t v5 = sub_20A8C3E10();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_newlyAddedEventToCalendar] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC8StocksUI23StockFeedViewController_earnings];
  uint64_t v7 = type metadata accessor for StockEarningsModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);

  sub_20A8CF520();
  __break(1u);
}

uint64_t sub_20A58D900()
{
  uint64_t v0 = sub_20A8CA180();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_20A8CEB40();
  if (!v4) {
    return 1;
  }
  uint64_t v5 = (void *)v4;
  uint64_t v6 = sub_20A8C9CD0();
  if (!v6) {
    goto LABEL_9;
  }
  uint64_t v7 = (void *)v6;
  if ((sub_20A8CEB60() & 1) == 0)
  {

LABEL_9:
    return 0;
  }
  sub_20A8C9CC0();
  int v8 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v8 == *MEMORY[0x263F7DB28] || v8 == *MEMORY[0x263F7DB50])
  {

    return 1;
  }
  if (v8 != *MEMORY[0x263F7DB58]
    && v8 != *MEMORY[0x263F7DB48]
    && v8 != *MEMORY[0x263F7DB60]
    && v8 != *MEMORY[0x263F7DB40]
    && v8 != *MEMORY[0x263F7DB38]
    && v8 != *MEMORY[0x263F7DB30])
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
    return result;
  }

  return 0;
}

void sub_20A58DB1C()
{
}

void sub_20A58DB24()
{
}

void sub_20A58DB2C(double a1)
{
  id v2 = (id)sub_20A8C7E60();
  objc_msgSend(v2, sel_setAlpha_, a1);
}

void sub_20A58DB98()
{
  sub_20A58418C(v0);
}

uint64_t sub_20A58DBA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20A58DBE8()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

void sub_20A58DC20()
{
}

uint64_t sub_20A58DC28(uint64_t a1, double a2, double a3)
{
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  LOBYTE(a1) = sub_20A584704(a1, a2, a3);

  return a1 & 1;
}

uint64_t Settings.PPT.ExtendedLaunchTarget.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_20A8CF5B0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t Settings.PPT.ExtendedLaunchTarget.rawValue.getter()
{
  if (*v0) {
    return 0x756F59726F66;
  }
  else {
    return 0x73694C6B636F7473;
  }
}

uint64_t sub_20A58DD3C(char *a1, char *a2)
{
  return sub_20A44FEDC(*a1, *a2);
}

uint64_t sub_20A58DD48()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A58DDCC()
{
  sub_20A8CE360();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20A58DE3C()
{
  return sub_20A8CF8C0();
}

uint64_t sub_20A58DEBC@<X0>(char *a1@<X8>)
{
  return Settings.PPT.ExtendedLaunchTarget.init(rawValue:)(a1);
}

void sub_20A58DEC8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x73694C6B636F7473;
  if (*v1) {
    uint64_t v2 = 0x756F59726F66;
  }
  unint64_t v3 = 0xE900000000000074;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20A58DF08(uint64_t a1)
{
  unint64_t v2 = sub_20A58E380();
  uint64_t v3 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9D8](a1, v2, v3);
}

uint64_t sub_20A58DF5C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_20A58E380();
  uint64_t v5 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9D0](a1, a2, v4, v5);
}

uint64_t sub_20A58DFB8(uint64_t a1)
{
  unint64_t v2 = sub_20A58E380();
  uint64_t v3 = MEMORY[0x263F7D120];

  return MEMORY[0x270F7A9C8](a1, v2, v3);
}

uint64_t sub_20A58E00C()
{
  uint64_t v0 = sub_20A8C4260();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_20A8C4270();
  double v5 = MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void, double))(v7 + 104))(&v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F7D110], v5);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F7D100], v0);
  v9[15] = 0;
  sub_20A58E3D4();
  swift_allocObject();
  uint64_t result = sub_20A8C42E0();
  qword_26763C038 = result;
  return result;
}

uint64_t static Settings.PPT.extendedLaunchTarget.getter()
{
  if (qword_267639958 != -1) {
    swift_once();
  }

  return swift_retain();
}

unint64_t sub_20A58E218()
{
  unint64_t result = qword_26763C040;
  if (!qword_26763C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C040);
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.PPT()
{
  return &type metadata for Settings.PPT;
}

unsigned char *_s3PPTV20ExtendedLaunchTargetOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20A58E348);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Settings.PPT.ExtendedLaunchTarget()
{
  return &type metadata for Settings.PPT.ExtendedLaunchTarget;
}

unint64_t sub_20A58E380()
{
  unint64_t result = qword_26763C048;
  if (!qword_26763C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C048);
  }
  return result;
}

void sub_20A58E3D4()
{
  if (!qword_26763C050)
  {
    sub_20A58E430();
    unint64_t v0 = sub_20A8C42D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26763C050);
    }
  }
}

unint64_t sub_20A58E430()
{
  unint64_t result = qword_26763C058;
  if (!qword_26763C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C058);
  }
  return result;
}

id sub_20A58E56C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC8StocksUI23StockListRotateTestCase_testName];
  *(void *)uint64_t v2 = 0x73694C6B636F7453;
  *((void *)v2 + 1) = 0xEF657461746F5274;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListRotateTestCase_timeoutInSeconds] = 0x404E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListRotateTestCase_aggregate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListRotateTestCase_requiredCapabilities] = &unk_26BE5EAD0;
  *(void *)&v0[OBJC_IVAR____TtC8StocksUI23StockListRotateTestCase_rotateOrientation] = 4;
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for StockListRotateTestCase()
{
  return self;
}

uint64_t sub_20A58E6AC(uint64_t a1)
{
  uint64_t v26 = *v1;
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v4);
  uint64_t v25 = v3;
  uint64_t v5 = *(void *)(v3 + 8);
  unsigned int v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8);
  v28[3] = v4;
  v28[4] = v3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  v6(a1, v4, v5);
  uint64_t v9 = v1[10];
  uint64_t v8 = v1[11];
  __swift_project_boxed_opaque_existential_1(v1 + 7, v9);
  uint64_t v10 = *(void *)(v8 + 8);
  unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 8);
  void v27[3] = v9;
  v27[4] = v8;
  uint64_t v12 = __swift_allocate_boxed_opaque_existential_1(v27);
  uint64_t v13 = v11(a1, v9, v10);
  double v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (*(uint64_t (**)(char *, uint64_t *, uint64_t, double))(v17 + 16))(v16, boxed_opaque_existential_1, v4, v14);
  double v19 = MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t *, uint64_t, double))(v22 + 16))(v21, v12, v9, v19);
  uint64_t v23 = sub_20A58ED18((uint64_t)v16, (uint64_t)v21, v26, v4, v9, v25, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  return v23;
}

uint64_t sub_20A58E900(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = sub_20A8C43D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20A42CF04();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20A8D4540;
  unint64_t v11 = (void *)*MEMORY[0x263F814F0];
  *(void *)(inited + 32) = *MEMORY[0x263F814F0];
  swift_bridgeObjectRetain();
  id v12 = v11;
  if ((unint64_t)objc_msgSend(a3, sel_horizontalSizeClass) <= 2)
  {
    uint64_t v13 = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    sub_20A8CD010();
    (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F7D1A8], v6);
    sub_20A8CD000();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    double v14 = (void *)sub_20A8CEE20();
    uint64_t v15 = sub_20A8CEE40();

    sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FB80);
    *(void *)(inited + 40) = v15;
    uint64_t v16 = (void *)*MEMORY[0x263F81500];
    *(void *)(inited + 64) = v13;
    *(void *)(inited + 72) = v16;
    uint64_t v17 = v4 + 2;
    uint64_t v19 = v4[5];
    uint64_t v18 = v4[6];
    __swift_project_boxed_opaque_existential_1(v17, v19);
    uint64_t v20 = *(void *)(v18 + 16);
    id v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 40);
    id v22 = v16;
    uint64_t v23 = v21(v19, v20);
    *(void *)(inited + 104) = sub_20A42CFF0(0, (unint64_t *)&qword_26AC7FBB0);
    *(void *)(inited + 80) = v23;
    sub_20A4CF8B0(inited);
    id v24 = objc_allocWithZone(MEMORY[0x263F086A0]);
    uint64_t v25 = (void *)sub_20A8CE240();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_20A4393AC();
    uint64_t v26 = (void *)sub_20A8CE170();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v24, sel_initWithString_attributes_, v25, v26);

    return (uint64_t)v27;
  }
  else
  {
    uint64_t result = sub_20A8CF520();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SectionHeaderViewStyler()
{
  return self;
}

uint64_t sub_20A58ECEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_20A58E6AC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_20A58ED18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a4;
  uint64_t v21 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  uint64_t v17 = a5;
  uint64_t v18 = a7;
  uint64_t v13 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v13, a2, a5);
  uint64_t v14 = swift_allocObject();
  sub_20A42BEBC(&v19, v14 + 16);
  sub_20A42BEBC(&v16, v14 + 56);
  return v14;
}

uint64_t sub_20A58EE0C(uint64_t a1, uint64_t a2)
{
  sub_20A58FF60(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v12[-v5];
  uint64_t v7 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)&v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v9 = a1;
  v9[1] = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_20A480ED4(a1);
  swift_retain();
  sub_20A5BFAAC((uint64_t)v9, 0, (uint64_t)v6, (uint64_t)v15, 0, 0, (uint64_t)v13);
  swift_release();
  sub_20A58FFC4((uint64_t)v13, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A58FFC4((uint64_t)v15, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A58FFC4((uint64_t)v6, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A58FF60);
  sub_20A590968((uint64_t)v9, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_20A58F084(uint64_t a1)
{
  sub_20A58FF60(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v10[-v3];
  uint64_t v5 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v7 = a1;
  v7[40] = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_20A8C6D60();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  swift_retain();
  swift_retain();
  sub_20A5BFAAC((uint64_t)v7, 0, (uint64_t)v4, (uint64_t)v13, 0, 0, (uint64_t)v11);
  swift_release();
  sub_20A58FFC4((uint64_t)v11, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A58FFC4((uint64_t)v13, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A58FFC4((uint64_t)v4, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A58FF60);
  sub_20A590968((uint64_t)v7, type metadata accessor for StocksActivity);
  return swift_release();
}

uint64_t sub_20A58F2F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v53 = a3;
  uint64_t v52 = a2;
  uint64_t v51 = type metadata accessor for PreBuyFlowRouteModel();
  MEMORY[0x270FA5388](v51);
  uint64_t v59 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A58FF60(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v58 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v49 = (char *)&v47 - v11;
  uint64_t v60 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v60);
  uint64_t v57 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v48 = (char *)&v47 - v14;
  sub_20A58FF60(0, (unint64_t *)&unk_26AC68C70, MEMORY[0x263F06EA8], v7);
  MEMORY[0x270FA5388](v15 - 8);
  id v50 = (char *)&v47 - v16;
  uint64_t v17 = sub_20A8C2530();
  uint64_t v54 = *(void *)(v17 - 8);
  uint64_t v55 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v47 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_20A8C3890();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_20A8C3190();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v56 = a1;
  LOBYTE(a1) = sub_20A8CEAA0();
  uint64_t v61 = v4;
  __swift_project_boxed_opaque_existential_1((void *)(v4 + 24), *(void *)(v4 + 48));
  sub_20A8C3AC0();
  sub_20A8C2FA0();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  char v27 = sub_20A8C3880();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (a1 & 1) != 0 && (v27)
  {
    uint64_t v28 = (uint64_t)v50;
    sub_20A8C2520();
    uint64_t v30 = v54;
    uint64_t v29 = v55;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v28, 1, v55) == 1)
    {
      return sub_20A58FFC4(v28, (uint64_t)&unk_26AC68C70, MEMORY[0x263F06EA8], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A58FF60);
    }
    else
    {
      uint64_t v43 = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v47, v28, v29);
      uint64_t v44 = (uint64_t)v48;
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v48, v43, v29);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = sub_20A8C6D60();
      uint64_t v46 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v49, 1, 1, v45);
      uint64_t v67 = 0;
      long long v65 = 0u;
      long long v66 = 0u;
      uint64_t v64 = 0;
      long long v62 = 0u;
      long long v63 = 0u;
      swift_retain();
      sub_20A5BFAAC(v44, 0, v46, (uint64_t)&v65, 0, 0, (uint64_t)&v62);
      swift_release();
      sub_20A58FFC4((uint64_t)&v62, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
      sub_20A58FFC4((uint64_t)&v65, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
      sub_20A58FFC4(v46, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A58FF60);
      sub_20A590968(v44, type metadata accessor for StocksActivity);
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v43, v29);
    }
  }
  else
  {
    uint64_t v32 = v51;
    uint64_t v33 = v59;
    uint64_t v34 = &v59[*(int *)(v51 + 20)];
    uint64_t v35 = sub_20A8C78E0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v34, v52, v35);
    double v36 = (char *)v33 + *(int *)(v32 + 24);
    uint64_t v37 = sub_20A8C79F0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v36, v53, v37);
    uint64_t v38 = v56;
    uint64_t v39 = (uint64_t)v57;
    *uint64_t v33 = v56;
    sub_20A590900((uint64_t)v33, v39, (uint64_t (*)(void))type metadata accessor for PreBuyFlowRouteModel);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = sub_20A8C6D60();
    uint64_t v41 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v58, 1, 1, v40);
    uint64_t v67 = 0;
    long long v65 = 0u;
    long long v66 = 0u;
    uint64_t v64 = 0;
    long long v62 = 0u;
    long long v63 = 0u;
    id v42 = v38;
    swift_retain();
    sub_20A5BFAAC(v39, 0, v41, (uint64_t)&v65, 0, 0, (uint64_t)&v62);
    swift_release();
    sub_20A58FFC4((uint64_t)&v62, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
    sub_20A58FFC4((uint64_t)&v65, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
    sub_20A58FFC4(v41, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A58FF60);
    sub_20A590968(v39, type metadata accessor for StocksActivity);
    swift_release();
    return sub_20A590968((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for PreBuyFlowRouteModel);
  }
}

uint64_t type metadata accessor for SubscriptionsRouter()
{
  return self;
}

uint64_t sub_20A58FC24(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_20A8C7C50();
  uint64_t v13 = *(void *)(v12 - 8);
  double v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v13 + 104))(v16, *MEMORY[0x263F5A208], v12, v14);
  sub_20A590024(a1, a2, a3, a4, a5, a6, (uint64_t)v16, 0, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_20A58FD64(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  uint64_t v14 = sub_20A8C7C50();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v15 + 104))(v18, *MEMORY[0x263F5A208], v14, v16);
  sub_20A590024(a1, a2, a3, a4, a5, v20, (uint64_t)v18, v21, a8);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_20A58FEA8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_20A590024(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_20A58FEDC(uint64_t a1, uint64_t a2)
{
  return sub_20A58EE0C(a1, a2);
}

uint64_t sub_20A58FF08(uint64_t a1)
{
  return sub_20A58F084(a1);
}

uint64_t sub_20A58FF2C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_20A58F2F0(a1, a2, a3);
}

void sub_20A58FF60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_20A58FFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_20A590024(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v66 = a8;
  uint64_t v60 = a7;
  uint64_t v68 = a4;
  uint64_t v64 = a3;
  uint64_t v72 = a1;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_20A58FF60(0, (unint64_t *)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v70 = (char *)&v57 - v14;
  uint64_t v65 = type metadata accessor for StocksActivity(0);
  MEMORY[0x270FA5388](v65);
  unint64_t v69 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20A58FF60(0, (unint64_t *)&qword_26AC69BD0, MEMORY[0x263F5A0D8], v12);
  MEMORY[0x270FA5388](v16 - 8);
  long long v63 = (char *)&v57 - v17;
  uint64_t v18 = sub_20A8C7C50();
  uint64_t v59 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v57 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_20A8C56A0();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v71 = (char **)((char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = (int *)type metadata accessor for CampaignRouteModel();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v67 = (uint64_t)&v57 - v25;
  if (a6)
  {
    sub_20A58FF60(0, &qword_26763AE18, MEMORY[0x263F5A000], MEMORY[0x263F8E0F8]);
    uint64_t v26 = *(void *)(sub_20A8C7900() - 8);
    unint64_t v27 = a2;
    unint64_t v28 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_20A8D3DC0;
    uint64_t v58 = v29;
    unint64_t v30 = v29 + v28;
    a2 = v27;
    *(void *)unint64_t v30 = a5;
    *(void *)(v30 + 8) = a6;
    *(_OWORD *)(v30 + 32) = 0u;
    *(_OWORD *)(v30 + 48) = 0u;
    *(_OWORD *)(v30 + 16) = 0u;
    (*(void (**)(void))(v26 + 104))();
  }
  else
  {
    uint64_t v58 = MEMORY[0x263F8EE78];
  }
  uint64_t v31 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v31 = v72 & 0xFFFFFFFFFFFFLL;
  }
  if (v31)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v72 = 0;
    a2 = 0;
  }
  uint64_t v32 = v59;
  uint64_t v33 = v57;
  uint64_t v59 = a9;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v57, v60, v18);
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v33, v18);
  if (v34 == *MEMORY[0x263F5A200])
  {
    (*(void (**)(char *, uint64_t))(v32 + 96))(v33, v18);
    uint64_t v35 = v71;
    void *v71 = *(void *)v33;
    uint64_t v36 = *MEMORY[0x263F58E38];
    uint64_t v37 = sub_20A8C5690();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v35, v36, v37);
    swift_bridgeObjectRetain();
    uint64_t v39 = (uint64_t)v69;
    uint64_t v38 = (uint64_t)v70;
  }
  else
  {
    int v40 = v34;
    unint64_t v41 = a2;
    int v42 = *MEMORY[0x263F5A208];
    uint64_t v43 = *MEMORY[0x263F58E40];
    uint64_t v44 = sub_20A8C5690();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 104))(v71, v43, v44);
    if (v40 == v42)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v45 = *(void (**)(char *, uint64_t))(v32 + 8);
      swift_bridgeObjectRetain();
      v45(v33, v18);
    }
    uint64_t v39 = (uint64_t)v69;
    uint64_t v38 = (uint64_t)v70;
    a2 = v41;
    uint64_t v35 = v71;
  }
  uint64_t v46 = v61;
  uint64_t v47 = v62;
  (*(void (**)(void *, void, uint64_t))(v61 + 104))(v35, *MEMORY[0x263F58E48], v62);
  uint64_t v48 = sub_20A8C7B50();
  uint64_t v49 = (uint64_t)v63;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v63, 1, 1, v48);
  id v50 = &v23[v21[11]];
  *((void *)v50 + 1) = 0;
  swift_unknownObjectWeakInit();
  *(void *)uint64_t v23 = v72;
  *((void *)v23 + 1) = a2;
  (*(void (**)(char *, void *, uint64_t))(v46 + 32))(&v23[v21[5]], v35, v47);
  uint64_t v51 = &v23[v21[6]];
  uint64_t v52 = v68;
  *(void *)uint64_t v51 = v64;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = &v23[v21[7]];
  *(void *)uint64_t v53 = 0;
  *((void *)v53 + 1) = 0;
  *(void *)&v23[v21[8]] = v58;
  *(void *)&v23[v21[9]] = 0;
  sub_20A49A5F4(v49, (uint64_t)&v23[v21[10]]);
  *((void *)v50 + 1) = v59;
  swift_unknownObjectWeakAssign();
  uint64_t v54 = v67;
  sub_20A53EC84((uint64_t)v23, v67);
  sub_20A590900(v54, v39, (uint64_t (*)(void))type metadata accessor for CampaignRouteModel);
  swift_storeEnumTagMultiPayload();
  uint64_t v55 = sub_20A8C6D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v38, 1, 1, v55);
  uint64_t v76 = 0;
  memset(v75, 0, sizeof(v75));
  uint64_t v74 = 0;
  memset(v73, 0, sizeof(v73));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20A5BFAAC(v39, 0, v38, (uint64_t)v75, 0, 0, (uint64_t)v73);
  swift_release();
  sub_20A58FFC4((uint64_t)v73, (uint64_t)&qword_26AC69600, (uint64_t)&unk_26AC695F0, MEMORY[0x263F7CDB8], (uint64_t (*)(void))sub_20A491224);
  sub_20A58FFC4((uint64_t)v75, (uint64_t)&qword_26AC6AE80, (uint64_t)&qword_26AC6AE70, MEMORY[0x263F58868], (uint64_t (*)(void))sub_20A491224);
  sub_20A58FFC4(v38, (uint64_t)&unk_26AC699F0, MEMORY[0x263F79E28], MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_20A58FF60);
  sub_20A590968(v39, type metadata accessor for StocksActivity);
  swift_release();
  return sub_20A590968(v54, (uint64_t (*)(void))type metadata accessor for CampaignRouteModel);
}

uint64_t sub_20A590900(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20A590968(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A5909C8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_20A8C34A0();
    swift_retain();
    sub_20A590B3C(v2, v1);
    swift_bridgeObjectRelease();
    swift_release();
    swift_retain();
    sub_20A8C5D30();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for SortWatchlistMenuGroupOptionProvider()
{
  return self;
}

uint64_t sub_20A590AAC()
{
  uint64_t v1 = sub_20A8C34A0();
  swift_retain();
  sub_20A590B3C(v1, v0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_20A8C5D30();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20A590B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SortWatchlistCommandContext(0);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v20 = v2;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_20A68C7AC(0, v8, 0);
    uint64_t v9 = v26;
    uint64_t v10 = sub_20A8C34C0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v22 = (void *)(a2 + 40);
    uint64_t v23 = v10;
    uint64_t v21 = *(void *)(v11 + 72);
    uint64_t v13 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      uint64_t v14 = a2;
      __swift_project_boxed_opaque_existential_1(v22, *(void *)(a2 + 64));
      sub_20A8C3600();
      uint64_t v15 = v25;
      (*v13)(&v7[*(int *)(v25 + 20)], v12, v23);
      v7[*(int *)(v15 + 24)] = 0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_20A68C7AC(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v26;
      }
      unint64_t v18 = *(void *)(v9 + 16);
      unint64_t v17 = *(void *)(v9 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_20A68C7AC(v17 > 1, v18 + 1, 1);
        uint64_t v9 = v26;
      }
      *(void *)(v9 + 16) = v18 + 1;
      sub_20A5559BC((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v18);
      v12 += v21;
      --v8;
      a2 = v14;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_20A590D98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t)v3;
  v12[0] = MEMORY[0x263F8EE78];
  sub_20A5558A8(0, &qword_26AC82C18, (uint64_t (*)(uint64_t))sub_20A555874, MEMORY[0x263F7CE10]);
  swift_allocObject();
  v3[2] = sub_20A8C5D40();
  v3[3] = a1;
  void v3[4] = a2;
  sub_20A4342F4((uint64_t)a3, (uint64_t)(v3 + 5));
  swift_getObjectType();
  uint64_t v8 = qword_26AC6AC30;
  swift_unknownObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C40E0();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_26AC6AC00 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (qword_26AC6AC58 != -1) {
    swift_once();
  }
  swift_allocObject();
  swift_weakInit();
  sub_20A8C8CA0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_20A591164();
  swift_retain();
  sub_20A8C3670();
  swift_release();
  uint64_t v9 = sub_20A8C34A0();
  swift_retain();
  uint64_t v10 = sub_20A590B3C(v9, v4);
  swift_bridgeObjectRelease();
  swift_release();
  v12[0] = v10;
  swift_retain();
  sub_20A8C5D30();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v4;
}

uint64_t sub_20A591108()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_20A591140()
{
  return sub_20A5909C8();
}

uint64_t sub_20A591148()
{
  return sub_20A5909C8();
}

unint64_t sub_20A591164()
{
  unint64_t result = qword_26AC82C78;
  if (!qword_26AC82C78)
  {
    type metadata accessor for SortWatchlistMenuGroupOptionProvider();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26AC82C78);
  }
  return result;
}

uint64_t sub_20A5911B8()
{
  sub_20A5914B4();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v28 - v5;
  uint64_t v7 = sub_20A8C3CD0();
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = sub_20A8C3CA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if (v8)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v6, v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  sub_20A8C3CA0();
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v12(v6, 1, v9) == 1)
  {
    uint64_t v13 = (uint64_t)v6;
LABEL_12:
    sub_20A59150C(v13);
    return 2;
  }
  v28[1] = v0;
  uint64_t v14 = sub_20A8C3C80();
  char v16 = v15;
  unint64_t v17 = *(void (**)(char *, uint64_t))(v11 + 8);
  v17(v6, v9);
  if (v16) {
    return 2;
  }
  uint64_t v18 = sub_20A8C3CD0();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v3, v18+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * (v19 - 1), v9);
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v3, v20, 1, v9);
  swift_bridgeObjectRelease();
  if (v12(v3, 1, v9) == 1)
  {
    uint64_t v13 = (uint64_t)v3;
    goto LABEL_12;
  }
  double v22 = COERCE_DOUBLE(sub_20A8C3C80());
  char v24 = v23;
  v17(v3, v9);
  if (v24) {
    return 2;
  }
  uint64_t v25 = sub_20A8C3C30();
  if (v26) {
    double v27 = *(double *)&v14;
  }
  else {
    double v27 = *(double *)&v25;
  }
  return v22 - v27 < 0.0;
}

void sub_20A5914B4()
{
  if (!qword_26AC68F68)
  {
    sub_20A8C3CA0();
    unint64_t v0 = sub_20A8CF1B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26AC68F68);
    }
  }
}

uint64_t sub_20A59150C(uint64_t a1)
{
  sub_20A5914B4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_20A591568(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_20A8C9830();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    uint64_t v10 = (_OWORD *)((char *)a2 + v8);
    long long v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t sub_20A59163C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_20A5916C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  long long v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t sub_20A59175C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_20A5917E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20A8C9830();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_20A591864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20A591878);
}

uint64_t sub_20A591878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_20A5918E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20A5918F8);
}

uint64_t sub_20A5918F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20A8C9830();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BrandingTitleViewLayoutOptions()
{
  uint64_t result = qword_26AC79C10;
  if (!qword_26AC79C10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20A5919B4()
{
  uint64_t result = sub_20A8C9830();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20A591A48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v7 = sub_20A8C3690();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A8C3600();
  uint64_t v8 = sub_20A63C960((uint64_t)v6, v7);
  char v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v10)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  else
  {
    unint64_t v12 = v8 - 1;
    if (v8 < 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
      return swift_bridgeObjectRelease();
    }
    else if (v12 >= *(void *)(v7 + 16))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(a1, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12, v3);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  return result;
}

uint64_t sub_20A591C40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20A8C40E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v7 = sub_20A8C3690();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_20A8C3600();
  uint64_t v8 = sub_20A63C960((uint64_t)v6, v7);
  char v10 = v9;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v10)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
  else
  {
    unint64_t v12 = *(void *)(v7 + 16);
    if (v8 >= (uint64_t)(v12 - 1))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
      return swift_bridgeObjectRelease();
    }
    else if (v8 + 1 >= v12)
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(a1, v7+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * (v8 + 1), v3);
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  return result;
}

uint64_t type metadata accessor for ViewNextPreviousWatchlistCommandHandler()
{
  return self;
}

uint64_t sub_20A591E64()
{
  return sub_20A591EB8();
}

BOOL sub_20A591E8C()
{
  return sub_20A5921DC();
}

uint64_t sub_20A591EB8()
{
  sub_20A484450(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = sub_20A8C40E0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v15 - v12;
  sub_20A8CB840();
  if (qword_26AC6AC00 != -1) {
    swift_once();
  }
  if (sub_20A8CB640())
  {
    sub_20A591A48((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return sub_20A4AF940((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
      sub_20A8C3610();
      sub_20A8CBE60();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    if (qword_26AC6AC58 != -1) {
      swift_once();
    }
    uint64_t result = sub_20A8CB640();
    if (result)
    {
      sub_20A591C40((uint64_t)v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
      {
        return sub_20A4AF940((uint64_t)v3);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v3, v7);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
        sub_20A8C3610();
        sub_20A8CBE60();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      }
    }
  }
  return result;
}

BOOL sub_20A5921DC()
{
  sub_20A484450(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - v4;
  sub_20A8CB840();
  if (qword_26AC6AC00 != -1) {
    swift_once();
  }
  if (sub_20A8CB640())
  {
    sub_20A591A48((uint64_t)v5);
    uint64_t v6 = sub_20A8C40E0();
    int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  }
  else
  {
    if (qword_26AC6AC58 != -1) {
      swift_once();
    }
    if ((sub_20A8CB640() & 1) == 0) {
      return 0;
    }
    sub_20A591C40((uint64_t)v2);
    uint64_t v8 = sub_20A8C40E0();
    int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v2, 1, v8);
    uint64_t v5 = v2;
  }
  BOOL v9 = v7 != 1;
  sub_20A4AF940((uint64_t)v5);
  return v9;
}

uint64_t sub_20A5923C0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_type);
  sub_20A8CE280();

  sub_20A592B6C();
  sub_20A592BC0();
  LOBYTE(v1) = sub_20A8CE1D0();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_20A592470(void *a1)
{
  sub_20A556CDC(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StocksActivity(0);
  double v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (uint64_t *)((char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v9 = objc_msgSend(a1, sel_userInfo, v6);
  if (v9)
  {
    char v10 = v9;
    sub_20A592C7C();
    uint64_t v11 = sub_20A8CE180();

    id v12 = objc_msgSend(a1, sel_type);
    uint64_t v13 = sub_20A8CE280();
    uint64_t v15 = v14;

    uint64_t v16 = sub_20A8B0A28(v11);
    swift_bridgeObjectRelease();
    sub_20A60E534(v13, v15, v16, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_20A8C6D60();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 1, 1, v23);
    uint64_t v28 = 0;
    memset(v27, 0, sizeof(v27));
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    sub_20A5BFF1C((uint64_t)v8, 0, (uint64_t)v4, (uint64_t)v27, 0, 0, (uint64_t)v25);
    swift_release();
    sub_20A592CD4((uint64_t)v25, &qword_26AC69600, (unint64_t *)&unk_26AC695F0, MEMORY[0x263F7CDB8]);
    sub_20A592CD4((uint64_t)v27, &qword_26AC6AE80, (unint64_t *)&qword_26AC6AE70, MEMORY[0x263F58868]);
    sub_20A592D44((uint64_t)v4, (uint64_t (*)(void))sub_20A556CDC);
    sub_20A592D44((uint64_t)v8, type metadata accessor for StocksActivity);
    return 1;
  }
  else
  {
    sub_20A8CE9E0();
    sub_20A592C14(0, (unint64_t *)&qword_26AC80130, (unint64_t *)&qword_26AC80160, MEMORY[0x263F8E9C8], MEMORY[0x263F8E0F8]);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_20A8D3DC0;
    id v18 = objc_msgSend(a1, sel_type);
    uint64_t v19 = sub_20A8CE280();
    uint64_t v21 = v20;

    *(void *)(v17 + 56) = MEMORY[0x263F8D310];
    *(void *)(v17 + 64) = sub_20A43F830();
    *(void *)(v17 + 32) = v19;
    *(void *)(v17 + 40) = v21;
    sub_20A43F884();
    double v22 = (void *)sub_20A8CF180();
    sub_20A8C7D90();
    swift_bridgeObjectRelease();

    return 0;
  }
}

uint64_t sub_20A59298C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8StocksUI25StocksShortcutItemHandler_navigator;
  sub_20A4F6AEC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_20A592A44()
{
  return type metadata accessor for StocksShortcutItemHandler();
}

uint64_t type metadata accessor for StocksShortcutItemHandler()
{
  uint64_t result = qword_26AC6BF28;
  if (!qword_26AC6BF28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_20A592A98()
{
  sub_20A4F6AEC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_20A592B44(void *a1)
{
  return sub_20A592470(a1) & 1;
}

unint64_t sub_20A592B6C()
{
  unint64_t result = qword_26763C0F8;
  if (!qword_26763C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C0F8);
  }
  return result;
}

unint64_t sub_20A592BC0()
{
  unint64_t result = qword_26763C100;
  if (!qword_26763C100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26763C100);
  }
  return result;
}

void sub_20A592C14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_20A43F7E0(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_20A592C7C()
{
  unint64_t result = qword_26763C110;
  if (!qword_26763C110)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26763C110);
  }
  return result;
}

uint64_t sub_20A592CD4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_20A592C14(0, a2, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_20A592D44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_20A592DA4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *(void *)a1 = *a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    uint64_t v10 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, a2 + 2, v9);
    uint64_t v68 = a3;
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_20A8C3F00();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = (int *)type metadata accessor for StockViewModel();
    uint64_t v16 = v15[5];
    uint64_t v17 = (void *)(v12 + v16);
    id v18 = (const void *)(v13 + v16);
    uint64_t v19 = sub_20A8C3E10();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      sub_20A5962C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v23 = v15[6];
    char v24 = (char *)(v12 + v23);
    uint64_t v25 = (char *)(v13 + v23);
    uint64_t v26 = (int *)type metadata accessor for StockSparklineViewModel(0);
    uint64_t v27 = *((void *)v26 - 1);
    unint64_t v69 = a2;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
    {
      sub_20A5962C4(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v29 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
      uint64_t v30 = v26[5];
      uint64_t v31 = &v24[v30];
      uint64_t v32 = &v25[v30];
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v26[6];
      int v34 = &v24[v33];
      uint64_t v35 = &v25[v33];
      *(void *)int v34 = *(void *)v35;
      v34[8] = v35[8];
      v24[v26[7]] = v25[v26[7]];
      uint64_t v36 = v26[8];
      uint64_t v37 = &v24[v36];
      uint64_t v38 = &v25[v36];
      uint64_t v39 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v40 = v15[7];
    uint64_t v66 = v13;
    uint64_t v67 = v12;
    uint64_t v41 = v12 + v40;
    uint64_t v42 = v13 + v40;
    *(void *)uint64_t v41 = *(void *)v42;
    *(unsigned char *)(v41 + 8) = *(unsigned char *)(v42 + 8);
    *(void *)(v41 + 16) = *(void *)(v42 + 16);
    *(unsigned char *)(v41 + 24) = *(unsigned char *)(v42 + 24);
    *(void *)(v41 + 32) = *(void *)(v42 + 32);
    *(unsigned char *)(v41 + 40) = *(unsigned char *)(v42 + 40);
    uint64_t v43 = *(void *)(v42 + 56);
    *(void *)(v41 + 48) = *(void *)(v42 + 48);
    *(void *)(v41 + 56) = v43;
    uint64_t v44 = *(void *)(v42 + 72);
    *(void *)(v41 + 64) = *(void *)(v42 + 64);
    *(void *)(v41 + 72) = v44;
    uint64_t v45 = (int *)type metadata accessor for PriceViewModel();
    uint64_t v46 = v45[9];
    uint64_t v47 = v41 + v46;
    uint64_t v48 = v42 + v46;
    uint64_t v65 = v15;
    uint64_t v49 = sub_20A8C2EB0();
    id v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50(v47, v48, v49);
    uint64_t v51 = v45[10];
    uint64_t v52 = v41 + v51;
    uint64_t v53 = v42 + v51;
    uint64_t v54 = sub_20A8C4030();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v45[11];
    uint64_t v56 = v41 + v55;
    uint64_t v57 = v42 + v55;
    uint64_t v58 = sub_20A8C2990();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
    uint64_t v59 = v65[8];
    uint64_t v60 = v67 + v59;
    uint64_t v61 = v66 + v59;
    uint64_t v62 = sub_20A8C3410();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
    *(unsigned char *)(v67 + v65[9]) = *(unsigned char *)(v66 + v65[9]);
    uint64_t v63 = *(int *)(v68 + 32);
    *(void *)(a1 + *(int *)(v68 + 28)) = *(uint64_t *)((char *)v69 + *(int *)(v68 + 28));
    *(void *)(a1 + v63) = *(uint64_t *)((char *)v69 + v63);
  }
  swift_retain();
  return a1;
}

uint64_t sub_20A593380(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  double v6 = (int *)type metadata accessor for StockViewModel();
  uint64_t v7 = v4 + v6[5];
  uint64_t v8 = sub_20A8C3E10();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = v4 + v6[6];
  uint64_t v11 = type metadata accessor for StockSparklineViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    uint64_t v12 = sub_20A8CDCD0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
    uint64_t v13 = v10 + *(int *)(v11 + 32);
    uint64_t v14 = sub_20A8C3D00();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  uint64_t v15 = v4 + v6[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v17 = v15 + v16[9];
  uint64_t v18 = sub_20A8C2EB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  uint64_t v19 = v15 + v16[10];
  uint64_t v20 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t v21 = v15 + v16[11];
  uint64_t v22 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = v4 + v6[8];
  uint64_t v24 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);

  return swift_release();
}

uint64_t sub_20A593694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  uint64_t v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  uint64_t v66 = a3;
  uint64_t v67 = a2;
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v68 = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_20A8C3F00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for StockViewModel();
  uint64_t v16 = v15[5];
  uint64_t v17 = (void *)(v12 + v16);
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = sub_20A8C3E10();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_20A5962C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = v15[6];
  uint64_t v23 = (char *)(v12 + v22);
  uint64_t v24 = (char *)(v13 + v22);
  uint64_t v25 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v26 = *((void *)v25 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    sub_20A5962C4(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = sub_20A8CDCD0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v23, v24, v28);
    uint64_t v29 = v25[5];
    uint64_t v30 = &v23[v29];
    uint64_t v31 = &v24[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v25[6];
    uint64_t v33 = &v23[v32];
    int v34 = &v24[v32];
    *(void *)uint64_t v33 = *(void *)v34;
    v33[8] = v34[8];
    v23[v25[7]] = v24[v25[7]];
    uint64_t v35 = v25[8];
    uint64_t v36 = &v23[v35];
    uint64_t v37 = &v24[v35];
    uint64_t v38 = sub_20A8C3D00();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    (*(void (**)(char *, void, uint64_t, int *))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v39 = v15[7];
  uint64_t v65 = v15;
  uint64_t v40 = v12 + v39;
  uint64_t v41 = v13 + v39;
  *(void *)uint64_t v40 = *(void *)(v13 + v39);
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v13 + v39 + 8);
  *(void *)(v40 + 16) = *(void *)(v13 + v39 + 16);
  *(unsigned char *)(v40 + 24) = *(unsigned char *)(v13 + v39 + 24);
  *(void *)(v40 + 32) = *(void *)(v13 + v39 + 32);
  *(unsigned char *)(v40 + 40) = *(unsigned char *)(v13 + v39 + 40);
  uint64_t v42 = *(void *)(v13 + v39 + 56);
  *(void *)(v40 + 48) = *(void *)(v13 + v39 + 48);
  *(void *)(v40 + 56) = v42;
  uint64_t v43 = *(void *)(v13 + v39 + 72);
  *(void *)(v40 + 64) = *(void *)(v13 + v39 + 64);
  *(void *)(v40 + 72) = v43;
  uint64_t v44 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v45 = v44[9];
  uint64_t v46 = v40 + v45;
  uint64_t v47 = v41 + v45;
  uint64_t v48 = sub_20A8C2EB0();
  uint64_t v64 = v13;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49(v46, v47, v48);
  uint64_t v50 = v44[10];
  uint64_t v51 = v40 + v50;
  uint64_t v52 = v41 + v50;
  uint64_t v53 = sub_20A8C4030();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  uint64_t v54 = v44[11];
  uint64_t v55 = v40 + v54;
  uint64_t v56 = v41 + v54;
  uint64_t v57 = sub_20A8C2990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
  uint64_t v58 = v65[8];
  uint64_t v59 = v12 + v58;
  uint64_t v60 = v64 + v58;
  uint64_t v61 = sub_20A8C3410();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
  *(unsigned char *)(v12 + v65[9]) = *(unsigned char *)(v64 + v65[9]);
  uint64_t v62 = *(int *)(v66 + 32);
  *(void *)(v68 + *(int *)(v66 + 28)) = *(void *)(v67 + *(int *)(v66 + 28));
  *(void *)(v68 + v62) = *(void *)(v67 + v62);
  swift_retain();
  return v68;
}

void *sub_20A593C28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  uint64_t v76 = a3;
  BOOL v77 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20A8C3F00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v78 = (int *)type metadata accessor for StockViewModel();
  uint64_t v10 = v78[5];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_20A8C3E10();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_20A5962C4(0, &qword_26AC68FB0, MEMORY[0x263F7AEF0], MEMORY[0x263F8D8F0]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = v78[6];
  uint64_t v20 = &v7[v19];
  uint64_t v21 = &v8[v19];
  uint64_t v22 = (int *)type metadata accessor for StockSparklineViewModel(0);
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      uint64_t v64 = sub_20A8CDCD0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 24))(v20, v21, v64);
      uint64_t v65 = v22[5];
      uint64_t v66 = &v20[v65];
      uint64_t v67 = &v21[v65];
      uint64_t v68 = *(void *)v67;
      v66[8] = v67[8];
      *(void *)uint64_t v66 = v68;
      uint64_t v69 = v22[6];
      uint64_t v70 = &v20[v69];
      uint64_t v71 = &v21[v69];
      LOBYTE(v68) = v71[8];
      *(void *)uint64_t v70 = *(void *)v71;
      v70[8] = v68;
      v20[v22[7]] = v21[v22[7]];
      uint64_t v72 = v22[8];
      uint64_t v73 = &v20[v72];
      uint64_t v74 = &v21[v72];
      uint64_t v75 = sub_20A8C3D00();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 24))(v73, v74, v75);
      goto LABEL_13;
    }
    sub_20A596184((uint64_t)v20, type metadata accessor for StockSparklineViewModel);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_20A5962C4(0, &qword_26AC754A0, type metadata accessor for StockSparklineViewModel, MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v27 = sub_20A8CDCD0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v20, v21, v27);
  uint64_t v28 = v22[5];
  uint64_t v29 = &v20[v28];
  uint64_t v30 = &v21[v28];
  uint64_t v31 = *(void *)v30;
  v29[8] = v30[8];
  *(void *)uint64_t v29 = v31;
  uint64_t v32 = v22[6];
  uint64_t v33 = &v20[v32];
  int v34 = &v21[v32];
  LOBYTE(v31) = v34[8];
  *(void *)uint64_t v33 = *(void *)v34;
  v33[8] = v31;
  v20[v22[7]] = v21[v22[7]];
  uint64_t v35 = v22[8];
  uint64_t v36 = &v20[v35];
  uint64_t v37 = &v21[v35];
  uint64_t v38 = sub_20A8C3D00();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
  (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  uint64_t v40 = v78[7];
  uint64_t v41 = &v7[v40];
  uint64_t v42 = &v8[v40];
  uint64_t v43 = *(void *)&v8[v40];
  v41[8] = v42[8];
  *(void *)uint64_t v41 = v43;
  uint64_t v44 = *((void *)v42 + 2);
  unsigned char v41[24] = v42[24];
  *((void *)v41 + 2) = v44;
  uint64_t v45 = *((void *)v42 + 4);
  v41[40] = v42[40];
  *((void *)v41 + 4) = v45;
  *((void *)v41 + 6) = *((void *)v42 + 6);
  *((void *)v41 + 7) = *((void *)v42 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v41 + 8) = *((void *)v42 + 8);
  *((void *)v41 + 9) = *((void *)v42 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = (int *)type metadata accessor for PriceViewModel();
  uint64_t v47 = v46[9];
  uint64_t v48 = &v41[v47];
  uint64_t v49 = &v42[v47];
  uint64_t v50 = sub_20A8C2EB0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v48, v49, v50);
  uint64_t v51 = v46[10];
  uint64_t v52 = &v41[v51];
  uint64_t v53 = &v42[v51];
  uint64_t v54 = sub_20A8C4030();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 24))(v52, v53, v54);
  uint64_t v55 = v46[11];
  uint64_t v56 = &v41[v55];
  uint64_t v57 = &v42[v55];
  uint64_t v58 = sub_20A8C2990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = v78[8];
  uint64_t v60 = &v7[v59];
  uint64_t v61 = &v8[v59];
  uint64_t v62 = sub_20A8C3410();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24))(v60, v61, v62);
  v7[v78[9]] = v8[v78[9]];
  *(void *)((char *)a1 + *(int *)(v76 + 28)) = *(void *)((char *)v77 + *(int *)(v76 + 28));
  *(void *)((char *)a1 + *(int *)(v76 + 32)) = *(void *)((char *)v77 + *(int *)(v76 + 32));
  swift_retain();
  swift_release();
  return a1;
}