unint64_t sub_1C97E8F0C()
{
  unint64_t result;

  result = qword_1EA58D6B8;
  if (!qword_1EA58D6B8)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D6B8);
  }
  return result;
}

uint64_t sub_1C97E8F58(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C97E8FC4()
{
  unint64_t result = qword_1EA58D6C0;
  if (!qword_1EA58D6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D6C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_32()
{
  return *(void *)(v0 + 24);
}

uint64_t OUTLINED_FUNCTION_4_36()
{
  return sub_1C9803FC8();
}

void OUTLINED_FUNCTION_5_34(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 + 16) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_9_24()
{
  sub_1C9BECC28();
}

__n128 *OUTLINED_FUNCTION_10_23(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656C61636F6CLL;
  result[2].n128_u64[1] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_24()
{
  return v0;
}

void OUTLINED_FUNCTION_12_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 + 24) = (char *)&a9 - v9;
  sub_1C9BEC368();
}

uint64_t sub_1C97E912C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C963C340();
    uint64_t v2 = v11;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1C963C340();
      }
      v4 += 2;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C97E9204(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_1C9BEE0E8();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (uint64_t v6 = sub_1C9BEDE58(), v7 = -1 << *(unsigned char *)(a2 + 32), v8 = v6 & ~v7, OUTLINED_FUNCTION_3_36(), (v9 & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_1C97EA544();
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1C9BEDE68();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = (v8 + 1) & v13;
    OUTLINED_FUNCTION_3_36();
    if (v15)
    {
      do
      {
        id v16 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1C9BEDE68();

        if (v12) {
          break;
        }
        uint64_t v14 = (v14 + 1) & v13;
        OUTLINED_FUNCTION_3_36();
      }
      while ((v17 & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

void sub_1C97E9330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    OUTLINED_FUNCTION_6_30();
    sub_1C9BED4E8();
    sub_1C9BEE768();
    OUTLINED_FUNCTION_2_33();
    if (v4)
    {
      OUTLINED_FUNCTION_5_35();
      BOOL v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_4_37() & 1) == 0)
      {
        OUTLINED_FUNCTION_1_32();
        if (v7)
        {
          do
          {
            OUTLINED_FUNCTION_5_35();
            if (v6 && v8 == v3) {
              break;
            }
            if (OUTLINED_FUNCTION_4_37()) {
              break;
            }
            OUTLINED_FUNCTION_1_32();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
}

void sub_1C97E93F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    OUTLINED_FUNCTION_6_30();
    sub_1C9BED4E8();
    sub_1C9BEE768();
    OUTLINED_FUNCTION_2_33();
    if (v4)
    {
      OUTLINED_FUNCTION_5_35();
      BOOL v6 = v6 && v5 == v3;
      if (!v6 && (OUTLINED_FUNCTION_4_37() & 1) == 0)
      {
        OUTLINED_FUNCTION_1_32();
        if (v7)
        {
          do
          {
            OUTLINED_FUNCTION_5_35();
            if (v6 && v8 == v3) {
              break;
            }
            if (OUTLINED_FUNCTION_4_37()) {
              break;
            }
            OUTLINED_FUNCTION_1_32();
          }
          while ((v10 & 1) != 0);
        }
      }
    }
  }
}

void sub_1C97E94C0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!a2)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C9BECF88();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
    char v12 = sub_1C9BECF78();
    os_log_type_t v13 = sub_1C9BEDC78();
    if (!os_log_type_enabled(v12, v13)) {
      goto LABEL_13;
    }
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1C95F9000, v12, v13, "Provided DialogPhase text is nil", v14, 2u);
    char v15 = v14;
LABEL_12:
    MEMORY[0x1CB78C440](v15, -1, -1);
LABEL_13:

LABEL_14:
    *a3 = 0;
    a3[1] = 0;
    return;
  }
  uint64_t v6 = sub_1C9BED5F8();
  if (v6 != 0x656C776F6E6B6361 || v7 != 0xEF746E656D656764)
  {
    uint64_t v9 = v6;
    uint64_t v10 = v7;
    if ((OUTLINED_FUNCTION_0_27() & 1) == 0)
    {
      BOOL v18 = v9 == 0x64656C65636E6163 && v10 == 0xE800000000000000;
      if (v18 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC78260 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC78250;
        goto LABEL_18;
      }
      BOOL v19 = v9 == 0x6369666972616C63 && v10 == 0xED00006E6F697461;
      if (v19 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC78200 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC781E8;
        goto LABEL_18;
      }
      BOOL v20 = v9 == 0x6974656C706D6F63 && v10 == 0xEA00000000006E6FLL;
      if (v20 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC79618 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC79608;
        goto LABEL_18;
      }
      BOOL v21 = v9 == 0x616D7269666E6F63 && v10 == 0xEC0000006E6F6974;
      if (v21 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC781E0 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC781D0;
        goto LABEL_18;
      }
      BOOL v22 = v9 == 0x656D7269666E6F63 && v10 == 0xE900000000000064;
      if (v22 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC78278 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC78268;
        goto LABEL_18;
      }
      BOOL v23 = v9 == 0x726F727265 && v10 == 0xE500000000000000;
      if (v23 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC78230 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC78220;
        goto LABEL_18;
      }
      BOOL v24 = v9 == 0x697463656C666572 && v10 == 0xEA00000000006E6FLL;
      if (v24 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC781C0 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC781B0;
        goto LABEL_18;
      }
      BOOL v25 = v9 == 0x737574617473 && v10 == 0xE600000000000000;
      if (v25 || (OUTLINED_FUNCTION_0_27() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC78248 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC78238;
        goto LABEL_18;
      }
      BOOL v26 = v9 == 0x7972616D6D7573 && v10 == 0xE700000000000000;
      if (v26
        || (char v27 = OUTLINED_FUNCTION_0_27(), swift_bridgeObjectRetain(), swift_bridgeObjectRelease(), (v27 & 1) != 0))
      {
        swift_bridgeObjectRelease();
        if (qword_1EBC79638 != -1) {
          swift_once();
        }
        id v16 = &qword_1EBC79620;
        goto LABEL_18;
      }
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1C9BECF88();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain();
      char v12 = sub_1C9BECF78();
      os_log_type_t v29 = sub_1C9BEDC88();
      if (!os_log_type_enabled(v12, v29))
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_14;
      }
      v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = v31;
      *(_DWORD *)v30 = 136315138;
      swift_bridgeObjectRetain();
      sub_1C95FF228(a1, a2, &v32);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v12, v29, "Cannot convert text '%s' into a valid DialogPhase", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v31, -1, -1);
      char v15 = v30;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1EBC78218 != -1) {
    swift_once();
  }
  id v16 = &qword_1EBC78208;
LABEL_18:
  uint64_t v17 = v16[1];
  *a3 = *v16;
  a3[1] = v17;

  swift_bridgeObjectRetain();
}

uint64_t sub_1C97E9D28()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC78208 = result;
  unk_1EBC78210 = v1;
  return result;
}

uint64_t static DialogPhase.acknowledgement.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EBC78218, &qword_1EBC78208, &qword_1EBC78210, a1);
}

uint64_t sub_1C97E9D80()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC781B0 = result;
  *(void *)algn_1EBC781B8 = v1;
  return result;
}

uint64_t static DialogPhase.reflection.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EBC781C0, &qword_1EBC781B0, (uint64_t *)algn_1EBC781B8, a1);
}

uint64_t sub_1C97E9DD8()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC78238 = result;
  unk_1EBC78240 = v1;
  return result;
}

uint64_t static DialogPhase.status.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EBC78248, &qword_1EBC78238, &qword_1EBC78240, a1);
}

uint64_t sub_1C97E9E30()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC781E8 = result;
  *(void *)algn_1EBC781F0 = v1;
  return result;
}

uint64_t sub_1C97E9E60()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC781D0 = result;
  *(void *)algn_1EBC781D8 = v1;
  return result;
}

uint64_t sub_1C97E9E90()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC79608 = result;
  unk_1EBC79610 = v1;
  return result;
}

uint64_t sub_1C97E9EC0()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC78220 = result;
  *(void *)algn_1EBC78228 = v1;
  return result;
}

uint64_t static DialogPhase.error.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EBC78230, &qword_1EBC78220, (uint64_t *)algn_1EBC78228, a1);
}

uint64_t sub_1C97E9F18()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC78268 = result;
  unk_1EBC78270 = v1;
  return result;
}

uint64_t static DialogPhase.confirmed.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EBC78278, &qword_1EBC78268, &qword_1EBC78270, a1);
}

uint64_t sub_1C97E9F70()
{
  uint64_t result = sub_1C9BED568();
  qword_1EBC78250 = result;
  *(void *)algn_1EBC78258 = v1;
  return result;
}

uint64_t static DialogPhase.canceled.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EBC78260, &qword_1EBC78250, (uint64_t *)algn_1EBC78258, a1);
}

uint64_t sub_1C97E9FC8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C97EA02C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78348);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BF7460;
  if (qword_1EBC78218 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBC78210;
  *(void *)(inited + 32) = qword_1EBC78208;
  *(void *)(inited + 40) = v1;
  uint64_t v2 = qword_1EBC781C0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)algn_1EBC781B8;
  *(void *)(inited + 48) = qword_1EBC781B0;
  *(void *)(inited + 56) = v3;
  uint64_t v4 = qword_1EBC78248;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EBC78240;
  *(void *)(inited + 64) = qword_1EBC78238;
  *(void *)(inited + 72) = v5;
  uint64_t v6 = qword_1EBC78200;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)algn_1EBC781F0;
  *(void *)(inited + 80) = qword_1EBC781E8;
  *(void *)(inited + 88) = v7;
  uint64_t v8 = qword_1EBC79638;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = unk_1EBC79628;
  *(void *)(inited + 96) = qword_1EBC79620;
  *(void *)(inited + 104) = v9;
  uint64_t v10 = qword_1EBC781E0;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)algn_1EBC781D8;
  *(void *)(inited + 112) = qword_1EBC781D0;
  *(void *)(inited + 120) = v11;
  uint64_t v12 = qword_1EBC79618;
  swift_bridgeObjectRetain();
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EBC79610;
  *(void *)(inited + 128) = qword_1EBC79608;
  *(void *)(inited + 136) = v13;
  uint64_t v14 = qword_1EBC78230;
  swift_bridgeObjectRetain();
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void *)algn_1EBC78228;
  *(void *)(inited + 144) = qword_1EBC78220;
  *(void *)(inited + 152) = v15;
  uint64_t v16 = qword_1EBC78278;
  swift_bridgeObjectRetain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1EBC78270;
  *(void *)(inited + 160) = qword_1EBC78268;
  *(void *)(inited + 168) = v17;
  uint64_t v18 = qword_1EBC78260;
  swift_bridgeObjectRetain();
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void *)algn_1EBC78258;
  *(void *)(inited + 176) = qword_1EBC78250;
  *(void *)(inited + 184) = v19;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C97E912C(inited);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C98A5224(v20);
  qword_1EBC781C8 = result;
  return result;
}

SiriKitFlow::DialogPhase_optional __swiftcall DialogPhase.init(aceValue:)(SiriKitFlow::DialogPhase_optional aceValue)
{
  uint64_t v2 = v1;
  if (aceValue.value.aceValue._object)
  {
    object = aceValue.value.aceValue._object;
    uint64_t countAndFlagsBits = aceValue.value.aceValue._countAndFlagsBits;
    if (qword_1EBC76748 != -1) {
      swift_once();
    }
    sub_1C97E9330(countAndFlagsBits, (uint64_t)object, qword_1EBC781C8);
    if (aceValue.value.aceValue._countAndFlagsBits)
    {
      *uint64_t v2 = countAndFlagsBits;
      v2[1] = (uint64_t)object;
      return aceValue;
    }
    aceValue.value.aceValue._uint64_t countAndFlagsBits = swift_bridgeObjectRelease();
  }
  *uint64_t v2 = 0;
  v2[1] = 0;
  return aceValue;
}

uint64_t DialogPhase.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();

  return swift_bridgeObjectRelease();
}

uint64_t DialogPhase.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C97EA49C()
{
  return sub_1C9BEE768();
}

unint64_t sub_1C97EA4F8()
{
  unint64_t result = qword_1EA58D6C8;
  if (!qword_1EA58D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D6C8);
  }
  return result;
}

unint64_t sub_1C97EA544()
{
  unint64_t result = qword_1EBC76488;
  if (!qword_1EBC76488)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBC76488);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_27()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_4_37()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_5_35()
{
  return *(void *)(v0 + 16 * v1);
}

uint64_t OUTLINED_FUNCTION_6_30()
{
  return sub_1C9BEE738();
}

void sub_1C97EA634()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v31 = v3;
  uint64_t v33 = v4;
  uint64_t v29 = v5;
  uint64_t v6 = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v7 = v2;
  uint64_t v8 = v1;
  uint64_t v37 = MEMORY[0x1E4FBC860];
  sub_1C963C300();
  if ((v6 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_14_26(v9, v10, v11, v12, v13, v14, v15, v16, v27, v29, v31, v33, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      __dst[17],
      __dst[18],
      __dst[19],
      __dst[20],
      __dst[21],
      __dst[22],
      __dst[23],
      __dst[24],
      __dst[25],
      __dst[26],
      __dst[27],
      v8,
      SHIDWORD(v8),
      __src[0]);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
LABEL_16:
      OUTLINED_FUNCTION_6_31();
      return;
    }
    for (uint64_t i = v8 + 1; ; ++i)
    {
      memcpy(__dst, __src, 0xD9uLL);
      unint64_t v18 = *(void *)(v37 + 16);
      if (v18 >= *(void *)(v37 + 24) >> 1) {
        sub_1C963C300();
      }
      *(void *)(v37 + 16) = v18 + 1;
      uint64_t v19 = memcpy((void *)(v37 + 224 * v18 + 32), __dst, 0xD9uLL);
      if (v7 < v8) {
        break;
      }
      if (i - 1 >= v7) {
        goto LABEL_18;
      }
      if (v7 == i)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      OUTLINED_FUNCTION_14_26((uint64_t)v19, v20, v21, v22, v23, v24, v25, v26, v28, v30, v32, v34, __dst[0], __dst[1], __dst[2], __dst[3], __dst[4], __dst[5], __dst[6],
        __dst[7],
        __dst[8],
        __dst[9],
        __dst[10],
        __dst[11],
        __dst[12],
        __dst[13],
        __dst[14],
        __dst[15],
        __dst[16],
        __dst[17],
        __dst[18],
        __dst[19],
        __dst[20],
        __dst[21],
        __dst[22],
        __dst[23],
        __dst[24],
        __dst[25],
        __dst[26],
        __dst[27],
        i,
        SHIDWORD(i),
        __src[0]);
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
}

Swift::Bool __swiftcall TemplatingResult.shouldListenAfterSpeaking(defaultBehavior:)(Swift::Bool defaultBehavior)
{
  uint64_t v2 = *(void *)(v1 + 56);
  if (v2 != 2) {
    return v2 != 1;
  }
  return defaultBehavior;
}

uint64_t TemplatingResult.meta.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TemplatingResult.dialogIdentifier.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C97EA80C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = sub_1C9BEE388();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = (void *)sub_1C9BED928();
      uint64_t v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
    }
    return (uint64_t)v7;
  }
  return result;
}

double TemplatingResult.init(templateIdentifier:speak:print:meta:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_20_21();
  uint64_t v15 = OUTLINED_FUNCTION_23_17(v11, v12, v13, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_16_20();
  sub_1C97EA634();
  *(void *)uint64_t v9 = v8;
  *(void *)(v9 + 8) = v7;
  *(void *)(v9 + 16) = v16;
  *(void *)(v9 + 24) = a5;
  *(void *)(v9 + 32) = v6;
  *(void *)(v9 + 40) = v5;
  double result = 0.0;
  *(_OWORD *)(v9 + 48) = xmmword_1C9BF06E0;
  *(void *)(v9 + 64) = v15;
  return result;
}

void TemplatingResult.init(templateIdentifier:speak:print:behaviorAfterSpeaking:)()
{
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_24_13();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v12 = OUTLINED_FUNCTION_23_17(v8, v9, v10, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9_25();
  void *v4 = v3;
  v4[1] = v2;
  uint64_t v13 = MEMORY[0x1E4FBC868];
  v4[2] = v14;
  v4[3] = v13;
  v4[4] = v1;
  v4[5] = v0;
  v4[6] = v6;
  v4[7] = v7;
  v4[8] = v12;
  OUTLINED_FUNCTION_29_12();
}

uint64_t TemplatingResult.init(templateIdentifier:sections:behaviorAfterSpeaking:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a4;
  uint64_t v10 = a4[1];
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C96500F0(a3);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = a1;
  a5[1] = a2;
  uint64_t v17 = MEMORY[0x1E4FBC868];
  a5[2] = a3;
  a5[3] = v17;
  a5[4] = v15;
  a5[5] = v13;
  a5[6] = v9;
  a5[7] = v10;
  a5[8] = v11;
  return result;
}

uint64_t TemplatingSection.id.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t TemplatingSection.content.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t TemplatingSection.caption.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_2_34(v1[6], v1[7], v1[8], v1[9], a1);
}

uint64_t TemplatingSection.spokenOnly.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t TemplatingSection.unfilteredContent.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_2_34(v1[11], v1[12], v1[13], v1[14], a1);
}

uint64_t TemplatingSection.unfilteredCaption.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_2_34(v1[15], v1[16], v1[17], v1[18], a1);
}

uint64_t TemplatingSection.redactedContent.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_2_34(v1[19], v1[20], v1[21], v1[22], a1);
}

uint64_t TemplatingSection.redactedCaption.getter@<X0>(uint64_t *a1@<X8>)
{
  return OUTLINED_FUNCTION_2_34(v1[23], v1[24], v1[25], v1[26], a1);
}

uint64_t TemplatingSection.isApprovedForGrading.getter()
{
  return *(unsigned __int8 *)(v0 + 216);
}

void __swiftcall TemplatingSection.init(id:content:caption:spokenOnly:unfilteredContent:unfilteredCaption:redactedContent:redactedCaption:isApprovedForGrading:)(SiriKitFlow::TemplatingSection *__return_ptr retstr, Swift::String id, SiriKitFlow::TemplatingText content, SiriKitFlow::TemplatingText_optional caption, Swift::Bool spokenOnly, SiriKitFlow::TemplatingText_optional unfilteredContent, SiriKitFlow::TemplatingText_optional unfilteredCaption, SiriKitFlow::TemplatingText_optional redactedContent, SiriKitFlow::TemplatingText_optional redactedCaption, Swift::Bool isApprovedForGrading)
{
  Swift::String v10 = *(Swift::String *)content.text._object;
  Swift::String_optional v11 = (Swift::String_optional)*((_OWORD *)content.text._object + 1);
  retstr->content.speakableTextOverride = *(Swift::String_optional *)(content.text._countAndFlagsBits + 16);
  retstr->caption.value.text = v10;
  retstr->caption.value.speakableTextOverride = v11;
  Swift::String_optional v12 = (Swift::String_optional)*((_OWORD *)content.speakableTextOverride.value._object + 1);
  retstr->unfilteredContent.value.text = *(Swift::String *)content.speakableTextOverride.value._object;
  retstr->unfilteredContent.value.speakableTextOverride = v12;
  Swift::String_optional v13 = *(Swift::String_optional *)(caption.value.text._countAndFlagsBits + 16);
  retstr->unfilteredCaption.value.text = *(Swift::String *)caption.value.text._countAndFlagsBits;
  retstr->unfilteredCaption.value.speakableTextOverride = v13;
  Swift::String_optional v14 = (Swift::String_optional)*((_OWORD *)caption.value.text._object + 1);
  retstr->redactedContent.value.text = *(Swift::String *)caption.value.text._object;
  retstr->redactedContent.value.speakableTextOverride = v14;
  Swift::String_optional v15 = *(Swift::String_optional *)(caption.value.speakableTextOverride.value._countAndFlagsBits + 16);
  retstr->redactedCaption.value.text = *(Swift::String *)caption.value.speakableTextOverride.value._countAndFlagsBits;
  uint64_t v16 = *(void *)content.text._countAndFlagsBits;
  uint64_t v17 = *(void **)(content.text._countAndFlagsBits + 8);
  retstr->id = id;
  retstr->content.text._uint64_t countAndFlagsBits = v16;
  retstr->content.text._object = v17;
  retstr->spokenOnly = content.speakableTextOverride.value._countAndFlagsBits;
  retstr->redactedCaption.value.speakableTextOverride = v15;
  retstr->isApprovedForGrading = (Swift::Bool)caption.value.speakableTextOverride.value._object;
}

void __swiftcall TemplatingSection.init(id:content:caption:spokenOnly:unfilteredContent:unfilteredCaption:)(SiriKitFlow::TemplatingSection *__return_ptr retstr, Swift::String id, SiriKitFlow::TemplatingText content, SiriKitFlow::TemplatingText_optional caption, Swift::Bool spokenOnly, SiriKitFlow::TemplatingText_optional unfilteredContent, SiriKitFlow::TemplatingText_optional unfilteredCaption)
{
  *(double *)&long long v7 = OUTLINED_FUNCTION_7_29(id._countAndFlagsBits, (uint64_t)id._object, (uint64_t *)content.text._countAndFlagsBits, (long long *)content.text._object, content.speakableTextOverride.value._countAndFlagsBits, (_OWORD *)content.speakableTextOverride.value._object, caption.value.text._countAndFlagsBits, (uint64_t)retstr);
  *(_OWORD *)(v8 + 152) = v7;
  *(_OWORD *)(v8 + 168) = v7;
  *(_OWORD *)(v8 + 184) = v7;
  *(_OWORD *)(v8 + 200) = v7;
  *(unsigned char *)(v8 + 216) = 0;
}

void __swiftcall TemplatingSection.init(id:content:caption:spokenOnly:unfilteredContent:unfilteredCaption:isApprovedForGrading:)(SiriKitFlow::TemplatingSection *__return_ptr retstr, Swift::String id, SiriKitFlow::TemplatingText content, SiriKitFlow::TemplatingText_optional caption, Swift::Bool spokenOnly, SiriKitFlow::TemplatingText_optional unfilteredContent, SiriKitFlow::TemplatingText_optional unfilteredCaption, Swift::Bool isApprovedForGrading)
{
  *(double *)&long long v8 = OUTLINED_FUNCTION_7_29(id._countAndFlagsBits, (uint64_t)id._object, (uint64_t *)content.text._countAndFlagsBits, (long long *)content.text._object, content.speakableTextOverride.value._countAndFlagsBits, (_OWORD *)content.speakableTextOverride.value._object, caption.value.text._countAndFlagsBits, (uint64_t)retstr);
  *(_OWORD *)(v9 + 200) = v8;
  *(_OWORD *)(v9 + 184) = v8;
  *(_OWORD *)(v9 + 168) = v8;
  *(_OWORD *)(v9 + 152) = v8;
  *(unsigned char *)(v9 + 216) = v10;
}

uint64_t TemplatingSection.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 48);
  sub_1C9BEE188();
  OUTLINED_FUNCTION_108_0();
  swift_bridgeObjectRetain();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_24();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TemplatingText.description.getter();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_24();
  sub_1C964FD20(v3, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76770);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_108_0();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_108_0();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  return 0;
}

uint64_t sub_1C97EAE20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
    if (v6 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E6F6974706163 && a2 == 0xE700000000000000;
      if (v7 || (sub_1C9BEE618() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E4F6E656B6F7073 && a2 == 0xEA0000000000796CLL;
        if (v8 || (sub_1C9BEE618() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001C9C1CFA0 || (sub_1C9BEE618() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x80000001C9C1CFC0 || (sub_1C9BEE618() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x6465746361646572 && a2 == 0xEF746E65746E6F43;
          if (v9 || (sub_1C9BEE618() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 0x6465746361646572 && a2 == 0xEF6E6F6974706143;
            if (v10 || (sub_1C9BEE618() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x80000001C9C1CFE0)
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else
            {
              char v11 = sub_1C9BEE618();
              swift_bridgeObjectRelease();
              if (v11) {
                return 8;
              }
              else {
                return 9;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C97EB1DC()
{
  return 9;
}

unint64_t sub_1C97EB1E4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0x6E6F6974706163;
      break;
    case 3:
      unint64_t result = 0x6E4F6E656B6F7073;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
    case 7:
      unint64_t result = 0x6465746361646572;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C97EB304()
{
  return sub_1C96EE664();
}

unint64_t sub_1C97EB324()
{
  return sub_1C97EB1E4(*v0);
}

uint64_t sub_1C97EB32C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C97EAE20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C97EB354@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C97EB1DC();
  *a1 = result;
  return result;
}

uint64_t sub_1C97EB37C(uint64_t a1)
{
  unint64_t v2 = sub_1C97EC9FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97EB3B8(uint64_t a1)
{
  unint64_t v2 = sub_1C97EC9FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TemplatingSection.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D6D0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C97EC9FC();
  sub_1C9BEE7A8();
  sub_1C9BEE528();
  if (!v0)
  {
    sub_1C97ECA48();
    sub_1C9BEE568();
    OUTLINED_FUNCTION_3_37();
    sub_1C9BEE538();
    OUTLINED_FUNCTION_3_37();
    OUTLINED_FUNCTION_3_37();
    OUTLINED_FUNCTION_3_37();
    OUTLINED_FUNCTION_3_37();
    sub_1C9BEE538();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_6_31();
}

void TemplatingSection.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D6E8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_21_4();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C97EC9FC();
  sub_1C9BEE798();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    OUTLINED_FUNCTION_31_14();
    OUTLINED_FUNCTION_22_17();
  }
  else
  {
    uint64_t v22 = v4;
    LOBYTE(v44) = 0;
    uint64_t v21 = sub_1C9BEE488();
    uint64_t v8 = v7;
    sub_1C97ECA94();
    swift_bridgeObjectRetain();
    sub_1C9BEE4C8();
    uint64_t v9 = (uint64_t)v2;
    uint64_t v20 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_35_12();
    sub_1C9BEE478();
    uint64_t v24 = v45;
    uint64_t v25 = v47;
    uint64_t v19 = v46;
    uint64_t v10 = v44;
    LOBYTE(v44) = 3;
    uint64_t v11 = v45;
    sub_1C964FD20(v10, v45);
    uint64_t v23 = v47;
    char v18 = sub_1C9BEE498();
    uint64_t v41 = v10;
    uint64_t v42 = v46;
    OUTLINED_FUNCTION_35_12();
    sub_1C9BEE478();
    uint64_t v17 = v44;
    uint64_t v40 = v45;
    sub_1C964FD20(v44, v45);
    OUTLINED_FUNCTION_5_36();
    uint64_t v38 = v47;
    uint64_t v39 = v46;
    uint64_t v36 = v45;
    uint64_t v37 = v46;
    sub_1C964FD20(v44, v45);
    OUTLINED_FUNCTION_5_36();
    uint64_t v34 = v44;
    uint64_t v35 = v47;
    LOBYTE(v43[0]) = 7;
    uint64_t v32 = v45;
    uint64_t v33 = v46;
    sub_1C964FD20(v44, v45);
    OUTLINED_FUNCTION_5_36();
    uint64_t v30 = v44;
    uint64_t v31 = v47;
    uint64_t v12 = v45;
    uint64_t v13 = v46;
    char v73 = 8;
    uint64_t v28 = v47;
    uint64_t v29 = v44;
    sub_1C964FD20(v44, v45);
    uint64_t v26 = v46;
    uint64_t v27 = v45;
    char v14 = sub_1C9BEE498();
    uint64_t v15 = OUTLINED_FUNCTION_1_33();
    v16(v15);
    v43[0] = v21;
    v43[1] = v8;
    v43[2] = v20;
    v43[3] = v24;
    v43[4] = v19;
    v43[5] = v25;
    v43[6] = v41;
    v43[7] = v11;
    v43[8] = v42;
    v43[9] = v23;
    LOBYTE(v43[10]) = v18 & 1;
    v43[11] = v17;
    v43[12] = v40;
    v43[13] = v39;
    v43[14] = v38;
    v43[15] = v34;
    v43[16] = v36;
    v43[17] = v37;
    v43[18] = v35;
    v43[19] = v30;
    v43[20] = v32;
    v43[21] = v33;
    v43[22] = v31;
    v43[23] = v29;
    v43[24] = v12;
    v43[25] = v13;
    v43[26] = v28;
    LOBYTE(v43[27]) = v14 & 1;
    sub_1C97E7528(v43);
    sub_1C964FD64(v29, v12);
    sub_1C964FD64(v30, v32);
    sub_1C964FD64(v34, v36);
    sub_1C964FD64(v17, v40);
    sub_1C964FD64(v41, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v22, v43, 0xD9uLL);
    __swift_destroy_boxed_opaque_existential_1(v9);
    uint64_t v44 = v21;
    uint64_t v45 = v8;
    uint64_t v46 = v20;
    uint64_t v47 = v24;
    uint64_t v48 = v19;
    uint64_t v49 = v25;
    uint64_t v50 = v41;
    uint64_t v51 = v11;
    uint64_t v52 = v42;
    uint64_t v53 = v23;
    char v54 = v18 & 1;
    *(_DWORD *)v55 = v74[0];
    *(_DWORD *)&v55[3] = *(_DWORD *)((char *)v74 + 3);
    uint64_t v56 = v17;
    uint64_t v57 = v40;
    uint64_t v58 = v39;
    uint64_t v59 = v38;
    uint64_t v60 = v34;
    uint64_t v61 = v36;
    uint64_t v62 = v37;
    uint64_t v63 = v35;
    uint64_t v64 = v30;
    uint64_t v65 = v32;
    uint64_t v66 = v33;
    uint64_t v67 = v31;
    uint64_t v68 = v29;
    uint64_t v69 = v27;
    uint64_t v70 = v26;
    uint64_t v71 = v28;
    char v72 = v14 & 1;
    sub_1C97E7644(&v44);
  }
  OUTLINED_FUNCTION_6_31();
}

void sub_1C97EC038()
{
}

void sub_1C97EC050()
{
}

uint64_t TemplatingText.text.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t TemplatingText.speakableTextOverride.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t TemplatingText.description.getter()
{
  return 0;
}

uint64_t sub_1C97EC1CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C9C1D000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C97EC2AC(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 1954047348;
  }
}

uint64_t sub_1C97EC2E0()
{
  return sub_1C97EC2AC(*v0);
}

uint64_t sub_1C97EC2E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C97EC1CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C97EC310(uint64_t a1)
{
  unint64_t v2 = sub_1C97ECAE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97EC34C(uint64_t a1)
{
  unint64_t v2 = sub_1C97ECAE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void TemplatingText.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D6F8);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C97ECAE0();
  sub_1C9BEE7A8();
  sub_1C9BEE528();
  if (!v0) {
    sub_1C9BEE508();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_6_31();
}

void TemplatingText.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D708);
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C97ECAE0();
  sub_1C9BEE798();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    uint64_t v11 = sub_1C9BEE488();
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C9BEE468();
    uint64_t v16 = v15;
    uint64_t v17 = v14;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    *uint64_t v5 = v11;
    v5[1] = v13;
    v5[2] = v17;
    v5[3] = v16;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C97EC65C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E657473696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C9C1D020 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x42746C7561666564 && a2 == 0xEF726F6976616865;
    if (v6 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x4C646E41676E6964 && a2 == 0xED00006E65747369)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

uint64_t sub_1C97EC848()
{
  return 4;
}

unint64_t sub_1C97EC850(char a1)
{
  unint64_t result = 0x6E657473696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0x42746C7561666564;
      break;
    case 3:
      unint64_t result = 0x4C646E41676E6964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C97EC8FC()
{
  return 1;
}

uint64_t sub_1C97EC91C()
{
  return 0;
}

uint64_t sub_1C97EC928(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6449646E756F73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C97EC9B0()
{
  return 0x6449646E756F73;
}

void sub_1C97EC9C8()
{
}

void sub_1C97EC9E0()
{
}

unint64_t sub_1C97EC9FC()
{
  unint64_t result = qword_1EA58D6D8;
  if (!qword_1EA58D6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D6D8);
  }
  return result;
}

unint64_t sub_1C97ECA48()
{
  unint64_t result = qword_1EA58D6E0;
  if (!qword_1EA58D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D6E0);
  }
  return result;
}

unint64_t sub_1C97ECA94()
{
  unint64_t result = qword_1EA58D6F0;
  if (!qword_1EA58D6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D6F0);
  }
  return result;
}

unint64_t sub_1C97ECAE0()
{
  unint64_t result = qword_1EA58D700;
  if (!qword_1EA58D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D700);
  }
  return result;
}

unint64_t sub_1C97ECB2C()
{
  return sub_1C97EC850(*v0);
}

uint64_t sub_1C97ECB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C97EC65C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C97ECB5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C97EC848();
  *a1 = result;
  return result;
}

uint64_t sub_1C97ECB84(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED1BC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97ECBC0(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED1BC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C97ECC00(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED2A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97ECC3C(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED2A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C97ECC78@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C97EC8FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C97ECCA4()
{
  return sub_1C97672B0();
}

uint64_t sub_1C97ECCC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = OUTLINED_FUNCTION_4_7();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C97ECCEC(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED254();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97ECD28(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED254();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C97ECD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C97EC928(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C97ECD98(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED208();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97ECDD4(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED208();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C97ECE10(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED2EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C97ECE4C(uint64_t a1)
{
  unint64_t v2 = sub_1C97ED2EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void BehaviorAfterSpeaking.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v0;
  char v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D710);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_15_20(v7, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D718);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D720);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D728);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_1();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D730);
  OUTLINED_FUNCTION_0_2();
  uint64_t v23 = v15;
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_20_0();
  uint64_t v18 = *(void *)(v2 + 8);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C97ED1BC();
  sub_1C9BEE7A8();
  if (v18)
  {
    if (v18 == 1)
    {
      sub_1C97ED2A0();
      OUTLINED_FUNCTION_12_27();
    }
    else
    {
      if (v18 != 2)
      {
        sub_1C97ED208();
        OUTLINED_FUNCTION_12_27();
        sub_1C9BEE528();
        OUTLINED_FUNCTION_37();
        v21();
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v1, v14);
        goto LABEL_9;
      }
      sub_1C97ED254();
      OUTLINED_FUNCTION_12_27();
      OUTLINED_FUNCTION_33_11();
    }
  }
  else
  {
    sub_1C97ED2EC();
    OUTLINED_FUNCTION_12_27();
  }
  OUTLINED_FUNCTION_37();
  v19();
  OUTLINED_FUNCTION_37();
  v20();
LABEL_9:
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C97ED1BC()
{
  unint64_t result = qword_1EA58D738;
  if (!qword_1EA58D738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D738);
  }
  return result;
}

unint64_t sub_1C97ED208()
{
  unint64_t result = qword_1EA58D740;
  if (!qword_1EA58D740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D740);
  }
  return result;
}

unint64_t sub_1C97ED254()
{
  unint64_t result = qword_1EA58D748;
  if (!qword_1EA58D748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D748);
  }
  return result;
}

unint64_t sub_1C97ED2A0()
{
  unint64_t result = qword_1EA58D750;
  if (!qword_1EA58D750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D750);
  }
  return result;
}

unint64_t sub_1C97ED2EC()
{
  unint64_t result = qword_1EA58D758;
  if (!qword_1EA58D758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D758);
  }
  return result;
}

void BehaviorAfterSpeaking.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v67 = v0;
  char v4 = v3;
  uint64_t v63 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D760);
  OUTLINED_FUNCTION_0_2();
  uint64_t v61 = v7;
  uint64_t v62 = v6;
  MEMORY[0x1F4188790](v6, v8);
  OUTLINED_FUNCTION_33_0();
  uint64_t v65 = v9;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D768);
  OUTLINED_FUNCTION_0_2();
  uint64_t v60 = v10;
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_15_20(v13, v55[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D770);
  OUTLINED_FUNCTION_0_2();
  uint64_t v58 = v15;
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14, v16);
  OUTLINED_FUNCTION_21_4();
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D778);
  OUTLINED_FUNCTION_0_2();
  uint64_t v57 = v18;
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D780);
  OUTLINED_FUNCTION_0_2();
  uint64_t v25 = v24;
  MEMORY[0x1F4188790](v26, v27);
  OUTLINED_FUNCTION_20_0();
  uint64_t v28 = v4[3];
  uint64_t v66 = v4;
  __swift_project_boxed_opaque_existential_1(v4, v28);
  sub_1C97ED1BC();
  uint64_t v29 = v67;
  sub_1C9BEE798();
  if (v29) {
    goto LABEL_9;
  }
  v55[2] = v17;
  v55[3] = (uint64_t)v22;
  v55[4] = v2;
  uint64_t v67 = v25;
  uint64_t v30 = sub_1C9BEE4D8();
  uint64_t v31 = *(void *)(v30 + 16);
  if (!v31)
  {
    uint64_t v43 = v1;
LABEL_8:
    uint64_t v44 = sub_1C9BEE228();
    swift_allocError();
    uint64_t v46 = v45;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D788);
    *uint64_t v46 = &type metadata for BehaviorAfterSpeaking;
    sub_1C9BEE458();
    sub_1C9BEE208();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v44 - 8) + 104))(v46, *MEMORY[0x1E4FBBA70], v44);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v43, v23);
    goto LABEL_9;
  }
  uint64_t v56 = v23;
  uint64_t v32 = v1;
  v55[1] = 0;
  uint64_t v33 = *(unsigned __int8 *)(v30 + 32);
  sub_1C960BC1C(1, v31, v30, v30 + 32, 0, (2 * v31) | 1);
  uint64_t v35 = v34;
  unint64_t v37 = v36;
  swift_bridgeObjectRelease();
  if (v35 != v37 >> 1)
  {
    uint64_t v43 = v32;
    uint64_t v23 = v56;
    goto LABEL_8;
  }
  uint64_t v38 = v63;
  switch(v33)
  {
    case 1:
      sub_1C97ED2A0();
      OUTLINED_FUNCTION_13_32();
      OUTLINED_FUNCTION_33_11();
      OUTLINED_FUNCTION_37();
      v49();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_37();
      v50();
      uint64_t v41 = 0;
      uint64_t v42 = 1;
      break;
    case 2:
      sub_1C97ED254();
      OUTLINED_FUNCTION_13_32();
      OUTLINED_FUNCTION_33_11();
      OUTLINED_FUNCTION_37();
      v47();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_37();
      v48();
      uint64_t v41 = 0;
      uint64_t v42 = 2;
      break;
    case 3:
      sub_1C97ED208();
      OUTLINED_FUNCTION_13_32();
      uint64_t v41 = sub_1C9BEE488();
      uint64_t v42 = v51;
      OUTLINED_FUNCTION_37();
      v52();
      swift_unknownObjectRelease();
      uint64_t v53 = OUTLINED_FUNCTION_32_16();
      v54(v53);
      break;
    default:
      sub_1C97ED2EC();
      OUTLINED_FUNCTION_13_32();
      OUTLINED_FUNCTION_33_11();
      OUTLINED_FUNCTION_37();
      v39();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_37();
      v40();
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      break;
  }
  *uint64_t v38 = v41;
  v38[1] = v42;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  OUTLINED_FUNCTION_6_31();
}

void sub_1C97ED910()
{
}

void sub_1C97ED928()
{
}

uint64_t DialogTemplating.makeIntentConfirmationCancelledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 80))(a1, a4, a5, a6, a7);
}

uint64_t sub_1C97ED970(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  return DialogTemplating.makeSuggestAppDialog(app:intent:_:)(a1, a2, a3);
}

uint64_t DialogTemplating.makeSuggestAppDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_OWORD *))
{
  memset(v4, 0, 73);
  return a3(v4);
}

uint64_t _s11SiriKitFlow16DialogTemplatingPAAE023makeAppNotFoundOnDeviceD03app6intent_y0aG10Resolution0G0C_10IntentTypeQzys6ResultOyAA0eQ0Vs5Error_pGctF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 312))(a1, a3, a4, a5, a6);
}

void *assignWithCopy for TemplatingResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a2[7];
  if (a1[7] >= 3uLL)
  {
    if (v4 >= 3)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1C97EDB3C((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    goto LABEL_8;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
LABEL_8:
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C97EDB3C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D790);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *assignWithTake for TemplatingResult(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  uint64_t v5 = a2 + 6;
  if (a1[7] >= 3uLL)
  {
    unint64_t v6 = a2[7];
    if (v6 >= 3)
    {
      a1[6] = *v5;
      a1[7] = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C97EDB3C((uint64_t)(a1 + 6));
  }
  *((_OWORD *)a1 + 3) = *(_OWORD *)v5;
LABEL_6:
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithCopy for TemplatingSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97EE05C(a1 + 48);
      long long v7 = *(_OWORD *)(a2 + 64);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 64) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 64) = v8;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = (_OWORD *)(a1 + 88);
  uint64_t v10 = (_OWORD *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v11)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97EE05C(a1 + 88);
      long long v12 = *(_OWORD *)(a2 + 104);
      *uint64_t v9 = *v10;
      *(_OWORD *)(a1 + 104) = v12;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 104);
    *uint64_t v9 = *v10;
    *(_OWORD *)(a1 + 104) = v13;
  }
  uint64_t v14 = (_OWORD *)(a1 + 120);
  uint64_t v15 = (_OWORD *)(a2 + 120);
  uint64_t v16 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v16)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97EE05C(a1 + 120);
      long long v17 = *(_OWORD *)(a2 + 136);
      *uint64_t v14 = *v15;
      *(_OWORD *)(a1 + 136) = v17;
    }
  }
  else if (v16)
  {
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 136);
    *uint64_t v14 = *v15;
    *(_OWORD *)(a1 + 136) = v18;
  }
  uint64_t v19 = (_OWORD *)(a1 + 152);
  uint64_t v20 = (_OWORD *)(a2 + 152);
  uint64_t v21 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v21)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97EE05C(a1 + 152);
      long long v22 = *(_OWORD *)(a2 + 168);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 168) = v22;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *(_OWORD *)(a2 + 168);
    *uint64_t v19 = *v20;
    *(_OWORD *)(a1 + 168) = v23;
  }
  uint64_t v24 = (_OWORD *)(a1 + 184);
  uint64_t v25 = (_OWORD *)(a2 + 184);
  uint64_t v26 = *(void *)(a2 + 192);
  if (*(void *)(a1 + 192))
  {
    if (v26)
    {
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97EE05C(a1 + 184);
      long long v27 = *(_OWORD *)(a2 + 200);
      *uint64_t v24 = *v25;
      *(_OWORD *)(a1 + 200) = v27;
    }
  }
  else if (v26)
  {
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *(_OWORD *)(a2 + 200);
    *uint64_t v24 = *v25;
    *(_OWORD *)(a1 + 200) = v28;
  }
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

uint64_t sub_1C97EE05C(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy217_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD9uLL);
}

uint64_t assignWithTake for TemplatingSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C97EE05C(a1 + 48);
  }
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (*(void *)(a1 + 96))
  {
    uint64_t v10 = *(void *)(a2 + 96);
    if (v10)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v10;
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v11;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1C97EE05C(a1 + 88);
  }
  long long v12 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v12;
LABEL_11:
  if (*(void *)(a1 + 128))
  {
    uint64_t v13 = *(void *)(a2 + 128);
    if (v13)
    {
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_1C97EE05C(a1 + 120);
  }
  long long v15 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v15;
LABEL_16:
  if (*(void *)(a1 + 160))
  {
    uint64_t v16 = *(void *)(a2 + 160);
    if (v16)
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_1C97EE05C(a1 + 152);
  }
  long long v18 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v18;
LABEL_21:
  if (!*(void *)(a1 + 192))
  {
LABEL_25:
    long long v21 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v21;
    goto LABEL_26;
  }
  uint64_t v19 = *(void *)(a2 + 192);
  if (!v19)
  {
    sub_1C97EE05C(a1 + 184);
    goto LABEL_25;
  }
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v20;
  swift_bridgeObjectRelease();
LABEL_26:
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemplatingSection(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 217))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemplatingSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 216) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 217) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 217) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void *assignWithCopy for TemplatingText(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TemplatingText(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11SiriKitFlow21BehaviorAfterSpeakingOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for BehaviorAfterSpeaking(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BehaviorAfterSpeaking(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BehaviorAfterSpeaking(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BehaviorAfterSpeaking(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t dispatch thunk of DialogTemplating.makeParameterPromptDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(a11 + 32))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 40))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueConfirmationRejectedDialog(app:parameterName:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueChangeDialog(app:parameterName:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t dispatch thunk of DialogTemplating.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 64))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 72))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationCancelledDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationCancelledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 88))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentConfirmationWaitToContinueDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentHandledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 104))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentHandledContinueInAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentAutoHandledDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 120))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentNotHandledDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentInProgressDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentNotSupportedByAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 144))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppDisabledByScreenTimeDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of DialogTemplating.makeIntentAuthenticationDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 160))();
}

uint64_t dispatch thunk of DialogTemplating.makeInterstitialDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 168))();
}

uint64_t dispatch thunk of DialogTemplating.makeOfferIntentDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 176))();
}

uint64_t dispatch thunk of DialogTemplating.makeHandoffDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of DialogTemplating.makeNotificationMessageForHandoff(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 192))();
}

uint64_t dispatch thunk of DialogTemplating.makeUnlockDeviceDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t dispatch thunk of DialogTemplating.makeUnmuteSiriConfirmationDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of DialogTemplating.makeUnmuteSiriConfirmationRejectedDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 216))();
}

uint64_t dispatch thunk of DialogTemplating.makeEnableAppConfirmationDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 224))();
}

uint64_t dispatch thunk of DialogTemplating.makeEnableAppConfirmationRejectedDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 232))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppIsDisabledForSiriDialog(app:isHandsFree:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 240))();
}

uint64_t dispatch thunk of DialogTemplating.makeOpenAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 248))();
}

uint64_t dispatch thunk of DialogTemplating.makeSuggestAppDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 256))();
}

uint64_t dispatch thunk of DialogTemplating.makeDisambiguateAppDialog(apps:disambiguationList:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 264))();
}

uint64_t dispatch thunk of DialogTemplating.makeConfirmAppDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

uint64_t dispatch thunk of DialogTemplating.makeNoAppsFoundDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 280))();
}

uint64_t dispatch thunk of DialogTemplating.makeFindAppButtonTitleDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 288))();
}

uint64_t dispatch thunk of DialogTemplating.commonYesDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 296))();
}

uint64_t dispatch thunk of DialogTemplating.commonNoDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 304))();
}

uint64_t dispatch thunk of DialogTemplating.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 320))();
}

uint64_t dispatch thunk of DialogTemplating.makeOpenAppFailedDialog(app:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 328))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppNotFoundOnDeviceDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 336))();
}

uint64_t dispatch thunk of DialogTemplating.makeAppDoesNotSupportIntentDialog(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 344))();
}

uint64_t getEnumTagSinglePayload for SiriKitConfirmationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for BehaviorAfterSpeaking.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C97EEA80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.CodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.CodingKeys;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.ListenCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.ListenCodingKeys;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.ContinueWithoutListeningCodingKeys;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.DefaultBehaviorCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BehaviorAfterSpeaking.DingAndListenCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C97EEB84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BehaviorAfterSpeaking.DingAndListenCodingKeys()
{
  return &type metadata for BehaviorAfterSpeaking.DingAndListenCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TemplatingText.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C97EEC88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplatingText.CodingKeys()
{
  return &type metadata for TemplatingText.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TemplatingSection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 8) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v5 = v6 - 9;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for TemplatingSection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C97EEE14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemplatingSection.CodingKeys()
{
  return &type metadata for TemplatingSection.CodingKeys;
}

unint64_t sub_1C97EEE50()
{
  unint64_t result = qword_1EA58D798;
  if (!qword_1EA58D798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D798);
  }
  return result;
}

unint64_t sub_1C97EEEA0()
{
  unint64_t result = qword_1EA58D7A0;
  if (!qword_1EA58D7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7A0);
  }
  return result;
}

unint64_t sub_1C97EEEF0()
{
  unint64_t result = qword_1EA58D7A8;
  if (!qword_1EA58D7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7A8);
  }
  return result;
}

unint64_t sub_1C97EEF40()
{
  unint64_t result = qword_1EA58D7B0;
  if (!qword_1EA58D7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7B0);
  }
  return result;
}

unint64_t sub_1C97EEF90()
{
  unint64_t result = qword_1EA58D7B8;
  if (!qword_1EA58D7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7B8);
  }
  return result;
}

unint64_t sub_1C97EEFE0()
{
  unint64_t result = qword_1EA58D7C0;
  if (!qword_1EA58D7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7C0);
  }
  return result;
}

unint64_t sub_1C97EF030()
{
  unint64_t result = qword_1EA58D7C8;
  if (!qword_1EA58D7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7C8);
  }
  return result;
}

unint64_t sub_1C97EF080()
{
  unint64_t result = qword_1EA58D7D0;
  if (!qword_1EA58D7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7D0);
  }
  return result;
}

unint64_t sub_1C97EF0D0()
{
  unint64_t result = qword_1EA58D7D8;
  if (!qword_1EA58D7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7D8);
  }
  return result;
}

unint64_t sub_1C97EF120()
{
  unint64_t result = qword_1EA58D7E0;
  if (!qword_1EA58D7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7E0);
  }
  return result;
}

unint64_t sub_1C97EF170()
{
  unint64_t result = qword_1EA58D7E8;
  if (!qword_1EA58D7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7E8);
  }
  return result;
}

unint64_t sub_1C97EF1C0()
{
  unint64_t result = qword_1EA58D7F0;
  if (!qword_1EA58D7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7F0);
  }
  return result;
}

unint64_t sub_1C97EF210()
{
  unint64_t result = qword_1EA58D7F8;
  if (!qword_1EA58D7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D7F8);
  }
  return result;
}

unint64_t sub_1C97EF260()
{
  unint64_t result = qword_1EA58D800;
  if (!qword_1EA58D800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D800);
  }
  return result;
}

unint64_t sub_1C97EF2B0()
{
  unint64_t result = qword_1EA58D808;
  if (!qword_1EA58D808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D808);
  }
  return result;
}

unint64_t sub_1C97EF300()
{
  unint64_t result = qword_1EA58D810;
  if (!qword_1EA58D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D810);
  }
  return result;
}

unint64_t sub_1C97EF350()
{
  unint64_t result = qword_1EA58D818;
  if (!qword_1EA58D818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58D818);
  }
  return result;
}

unint64_t sub_1C97EF3A0()
{
  unint64_t result = qword_1EA58D820;
  if (!qword_1EA58D820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58D820);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return sub_1C964FD20(a1, a2);
}

uint64_t OUTLINED_FUNCTION_3_37()
{
  return sub_1C9BEE518();
}

uint64_t OUTLINED_FUNCTION_5_36()
{
  return sub_1C9BEE478();
}

double OUTLINED_FUNCTION_7_29@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, long long *a4@<X3>, char a5@<W4>, _OWORD *a6@<X5>, _OWORD *a7@<X6>, uint64_t a8@<X8>)
{
  long long v8 = *a4;
  long long v9 = a4[1];
  *(_OWORD *)(a8 + 32) = *((_OWORD *)a3 + 1);
  *(_OWORD *)(a8 + 48) = v8;
  *(_OWORD *)(a8 + 64) = v9;
  long long v10 = a6[1];
  *(_OWORD *)(a8 + 88) = *a6;
  *(_OWORD *)(a8 + 104) = v10;
  long long v11 = a7[1];
  *(_OWORD *)(a8 + 120) = *a7;
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = v12;
  *(void *)(a8 + 24) = v13;
  *(unsigned char *)(a8 + 80) = a5;
  *(_OWORD *)(a8 + 136) = v11;
  return 0.0;
}

void OUTLINED_FUNCTION_9_25()
{
  sub_1C97EA634();
}

uint64_t OUTLINED_FUNCTION_10_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 312))();
}

uint64_t OUTLINED_FUNCTION_11_25()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 224);
  return sub_1C964FD64(v2, v3);
}

uint64_t OUTLINED_FUNCTION_12_27()
{
  return sub_1C9BEE4F8();
}

uint64_t OUTLINED_FUNCTION_13_32()
{
  return sub_1C9BEE448();
}

uint64_t OUTLINED_FUNCTION_14_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,int a42,char a43)
{
  return sub_1C96698C8((uint64_t)&a41, v44, a11, a10, v43, a12, (uint64_t)&a43);
}

void OUTLINED_FUNCTION_15_20(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_16_20()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_24()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_21_17()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_17()
{
  return *(void *)(v0 + 128);
}

uint64_t OUTLINED_FUNCTION_23_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + 16);
  return sub_1C97EA80C(0, 0xE000000000000000, v5);
}

uint64_t OUTLINED_FUNCTION_31_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_32_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_11()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_38_9()
{
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 208);
  return sub_1C964FD64(v2, v3);
}

uint64_t DialogResult.sections.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DialogResult.meta.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DialogSection.id.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t DialogSection.content.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t DialogSection.caption.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C964FD20(v2, v3);
}

uint64_t DialogSection.spokenOnly.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

void __swiftcall DialogSection.init(id:content:caption:spokenOnly:)(SiriKitFlow::DialogSection *__return_ptr retstr, Swift::String id, SiriKitFlow::DialogText content, SiriKitFlow::DialogText_optional caption, Swift::Bool spokenOnly)
{
  Swift::String v5 = *(Swift::String *)content.text._object;
  Swift::String_optional v6 = (Swift::String_optional)*((_OWORD *)content.text._object + 1);
  retstr->content.speakableTextOverride = *(Swift::String_optional *)(content.text._countAndFlagsBits + 16);
  retstr->caption.value.text = v5;
  uint64_t v7 = *(void *)content.text._countAndFlagsBits;
  long long v8 = *(void **)(content.text._countAndFlagsBits + 8);
  retstr->id = id;
  retstr->content.text._uint64_t countAndFlagsBits = v7;
  retstr->content.text._object = v8;
  retstr->caption.value.speakableTextOverride = v6;
  retstr->spokenOnly = content.speakableTextOverride.value._countAndFlagsBits;
}

uint64_t DialogText.text.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t DialogText.speakableTextOverride.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t VisualResult.data.getter()
{
  uint64_t v0 = OUTLINED_FUNCTION_134_0();
  sub_1C960B020(v0, v1);
  return OUTLINED_FUNCTION_134_0();
}

uint64_t DialogVisualResult.dialog.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C97EF858(v2, v3);
}

uint64_t sub_1C97EF858(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void DialogVisualResult.visual.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  unint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  sub_1C97EF8BC(v2, v3, v4, v5);
}

void sub_1C97EF8BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C960B020(a3, a4);
  }
}

__n128 DialogVisualResult.init(dialog:visual:)@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v3 = a1[1];
  *a3 = *a1;
  a3[1] = v3;
  __n128 result = *(__n128 *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  a3[2] = *(_OWORD *)a2;
  a3[3] = v5;
  return result;
}

uint64_t destroy for DialogResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DialogResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DialogResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DialogResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for DialogResult()
{
}

uint64_t destroy for DialogSection(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 56);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DialogSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for DialogSection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97EFCF0(a1 + 48);
      long long v7 = *(_OWORD *)(a2 + 64);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 64) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 64) = v8;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t sub_1C97EFCF0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for DialogSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 56);
  if (!v7)
  {
    sub_1C97EFCF0(a1 + 48);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogSection(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 81))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DialogSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DialogSection()
{
}

void type metadata accessor for DialogText()
{
}

uint64_t destroy for VisualResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);

  return sub_1C960B0D8(v2, v3);
}

void *initializeWithCopy for VisualResult(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1C960B020(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for VisualResult(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_1C960B020(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1C960B0D8(v6, v7);
  return a1;
}

void *assignWithTake for VisualResult(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1C960B0D8(v5, v6);
  return a1;
}

void type metadata accessor for VisualResult()
{
}

uint64_t destroy for DialogVisualResult(void *a1)
{
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[5];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1[6];
    unint64_t v4 = a1[7];
    return sub_1C960B0D8(v3, v4);
  }
  return result;
}

void *initializeWithCopy for DialogVisualResult(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (v4)
  {
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  uint64_t v7 = a2[5];
  if (v7)
  {
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v9 = a2[6];
    unint64_t v8 = a2[7];
    swift_bridgeObjectRetain();
    sub_1C960B020(v9, v8);
    a1[6] = v9;
    a1[7] = v8;
  }
  else
  {
    long long v10 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v10;
  }
  return a1;
}

void *assignWithCopy for DialogVisualResult(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  if (a1[1])
  {
    if (v4)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97F0264((uint64_t)a1);
      long long v5 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v5;
    }
  }
  else if (v4)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    a1[3] = a2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v6;
  }
  uint64_t v7 = a1 + 4;
  unint64_t v8 = a2 + 4;
  uint64_t v9 = a2[5];
  if (a1[5])
  {
    if (v9)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v11 = a2[6];
      unint64_t v10 = a2[7];
      sub_1C960B020(v11, v10);
      uint64_t v12 = a1[6];
      unint64_t v13 = a1[7];
      a1[6] = v11;
      a1[7] = v10;
      sub_1C960B0D8(v12, v13);
    }
    else
    {
      sub_1C97F0294((uint64_t)(a1 + 4));
      long long v16 = *((_OWORD *)a2 + 3);
      *uint64_t v7 = *v8;
      *((_OWORD *)a1 + 3) = v16;
    }
  }
  else if (v9)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    uint64_t v15 = a2[6];
    unint64_t v14 = a2[7];
    swift_bridgeObjectRetain();
    sub_1C960B020(v15, v14);
    a1[6] = v15;
    a1[7] = v14;
  }
  else
  {
    long long v17 = *((_OWORD *)a2 + 3);
    *uint64_t v7 = *v8;
    *((_OWORD *)a1 + 3) = v17;
  }
  return a1;
}

uint64_t sub_1C97F0264(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C97F0294(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DialogVisualResult(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1C97F0264(a1);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
LABEL_6:
  if (!*(void *)(a1 + 40))
  {
LABEL_10:
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (!v6)
  {
    sub_1C97F0294(a1 + 32);
    goto LABEL_10;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a1 + 48);
  unint64_t v8 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_1C960B0D8(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DialogVisualResult(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DialogVisualResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for DialogVisualResult()
{
}

uint64_t OUTLINED_FUNCTION_1_34@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t sub_1C97F0478(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x1F4188298](sub_1C97F0498, 0, 0);
}

uint64_t sub_1C97F0498()
{
  uint64_t v15 = v0;
  uint64_t v1 = v0[7];
  type metadata accessor for ParameterWrapper();
  *(void *)(swift_initStackObject() + 16) = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_0_28();
  uint64_t v2 = sub_1C9BBE764();
  unint64_t v4 = v3;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v14 = v9;
    *(_DWORD *)unint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_1C95FF228(v2, v4, &v14);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v6, v7, "Sending direct invocation %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v9, -1, -1);
    MEMORY[0x1CB78C440](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = v0[6];
  uint64_t v11 = sub_1C97627C0(0x6174614472657375, 0xE800000000000000);
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v10 = v2;
  *(void *)(v10 + 8) = v4;
  *(void *)(v10 + 16) = v11;
  *(unsigned char *)(v10 + 40) = 0;
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t type metadata accessor for DirectInvocationBehaviorResponseHandler()
{
  return self;
}

uint64_t sub_1C97F0738(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C969F5FC;
  return sub_1C97F0478(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_28()
{
  return 0x696669746E656469;
}

double sub_1C97F07F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Parse(0);
  MEMORY[0x1F4188790](v8, v8);
  uint64_t v10 = (uint64_t *)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = qword_1EBC79EB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C983B018();
  sub_1C97F16D8((uint64_t)v10, type metadata accessor for Parse);
  if (v12)
  {
    *(void *)(a4 + 24) = type metadata accessor for AnyFlow();
    *(void *)(a4 + 32) = &protocol witness table for AnyFlow;
    *(void *)a4 = v12;
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for FlowLocatorWrapper()
{
  return self;
}

uint64_t sub_1C97F0960()
{
  OUTLINED_FUNCTION_24();
  v1[19] = v2;
  v1[20] = v0;
  uint64_t v3 = sub_1C9BEAB08();
  v1[21] = v3;
  v1[22] = *(void *)(v3 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = type metadata accessor for Parse(0);
  v1[25] = swift_task_alloc();
  v1[26] = type metadata accessor for Input(0);
  v1[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C97F0A7C, 0, 0);
}

uint64_t sub_1C97F0A7C()
{
  uint64_t v1 = *(void *)(v0 + 160);
  if (*(unsigned char *)(v1 + 96) == 1)
  {
    __swift_project_boxed_opaque_existential_1((void *)(v1 + 56), *(void *)(v1 + 80));
    uint64_t v2 = *(void *)(v1 + 32);
    *(void *)(v0 + 224) = v2;
    uint64_t v3 = *(void *)(v1 + 40);
    *(void *)(v0 + 232) = v3;
    uint64_t v4 = *(void *)(v1 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C97F07F4(v2, v3, v4, v0 + 56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(void *)(v0 + 80))
    {
      sub_1C97F1678(v0 + 56);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1C9BECF88();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
      sub_1C9BEC838();
    }
    uint64_t v6 = *(int **)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v7 = *(uint64_t **)(v0 + 200);
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 184);
    uint64_t v24 = *(void *)(v0 + 168);
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v23 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v9);
    *uint64_t v7 = v2;
    v7[1] = v3;
    v7[2] = v4;
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = v5 + v6[7];
    *(void *)(v10 + 32) = 0;
    *(_OWORD *)uint64_t v10 = 0u;
    *(_OWORD *)(v10 + 16) = 0u;
    sub_1C97D1F40((uint64_t)v7, v5 + v6[5]);
    *(void *)(v5 + v6[6]) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C9BEAAF8();
    sub_1C97F16D8((uint64_t)v7, type metadata accessor for Parse);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v21, v24);
    *(unsigned char *)(v5 + v6[8]) = 0;
    long long v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 + 24) + **(int **)(v23 + 24));
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 240) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1C97F0FB8;
    uint64_t v12 = *(void *)(v0 + 216);
    return v22(v12, v9, v23);
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C9BECF88();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBC7A520);
    uint64_t v15 = sub_1C9BECF78();
    os_log_type_t v16 = sub_1C9BEDC78();
    if (os_log_type_enabled(v15, v16))
    {
      long long v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v17 = 0;
      _os_log_impl(&dword_1C95F9000, v15, v16, "Invocation sent exiting as complete.", v17, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v18 = *(void *)(v0 + 152);

    static ExecuteResponse.complete()(v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1C97F0FB8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *(void *)(v0 + 216);
  *(unsigned char *)(v3 + 248) = v2;
  swift_task_dealloc();
  sub_1C97F16D8(v1, type metadata accessor for Input);
  return MEMORY[0x1F4188298](sub_1C97F10C4, 0, 0);
}

void sub_1C97F10C4()
{
  uint64_t v4 = v0;
  if (*(unsigned char *)(v0 + 248) == 1)
  {
    *(unsigned char *)(*(void *)(v0 + 160) + 96) = 0;
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
    sub_1C96FA940(v1, v2, (uint64_t *)(v0 + 96));
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
    sub_1C9BEC838();
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

void sub_1C97F13B0(uint64_t *a1)
{
  char v1 = *((unsigned char *)a1 + 8);
  uint64_t v2 = *a1;
  char v3 = v1;
  sub_1C97F13F0((uint64_t)&v2);
}

void sub_1C97F13F0(uint64_t a1)
{
  uint64_t v2 = v1;
  char v3 = *(void **)a1;
  unsigned __int8 v4 = *(unsigned char *)(a1 + 8);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C95F9000, v6, v7, "Child flow returned with an exitValue.", v8, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v9 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = v3;
  unsigned __int8 v10 = *(unsigned char *)(v2 + 24);
  *(unsigned char *)(v2 + 24) = v4;
  sub_1C9759F20(v3, v4);

  sub_1C9759F3C(v9, v10);
}

uint64_t sub_1C97F1508()
{
  sub_1C9759F3C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t sub_1C97F154C()
{
  sub_1C97F1508();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DirectInvocationExecutingFlow()
{
  return self;
}

uint64_t sub_1C97F15A4()
{
  return sub_1C97F095C();
}

uint64_t sub_1C97F15C8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96EE41C;
  return sub_1C97F0960();
}

id sub_1C97F1660@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 16);
  *(void *)a1 = v3;
  unsigned __int8 v4 = *(unsigned char *)(v2 + 24);
  *(unsigned char *)(a1 + 8) = v4;
  return sub_1C9759F20(v3, v4);
}

uint64_t sub_1C97F1678(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D848);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C97F16D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C97F1738(uint64_t *a1)
{
}

unsigned char *storeEnumTagSinglePayload for DirectInvocationExecutingFlow.DirectInvocationFlowError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C97F180CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DirectInvocationExecutingFlow.DirectInvocationFlowError()
{
  return &type metadata for DirectInvocationExecutingFlow.DirectInvocationFlowError;
}

unint64_t sub_1C97F184C()
{
  unint64_t result = qword_1EA58D850;
  if (!qword_1EA58D850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58D850);
  }
  return result;
}

void *sub_1C97F1898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Parse(0);
  MEMORY[0x1F4188790](v4, v5);
  os_log_type_t v7 = (void *)((char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Input(0);
  sub_1C97D1F40(a1 + *(int *)(v8 + 20), (uint64_t)v7);
  uint64_t v9 = 0x1EBC7A000;
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C97F25EC((uint64_t)v7);
    OUTLINED_FUNCTION_3_38();
    if (v56) {
      goto LABEL_52;
    }
    goto LABEL_63;
  }
  unint64_t v10 = v7[1];
  uint64_t v89 = *v7;
  uint64_t v11 = v7[2];
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v82 = a2 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  v93 = 0;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)&long long v19 = 136315138;
  long long v79 = v19;
  v78[1] = MEMORY[0x1E4FBC840] + 8;
  *(void *)&long long v19 = 136315394;
  long long v86 = v19;
  *(void *)&long long v19 = 136315650;
  long long v87 = v19;
  uint64_t v94 = v11;
  uint64_t v81 = a2;
  int64_t v80 = v16;
  while (1)
  {
LABEL_5:
    if (v15)
    {
      uint64_t v83 = (v15 - 1) & v15;
      int64_t v84 = v17;
      unint64_t v20 = __clz(__rbit64(v15)) | (v17 << 6);
      goto LABEL_18;
    }
    BOOL v21 = __OFADD__(v17, 1);
    int64_t v22 = v17 + 1;
    if (v21)
    {
      __break(1u);
LABEL_63:
      swift_once();
LABEL_52:
      uint64_t v66 = sub_1C9BECF88();
      os_log_type_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EBC7A520);
      uint64_t v68 = sub_1C9BECF78();
      os_log_type_t v69 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_4(v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v70 = 0;
        uint64_t v71 = "Provided input is not a direct invocation with identifier. Will not process.";
        goto LABEL_54;
      }
LABEL_55:

      return 0;
    }
    if (v22 >= v16) {
      goto LABEL_58;
    }
    unint64_t v23 = *(void *)(v82 + 8 * v22);
    if (v23) {
      goto LABEL_17;
    }
    if (v22 + 1 >= v16) {
      goto LABEL_58;
    }
    OUTLINED_FUNCTION_2_35();
    if (!v23)
    {
      if (v25 + 2 >= v16) {
        goto LABEL_58;
      }
      OUTLINED_FUNCTION_2_35();
      if (!v23)
      {
        if (v26 + 3 >= v16)
        {
LABEL_58:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          OUTLINED_FUNCTION_3_38();
          if (!v56) {
            goto LABEL_65;
          }
        }
        else
        {
          OUTLINED_FUNCTION_2_35();
          if (v23) {
            goto LABEL_16;
          }
          while (1)
          {
            int64_t v22 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              break;
            }
            if (v22 >= v16) {
              goto LABEL_58;
            }
            unint64_t v23 = *(void *)(v82 + 8 * v22);
            ++v24;
            if (v23) {
              goto LABEL_17;
            }
          }
          __break(1u);
LABEL_65:
          swift_once();
        }
        uint64_t v76 = sub_1C9BECF88();
        os_log_type_t v67 = __swift_project_value_buffer(v76, (uint64_t)qword_1EBC7A520);
        uint64_t v68 = sub_1C9BECF78();
        os_log_type_t v77 = sub_1C9BEDC78();
        if (OUTLINED_FUNCTION_4(v77))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v70 = 0;
          uint64_t v71 = "Could not match DirectInvocation to any provided configuration. Will not process";
LABEL_54:
          _os_log_impl(&dword_1C95F9000, v68, v67, v71, v70, 2u);
          OUTLINED_FUNCTION_11_4();
        }
        goto LABEL_55;
      }
    }
LABEL_16:
    int64_t v22 = v24;
LABEL_17:
    uint64_t v83 = (v23 - 1) & v23;
    int64_t v84 = v22;
    unint64_t v20 = __clz(__rbit64(v23)) + (v22 << 6);
LABEL_18:
    uint64_t v27 = *(void *)(a2 + 56);
    long long v28 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v20);
    unint64_t v29 = v28[1];
    uint64_t v88 = *v28;
    uint64_t v30 = *(void *)(v27 + 8 * v20);
    uint64_t v96 = type metadata accessor for ParameterWrapper();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v85 = inited;
    uint64_t v32 = sub_1C9762C30(0x697461636F766E69, 0xEB00000000736E6FLL, v18);
    uint64_t v33 = v32;
    uint64_t v95 = *(void *)(v32 + 16);
    if (v95) {
      break;
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_3_38();
    if (!v56) {
      swift_once();
    }
    uint64_t v61 = sub_1C9BECF88();
    os_log_type_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1C9BECF78();
    os_log_type_t v64 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_4(v64))
    {
      uint64_t v65 = swift_slowAlloc();
      v98[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = v79;
      swift_bridgeObjectRetain();
      *(void *)(v65 + 4) = sub_1C95FF228(v88, v29, v98);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v63, v62, "No invocation configurations provided for eventId: %s", (uint8_t *)v65, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_release();
    unint64_t v15 = v83;
    int64_t v17 = v84;
  }
  uint64_t v91 = v32;
  unint64_t v92 = v29;
  uint64_t v34 = 0;
  unint64_t v36 = v93;
  uint64_t v35 = v94;
  while (1)
  {
    uint64_t v37 = *(void *)(v33 + 8 * v34 + 32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v37;
    swift_bridgeObjectRetain_n();
    uint64_t v97 = v38;
    uint64_t v39 = sub_1C9815284();
    if (!v36) {
      break;
    }
    OUTLINED_FUNCTION_3_38();
    if (!v56) {
      swift_once();
    }
    uint64_t v41 = sub_1C9BECF88();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EBC7A520);
    unint64_t v42 = v92;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_1C9BECF78();
    os_log_type_t v44 = sub_1C9BEDC88();
    if (os_log_type_enabled(v43, v44))
    {
      unint64_t v45 = v42;
      uint64_t v46 = swift_slowAlloc();
      uint64_t v90 = swift_slowAlloc();
      v98[0] = v90;
      *(_DWORD *)uint64_t v46 = v87;
      swift_bridgeObjectRetain();
      *(void *)(v46 + 4) = sub_1C95FF228(v88, v45, v98);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 12) = 2080;
      *(void *)(v46 + 14) = sub_1C95FF228(0x696669746E656469, 0xEA00000000007265, v98);
      *(_WORD *)(v46 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v47 = v9;
      uint64_t v48 = sub_1C9BED438();
      v93 = v36;
      unint64_t v49 = v10;
      unint64_t v51 = v50;
      swift_bridgeObjectRelease();
      uint64_t v52 = v48;
      uint64_t v9 = v47;
      uint64_t v33 = v91;
      *(void *)(v46 + 24) = sub_1C95FF228(v52, v51, v98);
      swift_bridgeObjectRelease_n();
      unint64_t v10 = v49;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v43, v44, "Configuration for eventId '%s' is invalid. Parameter %s is required: %s", (uint8_t *)v46, 0x20u);
      uint64_t v35 = v94;
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
      swift_release();
      uint64_t v53 = v93;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v53 = v36;
    }

    unint64_t v36 = 0;
LABEL_38:
    if (v95 == ++v34)
    {
      v93 = 0;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v81;
      int64_t v16 = v80;
      uint64_t v18 = MEMORY[0x1E4FBC860];
      int64_t v17 = v84;
      unint64_t v15 = v83;
      goto LABEL_5;
    }
  }
  uint64_t v54 = v39;
  unint64_t v55 = v40;
  swift_bridgeObjectRelease();
  BOOL v56 = v54 == v89 && v55 == v10;
  if (!v56 && (sub_1C9BEE618() & 1) == 0)
  {
    OUTLINED_FUNCTION_3_38();
    if (!v56) {
      swift_once();
    }
    uint64_t v57 = sub_1C9BECF88();
    __swift_project_value_buffer(v57, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_1C9BECF78();
    os_log_type_t v59 = sub_1C9BEDC78();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      v98[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = v86;
      swift_bridgeObjectRetain();
      *(void *)(v60 + 4) = sub_1C95FF228(v89, v10, v98);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v60 + 14) = sub_1C95FF228(v54, v55, v98);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v58, v59, "Input DI identifier '%s' is not a match for desired identifier '%s'. Continuing", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      uint64_t v35 = v94;
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      swift_release();
    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v33 = v91;
    goto LABEL_38;
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v73 = (void *)swift_allocObject();
  v73[2] = v89;
  v73[3] = v10;
  uint64_t v74 = v88;
  v73[4] = v35;
  v73[5] = v74;
  uint64_t v75 = v97;
  v73[6] = v92;
  v73[7] = v75;
  return &unk_1EA58D860;
}

uint64_t sub_1C97F22D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  return MEMORY[0x1F4188298](sub_1C97F2304, 0, 0);
}

uint64_t sub_1C97F2304()
{
  int64_t v17 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[8];
  if (v4)
  {
    uint64_t v14 = v0[7];
    uint64_t v6 = v0[4];
    unint64_t v7 = v0[5];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[2] = sub_1C95FF228(v6, v7, &v16);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[2] = sub_1C95FF228(v14, v5, &v16);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v2, v3, "Matched invocation identifier: %s to eventId: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[8];
  uint64_t v10 = v0[7];
  uint64_t v11 = v0[3];
  uint64_t v12 = sub_1C9762D14(0x6174614472657375, 0xE800000000000000, MEMORY[0x1E4FBC868]);
  *(void *)uint64_t v11 = v10;
  *(void *)(v11 + 8) = v9;
  *(void *)(v11 + 16) = v12;
  *(unsigned char *)(v11 + 24) = 0;
  unint64_t v15 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  return v15();
}

uint64_t type metadata accessor for DirectInvocationUserInputParser()
{
  return self;
}

void *sub_1C97F25D4(uint64_t a1, uint64_t a2)
{
  return sub_1C97F1898(a1, a2);
}

uint64_t sub_1C97F25EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Parse(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C97F2648()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C97F2698(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C969F5FC;
  return sub_1C97F22D8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t BasicDisambiguationItemContainer.__allocating_init(_:_:)(uint64_t a1, char a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 24) = a1;
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_1C97F27CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t BasicDisambiguationItemContainer.init(_:_:)(uint64_t a1, char a2)
{
  *(void *)(v2 + 24) = a1;
  *(unsigned char *)(v2 + 16) = a2;
  return v2;
}

uint64_t sub_1C97F27E4()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BasicDisambiguationItemContainer.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BasicDisambiguationItemContainer.__deallocating_deinit()
{
  BasicDisambiguationItemContainer.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C97F2840()
{
  return sub_1C97F27CC();
}

uint64_t sub_1C97F2864()
{
  return sub_1C97F27E4() & 1;
}

uint64_t dispatch thunk of DisambiguationItemContaining.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DisambiguationItemContaining.shouldRequestUnlockForDisambiguation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C97F28B4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for BasicDisambiguationItemContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for BasicDisambiguationItemContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BasicDisambiguationItemContainer);
}

uint64_t dispatch thunk of BasicDisambiguationItemContainer.items.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of BasicDisambiguationItemContainer.__allocating_init(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of BasicDisambiguationItemContainer.shouldRequestUnlockForDisambiguation()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1C97F2990(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v49 = a5;
  uint64_t v50 = a8;
  BOOL v56 = a1;
  uint64_t v57 = a2;
  OUTLINED_FUNCTION_0();
  uint64_t v48 = v9;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_33_0();
  uint64_t v58 = v12;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v59 = v13;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_32_17(v16, v44);
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_33_0();
  uint64_t v53 = v19;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v51 = v21;
  MEMORY[0x1F4188790](v22, v23);
  OUTLINED_FUNCTION_2_0();
  uint64_t v47 = v24;
  MEMORY[0x1F4188790](v25, v26);
  long long v28 = (char *)&v44 - v27;
  uint64_t v29 = sub_1C9BEDB78();
  if (!v29) {
    return sub_1C9BED918();
  }
  uint64_t v30 = v29;
  uint64_t v45 = AssociatedTypeWitness;
  uint64_t v62 = sub_1C9BED3F8();
  uint64_t v54 = sub_1C9BEE2D8();
  sub_1C9BEE278();
  uint64_t v46 = v28;
  uint64_t result = sub_1C9BEDB68();
  if (v30 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = (void (**)(uint64_t))(v59 + 16);
    uint64_t v55 = v59 + 8;
    uint64_t v59 = a6;
    uint64_t v33 = v52;
    while (1)
    {
      uint64_t v34 = (void (*)(char *, void))sub_1C9BEDC08();
      (*v32)(v33);
      v34(v61, 0);
      uint64_t v35 = v60;
      v56(v33, v58);
      if (v35) {
        break;
      }
      uint64_t v60 = 0;
      OUTLINED_FUNCTION_37();
      v36();
      sub_1C9BEE2B8();
      sub_1C9BEDBC8();
      if (!--v30)
      {
        uint64_t v37 = v51;
        uint64_t v38 = v47;
        uint64_t v39 = v45;
        OUTLINED_FUNCTION_49_4();
        v40();
        sub_1C9BEE108();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
        return v62;
      }
    }
    OUTLINED_FUNCTION_37();
    v41();
    OUTLINED_FUNCTION_37();
    v42();
    swift_release();
    OUTLINED_FUNCTION_11_2();
    return v43();
  }
  return result;
}

uint64_t sub_1C97F2D48()
{
  OUTLINED_FUNCTION_3_1();
  swift_beginAccess();
  type metadata accessor for DisambiguationPrompt.State();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_8_16();
  return v4(v0, v1, v2, v3);
}

uint64_t sub_1C97F2DE8(uint64_t a1)
{
  OUTLINED_FUNCTION_3_1();
  uint64_t v4 = v1 + *(void *)(v3 + 160);
  swift_beginAccess();
  type metadata accessor for DisambiguationPrompt.State();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t DisambiguationPrompt.__allocating_init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)()
{
  uint64_t v0 = swift_allocObject();
  DisambiguationPrompt.init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)();
  return v0;
}

void DisambiguationPrompt.init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v59 = v2;
  uint64_t v4 = v3;
  uint64_t v52 = v3;
  uint64_t v6 = v5;
  uint64_t v51 = v5;
  uint64_t v58 = v7;
  uint64_t v57 = v8;
  uint64_t v10 = v9;
  uint64_t v53 = v9;
  uint64_t v11 = (void *)*v0;
  uint64_t v12 = v11[11];
  uint64_t v13 = v11[12];
  uint64_t v14 = v11[13];
  uint64_t v46 = type metadata accessor for USOKeyPath();
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v15;
  uint64_t v50 = v15;
  uint64_t v54 = *(void *)(v17 + 64);
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v72 = v10;
  uint64_t v62 = v11[10];
  uint64_t v22 = v62;
  uint64_t v63 = v12;
  uint64_t v55 = v12;
  uint64_t v64 = v13;
  uint64_t v65 = v14;
  uint64_t v66 = v6;
  uint64_t v67 = v4;
  uint64_t v23 = sub_1C9BED9A8();
  *(void *)&long long v68 = v22;
  *((void *)&v68 + 1) = v12;
  uint64_t v69 = v13;
  uint64_t v70 = v14;
  uint64_t v24 = type metadata accessor for DisambiguationPrompt.Choice();
  uint64_t v49 = v23;
  uint64_t WitnessTable = swift_getWitnessTable();
  v1[2] = sub_1C97F2990((void (*)(uint64_t, uint64_t))sub_1C97F3564, (uint64_t)&v61, v23, v24, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v25);
  uint64_t v26 = type metadata accessor for InputResolverAdapter();
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v45 = v21;
  uint64_t v27 = v46;
  v47(v21, v57, v46);
  uint64_t v28 = v55;
  uint64_t v70 = type metadata accessor for PromptInputResolver();
  uint64_t v71 = swift_getWitnessTable();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v68);
  uint64_t v56 = v14;
  sub_1C99A7C40();
  uint64_t v29 = sub_1C97F3674(&v68);
  v1[18] = v26;
  v1[19] = swift_getWitnessTable();
  v1[15] = v29;
  sub_1C95FD654(v58, (uint64_t)(v1 + 3));
  sub_1C95FD654(v59, (uint64_t)(v1 + 8));
  *(void *)&long long v68 = v53;
  v60[2] = v22;
  v60[3] = v28;
  v60[4] = v13;
  v60[5] = v14;
  v60[6] = v51;
  v60[7] = v52;
  uint64_t v31 = sub_1C97F2990((void (*)(uint64_t, uint64_t))sub_1C97F36B8, (uint64_t)v60, v49, v13, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v30);
  swift_bridgeObjectRelease();
  uint64_t v32 = v45;
  uint64_t v33 = v57;
  v47(v45, v57, v27);
  uint64_t v34 = v50;
  unint64_t v35 = (*(unsigned __int8 *)(v50 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  unint64_t v36 = (char *)swift_allocObject();
  uint64_t v54 = v22;
  *((void *)v36 + 2) = v22;
  uint64_t v37 = v55;
  *((void *)v36 + 3) = v55;
  *((void *)v36 + 4) = v13;
  *((void *)v36 + 5) = v56;
  *((void *)v36 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v36[v35], v32, v27);
  v1[13] = sub_1C97F3B40;
  v1[14] = v36;
  if (*(void *)(v33 + 24))
  {
    uint64_t v38 = *(void *)(v33 + 16);
    unint64_t v39 = *(void *)(v33 + 24);
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(v59);
  __swift_destroy_boxed_opaque_existential_1(v58);
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v27);
  v1[20] = v38;
  v1[21] = v39;
  *(void *)&long long v68 = v54;
  *((void *)&v68 + 1) = v37;
  uint64_t v69 = v13;
  uint64_t v70 = v56;
  type metadata accessor for DisambiguationPrompt.Response();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEE788();
  uint64_t v40 = OUTLINED_FUNCTION_35_13();
  __swift_storeEnumTagSinglePayload(v40, v41, v42, v43);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C97F3400(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v15[1] = a7;
  uint64_t v9 = MEMORY[0x1F4188790](a1, a2);
  MEMORY[0x1F4188790](v9, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  a2(a1);
  return sub_1C97F35BC();
}

uint64_t sub_1C97F3564(uint64_t a1)
{
  return sub_1C97F3400(a1, *(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t type metadata accessor for DisambiguationPrompt.Choice()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for InputResolverAdapter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C97F35BC()
{
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_11_2();
  v0();
  type metadata accessor for DisambiguationPrompt.Choice();
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_11_2();
  return v5(v1, v2, v3, v4);
}

uint64_t sub_1C97F3674(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C95FD5D8(a1, v2 + 16);
  return v2;
}

uint64_t sub_1C97F36B8()
{
  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1C97F36E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v38 = a6;
  uint64_t v10 = sub_1C9BEDEE8();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)v30 - v12;
  uint64_t v14 = sub_1C9BEB4F8();
  uint64_t v36 = *(void *)(v14 - 8);
  uint64_t v37 = v14;
  MEMORY[0x1F4188790](v14, v15);
  v30[1] = a5;
  uint64_t v31 = (char *)v30 - v16;
  v30[0] = a3;
  uint64_t v17 = type metadata accessor for USOKeyPath();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v21 = (char *)v30 - v20;
  uint64_t v22 = type metadata accessor for SystemGaveOptionsDialogActGenerator();
  uint64_t v32 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v25 = (void *)((char *)v30 - v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a2, v17);
  uint64_t v26 = (uint64_t)v21;
  uint64_t v27 = v30[0];
  sub_1C9B0FCF0(v33, v26, v25);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 1, 1, a4);
  uint64_t v28 = (uint64_t)v31;
  swift_bridgeObjectRetain();
  USOKeyPath.createTask(with:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  sub_1C9B0FDA4(v28, v22, v27, v38);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v28, v37);
  return (*(uint64_t (**)(void *, uint64_t))(v32 + 8))(v25, v22);
}

uint64_t sub_1C97F3A1C()
{
  type metadata accessor for USOKeyPath();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v0();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C97F3B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = *(void *)(type metadata accessor for USOKeyPath() - 8);
  return sub_1C97F36E8(v1[6], (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v3, v4, v5, a1);
}

uint64_t type metadata accessor for DisambiguationPrompt.Response()
{
  return swift_getGenericMetadata();
}

void sub_1C97F3BFC()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v33 = v1;
  OUTLINED_FUNCTION_8();
  uint64_t v3 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_8();
  uint64_t v5 = *(void *)(v4 + 88);
  OUTLINED_FUNCTION_8();
  uint64_t v7 = *(void *)(v6 + 96);
  OUTLINED_FUNCTION_8();
  uint64_t v9 = *(void *)(v8 + 104);
  *(void *)&long long v36 = v3;
  *((void *)&v36 + 1) = v5;
  uint64_t v37 = v7;
  uint64_t v38 = v9;
  type metadata accessor for DisambiguationPrompt.Response();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v10 = sub_1C9BEE788();
  uint64_t v31 = type metadata accessor for Conclude();
  OUTLINED_FUNCTION_0();
  uint64_t v30 = v11;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v29 = (uint64_t)&v28 - v14;
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v15;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = (char *)&v28 - v19;
  OUTLINED_FUNCTION_26_15();
  uint64_t v21 = type metadata accessor for DisambiguationPrompt.State();
  OUTLINED_FUNCTION_22(v21);
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v22, v23);
  uint64_t v25 = (char *)&v28 - v24;
  sub_1C97F2D48();
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v10) == 1)
  {
    uint64_t v28 = v9;
    uint64_t v29 = v3;
    sub_1C95FD654(v0 + 24, (uint64_t)&v34);
    sub_1C95FD654(v0 + 64, (uint64_t)&v35);
    sub_1C9BEC838();
  }
  OUTLINED_FUNCTION_49_4();
  v26();
  OUTLINED_FUNCTION_26_15();
  type metadata accessor for DisambiguationPrompt();
  swift_getWitnessTable();
  ActingFlow.conclude(with:)((uint64_t)v20, v29);
  uint64_t v38 = v31;
  unint64_t v39 = &protocol witness table for Conclude<A>;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  OUTLINED_FUNCTION_11_2();
  v27();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v10);
  sub_1C95FD5D8(&v36, v33);
  OUTLINED_FUNCTION_10();
}

uint64_t type metadata accessor for DisambiguationPrompt.State()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DisambiguationPrompt()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C97F43A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t type metadata accessor for ChoiceResolver()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C97F440C()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_1C97F444C(uint64_t a1, uint64_t a2)
{
  return sub_1C97F4B28(a1, a2, v2);
}

uint64_t sub_1C97F4468(char *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a2 + 80);
  uint64_t v4 = *(void *)(*(void *)a2 + 88);
  uint64_t v5 = *(void *)(*(void *)a2 + 96);
  uint64_t v6 = *(void *)(*(void *)a2 + 104);
  uint64_t v7 = type metadata accessor for DisambiguationPrompt.State();
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v35 = (char *)&v31 - v9;
  v37[0] = v3;
  v37[1] = v4;
  v37[2] = v5;
  v37[3] = v6;
  type metadata accessor for DisambiguationPrompt.Response();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v10 = sub_1C9BEE788();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10, v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  uint64_t v18 = (char *)&v31 - v17;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C9BECF88();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v20(v18, a1, v10);
  uint64_t v21 = sub_1C9BECF78();
  os_log_type_t v22 = sub_1C9BEDC68();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v34 = v20;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v32 = swift_slowAlloc();
    v37[0] = v32;
    uint64_t v33 = a1;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v31 = v24 + 4;
    v34(v15, v18, v10);
    uint64_t v25 = sub_1C9BED5D8();
    uint64_t v36 = sub_1C95FF228(v25, v26, v37);
    a1 = v33;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    _os_log_impl(&dword_1C95F9000, v21, v22, "[DisambiguationPrompt] received response %s)", v24, 0xCu);
    uint64_t v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v27, -1, -1);
    uint64_t v28 = v24;
    uint64_t v20 = v34;
    MEMORY[0x1CB78C440](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }

  uint64_t v29 = (uint64_t)v35;
  v20(v35, a1, v10);
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v10);
  return sub_1C97F2DE8(v29);
}

uint64_t sub_1C97F4828(char *a1)
{
  return sub_1C97F4468(a1, v1);
}

uint64_t sub_1C97F4830(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a2 + 80);
  uint64_t v4 = *(void *)(*(void *)a2 + 88);
  uint64_t v5 = *(void *)(*(void *)a2 + 96);
  uint64_t v6 = *(void *)(*(void *)a2 + 104);
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  uint64_t v7 = type metadata accessor for DisambiguationPrompt.State();
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (uint64_t *)((char *)&v27 - v9);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C9BECF88();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
  id v12 = a1;
  id v13 = a1;
  uint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC88();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = v6;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v30 = v3;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v4;
    uint64_t v19 = (void *)v18;
    uint64_t v28 = v5;
    *(_DWORD *)uint64_t v17 = 138412290;
    id v20 = a1;
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v31 = v21;
    uint64_t v6 = v27;
    uint64_t v5 = v28;
    sub_1C9BEDF68();
    *uint64_t v19 = v21;

    _os_log_impl(&dword_1C95F9000, v14, v15, "[DisambiguationPrompt] received unexpected failure %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
    swift_arrayDestroy();
    os_log_type_t v22 = v19;
    uint64_t v4 = v29;
    MEMORY[0x1CB78C440](v22, -1, -1);
    uint64_t v23 = v17;
    uint64_t v3 = v30;
    MEMORY[0x1CB78C440](v23, -1, -1);
  }
  else
  {
  }
  *uint64_t v10 = a1;
  uint64_t v31 = v3;
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  uint64_t v34 = v6;
  type metadata accessor for DisambiguationPrompt.Response();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v24 = sub_1C9BEE788();
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v24);
  id v25 = a1;
  return sub_1C97F2DE8((uint64_t)v10);
}

uint64_t sub_1C97F4B20(void *a1)
{
  return sub_1C97F4830(a1, v1);
}

uint64_t sub_1C97F4B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v9 = 56;
  *((void *)v9 + 1) = a1;
  *((void *)v9 + 2) = a2;
  *((void *)v9 + 4) = 0;
  *((void *)v9 + 5) = 0;
  *((void *)v9 + 3) = 0;
  memset(v16, 0, sizeof(v16));
  sub_1C97FC27C((uint64_t)v16, (uint64_t)(v9 + 48), &qword_1EBC78700);
  *((void *)v9 + 10) = 0;
  *((void *)v9 + 11) = 0;
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_1C97FC27C((uint64_t)v14, (uint64_t)(v9 + 96), (uint64_t *)&unk_1EBC789D0);
  uint64_t v11 = *(void *)(a3 + 160);
  unint64_t v10 = *(void *)(a3 + 168);
  uint64_t v12 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v12 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v10 = 0;
  }
  type metadata accessor for SiriKitEvent(0);
  *((void *)v9 + 17) = v11;
  *((void *)v9 + 18) = v10;
  *(_OWORD *)(v9 + 152) = 0u;
  *(_OWORD *)(v9 + 168) = 0u;
  v9[184] = 29;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v9, 0);
}

uint64_t sub_1C97F4C7C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  v107 = a3;
  uint64_t v103 = a1;
  uint64_t v104 = a2;
  uint64_t v5 = *(void **)a4;
  uint64_t v6 = *(void *)(*(void *)a4 + 96);
  uint64_t v95 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v94 = (char *)&v92 - v7;
  uint64_t v106 = type metadata accessor for SiriKitEventPayload(0);
  uint64_t v9 = MEMORY[0x1F4188790](v106, v8);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v9, v12);
  uint64_t v15 = (char *)&v92 - v14;
  uint64_t v17 = MEMORY[0x1F4188790](v13, v16);
  uint64_t v19 = (char *)&v92 - v18;
  uint64_t v21 = MEMORY[0x1F4188790](v17, v20);
  uint64_t v97 = (char *)&v92 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21, v23);
  v98 = (char *)&v92 - v25;
  uint64_t v93 = *(void *)(v5[10] - 8);
  MEMORY[0x1F4188790](v24, v26);
  uint64_t v96 = (char *)&v92 - v27;
  uint64_t v28 = v5[11];
  uint64_t v105 = a4;
  uint64_t v29 = v5[13];
  uint64_t v101 = v30;
  *(void *)&long long v108 = v30;
  *((void *)&v108 + 1) = v28;
  uint64_t v99 = v28;
  uint64_t v102 = v6;
  *(void *)&long long v109 = v6;
  *((void *)&v109 + 1) = v29;
  uint64_t v100 = v29;
  uint64_t v31 = type metadata accessor for DisambiguationPrompt.Response();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v31, v33);
  uint64_t v36 = (char *)&v92 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34, v37);
  unint64_t v39 = (char *)&v92 - v38;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v40 = sub_1C9BEE788();
  MEMORY[0x1F4188790](v40, v41);
  uint64_t v43 = (uint64_t *)((char *)&v92 - v42);
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))((char *)&v92 - v42, v107, v40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)&long long v108 = *v43;
    uint64_t v45 = (void *)v108;
    id v46 = (id)v108;
    if (swift_dynamicCast())
    {
      *uint64_t v15 = 5;
      uint64_t v47 = v104;
      *((void *)v15 + 1) = v103;
      *((void *)v15 + 2) = v47;
      *((void *)v15 + 4) = 0;
      *((void *)v15 + 5) = 0;
      *((void *)v15 + 3) = 0;
      long long v111 = 0u;
      long long v112 = 0u;
      sub_1C97FC27C((uint64_t)&v111, (uint64_t)(v15 + 48), &qword_1EBC78700);
      *((void *)v15 + 10) = 0;
      *((void *)v15 + 11) = 0;
      uint64_t v110 = 0;
      long long v108 = 0u;
      long long v109 = 0u;
      sub_1C97FC27C((uint64_t)&v108, (uint64_t)(v15 + 96), (uint64_t *)&unk_1EBC789D0);
      uint64_t v49 = *(void *)(v105 + 160);
      unint64_t v48 = *(void *)(v105 + 168);
      uint64_t v50 = HIBYTE(v48) & 0xF;
      if ((v48 & 0x2000000000000000) == 0) {
        uint64_t v50 = v49 & 0xFFFFFFFFFFFFLL;
      }
      if (v50)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v49 = 0;
        unint64_t v48 = 0;
      }
      type metadata accessor for SiriKitEvent(0);
      *((void *)v15 + 17) = v49;
      *((void *)v15 + 18) = v48;
      *(_OWORD *)(v15 + 152) = 0u;
      *(_OWORD *)(v15 + 168) = 0u;
      v15[184] = 87;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      uint64_t v83 = (uint64_t)v15;
    }
    else
    {
      *uint64_t v11 = 6;
      uint64_t v63 = v104;
      *((void *)v11 + 1) = v103;
      *((void *)v11 + 2) = v63;
      *((void *)v11 + 4) = 0;
      *((void *)v11 + 5) = 0;
      *((void *)v11 + 3) = 0;
      long long v111 = 0u;
      long long v112 = 0u;
      sub_1C97FC27C((uint64_t)&v111, (uint64_t)(v11 + 48), &qword_1EBC78700);
      *((void *)v11 + 10) = 0;
      *((void *)v11 + 11) = 0;
      uint64_t v110 = 0;
      long long v108 = 0u;
      long long v109 = 0u;
      sub_1C97FC27C((uint64_t)&v108, (uint64_t)(v11 + 96), (uint64_t *)&unk_1EBC789D0);
      uint64_t v65 = *(void *)(v105 + 160);
      unint64_t v64 = *(void *)(v105 + 168);
      uint64_t v66 = HIBYTE(v64) & 0xF;
      if ((v64 & 0x2000000000000000) == 0) {
        uint64_t v66 = v65 & 0xFFFFFFFFFFFFLL;
      }
      if (v66)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v65 = 0;
        unint64_t v64 = 0;
      }
      type metadata accessor for SiriKitEvent(0);
      *((void *)v11 + 17) = v65;
      *((void *)v11 + 18) = v64;
      *((void *)v11 + 19) = 0;
      *((void *)v11 + 20) = 0;
      swift_getErrorValue();
      swift_bridgeObjectRetain();
      *((void *)v11 + 21) = sub_1C9BEE6E8();
      *((void *)v11 + 22) = v84;
      v11[184] = 91;
      swift_storeEnumTagMultiPayload();
      uint64_t v83 = (uint64_t)v11;
    }
    uint64_t v85 = SiriKitEvent.__allocating_init(_:builder:)(v83, 0);
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v32 + 32))(v39, v43, v31);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v36, v39, v31);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v52 = v39;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v107 = v39;
        uint64_t v53 = v95;
        uint64_t v54 = v94;
        uint64_t v55 = v102;
        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v36, v102);
        uint64_t v56 = v97;
        *uint64_t v97 = 57;
        uint64_t v57 = v104;
        v56[1] = v103;
        v56[2] = v57;
        v56[4] = 0;
        v56[5] = 0;
        v56[3] = 0;
        v56[9] = v55;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v56 + 6);
        (*(void (**)(uint64_t *, char *, uint64_t))(v53 + 16))(boxed_opaque_existential_0, v54, v55);
        uint64_t v59 = v105;
        swift_bridgeObjectRetain();
        *(void *)&long long v108 = v101;
        *((void *)&v108 + 1) = v99;
        *(void *)&long long v109 = v55;
        *((void *)&v109 + 1) = v100;
        type metadata accessor for DisambiguationPrompt.Choice();
        v56[10] = sub_1C9BEE338();
        v56[11] = 0;
        uint64_t v110 = 0;
        long long v108 = 0u;
        long long v109 = 0u;
        sub_1C97FC27C((uint64_t)&v108, (uint64_t)(v56 + 12), (uint64_t *)&unk_1EBC789D0);
        uint64_t v61 = *(void *)(v59 + 160);
        unint64_t v60 = *(void *)(v59 + 168);
        uint64_t v62 = HIBYTE(v60) & 0xF;
        if ((v60 & 0x2000000000000000) == 0) {
          uint64_t v62 = v61 & 0xFFFFFFFFFFFFLL;
        }
        if (v62)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v61 = 0;
          unint64_t v60 = 0;
        }
        uint64_t v52 = v107;
        type metadata accessor for SiriKitEvent(0);
        uint64_t v86 = (uint64_t)v97;
        *((void *)v97 + 17) = v61;
        *(void *)(v86 + 144) = v60;
        *(void *)(v86 + 152) = 0;
        *(void *)(v86 + 160) = 0;
        *(void *)&long long v111 = 0;
        *(void *)(v86 + 168) = sub_1C9BEE5A8();
        *(void *)(v86 + 176) = v87;
        *(unsigned char *)(v86 + 184) = 125;
        swift_storeEnumTagMultiPayload();
        uint64_t v85 = SiriKitEvent.__allocating_init(_:builder:)(v86, 0);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
      }
      else
      {
        *uint64_t v19 = 57;
        uint64_t v78 = v104;
        *((void *)v19 + 1) = v103;
        *((void *)v19 + 2) = v78;
        *(_OWORD *)(v19 + 24) = 0u;
        *(_OWORD *)(v19 + 40) = 0u;
        *(_OWORD *)(v19 + 56) = 0u;
        *((void *)v19 + 9) = 0;
        uint64_t v79 = v105;
        swift_bridgeObjectRetain();
        *(void *)&long long v108 = v101;
        *((void *)&v108 + 1) = v99;
        *(void *)&long long v109 = v102;
        *((void *)&v109 + 1) = v100;
        type metadata accessor for DisambiguationPrompt.Choice();
        *((void *)v19 + 10) = sub_1C9BEE338();
        *((void *)v19 + 11) = 0;
        uint64_t v110 = 0;
        long long v108 = 0u;
        long long v109 = 0u;
        sub_1C97FC27C((uint64_t)&v108, (uint64_t)(v19 + 96), (uint64_t *)&unk_1EBC789D0);
        uint64_t v81 = *(void *)(v79 + 160);
        unint64_t v80 = *(void *)(v79 + 168);
        uint64_t v82 = HIBYTE(v80) & 0xF;
        if ((v80 & 0x2000000000000000) == 0) {
          uint64_t v82 = v81 & 0xFFFFFFFFFFFFLL;
        }
        if (v82)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v81 = 0;
          unint64_t v80 = 0;
        }
        type metadata accessor for SiriKitEvent(0);
        *((void *)v19 + 17) = v81;
        *((void *)v19 + 18) = v80;
        *((void *)v19 + 19) = 0;
        *((void *)v19 + 20) = 0;
        *(void *)&long long v111 = 0;
        *((void *)v19 + 21) = sub_1C9BEE5A8();
        *((void *)v19 + 22) = v90;
        v19[184] = 125;
        swift_storeEnumTagMultiPayload();
        uint64_t v85 = SiriKitEvent.__allocating_init(_:builder:)((uint64_t)v19, 0);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v52, v31);
    }
    else
    {
      v107 = (char *)v31;
      uint64_t v67 = v101;
      uint64_t v68 = *(void *)&v36[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v69 = v93;
      uint64_t v70 = v96;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v96, v36, v67);
      uint64_t v71 = v98;
      char *v98 = 57;
      uint64_t v72 = v104;
      v71[1] = v103;
      v71[2] = v72;
      v71[4] = 0;
      v71[5] = 0;
      v71[3] = 0;
      v71[9] = v67;
      char v73 = __swift_allocate_boxed_opaque_existential_0(v71 + 6);
      (*(void (**)(uint64_t *, char *, uint64_t))(v69 + 16))(v73, v70, v67);
      uint64_t v74 = v105;
      swift_bridgeObjectRetain();
      *(void *)&long long v108 = v67;
      *((void *)&v108 + 1) = v99;
      *(void *)&long long v109 = v102;
      *((void *)&v109 + 1) = v100;
      type metadata accessor for DisambiguationPrompt.Choice();
      v71[10] = sub_1C9BEE338();
      v71[11] = 0;
      uint64_t v110 = 0;
      long long v108 = 0u;
      long long v109 = 0u;
      sub_1C97FC27C((uint64_t)&v108, (uint64_t)(v71 + 12), (uint64_t *)&unk_1EBC789D0);
      uint64_t v76 = *(void *)(v74 + 160);
      unint64_t v75 = *(void *)(v74 + 168);
      uint64_t v77 = HIBYTE(v75) & 0xF;
      if ((v75 & 0x2000000000000000) == 0) {
        uint64_t v77 = v76 & 0xFFFFFFFFFFFFLL;
      }
      if (v77)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v76 = 0;
        unint64_t v75 = 0;
      }
      type metadata accessor for SiriKitEvent(0);
      uint64_t v88 = (uint64_t)v98;
      *((void *)v98 + 17) = v76;
      *(void *)(v88 + 144) = v75;
      *(void *)(v88 + 152) = 0;
      *(void *)(v88 + 160) = 0;
      *(void *)&long long v111 = v68;
      *(void *)(v88 + 168) = sub_1C9BEE5A8();
      *(void *)(v88 + 176) = v89;
      *(unsigned char *)(v88 + 184) = 125;
      swift_storeEnumTagMultiPayload();
      uint64_t v85 = SiriKitEvent.__allocating_init(_:builder:)(v88, 0);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v96, v67);
      (*(void (**)(char *, char *))(v32 + 8))(v52, v107);
    }
  }
  return v85;
}

uint64_t sub_1C97F57A4(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_1C97F4C7C(a1, a2, a3, v3);
}

uint64_t sub_1C97F57AC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v35 = a1;
  uint64_t v7 = type metadata accessor for SiriKitEventPayload(0);
  uint64_t v9 = MEMORY[0x1F4188790](v7, v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  uint64_t v14 = (char *)&v32 - v13;
  if (qword_1EBC79430 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C9BECF88();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A4C0);
  swift_bridgeObjectRetain();
  id v16 = a3;
  swift_bridgeObjectRetain();
  id v17 = a3;
  uint64_t v18 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC78();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(void *)&v36[0] = v32;
    *(_DWORD *)uint64_t v20 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)&v38[0] = sub_1C95FF228(v35, a2, (uint64_t *)v36);
    uint64_t v33 = a4;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    unint64_t v34 = a2;
    swift_getErrorValue();
    uint64_t v21 = sub_1C9BEE6E8();
    *(void *)&v38[0] = sub_1C95FF228(v21, v22, (uint64_t *)v36);
    a4 = v33;
    a2 = v34;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v18, v19, "[DisambiguationPrompt#instrumentOnFailure(%s)]: %s", (uint8_t *)v20, 0x16u);
    uint64_t v23 = v32;
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v23, -1, -1);
    MEMORY[0x1CB78C440](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  *(void *)&v36[0] = a3;
  id v24 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  if (swift_dynamicCast())
  {
    type metadata accessor for SiriKitEvent(0);
    *uint64_t v14 = 5;
    *((void *)v14 + 1) = v35;
    *((void *)v14 + 2) = a2;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_OWORD *)(v14 + 56) = 0u;
    *(_OWORD *)(v14 + 72) = 0u;
    *(_OWORD *)(v14 + 88) = 0u;
    *(_OWORD *)(v14 + 104) = 0u;
    *(_OWORD *)(v14 + 120) = 0u;
    uint64_t v25 = *(void *)(a4 + 168);
    *((void *)v14 + 17) = *(void *)(a4 + 160);
    *((void *)v14 + 18) = v25;
    *(_OWORD *)(v14 + 152) = 0u;
    *(_OWORD *)(v14 + 168) = 0u;
    v14[184] = 87;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = (uint64_t)v14;
  }
  else
  {
    *uint64_t v11 = 6;
    *((void *)v11 + 1) = v35;
    *((void *)v11 + 2) = a2;
    *((void *)v11 + 4) = 0;
    *((void *)v11 + 5) = 0;
    *((void *)v11 + 3) = 0;
    memset(v38, 0, 32);
    sub_1C97FC27C((uint64_t)v38, (uint64_t)(v11 + 48), &qword_1EBC78700);
    *((void *)v11 + 10) = 0;
    *((void *)v11 + 11) = 0;
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
    sub_1C97FC27C((uint64_t)v36, (uint64_t)(v11 + 96), (uint64_t *)&unk_1EBC789D0);
    uint64_t v28 = *(void *)(a4 + 160);
    unint64_t v27 = *(void *)(a4 + 168);
    uint64_t v29 = HIBYTE(v27) & 0xF;
    if ((v27 & 0x2000000000000000) == 0) {
      uint64_t v29 = v28 & 0xFFFFFFFFFFFFLL;
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v27 = 0;
    }
    type metadata accessor for SiriKitEvent(0);
    *((void *)v11 + 17) = v28;
    *((void *)v11 + 18) = v27;
    *((void *)v11 + 19) = 0;
    *((void *)v11 + 20) = 0;
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    *((void *)v11 + 21) = sub_1C9BEE6E8();
    *((void *)v11 + 22) = v30;
    v11[184] = 91;
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (uint64_t)v11;
  }
  return SiriKitEvent.__allocating_init(_:builder:)(v26, 0);
}

uint64_t sub_1C97F5C24(uint64_t a1, unint64_t a2, void *a3)
{
  return sub_1C97F57AC(a1, a2, a3, v3);
}

void DisambiguationPrompt.Response.description.getter()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v4 = *(void *)(v3 + 32);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v3, v0);
  OUTLINED_FUNCTION_221();
  uint64_t v7 = *(void *)(v6 + 16);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_16_21();
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)v25 - v14;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v16, v17);
  os_log_type_t v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v20 + 16))(v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      OUTLINED_FUNCTION_49_4();
      v22();
      unint64_t v26 = 0;
      unint64_t v27 = 0xE000000000000000;
      sub_1C9BEE188();
      sub_1C9BED6B8();
      sub_1C9BED6B8();
      sub_1C9BEE5E8();
      sub_1C9BED6B8();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
    }
  }
  else
  {
    uint64_t v23 = *(void *)&v19[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    OUTLINED_FUNCTION_49_4();
    v24();
    unint64_t v26 = 0;
    unint64_t v27 = 0xE000000000000000;
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    unint64_t v26 = 0xD000000000000032;
    unint64_t v27 = 0x80000001C9C1D240;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v2, v15, v7);
    sub_1C9BED5D8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
    v25[1] = v23;
    sub_1C9BEE5A8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
  }
  OUTLINED_FUNCTION_10();
}

uint64_t DisambiguationPrompt.deinit()
{
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_bridgeObjectRelease();
  type metadata accessor for DisambiguationPrompt.State();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v5(v1, v2, v3, v4);
  return v0;
}

uint64_t DisambiguationPrompt.__deallocating_deinit()
{
  DisambiguationPrompt.deinit();
  OUTLINED_FUNCTION_4_0();

  return swift_deallocClassInstance();
}

void sub_1C97F6078()
{
}

uint64_t sub_1C97F609C()
{
  uint64_t result = type metadata accessor for DisambiguationPrompt.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DisambiguationPrompt(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DisambiguationPrompt);
}

uint64_t dispatch thunk of DisambiguationPrompt.__allocating_init(choices:usoKeyPath:responseBundleProducer:itemToEntityMapper:responseFactory:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DisambiguationPrompt.action.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1C97F61BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1C97F61C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      v3[5] = *(void *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *sub_1C97F62A8(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 32);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  if (v9 + 1 > 0x18 || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x1000F8) != 0)
  {
    *(void *)__dst = *(void *)__src;
    sub_1C9BEC838();
  }
  unsigned int v11 = __src[v9];
  unsigned int v12 = v11 - 2;
  if (v11 >= 2)
  {
    if (v9 <= 3) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *__src;
        goto LABEL_18;
      case 2:
        int v14 = *(unsigned __int16 *)__src;
        goto LABEL_18;
      case 3:
        int v14 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_18;
      case 4:
        int v14 = *(_DWORD *)__src;
LABEL_18:
        int v15 = (v14 | (v12 << (8 * v9))) + 2;
        unsigned int v11 = v14 + 2;
        if (v9 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v8 + 16))(__dst, __src, v7);
    __dst[v9] = 1;
  }
  else if (v11)
  {
    memcpy(__dst, __src, v9 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v9] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C97F64D8(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 32) - 8) + 64);
  if (v3 <= ((*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v4 = result[v3];
  unsigned int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *result;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)result;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 2;
        unsigned int v4 = v7 + 2;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4)
  {
    if (v4 != 1) {
      return result;
    }
    uint64_t v2 = *(void *)(*(void *)(a2 + 32) - 8);
  }
  return (unsigned __int8 *)(*(uint64_t (**)(void))(v2 + 8))();
}

unsigned char *sub_1C97F6634(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 32);
  if (*(void *)(*(void *)(v6 - 8) + 64) <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v7 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(__dst, __src, v6);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v5 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C97F681C(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v10 = *(void *)(v9 + 64);
  }
  unsigned int v11 = __dst[v10];
  char v12 = 8 * v10;
  unsigned int v13 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v14 = v10;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__dst;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)__dst;
LABEL_14:
        int v16 = (v15 | (v13 << v12)) + 2;
        unsigned int v11 = v15 + 2;
        if (v10 < 4) {
          unsigned int v11 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (!v11)
  {
    uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v18 = *(void *)(a3 + 16);
    goto LABEL_20;
  }
  if (v11 == 1)
  {
    uint64_t v17 = *(void *)(*(void *)(a3 + 32) - 8);
    uint64_t v18 = *(void *)(a3 + 32);
LABEL_20:
    (*(void (**)(unsigned __int8 *, uint64_t))(v17 + 8))(__dst, v18);
  }
  unsigned int v19 = __src[v10];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v21 = v10;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *__src;
        goto LABEL_30;
      case 2:
        int v22 = *(unsigned __int16 *)__src;
        goto LABEL_30;
      case 3:
        int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_30;
      case 4:
        int v22 = *(_DWORD *)__src;
LABEL_30:
        int v23 = (v22 | (v20 << v12)) + 2;
        unsigned int v19 = v22 + 2;
        if (v10 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(__dst, __src, v8);
    __dst[v10] = 1;
  }
  else if (v19)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
    *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v10] = 0;
  }
  return __dst;
}

unsigned char *sub_1C97F6AE0(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 32);
  if (*(void *)(*(void *)(v6 - 8) + 64) <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v7 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = __src[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(__dst, __src, v6);
    __dst[v7] = 1;
  }
  else if (v8)
  {
    memcpy(__dst, __src, v7 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v5 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v7] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C97F6CC8(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v10 = *(void *)(v9 + 64);
  }
  unsigned int v11 = __dst[v10];
  char v12 = 8 * v10;
  unsigned int v13 = v11 - 2;
  if (v11 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v14 = v10;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *__dst;
        goto LABEL_14;
      case 2:
        int v15 = *(unsigned __int16 *)__dst;
        goto LABEL_14;
      case 3:
        int v15 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_14;
      case 4:
        int v15 = *(_DWORD *)__dst;
LABEL_14:
        int v16 = (v15 | (v13 << v12)) + 2;
        unsigned int v11 = v15 + 2;
        if (v10 < 4) {
          unsigned int v11 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (!v11)
  {
    uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v18 = *(void *)(a3 + 16);
    goto LABEL_20;
  }
  if (v11 == 1)
  {
    uint64_t v17 = *(void *)(*(void *)(a3 + 32) - 8);
    uint64_t v18 = *(void *)(a3 + 32);
LABEL_20:
    (*(void (**)(unsigned __int8 *, uint64_t))(v17 + 8))(__dst, v18);
  }
  unsigned int v19 = __src[v10];
  unsigned int v20 = v19 - 2;
  if (v19 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v21 = v10;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *__src;
        goto LABEL_30;
      case 2:
        int v22 = *(unsigned __int16 *)__src;
        goto LABEL_30;
      case 3:
        int v22 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_30;
      case 4:
        int v22 = *(_DWORD *)__src;
LABEL_30:
        int v23 = (v22 | (v20 << v12)) + 2;
        unsigned int v19 = v22 + 2;
        if (v10 < 4) {
          unsigned int v19 = v23;
        }
        break;
      default:
        break;
    }
  }
  if (v19 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(__dst, __src, v8);
    __dst[v10] = 1;
  }
  else if (v19)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v10] = 0;
  }
  return __dst;
}

uint64_t sub_1C97F6F8C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 32) - 8) + 64);
  if (v3 <= ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_1C97F70E0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFE)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v9 = a2 - 254;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C97F72C4);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C97F72EC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 32) - 8) + 64);
  if (v2 <= ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1C97F73C4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 32) - 8) + 64) <= ((*(void *)(*(void *)(*(void *)(a3 + 16)
                                                                                              - 8)
                                                                                  + 64)
                                                                      + 7) & 0xFFFFFFFFFFFFFFF8)
                                                                    + 8)
    size_t v4 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 32) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C97F74BC()
{
  return swift_initClassMetadata2();
}

void sub_1C97F7500()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v72 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v76 = v6;
  uint64_t v7 = v2[3];
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_0();
  uint64_t v66 = v9;
  uint64_t v67 = v8;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_32_17(v12, v61[0]);
  OUTLINED_FUNCTION_0();
  uint64_t v65 = v13;
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_33_0();
  uint64_t v64 = v16;
  uint64_t v18 = v3[4];
  uint64_t v17 = v3[5];
  char v73 = (char *)v3[2];
  uint64_t v74 = v18;
  uint64_t v77 = v73;
  uint64_t v78 = v18;
  uint64_t v79 = v7;
  uint64_t v80 = v17;
  uint64_t v75 = v17;
  type metadata accessor for DisambiguationPrompt.Choice();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_1C9BEDEE8();
  OUTLINED_FUNCTION_0();
  uint64_t v69 = v20;
  MEMORY[0x1F4188790](v21, v22);
  OUTLINED_FUNCTION_16_21();
  MEMORY[0x1F4188790](v23, v24);
  unint64_t v26 = (char *)v61 - v25;
  OUTLINED_FUNCTION_0();
  uint64_t v70 = v27;
  MEMORY[0x1F4188790](v28, v29);
  OUTLINED_FUNCTION_68_0();
  uint64_t v32 = v30 - v31;
  MEMORY[0x1F4188790](v33, v34);
  type metadata accessor for Input(0);
  if (sub_1C9939A54())
  {
    sub_1C97962E8();
    uint64_t v35 = swift_allocError();
    uint64_t v36 = v76;
    *uint64_t v76 = v35;
    uint64_t v77 = v73;
    uint64_t v78 = v74;
    uint64_t v79 = v7;
    uint64_t v80 = v75;
    uint64_t v37 = type metadata accessor for DisambiguationPrompt.Response();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
    OUTLINED_FUNCTION_31_15();
    OUTLINED_FUNCTION_29_13();
LABEL_3:
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = (uint64_t)v36;
LABEL_11:
    uint64_t v50 = 0;
    uint64_t v51 = 1;
    uint64_t v52 = v37;
    goto LABEL_12;
  }
  v61[1] = v32;
  uint64_t v62 = v1;
  uint64_t v63 = v7;
  unint64_t v39 = v76;
  sub_1C97F7A54((uint64_t)v3, (uint64_t)v26);
  uint64_t v40 = TupleTypeMetadata2;
  if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, TupleTypeMetadata2) != 1)
  {
    uint64_t v37 = *(void *)&v26[*(int *)(v40 + 48)];
    OUTLINED_FUNCTION_49_4();
    v53();
    uint64_t v54 = *(int *)(OUTLINED_FUNCTION_20_22() + 48);
    OUTLINED_FUNCTION_112();
    OUTLINED_FUNCTION_8_16();
    v55();
LABEL_10:
    OUTLINED_FUNCTION_10_25();
    v58();
    *(uint64_t *)((char *)v39 + v54) = v37;
    uint64_t v77 = v26;
    uint64_t v78 = v74;
    uint64_t v79 = v63;
    uint64_t v80 = v75;
    type metadata accessor for DisambiguationPrompt.Response();
    OUTLINED_FUNCTION_28_12();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
    OUTLINED_FUNCTION_31_15();
    OUTLINED_FUNCTION_28_12();
    uint64_t v38 = (uint64_t)v39;
    goto LABEL_11;
  }
  uint64_t v41 = *(void (**)(void))(v69 + 8);
  unint64_t v26 = (char *)v19;
  OUTLINED_FUNCTION_10_25();
  v41();
  uint64_t v42 = v62;
  sub_1C97F8060(v5, (uint64_t)v3, v62);
  if (__swift_getEnumTagSinglePayload(v42, 1, v40) != 1)
  {
    uint64_t v37 = *(void *)(v42 + *(int *)(v40 + 48));
    OUTLINED_FUNCTION_49_4();
    v56();
    uint64_t v54 = *(int *)(OUTLINED_FUNCTION_20_22() + 48);
    OUTLINED_FUNCTION_112();
    OUTLINED_FUNCTION_8_16();
    v57();
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_10_25();
  v41();
  uint64_t v43 = v68;
  sub_1C97F86A4(v5, (uint64_t)v3, v68);
  uint64_t v44 = v63;
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v43, 1, v63);
  uint64_t v36 = v39;
  uint64_t v47 = v74;
  uint64_t v46 = v75;
  unint64_t v48 = v73;
  if (EnumTagSinglePayload != 1)
  {
    uint64_t v59 = v64;
    unint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32);
    v60(v64, v43, v44);
    v60((uint64_t)v36, v59, v44);
    uint64_t v77 = v48;
    uint64_t v78 = v47;
    uint64_t v79 = v44;
    uint64_t v80 = v46;
    type metadata accessor for DisambiguationPrompt.Response();
    OUTLINED_FUNCTION_29_13();
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
    uint64_t v37 = OUTLINED_FUNCTION_31_15();
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_37();
  v49();
  uint64_t v77 = v48;
  uint64_t v78 = v47;
  uint64_t v79 = v44;
  uint64_t v80 = v46;
  type metadata accessor for DisambiguationPrompt.Response();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_31_15();
  uint64_t v38 = OUTLINED_FUNCTION_35_13();
LABEL_12:
  __swift_storeEnumTagSinglePayload(v38, v50, v51, v52);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C97F7A54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  type metadata accessor for Input(0);
  uint64_t v6 = sub_1C97F8820();
  if (v7)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C9BECF88();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBC7A520);
    uint64_t v11 = sub_1C9BECF78();
    os_log_type_t v12 = sub_1C9BEDC78();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1C95F9000, v11, v12, "ChoiceResolver: No positional reference found in parse", v13, 2u);
      MEMORY[0x1CB78C440](v13, -1, -1);
    }

    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v48 = *(void *)(a1 + 16);
    int8x16_t v49 = vextq_s8(*(int8x16_t *)(a1 + 24), *(int8x16_t *)(a1 + 24), 8uLL);
    uint64_t v50 = v14;
    type metadata accessor for DisambiguationPrompt.Choice();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v16 = a2;
    goto LABEL_23;
  }
  uint64_t v8 = v6;
  if (v6 < 0)
  {
    uint64_t v17 = *v3;
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v48 = *(void *)(a1 + 16);
    int8x16_t v49 = vextq_s8(*(int8x16_t *)(a1 + 24), *(int8x16_t *)(a1 + 24), 8uLL);
    uint64_t v50 = v18;
    uint64_t v19 = type metadata accessor for DisambiguationPrompt.Choice();
    uint64_t v20 = MEMORY[0x1CB78AB10](v17, v19);
    uint64_t v9 = v20 + v8;
    if (__OFADD__(v20, v8))
    {
      __break(1u);
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v9 = v6 - 1;
  }
  uint64_t v51 = v9;
  uint64_t v21 = *(void *)(a1 - 8);
  uint64_t v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v21 + 16);
  v22(&v48, v3, a1);
  if (v9 < 0)
  {
    unint64_t v26 = *(void (**)(uint64_t *, uint64_t))(v21 + 8);
    v26(&v48, a1);
    goto LABEL_17;
  }
  uint64_t v23 = v48;
  uint64_t v24 = type metadata accessor for DisambiguationPrompt.Choice();
  uint64_t v25 = MEMORY[0x1CB78AB10](v23, v24);
  unint64_t v26 = *(void (**)(uint64_t *, uint64_t))(v21 + 8);
  v26(&v48, a1);
  if (v9 >= v25)
  {
LABEL_17:
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v47 = a2;
    uint64_t v35 = sub_1C9BECF88();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EBC7A520);
    v22(&v48, v3, a1);
    uint64_t v36 = sub_1C9BECF78();
    os_log_type_t v37 = sub_1C9BEDC88();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 134218240;
      swift_beginAccess();
      sub_1C9BEDF68();
      *(_WORD *)(v38 + 12) = 2048;
      uint64_t v39 = v48;
      os_log_type_t type = v37;
      uint64_t v41 = *(void *)(a1 + 16);
      uint64_t v40 = *(void *)(a1 + 24);
      uint64_t v43 = *(void *)(a1 + 32);
      uint64_t v42 = *(void *)(a1 + 40);
      uint64_t v44 = type metadata accessor for DisambiguationPrompt.Choice();
      MEMORY[0x1CB78AB10](v39, v44);
      v26(&v48, a1);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v36, type, "Referenced list index (%ld) outside of choice range (count: %ld", (uint8_t *)v38, 0x16u);
      MEMORY[0x1CB78C440](v38, -1, -1);
    }
    else
    {
      v26(&v48, a1);

      uint64_t v41 = *(void *)(a1 + 16);
      uint64_t v40 = *(void *)(a1 + 24);
      uint64_t v43 = *(void *)(a1 + 32);
      uint64_t v42 = *(void *)(a1 + 40);
    }
    uint64_t v48 = v41;
    v49.i64[0] = v43;
    v49.i64[1] = v40;
    uint64_t v50 = v42;
    type metadata accessor for DisambiguationPrompt.Choice();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v16 = v47;
LABEL_23:
    uint64_t v34 = 1;
    return __swift_storeEnumTagSinglePayload(v16, v34, 1, TupleTypeMetadata2);
  }
  if (qword_1EBC7A3B8 != -1) {
LABEL_26:
  }
    swift_once();
  uint64_t v27 = sub_1C9BECF88();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBC7A520);
  uint64_t v28 = sub_1C9BECF78();
  os_log_type_t v29 = sub_1C9BEDC78();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 134217984;
    swift_beginAccess();
    uint64_t v48 = v51;
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v28, v29, "ChoiceResolver: Found positional reference in parse. Index: %ld", v30, 0xCu);
    MEMORY[0x1CB78C440](v30, -1, -1);
  }

  uint64_t v31 = swift_getTupleTypeMetadata2();
  uint64_t v32 = *(int *)(v31 + 48);
  swift_beginAccess();
  uint64_t v33 = v51;
  sub_1C9BED9D8();
  *(void *)(a2 + v32) = v33;
  uint64_t v16 = a2;
  uint64_t v34 = 0;
  TupleTypeMetadata2 = v31;
  return __swift_storeEnumTagSinglePayload(v16, v34, 1, TupleTypeMetadata2);
}

uint64_t sub_1C97F8060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Parse(0);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (void *)((char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Input(0);
  sub_1C97D1F40(a1 + *(int *)(v12 + 20), (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C97D1FA4((uint64_t)v11, (void (*)(void))type metadata accessor for Parse);
    goto LABEL_18;
  }
  uint64_t v13 = *v11;
  uint64_t v14 = v11[1];
  uint64_t v15 = v11[2];
  if (v13 == 0xD00000000000002ELL && v14 == 0x80000001C9C1D2C0 || (sub_1C9BEE618() & 1) != 0)
  {
    if (v15)
    {
      sub_1C9606B08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v54[1] + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v16 = v51;
          uint64_t v17 = *(void *)(a2 - 8);
          uint64_t v18 = *(void (**)(_OWORD *, uint64_t, uint64_t))(v17 + 16);
          v18(v54, v4, a2);
          if (v16 < 0)
          {
            uint64_t v23 = *(void (**)(_OWORD *, uint64_t))(v17 + 8);
            v23(v54, a2);
          }
          else
          {
            uint64_t v19 = *(void *)&v54[0];
            uint64_t v20 = *(void *)(a2 + 40);
            uint64_t v51 = *(void *)(a2 + 16);
            int8x16_t v52 = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
            uint64_t v53 = v20;
            uint64_t v21 = type metadata accessor for DisambiguationPrompt.Choice();
            uint64_t v22 = MEMORY[0x1CB78AB10](v19, v21);
            uint64_t v23 = *(void (**)(_OWORD *, uint64_t))(v17 + 8);
            v23(v54, a2);
            if (v16 < v22)
            {
              if (qword_1EBC7A3B8 != -1) {
                swift_once();
              }
              uint64_t v24 = sub_1C9BECF88();
              __swift_project_value_buffer(v24, (uint64_t)qword_1EBC7A520);
              uint64_t v25 = sub_1C9BECF78();
              os_log_type_t v26 = sub_1C9BEDC78();
              if (os_log_type_enabled(v25, v26))
              {
                uint64_t v27 = (uint8_t *)swift_slowAlloc();
                *(_DWORD *)uint64_t v27 = 134217984;
                *(void *)&v54[0] = v16;
                sub_1C9BEDF68();
                _os_log_impl(&dword_1C95F9000, v25, v26, "#interpretInputAsDirectChoice ChoiceResolver: Found direct invocation in parse. Index: %ld", v27, 0xCu);
                MEMORY[0x1CB78C440](v27, -1, -1);
              }

              TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
              uint64_t v29 = *(int *)(TupleTypeMetadata2 + 48);
              sub_1C9BED9D8();
              *(void *)(a3 + v29) = v16;
              uint64_t v30 = a3;
              uint64_t v31 = 0;
              uint64_t v32 = TupleTypeMetadata2;
              return __swift_storeEnumTagSinglePayload(v30, v31, 1, v32);
            }
          }
          if (qword_1EBC7A3B8 != -1) {
            swift_once();
          }
          uint64_t v37 = sub_1C9BECF88();
          __swift_project_value_buffer(v37, (uint64_t)qword_1EBC7A520);
          v18(v54, v4, a2);
          uint64_t v38 = sub_1C9BECF78();
          os_log_type_t v39 = sub_1C9BEDC88();
          if (os_log_type_enabled(v38, v39))
          {
            uint64_t v40 = swift_slowAlloc();
            *(_DWORD *)uint64_t v40 = 134218240;
            uint64_t v51 = v16;
            sub_1C9BEDF68();
            *(_WORD *)(v40 + 12) = 2048;
            int8x16_t v49 = v23;
            uint64_t v50 = v40 + 14;
            uint64_t v41 = *(void *)&v54[0];
            uint64_t v43 = *(void *)(a2 + 16);
            uint64_t v42 = *(void *)(a2 + 24);
            v48[1] = v17;
            uint64_t v44 = *(void *)(a2 + 32);
            uint64_t v45 = *(void *)(a2 + 40);
            uint64_t v51 = v43;
            v52.i64[0] = v44;
            v52.i64[1] = v42;
            uint64_t v53 = v45;
            uint64_t v46 = type metadata accessor for DisambiguationPrompt.Choice();
            uint64_t v47 = MEMORY[0x1CB78AB10](v41, v46);
            v49(v54, a2);
            *(void *)&v54[0] = v47;
            sub_1C9BEDF68();
            _os_log_impl(&dword_1C95F9000, v38, v39, "#interpretInputAsDirectChoice Referenced list index (%ld) outside of choice range (count: %ld", (uint8_t *)v40, 0x16u);
            MEMORY[0x1CB78C440](v40, -1, -1);
          }
          else
          {
            v23(v54, a2);

            uint64_t v43 = *(void *)(a2 + 16);
            uint64_t v42 = *(void *)(a2 + 24);
            uint64_t v44 = *(void *)(a2 + 32);
            uint64_t v45 = *(void *)(a2 + 40);
          }
          *(void *)&v54[0] = v43;
          *((void *)&v54[0] + 1) = v44;
          *(void *)&v54[1] = v42;
          *((void *)&v54[1] + 1) = v45;
LABEL_19:
          type metadata accessor for DisambiguationPrompt.Choice();
          uint64_t v32 = swift_getTupleTypeMetadata2();
          uint64_t v30 = a3;
          uint64_t v31 = 1;
          return __swift_storeEnumTagSinglePayload(v30, v31, 1, v32);
        }
LABEL_18:
        uint64_t v33 = *(void *)(a2 + 40);
        *(void *)&v54[0] = *(void *)(a2 + 16);
        *(int8x16_t *)((char *)v54 + 8) = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
        *((void *)&v54[1] + 1) = v33;
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      memset(v54, 0, 32);
    }
    sub_1C95FE81C((uint64_t)v54, &qword_1EBC78700);
    goto LABEL_18;
  }
  uint64_t v35 = *(void *)(a2 + 40);
  *(void *)&v54[0] = *(void *)(a2 + 16);
  *(int8x16_t *)((char *)v54 + 8) = vextq_s8(*(int8x16_t *)(a2 + 24), *(int8x16_t *)(a2 + 24), 8uLL);
  *((void *)&v54[1] + 1) = v35;
  type metadata accessor for DisambiguationPrompt.Choice();
  uint64_t v36 = swift_getTupleTypeMetadata2();
  __swift_storeEnumTagSinglePayload(a3, 1, 1, v36);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C97F86A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Interpretable();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v3[4];
  uint64_t v13 = v3[5];
  __swift_project_boxed_opaque_existential_1(v3 + 1, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a1, v12, v13);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    uint64_t v14 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a3, v11, v6);
    uint64_t v14 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a3, v14, 1, v6);
}

uint64_t sub_1C97F8820()
{
  sub_1C97F8C24();
  if (v0) {
    sub_1C9BEC838();
  }
  return 0;
}

void sub_1C97F8C24()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v0;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79450);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_15_21();
  uint64_t v7 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_2_0();
  uint64_t v74 = v12;
  uint64_t v15 = MEMORY[0x1F4188790](v13, v14);
  uint64_t v75 = (char *)&v71 - v16;
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v71 - v18;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v20, v21);
  OUTLINED_FUNCTION_68_0();
  uint64_t v24 = v22 - v23;
  uint64_t v27 = MEMORY[0x1F4188790](v25, v26);
  uint64_t v29 = (char *)&v71 - v28;
  MEMORY[0x1F4188790](v27, v30);
  uint64_t v32 = (char *)&v71 - v31;
  uint64_t v33 = type metadata accessor for USOParse();
  uint64_t v34 = OUTLINED_FUNCTION_22(v33);
  MEMORY[0x1F4188790](v34, v35);
  OUTLINED_FUNCTION_221();
  sub_1C97D1F40(v3, (uint64_t)v32);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_1C97D1FA4((uint64_t)v32, (void (*)(void))type metadata accessor for Parse);
    goto LABEL_5;
  }
  sub_1C9612BD8((uint64_t)v32, v2);
  uint64_t v36 = sub_1C9BEAEC8();
  sub_1C9612ECC(v36);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v1, 1, v7) == 1)
  {
    sub_1C97D1FA4(v2, (void (*)(void))type metadata accessor for USOParse);
    sub_1C95FE81C(v1, &qword_1EBC79450);
LABEL_5:
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_1C9BECF88();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EBC7A520);
    sub_1C97D1F40(v3, (uint64_t)v29);
    uint64_t v38 = sub_1C9BECF78();
    os_log_type_t v39 = sub_1C9BEDC88();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v76 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v40 = 136315138;
      sub_1C97D1F40((uint64_t)v29, v24);
      uint64_t v41 = sub_1C9BED5D8();
      uint64_t v43 = sub_1C95FF228(v41, v42, &v76);
      OUTLINED_FUNCTION_62_3(v43);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C97D1FA4((uint64_t)v29, (void (*)(void))type metadata accessor for Parse);
      _os_log_impl(&dword_1C95F9000, v38, v39, "Cannot extract task: USO parse has no UDAs. %s", v40, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C97D1FA4((uint64_t)v29, (void (*)(void))type metadata accessor for Parse);
    }

    goto LABEL_24;
  }
  uint64_t v44 = v7;
  uint64_t v45 = v9;
  uint64_t v46 = v19;
  uint64_t v47 = v44;
  OUTLINED_FUNCTION_49_4();
  v48();
  if ((sub_1C9BEAF78() & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_1C9BECF88();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EBC7A520);
    unint64_t v60 = sub_1C9BECF78();
    os_log_type_t v61 = sub_1C9BEDC88();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_1C95F9000, v60, v61, "User dialog act does not have a user stated task", v62, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v63 = OUTLINED_FUNCTION_19_25();
    v64(v63);
    goto LABEL_23;
  }
  unint64_t v49 = sub_1C9BEB238();
  unint64_t v66 = v49;
  uint64_t v67 = v75;
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v70) {
      goto LABEL_27;
    }
    goto LABEL_30;
  }
  if (!*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    swift_bridgeObjectRelease();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1C9BECF88();
    __swift_project_value_buffer(v50, (uint64_t)qword_1EBC7A520);
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v51(v67, v46, v47);
    int8x16_t v52 = sub_1C9BECF78();
    os_log_type_t v53 = sub_1C9BEDC88();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v73 = OUTLINED_FUNCTION_35_0();
      uint64_t v76 = v73;
      uint64_t v75 = v46;
      *(_DWORD *)uint64_t v54 = 136315138;
      uint64_t v71 = v54 + 4;
      uint64_t v72 = v54;
      v51(v74, v67, v47);
      uint64_t v55 = sub_1C9BED5D8();
      uint64_t v57 = sub_1C95FF228(v55, v56, &v76);
      OUTLINED_FUNCTION_62_3(v57);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      uint64_t v58 = *(void (**)(void))(v45 + 8);
      OUTLINED_FUNCTION_10_25();
      v58();
      _os_log_impl(&dword_1C95F9000, v52, v53, "Cannot extract task: UDA -> Task conversion failed. %s", v72, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      OUTLINED_FUNCTION_10_25();
      v58();
    }
    else
    {

      uint64_t v65 = *(void (**)(char *, uint64_t))(v45 + 8);
      v65(v67, v47);
      v65(v46, v47);
    }
LABEL_23:
    sub_1C97D1FA4(v2, (void (*)(void))type metadata accessor for USOParse);
    goto LABEL_24;
  }
LABEL_27:
  sub_1C9705CC8(0, (v66 & 0xC000000000000001) == 0, v66);
  if ((v66 & 0xC000000000000001) == 0) {
    sub_1C9BEC838();
  }
  MEMORY[0x1CB78B3A0](0, v66);
  swift_bridgeObjectRelease();
  uint64_t v68 = OUTLINED_FUNCTION_19_25();
  v69(v68);
  sub_1C97D1FA4(v2, (void (*)(void))type metadata accessor for USOParse);
LABEL_24:
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C97F938C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DBE8);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_15_21();
  uint64_t v4 = sub_1C9BEBA38();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_68_0();
  uint64_t v11 = (char *)(v9 - v10);
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)&v20 - v14;
  sub_1C9BEBA28();
  if (__swift_getEnumTagSinglePayload(v0, 1, v4) == 1)
  {
    sub_1C95FE81C(v0, &qword_1EA58DBE8);
    return 0;
  }
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  v17(v15, v0, v4);
  v17(v11, (uint64_t)v15, v4);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v11, v4);
  if (v18 == *MEMORY[0x1E4FA33E0]) {
    return 4;
  }
  if (v18 == *MEMORY[0x1E4FA33E8]) {
    return 2;
  }
  if (v18 == *MEMORY[0x1E4FA3310]) {
    return 1;
  }
  if (v18 == *MEMORY[0x1E4FA3380]) {
    return 24;
  }
  if (v18 == *MEMORY[0x1E4FA3350]) {
    return 17;
  }
  if (v18 == *MEMORY[0x1E4FA33D8]) {
    return 8;
  }
  if (v18 == *MEMORY[0x1E4FA3358]) {
    return -3;
  }
  if (v18 == *MEMORY[0x1E4FA33C0]) {
    return 6;
  }
  if (v18 == *MEMORY[0x1E4FA3340]) {
    return 19;
  }
  if (v18 == *MEMORY[0x1E4FA3360]) {
    return 25;
  }
  if (v18 == *MEMORY[0x1E4FA33B8]) {
    return 9;
  }
  if (v18 == *MEMORY[0x1E4FA3408]) {
    return 11;
  }
  if (v18 == *MEMORY[0x1E4FA3390]) {
    return -1;
  }
  if (v18 == *MEMORY[0x1E4FA3338]) {
    return 14;
  }
  if (v18 == *MEMORY[0x1E4FA3378]) {
    return -2;
  }
  if (v18 == *MEMORY[0x1E4FA3368]) {
    return 21;
  }
  if (v18 == *MEMORY[0x1E4FA3348]) {
    return 13;
  }
  if (v18 == *MEMORY[0x1E4FA3398]) {
    return -1;
  }
  if (v18 == *MEMORY[0x1E4FA3388]) {
    return 22;
  }
  if (v18 == *MEMORY[0x1E4FA3318]) {
    return 15;
  }
  if (v18 == *MEMORY[0x1E4FA3328]) {
    return 20;
  }
  if (v18 == *MEMORY[0x1E4FA33A8]) {
    return 5;
  }
  if (v18 == *MEMORY[0x1E4FA3320]) {
    return 16;
  }
  if (v18 == *MEMORY[0x1E4FA33B0]) {
    return 1;
  }
  if (v18 == *MEMORY[0x1E4FA33F8]) {
    return 7;
  }
  if (v18 == *MEMORY[0x1E4FA3330]) {
    return 18;
  }
  if (v18 == *MEMORY[0x1E4FA3370]) {
    return 23;
  }
  if (v18 == *MEMORY[0x1E4FA3400]) {
    return 12;
  }
  if (v18 == *MEMORY[0x1E4FA33D0]) {
    return 3;
  }
  if (v18 != *MEMORY[0x1E4FA33C8])
  {
    OUTLINED_FUNCTION_10_25();
    v19();
    return 0;
  }
  return 10;
}

uint64_t sub_1C97F98AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v4 = *(void *)(*v2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v5 = sub_1C9BEE788();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  uint64_t v54 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v55 = (char *)v48 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  uint64_t v16 = (char *)v48 - v15;
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)v48 - v18;
  uint64_t v20 = type metadata accessor for Interpretable();
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)v48 - v22;
  uint64_t v25 = v2[5];
  uint64_t v24 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v25);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  uint64_t v27 = v24;
  uint64_t v28 = v4;
  uint64_t v29 = v56;
  v26(a1, v25, v27);
  uint64_t v30 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v23, v5);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v31(v16, v19, v5);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v33 = v6 + 8;
    uint64_t v34 = v35;
    if (EnumCaseMultiPayload == 1)
    {
      v34(v16, v5);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C9BECF88();
      __swift_project_value_buffer(v36, (uint64_t)qword_1EBC7A520);
      uint64_t v37 = v55;
      v31(v55, v19, v5);
      uint64_t v38 = sub_1C9BECF78();
      os_log_type_t v39 = sub_1C9BEDC88();
      int v53 = v39;
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = swift_slowAlloc();
        os_log_t v50 = v38;
        uint64_t v41 = (uint8_t *)v40;
        uint64_t v51 = swift_slowAlloc();
        uint64_t v58 = v51;
        v48[1] = v33;
        unint64_t v49 = v41;
        int8x16_t v52 = v19;
        *(_DWORD *)uint64_t v41 = 136315138;
        v31(v54, v37, v5);
        uint64_t v42 = sub_1C9BED5D8();
        uint64_t v57 = sub_1C95FF228(v42, v43, &v58);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        v34(v37, v5);
        uint64_t v45 = v49;
        os_log_t v44 = v50;
        _os_log_impl(&dword_1C95F9000, v50, (os_log_type_t)v53, "[DisambiguationPrompt] ChoiceResolver's inner entity resolver returned unexpected result %s", v49, 0xCu);
        uint64_t v30 = 1;
        uint64_t v46 = v51;
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v46, -1, -1);
        MEMORY[0x1CB78C440](v45, -1, -1);

        v34(v52, v5);
      }
      else
      {

        v34(v37, v5);
        v34(v19, v5);
        uint64_t v30 = 1;
      }
    }
    else
    {
      v34(v19, v5);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v29, v16, v28);
      uint64_t v30 = 0;
    }
  }
  return __swift_storeEnumTagSinglePayload(v29, v30, 1, v28);
}

uint64_t sub_1C97F9D78(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

uint64_t sub_1C97F9DB4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *sub_1C97F9E3C(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v3);
  return a1;
}

uint64_t sub_1C97F9E94(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t sub_1C97F9EEC()
{
  type metadata accessor for DisambiguationPrompt.Response();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t result = sub_1C9BEE788();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1C97F9FA0(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 32);
  uint64_t v8 = *(void *)(v7 - 8);
  if (*(void *)(v8 + 64) <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v9 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  if (v9 + 1 > 8) {
    uint64_t v10 = v9 + 1;
  }
  else {
    uint64_t v10 = 8;
  }
  if (((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v5 + 80)) & 0x1000F8) != 0 || (unint64_t)(v10 + 1) > 0x18)
  {
    *__dst = *(void *)__src;
    sub_1C9BEC838();
  }
  unsigned int v12 = __src[v10];
  if (v12 > 1)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else if (v12 == 1)
  {
    uint64_t v13 = *(void *)__src;
    id v14 = *(id *)__src;
    *__dst = v13;
    *((unsigned char *)__dst + v10) = 1;
  }
  else
  {
    unsigned int v15 = __src[v9];
    unsigned int v16 = v15 - 2;
    if (v15 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v17 = v9;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *__src;
          goto LABEL_26;
        case 2:
          int v18 = *(unsigned __int16 *)__src;
          goto LABEL_26;
        case 3:
          int v18 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_26;
        case 4:
          int v18 = *(_DWORD *)__src;
LABEL_26:
          if (v9 < 4) {
            unsigned int v15 = (v18 | (v16 << (8 * v9))) + 2;
          }
          else {
            unsigned int v15 = v18 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v15 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(__dst, __src, v7);
      *((unsigned char *)__dst + v9) = 1;
    }
    else if (v15)
    {
      memcpy(__dst, __src, v9 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(void *)(((unint64_t)__dst + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)__dst + v9) = 0;
    }
    *((unsigned char *)__dst + v10) = 0;
  }
  return __dst;
}

void sub_1C97FA230(id *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 32) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t v4 = 8;
  if (v3 + 1 > 8) {
    uint64_t v4 = v3 + 1;
  }
  unsigned int v5 = *((unsigned __int8 *)a1 + v4);
  if (v5 <= 1)
  {
    if (v5 == 1)
    {
    }
    else
    {
      unsigned int v6 = *((unsigned __int8 *)a1 + v3);
      unsigned int v7 = v6 - 2;
      if (v6 >= 2)
      {
        if (v3 <= 3) {
          uint64_t v8 = v3;
        }
        else {
          uint64_t v8 = 4;
        }
        switch(v8)
        {
          case 1:
            int v9 = *(unsigned __int8 *)a1;
            goto LABEL_17;
          case 2:
            int v9 = *(unsigned __int16 *)a1;
            goto LABEL_17;
          case 3:
            int v9 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            goto LABEL_17;
          case 4:
            int v9 = *(_DWORD *)a1;
LABEL_17:
            int v10 = (v9 | (v7 << (8 * v3))) + 2;
            unsigned int v6 = v9 + 2;
            if (v3 < 4) {
              unsigned int v6 = v10;
            }
            break;
          default:
            break;
        }
      }
      if (v6 == 1)
      {
        (*(void (**)(void))(v2 + 8))();
      }
      else if (!v6)
      {
        (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
      }
    }
  }
}

void *sub_1C97FA3C0(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 32);
  if (*(void *)(*(void *)(v6 - 8) + 64) <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v7 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  if (v7 + 1 > 8) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 8;
  }
  unsigned int v9 = __src[v8];
  if (v9 > 1)
  {
    memcpy(__dst, __src, v8 + 1);
  }
  else if (v9 == 1)
  {
    id v10 = *(id *)__src;
    id v11 = *(id *)__src;
    *__dst = v10;
    *((unsigned char *)__dst + v8) = 1;
  }
  else
  {
    unsigned int v12 = __src[v7];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *__src;
          goto LABEL_20;
        case 2:
          int v15 = *(unsigned __int16 *)__src;
          goto LABEL_20;
        case 3:
          int v15 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_20;
        case 4:
          int v15 = *(_DWORD *)__src;
LABEL_20:
          int v16 = (v15 | (v13 << (8 * v7))) + 2;
          unsigned int v12 = v15 + 2;
          if (v7 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(__dst, __src, v6);
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v12)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst, __src);
      *(void *)(((unint64_t)__dst + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)__dst + v7) = 0;
    }
    *((unsigned char *)__dst + v8) = 0;
  }
  return __dst;
}

void **sub_1C97FA604(void **__dst, void **__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v10 = *(void *)(v9 + 64);
  }
  if (v10 + 1 > 8) {
    uint64_t v11 = v10 + 1;
  }
  else {
    uint64_t v11 = 8;
  }
  unsigned int v12 = *((unsigned __int8 *)__dst + v11);
  unsigned int v13 = *((unsigned __int8 *)__src + v11);
  char v14 = 8 * v10;
  if (v12 > 1)
  {
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
LABEL_74:
        uint64_t v36 = *__src;
        id v37 = v36;
        *__dst = v36;
        *((unsigned char *)__dst + v11) = 1;
        return __dst;
      }
      unsigned int v16 = *((unsigned __int8 *)__src + v10);
      unsigned int v17 = v16 - 2;
      if (v16 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v18 = v10;
        }
        else {
          uint64_t v18 = 4;
        }
        switch(v18)
        {
          case 1:
            int v19 = *(unsigned __int8 *)__src;
            goto LABEL_37;
          case 2:
            int v19 = *(unsigned __int16 *)__src;
            goto LABEL_37;
          case 3:
            int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
            goto LABEL_37;
          case 4:
            int v19 = *(_DWORD *)__src;
LABEL_37:
            int v28 = (v19 | (v17 << v14)) + 2;
            unsigned int v16 = v19 + 2;
            if (v10 < 4) {
              unsigned int v16 = v28;
            }
            break;
          default:
            goto LABEL_87;
        }
      }
      goto LABEL_87;
    }
LABEL_49:
    memcpy(__dst, __src, v11 + 1);
    return __dst;
  }
  if (v13 > 1)
  {
    if (v12 == 1)
    {
    }
    else
    {
      unsigned int v20 = *((unsigned __int8 *)__dst + v10);
      unsigned int v21 = v20 - 2;
      if (v20 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v22 = v10;
        }
        else {
          uint64_t v22 = 4;
        }
        switch(v22)
        {
          case 1:
            int v23 = *(unsigned __int8 *)__dst;
            goto LABEL_43;
          case 2:
            int v23 = *(unsigned __int16 *)__dst;
            goto LABEL_43;
          case 3:
            int v23 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
            goto LABEL_43;
          case 4:
            int v23 = *(_DWORD *)__dst;
LABEL_43:
            int v29 = (v23 | (v21 << v14)) + 2;
            unsigned int v20 = v23 + 2;
            if (v10 < 4) {
              unsigned int v20 = v29;
            }
            break;
          default:
            break;
        }
      }
      if (v20 == 1)
      {
        (*(void (**)(void **, uint64_t))(v9 + 8))(__dst, v8);
      }
      else if (!v20)
      {
        (*(void (**)(void **, uint64_t))(v6 + 8))(__dst, v5);
      }
    }
    goto LABEL_49;
  }
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v43 = *(void *)(*(void *)(a3 + 16) - 8);
  if (v12 != 1)
  {
    unsigned int v24 = *((unsigned __int8 *)__dst + v10);
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v26 = v10;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *(unsigned __int8 *)__dst;
          goto LABEL_53;
        case 2:
          int v27 = *(unsigned __int16 *)__dst;
          goto LABEL_53;
        case 3:
          int v27 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
          goto LABEL_53;
        case 4:
          int v27 = *(_DWORD *)__dst;
LABEL_53:
          if (v10 < 4) {
            unsigned int v24 = (v27 | (v25 << v14)) + 2;
          }
          else {
            unsigned int v24 = v27 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1)
    {
      uint64_t v30 = *(void (**)(void))(v9 + 8);
    }
    else
    {
      if (v24) {
        goto LABEL_61;
      }
      uint64_t v30 = *(void (**)(void))(v6 + 8);
    }
    uint64_t v42 = *(void *)(*(void *)(a3 + 32) - 8);
    v30();
    uint64_t v9 = v42;
    goto LABEL_61;
  }
  uint64_t v15 = *(void *)(*(void *)(a3 + 32) - 8);

  uint64_t v9 = v15;
  char v14 = 8 * v10;
LABEL_61:
  unsigned int v31 = *((unsigned __int8 *)__src + v11);
  unsigned int v32 = v31 - 2;
  if (v31 < 2)
  {
    uint64_t v6 = v43;
  }
  else
  {
    if (v11 <= 3) {
      uint64_t v33 = v11;
    }
    else {
      uint64_t v33 = 4;
    }
    uint64_t v6 = v43;
    switch(v33)
    {
      case 1:
        int v34 = *(unsigned __int8 *)__src;
        goto LABEL_71;
      case 2:
        int v34 = *(unsigned __int16 *)__src;
        goto LABEL_71;
      case 3:
        int v34 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_71;
      case 4:
        int v34 = *(_DWORD *)__src;
LABEL_71:
        int v35 = (v34 | (v32 << (8 * v11))) + 2;
        unsigned int v31 = v34 + 2;
        if (v11 < 4) {
          unsigned int v31 = v35;
        }
        break;
      default:
        break;
    }
  }
  if (v31 == 1) {
    goto LABEL_74;
  }
  unsigned int v16 = *((unsigned __int8 *)__src + v10);
  unsigned int v38 = v16 - 2;
  if (v16 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v39 = v10;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *(unsigned __int8 *)__src;
        goto LABEL_84;
      case 2:
        int v40 = *(unsigned __int16 *)__src;
        goto LABEL_84;
      case 3:
        int v40 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_84;
      case 4:
        int v40 = *(_DWORD *)__src;
LABEL_84:
        if (v10 < 4) {
          unsigned int v16 = (v40 | (v38 << v14)) + 2;
        }
        else {
          unsigned int v16 = v40 + 2;
        }
        break;
      default:
        break;
    }
  }
LABEL_87:
  if (v16 == 1)
  {
    (*(void (**)(void **, void **, uint64_t))(v9 + 16))(__dst, __src, v8);
    *((unsigned char *)__dst + v10) = 1;
  }
  else if (v16)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(void **, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
    *(void *)(((unint64_t)__dst + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)__src
                                                                                        + v7
                                                                                        + 7) & 0xFFFFFFFFFFFFFFF8);
    *((unsigned char *)__dst + v10) = 0;
  }
  *((unsigned char *)__dst + v11) = 0;
  return __dst;
}

void *sub_1C97FAB88(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 32);
  if (*(void *)(*(void *)(v6 - 8) + 64) <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v7 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  if (v7 + 1 > 8) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 8;
  }
  unsigned int v9 = __src[v8];
  if (v9 > 1)
  {
    memcpy(__dst, __src, v8 + 1);
  }
  else if (v9 == 1)
  {
    *__dst = *(void *)__src;
    *((unsigned char *)__dst + v8) = 1;
  }
  else
  {
    unsigned int v10 = __src[v7];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v12 = v7;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *__src;
          goto LABEL_20;
        case 2:
          int v13 = *(unsigned __int16 *)__src;
          goto LABEL_20;
        case 3:
          int v13 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_20;
        case 4:
          int v13 = *(_DWORD *)__src;
LABEL_20:
          int v14 = (v13 | (v11 << (8 * v7))) + 2;
          unsigned int v10 = v13 + 2;
          if (v7 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(__dst, __src, v6);
      *((unsigned char *)__dst + v7) = 1;
    }
    else if (v10)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst, __src);
      *(void *)(((unint64_t)__dst + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)__dst + v7) = 0;
    }
    *((unsigned char *)__dst + v8) = 0;
  }
  return __dst;
}

unsigned __int8 *sub_1C97FADC4(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(void *)(v9 + 64) <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v10 = *(void *)(v9 + 64);
  }
  if (v10 + 1 > 8) {
    uint64_t v11 = v10 + 1;
  }
  else {
    uint64_t v11 = 8;
  }
  unsigned int v12 = __dst[v11];
  unsigned int v13 = __src[v11];
  char v14 = 8 * v10;
  if (v12 > 1)
  {
    if (v13 <= 1)
    {
      if (v13 == 1)
      {
LABEL_74:
        *(void *)__dst = *(void *)__src;
        __dst[v11] = 1;
        return __dst;
      }
      unsigned int v16 = __src[v10];
      unsigned int v17 = v16 - 2;
      if (v16 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v18 = v10;
        }
        else {
          uint64_t v18 = 4;
        }
        switch(v18)
        {
          case 1:
            int v19 = *__src;
            goto LABEL_37;
          case 2:
            int v19 = *(unsigned __int16 *)__src;
            goto LABEL_37;
          case 3:
            int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
            goto LABEL_37;
          case 4:
            int v19 = *(_DWORD *)__src;
LABEL_37:
            int v28 = (v19 | (v17 << v14)) + 2;
            unsigned int v16 = v19 + 2;
            if (v10 < 4) {
              unsigned int v16 = v28;
            }
            break;
          default:
            goto LABEL_87;
        }
      }
      goto LABEL_87;
    }
LABEL_49:
    memcpy(__dst, __src, v11 + 1);
    return __dst;
  }
  if (v13 > 1)
  {
    if (v12 == 1)
    {
    }
    else
    {
      unsigned int v20 = __dst[v10];
      unsigned int v21 = v20 - 2;
      if (v20 >= 2)
      {
        if (v10 <= 3) {
          uint64_t v22 = v10;
        }
        else {
          uint64_t v22 = 4;
        }
        switch(v22)
        {
          case 1:
            int v23 = *__dst;
            goto LABEL_43;
          case 2:
            int v23 = *(unsigned __int16 *)__dst;
            goto LABEL_43;
          case 3:
            int v23 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
            goto LABEL_43;
          case 4:
            int v23 = *(_DWORD *)__dst;
LABEL_43:
            int v29 = (v23 | (v21 << v14)) + 2;
            unsigned int v20 = v23 + 2;
            if (v10 < 4) {
              unsigned int v20 = v29;
            }
            break;
          default:
            break;
        }
      }
      if (v20 == 1)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(__dst, v8);
      }
      else if (!v20)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
      }
    }
    goto LABEL_49;
  }
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v41 = *(void *)(*(void *)(a3 + 16) - 8);
  if (v12 != 1)
  {
    unsigned int v24 = __dst[v10];
    unsigned int v25 = v24 - 2;
    if (v24 >= 2)
    {
      if (v10 <= 3) {
        uint64_t v26 = v10;
      }
      else {
        uint64_t v26 = 4;
      }
      switch(v26)
      {
        case 1:
          int v27 = *__dst;
          goto LABEL_53;
        case 2:
          int v27 = *(unsigned __int16 *)__dst;
          goto LABEL_53;
        case 3:
          int v27 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_53;
        case 4:
          int v27 = *(_DWORD *)__dst;
LABEL_53:
          if (v10 < 4) {
            unsigned int v24 = (v27 | (v25 << v14)) + 2;
          }
          else {
            unsigned int v24 = v27 + 2;
          }
          break;
        default:
          break;
      }
    }
    if (v24 == 1)
    {
      uint64_t v30 = *(void (**)(void))(v9 + 8);
    }
    else
    {
      if (v24) {
        goto LABEL_61;
      }
      uint64_t v30 = *(void (**)(void))(v6 + 8);
    }
    uint64_t v40 = *(void *)(*(void *)(a3 + 32) - 8);
    v30();
    uint64_t v9 = v40;
    goto LABEL_61;
  }
  uint64_t v15 = *(void *)(*(void *)(a3 + 32) - 8);

  uint64_t v9 = v15;
  char v14 = 8 * v10;
LABEL_61:
  unsigned int v31 = __src[v11];
  unsigned int v32 = v31 - 2;
  if (v31 < 2)
  {
    uint64_t v6 = v41;
  }
  else
  {
    if (v11 <= 3) {
      uint64_t v33 = v11;
    }
    else {
      uint64_t v33 = 4;
    }
    uint64_t v6 = v41;
    switch(v33)
    {
      case 1:
        int v34 = *__src;
        goto LABEL_71;
      case 2:
        int v34 = *(unsigned __int16 *)__src;
        goto LABEL_71;
      case 3:
        int v34 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_71;
      case 4:
        int v34 = *(_DWORD *)__src;
LABEL_71:
        int v35 = (v34 | (v32 << (8 * v11))) + 2;
        unsigned int v31 = v34 + 2;
        if (v11 < 4) {
          unsigned int v31 = v35;
        }
        break;
      default:
        break;
    }
  }
  if (v31 == 1) {
    goto LABEL_74;
  }
  unsigned int v16 = __src[v10];
  unsigned int v36 = v16 - 2;
  if (v16 >= 2)
  {
    if (v10 <= 3) {
      uint64_t v37 = v10;
    }
    else {
      uint64_t v37 = 4;
    }
    switch(v37)
    {
      case 1:
        int v38 = *__src;
        goto LABEL_84;
      case 2:
        int v38 = *(unsigned __int16 *)__src;
        goto LABEL_84;
      case 3:
        int v38 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_84;
      case 4:
        int v38 = *(_DWORD *)__src;
LABEL_84:
        if (v10 < 4) {
          unsigned int v16 = (v38 | (v36 << v14)) + 2;
        }
        else {
          unsigned int v16 = v38 + 2;
        }
        break;
      default:
        break;
    }
  }
LABEL_87:
  if (v16 == 1)
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 32))(__dst, __src, v8);
    __dst[v10] = 1;
  }
  else if (v16)
  {
    memcpy(__dst, __src, v10 + 1);
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
    *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v10] = 0;
  }
  __dst[v11] = 0;
  return __dst;
}

uint64_t sub_1C97FB340(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v4 = *(void *)(*(void *)(a3 + 32) - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  uint64_t v5 = 8;
  if (v3 + 1 > 8) {
    uint64_t v5 = v3 + 1;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) > 3) {
    goto LABEL_8;
  }
  unsigned int v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
  if (HIWORD(v10))
  {
    int v8 = *(_DWORD *)((char *)a1 + v6);
    if (v8) {
      goto LABEL_16;
    }
LABEL_24:
    unsigned int v12 = *((unsigned __int8 *)a1 + v5);
    if (v12 >= 2) {
      unsigned int v13 = (v12 ^ 0xFF) + 1;
    }
    else {
      unsigned int v13 = 0;
    }
    if (v13 >= 2) {
      return v13 - 1;
    }
    else {
      return 0;
    }
  }
  if (v10 > 0xFF)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v6);
    if (*(unsigned __int16 *)((char *)a1 + v6)) {
      goto LABEL_16;
    }
    goto LABEL_24;
  }
  if (v10 < 2) {
    goto LABEL_24;
  }
LABEL_8:
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_24;
  }
LABEL_16:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 254;
}

void sub_1C97FB4B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 32) - 8) + 64);
  }
  if (v5 + 1 > 8) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 8;
  }
  size_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if (a3 < 0xFE)
  {
    int v9 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v10 = a2 - 254;
    if (v7 < 4)
    {
      int v11 = (v10 >> v8) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v7] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v11;
        break;
      case 3:
LABEL_37:
        __break(1u);
        JUMPOUT(0x1C97FB6A4);
      case 4:
        *(_DWORD *)&a1[v7] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_25;
      case 3:
        goto LABEL_37;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (a2) {
LABEL_26:
        }
          a1[v6] = ~(_BYTE)a2;
        break;
    }
  }
}

uint64_t sub_1C97FB6CC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v3 = *(void *)(*(void *)(a2 + 32) - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  if (v2 + 1 > 8) {
    uint64_t v4 = v2 + 1;
  }
  else {
    uint64_t v4 = 8;
  }
  unsigned int v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 2) {
    return (v5 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_1C97FB734(_WORD *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (*(void *)(*(void *)(*(void *)(a3 + 32) - 8) + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 32) - 8) + 64);
  }
  if (v4 + 1 > 8) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 8;
  }
  if (a2 > 0xFE)
  {
    size_t v6 = (v5 + 1);
    if (v6 <= 3) {
      int v7 = ~(-1 << (8 * v6));
    }
    else {
      int v7 = -1;
    }
    if (v6)
    {
      int v8 = v7 & (a2 - 255);
      if (v6 <= 3) {
        int v9 = v6;
      }
      else {
        int v9 = 4;
      }
      bzero(a1, v6);
      switch(v9)
      {
        case 2:
          *a1 = v8;
          break;
        case 3:
          *a1 = v8;
          *((unsigned char *)a1 + 2) = BYTE2(v8);
          break;
        case 4:
          *(_DWORD *)a1 = v8;
          break;
        default:
          *(unsigned char *)a1 = v8;
          break;
      }
    }
  }
  else if (a2)
  {
    *((unsigned char *)a1 + v5) = -(char)a2;
  }
}

uint64_t sub_1C97FB85C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1C97FB92C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(a3 + 32);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v5 + 64) + v8;
  int v11 = *(_DWORD *)(v5 + 80) | v8;
  unsigned int v12 = v11;
  int v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(void *)(v7 + 64) > 0x18)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v16 = ~v9;
  (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v6);
  return a1;
}

uint64_t sub_1C97FBA88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 32) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1C97FBB2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C97FBBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C97FBC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C97FBD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C97FBDCC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 32);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1C97FBFA4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 32);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C97FC230);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t sub_1C97FC258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C97F98AC(a1, a2);
}

uint64_t sub_1C97FC27C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_11_2();
  v4();
  return a2;
}

uint64_t OUTLINED_FUNCTION_15_21()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_19_25()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_22()
{
  return swift_getTupleTypeMetadata2();
}

void OUTLINED_FUNCTION_23_18()
{
  *(void *)(v0 - 296) = *(void *)(v0 - 336);
}

uint64_t OUTLINED_FUNCTION_26_15()
{
  *(void *)(v4 - 200) = v2;
  *(void *)(v4 - 192) = v3;
  *(void *)(v4 - 184) = v0;
  *(void *)(v4 - 176) = v1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_28_12()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_15()
{
  return sub_1C9BEE788();
}

void OUTLINED_FUNCTION_32_17(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 192) = (char *)&a2 - a1;
}

uint64_t sub_1C97FC404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void *))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  *(void *)(inited + 32) = a3;
  *(void *)(inited + 40) = a4;
  uint64_t v12 = swift_bridgeObjectRetain();
  sub_1C97FC494(v12, v13, v14, v15, v16, v17, a8);
  swift_setDeallocating();
  return sub_1C95FE4C4();
}

void sub_1C97FC494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *))
{
  sub_1C97FC530();
  uint64_t v8 = (void *)swift_allocError();
  v9[0] = v8;
  memset(&v9[1], 0, 24);
  char v10 = 1;
  a7(v9);
}

uint64_t DucTemplateExecutor.deinit()
{
  return v0;
}

uint64_t DucTemplateExecutor.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C97FC530()
{
  unint64_t result = qword_1EA58DBF0;
  if (!qword_1EA58DBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DBF0);
  }
  return result;
}

uint64_t type metadata accessor for DucTemplateExecutor()
{
  return self;
}

uint64_t method lookup function for DucTemplateExecutor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DucTemplateExecutor);
}

uint64_t dispatch thunk of DucTemplateExecutor.execute(ducFamily:ducId:parameters:locale:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

double DucTemplatingResult.asTemplatingResult()()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return TemplatingResult.init(templateIdentifier:speak:print:)();
}

uint64_t DucTemplatingLocalContext.countryCode.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DucTemplatingLocalContext.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*DucTemplatingLocalContext.countryCode.modify())(void)
{
  return nullsub_1;
}

uint64_t *DucTemplatingLocalContext.meCard.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C97FC774(v1 + 16, (uint64_t)v4);
  sub_1C97FC774((uint64_t)v4, a1);
  return sub_1C97FC854(v4, (void (*)(void))sub_1C964FD20, (void (*)(uint64_t, uint64_t))sub_1C96A9EF8);
}

uint64_t sub_1C97FC774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t DucTemplatingLocalContext.meCard.setter(uint64_t a1)
{
  sub_1C97FC774(a1, (uint64_t)v3);
  sub_1C97FC774(v1 + 16, (uint64_t)v4);
  sub_1C97FC854(v4, (void (*)(void))sub_1C964FD64, (void (*)(uint64_t, uint64_t))sub_1C963F610);
  return sub_1C97FC774((uint64_t)v3, v1 + 16);
}

uint64_t *sub_1C97FC854(uint64_t *a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t))
{
  sub_1C97FC8C4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a2,
    a3);
  return a1;
}

void sub_1C97FC8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(void),void (*a24)(uint64_t, uint64_t))
{
  if (a2 != 1)
  {
    a23();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a5, a6, a7, a8);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a9, a10, a11, a12);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a13, a14, a15, a16);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))a23)(a17, a18, a19, a20);
    a24(a21, a22);
  }
}

uint64_t (*DucTemplatingLocalContext.meCard.modify())(void)
{
  return nullsub_1;
}

uint64_t DucTemplatingLocalContext.nlIntent.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DucTemplatingLocalContext.nlIntent.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 192) = a1;
  return result;
}

uint64_t (*DucTemplatingLocalContext.nlIntent.modify())(void)
{
  return nullsub_1;
}

uint64_t DucTemplatingLocalContext.requestStartTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DucTemplatingLocalContext() + 28);

  return sub_1C960D780(v3, a1);
}

uint64_t DucTemplatingLocalContext.requestStartTime.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DucTemplatingLocalContext() + 28);

  return sub_1C97FCAF4(a1, v3);
}

uint64_t sub_1C97FCAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DucTemplatingLocalContext.requestStartTime.modify())(void)
{
  return nullsub_1;
}

uint64_t DucTemplatingLocalContext.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  sub_1C97FCC18(v6);
  sub_1C97FC774((uint64_t)v6, v2);
  a1[24] = 0;
  uint64_t v3 = (uint64_t)a1 + *(int *)(type metadata accessor for DucTemplatingLocalContext() + 28);
  uint64_t v4 = sub_1C9BEAA98();
  return __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
}

void sub_1C97FCC18(_OWORD *a1)
{
  *a1 = xmmword_1C9BF06F0;
  bzero(a1 + 1, 0xA0uLL);
}

uint64_t initializeBufferWithCopyOfBuffer for DucTemplatingLocalContext(uint64_t a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *(void *)a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 2;
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  if (v8)
  {
    if (v8 == 1)
    {
      memcpy((void *)(a1 + 16), a2 + 2, 0xB0uLL);
      goto LABEL_23;
    }
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v10 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v9;
  }
  uint64_t v11 = a2[7];
  if (v11)
  {
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v11;
    uint64_t v12 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v13;
  }
  uint64_t v14 = a2[11];
  if (v14)
  {
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v14;
    uint64_t v15 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v16;
  }
  uint64_t v17 = a2[15];
  if (v17)
  {
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v17;
    uint64_t v18 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v19;
  }
  uint64_t v20 = a2[19];
  if (v20)
  {
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v20;
    uint64_t v21 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v22;
  }
  int v23 = a2 + 22;
  unint64_t v24 = a2[23];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_1C960B020(*v23, a2[23]);
    *(void *)(a1 + 176) = v25;
    *(void *)(a1 + 184) = v24;
  }
LABEL_23:
  *(void *)(a1 + 192) = a2[24];
  uint64_t v26 = *(int *)(a3 + 28);
  int v27 = (void *)(a1 + v26);
  int v28 = (char *)a2 + v26;
  uint64_t v29 = sub_1C9BEAA98();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  return a1;
}

uint64_t destroy for DucTemplatingLocalContext(void *a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[3];
  if (v4)
  {
    if (v4 == 1) {
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[15])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[19])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v5 = a1[23];
  if (v5 >> 60 != 15) {
    sub_1C960B0D8(a1[22], v5);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t)a1 + *(int *)(a2 + 28);
  uint64_t v7 = sub_1C9BEAA98();
  uint64_t result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!result)
  {
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t initializeWithCopy for DucTemplatingLocalContext(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 2;
  uint64_t v8 = a2[3];
  swift_bridgeObjectRetain();
  if (v8)
  {
    if (v8 == 1)
    {
      memcpy((void *)(a1 + 16), v7, 0xB0uLL);
      goto LABEL_21;
    }
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v10 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = v7[1];
    *(_OWORD *)(a1 + 16) = *v7;
    *(_OWORD *)(a1 + 32) = v9;
  }
  uint64_t v11 = a2[7];
  if (v11)
  {
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v11;
    uint64_t v12 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v13;
  }
  uint64_t v14 = a2[11];
  if (v14)
  {
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v14;
    uint64_t v15 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v16;
  }
  uint64_t v17 = a2[15];
  if (v17)
  {
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v17;
    uint64_t v18 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    *(_OWORD *)(a1 + 128) = v19;
  }
  uint64_t v20 = a2[19];
  if (v20)
  {
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v20;
    uint64_t v21 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v22;
  }
  int v23 = a2 + 22;
  unint64_t v24 = a2[23];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v23;
  }
  else
  {
    uint64_t v25 = *v23;
    sub_1C960B020(*v23, a2[23]);
    *(void *)(a1 + 176) = v25;
    *(void *)(a1 + 184) = v24;
  }
LABEL_21:
  *(void *)(a1 + 192) = a2[24];
  uint64_t v26 = *(int *)(a3 + 28);
  int v27 = (void *)(a1 + v26);
  int v28 = (char *)a2 + v26;
  uint64_t v29 = sub_1C9BEAA98();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  return a1;
}

uint64_t assignWithCopy for DucTemplatingLocalContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 16);
  uint64_t v7 = (_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a2 + 24);
  if (v8 == 1)
  {
    if (!v9)
    {
      long long v10 = *(_OWORD *)(a2 + 32);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 32) = v10;
      goto LABEL_12;
    }
    if (v9 != 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      if (*(void *)(a2 + 56))
      {
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v11 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v11;
      }
      if (*(void *)(a2 + 88))
      {
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v12 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v12;
      }
      if (*(void *)(a2 + 120))
      {
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v13 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v13;
      }
      if (*(void *)(a2 + 152))
      {
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v14 = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 160) = v14;
      }
      uint64_t v15 = (_OWORD *)(a2 + 176);
      unint64_t v16 = *(void *)(a2 + 184);
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 176) = *v15;
        goto LABEL_67;
      }
      uint64_t v17 = *(void *)v15;
      goto LABEL_62;
    }
LABEL_7:
    memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0xB0uLL);
    goto LABEL_67;
  }
  if (v9 == 1)
  {
    sub_1C97FDA3C(a1 + 16);
    goto LABEL_7;
  }
  if (v8)
  {
    if (v9)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97FD994(a1 + 16);
      long long v18 = *(_OWORD *)(a2 + 32);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 32) = v18;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 32);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 32) = v19;
  }
  uint64_t v20 = (_OWORD *)(a1 + 48);
  uint64_t v21 = (_OWORD *)(a2 + 48);
  uint64_t v22 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v22)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97FD994(a1 + 48);
      long long v23 = *(_OWORD *)(a2 + 64);
      *uint64_t v20 = *v21;
      *(_OWORD *)(a1 + 64) = v23;
    }
  }
  else if (v22)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v24 = *(_OWORD *)(a2 + 64);
    *uint64_t v20 = *v21;
    *(_OWORD *)(a1 + 64) = v24;
  }
  uint64_t v25 = (_OWORD *)(a1 + 80);
  uint64_t v26 = (_OWORD *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v27)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97FD994(a1 + 80);
      long long v28 = *(_OWORD *)(a2 + 96);
      *uint64_t v25 = *v26;
      *(_OWORD *)(a1 + 96) = v28;
    }
  }
  else if (v27)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *(_OWORD *)(a2 + 96);
    *uint64_t v25 = *v26;
    *(_OWORD *)(a1 + 96) = v29;
  }
  uint64_t v30 = (_OWORD *)(a1 + 112);
  unsigned int v31 = (_OWORD *)(a2 + 112);
  uint64_t v32 = *(void *)(a2 + 120);
  if (*(void *)(a1 + 120))
  {
    if (v32)
    {
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97FD994(a1 + 112);
      long long v33 = *(_OWORD *)(a2 + 128);
      _OWORD *v30 = *v31;
      *(_OWORD *)(a1 + 128) = v33;
    }
  }
  else if (v32)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v34 = *(_OWORD *)(a2 + 128);
    _OWORD *v30 = *v31;
    *(_OWORD *)(a1 + 128) = v34;
  }
  int v35 = (_OWORD *)(a1 + 144);
  unsigned int v36 = (_OWORD *)(a2 + 144);
  uint64_t v37 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v37)
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C97FD994(a1 + 144);
      long long v38 = *(_OWORD *)(a2 + 160);
      *int v35 = *v36;
      *(_OWORD *)(a1 + 160) = v38;
    }
  }
  else if (v37)
  {
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v39 = *(_OWORD *)(a2 + 160);
    *int v35 = *v36;
    *(_OWORD *)(a1 + 160) = v39;
  }
  uint64_t v40 = (uint64_t *)(a2 + 176);
  unint64_t v16 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184) >> 60 == 15)
  {
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *v40;
LABEL_62:
      sub_1C960B020(v17, v16);
      *(void *)(a1 + 176) = v17;
      *(void *)(a1 + 184) = v16;
      goto LABEL_67;
    }
    goto LABEL_65;
  }
  if (v16 >> 60 == 15)
  {
    sub_1C97FD9E8(a1 + 176);
LABEL_65:
    *(_OWORD *)(a1 + 176) = *(_OWORD *)v40;
    goto LABEL_67;
  }
  uint64_t v41 = *v40;
  sub_1C960B020(*v40, *(void *)(a2 + 184));
  uint64_t v42 = *(void *)(a1 + 176);
  unint64_t v43 = *(void *)(a1 + 184);
  *(void *)(a1 + 176) = v41;
  *(void *)(a1 + 184) = v16;
  sub_1C960B0D8(v42, v43);
LABEL_67:
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(int *)(a3 + 28);
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (const void *)(a2 + v44);
  uint64_t v47 = sub_1C9BEAA98();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v47);
  int v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47);
  if (!EnumTagSinglePayload)
  {
    uint64_t v50 = *(void *)(v47 - 8);
    if (!v49)
    {
      (*(void (**)(void *, const void *, uint64_t))(v50 + 24))(v45, v46, v47);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v50 + 8))(v45, v47);
    goto LABEL_72;
  }
  if (v49)
  {
LABEL_72:
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
  __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
  return a1;
}

uint64_t sub_1C97FD994(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C97FD9E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C97FDA3C(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for DucTemplatingLocalContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0xB0uLL);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C9BEAA98();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

void *assignWithTake for DucTemplatingLocalContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[3];
  if (v7 == 1) {
    goto LABEL_4;
  }
  uint64_t v8 = a2[3];
  if (v8 == 1)
  {
    sub_1C97FDA3C((uint64_t)(a1 + 2));
LABEL_4:
    memcpy(a1 + 2, a2 + 2, 0xB0uLL);
    goto LABEL_5;
  }
  if (v7)
  {
    if (v8)
    {
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRelease();
      uint64_t v18 = a2[5];
      a1[4] = a2[4];
      a1[5] = v18;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_1C97FD994((uint64_t)(a1 + 2));
  }
  long long v19 = *((_OWORD *)a2 + 2);
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)a1 + 2) = v19;
LABEL_18:
  if (a1[7])
  {
    uint64_t v20 = a2[7];
    if (v20)
    {
      a1[6] = a2[6];
      a1[7] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = a2[9];
      a1[8] = a2[8];
      a1[9] = v21;
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1C97FD994((uint64_t)(a1 + 6));
  }
  long long v22 = *((_OWORD *)a2 + 4);
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)a1 + 4) = v22;
LABEL_23:
  if (a1[11])
  {
    uint64_t v23 = a2[11];
    if (v23)
    {
      a1[10] = a2[10];
      a1[11] = v23;
      swift_bridgeObjectRelease();
      uint64_t v24 = a2[13];
      a1[12] = a2[12];
      a1[13] = v24;
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    sub_1C97FD994((uint64_t)(a1 + 10));
  }
  long long v25 = *((_OWORD *)a2 + 6);
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)a1 + 6) = v25;
LABEL_28:
  if (a1[15])
  {
    uint64_t v26 = a2[15];
    if (v26)
    {
      a1[14] = a2[14];
      a1[15] = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = a2[17];
      a1[16] = a2[16];
      a1[17] = v27;
      swift_bridgeObjectRelease();
      goto LABEL_33;
    }
    sub_1C97FD994((uint64_t)(a1 + 14));
  }
  long long v28 = *((_OWORD *)a2 + 8);
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)a1 + 8) = v28;
LABEL_33:
  if (a1[19])
  {
    uint64_t v29 = a2[19];
    if (v29)
    {
      a1[18] = a2[18];
      a1[19] = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = a2[21];
      a1[20] = a2[20];
      a1[21] = v30;
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    sub_1C97FD994((uint64_t)(a1 + 18));
  }
  long long v31 = *((_OWORD *)a2 + 10);
  *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)a1 + 10) = v31;
LABEL_38:
  uint64_t v32 = a2 + 22;
  unint64_t v33 = a1[23];
  if (v33 >> 60 == 15)
  {
LABEL_41:
    *((_OWORD *)a1 + 11) = *v32;
    goto LABEL_5;
  }
  unint64_t v34 = a2[23];
  if (v34 >> 60 == 15)
  {
    sub_1C97FD9E8((uint64_t)(a1 + 22));
    goto LABEL_41;
  }
  uint64_t v35 = a1[22];
  a1[22] = *(void *)v32;
  a1[23] = v34;
  sub_1C960B0D8(v35, v33);
LABEL_5:
  a1[24] = a2[24];
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = (char *)a1 + v9;
  long long v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1C9BEAA98();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  int v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_10;
  }
  if (v14)
  {
LABEL_10:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t sub_1C97FDEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

uint64_t sub_1C97FDF78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

unint64_t DucParameterCodingError.description.getter()
{
  sub_1C97FE12C(v0, (uint64_t)&v8);
  if (!v9) {
    return 0xD000000000000037;
  }
  sub_1C95FD5D8(&v8, (uint64_t)v5);
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  uint64_t v1 = v6;
  uint64_t v2 = v7;
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  unint64_t v3 = 0xD000000000000022;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1C97FE12C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t destroy for DucParameterCodingError(uint64_t result)
{
  if (*(void *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1(result);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DucParameterCodingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for DucParameterCodingError(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    long long v7 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((void *)a1, a2);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DucParameterCodingError(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DucParameterCodingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DucParameterCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

double sub_1C97FE49C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DucParameterCodingError()
{
  return &type metadata for DucParameterCodingError;
}

uint64_t dispatch thunk of DucTemplatingParameter.conceptType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DucTemplatingParameter.encode(protoJsonCoding:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

ValueMetadata *type metadata accessor for DucTemplatingResult()
{
  return &type metadata for DucTemplatingResult;
}

uint64_t sub_1C97FE514()
{
  sub_1C96044C4(0, (unint64_t *)&qword_1EBC7A3C0);
  uint64_t result = sub_1C9BEDEC8();
  qword_1EA5C27B8 = result;
  return result;
}

uint64_t DucTemplatingService.locale.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DucTemplatingService.ducFamily.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void DucTemplatingService.ducExecutor.getter()
{
}

uint64_t DucTemplatingService.extensionValueTypeNamesByValueType.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DucTemplatingService.synapseAppLaunchDucs.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = 0xD000000000000014;
  v5[9] = 0x80000001C9C1D390;
  v5[2] = a3;
  void v5[3] = a4;
  v5[4] = a1;
  v5[5] = a2;
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  type metadata accessor for DucTemplateExecutor();
  v5[6] = swift_allocObject();
  v5[7] = a5;
  sub_1C960E058((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  uint64_t v7 = qword_1EBC74538;
  v8[3] = type metadata accessor for RefreshableDeviceState();
  v8[4] = &protocol witness table for RefreshableDeviceState;
  v8[0] = v7;
  sub_1C9BEC838();
}

uint64_t DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
  OUTLINED_FUNCTION_15_22();
  uint64_t v0 = swift_allocObject();
  DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)();
  return v0;
}

void *DucTemplatingService.init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
  OUTLINED_FUNCTION_15_22();
  v1[8] = 0xD000000000000014;
  v1[9] = 0x80000001C9C1D390;
  v1[2] = v5;
  v1[3] = v6;
  v1[4] = v7;
  v1[5] = v8;
  type metadata accessor for DucTemplateExecutor();
  uint64_t v9 = swift_allocObject();
  sub_1C95FE7C0(v0, &qword_1EA58DC10);
  __swift_destroy_boxed_opaque_existential_1(v3);
  v1[6] = v9;
  v1[7] = v4;
  sub_1C95FD5D8(v2, (uint64_t)(v1 + 10));
  return v1;
}

void sub_1C97FE8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v10 = OUTLINED_FUNCTION_0_29();
  a8(v10);
}

void sub_1C97FE960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v7 = OUTLINED_FUNCTION_0_29();
  a5(v7);
}

void sub_1C97FE9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a8;
  *(void *)(v17 + 24) = a9;
  *(void *)(v17 + 32) = v9;
  *(void *)(v17 + 40) = a5;
  *(void *)(v17 + 48) = a1;
  *(void *)(v17 + 56) = a7;
  *(void *)(v17 + 64) = a2;
  *(void *)(v17 + 72) = a3;
  *(unsigned char *)(v17 + 80) = a6;
  sub_1C9BEC838();
}

uint64_t sub_1C97FEAA8(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, void *a4)
{
  sub_1C98027F4(a1, (uint64_t)v22);
  unint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 48);
  sub_1C98027F4((uint64_t)v22, (uint64_t)__src);
  if (__src[72] != 1)
  {
    uint64_t v18 = a3;
    memcpy(__dst, __src, sizeof(__dst));
    uint64_t v8 = a4[13];
    uint64_t v17 = a4[14];
    __swift_project_boxed_opaque_existential_1(a4 + 10, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C96500DC(v20, v19);
    swift_bridgeObjectRetain();
    DeviceState.isVox.getter(v8, v17, v9, v10, v11, v12, v13, v14, v16, (uint64_t)a4, v17, v18, v19, v20, v21[0], v21[1], v21[2], v21[3], v21[4],
      v21[5]);
  }
  sub_1C98027F4((uint64_t)v22, (uint64_t)v21);
  return a2(v21);
}

uint64_t sub_1C97FECA4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C97FED04(uint64_t a1)
{
  return sub_1C97FEAA8(a1, *(uint64_t (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_1C97FED40(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 72) == 1)
  {
    id v9 = *(id *)a1;
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v19 = *(void *)(a1 + 24);
    unint64_t v16 = *(void *)(a1 + 56);
    uint64_t v17 = *(void *)(a1 + 48);
    uint64_t v15 = *(void *)(a1 + 64);
    id v10 = *(id *)a1;
    if (qword_1EA588050 != -1) {
      swift_once();
    }
    sub_1C9BEDC88();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C9BEF570;
    v22[0] = 0;
    v22[1] = 0xE000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    sub_1C9BEE348();
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 64) = sub_1C9604B38();
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 40) = 0xE000000000000000;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    sub_1C98027F4(a4, (uint64_t)v22);
    a2(v22);
    sub_1C9669B5C(v9, v21, v20, v19, v7, v18, v17, v16, v15, 1);
  }
  else if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1C98002F8(a6);
    swift_bridgeObjectRelease();
    uint64_t v13 = v22[6];
    unint64_t v14 = v22[7];
    char v23 = 0;
    a2(v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C9650368(v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C97FEFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C97FEFC4()
{
  OUTLINED_FUNCTION_10_26();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_4_38();
}

void sub_1C97FF064(void *a1)
{
  uint64_t v2 = sub_1C9BEAB58();
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 152))(v4, v5);
  sub_1C9BEC988();
  if (v6)
  {
    sub_1C9604C1C();
    sub_1C9604B84();
    sub_1C9BED4F8();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for AppInformationResolver();
  swift_initStackObject();
  sub_1C9BEC838();
}

void sub_1C97FF284(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v6 = OUTLINED_FUNCTION_0_29();
  a4(v6);
}

void sub_1C97FF2E8()
{
}

void sub_1C97FF300()
{
}

void sub_1C97FF318()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  sub_1C97FF064((void *)(v0 + 80));
}

void sub_1C97FF3D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C97FF3E4()
{
  double v0 = OUTLINED_FUNCTION_11_27();
  return v1(v0);
}

void sub_1C97FF418(void (*a1)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v3 = OUTLINED_FUNCTION_0_29();
  a1(v3);
}

void sub_1C97FF47C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_4_38();
}

void sub_1C97FF524()
{
  OUTLINED_FUNCTION_10_26();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_6_32();
}

double sub_1C97FF5E0@<D0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  if (a5)
  {
    id v17 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v18 = sub_1C9BEE5D8();
    if (v18)
    {
      uint64_t v19 = v18;
      sub_1C98027E4(a1, a4, 1);
    }
    else
    {
      uint64_t v19 = swift_allocError();
      *uint64_t v20 = a1;
    }
    *(void *)a6 = v19;
    double result = 0.0;
    *(_OWORD *)(a6 + 8) = 0u;
    *(_OWORD *)(a6 + 24) = 0u;
    *(_OWORD *)(a6 + 40) = 0u;
    *(_OWORD *)(a6 + 56) = 0u;
    *(unsigned char *)(a6 + 72) = 1;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C9BEF570;
    *(void *)(v11 + 32) = a1;
    *(void *)(v11 + 40) = a4;
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C9BEF570;
    *(void *)(v12 + 32) = a1;
    *(void *)(v12 + 40) = a4;
    sub_1C97AE5A8(a1, a4, 0);
    sub_1C97AE5A8(a1, a4, 0);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C97EA80C(0, 0xE000000000000000, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C97EA634();
    *(void *)a6 = a2;
    *(void *)(a6 + 8) = a3;
    uint64_t v14 = MEMORY[0x1E4FBC868];
    *(void *)(a6 + 16) = v15;
    *(void *)(a6 + 24) = v14;
    *(void *)(a6 + 32) = v11;
    *(void *)(a6 + 40) = v12;
    double result = 0.0;
    *(_OWORD *)(a6 + 48) = xmmword_1C9BF06E0;
    *(void *)(a6 + 64) = v13;
    *(unsigned char *)(a6 + 72) = 0;
  }
  return result;
}

uint64_t sub_1C97FF7C8()
{
  return sub_1C97FF8FC();
}

void sub_1C97FF7E0(uint64_t a1, uint64_t a2)
{
}

void sub_1C97FF814(id a1, uint64_t a2, char a3, void (*a4)(void *, double), int a5, uint64_t a6, uint64_t a7)
{
  double v7 = sub_1C97FF5E0(a1, a6, a7, a2, a3 & 1, (uint64_t)v21);
  uint64_t v8 = v22;
  unint64_t v9 = v23;
  uint64_t v10 = v24;
  char v11 = v25;
  v19[0] = v21[0];
  v19[1] = v21[1];
  v19[2] = v21[2];
  v19[3] = v21[3];
  v19[4] = v21[4];
  v19[5] = v21[5];
  v19[6] = v22;
  v19[7] = v23;
  v19[8] = v24;
  char v20 = v25;
  a4(v19, v7);
  OUTLINED_FUNCTION_14_27();
  sub_1C9669B5C(v12, v13, v14, v15, v16, v17, v8, v9, v10, v11);
}

uint64_t sub_1C97FF8E4()
{
  return sub_1C97FF8FC();
}

uint64_t sub_1C97FF8FC()
{
  OUTLINED_FUNCTION_10_26();
  sub_1C95FD5F0(v1 + 80, (uint64_t)v5);
  v0(v5, v3, v2);
  return sub_1C95FE7C0((uint64_t)v5, &qword_1EBC789E0);
}

uint64_t sub_1C97FF964()
{
  double v0 = OUTLINED_FUNCTION_11_27();
  return v1(v0);
}

void sub_1C97FF998(uint64_t a1, void (*a2)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v4 = OUTLINED_FUNCTION_0_29();
  a2(v4);
}

void sub_1C97FF9FC(uint64_t a1, uint64_t a2)
{
  sub_1C95FD5F0(v2 + 80, (uint64_t)v5);
  static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:_:)((uint64_t)v5, 0, a1, a2);
}

void sub_1C97FFA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = &unk_1EA58DC20;
  v10[7] = 0;
  __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  sub_1C9BEC838();
}

uint64_t sub_1C97FFC80(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C97FFD10;
  return sub_1C973CDCC();
}

uint64_t sub_1C97FFD10(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  uint64_t v8 = *v3;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v9 = v8;
  v7[4] = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v10 = sub_1C97FFEB0;
  }
  else
  {
    v7[5] = a2;
    v7[6] = a1;
    uint64_t v10 = sub_1C97FFE18;
  }
  return MEMORY[0x1F4188298](v10, 0, 0);
}

uint64_t sub_1C97FFE18()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  char v3 = v0[4] != 0;
  unint64_t v4 = OUTLINED_FUNCTION_13_33();
  sub_1C97FF5E0(v6, v4, v5, v1, v3, v7);
  sub_1C98027E4(v2, v1, v3);
  OUTLINED_FUNCTION_22_0();
  return v8();
}

uint64_t sub_1C97FFEB0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  unint64_t v2 = OUTLINED_FUNCTION_13_33();
  sub_1C97FF5E0(v4, v2, v3, 0, v1 != 0, v5);
  sub_1C98027E4(v1, 0, v1 != 0);
  OUTLINED_FUNCTION_22_0();
  return v6();
}

void sub_1C97FFF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C97FFF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C95FD5F0(v4 + 80, (uint64_t)v7);
  static ErrorTemplates.appNotFoundOnDevice(deviceState:_:)((uint64_t)v7, a3, a4);
}

void sub_1C97FFFA8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_6_32();
}

void sub_1C9800030(uint64_t a1, uint64_t a2)
{
}

void sub_1C9800064(uint64_t a1, uint64_t a2)
{
}

void sub_1C9800098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C9BEC838();
}

void sub_1C9800118(id a1, uint64_t a2, char a3, void (*a4)(void *))
{
  id v5 = a1;
  if (a3)
  {
    id v6 = a1;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    unint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C9BEF570;
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = a2;
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C9BEF570;
    *(void *)(v11 + 32) = v5;
    *(void *)(v11 + 40) = a2;
    sub_1C97AE5A8(v5, a2, 0);
    sub_1C97AE5A8(v5, a2, 0);
    uint64_t v13 = sub_1C97EA80C(0, 0xE000000000000000, 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = 0x80000001C9C1D4F0;
    sub_1C97EA634();
    uint64_t v8 = v15;
    uint64_t v9 = MEMORY[0x1E4FBC868];
    unint64_t v12 = 2;
    id v5 = (id)0xD000000000000010;
  }
  char v16 = a3 & 1;
  v18[0] = v5;
  v18[1] = v7;
  v18[2] = v8;
  v18[3] = v9;
  v18[4] = v10;
  v18[5] = v11;
  v18[6] = 0;
  v18[7] = v12;
  v18[8] = v13;
  char v19 = v16;
  a4(v18);
  sub_1C9669B5C(v5, v7, v8, v9, v10, v11, 0, v12, v13, v16);
}

void sub_1C98002E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C98002F8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  if (v1[2])
  {
    uint64_t v3 = v1[4];
    uint64_t v2 = v1[5];
    swift_bridgeObjectRetain();
    sub_1C9BED6B8();
    swift_bridgeObjectRetain();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C9BEF570;
    *(void *)(v4 + 32) = v3;
    *(void *)(v4 + 40) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    TemplatingResult.init(templateIdentifier:speak:print:)();
  }
  else
  {
    __break(1u);
  }
}

void sub_1C980041C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v8 = OUTLINED_FUNCTION_0_29();
  a6(v8);
}

void sub_1C9800480(void *a1, uint64_t a2, char a3)
{
  sub_1C97FF814(a1, a2, a3 & 1, *(void (**)(void *, double))(v3 + 16), *(void *)(v3 + 24), 0xD00000000000001FLL, 0x80000001C9C1D580);
}

void sub_1C98004B8(void *a1, uint64_t a2, char a3)
{
  sub_1C97FF814(a1, a2, a3 & 1, *(void (**)(void *, double))(v3 + 16), *(void *)(v3 + 24), 0xD000000000000036, 0x80000001C9C1D540);
}

uint64_t sub_1C98004F0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9800538()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C979C6E4;
  OUTLINED_FUNCTION_14_27();
  return sub_1C97B79F8();
}

void sub_1C9800600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(double))
{
  sub_1C97FC530();
  OUTLINED_FUNCTION_12_3();
  double v9 = OUTLINED_FUNCTION_0_29();
  a7(v9);
}

unint64_t sub_1C9800664(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v41 = &v44;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C980192C(0x7FFFFFFFFFFFFFFFLL, 1u, sub_1C97342E4, (uint64_t)v40, a1, a2);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1C963C340();
    uint64_t v8 = v48;
    uint64_t v9 = v6 + 56;
    while (1)
    {
      unint64_t v10 = *(void *)(v9 - 24);
      unint64_t v11 = *(void *)(v9 - 16);
      swift_bridgeObjectRetain_n();
      unint64_t result = OUTLINED_FUNCTION_7_31();
      unint64_t v14 = (v13 & 1) != 0 ? v11 : result;
      if (v14 >> 14 < v10 >> 14) {
        break;
      }
      uint64_t v38 = v8;
      uint64_t v39 = v7;
      uint64_t v15 = OUTLINED_FUNCTION_19_26(v10, v14);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v44 = v15;
      uint64_t v45 = v17;
      uint64_t v46 = v19;
      uint64_t v47 = v21;
      sub_1C9661ED8();
      uint64_t v22 = sub_1C9BEDFA8();
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t result = OUTLINED_FUNCTION_7_31();
      if (v25) {
        unint64_t result = v11;
      }
      if (v11 >> 14 < result >> 14) {
        goto LABEL_17;
      }
      uint64_t v26 = OUTLINED_FUNCTION_19_26(result, v11);
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v42 = v22;
      uint64_t v43 = v24;
      uint64_t v44 = v26;
      uint64_t v45 = v28;
      uint64_t v46 = v30;
      uint64_t v47 = v32;
      sub_1C9661E8C();
      swift_bridgeObjectRetain();
      sub_1C9BED6A8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = v42;
      uint64_t v34 = v43;
      uint64_t v8 = v38;
      uint64_t v48 = v38;
      unint64_t v35 = *(void *)(v38 + 16);
      if (v35 >= *(void *)(v38 + 24) >> 1)
      {
        sub_1C963C340();
        uint64_t v8 = v48;
      }
      *(void *)(v8 + 16) = v35 + 1;
      uint64_t v36 = v8 + 16 * v35;
      *(void *)(v36 + 32) = v33;
      *(void *)(v36 + 40) = v34;
      v9 += 32;
      uint64_t v7 = v39 - 1;
      if (v39 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_15:
    uint64_t v44 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786E0);
    sub_1C963D18C();
    uint64_t v37 = sub_1C9BED518();
    swift_bridgeObjectRelease();
    return v37;
  }
  return result;
}

uint64_t DucTemplatingService.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return v0;
}

uint64_t DucTemplatingService.__deallocating_deinit()
{
  DucTemplatingService.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C980097C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 160))();
}

uint64_t sub_1C98009C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(**(void **)v7
                                                                                                 + 168))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t sub_1C9800A18()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_1C9800A5C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 184))();
}

uint64_t sub_1C9800AA0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 192))();
}

uint64_t sub_1C9800AE4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(**(void **)v1 + 200))(a1);
}

uint64_t sub_1C9800B38()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 208))();
}

uint64_t sub_1C9800B7C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 216))();
}

uint64_t sub_1C9800BC0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 224))();
}

uint64_t sub_1C9800C04()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 232))();
}

uint64_t sub_1C9800C48()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 240))();
}

uint64_t sub_1C9800C8C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 248))();
}

uint64_t sub_1C9800CD0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 256))();
}

uint64_t sub_1C9800D1C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 264))();
}

uint64_t sub_1C9800D68()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 272))();
}

uint64_t sub_1C9800DB4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 280))();
}

uint64_t sub_1C9800E00()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 288))();
}

uint64_t sub_1C9800E4C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 296))();
}

uint64_t sub_1C9800E98()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 304))();
}

uint64_t sub_1C9800EE4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 312))();
}

uint64_t sub_1C9800F30()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 344))();
}

uint64_t sub_1C9800F7C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 352))();
}

uint64_t sub_1C9800FC8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 360))();
}

uint64_t sub_1C9801014()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 368))();
}

uint64_t sub_1C9801060()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 376))();
}

uint64_t sub_1C98010AC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 384))();
}

uint64_t sub_1C98010F8()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 392))();
}

uint64_t sub_1C9801144()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 320))();
}

uint64_t sub_1C9801190()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 328))();
}

uint64_t sub_1C98011DC()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 400))();
}

uint64_t sub_1C9801228()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 408))();
}

uint64_t sub_1C9801274()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 416))();
}

uint64_t sub_1C98012C0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 424))();
}

uint64_t sub_1C980130C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 432))();
}

uint64_t sub_1C9801358()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 464))();
}

uint64_t sub_1C98013A4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 472))();
}

uint64_t sub_1C98013F0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 440))();
}

uint64_t sub_1C980143C()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 480))();
}

uint64_t sub_1C9801488()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 336))();
}

uint64_t sub_1C98014D4()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 448))();
}

uint64_t sub_1C9801520()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 456))();
}

uint64_t sub_1C980156C@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  *(void *)(inited + 32) = 0x65756C6176;
  *(void *)(inited + 40) = 0xE500000000000000;
  sub_1C95FF454(v1 + 32, inited + 48);
  uint64_t v4 = sub_1C9BED458();
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76378);
  *(void *)(a1 + 24) = result;
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 56) = 0;
  return result;
}

uint64_t sub_1C9801620()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9801660@<X0>(uint64_t a1@<X8>)
{
  return sub_1C980156C(a1);
}

uint64_t sub_1C9801684(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_3_39();
    uint64_t result = OUTLINED_FUNCTION_2_36();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DCC8);
    uint64_t result = sub_1C9BED928();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C9801704(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_3_39();
    uint64_t result = OUTLINED_FUNCTION_2_36();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1C9BED928();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C980177C(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_3_39();
    uint64_t result = OUTLINED_FUNCTION_2_36();
    __break(1u);
  }
  else if (a1)
  {
    sub_1C96044C4(0, &qword_1EBC76450);
    uint64_t result = sub_1C9BED928();
    *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C9801810(uint64_t a1)
{
  if (a1 < 0)
  {
    OUTLINED_FUNCTION_3_39();
    uint64_t result = OUTLINED_FUNCTION_2_36();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9A8);
      uint64_t v2 = sub_1C9BED928();
      *(void *)(v2 + 16) = a1;
    }
    else
    {
      uint64_t v2 = MEMORY[0x1E4FBC860];
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9A8);
    return v2;
  }
  return result;
}

uint64_t sub_1C98018D4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C980190C(void *a1, uint64_t a2, char a3)
{
  sub_1C9800118(a1, a2, a3 & 1, *(void (**)(void *))(v3 + 16));
}

uint64_t sub_1C980192C(uint64_t a1, unsigned __int8 a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_38;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v42 = v10 + 16;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_1C9801D7C(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_36;
  }
  uint64_t v41 = a1;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = MEMORY[0x1E4FBC860];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_1C9BED748();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      unint64_t v14 = sub_1C9BED678();
      goto LABEL_21;
    }
    int v20 = (v15 >> 14 == v14 >> 14) & a2;
    if (v20 != 1)
    {
      if (v14 >> 14 < v15 >> 14) {
        goto LABEL_38;
      }
      uint64_t v21 = sub_1C9BED768();
      uint64_t v43 = v23;
      uint64_t v44 = v22;
      uint64_t v45 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C9655000();
        uint64_t v13 = v28;
      }
      unint64_t v25 = *(void *)(v13 + 16);
      if (v25 >= *(void *)(v13 + 24) >> 1)
      {
        sub_1C9655000();
        uint64_t v13 = v29;
      }
      *(void *)(v13 + 16) = v25 + 1;
      uint64_t v26 = (void *)(v13 + 32 * v25);
      v26[4] = v21;
      v26[5] = v45;
      v26[6] = v44;
      v26[7] = v43;
      *(void *)uint64_t v42 = v13;
    }
    uint64_t v27 = sub_1C9BED678();
    unint64_t v14 = v27;
    *(void *)(v47 + 16) = v27;
    if ((v20 & 1) == 0 && *(void *)(v13 + 16) == v41) {
      break;
    }
    unint64_t v15 = v27;
    unint64_t v16 = v27;
LABEL_21:
    if (v48 == v14 >> 14) {
      goto LABEL_30;
    }
  }
  unint64_t v16 = v27;
  unint64_t v15 = v27;
LABEL_30:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (v48 < v16 >> 14)
  {
LABEL_38:
    uint64_t result = sub_1C9BEE388();
    __break(1u);
    return result;
  }
  uint64_t v31 = sub_1C9BED768();
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  sub_1C984D8B0();
  uint64_t v38 = *(void *)(*(void *)v42 + 16);
  sub_1C96B02BC(v38);
  uint64_t v13 = *(void *)v42;
  *(void *)(v13 + 16) = v38 + 1;
  uint64_t v39 = (void *)(v13 + 32 * v38);
  v39[4] = v31;
  v39[5] = v33;
  v39[6] = v35;
  v39[7] = v37;
  *(void *)uint64_t v42 = v13;
LABEL_35:
  swift_bridgeObjectRetain();
  swift_release();
LABEL_36:
  swift_release();
  return v13;
}

uint64_t sub_1C9801D7C(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_1C9BED768();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    sub_1C984D8B0();
    uint64_t v14 = *(void *)(*(void *)(a4 + 16) + 16);
    sub_1C96B02BC(v14);
    uint64_t v15 = *(void *)(a4 + 16);
    *(void *)(v15 + 16) = v14 + 1;
    unint64_t v16 = (void *)(v15 + 32 * v14);
    v16[4] = v7;
    v16[5] = v9;
    v16[6] = v11;
    v16[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_1C9BEE388();
  __break(1u);
  return result;
}

void sub_1C9801E84()
{
  sub_1C97188B4();
  *uint64_t v0 = v1;
}

uint64_t method lookup function for DucTemplatingService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DucTemplatingService);
}

uint64_t dispatch thunk of DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DucTemplatingService.__allocating_init(ducFamily:locale:extensionValueTypeNamesByValueType:aceServiceInvoker:deviceState:localContext:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterPromptDialog(app:parameterName:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueUnsupportedDialog(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*(void *)v7 + 168))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueConfirmationDialog(app:parameterName:intentResolutionResult:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueConfirmationRejectedDialog(app:parameterName:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueChangeDialog(app:parameterName:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueDisambiguationDialog(app:parameterName:intentResolutionResult:disambiguationList:deviceIsLocked:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationDialog(app:intent:intentResponse:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationCancelledDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationCancelledDialog(app:intent:intentResponse:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentConfirmationWaitToContinueDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentHandledDialog(app:intent:intentResponse:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentHandledContinueInAppDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentAutoHandledDialog(app:intent:intentResponse:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentNotHandledDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentInProgressDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentNotSupportedByAppDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppDisabledByScreenTimeDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DucTemplatingService.makeIntentAuthenticationDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DucTemplatingService.makeInterstitialDialog(app:intent:intentResponse:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DucTemplatingService.makeOfferIntentDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppIsDisabledForSiriDialog(app:isHandsFree:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DucTemplatingService.makeOpenAppDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DucTemplatingService.makeOpenAppFailedDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of DucTemplatingService.makeHandoffDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DucTemplatingService.makeNotificationMessageForHandoff(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of DucTemplatingService.makeUnlockDeviceDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of DucTemplatingService.makeUnmuteSiriConfirmationDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of DucTemplatingService.makeUnmuteSiriConfirmationRejectedDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of DucTemplatingService.makeEnableAppConfirmationDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of DucTemplatingService.makeEnableAppConfirmationRejectedDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of DucTemplatingService.makeSuggestAppDialog(app:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of DucTemplatingService.makeDisambiguateAppDialog(apps:disambiguationList:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of DucTemplatingService.makeConfirmAppDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of DucTemplatingService.makeNoAppsFoundDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of DucTemplatingService.makeFindAppButtonTitleDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of DucTemplatingService.makeGenericErrorDialog(app:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppNotFoundOnDeviceDialog(app:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppDoesNotSupportIntentDialog(app:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of DucTemplatingService.commonYesDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of DucTemplatingService.commonNoDialog(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of DucTemplatingService.makeFailureHandlingIntentDialog(app:intent:intentResponse:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t dispatch thunk of DucTemplatingService.makeAppLaunchFailed(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of DucTemplatingService.makeParameterValueDisambiguationTemplatingResult(app:parameterName:intentResolutionResult:intent:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of DucTemplatingService.makeSpeakableDisambiguationItemList(app:intent:parameterName:disambiguationList:deviceIsLocked:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of DucTemplatingService.convertStringToTitleCase(string:separator:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 520))();
}

uint64_t type metadata accessor for StringListTemplatingParameter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DucFailure(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9802714);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DucFailure()
{
  return &type metadata for DucFailure;
}

unint64_t sub_1C9802750()
{
  unint64_t result = qword_1EA58DCB8;
  if (!qword_1EA58DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DCB8);
  }
  return result;
}

uint64_t sub_1C980279C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C98027D4()
{
  return swift_deallocObject();
}

void sub_1C98027E4(void *a1, uint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C98027F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5950D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C980285C()
{
  swift_release();
  sub_1C9669B5C(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(unsigned char *)(v0 + 104));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1C9802908(uint64_t a1)
{
  sub_1C97FED40(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), v1 + 32, *(void *)(v1 + 112), v1 + 120);
}

uint64_t sub_1C980291C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 72);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), v4);
  return a1;
}

double OUTLINED_FUNCTION_0_29()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_2_36()
{
  return sub_1C9BEE388();
}

void OUTLINED_FUNCTION_4_38()
{
  sub_1C97FF064((void *)(v0 + 80));
}

void OUTLINED_FUNCTION_6_32()
{
  sub_1C97FF064((void *)(v0 + 80));
}

uint64_t OUTLINED_FUNCTION_7_31()
{
  return MEMORY[0x1F4184730](v1, 1, v2, v1, v2, v3, v0);
}

void OUTLINED_FUNCTION_8_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

double OUTLINED_FUNCTION_11_27()
{
  return 0.0;
}

unint64_t OUTLINED_FUNCTION_13_33()
{
  return 0xD000000000000029;
}

uint64_t OUTLINED_FUNCTION_17_21()
{
  return sub_1C95FE7C0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_18_21()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_26(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4184790](a1, a2, v3, v4, v5, v2);
}

BOOL static EnableTCCAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t EnableTCCAction.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t EnableTCCAction.hashValue.getter()
{
  return sub_1C9BEE768();
}

unint64_t sub_1C9802BE0()
{
  unint64_t result = qword_1EA58DCD0;
  if (!qword_1EA58DCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58DCD0);
  }
  return result;
}

uint64_t dispatch thunk of EntitlementControlling.executeTCCChecks<A>(delegate:intent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

unsigned char *storeEnumTagSinglePayload for EnableTCCAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9802D0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EnableTCCAction()
{
  return &type metadata for EnableTCCAction;
}

unint64_t sub_1C9802D44()
{
  return 0xD000000000000012;
}

uint64_t sub_1C9802DD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = swift_unknownObjectRetain();
  return sub_1C9802E58(v2, v1);
}

uint64_t sub_1C9802E14()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1C9802E58(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_unknownObjectRelease();
}

void *ErrorAction.error.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void *ErrorAction.__allocating_init(_:)(uint64_t a1)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  return result;
}

void *ErrorAction.init(_:)(uint64_t a1)
{
  v1[2] = 0;
  v1[3] = 0;
  v1[4] = a1;
  return v1;
}

uint64_t sub_1C9802F20()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C9802F40, 0, 0);
}

uint64_t sub_1C9802F40()
{
  id v1 = *(id *)(*(void *)(v0 + 16) + 32);
  swift_willThrow();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t ErrorAction.deinit()
{
  swift_unknownObjectRelease();

  return v0;
}

uint64_t ErrorAction.__deallocating_deinit()
{
  ErrorAction.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9803018(uint64_t a1)
{
  uint64_t result = sub_1C9803154((unint64_t *)&unk_1EA58DCE0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ErrorAction()
{
  return self;
}

uint64_t sub_1C9803084()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_1C9608754;
  return sub_1C9802F20();
}

uint64_t sub_1C9803110(uint64_t a1)
{
  uint64_t result = sub_1C9803154(&qword_1EA58DCF0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C9803154(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ErrorAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C9803194()
{
  return sub_1C9802D44();
}

uint64_t sub_1C98031B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C9802E14();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t method lookup function for ErrorAction(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ErrorAction);
}

uint64_t dispatch thunk of ErrorAction.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of ErrorAction.nextAction.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ErrorAction.nextAction.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of ErrorAction.nextAction.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of ErrorAction.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ErrorAction.run()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 136) + **(int **)(*(void *)v0 + 136));
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_1C9608754;
  return v4();
}

uint64_t sub_1C9803398()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98033AC);
}

void sub_1C98033AC()
{
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C980349C()
{
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 32) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 40) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C980358C(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98035A4);
}

void sub_1C98035A4()
{
  sub_1C9BED458();
  OUTLINED_FUNCTION_7_32();
  if (v1[10]) {
    OUTLINED_FUNCTION_2_37();
  }
  sub_1C95FE70C((uint64_t)(v1 + 7));
  v1[13] = v0;
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  v1[14] = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C98036FC()
{
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 136) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9803810()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 136);
  return v1(v2);
}

uint64_t sub_1C9803874()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C98038D4(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98038EC);
}

void sub_1C98038EC()
{
  sub_1C9BED458();
  OUTLINED_FUNCTION_7_32();
  if (v1[10]) {
    OUTLINED_FUNCTION_2_37();
  }
  sub_1C95FE70C((uint64_t)(v1 + 7));
  v1[13] = v0;
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  v1[14] = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9803A44()
{
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 136) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void OUTLINED_FUNCTION_2_37()
{
  sub_1C95FD5D8(v0, v1 + 16);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_1C97D87D8();
}

uint64_t OUTLINED_FUNCTION_3_40()
{
  return sub_1C9803FC8();
}

uint64_t OUTLINED_FUNCTION_7_32()
{
  return sub_1C95FE548(v1, v0);
}

uint64_t sub_1C9803C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v9 = OUTLINED_FUNCTION_14_2();
  type metadata accessor for Input(v9);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v14) == 1)
  {
    sub_1C95FE76C(a1, &qword_1EA589178);
    sub_1C98052C4(a2, a3, v3);
    swift_bridgeObjectRelease();
    return sub_1C95FE76C(v3, &qword_1EA589178);
  }
  else
  {
    sub_1C9729480(a1, (uint64_t)v13);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7BDC8(v16, v17, v18);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C9803D34()
{
  OUTLINED_FUNCTION_7_33();
  if (v1)
  {
    sub_1C95FD5D8(v0, (uint64_t)v10);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7BDF8(v2, v3, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1C95FE76C((uint64_t)v0, &qword_1EBC74520);
    OUTLINED_FUNCTION_10_27(v6, v7, &qword_1EA58DD88, (void (*)(unint64_t, uint64_t))sub_1C95FD5D8, &qword_1EBC74518, v8);
    uint64_t v9 = swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_26_16(v9);
  }
}

uint64_t sub_1C9803DCC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1C963C190((_OWORD *)a1, v4);
    sub_1C9A7BE10(v4, a2);
    return sub_1C975CA3C(a2);
  }
  else
  {
    sub_1C95FE76C(a1, &qword_1EBC78700);
    sub_1C9805500(a2, v4);
    sub_1C975CA3C(a2);
    return sub_1C95FE76C((uint64_t)v4, &qword_1EBC78700);
  }
}

uint64_t sub_1C9803E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
  MEMORY[0x1F4188790](v7 - 8, v8);
  OUTLINED_FUNCTION_14_2();
  uint64_t v9 = sub_1C9BEAA98();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (__swift_getEnumTagSinglePayload(a1, 1, v9) == 1)
  {
    sub_1C95FE76C(a1, qword_1EBC74550);
    sub_1C9805630(a2, a3, v3);
    swift_bridgeObjectRelease();
    return sub_1C95FE76C(v3, qword_1EBC74550);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7BE78(v15, v16, v17);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C9803FC8()
{
  OUTLINED_FUNCTION_7_33();
  if (v3)
  {
    sub_1C963C190(v2, v5);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7BEE0();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C95FE76C((uint64_t)v2, &qword_1EBC78700);
    sub_1C98057A8(v1, v0, v5);
    swift_bridgeObjectRelease();
    return sub_1C95FE76C((uint64_t)v5, &qword_1EBC78700);
  }
}

uint64_t sub_1C9804050()
{
  OUTLINED_FUNCTION_7_33();
  if (v1)
  {
    sub_1C95FD5D8(v0, (uint64_t)v10);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7BFF8(v2, v3, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1C95FE76C((uint64_t)v0, &qword_1EA58B350);
    OUTLINED_FUNCTION_10_27(v6, v7, &qword_1EA58DD98, (void (*)(unint64_t, uint64_t))sub_1C95FD5D8, &qword_1EA58B348, v8);
    uint64_t v9 = swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_26_16(v9);
  }
}

uint64_t sub_1C98040E8()
{
  OUTLINED_FUNCTION_7_33();
  if (v1)
  {
    sub_1C95FD5D8(v0, (uint64_t)v10);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7C010(v2, v3, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1C95FE76C((uint64_t)v0, &qword_1EA58B360);
    OUTLINED_FUNCTION_10_27(v6, v7, &qword_1EA58DDA0, (void (*)(unint64_t, uint64_t))sub_1C95FD5D8, &qword_1EA58B358, v8);
    uint64_t v9 = swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_26_16(v9);
  }
}

uint64_t sub_1C9804180()
{
  OUTLINED_FUNCTION_7_33();
  if (v1)
  {
    sub_1C95FD5D8(v0, (uint64_t)v10);
    OUTLINED_FUNCTION_8_25();
    sub_1C9A7C028(v2, v3, v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1C95FE76C((uint64_t)v0, &qword_1EA58B2C8);
    OUTLINED_FUNCTION_10_27(v6, v7, &qword_1EA58DDA8, (void (*)(unint64_t, uint64_t))sub_1C95FD5D8, &qword_1EA58B368, v8);
    uint64_t v9 = swift_bridgeObjectRelease();
    return OUTLINED_FUNCTION_26_16(v9);
  }
}

uint64_t sub_1C9804218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9804278(a1, a2, a3, (void (*)(_OWORD *, uint64_t, uint64_t))sub_1C9A7C090, &qword_1EA58DD58, &qword_1EA58DD60);
}

uint64_t sub_1C9804248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9804278(a1, a2, a3, (void (*)(_OWORD *, uint64_t, uint64_t))sub_1C9A7C0A8, &qword_1EA58DD68, &qword_1EA58DD70);
}

uint64_t sub_1C9804278(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *, uint64_t, uint64_t), uint64_t *a5, uint64_t *a6)
{
  if (*(void *)(a1 + 24))
  {
    long long v8 = *(_OWORD *)(a1 + 16);
    v12[0] = *(_OWORD *)a1;
    v12[1] = v8;
    v12[2] = *(_OWORD *)(a1 + 32);
    a4(v12, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C95FE76C(a1, a5);
    sub_1C9805B04(a2, a3, a6, v12);
    swift_bridgeObjectRelease();
    return sub_1C95FE76C((uint64_t)v12, a5);
  }
}

void ErrorResponses.init()(uint64_t *a1@<X8>)
{
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1EA5C2788;
  a1[3] = type metadata accessor for CATTemplateExecutor();
  a1[4] = (uint64_t)&off_1F23D6490;
  *a1 = v2;

  sub_1C9BEC838();
}

uint64_t ErrorResponses.errorInApp(deviceState:catOverrides:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98043CC);
}

uint64_t sub_1C98043CC()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_19_27();
  sub_1C9BED458();
  OUTLINED_FUNCTION_18_22();
  OUTLINED_FUNCTION_20_23(v2, v3, &qword_1EBC789E0);
  if (*(void *)(v1 + 80)) {
    OUTLINED_FUNCTION_2_37();
  }
  sub_1C95FE76C(v0, &qword_1EBC789E0);
  OUTLINED_FUNCTION_6_33();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_25_14(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C98044E0;
  OUTLINED_FUNCTION_24_14();
  OUTLINED_FUNCTION_23_19();
  return sub_1C9768CC0(v7, v8, v9, v10);
}

uint64_t sub_1C98044E0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *char v7 = v6;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 144) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C98045CC()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 144);
  return v1(v2);
}

uint64_t sub_1C9804630()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ErrorResponses.appLaunchFailed(deviceState:catOverrides:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98046AC);
}

uint64_t sub_1C98046AC()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_19_27();
  sub_1C9BED458();
  OUTLINED_FUNCTION_18_22();
  OUTLINED_FUNCTION_20_23(v2, v3, &qword_1EBC789E0);
  if (*(void *)(v1 + 80)) {
    OUTLINED_FUNCTION_2_37();
  }
  sub_1C95FE76C(v0, &qword_1EBC789E0);
  OUTLINED_FUNCTION_6_33();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_25_14(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C98047C0;
  OUTLINED_FUNCTION_24_14();
  OUTLINED_FUNCTION_23_19();
  return sub_1C9768CC0(v7, v8, v9, v10);
}

uint64_t sub_1C98047C0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *char v7 = v6;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 144) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t ErrorResponses.noAppsFound(deviceState:shouldSuggestStoreSearch:catOverrides:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 112) = a3;
  *(void *)(v4 + 120) = v3;
  *(unsigned char *)(v4 + 160) = a2;
  *(void *)(v4 + 104) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98048CC);
}

uint64_t sub_1C98048CC()
{
  OUTLINED_FUNCTION_135();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = sub_1C9BED458();
  sub_1C95FE5B0(v1, v0 + 56, &qword_1EBC789E0);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_1C97D87D8();
  }
  sub_1C95FE76C(v0 + 56, &qword_1EBC789E0);
  uint64_t v3 = *(void **)(v0 + 120);
  *(void *)(v0 + 96) = v2;
  sub_1C9803FC8();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v4 = *(void *)(v0 + 96);
  *(void *)(v0 + 128) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C9804A8C;
  uint64_t v6 = *(void *)(v0 + 112);
  return sub_1C9768CC0(21, v4, 0, v6);
}

uint64_t sub_1C9804A8C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *char v7 = v6;
  *(void *)(v4 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 152) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9804B80()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 152));
}

uint64_t sub_1C9804B9C()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ErrorResponses.appDoesNotSupportIntent(appDisplayInfo:catOverrides:)()
{
  OUTLINED_FUNCTION_24();
  v1[4] = v2;
  v1[5] = v0;
  v1[3] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  v1[6] = swift_task_alloc();
  uint64_t v4 = sub_1C9BECA08();
  v1[7] = v4;
  v1[8] = *(void *)(v4 - 8);
  v1[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9804CEC, 0, 0);
}

uint64_t sub_1C9804CEC()
{
  OUTLINED_FUNCTION_135();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1C95FE5B0(*(void *)(v0 + 24), v2, &qword_1EA58DC18);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C95FE76C(*(void *)(v0 + 48), &qword_1EA58DC18);
    uint64_t v3 = MEMORY[0x1E4FBC868];
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v4, *(void *)(v0 + 48), v6);
    sub_1C9BEC9E8();
    sub_1C9803FC8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = *(void *)(v0 + 16);
  }
  *(void *)(v0 + 80) = v3;
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 40), *(void *)(*(void *)(v0 + 40) + 24));
  char v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  *char v7 = v0;
  v7[1] = sub_1C9804E7C;
  uint64_t v8 = *(void *)(v0 + 32);
  return sub_1C9768CC0(16, v3, 0, v8);
}

uint64_t sub_1C9804E7C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *char v7 = v6;
  *(void *)(v4 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 104) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9804F70()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 104);
  return v1(v2);
}

uint64_t sub_1C9804FE0()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ErrorResponses.appNotFoundOnDevice(deviceState:catOverrides:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9805070);
}

uint64_t sub_1C9805070()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_19_27();
  sub_1C9BED458();
  OUTLINED_FUNCTION_18_22();
  OUTLINED_FUNCTION_20_23(v2, v3, &qword_1EBC789E0);
  if (*(void *)(v1 + 80)) {
    OUTLINED_FUNCTION_2_37();
  }
  sub_1C95FE76C(v0, &qword_1EBC789E0);
  OUTLINED_FUNCTION_6_33();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_25_14(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C98047C0;
  OUTLINED_FUNCTION_24_14();
  OUTLINED_FUNCTION_23_19();
  return sub_1C9768CC0(v7, v8, v9, v10);
}

uint64_t ErrorResponses.targetDeviceIncompatible(deviceState:catOverrides:)(uint64_t a1, uint64_t a2)
{
  v3[13] = a2;
  v3[14] = v2;
  v3[12] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98051A0);
}

uint64_t sub_1C98051A0()
{
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_19_27();
  sub_1C9BED458();
  OUTLINED_FUNCTION_18_22();
  OUTLINED_FUNCTION_20_23(v2, v3, &qword_1EBC789E0);
  if (*(void *)(v1 + 80)) {
    OUTLINED_FUNCTION_2_37();
  }
  sub_1C95FE76C(v0, &qword_1EBC789E0);
  OUTLINED_FUNCTION_6_33();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_25_14(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C98047C0;
  OUTLINED_FUNCTION_24_14();
  OUTLINED_FUNCTION_23_19();
  return sub_1C9768CC0(v7, v8, v9, v10);
}

ValueMetadata *type metadata accessor for ErrorResponses()
{
  return &type metadata for ErrorResponses;
}

uint64_t sub_1C98052C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C9604E34(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DD78);
    sub_1C9BEE358();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v16 + 56);
    uint64_t v11 = type metadata accessor for Input(0);
    sub_1C9729480(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v8, a3);
    sub_1C9BEE378();
    uint64_t *v4 = v16;
    swift_bridgeObjectRelease();
    uint64_t v12 = a3;
    uint64_t v13 = 0;
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = type metadata accessor for Input(0);
    uint64_t v12 = a3;
    uint64_t v13 = 1;
  }

  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
}

uint64_t sub_1C9805428()
{
  OUTLINED_FUNCTION_16_22();
  unint64_t v3 = sub_1C9604E34(v2, v1);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_13_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DD50);
  OUTLINED_FUNCTION_22_18();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(v8 + 56) + 8 * v3);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA597490);
  sub_1C9BEE378();
  *uint64_t v0 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

double sub_1C9805500@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C9604EA4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DD90);
    sub_1C9BEE358();
    sub_1C975CA3C(*(void *)(v9 + 48) + 40 * v6);
    sub_1C963C190((_OWORD *)(*(void *)(v9 + 56) + 32 * v6), a2);
    sub_1C9BEE378();
    *unint64_t v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1C9805630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C9604E34(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DD48);
    sub_1C9BEE358();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v16 + 56);
    uint64_t v11 = sub_1C9BEAA98();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * v8, v11);
    sub_1C9BEE378();
    uint64_t *v4 = v16;
    swift_bridgeObjectRelease();
    uint64_t v12 = a3;
    uint64_t v13 = 0;
    uint64_t v14 = v11;
  }
  else
  {
    uint64_t v14 = sub_1C9BEAA98();
    uint64_t v12 = a3;
    uint64_t v13 = 1;
  }

  return __swift_storeEnumTagSinglePayload(v12, v13, 1, v14);
}

double sub_1C98057A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  char v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C9604E34(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_9_26();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774E8);
    sub_1C9BEE358();
    swift_bridgeObjectRelease();
    sub_1C963C190((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1C9BEE378();
    void *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

double sub_1C98058D4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C9604E34(a1, a2);
  LOBYTE(a2) = v15;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_9_26();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1C9BEE358();
    swift_bridgeObjectRelease();
    a4(*(void *)(v17 + 56) + 40 * v14, a6);
    __swift_instantiateConcreteTypeFromMangledName(a5);
    sub_1C9BEE378();
    *uint64_t v10 = v17;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a6 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C9805A2C()
{
  OUTLINED_FUNCTION_16_22();
  unint64_t v3 = sub_1C9604E34(v2, v1);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0) {
    return 0;
  }
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_13_34();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DD80);
  OUTLINED_FUNCTION_22_18();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(*(void *)(v8 + 56) + 16 * v3);
  sub_1C9BEE378();
  *uint64_t v0 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

double sub_1C9805B04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v6 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_1C9604E34(a1, a2);
  LOBYTE(a2) = v11;
  swift_bridgeObjectRelease();
  if (a2)
  {
    swift_isUniquelyReferenced_nonNull_native();
    OUTLINED_FUNCTION_9_26();
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1C9BEE358();
    swift_bridgeObjectRelease();
    uint64_t v12 = (_OWORD *)(*(void *)(v15 + 56) + 48 * v10);
    long long v13 = v12[1];
    *a4 = *v12;
    a4[1] = v13;
    a4[2] = v12[2];
    sub_1C9BEE378();
    *uint64_t v6 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    a4[1] = 0u;
    a4[2] = 0u;
    *a4 = 0u;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_38()
{
  return sub_1C9803FC8();
}

void *OUTLINED_FUNCTION_6_33()
{
  *(void *)(v0 + 120) = v1;
  return __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 112), *(void *)(*(void *)(v0 + 112) + 24));
}

void OUTLINED_FUNCTION_9_26()
{
  *uint64_t v0 = 0x8000000000000000;
}

double OUTLINED_FUNCTION_10_27(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(unint64_t, uint64_t), uint64_t *a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1C98058D4(v7, v6, a3, a4, a5, (uint64_t)va);
}

void OUTLINED_FUNCTION_13_34()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_16_22()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_20_23(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C95FE5B0(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_21_18()
{
  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_22_18()
{
  return sub_1C9BEE358();
}

uint64_t OUTLINED_FUNCTION_25_14(uint64_t result)
{
  *(void *)(v1 + 128) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_16(uint64_t a1, ...)
{
  va_start(va, a1);
  return sub_1C95FE76C((uint64_t)va, v1);
}

uint64_t sub_1C9805DD8(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9805DF4);
}

uint64_t sub_1C9805DF4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = sub_1C9BED458();
  *(void *)(v0 + 32) = v1;
  uint64_t v7 = (char *)&dword_1EA597E78 + dword_1EA597E78;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v3;
  v2[1] = sub_1C9805ED4;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 56);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v7)(v4, v5, v1, 0);
}

uint64_t sub_1C9805ED4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9805FD4()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v7 = OUTLINED_FUNCTION_5_0(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v7, v12);
  long long v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v15 = OUTLINED_FUNCTION_22(v14);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17 = OUTLINED_FUNCTION_24_15();
  OUTLINED_FUNCTION_34_13(v17);
  sub_1C95FE5B0(a1, (uint64_t)v13, &qword_1EA58DC18);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  sub_1C9757DD4((uint64_t)v13, v20 + v18, &qword_1EA58DC18);
  uint64_t v21 = (void *)(v20 + v19);
  *uint64_t v21 = a2;
  v21[1] = a3;
  sub_1C9BEC838();
}

void static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v9 = OUTLINED_FUNCTION_22(v8);
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v11 = OUTLINED_FUNCTION_24_15();
  OUTLINED_FUNCTION_34_13(v11);
  sub_1C95FE5B0(a1, (uint64_t)v13, &qword_1EBC789E0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  sub_1C9757DD4((uint64_t)v13, v12 + 32, &qword_1EBC789E0);
  *(unsigned char *)(v12 + 72) = a2;
  *(void *)(v12 + 80) = a3;
  *(void *)(v12 + 88) = a4;
  sub_1C9BEC838();
}

void static ErrorTemplates.genericError(_:)(uint64_t a1, uint64_t a2)
{
}

void static ErrorTemplates.appNotFoundOnDevice(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C98062D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  strcpy((char *)(inited + 32), "responseMode");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  uint64_t result = sub_1C9BED458();
  qword_1EA58DDB0 = result;
  return result;
}

uint64_t sub_1C9806368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[14] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9806404;
  return static ErrorTemplates.genericError()((uint64_t)(v5 + 2));
}

uint64_t sub_1C9806404()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C98064E0()
{
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_13_35();
  uint64_t v1 = v0();
  OUTLINED_FUNCTION_18_23(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_22_0();
  return v9();
}

uint64_t sub_1C9806568()
{
  double v0 = OUTLINED_FUNCTION_21_19();
  v1(v0);
  OUTLINED_FUNCTION_15_23();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t static ErrorTemplates.genericError()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98065F4);
}

void sub_1C98065F4()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 24) = qword_1EA5C2788;
  OUTLINED_FUNCTION_33_12();
}

uint64_t sub_1C98066D4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C98067B0()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t sub_1C9806808()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void static ErrorTemplates.genericErrorLegacy(_:)(uint64_t a1, uint64_t a2)
{
}

void sub_1C98068A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v9);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a1;
  v10[5] = a2;
  __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  sub_1C9BEC838();
}

uint64_t sub_1C9806AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 96) = a4;
  *(void *)(v5 + 104) = a5;
  return MEMORY[0x1F4188298](sub_1C9806AC4, 0, 0);
}

void sub_1C9806AC4()
{
  OUTLINED_FUNCTION_26_0();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 112) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9806C34()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9806D20()
{
  swift_release();
  OUTLINED_FUNCTION_26_17();
  OUTLINED_FUNCTION_13_35();
  uint64_t v1 = v0();
  OUTLINED_FUNCTION_18_23(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_22_0();
  return v9();
}

uint64_t sub_1C9806DB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  double v0 = OUTLINED_FUNCTION_21_19();
  v1(v0);
  OUTLINED_FUNCTION_15_23();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t static ErrorTemplates.genericErrorLegacy()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9806E5C);
}

void sub_1C9806E5C()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 24) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9806FB4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C98070A0()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void static ErrorTemplates.errorInApp(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C9807130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v7 = OUTLINED_FUNCTION_22(v6);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v11 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  sub_1C95FE5B0(a1, (uint64_t)v14, &qword_1EBC789E0);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  _OWORD v12[3] = 0;
  sub_1C9757DD4((uint64_t)v14, (uint64_t)(v12 + 4), &qword_1EBC789E0);
  v12[9] = a2;
  v12[10] = a3;
  sub_1C9BEC838();
}

uint64_t sub_1C9807240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C98072E4;
  return static ErrorTemplates.errorInApp(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t sub_1C98072E4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t static ErrorTemplates.errorInApp(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98073D8);
}

void sub_1C98073D8()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = sub_1C9BED458();
  uint64_t v3 = OUTLINED_FUNCTION_17_22(v2);
  OUTLINED_FUNCTION_32_18(v3, v4, &qword_1EBC789E0);
  if (*(void *)(v0 - 16)) {
    OUTLINED_FUNCTION_1_35();
  }
  sub_1C95FE76C(v1, &qword_1EBC789E0);
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_29_14();
  sub_1C9BEC838();
}

uint64_t sub_1C9807578()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9807664()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t sub_1C98076BC()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void static ErrorTemplates.appLaunchFailed(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C9807750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C98072E4;
  return static ErrorTemplates.appLaunchFailed(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ErrorTemplates.appLaunchFailed(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C980780C);
}

void sub_1C980780C()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = sub_1C9BED458();
  uint64_t v3 = OUTLINED_FUNCTION_17_22(v2);
  OUTLINED_FUNCTION_32_18(v3, v4, &qword_1EBC789E0);
  if (*(void *)(v0 - 16)) {
    OUTLINED_FUNCTION_1_35();
  }
  sub_1C95FE76C(v1, &qword_1EBC789E0);
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_29_14();
  sub_1C9BEC838();
}

uint64_t sub_1C98079AC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9807A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  uint64_t v10 = (void *)swift_task_alloc();
  v7[14] = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_1C98072E4;
  return static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:)((uint64_t)(v7 + 2), a4, a5);
}

uint64_t static ErrorTemplates.noAppsFound(deviceState:shouldSuggestStoreSearch:)(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 160) = a3;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9807B68);
}

void sub_1C9807B68()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = sub_1C9BED458();
  uint64_t v3 = OUTLINED_FUNCTION_17_22(v2);
  OUTLINED_FUNCTION_32_18(v3, v4, &qword_1EBC789E0);
  if (*(void *)(v0 - 16)) {
    OUTLINED_FUNCTION_1_35();
  }
  sub_1C95FE76C(v1, &qword_1EBC789E0);
  sub_1C9803FC8();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_29_14();
  sub_1C9BEC838();
}

uint64_t sub_1C9807D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[14] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1C98072E4;
  return static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:)();
}

uint64_t sub_1C9807DE4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  uint64_t v4 = sub_1C9BECA08();
  if (!__swift_getEnumTagSinglePayload(v0 + v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9807EDC()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v1);
  uint64_t v4 = *(void *)(v0
                 + ((*(void *)(v3 + 64)
                   + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_17_0(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C9615888;
  uint64_t v8 = OUTLINED_FUNCTION_106_0();
  return sub_1C9807D40(v8, v9, v10, v11, v12, v4);
}

uint64_t sub_1C9807FC8()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9808018()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + 32;
  char v6 = *(unsigned char *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = (void *)OUTLINED_FUNCTION_17_0(v9);
  *uint64_t v10 = v11;
  v10[1] = sub_1C9615888;
  return sub_1C9807A98(v2, v3, v4, v5, v6, v8, v7);
}

uint64_t sub_1C98080E8()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9806368(v3, v4, v5, v6, v7);
}

uint64_t static ErrorTemplates.appDoesNotSupportIntent(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_24();
  v0[3] = v1;
  v0[4] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_22(v3);
  v0[5] = swift_task_alloc();
  uint64_t v4 = sub_1C9BECA08();
  v0[6] = v4;
  OUTLINED_FUNCTION_5_0(v4);
  v0[7] = v5;
  v0[8] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1C9808248()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  v0[2] = sub_1C9BED458();
  sub_1C95FE5B0(v3, v2, &qword_1EA58DC18);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C95FE76C(v0[5], &qword_1EA58DC18);
  }
  else
  {
    uint64_t v5 = v0[7];
    uint64_t v4 = v0[8];
    uint64_t v6 = v0[6];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v4, v0[5], v6);
    sub_1C9BEC9E8();
    sub_1C9803FC8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[2];
  v0[9] = qword_1EA5C2788;
  v0[10] = v7;
  sub_1C9BEC838();
}

uint64_t sub_1C9808470()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C980855C()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t sub_1C98085C8()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9808654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C98072E4;
  return static ErrorTemplates.appNotFoundOnDevice(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ErrorTemplates.appNotFoundOnDevice(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9808710);
}

void sub_1C9808710()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = sub_1C9BED458();
  uint64_t v3 = OUTLINED_FUNCTION_17_22(v2);
  OUTLINED_FUNCTION_32_18(v3, v4, &qword_1EBC789E0);
  if (*(void *)(v0 - 16)) {
    OUTLINED_FUNCTION_1_35();
  }
  sub_1C95FE76C(v1, &qword_1EBC789E0);
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_29_14();
  sub_1C9BEC838();
}

void static ErrorTemplates.targetDeviceIncompatible(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C98088D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C98072E4;
  return static ErrorTemplates.targetDeviceIncompatible(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ErrorTemplates.targetDeviceIncompatible(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C980898C);
}

void sub_1C980898C()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = sub_1C9BED458();
  uint64_t v3 = OUTLINED_FUNCTION_17_22(v2);
  OUTLINED_FUNCTION_32_18(v3, v4, &qword_1EBC789E0);
  if (*(void *)(v0 - 16)) {
    OUTLINED_FUNCTION_1_35();
  }
  sub_1C95FE76C(v1, &qword_1EBC789E0);
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_29_14();
  sub_1C9BEC838();
}

uint64_t static ErrorTemplates.pommesTimeout()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9808B44);
}

void sub_1C9808B44()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 24) = qword_1EA5C2788;
  OUTLINED_FUNCTION_33_12();
}

uint64_t sub_1C9808C24()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9808D00()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9808D3C()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_93_0();
  return sub_1C9808654(v3, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_7Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9808E18()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9806AA4(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9808EB8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_102();
  return v4(v3);
}

uint64_t sub_1C9808F54()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_93_0();
  return sub_1C9807240(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9808FF0()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_93_0();
  return sub_1C9807750(v3, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_15Tm()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C98090DC()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_93_0();
  return sub_1C98088D0(v3, v4, v5, v6, v7, v8);
}

ValueMetadata *type metadata accessor for ErrorTemplates()
{
  return &type metadata for ErrorTemplates;
}

void OUTLINED_FUNCTION_1_35()
{
  sub_1C95FD5D8(v1, v0 - 80);
  __swift_project_boxed_opaque_existential_1((void *)(v0 - 80), *(void *)(v2 + 40));
  sub_1C97D87D8();
}

uint64_t OUTLINED_FUNCTION_6_34()
{
  return sub_1C9803FC8();
}

void OUTLINED_FUNCTION_15_23()
{
  sub_1C9669B5C(v0, 0, 0, 0, 0, 0, 0, 0, 0, v1);
}

uint64_t OUTLINED_FUNCTION_17_22(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

void OUTLINED_FUNCTION_18_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  sub_1C9669B5C(a13, a12, v15, v16, v17, v18, v19, v20, v13, v14);
}

double OUTLINED_FUNCTION_21_19()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_24_15()
{
  return sub_1C9BEDA58();
}

uint64_t OUTLINED_FUNCTION_28_13()
{
  return *(void *)(v0 + 104);
}

void OUTLINED_FUNCTION_29_14()
{
  uint64_t v2 = v1[12];
  v1[15] = v0;
  v1[16] = v2;
}

uint64_t OUTLINED_FUNCTION_32_18(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C95FE5B0(v4, v3, a3);
}

void OUTLINED_FUNCTION_33_12()
{
  sub_1C9BEC838();
}

uint64_t OUTLINED_FUNCTION_34_13(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t sub_1C98093B8()
{
  swift_getErrorValue();
  uint64_t DynamicType = swift_getDynamicType();
  swift_getErrorValue();
  if (DynamicType != swift_getDynamicType()) {
    goto LABEL_19;
  }
  swift_getErrorValue();
  uint64_t v1 = sub_1C9BEE6E8();
  uint64_t v3 = v2;
  swift_getErrorValue();
  if (v1 == sub_1C9BEE6E8() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v7 = 0;
    if ((v6 & 1) == 0) {
      return v7 & 1;
    }
  }
  uint64_t v8 = (void *)sub_1C9BEA8B8();
  uint64_t v9 = (void *)sub_1C9BEA8B8();
  id v10 = objc_msgSend(v8, sel_domain);
  uint64_t v11 = sub_1C9BED568();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v9, sel_domain);
  uint64_t v15 = sub_1C9BED568();
  uint64_t v17 = v16;

  if (v11 == v15 && v13 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v19 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_18;
    }
  }
  id v20 = objc_msgSend(v8, sel_code);
  if (v20 != objc_msgSend(v9, sel_code))
  {
LABEL_18:

LABEL_19:
    char v7 = 0;
    return v7 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_0_30();
  OUTLINED_FUNCTION_0_30();
  char v7 = 1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t OUTLINED_FUNCTION_0_30()
{
  return sub_1C9BEE348();
}

uint64_t ErrorWithCodeConcept.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void *ErrorWithCodeConcept.__allocating_init(app:errorCode:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[7] = 0xD000000000000013;
  result[8] = 0x80000001C9C1D690;
  result[6] = a5;
  return result;
}

void *ErrorWithCodeConcept.init(app:errorCode:intent:intentResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a1;
  void v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[7] = 0xD000000000000013;
  v5[8] = 0x80000001C9C1D690;
  v5[6] = a5;
  return v5;
}

uint64_t ErrorWithCodeConcept.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ErrorWithCodeConcept.__deallocating_deinit()
{
  ErrorWithCodeConcept.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C98097C4()
{
  return ErrorWithCodeConcept.conceptType.getter();
}

uint64_t type metadata accessor for ErrorWithCodeConcept()
{
  return self;
}

uint64_t method lookup function for ErrorWithCodeConcept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ErrorWithCodeConcept);
}

uint64_t dispatch thunk of ErrorWithCodeConcept.__allocating_init(app:errorCode:intent:intentResponse:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ErrorWithCodeConcept.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

BOOL static InterruptionPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t InterruptionPolicy.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t InterruptionPolicy.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t ExecutionContext.init(outputPublisher:aceServiceInvoker:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C95FD5D8(a1, a3);

  return sub_1C95FD5D8(a2, a3 + 40);
}

unint64_t sub_1C9809938()
{
  unint64_t result = qword_1EA58DE90;
  if (!qword_1EA58DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DE90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for InterruptionPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9809A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InterruptionPolicy()
{
  return &type metadata for InterruptionPolicy;
}

ValueMetadata *type metadata accessor for ExecutionContext()
{
  return &type metadata for ExecutionContext;
}

uint64_t dispatch thunk of Executable.interruptionPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Executable.withSideEffect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Executable.execute(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_1C969F5FC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of Executable.cancel(error:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void SiriEnvironment.aceServiceContext.getter()
{
  type metadata accessor for AceServiceContextProvider();
  sub_1C980ED6C(&qword_1EA58DEA0, v0, (void (*)(uint64_t))type metadata accessor for AceServiceContextProvider);

  sub_1C9BEC338();
}

uint64_t type metadata accessor for AceServiceContextProvider()
{
  return self;
}

uint64_t sub_1C9809C70(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1C9809CB0())()
{
  return j__swift_endAccess;
}

uint64_t AceServiceContextProvider.__allocating_init(storage:)()
{
  swift_release();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 1;
  return result;
}

uint64_t AceServiceContextProvider.init(storage:)()
{
  swift_release();
  *(unsigned char *)(v0 + 16) = 1;
  return v0;
}

uint64_t AceServiceContextProvider.deinit()
{
  return v0;
}

uint64_t AceServiceContextProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C9809D6C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for AceServiceContextProvider();
  uint64_t result = sub_1C9BED188();
  *a1 = result;
  return result;
}

void sub_1C9809DA8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = a1;
  char v4 = *(unsigned char *)(v2 + 24);
  *(unsigned char *)(v2 + 24) = a2;
  sub_1C980A1DC(v3, v4);
}

void sub_1C9809DC4()
{
}

void sub_1C9809DE0()
{
}

void sub_1C9809DFC(uint64_t *a1)
{
}

void sub_1C9809E9C(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  sub_1C980A190(v3, v4);
  sub_1C9809F00(v3, v4, a1);

  sub_1C980A1DC(v3, v4);
}

void sub_1C9809F00(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 1:
      *(void *)a3 = a1;
      char v6 = 2;
      goto LABEL_4;
    case 2:
      goto LABEL_13;
    case 3:
      *(void *)a3 = a1;
      *(unsigned char *)(a3 + 8) = 0;
      OUTLINED_FUNCTION_35_14();
      goto LABEL_6;
    case 4:
      if (!a1)
      {
LABEL_13:
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_1C9BECF88();
        __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
        sub_1C980A190(a1, a2);
        sub_1C980A190(a1, a2);
        uint64_t v12 = sub_1C9BECF78();
        os_log_type_t v13 = sub_1C9BEDC88();
        if (OUTLINED_FUNCTION_65_0(v13))
        {
          id v14 = (uint8_t *)OUTLINED_FUNCTION_67();
          uint64_t v18 = OUTLINED_FUNCTION_35_0();
          *(_DWORD *)id v14 = 136315138;
          sub_1C980A190(a1, a2);
          uint64_t v15 = sub_1C9BED5D8();
          sub_1C95FF228(v15, v16, &v18);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          sub_1C980A1DC(a1, a2);
          sub_1C980A1DC(a1, a2);
          _os_log_impl(&dword_1C95F9000, v12, v3, "ExecuteRemoteFlow exit value being read, but we're still in-progress in state=%s", v14, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }
        else
        {
          sub_1C980A1DC(a1, a2);
          sub_1C980A1DC(a1, a2);
        }

        *(void *)a3 = 0;
        goto LABEL_19;
      }
      if (a1 == (void *)1)
      {
        *(void *)a3 = 1;
LABEL_19:
        *(unsigned char *)(a3 + 8) = 3;
        goto LABEL_20;
      }
      *(void *)a3 = 3;
      *(unsigned char *)(a3 + 8) = 3;
LABEL_20:
      OUTLINED_FUNCTION_35_14();
      return;
    default:
      *(void *)a3 = a1;
      char v6 = 1;
LABEL_4:
      *(unsigned char *)(a3 + 8) = v6;
      OUTLINED_FUNCTION_35_14();
LABEL_6:
      id v9 = v7;
      return;
  }
}

id sub_1C980A190(id result, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C980A1DC(id a1, char a2)
{
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

void ExecuteOnRemoteFlow.__allocating_init(device:outputPublisher:)()
{
}

void ExecuteOnRemoteFlow.init(device:outputPublisher:)()
{
  OUTLINED_FUNCTION_18_24();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  uint64_t v2 = type metadata accessor for Input(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DEB0);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_41();
}

void ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:)()
{
}

void ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_18_24();
  uint64_t v4 = v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  uint64_t v5 = type metadata accessor for Input(0);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DEB0);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_41();
}

void ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)()
{
}

void ExecuteOnRemoteFlow.init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_18_24();
  uint64_t v4 = v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  uint64_t v5 = type metadata accessor for Input(0);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DEB0);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_41();
}

void ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:aceService:deviceState:)()
{
}

void ExecuteOnRemoteFlow.init(inputToExecute:device:outputPublisher:aceService:deviceState:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_18_24();
  uint64_t v4 = v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  uint64_t v5 = type metadata accessor for Input(0);
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DEB0);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_3_41();
}

uint64_t sub_1C980AED4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = v5 - v4;
  int v7 = *(unsigned __int8 *)(v0 + 24);
  if (v7 != 2 && (v7 != 4 || *(void *)(v0 + 16))) {
    return 0;
  }
  uint64_t v9 = OUTLINED_FUNCTION_50();
  sub_1C962C880(v9, v10, v11);
  type metadata accessor for Input(0);
  uint64_t v8 = 1;
  OUTLINED_FUNCTION_36_7();
  __swift_storeEnumTagSinglePayload(v12, v13, v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute;
  OUTLINED_FUNCTION_3_0();
  sub_1C980EB8C(v6, v16);
  swift_endAccess();
  return v8;
}

void sub_1C980AFCC()
{
  OUTLINED_FUNCTION_24();
  v1[25] = v2;
  v1[26] = v0;
  uint64_t v3 = type metadata accessor for ExecuteOnRemotePayload();
  v1[27] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[28] = OUTLINED_FUNCTION_16();
  sub_1C9BECC28();
}

void sub_1C980B108()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[34];
  swift_beginAccess();
  uint64_t v3 = OUTLINED_FUNCTION_50();
  sub_1C9608D98(v3, v4, v5);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    sub_1C95FE76C(v0[33], &qword_1EA589178);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C9BECF88();
    int v7 = OUTLINED_FUNCTION_34(v6, (uint64_t)qword_1EBC7A520);
    os_log_type_t v8 = sub_1C9BEDC88();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v9);
      OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v7, v8, "execute() called with no input to execute? If you are pushing this flow from an existing flow, you must provide an initialInput. If this flow was returned as a main flow from makeFlowFor, something has gone wrong and you should file a radar.");
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v10 = v0[25];

    sub_1C9809DA8(1, 4);
    static ExecuteResponse.complete()(v10);
    OUTLINED_FUNCTION_7_34();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_10_1();
    __asm { BRAA            X1, X16 }
  }
  sub_1C9729480(v0[33], v0[35]);
  sub_1C9809DC4();
}

uint64_t sub_1C980B9C8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  *(void *)(v1 + 328) = v0;
  *(unsigned char *)(v1 + 153) = v2;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C980BAA0()
{
  uint64_t v81 = v0;
  char v2 = *(void **)(v0 + 328);
  if ((*(unsigned char *)(v0 + 153) & 1) == 0)
  {
    id v3 = v2;
    uint64_t v4 = sub_1C9BECF78();
    os_log_type_t v5 = sub_1C9BEDC78();
    uint64_t v6 = (void *)v5;
    BOOL v7 = os_log_type_enabled(v4, v5);
    os_log_type_t v8 = *(void **)(v0 + 328);
    if (v7)
    {
      uint64_t v74 = v0 + 168;
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v76 = OUTLINED_FUNCTION_35_0();
      uint64_t v80 = v76;
      *(_DWORD *)uint64_t v9 = 136315138;
      id v10 = objc_msgSend(v3, sel_description);
      uint64_t v11 = sub_1C9BED568();
      unint64_t v1 = v12;

      sub_1C9793968(v8);
      *(void *)(v0 + 168) = sub_1C95FF228(v11, v1, &v80);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9793968(v8);
      sub_1C9793968(v8);
      _os_log_impl(&dword_1C95F9000, v4, (os_log_type_t)v6, "ExecuteOnRemoteFlow: Got response from SAExecuteOnRemoteRequest: %s", v9, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C9793968(*(id *)(v0 + 328));
      sub_1C9793968(v8);
    }

    id v78 = v3;
    if (objc_msgSend(v3, sel_needsUserInput))
    {
      uint64_t v24 = sub_1C9BECF78();
      os_log_type_t v25 = sub_1C9BEDC78();
      uint64_t v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v27 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v27);
        OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v24, (os_log_type_t)v26, "ExecuteOnRemoteFlow: remote request is waiting on user input. Will return .ongoing(requireInput: true)");
        OUTLINED_FUNCTION_11_4();
      }
      OUTLINED_FUNCTION_14_28();
      id v28 = v3;
      sub_1C9809DA8(v26, 2);

      OUTLINED_FUNCTION_24_16();
      sub_1C980F660(v1, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
      OUTLINED_FUNCTION_26_1();
      v29();
      sub_1C980F660(v76, (void (*)(void))type metadata accessor for Input);
      static ExecuteResponse.ongoing(requireInput:)(1, v74);
    }
    else
    {
      unsigned int v30 = objc_msgSend(v3, sel_needsServerExecution);
      uint64_t v31 = sub_1C9BECF78();
      uint64_t v32 = sub_1C9BEDC78();
      BOOL v33 = os_log_type_enabled(v31, (os_log_type_t)v32);
      if (v30)
      {
        if (v33)
        {
          uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_19();
          OUTLINED_FUNCTION_49(v34);
          OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v31, (os_log_type_t)v32, "ExecuteOnRemoteFlow: remote request redirected to the server. Will return .unhandled(reason: .needsServerExecution)");
          OUTLINED_FUNCTION_11_4();
        }
        uint64_t v35 = *(void *)(v0 + 328);
        uint64_t v36 = *(void **)(v0 + 304);
        uint64_t v37 = *(void *)(v0 + 248);
        uint64_t v75 = *(void *)(v0 + 256);
        uint64_t v77 = *(void *)(v0 + 280);
        os_log_t log = *(os_log_t *)(v0 + 240);
        uint64_t v38 = *(void *)(v0 + 224);
        uint64_t v39 = *(void *)(v0 + 200);

        id v40 = v78;
        sub_1C9809DA8(v35, 3);

        OUTLINED_FUNCTION_24_16();
        sub_1C980F660(v38, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
        (*(void (**)(uint64_t, os_log_t))(v37 + 8))(v75, log);
        sub_1C980F660(v77, (void (*)(void))type metadata accessor for Input);
        uint64_t v41 = type metadata accessor for ExecuteResponse(0);
        uint64_t v42 = v39 + *(int *)(v41 + 36);
        uint64_t v43 = type metadata accessor for PluginAction();
        __swift_storeEnumTagSinglePayload(v42, 1, 1, v43);
        *(unsigned char *)uint64_t v39 = 3;
        *(void *)(v39 + 8) = 0;
        *(void *)(v39 + 24) = 0;
        *(unsigned char *)(v39 + 16) = 0;
        *(unsigned char *)(v39 + 32) = 3;
        uint64_t v44 = (_OWORD *)(v39 + *(int *)(v41 + 40));
        *uint64_t v44 = 0u;
        v44[1] = 0u;
      }
      else
      {
        if (v33)
        {
          uint64_t v46 = (uint8_t *)OUTLINED_FUNCTION_19();
          *(_WORD *)uint64_t v46 = 0;
          _os_log_impl(&dword_1C95F9000, v31, (os_log_type_t)v32, "ExecuteOnRemoteFlow: remote request is not waiting on user input. Will return .complete", v46, 2u);
          OUTLINED_FUNCTION_11_4();
        }
        OUTLINED_FUNCTION_14_28();
        id v47 = v3;
        sub_1C9809DA8(v32, 3);

        OUTLINED_FUNCTION_24_16();
        sub_1C980F660(v1, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
        OUTLINED_FUNCTION_26_1();
        v48();
        sub_1C980F660(v76, (void (*)(void))type metadata accessor for Input);
        static ExecuteResponse.complete()(v74);
      }
    }
    OUTLINED_FUNCTION_7_34();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_6_11();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v0 + 160) = v2;
  id v13 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  uint64_t v14 = &loc_1C9BEF000;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_33;
  }
  uint64_t v15 = *(void **)(v0 + 144);
  *(void *)(v0 + 336) = v15;
  int v16 = *(unsigned __int8 *)(v0 + 152);
  if (v16 != 1)
  {
    uint64_t v45 = v15;
LABEL_32:
    sub_1C96B11CC(v45, v16);
    goto LABEL_33;
  }
  sub_1C96BD36C(v15, 1u);
  sub_1C96BD36C(v15, 1u);
  id v17 = v15;
  uint64_t v18 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC88();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v80 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)id v20 = 136315138;
    uint64_t v21 = sub_1C963DC60(v17, (SEL *)&selRef_reason);
    if (v22)
    {
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0x3E6C696E3CLL;
      unint64_t v23 = 0xE500000000000000;
    }
    *(void *)(v0 + 192) = sub_1C95FF228(v21, v23, &v80);
    sub_1C9BEDF68();
    uint64_t v14 = (void *)&loc_1C9BEF000;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_20_24();
    _os_log_impl(&dword_1C95F9000, v18, v19, "ExecuteOnRemoteFlow: Error submitting SAExecuteOnRemoteRequest: Received SACommandFailed: reason='%s'", v20, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_20_24();
  }

  uint64_t v51 = sub_1C963DC60(v17, (SEL *)&selRef_reason);
  if (!v52)
  {
    sub_1C96B11CC(v15, 1u);
    uint64_t v45 = v15;
    LOBYTE(v16) = 1;
    goto LABEL_32;
  }
  int v53 = sub_1C96B15B8(v51, v52);
  swift_bridgeObjectRelease();
  if (v53 == 6)
  {
    OUTLINED_FUNCTION_20_24();
LABEL_33:
    sub_1C979C5D8(*(id *)(v0 + 328));
    id v54 = v2;
    uint64_t v55 = sub_1C9BECF78();
    os_log_type_t v56 = sub_1C9BEDC88();
    BOOL v57 = os_log_type_enabled(v55, v56);
    uint64_t v58 = *(void **)(v0 + 328);
    if (v57)
    {
      id v79 = v2;
      uint64_t v59 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v80 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v59 = v14[172];
      *(void *)(v0 + 176) = v79;
      id v60 = v79;
      uint64_t v61 = sub_1C9BED5D8();
      *(void *)(v0 + 184) = sub_1C95FF228(v61, v62, &v80);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9793968(v58);
      sub_1C9793968(v58);
      _os_log_impl(&dword_1C95F9000, v55, v56, "ExecuteOnRemoteFlow: Error submitting SAExecuteOnRemoteRequest: %s", v59, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      char v2 = v79;
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C9793968(*(id *)(v0 + 328));
      sub_1C9793968(v58);
    }

    uint64_t v63 = *(void *)(v0 + 328);
    id v64 = v2;
    sub_1C9809DA8(v63, 1);
    uint64_t v65 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v65;
    *uint64_t v65 = v0;
    v65[1] = sub_1C980C5E0;
    OUTLINED_FUNCTION_36_14();
    OUTLINED_FUNCTION_6_11();
    return sub_1C980D024();
  }
  uint64_t v68 = *(void *)(v0 + 328);
  id v69 = v2;
  sub_1C9809DA8(v68, 1);
  uint64_t v70 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v70;
  *uint64_t v70 = v0;
  v70[1] = sub_1C980C3D4;
  OUTLINED_FUNCTION_36_14();
  OUTLINED_FUNCTION_6_11();
  return sub_1C980D288(v71);
}

uint64_t sub_1C980C3D4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *char v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C980C49C()
{
  uint64_t v1 = *(void **)(v0 + 328);
  char v2 = *(void **)(v0 + 336);
  unint64_t v3 = *(void *)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v12 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 248);
  uint64_t v6 = *(void *)(v0 + 256);
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 200);

  sub_1C96B11CC(v2, 1u);
  sub_1C96B11CC(v2, 1u);
  sub_1C9793968(v1);
  sub_1C963F610(v4, v3);
  sub_1C980F660(v8, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  sub_1C980F660(v12, (void (*)(void))type metadata accessor for Input);
  static ExecuteResponse.complete()(v9);
  OUTLINED_FUNCTION_7_34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v10();
}

uint64_t sub_1C980C5E0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *char v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C980C6A8()
{
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);

  sub_1C9793968(v1);
  uint64_t v5 = OUTLINED_FUNCTION_50();
  sub_1C963F610(v5, v6);
  sub_1C980F660(v3, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
  uint64_t v7 = OUTLINED_FUNCTION_38_10();
  v8(v7);
  sub_1C980F660(v2, (void (*)(void))type metadata accessor for Input);
  static ExecuteResponse.complete()(v4);
  OUTLINED_FUNCTION_7_34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v9();
}

uint64_t sub_1C980C7C8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C980C8AC()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 200);
  sub_1C9809DA8(2, 4);
  OUTLINED_FUNCTION_26_1();
  v3();
  sub_1C980F660(v1, (void (*)(void))type metadata accessor for Input);
  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_7_34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v4();
}

uint64_t sub_1C980C988()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C980CA50()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 200);
  sub_1C980EC78();
  uint64_t v3 = swift_allocError();
  sub_1C9809DA8(v3, 0);
  sub_1C980F660(v1, (void (*)(void))type metadata accessor for Input);
  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_7_34();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v4();
}

void sub_1C980CB1C(void **a1)
{
  uint64_t v1 = *a1;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  osos_log_t log = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v12 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    id v8 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v9 = sub_1C9BED5D8();
    sub_1C95FF228(v9, v10, &v12);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, oslog, v5, "ExecuteOnRemoteFlow: Could not retrieve reference resolution entities: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v7, -1, -1);
    MEMORY[0x1CB78C440](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_1C980CD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C980CD30);
}

id sub_1C980CD30()
{
  uint64_t v1 = (void *)v0[9];
  sub_1C95FD5F0(v0[8] + 72, (uint64_t)(v0 + 2));
  uint64_t v2 = (void *)OUTLINED_FUNCTION_50();
  __swift_project_boxed_opaque_existential_1(v2, v3);
  id result = objc_msgSend(v1, sel_remoteExecution);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id result = (id)sub_1C980F5B0(result);
  v0[10] = v5;
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = (void *)swift_task_alloc();
  v0[11] = v6;
  sub_1C980F620();
  *uint64_t v6 = v0;
  v6[1] = sub_1C980CE54;
  return (id)AceServiceInvokerAsync.submitToRemote<A>(_:_:)();
}

uint64_t sub_1C980CE54()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v7 = v6;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v5 + 104) = v3;
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C980CF50()
{
  OUTLINED_FUNCTION_24();
  **(void **)(v0 + 56) = *(void *)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C980CFB8()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C980D024()
{
  *(void *)(v1 + 96) = v0;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C980D03C);
}

void sub_1C980D03C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_definedErrorDialogsFeatureToggle + 24);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_definedErrorDialogsFeatureToggle + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_definedErrorDialogsFeatureToggle), v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_9_27(inited, (__n128)xmmword_1C9BEF570);
  OUTLINED_FUNCTION_39_11((void *)(v1 + 32));
}

uint64_t sub_1C980D1AC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C980D288(char a1)
{
  *(void *)(v2 + 88) = v1;
  *(unsigned char *)(v2 + 113) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C980D2A4);
}

void sub_1C980D2A4()
{
  uint64_t v3 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DF20);
  uint64_t inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_9_27(inited, (__n128)xmmword_1C9BEF570);
  OUTLINED_FUNCTION_39_11((void *)(v1 + 32));
}

uint64_t sub_1C980D6A0()
{
  OUTLINED_FUNCTION_24();
  *(void *)(v1 + 264) = v2;
  *(void *)(v1 + 272) = v0;
  *(unsigned char *)(v1 + 336) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  OUTLINED_FUNCTION_22(v4);
  *(void *)(v1 + 280) = swift_task_alloc();
  *(void *)(v1 + 288) = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v5);
  *(void *)(v1 + 296) = OUTLINED_FUNCTION_16();
  uint64_t v6 = type metadata accessor for AceOutput();
  *(void *)(v1 + 304) = v6;
  OUTLINED_FUNCTION_22(v6);
  *(void *)(v1 + 312) = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C980D784()
{
  OUTLINED_FUNCTION_33();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 272) + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor), *(void *)(*(void *)(v0 + 272) + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor + 24));
  uint64_t v5 = (char *)&dword_1EA597E78 + dword_1EA597E78;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C980D858;
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 336);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v5)(v0 + 16, v3, v2, 0);
}

uint64_t sub_1C980D858()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0) {

  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

void sub_1C980D93C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (void *)OUTLINED_FUNCTION_38_10();
  __swift_project_boxed_opaque_existential_1(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v3, v4);
  uint64_t v7 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v7);
  *(void *)(v0 + 200) = 0;
  *(_OWORD *)(v0 + 184) = 0u;
  *(_OWORD *)(v0 + 168) = 0u;
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_1C980DBD0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  if (v0) {

  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v3 + 88);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1C980DCBC()
{
  uint64_t v16 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v3 = sub_1C9BECF88();
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  uint64_t v5 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, v4, v3);
  OUTLINED_FUNCTION_36_7();
  __swift_storeEnumTagSinglePayload(v6, v7, v8, v3);
  sub_1C9608D98(v1, v2, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    sub_1C95FE76C(*(void *)(v0 + 280), &qword_1EBC7A230);
  }
  else
  {
    uint64_t v9 = sub_1C9BECF78();
    os_log_type_t v10 = sub_1C9BEDC88();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = OUTLINED_FUNCTION_35_0();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315650;
      uint64_t v12 = sub_1C9BEE1B8();
      *(void *)(v0 + 240) = sub_1C95FF228(v12, v13, &v15);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      *(void *)(v0 + 256) = 315;
      sub_1C9BEDF68();
      *(_WORD *)(v11 + 22) = 2080;
      *(void *)(v0 + 248) = sub_1C95FF228(0xD000000000000034, 0x80000001C9C1D820, &v15);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v9, v10, "FatalError at %s:%lu - %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    (*(void (**)(void, uint64_t))(v5 + 8))(*(void *)(v0 + 280), v3);
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  uint64_t v14 = v0 + 208;
  *(_OWORD *)(v14 - 64) = 0u;
  *(void *)(v14 - 48) = 0;
  *(_OWORD *)(v14 - 80) = 0u;
  sub_1C9BEC838();
}

uint64_t sub_1C980E0BC()
{
  OUTLINED_FUNCTION_33();
  sub_1C980F660(*(void *)(v0 + 312), (void (*)(void))type metadata accessor for AceOutput);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C980E158()
{
  OUTLINED_FUNCTION_33();
  sub_1C980F660(*(void *)(v0 + 312), (void (*)(void))type metadata accessor for AceOutput);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

void sub_1C980E200()
{
  uint64_t v0 = sub_1C9BEAB58();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_6_0();
  sub_1C980E414();
}

void sub_1C980E414()
{
  type metadata accessor for IdentifiedUser();
  OUTLINED_FUNCTION_8_4();
  uint64_t v2 = MEMORY[0x1F4188790](v0, v1);
  MEMORY[0x1F4188790](v2, v3);
  sub_1C9809DE0();
}

uint64_t ExecuteOnRemoteFlow.deinit()
{
  sub_1C980A1DC(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  sub_1C95FE76C(v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_inputToExecute, &qword_1EA589178);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_outputPublisher);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_referenceResolutionClient);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_catExecutor);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow19ExecuteOnRemoteFlow_definedErrorDialogsFeatureToggle);
  swift_release();
  swift_release();
  return v0;
}

uint64_t ExecuteOnRemoteFlow.__deallocating_deinit()
{
  ExecuteOnRemoteFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C980E864()
{
  return sub_1C980AED4() & 1;
}

uint64_t sub_1C980E88C()
{
  return sub_1C980D020();
}

void sub_1C980E8B0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  sub_1C980AFCC();
}

void sub_1C980E948(uint64_t a1@<X8>)
{
}

uint64_t static ExecuteOnRemoteDeviceSpecification.== infix(_:_:)()
{
  return 1;
}

uint64_t ExecuteOnRemoteDeviceSpecification.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t ExecuteOnRemoteDeviceSpecification.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C980E9E0()
{
  return ExecuteOnRemoteDeviceSpecification.hashValue.getter();
}

uint64_t sub_1C980E9F8()
{
  return ExecuteOnRemoteDeviceSpecification.hash(into:)();
}

void sub_1C980EA10()
{
}

void sub_1C980EA3C()
{
}

void sub_1C980EA68()
{
}

void sub_1C980EA8C()
{
}

void sub_1C980EAB8()
{
}

void sub_1C980EAE4()
{
}

void sub_1C980EB14()
{
}

void sub_1C980EB38()
{
}

void sub_1C980EB68()
{
}

uint64_t sub_1C980EB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C980EBF4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1C980EC20(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C980EC48@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1C980EC78()
{
  unint64_t result = qword_1EA58DED0;
  if (!qword_1EA58DED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58DED0);
  }
  return result;
}

uint64_t type metadata accessor for ExecuteOnRemoteFlow()
{
  uint64_t result = qword_1EA58DF00;
  if (!qword_1EA58DF00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C980ED0C(void *a1)
{
  return sub_1C963DC60(a1, (SEL *)&selRef_reason);
}

void sub_1C980ED18(id a1, unint64_t a2, char a3)
{
  if (a3) {

  }
  else {
    sub_1C963F610((uint64_t)a1, a2);
  }
}

uint64_t sub_1C980ED24(uint64_t a1, uint64_t a2)
{
  return sub_1C980ED6C(&qword_1EBC77440, a2, (void (*)(uint64_t))type metadata accessor for AceServiceContextProvider);
}

uint64_t sub_1C980ED6C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C980EDB4(uint64_t a1)
{
  uint64_t result = sub_1C980ED6C(&qword_1EA58DEE0, 255, (void (*)(uint64_t))type metadata accessor for ExecuteOnRemoteFlow);
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C980EE14()
{
  unint64_t result = qword_1EA58DEF8;
  if (!qword_1EA58DEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DEF8);
  }
  return result;
}

uint64_t sub_1C980EE60@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C977DAC0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C980EE90(char *a1)
{
  return sub_1C9809C70(*a1);
}

uint64_t method lookup function for AceServiceContextProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AceServiceContextProvider);
}

uint64_t dispatch thunk of AceServiceContextProvider.shouldFallbacktoAWDL.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of AceServiceContextProvider.shouldFallbacktoAWDL.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of AceServiceContextProvider.shouldFallbacktoAWDL.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of AceServiceContextProvider.__allocating_init(storage:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C980EF50()
{
  return type metadata accessor for ExecuteOnRemoteFlow();
}

void sub_1C980EF58()
{
  sub_1C980F21C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ExecuteOnRemoteFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ExecuteOnRemoteFlow);
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(device:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:shouldFallbackOnAWDL:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.__allocating_init(inputToExecute:device:outputPublisher:aceService:deviceState:)()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 296) + **(int **)(*(void *)v0 + 296));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_1C9615010;
  return v6(v3);
}

uint64_t dispatch thunk of ExecuteOnRemoteFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

void sub_1C980F21C()
{
  if (!qword_1EA58DF18)
  {
    type metadata accessor for Input(255);
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA58DF18);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for ExecuteOnRemoteFlowResult(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C980F2BC(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C980F2BC(id result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return result;
  }
  return result;
}

void destroy for ExecuteOnRemoteFlowResult(uint64_t a1)
{
}

void sub_1C980F2F0(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t *assignWithCopy for ExecuteOnRemoteFlowResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C980F4E0(a1, a2, a3, (void (*)(void, void))sub_1C980F2BC, (void (*)(uint64_t, uint64_t))sub_1C980F2F0);
}

uint64_t assignWithTake for ExecuteOnRemoteFlowResult(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C980F2F0(v4, v5);
  return a1;
}

void type metadata accessor for ExecuteOnRemoteFlowResult()
{
}

unsigned char *storeEnumTagSinglePayload for ExecuteOnRemoteDeviceSpecification(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C980F428);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for ExecuteOnRemoteDeviceSpecification()
{
}

uint64_t sub_1C980F45C(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C980A190(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void sub_1C980F4A4(uint64_t a1)
{
}

uint64_t *sub_1C980F4B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C980F4E0(a1, a2, a3, (void (*)(void, void))sub_1C980A190, (void (*)(uint64_t, uint64_t))sub_1C980A1DC);
}

uint64_t *sub_1C980F4E0(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  unsigned __int8 v8 = *((unsigned char *)a2 + 8);
  a4(*a2, v8);
  uint64_t v9 = *a1;
  *a1 = v7;
  uint64_t v10 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

uint64_t sub_1C980F540(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C980A1DC(v4, v5);
  return a1;
}

void type metadata accessor for ExecuteOnRemoteFlow.State()
{
}

void sub_1C980F58C()
{
}

uint64_t sub_1C980F5B0(void *a1)
{
  id v2 = objc_msgSend(a1, sel_executionDeviceAssistantId);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

unint64_t sub_1C980F620()
{
  unint64_t result = qword_1EA58DF30;
  if (!qword_1EA58DF30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA58DF30);
  }
  return result;
}

uint64_t sub_1C980F660(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1C980F6B8()
{
}

void OUTLINED_FUNCTION_3_41()
{
  sub_1C9BEC388();
}

uint64_t OUTLINED_FUNCTION_7_34()
{
  return swift_task_dealloc();
}

__n128 *OUTLINED_FUNCTION_9_27(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x656369766564;
  result[2].n128_u64[1] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_29@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)a1 = 2;
  return sub_1C9BECE48();
}

void OUTLINED_FUNCTION_14_28()
{
}

void OUTLINED_FUNCTION_18_24()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 4;
}

void OUTLINED_FUNCTION_20_24()
{
  sub_1C96B11CC(v0, 1u);
  sub_1C96B11CC(v0, 1u);
}

uint64_t OUTLINED_FUNCTION_24_16()
{
  sub_1C9793968(v0);
  return sub_1C963F610(v2, v1);
}

uint64_t OUTLINED_FUNCTION_28_14()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_34_14@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + a1) = 1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_38_10()
{
  return v0;
}

void OUTLINED_FUNCTION_39_11(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, v1);
  sub_1C97D87D8();
}

uint64_t ExecuteOnRemotePayload.init(input:rrData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C9729480(a1, a4);
  uint64_t result = type metadata accessor for ExecuteOnRemotePayload();
  unsigned __int8 v8 = (void *)(a4 + *(int *)(result + 20));
  *unsigned __int8 v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t type metadata accessor for ExecuteOnRemotePayload()
{
  uint64_t result = qword_1EA58DF70;
  if (!qword_1EA58DF70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void ExecuteOnRemotePayload.makeExecuteOnRemoteRequest(targetDeviceId:currentRequest:device:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v2 = MEMORY[0x1F4188790](v0 - 8, v1);
  MEMORY[0x1F4188790](v2, v3);
  sub_1C9BECC68();
}

uint64_t ExecuteOnRemotePayload.input.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C962C8D4(v1, a1, (void (*)(void))type metadata accessor for Input);
}

uint64_t ExecuteOnRemotePayload.rrData.getter()
{
  type metadata accessor for ExecuteOnRemotePayload();
  uint64_t v0 = OUTLINED_FUNCTION_134_0();
  sub_1C96A9EF8(v0, v1);
  return OUTLINED_FUNCTION_134_0();
}

id sub_1C98105D8()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v1 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithIdentifier_, v1);

  return v2;
}

unint64_t ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.description.getter()
{
  return 0xD00000000000003CLL;
}

uint64_t static ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.== infix(_:_:)()
{
  return 1;
}

uint64_t ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C98106DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461447272 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C98107BC(char a1)
{
  if (a1) {
    return 0x617461447272;
  }
  else {
    return 0x7475706E69;
  }
}

uint64_t sub_1C98107EC()
{
  return ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hashValue.getter();
}

uint64_t sub_1C9810804()
{
  return ExecuteOnRemotePayload.ExecuteOnRemotePayloadError.hash(into:)();
}

unint64_t sub_1C981081C()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_1C981083C()
{
  return sub_1C98107BC(*v0);
}

uint64_t sub_1C9810844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C98106DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C981086C(uint64_t a1)
{
  unint64_t v2 = sub_1C9811DBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C98108A8(uint64_t a1)
{
  unint64_t v2 = sub_1C9811DBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ExecuteOnRemotePayload.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DF48);
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9811DBC();
  sub_1C9BEE7A8();
  type metadata accessor for Input(0);
  sub_1C9811E08(&qword_1EA58DF38);
  sub_1C9BEE568();
  if (!v1)
  {
    type metadata accessor for ExecuteOnRemotePayload();
    sub_1C9683B14();
    sub_1C9BEE518();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t ExecuteOnRemotePayload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_33_0();
  uint64_t v19 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DF58);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = type metadata accessor for ExecuteOnRemotePayload();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_6_0();
  uint64_t v14 = v13 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9811DBC();
  sub_1C9BEE798();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v20) = 0;
  sub_1C9811E08(&qword_1EA58DF60);
  sub_1C9BEE4C8();
  sub_1C9729480(v19, v14);
  sub_1C9683BAC();
  sub_1C9BEE478();
  uint64_t v15 = OUTLINED_FUNCTION_10_28();
  v16(v15);
  *(_OWORD *)(v14 + *(int *)(v9 + 20)) = v20;
  sub_1C962C8D4(v14, a2, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C9813E50(v14, (void (*)(void))type metadata accessor for ExecuteOnRemotePayload);
}

uint64_t sub_1C9810CF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ExecuteOnRemotePayload.init(from:)(a1, a2);
}

uint64_t sub_1C9810D0C(void *a1)
{
  return ExecuteOnRemotePayload.encode(to:)(a1);
}

uint64_t SAIntentGroupRunSiriKitExecutor.hasExecuteOnRemotePayload.getter()
{
  id v1 = objc_msgSend(v0, sel_parse);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = sub_1C9811CFC(v1, (SEL *)&selRef_type);
    if (v4)
    {
      uint64_t v5 = v4;
      if (v3 == sub_1C9BED568() && v5 == v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v8 = sub_1C9BEE618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v8 & 1) == 0) {
          goto LABEL_8;
        }
      }
      id v10 = objc_msgSend(v2, sel_directInvocation);
      if (v10)
      {
        id v11 = v10;
        char v9 = sub_1C9810ECC();
        uint64_t v12 = v2;
        uint64_t v2 = v11;
      }
      else
      {
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_1C9BECF88();
        __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
        uint64_t v12 = (void *)sub_1C9BECF78();
        os_log_type_t v14 = sub_1C9BEDC88();
        if (OUTLINED_FUNCTION_105(v14))
        {
          *(_WORD *)swift_slowAlloc() = 0;
          OUTLINED_FUNCTION_248(&dword_1C95F9000, v15, v16, "Could not extract ExecuteOnRemotePayload: Parse is type directInvocation but directInvocation is nil");
          OUTLINED_FUNCTION_11_4();
        }
        char v9 = 0;
      }

      goto LABEL_19;
    }
LABEL_8:
    char v9 = 0;
LABEL_19:

    return v9 & 1;
  }
  char v9 = 0;
  return v9 & 1;
}

uint64_t sub_1C9810ECC()
{
  uint64_t v1 = sub_1C9811CFC(v0, (SEL *)&selRef_invocationIdentifier);
  if (v2)
  {
    if (v1 == 0xD000000000000025 && v2 == 0x80000001C9C1D970) {
      char v3 = 1;
    }
    else {
      char v3 = sub_1C9BEE618();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

void SAIntentGroupRunSiriKitExecutor.executeOnRemotePayload()(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_parse);
  if (v3
    && (uint64_t v4 = v3, v16 = objc_msgSend(v3, sel_directInvocation), v4, v16))
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
    uint64_t v6 = (void *)sub_1C9BECF78();
    os_log_type_t v7 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_105(v7))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_248(&dword_1C95F9000, v8, v9, "Extracting ExecuteOnRemotePayload from RSKE command");
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C9811154(a1);
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C9BECF88();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBC7A520);
    id v11 = (void *)sub_1C9BECF78();
    os_log_type_t v12 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_105(v12))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_248(&dword_1C95F9000, v13, v14, "Could not extract ExecuteOnRemotePayload: Parse has no directInvocation");
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v15 = type metadata accessor for ExecuteOnRemotePayload();
    __swift_storeEnumTagSinglePayload(a1, 1, 1, v15);
  }
}

uint64_t sub_1C9811154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = type metadata accessor for Input(0);
  uint64_t v5 = MEMORY[0x1F4188790](v3, v4);
  os_log_type_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5, v8);
  uint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = sub_1C9811D58(v1);
  if (v12 >> 60 != 15)
  {
    uint64_t v19 = v11;
    unint64_t v20 = v12;
    uint64_t v21 = self;
    unint64_t v22 = (void *)sub_1C9BEA9B8();
    v59[0] = 0;
    id v23 = objc_msgSend(v21, sel_propertyListWithData_options_format_error_, v22, 0, 0, v59);

    if (!v23)
    {
      id v27 = v59[0];
      id v28 = (void *)sub_1C9BEA8C8();

      swift_willThrow();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C9BECF88();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBC7A520);
      unsigned int v30 = sub_1C9BECF78();
      os_log_type_t v31 = sub_1C9BEDC88();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl(&dword_1C95F9000, v30, v31, "SAExecuteOnRemoteRequest Direct Invocation data is not a valid serialized property list", v32, 2u);
        MEMORY[0x1CB78C440](v32, -1, -1);
      }
      sub_1C963F610(v19, v20);

      goto LABEL_33;
    }
    id v24 = v59[0];
    sub_1C9BEDFE8();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76378);
    if (swift_dynamicCast())
    {
      sub_1C9606B08();
      if (v60)
      {
        if (swift_dynamicCast())
        {
          uint64_t v25 = v57;
          unint64_t v26 = v58;
          sub_1C9606B08();
          swift_bridgeObjectRelease();
          uint64_t v56 = v25;
          if (v60)
          {
            if (swift_dynamicCast())
            {
              unint64_t v54 = v58;
              uint64_t v55 = (void *)v57;
LABEL_41:
              sub_1C9BEA758();
              swift_allocObject();
              sub_1C9BEA748();
              sub_1C9811E08(&qword_1EA58DF60);
              sub_1C9BEA738();
              sub_1C963F610(v19, v20);
              sub_1C960B0D8(v25, v26);
              swift_release();
              sub_1C9729480((uint64_t)v7, (uint64_t)v10);
              sub_1C9729480((uint64_t)v10, a1);
              uint64_t v41 = type metadata accessor for ExecuteOnRemotePayload();
              uint64_t v51 = (void *)(a1 + *(int *)(v41 + 20));
              unint64_t v52 = v54;
              *uint64_t v51 = v55;
              v51[1] = v52;
              uint64_t v42 = a1;
              uint64_t v43 = 0;
              return __swift_storeEnumTagSinglePayload(v42, v43, 1, v41);
            }
          }
          else
          {
            sub_1C95FE76C((uint64_t)v59, &qword_1EBC78700);
          }
          if (qword_1EBC7A3B8 != -1) {
            swift_once();
          }
          uint64_t v44 = sub_1C9BECF88();
          __swift_project_value_buffer(v44, (uint64_t)qword_1EBC7A520);
          uint64_t v45 = sub_1C9BECF78();
          os_log_type_t v46 = sub_1C9BEDC88();
          if (os_log_type_enabled(v45, v46))
          {
            uint64_t v47 = swift_slowAlloc();
            unint64_t v53 = v26;
            unint64_t v48 = (uint8_t *)v47;
            uint64_t v55 = (void *)swift_slowAlloc();
            v59[0] = v55;
            *(_DWORD *)unint64_t v48 = 136315138;
            unint64_t v54 = (unint64_t)(v48 + 4);
            uint64_t v57 = sub_1C95FF228(0x617461447272, 0xE600000000000000, (uint64_t *)v59);
            sub_1C9BEDF68();
            _os_log_impl(&dword_1C95F9000, v45, v46, "SAExecuteOnRemoteRequest Direct Invocation userData has nil value for %s: Understanding device out of date? No reference resolution entities will be scoped for this turn.", v48, 0xCu);
            int v49 = v55;
            swift_arrayDestroy();
            MEMORY[0x1CB78C440](v49, -1, -1);
            uint64_t v50 = v48;
            unint64_t v26 = v53;
            MEMORY[0x1CB78C440](v50, -1, -1);
          }

          unint64_t v54 = 0xF000000000000000;
          uint64_t v55 = 0;
          uint64_t v25 = v56;
          goto LABEL_41;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C95FE76C((uint64_t)v59, &qword_1EBC78700);
      }
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C9BECF88();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EBC7A520);
      unsigned int v30 = sub_1C9BECF78();
      os_log_type_t v38 = sub_1C9BEDC88();
      if (!os_log_type_enabled(v30, v38)) {
        goto LABEL_32;
      }
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      id v40 = (void *)swift_slowAlloc();
      v59[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      uint64_t v57 = sub_1C95FF228(0x7461447475706E69, 0xE900000000000061, (uint64_t *)v59);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v30, v38, "SAExecuteOnRemoteRequest Direct Invocation userData has no value for %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v40, -1, -1);
      uint64_t v36 = v39;
    }
    else
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C9BECF88();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
      unsigned int v30 = sub_1C9BECF78();
      os_log_type_t v34 = sub_1C9BEDC88();
      if (!os_log_type_enabled(v30, v34)) {
        goto LABEL_32;
      }
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl(&dword_1C95F9000, v30, v34, "SAExecuteOnRemoteRequest Direct Invocation has invalid data", v35, 2u);
      uint64_t v36 = v35;
    }
    MEMORY[0x1CB78C440](v36, -1, -1);
LABEL_32:
    sub_1C963F610(v19, v20);
LABEL_33:

    uint64_t v41 = type metadata accessor for ExecuteOnRemotePayload();
    uint64_t v42 = a1;
    uint64_t v43 = 1;
    return __swift_storeEnumTagSinglePayload(v42, v43, 1, v41);
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1C9BECF88();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
  uint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC88();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v16 = 0;
    _os_log_impl(&dword_1C95F9000, v14, v15, "SAExecuteOnRemoteRequest Direct Invocation has no data", v16, 2u);
    MEMORY[0x1CB78C440](v16, -1, -1);
  }

  uint64_t v17 = type metadata accessor for ExecuteOnRemotePayload();

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v17);
}

void sub_1C9811C24(uint64_t a1, void *a2)
{
  id v3 = (id)sub_1C9BED408();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setUserData_, v3);
}

void sub_1C9811CA4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setExecutionDeviceAssistantId_, v4);
}

uint64_t sub_1C9811CFC(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (v2)
  {
    id v3 = v2;
    sub_1C9BED568();
  }
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9811D58(void *a1)
{
  id v1 = objc_msgSend(a1, sel_data);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C9BEA9E8();

  return v3;
}

unint64_t sub_1C9811DBC()
{
  unint64_t result = qword_1EA58DF50;
  if (!qword_1EA58DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DF50);
  }
  return result;
}

uint64_t sub_1C9811E08(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Input(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C9811E50()
{
  unint64_t result = qword_1EA58DF68;
  if (!qword_1EA58DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DF68);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ExecuteOnRemotePayload(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  os_log_type_t v7 = (int *)type metadata accessor for Input(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
      goto LABEL_27;
    case 1u:
      uint64_t v13 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)v9 + *(int *)(v14 + 48)) = *(void *)((char *)v10 + *(int *)(v14 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v15 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v15;
      v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      *uint64_t v9 = *v10;
      swift_unknownObjectRetain();
      goto LABEL_27;
    case 4u:
      uint64_t v16 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      goto LABEL_27;
    case 5u:
      uint64_t v17 = (void *)*v10;
      *uint64_t v9 = *v10;
      id v18 = v17;
      goto LABEL_27;
    case 6u:
      uint64_t v19 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v10, v19);
      unint64_t v20 = (int *)type metadata accessor for USOParse();
      uint64_t v21 = v20[5];
      __dst = (char *)v9 + v21;
      unint64_t v22 = (char *)v10 + v21;
      uint64_t v23 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(__dst, v22, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v23);
      }
      uint64_t v43 = v20[6];
      uint64_t v44 = (void *)((char *)v9 + v43);
      uint64_t v45 = (void *)((char *)v10 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      uint64_t v47 = v20[7];
      unint64_t v48 = (char *)v9 + v47;
      int v49 = (char *)v10 + v47;
      v48[4] = v49[4];
      *(_DWORD *)unint64_t v48 = *(_DWORD *)v49;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      uint64_t v25 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v9, v10, v25);
      unint64_t v26 = (int *)type metadata accessor for USOParse();
      uint64_t v27 = v26[5];
      __dsta = (char *)v9 + v27;
      id v28 = (char *)v10 + v27;
      uint64_t v29 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(__dsta, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(__dsta, v28, v29);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v29);
      }
      uint64_t v50 = v26[6];
      uint64_t v51 = (void *)((char *)v9 + v50);
      unint64_t v52 = (void *)((char *)v10 + v50);
      uint64_t v53 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v53;
      uint64_t v54 = v26[7];
      uint64_t v55 = (char *)v9 + v54;
      uint64_t v56 = (char *)v10 + v54;
      v55[4] = v56[4];
      *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
      uint64_t v57 = (int *)type metadata accessor for LinkParse();
      uint64_t v58 = v57[5];
      uint64_t v59 = (void *)((char *)v9 + v58);
      uint64_t v60 = (void *)((char *)v10 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      uint64_t v62 = v57[6];
      uint64_t v63 = (void *)((char *)v9 + v62);
      id v64 = (void *)((char *)v10 + v62);
      uint64_t v65 = v64[1];
      *uint64_t v63 = *v64;
      v63[1] = v65;
      uint64_t v66 = v57[7];
      uint64_t v67 = (void *)((char *)v9 + v66);
      uint64_t v68 = (void *)((char *)v10 + v66);
      uint64_t v69 = v68[1];
      *uint64_t v67 = *v68;
      v67[1] = v69;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 8u:
      uint64_t v31 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v9, v10, v31);
      uint64_t v32 = type metadata accessor for NLRouterParse();
      uint64_t v33 = *(int *)(v32 + 20);
      os_log_type_t v34 = (void *)((char *)v9 + v33);
      uint64_t v35 = (void *)((char *)v10 + v33);
      uint64_t v36 = v35[1];
      *os_log_type_t v34 = *v35;
      v34[1] = v36;
      __dstb = (int *)v32;
      uint64_t v37 = *(int *)(v32 + 24);
      os_log_type_t v38 = (char *)v9 + v37;
      uint64_t v39 = (char *)v10 + v37;
      uint64_t v40 = type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      uint64_t v101 = v40;
      if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v70 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v38, v39, v70);
        uint64_t v71 = *(int *)(v40 + 20);
        uint64_t v100 = &v38[v71];
        uint64_t v72 = &v39[v71];
        uint64_t v73 = sub_1C9BEAE48();
        uint64_t v99 = v72;
        uint64_t v74 = (uint64_t)v72;
        uint64_t v75 = v73;
        if (__swift_getEnumTagSinglePayload(v74, 1, v73))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v100, v99, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v100, v99, v75);
          __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v75);
        }
        uint64_t v77 = *(int *)(v101 + 24);
        id v78 = &v38[v77];
        id v79 = &v39[v77];
        uint64_t v80 = *((void *)v79 + 1);
        *(void *)id v78 = *(void *)v79;
        *((void *)v78 + 1) = v80;
        uint64_t v81 = *(int *)(v101 + 28);
        uint64_t v82 = &v38[v81];
        uint64_t v83 = &v39[v81];
        v82[4] = v83[4];
        *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v101);
      }
      uint64_t v84 = __dstb[7];
      uint64_t v85 = *(void **)((char *)v10 + v84);
      *(void *)((char *)v9 + v84) = v85;
      id v86 = v85;
      goto LABEL_27;
    case 9u:
      uint64_t v42 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v9, v10, v42);
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  *(void *)((char *)a1 + v7[6]) = *(void *)((char *)a2 + v7[6]);
  uint64_t v87 = v7[7];
  uint64_t v88 = (char *)a1 + v87;
  uint64_t v89 = (char *)a2 + v87;
  uint64_t v90 = *(void *)((char *)a2 + v87 + 24);
  swift_bridgeObjectRetain();
  if (v90)
  {
    uint64_t v91 = *((void *)v89 + 4);
    *((void *)v88 + 3) = v90;
    *((void *)v88 + 4) = v91;
    (**(void (***)(char *, char *, uint64_t))(v90 - 8))(v88, v89, v90);
  }
  else
  {
    long long v92 = *((_OWORD *)v89 + 1);
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *((_OWORD *)v88 + 1) = v92;
    *((void *)v88 + 4) = *((void *)v89 + 4);
  }
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v93 = *(int *)(a3 + 20);
  uint64_t v94 = (char *)a1 + v93;
  uint64_t v95 = (char *)a2 + v93;
  unint64_t v96 = *((void *)v95 + 1);
  if (v96 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
  }
  else
  {
    uint64_t v97 = *(void *)v95;
    sub_1C960B020(*(void *)v95, *((void *)v95 + 1));
    *(void *)uint64_t v94 = v97;
    *((void *)v94 + 1) = v96;
  }
  return a1;
}

uint64_t destroy for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for Input(0);
  uint64_t v6 = (void **)(a1 + *(int *)(v5 + 20));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_1C9BEC028();
      goto LABEL_22;
    case 1u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(void **, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      uint64_t v7 = sub_1C9BEAC48();
      goto LABEL_22;
    case 5u:
      uint64_t v9 = *v6;
      goto LABEL_20;
    case 6u:
      uint64_t v10 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
      uint64_t v11 = (uint64_t)v6 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v12 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      }
      goto LABEL_14;
    case 7u:
      uint64_t v13 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v13 - 8) + 8))(v6, v13);
      uint64_t v14 = (uint64_t)v6 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v15 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      uint64_t v16 = sub_1C9BEC928();
      (*(void (**)(void **, uint64_t))(*(void *)(v16 - 8) + 8))(v6, v16);
      uint64_t v17 = type metadata accessor for NLRouterParse();
      swift_bridgeObjectRelease();
      uint64_t v18 = (uint64_t)v6 + *(int *)(v17 + 24);
      uint64_t v19 = type metadata accessor for USOParse();
      if (!__swift_getEnumTagSinglePayload(v18, 1, v19))
      {
        uint64_t v20 = sub_1C9BEAF18();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
        uint64_t v21 = v18 + *(int *)(v19 + 20);
        uint64_t v22 = sub_1C9BEAE48();
        if (!__swift_getEnumTagSinglePayload(v21, 1, v22)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v9 = *(void **)((char *)v6 + *(int *)(v17 + 28));
LABEL_20:

      break;
    case 9u:
      uint64_t v7 = sub_1C9BEC8F8();
LABEL_22:
      (*(void (**)(void **, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1 + *(int *)(v5 + 28);
  if (*(void *)(result + 24)) {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
  }
  uint64_t v24 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  unint64_t v25 = v24[1];
  if (v25 >> 60 != 15)
  {
    uint64_t v26 = *v24;
    return sub_1C960B0D8(v26, v25);
  }
  return result;
}

uint64_t initializeWithCopy for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Input(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
      goto LABEL_16;
    case 1u:
      uint64_t v13 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)v9 + *(int *)(v14 + 48)) = *(void *)((char *)v10 + *(int *)(v14 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v15 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v15;
      v9[2] = v10[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_16;
    case 3u:
      *uint64_t v9 = *v10;
      swift_unknownObjectRetain();
      goto LABEL_16;
    case 4u:
      uint64_t v16 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      goto LABEL_16;
    case 5u:
      uint64_t v17 = (void *)*v10;
      *uint64_t v9 = *v10;
      id v18 = v17;
      goto LABEL_16;
    case 6u:
      uint64_t v102 = a3;
      uint64_t v19 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v9, v10, v19);
      uint64_t v20 = (int *)type metadata accessor for USOParse();
      uint64_t v21 = v20[5];
      uint64_t v22 = (char *)v9 + v21;
      uint64_t v23 = (char *)v10 + v21;
      uint64_t v24 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      uint64_t v45 = v20[6];
      uint64_t v46 = (void *)((char *)v9 + v45);
      uint64_t v47 = (void *)((char *)v10 + v45);
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v20[7];
      uint64_t v50 = (char *)v9 + v49;
      uint64_t v51 = (char *)v10 + v49;
      void v50[4] = v51[4];
      *(_DWORD *)uint64_t v50 = *(_DWORD *)v51;
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 7u:
      uint64_t v102 = a3;
      uint64_t v26 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
      uint64_t v27 = (int *)type metadata accessor for USOParse();
      uint64_t v28 = v27[5];
      uint64_t v29 = (char *)v9 + v28;
      uint64_t v30 = (char *)v10 + v28;
      uint64_t v31 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v52 = v27[6];
      uint64_t v53 = (void *)((char *)v9 + v52);
      uint64_t v54 = (void *)((char *)v10 + v52);
      uint64_t v55 = v54[1];
      *uint64_t v53 = *v54;
      v53[1] = v55;
      uint64_t v56 = v27[7];
      uint64_t v57 = (char *)v9 + v56;
      uint64_t v58 = (char *)v10 + v56;
      v57[4] = v58[4];
      *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
      uint64_t v59 = (int *)type metadata accessor for LinkParse();
      uint64_t v60 = v59[5];
      uint64_t v61 = (void *)((char *)v9 + v60);
      uint64_t v62 = (void *)((char *)v10 + v60);
      uint64_t v63 = v62[1];
      *uint64_t v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v59[6];
      uint64_t v65 = (void *)((char *)v9 + v64);
      uint64_t v66 = (void *)((char *)v10 + v64);
      uint64_t v67 = v66[1];
      *uint64_t v65 = *v66;
      v65[1] = v67;
      uint64_t v68 = v59[7];
      uint64_t v69 = (void *)((char *)v9 + v68);
      uint64_t v70 = (void *)((char *)v10 + v68);
      uint64_t v71 = v70[1];
      *uint64_t v69 = *v70;
      v69[1] = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 8u:
      uint64_t v102 = a3;
      uint64_t v33 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v9, v10, v33);
      uint64_t v34 = type metadata accessor for NLRouterParse();
      uint64_t v35 = *(int *)(v34 + 20);
      uint64_t v36 = (void *)((char *)v9 + v35);
      uint64_t v37 = (void *)((char *)v10 + v35);
      uint64_t v38 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v38;
      uint64_t v101 = v34;
      uint64_t v39 = *(int *)(v34 + 24);
      uint64_t v40 = (char *)v9 + v39;
      uint64_t v41 = (char *)v10 + v39;
      uint64_t v42 = (int *)type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, (uint64_t)v42))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        uint64_t v72 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v40, v41, v72);
        uint64_t v73 = v42[5];
        uint64_t v100 = (uint64_t)v40;
        uint64_t v99 = &v40[v73];
        uint64_t v74 = &v41[v73];
        uint64_t v75 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v99, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v99, v74, v75);
          __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v75);
        }
        uint64_t v77 = v42[6];
        id v78 = (void *)(v100 + v77);
        id v79 = &v41[v77];
        uint64_t v80 = *((void *)v79 + 1);
        *id v78 = *(void *)v79;
        v78[1] = v80;
        uint64_t v81 = v42[7];
        uint64_t v82 = v100 + v81;
        uint64_t v83 = &v41[v81];
        *(unsigned char *)(v82 + 4) = v83[4];
        *(_DWORD *)uint64_t v82 = *(_DWORD *)v83;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload(v100, 0, 1, (uint64_t)v42);
      }
      uint64_t v84 = *(int *)(v101 + 28);
      uint64_t v85 = *(void **)((char *)v10 + v84);
      *(void *)((char *)v9 + v84) = v85;
      id v86 = v85;
LABEL_26:
      swift_storeEnumTagMultiPayload();
      a3 = v102;
      break;
    case 9u:
      uint64_t v44 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v9, v10, v44);
LABEL_16:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  uint64_t v87 = v7[7];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = *(void *)(a2 + v87 + 24);
  swift_bridgeObjectRetain();
  if (v90)
  {
    uint64_t v91 = *(void *)(v89 + 32);
    *(void *)(v88 + 24) = v90;
    *(void *)(v88 + 32) = v91;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v90 - 8))(v88, v89, v90);
  }
  else
  {
    long long v92 = *(_OWORD *)(v89 + 16);
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *(_OWORD *)(v88 + 16) = v92;
    *(void *)(v88 + 32) = *(void *)(v89 + 32);
  }
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  uint64_t v93 = *(int *)(a3 + 20);
  uint64_t v94 = a1 + v93;
  uint64_t v95 = (uint64_t *)(a2 + v93);
  unint64_t v96 = v95[1];
  if (v96 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
  }
  else
  {
    uint64_t v97 = *v95;
    sub_1C960B020(*v95, v95[1]);
    *(void *)uint64_t v94 = v97;
    *(void *)(v94 + 8) = v96;
  }
  return a1;
}

uint64_t assignWithCopy for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Input(0);
  uint64_t v8 = (int *)v7;
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(v7 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_1C9813E50(a1 + v9, (void (*)(void))type metadata accessor for Parse);
    uint64_t v12 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v13 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
        goto LABEL_26;
      case 1u:
        uint64_t v14 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)((char *)v10 + *(int *)(v15 + 48)) = *(void *)((char *)v11 + *(int *)(v15 + 48));
        sub_1C9BEC838();
      case 2u:
        *uint64_t v10 = *v11;
        v10[1] = v11[1];
        v10[2] = v11[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *uint64_t v10 = *v11;
        swift_unknownObjectRetain();
        goto LABEL_26;
      case 4u:
        uint64_t v16 = sub_1C9BEAC48();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v11, v16);
        goto LABEL_26;
      case 5u:
        uint64_t v17 = (void *)*v11;
        *uint64_t v10 = *v11;
        id v18 = v17;
        goto LABEL_26;
      case 6u:
        uint64_t v19 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v10, v11, v19);
        uint64_t v20 = (int *)type metadata accessor for USOParse();
        uint64_t v21 = v20[5];
        __dst = (char *)v10 + v21;
        uint64_t v22 = (char *)v11 + v21;
        uint64_t v23 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(__dst, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v23);
        }
        uint64_t v42 = v20[6];
        uint64_t v43 = (void *)((char *)v10 + v42);
        uint64_t v44 = (void *)((char *)v11 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        uint64_t v45 = v20[7];
        uint64_t v46 = (char *)v10 + v45;
        uint64_t v47 = (char *)v11 + v45;
        int v48 = *(_DWORD *)v47;
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = v48;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 7u:
        uint64_t v25 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v10, v11, v25);
        uint64_t v26 = (int *)type metadata accessor for USOParse();
        uint64_t v27 = v26[5];
        __dsta = (char *)v10 + v27;
        uint64_t v28 = (char *)v11 + v27;
        uint64_t v29 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, v28, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(__dsta, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v29);
        }
        uint64_t v49 = v26[6];
        uint64_t v50 = (void *)((char *)v10 + v49);
        uint64_t v51 = (void *)((char *)v11 + v49);
        *uint64_t v50 = *v51;
        v50[1] = v51[1];
        uint64_t v52 = v26[7];
        uint64_t v53 = (char *)v10 + v52;
        uint64_t v54 = (char *)v11 + v52;
        int v55 = *(_DWORD *)v54;
        v53[4] = v54[4];
        *(_DWORD *)uint64_t v53 = v55;
        uint64_t v56 = (int *)type metadata accessor for LinkParse();
        uint64_t v57 = v56[5];
        uint64_t v58 = (void *)((char *)v10 + v57);
        uint64_t v59 = (void *)((char *)v11 + v57);
        *uint64_t v58 = *v59;
        v58[1] = v59[1];
        uint64_t v60 = v56[6];
        uint64_t v61 = (void *)((char *)v10 + v60);
        uint64_t v62 = (void *)((char *)v11 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        uint64_t v63 = v56[7];
        uint64_t v64 = (void *)((char *)v10 + v63);
        uint64_t v65 = (void *)((char *)v11 + v63);
        *uint64_t v64 = *v65;
        v64[1] = v65[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 8u:
        uint64_t v31 = sub_1C9BEC928();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v10, v11, v31);
        uint64_t v32 = type metadata accessor for NLRouterParse();
        uint64_t v33 = *(int *)(v32 + 20);
        uint64_t v34 = (void *)((char *)v10 + v33);
        uint64_t v35 = (void *)((char *)v11 + v33);
        *uint64_t v34 = *v35;
        v34[1] = v35[1];
        __dstb = (int *)v32;
        uint64_t v36 = *(int *)(v32 + 24);
        uint64_t v37 = (char *)v10 + v36;
        uint64_t v38 = (char *)v11 + v36;
        uint64_t v39 = type metadata accessor for USOParse();
        swift_bridgeObjectRetain();
        uint64_t v100 = v39;
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v66 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v37, v38, v66);
          uint64_t v67 = *(int *)(v39 + 20);
          uint64_t v99 = &v37[v67];
          uint64_t v68 = &v38[v67];
          uint64_t v69 = sub_1C9BEAE48();
          v98 = v68;
          uint64_t v70 = (uint64_t)v68;
          uint64_t v71 = v69;
          if (__swift_getEnumTagSinglePayload(v70, 1, v69))
          {
            uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v99, v98, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v99, v98, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v99, 0, 1, v71);
          }
          uint64_t v73 = *(int *)(v100 + 24);
          uint64_t v74 = &v37[v73];
          uint64_t v75 = &v38[v73];
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = *((void *)v75 + 1);
          uint64_t v76 = *(int *)(v100 + 28);
          uint64_t v77 = &v37[v76];
          id v78 = &v38[v76];
          int v79 = *(_DWORD *)v78;
          v77[4] = v78[4];
          *(_DWORD *)uint64_t v77 = v79;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, v100);
        }
        uint64_t v80 = __dstb[7];
        uint64_t v81 = *(void **)((char *)v11 + v80);
        *(void *)((char *)v10 + v80) = v81;
        id v82 = v81;
        goto LABEL_26;
      case 9u:
        uint64_t v41 = sub_1C9BEC8F8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v10, v11, v41);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = v8[7];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = (long long *)(a2 + v83);
  uint64_t v86 = *(void *)(a2 + v83 + 24);
  if (*(void *)(a1 + v83 + 24))
  {
    if (v86)
    {
      __swift_assign_boxed_opaque_existential_1((void *)v84, v85);
      goto LABEL_34;
    }
    __swift_destroy_boxed_opaque_existential_1(v84);
  }
  else if (v86)
  {
    *(void *)(v84 + 24) = v86;
    *(void *)(v84 + 32) = *((void *)v85 + 4);
    (**(void (***)(uint64_t, long long *))(v86 - 8))(v84, v85);
    goto LABEL_34;
  }
  long long v87 = *v85;
  long long v88 = v85[1];
  *(void *)(v84 + 32) = *((void *)v85 + 4);
  *(_OWORD *)uint64_t v84 = v87;
  *(_OWORD *)(v84 + 16) = v88;
LABEL_34:
  *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
  uint64_t v89 = *(int *)(a3 + 20);
  uint64_t v90 = (uint64_t *)(a1 + v89);
  uint64_t v91 = (uint64_t *)(a2 + v89);
  unint64_t v92 = *(void *)(a2 + v89 + 8);
  if (*(void *)(a1 + v89 + 8) >> 60 != 15)
  {
    if (v92 >> 60 != 15)
    {
      uint64_t v94 = *v91;
      sub_1C960B020(v94, v92);
      uint64_t v95 = *v90;
      unint64_t v96 = v90[1];
      *uint64_t v90 = v94;
      v90[1] = v92;
      sub_1C960B0D8(v95, v96);
      return a1;
    }
    sub_1C97FD9E8((uint64_t)v90);
    goto LABEL_39;
  }
  if (v92 >> 60 == 15)
  {
LABEL_39:
    *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
    return a1;
  }
  uint64_t v93 = *v91;
  sub_1C960B020(v93, v92);
  *uint64_t v90 = v93;
  v90[1] = v92;
  return a1;
}

uint64_t sub_1C9813E50(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t initializeWithTake for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for Input(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v12 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      goto LABEL_23;
    case 1u:
      uint64_t v13 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v9[*(int *)(v14 + 48)] = *(void *)&v10[*(int *)(v14 + 48)];
      goto LABEL_23;
    case 4u:
      uint64_t v15 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
      goto LABEL_23;
    case 6u:
      uint64_t v61 = a3;
      uint64_t v16 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
      uint64_t v17 = (int *)type metadata accessor for USOParse();
      uint64_t v18 = v17[5];
      uint64_t v19 = &v9[v18];
      uint64_t v20 = &v10[v18];
      uint64_t v21 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
      }
      *(_OWORD *)&v9[v17[6]] = *(_OWORD *)&v10[v17[6]];
      uint64_t v38 = v17[7];
      uint64_t v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      v39[4] = v40[4];
      *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
      goto LABEL_17;
    case 7u:
      uint64_t v61 = a3;
      uint64_t v23 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v9, v10, v23);
      uint64_t v24 = (int *)type metadata accessor for USOParse();
      uint64_t v25 = v24[5];
      uint64_t v26 = &v9[v25];
      uint64_t v27 = &v10[v25];
      uint64_t v28 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
      }
      *(_OWORD *)&v9[v24[6]] = *(_OWORD *)&v10[v24[6]];
      uint64_t v41 = v24[7];
      uint64_t v42 = &v9[v41];
      uint64_t v43 = &v10[v41];
      v42[4] = v43[4];
      *(_DWORD *)uint64_t v42 = *(_DWORD *)v43;
      uint64_t v44 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v9[v44[5]] = *(_OWORD *)&v10[v44[5]];
      *(_OWORD *)&v9[v44[6]] = *(_OWORD *)&v10[v44[6]];
      *(_OWORD *)&v9[v44[7]] = *(_OWORD *)&v10[v44[7]];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      a3 = v61;
      break;
    case 8u:
      uint64_t v30 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v9, v10, v30);
      uint64_t v31 = type metadata accessor for NLRouterParse();
      *(_OWORD *)&v9[*(int *)(v31 + 20)] = *(_OWORD *)&v10[*(int *)(v31 + 20)];
      uint64_t v60 = v31;
      uint64_t v32 = *(int *)(v31 + 24);
      uint64_t v33 = &v9[v32];
      uint64_t v34 = &v10[v32];
      uint64_t v35 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, (uint64_t)v35))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        uint64_t v62 = a3;
        uint64_t v45 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v33, v34, v45);
        uint64_t v46 = v35[5];
        uint64_t v58 = (uint64_t)v33;
        uint64_t v59 = &v33[v46];
        uint64_t v47 = &v34[v46];
        uint64_t v48 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v59, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v59, v47, v48);
          __swift_storeEnumTagSinglePayload((uint64_t)v59, 0, 1, v48);
        }
        *(_OWORD *)(v58 + v35[6]) = *(_OWORD *)&v34[v35[6]];
        uint64_t v50 = v35[7];
        uint64_t v51 = v58 + v50;
        uint64_t v52 = &v34[v50];
        *(unsigned char *)(v51 + 4) = v52[4];
        *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
        __swift_storeEnumTagSinglePayload(v58, 0, 1, (uint64_t)v35);
        a3 = v62;
      }
      *(void *)&v9[*(int *)(v60 + 28)] = *(void *)&v10[*(int *)(v60 + 28)];
      goto LABEL_23;
    case 9u:
      uint64_t v37 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v9, v10, v37);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      break;
  }
  *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
  uint64_t v53 = v7[7];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  long long v56 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  *(void *)(v54 + 32) = *(void *)(v55 + 32);
  *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for Input(0);
  uint64_t v8 = (int *)v7;
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(v7 + 20);
    uint64_t v10 = (char *)(a1 + v9);
    uint64_t v11 = (char *)(a2 + v9);
    sub_1C9813E50(a1 + v9, (void (*)(void))type metadata accessor for Parse);
    uint64_t v12 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v13 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
        goto LABEL_23;
      case 1u:
        uint64_t v14 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v10, v11, v14);
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v10[*(int *)(v15 + 48)] = *(void *)&v11[*(int *)(v15 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v16 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
        goto LABEL_23;
      case 6u:
        uint64_t v17 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v10, v11, v17);
        uint64_t v18 = (int *)type metadata accessor for USOParse();
        uint64_t v19 = v18[5];
        __dst = &v10[v19];
        uint64_t v20 = &v11[v19];
        uint64_t v21 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
        {
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v20, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v20, v21);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v21);
        }
        *(_OWORD *)&v10[v18[6]] = *(_OWORD *)&v11[v18[6]];
        uint64_t v37 = v18[7];
        uint64_t v38 = &v10[v37];
        uint64_t v39 = &v11[v37];
        v38[4] = v39[4];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        goto LABEL_23;
      case 7u:
        uint64_t v23 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v10, v11, v23);
        uint64_t v24 = (int *)type metadata accessor for USOParse();
        uint64_t v25 = v24[5];
        __dsta = &v10[v25];
        uint64_t v26 = &v11[v25];
        uint64_t v27 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(__dsta, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v27);
        }
        *(_OWORD *)&v10[v24[6]] = *(_OWORD *)&v11[v24[6]];
        uint64_t v40 = v24[7];
        uint64_t v41 = &v10[v40];
        uint64_t v42 = &v11[v40];
        v41[4] = v42[4];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        uint64_t v43 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v10[v43[5]] = *(_OWORD *)&v11[v43[5]];
        *(_OWORD *)&v10[v43[6]] = *(_OWORD *)&v11[v43[6]];
        *(_OWORD *)&v10[v43[7]] = *(_OWORD *)&v11[v43[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v29 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v10, v11, v29);
        uint64_t v30 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v10[*(int *)(v30 + 20)] = *(_OWORD *)&v11[*(int *)(v30 + 20)];
        __dstb = (int *)v30;
        uint64_t v31 = *(int *)(v30 + 24);
        uint64_t v32 = &v10[v31];
        uint64_t v33 = &v11[v31];
        uint64_t v34 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, (uint64_t)v34))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v44 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v32, v33, v44);
          uint64_t v45 = v34[5];
          uint64_t v65 = (uint64_t)v32;
          uint64_t v67 = &v32[v45];
          uint64_t v46 = &v33[v45];
          uint64_t v47 = sub_1C9BEAE48();
          uint64_t v66 = v46;
          uint64_t v48 = (uint64_t)v46;
          uint64_t v49 = v47;
          if (__swift_getEnumTagSinglePayload(v48, 1, v47))
          {
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v67, v66, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v67, v66, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v67, 0, 1, v49);
          }
          *(_OWORD *)(v65 + v34[6]) = *(_OWORD *)&v33[v34[6]];
          uint64_t v51 = v34[7];
          uint64_t v52 = v65 + v51;
          uint64_t v53 = &v33[v51];
          *(unsigned char *)(v52 + 4) = v53[4];
          *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
          __swift_storeEnumTagSinglePayload(v65, 0, 1, (uint64_t)v34);
        }
        *(void *)&v10[__dstb[7]] = *(void *)&v11[__dstb[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v36 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v10, v11, v36);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
  swift_bridgeObjectRelease();
  uint64_t v54 = v8[7];
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  if (*(void *)(a1 + v54 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v55);
  }
  long long v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(void *)(v55 + 32) = *(void *)(v56 + 32);
  *(unsigned char *)(a1 + v8[8]) = *(unsigned char *)(a2 + v8[8]);
  uint64_t v58 = *(int *)(a3 + 20);
  uint64_t v59 = (uint64_t *)(a1 + v58);
  uint64_t v60 = (uint64_t *)(a2 + v58);
  unint64_t v61 = *(void *)(a1 + v58 + 8);
  if (v61 >> 60 != 15)
  {
    unint64_t v62 = v60[1];
    if (v62 >> 60 != 15)
    {
      uint64_t v63 = *v59;
      *uint64_t v59 = *v60;
      v59[1] = v62;
      sub_1C960B0D8(v63, v61);
      return a1;
    }
    sub_1C97FD9E8((uint64_t)v59);
  }
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  return a1;
}

uint64_t getEnumTagSinglePayload for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9814DA4);
}

uint64_t sub_1C9814DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_2_2();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    BOOL v10 = ((4 * v9) & 0xC) == 0;
    unsigned int v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
    if (v10) {
      return 0;
    }
    else {
      return v11;
    }
  }
}

uint64_t storeEnumTagSinglePayload for ExecuteOnRemotePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9814E54);
}

void sub_1C9814E54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_2_2();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    BOOL v10 = (void *)(a1 + *(int *)(a4 + 20));
    *BOOL v10 = 0;
    v10[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
}

uint64_t sub_1C9814EF0()
{
  uint64_t result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9815020);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError()
{
  return &type metadata for ExecuteOnRemotePayload.ExecuteOnRemotePayloadError;
}

unsigned char *storeEnumTagSinglePayload for ExecuteOnRemotePayload.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9815124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExecuteOnRemotePayload.CodingKeys()
{
  return &type metadata for ExecuteOnRemotePayload.CodingKeys;
}

unint64_t sub_1C9815160()
{
  unint64_t result = qword_1EA58DF80;
  if (!qword_1EA58DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DF80);
  }
  return result;
}

unint64_t sub_1C98151B0()
{
  unint64_t result = qword_1EA58DF88;
  if (!qword_1EA58DF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DF88);
  }
  return result;
}

unint64_t sub_1C9815200()
{
  unint64_t result = qword_1EA58DF90;
  if (!qword_1EA58DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58DF90);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_26@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_10_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_30()
{
  return v0;
}

uint64_t sub_1C9815284()
{
  return OUTLINED_FUNCTION_4_39();
}

uint64_t sub_1C9815318()
{
  return OUTLINED_FUNCTION_4_39();
}

uint64_t sub_1C98153A8()
{
  uint64_t v0 = sub_1C9BBE764();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C981544C()
{
  return OUTLINED_FUNCTION_4_39();
}

NSObject *sub_1C981552C(void *a1)
{
  uint64_t v2 = sub_1C9762470();
  if (v3)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    sub_1C97EA544();
    swift_bridgeObjectRetain();
    unsigned int v6 = sub_1C9816430();
    if (!v6)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1C9BECF88();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain_n();
      uint64_t v8 = sub_1C9BECF78();
      os_log_type_t v9 = sub_1C9BEDC88();
      if (os_log_type_enabled(v8, v9))
      {
        swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        OUTLINED_FUNCTION_5_38(4.8149e-34);
        sub_1C95FF228(v4, v5, &v29);
        OUTLINED_FUNCTION_3_42();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_6_35(&dword_1C95F9000, v10, v11, "Could not load bundle by identifier: '%s'");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1C9816544();
      swift_allocError();
      *(void *)uint64_t v23 = v4;
      char v24 = 2;
LABEL_23:
      *(void *)(v23 + 8) = v5;
      *(unsigned char *)(v23 + 16) = v24;
      swift_willThrow();
      return v8;
    }
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_1_36();
  uint64_t v12 = sub_1C9762470();
  if (v13)
  {
    uint64_t v14 = v12;
    unint64_t v5 = v13;
    sub_1C97EA544();
    swift_bridgeObjectRetain();
    unsigned int v6 = sub_1C98163BC();
    if (!v6)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C9BECF88();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain_n();
      uint64_t v8 = sub_1C9BECF78();
      os_log_type_t v26 = sub_1C9BEDC88();
      if (os_log_type_enabled(v8, v26))
      {
        swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        OUTLINED_FUNCTION_5_38(4.8149e-34);
        sub_1C95FF228(v14, v5, &v29);
        OUTLINED_FUNCTION_3_42();
        swift_bridgeObjectRelease_n();
        OUTLINED_FUNCTION_6_35(&dword_1C95F9000, v27, v28, "Could not load bundle by libraryPath: '%s'");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1C9816544();
      swift_allocError();
      *(void *)uint64_t v23 = v14;
      char v24 = 1;
      goto LABEL_23;
    }
LABEL_9:
    uint64_t v8 = v6;
    swift_bridgeObjectRelease();
    return v8;
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C9BECF88();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A520);
  uint64_t v16 = sub_1C9BECF78();
  os_log_type_t v17 = sub_1C9BEDC78();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315394;
    sub_1C95FF228(0xD000000000000010, 0x80000001C9C17EF0, &v29);
    sub_1C9BEDF68();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v19 = OUTLINED_FUNCTION_1_36();
    sub_1C95FF228(v19, v20, v21);
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v16, v17, "Neither %s nor %s are specified. Using default Bundle.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }

  return a1;
}

uint64_t sub_1C9815A00(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x1F4188298](sub_1C9815A24, 0, 0);
}

uint64_t sub_1C9815A24()
{
  uint64_t v1 = *(void *)(v0 + 128);
  type metadata accessor for ParameterWrapper();
  *(void *)(swift_initStackObject() + 16) = v1;
  swift_bridgeObjectRetain();
  sub_1C9815B74();
  uint64_t v2 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v3);
  *(_OWORD *)(v0 + 80) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_0, v4, v3);
  sub_1C95FD5F0(v0 + 56, v2);
  *(unsigned char *)(v2 + 40) = 1;
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  unsigned int v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_1C9815B74()
{
  uint64_t v2 = sub_1C98153A8();
  if (!v1)
  {
    uint64_t v4 = v2;
    unint64_t v5 = v3;
    uint64_t v6 = sub_1C98153A8();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1C981552C(*(void **)(v0 + 32));
    if (![v9 load])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C9BEE188();
      swift_bridgeObjectRelease();
      *(void *)&long long v33 = 0xD000000000000014;
      *((void *)&v33 + 1) = 0x80000001C9C1DA40;
      id v15 = [v9 description];
LABEL_21:
      id v26 = v15;
      uint64_t v27 = v9;
LABEL_22:
      uint64_t v28 = v26;
      sub_1C9BED568();

      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      long long v29 = v33;
      sub_1C9816370();
      swift_allocError();
      _OWORD *v30 = v29;
      swift_willThrow();

      return;
    }
    uint64_t v37 = v9;
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C9BECF88();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_1C9BECF78();
    os_log_type_t v13 = sub_1C9BEDC78();
    uint64_t v32 = v12;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v36 = sub_1C95FF228(v4, v5, (uint64_t *)&v33);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v32, v13, "Attempting to load %s using Bundle", v14, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (sub_1C9816494(v37))
    {
      sub_1C9606B08();
      swift_bridgeObjectRelease();
      if (*((void *)&v34 + 1))
      {
        if (swift_dynamicCast())
        {
          long long v33 = v36;
          swift_bridgeObjectRetain();
          sub_1C9BED6B8();
          sub_1C9BED6B8();
          uint64_t v16 = (NSString *)sub_1C9BED538();
          swift_bridgeObjectRelease();
          Class v17 = NSClassFromString(v16);

          if (v17)
          {
            uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
            uint64_t v19 = dynamic_cast_existential_1_conditional(ObjCClassMetadata);
            if (v19)
            {
              uint64_t v21 = v19;
              uint64_t v22 = v20;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
              *((void *)&v34 + 1) = v21;
              uint64_t v35 = v22;
              __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v33);
              v31(v21, v22);
              uint64_t v23 = sub_1C9762C3C(0xD000000000000011, 0x80000001C9C1DAD0, MEMORY[0x1E4FBC868]);
              sub_1C9668E20(v23);
              uint64_t v25 = v24;
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v6, v8, v25, v21, v22);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
              return;
            }
          }
          swift_bridgeObjectRelease();
          *(void *)&long long v33 = 0;
          *((void *)&v33 + 1) = 0xE000000000000000;
          sub_1C9BEE188();
          swift_bridgeObjectRelease();
          *(void *)&long long v33 = 0xD000000000000012;
          *((void *)&v33 + 1) = 0x80000001C9C1DAB0;
          sub_1C9BED6B8();
          swift_bridgeObjectRelease();
          sub_1C9BED6B8();
          sub_1C9BED6B8();
          swift_bridgeObjectRelease();
          sub_1C9BED6B8();
          uint64_t v27 = v37;
          id v26 = [v37 description];
          goto LABEL_22;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    else
    {
      long long v33 = 0u;
      long long v34 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C9782A58((uint64_t)&v33);
LABEL_20:
    uint64_t v9 = v37;
    *(void *)&long long v33 = 0;
    *((void *)&v33 + 1) = 0xE000000000000000;
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    *(void *)&long long v33 = 0xD00000000000002BLL;
    *((void *)&v33 + 1) = 0x80000001C9C1DA60;
    id v15 = [v9 description];
    goto LABEL_21;
  }
}

unint64_t sub_1C98161AC()
{
  return 0xD000000000000017;
}

unint64_t sub_1C981623C()
{
  return sub_1C98161AC();
}

uint64_t sub_1C9816244()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1C981626C()
{
  sub_1C9816244();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExternalFlowBehaviorResponseHandler()
{
  return self;
}

uint64_t sub_1C98162C4(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C969F5FC;
  return sub_1C9815A00(a1, a2);
}

unint64_t sub_1C9816370()
{
  unint64_t result = qword_1EA58DFA8;
  if (!qword_1EA58DFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DFA8);
  }
  return result;
}

id sub_1C98163BC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v1 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  return v2;
}

id sub_1C9816430()
{
  id v0 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleWithIdentifier_, v0);

  return v1;
}

uint64_t sub_1C9816494(void *a1)
{
  id v1 = objc_msgSend(a1, sel_infoDictionary);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1C9BED428();

  return v3;
}

uint64_t dynamic_cast_existential_1_conditional(uint64_t a1)
{
  if (swift_conformsToProtocol2()) {
    return a1;
  }
  else {
    return 0;
  }
}

unint64_t sub_1C9816544()
{
  unint64_t result = qword_1EA58DFB0;
  if (!qword_1EA58DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DFB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ExternalFlowBehaviorResponseHandler.ExecuteFlowError()
{
  return &type metadata for ExternalFlowBehaviorResponseHandler.ExecuteFlowError;
}

uint64_t OUTLINED_FUNCTION_1_36()
{
  return 0x507972617262696CLL;
}

uint64_t OUTLINED_FUNCTION_2_39()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_42()
{
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_4_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_38(float a1)
{
  *id v1 = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_6_35(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_1C981665C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeatureChecker()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlagDefinitions.PersonalDomains(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C981675CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagDefinitions.PersonalDomains()
{
  return &type metadata for FeatureFlagDefinitions.PersonalDomains;
}

unsigned char *storeEnumTagSinglePayload for FeatureFlagDefinitions.Core(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9816860);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlagDefinitions.Core()
{
  return &type metadata for FeatureFlagDefinitions.Core;
}

void sub_1C9816898()
{
}

const char *sub_1C98168D8()
{
  return "SiriPersonalDomains";
}

void sub_1C98168EC()
{
}

uint64_t sub_1C981690C()
{
  return sub_1C96C5330(*v0);
}

void sub_1C9816914()
{
}

const char *sub_1C981699C()
{
  return "SiriKitFlow";
}

void sub_1C98169B0()
{
}

unint64_t sub_1C98169D4()
{
  unint64_t result = qword_1EA58DFB8;
  if (!qword_1EA58DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58DFB8);
  }
  return result;
}

unint64_t sub_1C9816A24()
{
  unint64_t result = qword_1EA58DFC0;
  if (!qword_1EA58DFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58DFC0);
  }
  return result;
}

uint64_t sub_1C9816A70()
{
  return sub_1C96C5350(*v0);
}

uint64_t sub_1C9816A80(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C9BEAB58();
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 0;
  if (AFIsInternalInstall())
  {
    v32[3] = (uint64_t)&type metadata for FeatureFlagDefinitions.PersonalDomains;
    v32[4] = sub_1C96E699C();
    LOBYTE(v32[0]) = 1;
    char v11 = sub_1C9BEAD08();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    if (v11)
    {
      id v12 = objc_msgSend(self, sel_mainBundle);
      uint64_t v13 = sub_1C9817474(v12);
      if (!v14) {
        goto LABEL_5;
      }
      v32[0] = v13;
      v32[1] = v14;
      sub_1C9604BD0();
      uint64_t v15 = sub_1C9BEDF88();
      swift_bridgeObjectRelease();
      a4 = sub_1C965F188(v15);
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      if (!v17)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        a4 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      uint64_t v18 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000) == 0) {
        uint64_t v18 = a4 & 0xFFFFFFFFFFFFLL;
      }
      if (v18) {
        sub_1C9BEC328();
      }
      swift_bridgeObjectRelease();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1C9BECF88();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EBC7A520);
      uint64_t v24 = sub_1C9BECF78();
      os_log_type_t v29 = sub_1C9BEDC78();
      if (!OUTLINED_FUNCTION_105(v29)) {
        goto LABEL_24;
      }
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v26 = 0;
      uint64_t v27 = "no domain name found. Skipping AutoBugCapture";
    }
    else
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1C9BECF88();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EBC7A520);
      uint64_t v24 = sub_1C9BECF78();
      os_log_type_t v25 = sub_1C9BEDC78();
      if (!OUTLINED_FUNCTION_105(v25)) {
        goto LABEL_24;
      }
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v26 = 0;
      uint64_t v27 = "AutoBugCapture is disabled";
    }
    _os_log_impl(&dword_1C95F9000, v24, (os_log_type_t)a4, v27, v26, 2u);
    OUTLINED_FUNCTION_11_4();
LABEL_24:
    swift_release();

    return 0;
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C9BECF88();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1C9BECF78();
  os_log_type_t v21 = sub_1C9BEDC78();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315394;
    swift_bridgeObjectRetain();
    sub_1C95FF228(a1, a2, v32);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1C95FF228(a3, a4, v32);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v20, v21, "not an internal build. Skipping AutoBugCapture for \"%s\"/\"%s\"", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = *(unsigned __int8 *)(v10 + 16);
  swift_release();
  return v30;
}

uint64_t sub_1C9817420(char a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a2 + 16) = a1;
  return result;
}

uint64_t sub_1C9817464()
{
  return swift_deallocObject();
}

uint64_t sub_1C9817474(void *a1)
{
  id v2 = objc_msgSend(a1, sel_bundleIdentifier);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

uint64_t sub_1C98174E4(char a1)
{
  return sub_1C9817420(a1, v1);
}

uint64_t OUTLINED_FUNCTION_1_37()
{
  return sub_1C9BEDF68();
}

void Flow.deferToExecuteAsync(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v40 = v14;
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v16 - 8, v17);
  OUTLINED_FUNCTION_5_1();
  uint64_t v41 = v4;
  uint64_t DynamicType = swift_getDynamicType();
  swift_getMetatypeMetadata();
  uint64_t v39 = sub_1C9BED5D8();
  unint64_t v19 = v18;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C9BECF88();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  os_log_type_t v21 = sub_1C9BECF78();
  os_log_type_t v22 = sub_1C9BEDC88();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v37 = a1;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v38 = a2;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = swift_slowAlloc();
    long long v36 = v15;
    uint64_t v26 = v25;
    uint64_t DynamicType = v25;
    uint64_t v35 = v5;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1C95FF228(v39, v19, &DynamicType);
    a1 = v37;
    uint64_t v5 = v35;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    uint64_t v27 = v26;
    uint64_t v15 = v36;
    MEMORY[0x1CB78C440](v27, -1, -1);
    uint64_t v28 = v24;
    a2 = v38;
    MEMORY[0x1CB78C440](v28, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = sub_1C9BEDA58();
  OUTLINED_FUNCTION_37_1(v5, v30, v31, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v15, v41, a3);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = a3;
  v32[5] = a4;
  uint64_t v32[6] = a1;
  v32[7] = a2;
  OUTLINED_FUNCTION_47_10();
  v33();
  sub_1C9BEC838();
}

uint64_t sub_1C9817848()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

uint64_t sub_1C98178D4()
{
  return sub_1C96C4AA4();
}

uint64_t sub_1C98178F8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

uint64_t sub_1C9817984()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

double static ExecuteResponse.unhandled(reason:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *a1;
  type metadata accessor for ExecuteResponse(0);
  uint64_t v6 = OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_37_1(v3, v7, v8, v6);
  *(unsigned char *)a2 = 3;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 32) = v5;
  return OUTLINED_FUNCTION_17_23((_OWORD *)(a2 + *(int *)(v2 + 40)));
}

uint64_t sub_1C9817A78()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  OUTLINED_FUNCTION_8_25();
  return Flow.execute()(v3, v4, v5);
}

uint64_t sub_1C9817B14(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9817B2C);
}

uint64_t sub_1C9817B2C()
{
  OUTLINED_FUNCTION_24();
  *(void *)(v0 + 24) = swift_task_alloc();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  type metadata accessor for ExecuteResponse(0);
  *uint64_t v1 = v0;
  v1[1] = sub_1C96C7CB8;
  OUTLINED_FUNCTION_29_15();
  return MEMORY[0x1F41880D8](v2);
}

void sub_1C9817BF0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v2 = MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)&v27 - v6;
  *(void *)&v29[0] = &type metadata for SentinalFlow;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589C38);
  uint64_t v8 = sub_1C9BED5D8();
  unint64_t v10 = v9;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C9BECF88();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  uint64_t v28 = v12;
  uint64_t v13 = sub_1C9BECF78();
  os_log_type_t v14 = sub_1C9BEDC88();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v27 = v4;
    uint64_t v15 = v11;
    uint64_t v16 = v8;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(void *)&v29[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v19 = v16;
    uint64_t v11 = v15;
    *(void *)&long long v31 = sub_1C95FF228(v19, v10, (uint64_t *)v29);
    uint64_t v4 = v27;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v18, -1, -1);
    MEMORY[0x1CB78C440](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v7, v28, v11);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
  sub_1C961B8C0((uint64_t)v7, (uint64_t)v4, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v11) == 1)
  {
    sub_1C95FE81C((uint64_t)v4, &qword_1EBC7A230);
  }
  else
  {
    os_log_type_t v21 = sub_1C9BECF78();
    os_log_type_t v22 = sub_1C9BEDC88();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(void *)&v29[0] = v24;
      *(_DWORD *)uint64_t v23 = 136315650;
      uint64_t v27 = v4;
      uint64_t v25 = sub_1C9BEE1B8();
      *(void *)&long long v31 = sub_1C95FF228(v25, v26, (uint64_t *)v29);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2048;
      *(void *)&long long v31 = 191;
      sub_1C9BEDF68();
      *(_WORD *)(v23 + 22) = 2080;
      *(void *)&long long v31 = sub_1C95FF228(0xD000000000000022, 0x80000001C9C1DD60, (uint64_t *)v29);
      uint64_t v4 = v27;
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v21, v22, "FatalError at %s:%lu - %s", (uint8_t *)v23, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v24, -1, -1);
      MEMORY[0x1CB78C440](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v11);
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  long long v31 = 0u;
  long long v32 = 0u;
  uint64_t v30 = 0;
  memset(v29, 0, sizeof(v29));
  sub_1C9BEC838();
}

uint64_t sub_1C98181B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExecuteResponse(0);
  MEMORY[0x1F4188790](v2 - 8, v3);
  sub_1C981A438(a1, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ExecuteResponse);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);
  sub_1C9BEDA08();
  return sub_1C981A490(a1, (void (*)(void))type metadata accessor for ExecuteResponse);
}

SiriKitFlow::FlexibleExecutionSupportOptions __swiftcall FlexibleExecutionSupportOptions.init(rawValue:)(SiriKitFlow::FlexibleExecutionSupportOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FlexibleExecutionSupportOptions.executeBeforeEndpoint.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static FlexibleExecutionSupportOptions.inputContinuation.getter(void *a1@<X8>)
{
  *a1 = 2;
}

SiriKitFlow::FlexibleExecutionSupportOptions sub_1C9818298(Swift::Int *a1)
{
  return FlexibleExecutionSupportOptions.init(rawValue:)(*a1);
}

uint64_t sub_1C98182A0(void *a1)
{
  return sub_1C96A8FB0(*a1, *v1);
}

uint64_t sub_1C98182AC(void *a1)
{
  return sub_1C990E21C(*a1, *v1);
}

uint64_t sub_1C98182B8(void *a1)
{
  return sub_1C96A8FB8(*a1, *v1);
}

uint64_t sub_1C98182C4(void *a1)
{
  return j_j__OUTLINED_FUNCTION_5_14(*a1);
}

uint64_t sub_1C98182CC(void *a1)
{
  return j_j__OUTLINED_FUNCTION_23_29(*a1);
}

uint64_t sub_1C98182D4(uint64_t *a1)
{
  return sub_1C96A8FA8(*a1);
}

uint64_t sub_1C98182DC(void *a1)
{
  return sub_1C96A8FC0(*a1, *v1);
}

BOOL sub_1C98182E8(uint64_t *a1)
{
  return sub_1C96A8FAC(*a1, *v1);
}

uint64_t sub_1C98182F4(uint64_t *a1)
{
  return sub_1C96A8FA4(*a1);
}

SiriKitFlow::FlexibleExecutionSupportOptions sub_1C98182FC@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  result.rawValue = FlexibleExecutionSupportOptions.init(rawValue:)(*a1).rawValue;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1C9818328@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FlexibleExecutionSupportOptions.rawValue.getter();
  *a1 = result;
  return result;
}

void Input.init(parse:alternatives:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_60_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v7 = OUTLINED_FUNCTION_14_2();
  uint64_t v8 = type metadata accessor for Input(v7);
  OUTLINED_FUNCTION_21_20(v8);
  sub_1C981A438(v4, v9, (void (*)(void))type metadata accessor for Parse);
  *(void *)(v0 + *(int *)(v8 + 24)) = v2;
  sub_1C9BEAAF8();
  sub_1C981A490(v4, (void (*)(void))type metadata accessor for Parse);
  OUTLINED_FUNCTION_47_10();
  v10();
  *(unsigned char *)(v0 + *(int *)(v8 + 32)) = 0;
  OUTLINED_FUNCTION_27_0();
}

void Input.init(parse:alternatives:continuationState:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_60_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_20_0();
  char v9 = *v2;
  uint64_t v10 = type metadata accessor for Input(0);
  OUTLINED_FUNCTION_21_20(v10);
  sub_1C981A438(v6, v11, (void (*)(void))type metadata accessor for Parse);
  *(void *)(v0 + *(int *)(v10 + 24)) = v4;
  sub_1C9BEAAF8();
  sub_1C981A490(v6, (void (*)(void))type metadata accessor for Parse);
  OUTLINED_FUNCTION_47_10();
  v12();
  *(unsigned char *)(v0 + *(int *)(v10 + 32)) = v9;
  OUTLINED_FUNCTION_27_0();
}

uint64_t Input.appResolutionState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Input(0);
  return sub_1C961B8C0(v1 + *(int *)(v3 + 28), a1, &qword_1EA58DFE8);
}

uint64_t Input.appResolutionState.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Input(0) + 28);

  return sub_1C981A3D0(a1, v3);
}

uint64_t (*Input.appResolutionState.modify())(void)
{
  return nullsub_1;
}

uint64_t Input.withReformedParse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = (int *)type metadata accessor for Input(0);
  sub_1C981A438(a1, a2 + v5[5], (void (*)(void))type metadata accessor for Parse);
  uint64_t v6 = *(void *)(v2 + v5[6]);
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_51_8();
  v7();
  uint64_t v8 = a2 + v5[7];
  *(void *)(v8 + 32) = 0;
  OUTLINED_FUNCTION_17_23((_OWORD *)v8);
  *(void *)(a2 + v5[6]) = v6;
  *(unsigned char *)(a2 + v5[8]) = 0;

  return swift_bridgeObjectRetain();
}

uint64_t Input.continuationState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Input(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t Input.continuationState.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for Input(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*Input.continuationState.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C9818770()
{
  unint64_t v0 = sub_1C9BEE428();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C98187C0(char a1)
{
  uint64_t result = 0x6573726170;
  switch(a1)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_33_13();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_37_11();
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C981883C(unsigned __int8 *a1, char *a2)
{
  return sub_1C990B584(*a1, *a2);
}

uint64_t sub_1C9818848()
{
  return sub_1C96A6A24();
}

uint64_t sub_1C9818850(uint64_t a1)
{
  return sub_1C98A41C4(a1, *v1);
}

uint64_t sub_1C9818858()
{
  return sub_1C96A7330();
}

uint64_t sub_1C9818860@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C9818770();
  *a1 = result;
  return result;
}

uint64_t sub_1C9818890@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C98187C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C98188BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C98187BC();
  *a1 = result;
  return result;
}

void sub_1C98188E4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C98188F0(uint64_t a1)
{
  unint64_t v2 = sub_1C96095F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C981892C(uint64_t a1)
{
  unint64_t v2 = sub_1C96095F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void LoadedFlowInfo.flow.getter()
{
}

uint64_t LoadedFlowInfo.actingFlow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD654(v1 + 8, a1);
}

uint64_t LoadedFlowInfo.parse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LoadedFlowInfo(0);
  return sub_1C981A438(v1 + *(int *)(v3 + 24), a1, (void (*)(void))type metadata accessor for Parse);
}

uint64_t LoadedFlowInfo.activeTasks.getter()
{
  type metadata accessor for LoadedFlowInfo(0);

  return swift_bridgeObjectRetain();
}

uint64_t LoadedFlowInfo.fromBundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for LoadedFlowInfo(0);
  return sub_1C95FD654(v1 + *(int *)(v3 + 32), a1);
}

void LoadedFlowInfo.init(flow:parse:activeTasks:fromBundle:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  a2[4] = type metadata accessor for FlowToActingFlowAdapter(0);
  a2[5] = &off_1EC7023E8;
  swift_allocObject();
  sub_1C9BEC838();
}

uint64_t LoadedFlowInfo.init<A>(actingFlow:parse:activeTasks:fromBundle:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  char v9 = v8;
  type metadata accessor for AnyFlow();
  swift_allocObject();
  *char v9 = sub_1C96C5784();
  void v9[4] = v3;
  v9[5] = v1;
  __swift_allocate_boxed_opaque_existential_1Tm(v9 + 1);
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v10 + 32))();
  uint64_t v11 = type metadata accessor for LoadedFlowInfo(0);
  sub_1C960B3E4(v7, (uint64_t)v9 + *(int *)(v11 + 24));
  *(void *)((char *)v9 + *(int *)(v11 + 28)) = v5;
  OUTLINED_FUNCTION_27_0();
  return sub_1C95FD5D8(v12, v13);
}

uint64_t InputContinuationState.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t sub_1C9818C10(uint64_t a1)
{
  unint64_t v2 = sub_1C960B99C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9818C4C(uint64_t a1)
{
  unint64_t v2 = sub_1C960B99C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9818C88(uint64_t a1)
{
  unint64_t v2 = sub_1C981A504();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9818CC4(uint64_t a1)
{
  unint64_t v2 = sub_1C981A504();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9818D00(uint64_t a1)
{
  unint64_t v2 = sub_1C960BC98();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9818D3C(uint64_t a1)
{
  unint64_t v2 = sub_1C960BC98();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t InputContinuationState.hashValue.getter()
{
  return sub_1C9BEE768();
}

BOOL static ExecuteResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ExecuteResponseType.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t ExecuteResponseType.hashValue.getter()
{
  return sub_1C9BEE768();
}

void static PrescribedTool.searchTool.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void static PrescribedTool.generateKnowledgeResponseIntentTool.getter(unsigned char *a1@<X8>)
{
}

uint64_t sub_1C9818E70()
{
  return sub_1C970DBA0();
}

uint64_t AnyChildCompletion.__allocating_init(_:)()
{
  OUTLINED_FUNCTION_82();
  uint64_t v2 = OUTLINED_FUNCTION_60_0();
  uint64_t v3 = OUTLINED_FUNCTION_60_0();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v0;
  *(void *)(v2 + 16) = sub_1C981A588;
  *(void *)(v2 + 24) = v3;
  return v2;
}

uint64_t AnyChildCompletion.init(_:)()
{
  OUTLINED_FUNCTION_82();
  uint64_t v3 = OUTLINED_FUNCTION_60_0();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v0;
  *(void *)(v1 + 16) = sub_1C9824D90;
  *(void *)(v1 + 24) = v3;
  return v1;
}

uint64_t AnyChildCompletion.deinit()
{
  swift_release();
  return v0;
}

double static ExecuteResponse.ongoing<A>(next:)()
{
  uint64_t v2 = OUTLINED_FUNCTION_41_9();
  uint64_t v3 = OUTLINED_FUNCTION_8_27();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *(unsigned char *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = v2;
  *(void *)(v0 + 24) = 0;
  return OUTLINED_FUNCTION_10_29();
}

void static ExecuteResponse.ongoing<A>(next:)(unsigned char *a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_8_27();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *a1 = 0;
  OUTLINED_FUNCTION_14_29();

  sub_1C9BEC838();
}

void static ExecuteResponse.ongoing(next:childCompletion:)()
{
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_79_4();
  uint64_t v4 = OUTLINED_FUNCTION_60_0();
  uint64_t v5 = OUTLINED_FUNCTION_60_0();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v0;
  *(void *)(v4 + 16) = sub_1C9824D90;
  *(void *)(v4 + 24) = v5;
  type metadata accessor for ExecuteResponse(0);
  uint64_t v6 = OUTLINED_FUNCTION_58_5();
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v6);
  *uint64_t v2 = 0;
  OUTLINED_FUNCTION_31_16();
}

void static ExecuteResponse.ongoing(next:)(unsigned char *a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_11_31();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *a1 = 0;
  OUTLINED_FUNCTION_13_36();

  sub_1C9BEC838();
}

uint64_t static ExecuteResponse.ongoing(retrigger:as:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = type metadata accessor for ExecuteResponse(0);
  uint64_t v11 = v9 + *(int *)(v10 + 36);
  uint64_t v12 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_37_1(v11, v13, v14, v12);
  *(unsigned char *)uint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  *(void *)(v9 + 24) = 0;
  *(unsigned char *)(v9 + 16) = 1;
  *(unsigned char *)(v9 + 32) = 7;
  uint64_t v15 = (void *)(v9 + *(int *)(v10 + 40));
  *uint64_t v15 = v7;
  v15[1] = v5;
  void v15[2] = v3;
  v15[3] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_27_0();
  return swift_bridgeObjectRetain();
}

void static ExecuteResponse.complete<A>(next:childCompletion:)()
{
}

{
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_44_10();
  sub_1C9BEC838();
}

void static ExecuteResponse.complete(next:childCompletion:)()
{
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_79_4();
  uint64_t v4 = OUTLINED_FUNCTION_60_0();
  uint64_t v5 = OUTLINED_FUNCTION_60_0();
  *(void *)(v5 + 16) = v1;
  *(void *)(v5 + 24) = v0;
  *(void *)(v4 + 16) = sub_1C9824D90;
  *(void *)(v4 + 24) = v5;
  type metadata accessor for ExecuteResponse(0);
  uint64_t v6 = OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_37_1(v3, v7, v8, v6);
  *uint64_t v2 = 1;
  OUTLINED_FUNCTION_31_16();
}

double static ExecuteResponse.replan<A>(next:)()
{
  uint64_t v2 = OUTLINED_FUNCTION_41_9();
  uint64_t v3 = OUTLINED_FUNCTION_8_27();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *(unsigned char *)uint64_t v0 = 2;
  *(void *)(v0 + 8) = v2;
  *(void *)(v0 + 24) = 0;
  return OUTLINED_FUNCTION_10_29();
}

void static ExecuteResponse.replan<A>(next:childCompletion:)()
{
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 32);
  type metadata accessor for AnyChildCompletion();
  uint64_t v8 = OUTLINED_FUNCTION_60_0();
  uint64_t v9 = OUTLINED_FUNCTION_60_0();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v1;
  *(void *)(v8 + 16) = sub_1C9824D90;
  *(void *)(v8 + 24) = v9;
  type metadata accessor for ExecuteResponse(0);
  uint64_t v10 = OUTLINED_FUNCTION_70_4();
  OUTLINED_FUNCTION_67_6(v10);
  *(void *)(v5 + 8) = v7;
  OUTLINED_FUNCTION_35_15();
}

void static ExecuteResponse.replan<A>(next:)(unsigned char *a1@<X8>)
{
  uint64_t v3 = OUTLINED_FUNCTION_8_27();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v3);
  *a1 = 2;
  OUTLINED_FUNCTION_14_29();

  sub_1C9BEC838();
}

void static ExecuteResponse.replan(next:childCompletion:)()
{
  OUTLINED_FUNCTION_28();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  type metadata accessor for AnyChildCompletion();
  uint64_t v8 = OUTLINED_FUNCTION_60_0();
  uint64_t v9 = OUTLINED_FUNCTION_60_0();
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v1;
  *(void *)(v8 + 16) = sub_1C9824D90;
  *(void *)(v8 + 24) = v9;
  type metadata accessor for ExecuteResponse(0);
  uint64_t v10 = OUTLINED_FUNCTION_70_4();
  OUTLINED_FUNCTION_67_6(v10);
  *(void *)(v7 + 8) = v5;
  OUTLINED_FUNCTION_35_15();
}

void static ExecuteResponse.replan(next:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_11_31();
  OUTLINED_FUNCTION_68_4(v0);
  OUTLINED_FUNCTION_13_36();

  sub_1C9BEC838();
}

double static ExecuteResponse.redirect(nextPluginAction:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ExecuteResponse(0);
  uint64_t v5 = a2 + *(int *)(v4 + 36);
  sub_1C981A438(a1, v5, (void (*)(void))type metadata accessor for PluginAction);
  uint64_t v6 = type metadata accessor for PluginAction();
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v6);
  *(unsigned char *)a2 = 1;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 32) = 7;
  return OUTLINED_FUNCTION_17_23((_OWORD *)(a2 + *(int *)(v4 + 40)));
}

uint64_t sub_1C98196D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a4;
  v8[3] = a5;
  type metadata accessor for ExecuteResponse(0);
  uint64_t v11 = swift_task_alloc();
  v8[4] = v11;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 40) + **(int **)(a8 + 40));
  uint64_t v12 = (void *)swift_task_alloc();
  void v8[5] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_1C981980C;
  return v14(v11, a7, a8);
}

uint64_t sub_1C981980C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C98198D8, 0, 0);
}

uint64_t sub_1C98198D8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 16))(v1);
  sub_1C981A490(v1, (void (*)(void))type metadata accessor for ExecuteResponse);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

void sub_1C9819960()
{
}

uint64_t sub_1C98199A4()
{
  sub_1C95FF454(v0 + 32, (uint64_t)&v3);
  int v1 = OUTLINED_FUNCTION_50_9();
  return OUTLINED_FUNCTION_74_0(v1);
}

uint64_t sub_1C98199F4()
{
  sub_1C95FF454(v0 + 32, (uint64_t)&v2);
  return swift_dynamicCast();
}

void sub_1C9819A3C()
{
}

void sub_1C9819A68(uint64_t a1)
{
  *(void *)(a1 + 8) = v1;
  sub_1C9615C44();
}

uint64_t sub_1C9819AB0(void *a1, char a2)
{
  return sub_1C9819D38(a1, a2, (uint64_t (*)(void))sub_1C9614BE4);
}

void sub_1C9819AC8(uint64_t a1)
{
  *(void *)(a1 + 8) = *v1;
  sub_1C9615C44();
}

void sub_1C9819B14(uint64_t a1, char a2)
{
  if (a2) {
    sub_1C9BEC838();
  }
  sub_1C9614BE4();
}

uint64_t sub_1C9819B6C()
{
  return sub_1C968C6BC() & 1;
}

uint64_t sub_1C9819B94()
{
  return sub_1C98199A0();
}

uint64_t sub_1C9819BB8()
{
  return sub_1C9665A74();
}

void sub_1C9819BDC()
{
  OUTLINED_FUNCTION_82();
  uint64_t v2 = type metadata accessor for AnyValueFlow();
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(v1, v0, v2, WitnessTable);
}

uint64_t sub_1C9819C64()
{
  return sub_1C98199A4();
}

uint64_t sub_1C9819C88()
{
  return sub_1C96146F8();
}

void sub_1C9819CAC()
{
}

void sub_1C9819CD8(uint64_t a1)
{
  *(void *)(a1 + 8) = v1;
  sub_1C966CD30();
}

uint64_t sub_1C9819D20(void *a1, char a2)
{
  return sub_1C9819D38(a1, a2, (uint64_t (*)(void))sub_1C966CCE8);
}

uint64_t sub_1C9819D38(void *a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    sub_1C9BEC838();
  }
  return a3(*a1);
}

void sub_1C9819DA8(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C9819CD8((uint64_t)v2);
}

void sub_1C9819E04()
{
}

uint64_t sub_1C9819E28()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_14();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_5(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C96167B4;
  return v6(v1);
}

uint64_t sub_1C9819EB8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = v0;
  uint64_t v2 = OUTLINED_FUNCTION_14();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_5(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C9615888;
  return v6(v1);
}

uint64_t sub_1C9819F4C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_2_40();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96981BC;
  uint64_t v3 = OUTLINED_FUNCTION_0_32();
  return Flow.onAsync(input:)(v3, v4, v5);
}

uint64_t sub_1C9819FDC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

uint64_t sub_1C981A068()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

uint64_t sub_1C981A0F4(uint64_t a1)
{
  return nullsub_1(a1);
}

uint64_t sub_1C981A118()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

uint64_t sub_1C981A1A4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_1C981A24C(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  OUTLINED_FUNCTION_2_2();
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = (uint64_t)v1 + ((*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v11 = swift_task_alloc();
  uint64_t v12 = (void *)OUTLINED_FUNCTION_17_5(v11);
  *uint64_t v12 = v13;
  v12[1] = sub_1C9615888;
  return sub_1C98196D0(a1, v6, v7, v8, v9, v10, v3, v4);
}

uint64_t sub_1C981A338()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = OUTLINED_FUNCTION_114();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96167B4;
  uint64_t v3 = OUTLINED_FUNCTION_24_17();
  return v4(v3);
}

uint64_t sub_1C981A3C4(uint64_t a1)
{
  return sub_1C961E46C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C981A3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DFE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C981A438(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_51_8();
  v4();
  return a2;
}

uint64_t sub_1C981A490(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

uint64_t type metadata accessor for LoadedFlowInfo(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA58E090);
}

unint64_t sub_1C981A504()
{
  unint64_t result = qword_1EA58DFF0;
  if (!qword_1EA58DFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58DFF0);
  }
  return result;
}

uint64_t sub_1C981A550()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C981A588()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C981A5B0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C981A5E8()
{
  OUTLINED_FUNCTION_112();
  uint64_t v0 = OUTLINED_FUNCTION_14_1();
  v1(v0);
  OUTLINED_FUNCTION_52_9();

  return swift_deallocObject();
}

unint64_t sub_1C981A658()
{
  unint64_t result = qword_1EA58E018;
  if (!qword_1EA58E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E018);
  }
  return result;
}

unint64_t sub_1C981A6A8()
{
  unint64_t result = qword_1EA58E020;
  if (!qword_1EA58E020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E020);
  }
  return result;
}

unint64_t sub_1C981A6F4()
{
  unint64_t result = qword_1EA58E028;
  if (!qword_1EA58E028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E028);
  }
  return result;
}

unint64_t sub_1C981A740()
{
  unint64_t result = qword_1EA58E030;
  if (!qword_1EA58E030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E030);
  }
  return result;
}

unint64_t sub_1C981A794()
{
  unint64_t result = qword_1EA58E040;
  if (!qword_1EA58E040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E040);
  }
  return result;
}

uint64_t sub_1C981A7E0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C960963C(&qword_1EA58E048, a2, (void (*)(uint64_t))type metadata accessor for AnyFlow);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C981A838(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

void sub_1C981A898()
{
}

void sub_1C981A8C8()
{
}

uint64_t sub_1C981A8F8()
{
  return 8;
}

void *sub_1C981A904(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of Flow.on(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Flow.onAsync(input:)()
{
  OUTLINED_FUNCTION_89();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 24) + **(int **)(v0 + 24));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C96167B4;
  uint64_t v4 = OUTLINED_FUNCTION_0_32();
  return v6(v4);
}

uint64_t dispatch thunk of Flow.execute(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of Flow.execute()()
{
  OUTLINED_FUNCTION_89();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_17_5(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C9615888;
  return v8(v2, v1, v0);
}

uint64_t dispatch thunk of Flow.exitValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Flow.flexibleExecutionSupport.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void *initializeBufferWithCopyOfBuffer for Input(void *a1, void *a2, int *a3)
{
  if ((*(_DWORD *)(*((void *)a3 - 1) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v11 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
      goto LABEL_27;
    case 1u:
      uint64_t v12 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)v8 + *(int *)(v13 + 48)) = *(void *)((char *)v9 + *(int *)(v13 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v14 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v14;
      v8[2] = v9[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      *uint64_t v8 = *v9;
      swift_unknownObjectRetain();
      goto LABEL_27;
    case 4u:
      uint64_t v15 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      goto LABEL_27;
    case 5u:
      uint64_t v16 = (void *)*v9;
      *uint64_t v8 = *v9;
      id v17 = v16;
      goto LABEL_27;
    case 6u:
      uint64_t v18 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v8, v9, v18);
      uint64_t v19 = (int *)type metadata accessor for USOParse();
      uint64_t v20 = v19[5];
      os_log_type_t v21 = (char *)v8 + v20;
      os_log_type_t v22 = (char *)v9 + v20;
      uint64_t v23 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      }
      uint64_t v44 = v19[6];
      uint64_t v45 = (void *)((char *)v8 + v44);
      uint64_t v46 = (void *)((char *)v9 + v44);
      uint64_t v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      uint64_t v48 = v19[7];
      uint64_t v49 = (char *)v8 + v48;
      uint64_t v50 = (char *)v9 + v48;
      v49[4] = v50[4];
      *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      uint64_t v25 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v8, v9, v25);
      unint64_t v26 = (int *)type metadata accessor for USOParse();
      uint64_t v27 = v26[5];
      uint64_t v28 = (char *)v8 + v27;
      uint64_t v29 = (char *)v9 + v27;
      uint64_t v30 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      }
      uint64_t v51 = v26[6];
      uint64_t v52 = (void *)((char *)v8 + v51);
      uint64_t v53 = (void *)((char *)v9 + v51);
      uint64_t v54 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v54;
      uint64_t v55 = v26[7];
      uint64_t v56 = (char *)v8 + v55;
      long long v57 = (char *)v9 + v55;
      v56[4] = v57[4];
      *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
      uint64_t v58 = (int *)type metadata accessor for LinkParse();
      uint64_t v59 = v58[5];
      uint64_t v60 = (void *)((char *)v8 + v59);
      unint64_t v61 = (void *)((char *)v9 + v59);
      uint64_t v62 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = v58[6];
      uint64_t v64 = (void *)((char *)v8 + v63);
      uint64_t v65 = (void *)((char *)v9 + v63);
      uint64_t v66 = v65[1];
      *uint64_t v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v58[7];
      uint64_t v68 = (void *)((char *)v8 + v67);
      uint64_t v69 = (void *)((char *)v9 + v67);
      uint64_t v70 = v69[1];
      *uint64_t v68 = *v69;
      v68[1] = v70;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 8u:
      uint64_t v32 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v8, v9, v32);
      uint64_t v33 = type metadata accessor for NLRouterParse();
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v35 = (void *)((char *)v8 + v34);
      long long v36 = (void *)((char *)v9 + v34);
      uint64_t v37 = v36[1];
      *uint64_t v35 = *v36;
      v35[1] = v37;
      uint64_t v97 = v33;
      uint64_t v38 = *(int *)(v33 + 24);
      uint64_t v39 = (char *)v8 + v38;
      uint64_t v40 = (char *)v9 + v38;
      uint64_t v41 = (int *)type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, (uint64_t)v41))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v71 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v39, v40, v71);
        uint64_t v72 = v41[5];
        unint64_t v96 = &v39[v72];
        uint64_t v73 = &v40[v72];
        uint64_t v74 = sub_1C9BEAE48();
        uint64_t v95 = v73;
        uint64_t v75 = (uint64_t)v73;
        uint64_t v76 = v74;
        if (__swift_getEnumTagSinglePayload(v75, 1, v74))
        {
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v96, v95, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v96, v95, v76);
          __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v76);
        }
        uint64_t v78 = v41[6];
        int v79 = &v39[v78];
        uint64_t v80 = &v40[v78];
        uint64_t v81 = *((void *)v80 + 1);
        *(void *)int v79 = *(void *)v80;
        *((void *)v79 + 1) = v81;
        uint64_t v82 = v41[7];
        uint64_t v83 = &v39[v82];
        uint64_t v84 = &v40[v82];
        v83[4] = v84[4];
        *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, (uint64_t)v41);
      }
      uint64_t v85 = *(int *)(v97 + 28);
      uint64_t v86 = *(void **)((char *)v9 + v85);
      *(void *)((char *)v8 + v85) = v86;
      id v87 = v86;
      goto LABEL_27;
    case 9u:
      uint64_t v43 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v8, v9, v43);
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      break;
  }
  uint64_t v88 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v89 = (char *)a1 + v88;
  uint64_t v90 = (char *)a2 + v88;
  uint64_t v91 = *(void *)((char *)a2 + v88 + 24);
  swift_bridgeObjectRetain();
  if (v91)
  {
    uint64_t v92 = *((void *)v90 + 4);
    *((void *)v89 + 3) = v91;
    *((void *)v89 + 4) = v92;
    (**(void (***)(char *, char *, uint64_t))(v91 - 8))(v89, v90, v91);
  }
  else
  {
    long long v93 = *((_OWORD *)v90 + 1);
    *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
    *((_OWORD *)v89 + 1) = v93;
    *((void *)v89 + 4) = *((void *)v90 + 4);
  }
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t assignWithCopy for Input(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1C981A490(a1 + v7, (void (*)(void))type metadata accessor for Parse);
    uint64_t v10 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v11 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
        goto LABEL_26;
      case 1u:
        uint64_t v12 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)((char *)v8 + *(int *)(v13 + 48)) = *(void *)((char *)v9 + *(int *)(v13 + 48));
        sub_1C9BEC838();
      case 2u:
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        v8[2] = v9[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *uint64_t v8 = *v9;
        swift_unknownObjectRetain();
        goto LABEL_26;
      case 4u:
        uint64_t v14 = sub_1C9BEAC48();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
        goto LABEL_26;
      case 5u:
        uint64_t v15 = (void *)*v9;
        *uint64_t v8 = *v9;
        id v16 = v15;
        goto LABEL_26;
      case 6u:
        uint64_t v17 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v9, v17);
        uint64_t v18 = (int *)type metadata accessor for USOParse();
        uint64_t v19 = v18[5];
        uint64_t v20 = (char *)v8 + v19;
        os_log_type_t v21 = (char *)v9 + v19;
        uint64_t v22 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        uint64_t v42 = v18[6];
        uint64_t v43 = (void *)((char *)v8 + v42);
        uint64_t v44 = (void *)((char *)v9 + v42);
        *uint64_t v43 = *v44;
        v43[1] = v44[1];
        uint64_t v45 = v18[7];
        uint64_t v46 = (char *)v8 + v45;
        uint64_t v47 = (char *)v9 + v45;
        int v48 = *(_DWORD *)v47;
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = v48;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 7u:
        uint64_t v24 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v9, v24);
        uint64_t v25 = (int *)type metadata accessor for USOParse();
        uint64_t v26 = v25[5];
        uint64_t v27 = (char *)v8 + v26;
        uint64_t v28 = (char *)v9 + v26;
        uint64_t v29 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
        }
        uint64_t v49 = v25[6];
        uint64_t v50 = (void *)((char *)v8 + v49);
        uint64_t v51 = (void *)((char *)v9 + v49);
        *uint64_t v50 = *v51;
        v50[1] = v51[1];
        uint64_t v52 = v25[7];
        uint64_t v53 = (char *)v8 + v52;
        uint64_t v54 = (char *)v9 + v52;
        int v55 = *(_DWORD *)v54;
        v53[4] = v54[4];
        *(_DWORD *)uint64_t v53 = v55;
        uint64_t v56 = (int *)type metadata accessor for LinkParse();
        uint64_t v57 = v56[5];
        uint64_t v58 = (void *)((char *)v8 + v57);
        uint64_t v59 = (void *)((char *)v9 + v57);
        *uint64_t v58 = *v59;
        v58[1] = v59[1];
        uint64_t v60 = v56[6];
        unint64_t v61 = (void *)((char *)v8 + v60);
        uint64_t v62 = (void *)((char *)v9 + v60);
        *unint64_t v61 = *v62;
        v61[1] = v62[1];
        uint64_t v63 = v56[7];
        uint64_t v64 = (void *)((char *)v8 + v63);
        uint64_t v65 = (void *)((char *)v9 + v63);
        *uint64_t v64 = *v65;
        v64[1] = v65[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 8u:
        uint64_t v31 = sub_1C9BEC928();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v8, v9, v31);
        uint64_t v32 = type metadata accessor for NLRouterParse();
        uint64_t v33 = *(int *)(v32 + 20);
        uint64_t v34 = (void *)((char *)v8 + v33);
        uint64_t v35 = (void *)((char *)v9 + v33);
        *uint64_t v34 = *v35;
        v34[1] = v35[1];
        uint64_t v92 = v32;
        uint64_t v36 = *(int *)(v32 + 24);
        uint64_t v37 = (char *)v8 + v36;
        uint64_t v38 = (char *)v9 + v36;
        uint64_t v39 = (int *)type metadata accessor for USOParse();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, (uint64_t)v39))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v66 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v37, v38, v66);
          uint64_t v67 = v39[5];
          uint64_t v91 = &v37[v67];
          uint64_t v68 = &v38[v67];
          uint64_t v69 = sub_1C9BEAE48();
          uint64_t v90 = v68;
          uint64_t v70 = (uint64_t)v68;
          uint64_t v71 = v69;
          if (__swift_getEnumTagSinglePayload(v70, 1, v69))
          {
            uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v91, v90, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v91, v90, v71);
            __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v71);
          }
          uint64_t v73 = v39[6];
          uint64_t v74 = &v37[v73];
          uint64_t v75 = &v38[v73];
          *(void *)uint64_t v74 = *(void *)v75;
          *((void *)v74 + 1) = *((void *)v75 + 1);
          uint64_t v76 = v39[7];
          uint64_t v77 = &v37[v76];
          uint64_t v78 = &v38[v76];
          int v79 = *(_DWORD *)v78;
          v77[4] = v78[4];
          *(_DWORD *)uint64_t v77 = v79;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v37, 0, 1, (uint64_t)v39);
        }
        uint64_t v80 = *(int *)(v92 + 28);
        uint64_t v81 = *(void **)((char *)v9 + v80);
        *(void *)((char *)v8 + v80) = v81;
        id v82 = v81;
        goto LABEL_26;
      case 9u:
        uint64_t v41 = sub_1C9BEC8F8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v8, v9, v41);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v83 = a3[7];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = (long long *)(a2 + v83);
  uint64_t v86 = *(void *)(a2 + v83 + 24);
  if (!*(void *)(a1 + v83 + 24))
  {
    if (v86)
    {
      *(void *)(v84 + 24) = v86;
      *(void *)(v84 + 32) = *((void *)v85 + 4);
      (**(void (***)(uint64_t, long long *))(v86 - 8))(v84, v85);
      goto LABEL_34;
    }
LABEL_33:
    long long v87 = *v85;
    long long v88 = v85[1];
    *(void *)(v84 + 32) = *((void *)v85 + 4);
    *(_OWORD *)uint64_t v84 = v87;
    *(_OWORD *)(v84 + 16) = v88;
    goto LABEL_34;
  }
  if (!v86)
  {
    __swift_destroy_boxed_opaque_existential_1(v84);
    goto LABEL_33;
  }
  __swift_assign_boxed_opaque_existential_1((void *)v84, v85);
LABEL_34:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t initializeWithTake for Input(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v11 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      goto LABEL_22;
    case 1u:
      uint64_t v12 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v8[*(int *)(v13 + 48)] = *(void *)&v9[*(int *)(v13 + 48)];
      goto LABEL_22;
    case 4u:
      uint64_t v14 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
      goto LABEL_22;
    case 6u:
      uint64_t v15 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
      id v16 = (int *)type metadata accessor for USOParse();
      uint64_t v17 = v16[5];
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      uint64_t v20 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      *(_OWORD *)&v8[v16[6]] = *(_OWORD *)&v9[v16[6]];
      uint64_t v37 = v16[7];
      uint64_t v38 = &v8[v37];
      uint64_t v39 = &v9[v37];
      v38[4] = v39[4];
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      goto LABEL_22;
    case 7u:
      uint64_t v22 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v8, v9, v22);
      uint64_t v23 = (int *)type metadata accessor for USOParse();
      uint64_t v24 = v23[5];
      uint64_t v25 = &v8[v24];
      uint64_t v26 = &v9[v24];
      uint64_t v27 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      }
      *(_OWORD *)&v8[v23[6]] = *(_OWORD *)&v9[v23[6]];
      uint64_t v40 = v23[7];
      uint64_t v41 = &v8[v40];
      uint64_t v42 = &v9[v40];
      v41[4] = v42[4];
      *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
      uint64_t v43 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v8[v43[5]] = *(_OWORD *)&v9[v43[5]];
      *(_OWORD *)&v8[v43[6]] = *(_OWORD *)&v9[v43[6]];
      *(_OWORD *)&v8[v43[7]] = *(_OWORD *)&v9[v43[7]];
      goto LABEL_22;
    case 8u:
      uint64_t v29 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v8, v9, v29);
      uint64_t v30 = (int *)type metadata accessor for NLRouterParse();
      *(_OWORD *)&v8[v30[5]] = *(_OWORD *)&v9[v30[5]];
      uint64_t v31 = v30[6];
      uint64_t v32 = &v8[v31];
      uint64_t v33 = &v9[v31];
      uint64_t v34 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, (uint64_t)v34))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        uint64_t v44 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v32, v33, v44);
        uint64_t v45 = v34[5];
        uint64_t v59 = (uint64_t)v32;
        unint64_t v61 = &v32[v45];
        uint64_t v46 = &v33[v45];
        uint64_t v47 = sub_1C9BEAE48();
        uint64_t v60 = v46;
        uint64_t v48 = (uint64_t)v46;
        uint64_t v49 = v47;
        if (__swift_getEnumTagSinglePayload(v48, 1, v47))
        {
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v61, v60, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v61, v60, v49);
          __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v49);
        }
        *(_OWORD *)(v59 + v34[6]) = *(_OWORD *)&v33[v34[6]];
        uint64_t v51 = v34[7];
        uint64_t v52 = v59 + v51;
        uint64_t v53 = &v33[v51];
        *(unsigned char *)(v52 + 4) = v53[4];
        *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
        __swift_storeEnumTagSinglePayload(v59, 0, 1, (uint64_t)v34);
      }
      *(void *)&v8[v30[7]] = *(void *)&v9[v30[7]];
      goto LABEL_22;
    case 9u:
      uint64_t v36 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v8, v9, v36);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      break;
  }
  uint64_t v54 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v55 = a1 + v54;
  uint64_t v56 = a2 + v54;
  long long v57 = *(_OWORD *)(v56 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *(_OWORD *)(v55 + 16) = v57;
  *(void *)(v55 + 32) = *(void *)(v56 + 32);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for Input(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)(a2 + v7);
    sub_1C981A490(a1 + v7, (void (*)(void))type metadata accessor for Parse);
    uint64_t v10 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v11 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        goto LABEL_23;
      case 1u:
        uint64_t v12 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v8[*(int *)(v13 + 48)] = *(void *)&v9[*(int *)(v13 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v14 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
        goto LABEL_23;
      case 6u:
        uint64_t v15 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
        id v16 = (int *)type metadata accessor for USOParse();
        uint64_t v17 = v16[5];
        uint64_t v18 = &v8[v17];
        uint64_t v19 = &v9[v17];
        uint64_t v20 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
        }
        *(_OWORD *)&v8[v16[6]] = *(_OWORD *)&v9[v16[6]];
        uint64_t v37 = v16[7];
        uint64_t v38 = &v8[v37];
        uint64_t v39 = &v9[v37];
        v38[4] = v39[4];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        goto LABEL_23;
      case 7u:
        uint64_t v22 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v8, v9, v22);
        uint64_t v23 = (int *)type metadata accessor for USOParse();
        uint64_t v24 = v23[5];
        uint64_t v25 = &v8[v24];
        uint64_t v26 = &v9[v24];
        uint64_t v27 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
        }
        *(_OWORD *)&v8[v23[6]] = *(_OWORD *)&v9[v23[6]];
        uint64_t v40 = v23[7];
        uint64_t v41 = &v8[v40];
        uint64_t v42 = &v9[v40];
        v41[4] = v42[4];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        uint64_t v43 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v8[v43[5]] = *(_OWORD *)&v9[v43[5]];
        *(_OWORD *)&v8[v43[6]] = *(_OWORD *)&v9[v43[6]];
        *(_OWORD *)&v8[v43[7]] = *(_OWORD *)&v9[v43[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v29 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v8, v9, v29);
        uint64_t v30 = (int *)type metadata accessor for NLRouterParse();
        *(_OWORD *)&v8[v30[5]] = *(_OWORD *)&v9[v30[5]];
        uint64_t v31 = v30[6];
        uint64_t v32 = &v8[v31];
        uint64_t v33 = &v9[v31];
        uint64_t v34 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, (uint64_t)v34))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v44 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v32, v33, v44);
          uint64_t v45 = v34[5];
          uint64_t v58 = (uint64_t)v32;
          uint64_t v60 = &v32[v45];
          uint64_t v46 = &v33[v45];
          uint64_t v47 = sub_1C9BEAE48();
          uint64_t v59 = v46;
          uint64_t v48 = (uint64_t)v46;
          uint64_t v49 = v47;
          if (__swift_getEnumTagSinglePayload(v48, 1, v47))
          {
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v60, v59, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v60, v59, v49);
            __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v49);
          }
          *(_OWORD *)(v58 + v34[6]) = *(_OWORD *)&v33[v34[6]];
          uint64_t v51 = v34[7];
          uint64_t v52 = v58 + v51;
          uint64_t v53 = &v33[v51];
          *(unsigned char *)(v52 + 4) = v53[4];
          *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
          __swift_storeEnumTagSinglePayload(v58, 0, 1, (uint64_t)v34);
        }
        *(void *)&v8[v30[7]] = *(void *)&v9[v30[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v36 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v8, v9, v36);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[7];
  uint64_t v55 = a1 + v54;
  if (*(void *)(a1 + v54 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + v54);
  }
  long long v56 = *(_OWORD *)(a2 + v54 + 16);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)(a2 + v54);
  *(_OWORD *)(v55 + 16) = v56;
  *(void *)(v55 + 32) = *(void *)(a2 + v54 + 32);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1C981CB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_2_2();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for Parse(0);
    OUTLINED_FUNCTION_2_2();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return OUTLINED_FUNCTION_10_0(*(void *)(a1 + *(int *)(a3 + 24)));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return __swift_getEnumTagSinglePayload(v9, a2, v8);
}

void sub_1C981CBC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_2_2();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Parse(0);
    OUTLINED_FUNCTION_2_2();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  __swift_storeEnumTagSinglePayload(v11, a2, a2, v10);
}

uint64_t sub_1C981CC78()
{
  uint64_t result = sub_1C9BEAB08();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Parse(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void initializeBufferWithCopyOfBuffer for LoadedFlowInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) == 0)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    sub_1C9BEC838();
  }
  sub_1C9BEC838();
}

uint64_t destroy for LoadedFlowInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = (void **)(a1 + *(int *)(a2 + 24));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1C9BEC028();
      goto LABEL_22;
    case 1u:
      uint64_t v7 = sub_1C9BEC028();
      (*(void (**)(void **, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      uint64_t v6 = sub_1C9BEAC48();
      goto LABEL_22;
    case 5u:
      uint64_t v8 = *v5;
      goto LABEL_20;
    case 6u:
      uint64_t v9 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
      uint64_t v10 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v11 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      goto LABEL_14;
    case 7u:
      uint64_t v12 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v12 - 8) + 8))(v5, v12);
      uint64_t v13 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v14 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      uint64_t v15 = sub_1C9BEC928();
      (*(void (**)(void **, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      uint64_t v16 = type metadata accessor for NLRouterParse();
      swift_bridgeObjectRelease();
      uint64_t v17 = (uint64_t)v5 + *(int *)(v16 + 24);
      uint64_t v18 = type metadata accessor for USOParse();
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
      {
        uint64_t v19 = sub_1C9BEAF18();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
        uint64_t v20 = v17 + *(int *)(v18 + 20);
        uint64_t v21 = sub_1C9BEAE48();
        if (!__swift_getEnumTagSinglePayload(v20, 1, v21)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v8 = *(void **)((char *)v5 + *(int *)(v16 + 28));
LABEL_20:

      break;
    case 9u:
      uint64_t v6 = sub_1C9BEC8F8();
LABEL_22:
      (*(void (**)(void **, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 32));
}

void initializeWithCopy for LoadedFlowInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_1C9BEC838();
}

void assignWithCopy for LoadedFlowInfo(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1C9BEC838();
}

uint64_t initializeWithTake for LoadedFlowInfo(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v10 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      goto LABEL_22;
    case 1u:
      uint64_t v11 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v7[*(int *)(v12 + 48)] = *(void *)&v8[*(int *)(v12 + 48)];
      goto LABEL_22;
    case 4u:
      uint64_t v13 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      goto LABEL_22;
    case 6u:
      uint64_t v14 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      uint64_t v15 = (int *)type metadata accessor for USOParse();
      uint64_t v16 = v15[5];
      uint64_t v17 = &v7[v16];
      uint64_t v18 = &v8[v16];
      uint64_t v19 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      *(_OWORD *)&v7[v15[6]] = *(_OWORD *)&v8[v15[6]];
      uint64_t v36 = v15[7];
      uint64_t v37 = &v7[v36];
      uint64_t v38 = &v8[v36];
      uint64_t v37[4] = v38[4];
      *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
      goto LABEL_22;
    case 7u:
      uint64_t v21 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
      uint64_t v22 = (int *)type metadata accessor for USOParse();
      uint64_t v23 = v22[5];
      uint64_t v24 = &v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      *(_OWORD *)&v7[v22[6]] = *(_OWORD *)&v8[v22[6]];
      uint64_t v39 = v22[7];
      uint64_t v40 = &v7[v39];
      uint64_t v41 = &v8[v39];
      v40[4] = v41[4];
      *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
      uint64_t v42 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v7[v42[5]] = *(_OWORD *)&v8[v42[5]];
      *(_OWORD *)&v7[v42[6]] = *(_OWORD *)&v8[v42[6]];
      *(_OWORD *)&v7[v42[7]] = *(_OWORD *)&v8[v42[7]];
      goto LABEL_22;
    case 8u:
      uint64_t v28 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
      uint64_t v29 = (int *)type metadata accessor for NLRouterParse();
      *(_OWORD *)&v7[v29[5]] = *(_OWORD *)&v8[v29[5]];
      uint64_t v30 = v29[6];
      uint64_t v31 = &v7[v30];
      uint64_t v32 = &v8[v30];
      uint64_t v33 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, (uint64_t)v33))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v43 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v31, v32, v43);
        uint64_t v44 = v33[5];
        uint64_t v58 = (uint64_t)v31;
        uint64_t v60 = &v31[v44];
        uint64_t v45 = &v32[v44];
        uint64_t v46 = sub_1C9BEAE48();
        uint64_t v59 = v45;
        uint64_t v47 = (uint64_t)v45;
        uint64_t v48 = v46;
        if (__swift_getEnumTagSinglePayload(v47, 1, v46))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v60, v59, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v60, v59, v48);
          __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v48);
        }
        *(_OWORD *)(v58 + v33[6]) = *(_OWORD *)&v32[v33[6]];
        uint64_t v50 = v33[7];
        uint64_t v51 = v58 + v50;
        uint64_t v52 = &v32[v50];
        *(unsigned char *)(v51 + 4) = v52[4];
        *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
        __swift_storeEnumTagSinglePayload(v58, 0, 1, (uint64_t)v33);
      }
      *(void *)&v7[v29[7]] = *(void *)&v8[v29[7]];
      goto LABEL_22;
    case 9u:
      uint64_t v35 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v7, v8, v35);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  uint64_t v53 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  long long v56 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  *(void *)(v54 + 32) = *(void *)(v55 + 32);
  return a1;
}

uint64_t assignWithTake for LoadedFlowInfo(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (a1 != a2)
  {
    uint64_t v6 = a3[6];
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_1C981A490(a1 + v6, (void (*)(void))type metadata accessor for Parse);
    uint64_t v9 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
        goto LABEL_23;
      case 1u:
        uint64_t v11 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v7[*(int *)(v12 + 48)] = *(void *)&v8[*(int *)(v12 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v13 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
        goto LABEL_23;
      case 6u:
        uint64_t v14 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
        uint64_t v15 = (int *)type metadata accessor for USOParse();
        uint64_t v16 = v15[5];
        uint64_t v17 = &v7[v16];
        uint64_t v18 = &v8[v16];
        uint64_t v19 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
        }
        *(_OWORD *)&v7[v15[6]] = *(_OWORD *)&v8[v15[6]];
        uint64_t v36 = v15[7];
        uint64_t v37 = &v7[v36];
        uint64_t v38 = &v8[v36];
        uint64_t v37[4] = v38[4];
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        goto LABEL_23;
      case 7u:
        uint64_t v21 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v7, v8, v21);
        uint64_t v22 = (int *)type metadata accessor for USOParse();
        uint64_t v23 = v22[5];
        uint64_t v24 = &v7[v23];
        uint64_t v25 = &v8[v23];
        uint64_t v26 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
        }
        *(_OWORD *)&v7[v22[6]] = *(_OWORD *)&v8[v22[6]];
        uint64_t v39 = v22[7];
        uint64_t v40 = &v7[v39];
        uint64_t v41 = &v8[v39];
        v40[4] = v41[4];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        uint64_t v42 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v7[v42[5]] = *(_OWORD *)&v8[v42[5]];
        *(_OWORD *)&v7[v42[6]] = *(_OWORD *)&v8[v42[6]];
        *(_OWORD *)&v7[v42[7]] = *(_OWORD *)&v8[v42[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v28 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v7, v8, v28);
        uint64_t v29 = (int *)type metadata accessor for NLRouterParse();
        *(_OWORD *)&v7[v29[5]] = *(_OWORD *)&v8[v29[5]];
        uint64_t v30 = v29[6];
        uint64_t v31 = &v7[v30];
        uint64_t v32 = &v8[v30];
        uint64_t v33 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, (uint64_t)v33))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v31, v32, v43);
          uint64_t v44 = v33[5];
          uint64_t v58 = (uint64_t)v31;
          uint64_t v60 = &v31[v44];
          uint64_t v45 = &v32[v44];
          uint64_t v46 = sub_1C9BEAE48();
          uint64_t v59 = v45;
          uint64_t v47 = (uint64_t)v45;
          uint64_t v48 = v46;
          if (__swift_getEnumTagSinglePayload(v47, 1, v46))
          {
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v60, v59, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v60, v59, v48);
            __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v48);
          }
          *(_OWORD *)(v58 + v33[6]) = *(_OWORD *)&v32[v33[6]];
          uint64_t v50 = v33[7];
          uint64_t v51 = v58 + v50;
          uint64_t v52 = &v32[v50];
          *(unsigned char *)(v51 + 4) = v52[4];
          *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
          __swift_storeEnumTagSinglePayload(v58, 0, 1, (uint64_t)v33);
        }
        *(void *)&v7[v29[7]] = *(void *)&v8[v29[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v35 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v7, v8, v35);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v53 = a3[8];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  __swift_destroy_boxed_opaque_existential_1(a1 + v53);
  long long v56 = *(_OWORD *)(v55 + 16);
  *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
  *(_OWORD *)(v54 + 16) = v56;
  *(void *)(v54 + 32) = *(void *)(v55 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for LoadedFlowInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C981F878);
}

uint64_t sub_1C981F878(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_10_0(*a1);
  }
  uint64_t v7 = type metadata accessor for Parse(0);
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 24);

  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for LoadedFlowInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C981F908);
}

void *sub_1C981F908(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Parse(0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C981F988()
{
  uint64_t result = type metadata accessor for Parse(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for InputContinuationState()
{
}

void type metadata accessor for PrescribedTool()
{
}

unsigned char *storeEnumTagSinglePayload for FlowUnhandledReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 6;
  if (a3 + 6 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFA) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v7 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C981FB40);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t method lookup function for AnyChildCompletion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyChildCompletion);
}

uint64_t dispatch thunk of AnyChildCompletion.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AnyChildCompletion.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void initializeBufferWithCopyOfBuffer for ExecuteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) == 0)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    type metadata accessor for PluginAction();
    sub_1C9BEC838();
  }
  *(void *)a1 = *(void *)a2;
  sub_1C9BEC838();
}

void assignWithCopy for ExecuteResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1C9BEC838();
}

uint64_t initializeWithTake for ExecuteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 36);
  unsigned int v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = (_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for PluginAction();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    *unsigned int v7 = *v8;
    uint64_t v11 = v9[5];
    uint64_t v12 = (char *)v7 + v11;
    uint64_t v13 = (char *)v8 + v11;
    uint64_t v101 = sub_1C9BEAB08();
    uint64_t v99 = *(void (**)(char *, char *))(*(void *)(v101 - 8) + 32);
    v99(v12, v13);
    uint64_t v14 = (int *)type metadata accessor for Input(0);
    uint64_t v15 = v14[5];
    __dst = &v12[v15];
    uint64_t v16 = &v13[v15];
    uint64_t v100 = type metadata accessor for Parse(0);
    uint64_t v102 = v3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v17 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(__dst, v16, v17);
        goto LABEL_24;
      case 1u:
        uint64_t v18 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(__dst, v16, v18);
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&__dst[*(int *)(v19 + 48)] = *(void *)&v16[*(int *)(v19 + 48)];
        goto LABEL_24;
      case 4u:
        uint64_t v20 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(__dst, v16, v20);
        goto LABEL_24;
      case 6u:
        uint64_t v21 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v16, v21);
        uint64_t v22 = type metadata accessor for USOParse();
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v93 = v22;
        unint64_t v96 = &__dst[v23];
        uint64_t v24 = &v16[v23];
        uint64_t v25 = sub_1C9BEAE48();
        __src = v24;
        uint64_t v26 = (uint64_t)v24;
        uint64_t v27 = v25;
        if (__swift_getEnumTagSinglePayload(v26, 1, v25))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v96, __src, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v96, __src, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v27);
        }
        *(_OWORD *)&__dst[*(int *)(v93 + 24)] = *(_OWORD *)&v16[*(int *)(v93 + 24)];
        uint64_t v42 = *(int *)(v93 + 28);
        uint64_t v43 = &__dst[v42];
        uint64_t v44 = &v16[v42];
        v43[4] = v44[4];
        *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
        goto LABEL_24;
      case 7u:
        uint64_t v29 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(__dst, v16, v29);
        uint64_t v30 = type metadata accessor for USOParse();
        uint64_t v31 = *(int *)(v30 + 20);
        uint64_t v94 = v30;
        uint64_t v97 = &__dst[v31];
        uint64_t v32 = &v16[v31];
        uint64_t v33 = sub_1C9BEAE48();
        __srca = v32;
        uint64_t v34 = (uint64_t)v32;
        uint64_t v35 = v33;
        if (__swift_getEnumTagSinglePayload(v34, 1, v33))
        {
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v97, __srca, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v97, __srca, v35);
          __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v35);
        }
        *(_OWORD *)&__dst[*(int *)(v94 + 24)] = *(_OWORD *)&v16[*(int *)(v94 + 24)];
        uint64_t v45 = *(int *)(v94 + 28);
        uint64_t v46 = &__dst[v45];
        uint64_t v47 = &v16[v45];
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        uint64_t v48 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&__dst[v48[5]] = *(_OWORD *)&v16[v48[5]];
        *(_OWORD *)&__dst[v48[6]] = *(_OWORD *)&v16[v48[6]];
        *(_OWORD *)&__dst[v48[7]] = *(_OWORD *)&v16[v48[7]];
        goto LABEL_24;
      case 8u:
        uint64_t v37 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(__dst, v16, v37);
        uint64_t v38 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&__dst[*(int *)(v38 + 20)] = *(_OWORD *)&v16[*(int *)(v38 + 20)];
        uint64_t v39 = *(int *)(v38 + 24);
        __srcb = (int *)v38;
        uint64_t v95 = &__dst[v39];
        v98 = &v16[v39];
        uint64_t v89 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, (uint64_t)v89))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v95, v98, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v49 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v95, v98, v49);
          uint64_t v50 = v89[5];
          long long v88 = &v95[v50];
          uint64_t v51 = &v98[v50];
          uint64_t v52 = sub_1C9BEAE48();
          long long v87 = v51;
          uint64_t v53 = (uint64_t)v51;
          uint64_t v54 = v52;
          if (__swift_getEnumTagSinglePayload(v53, 1, v52))
          {
            uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v88, v87, *(void *)(*(void *)(v55 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v88, v87, v54);
            __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v54);
          }
          *(_OWORD *)&v95[v89[6]] = *(_OWORD *)&v98[v89[6]];
          uint64_t v56 = v89[7];
          long long v57 = &v95[v56];
          uint64_t v58 = &v98[v56];
          v57[4] = v58[4];
          *(_DWORD *)long long v57 = *(_DWORD *)v58;
          __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, (uint64_t)v89);
        }
        *(void *)&__dst[__srcb[7]] = *(void *)&v16[__srcb[7]];
        goto LABEL_24;
      case 9u:
        uint64_t v41 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(__dst, v16, v41);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(__dst, v16, *(void *)(*(void *)(v100 - 8) + 64));
        break;
    }
    *(void *)&v12[v14[6]] = *(void *)&v13[v14[6]];
    uint64_t v59 = v14[7];
    uint64_t v60 = &v12[v59];
    unint64_t v61 = &v13[v59];
    long long v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    *((void *)v60 + 4) = *((void *)v61 + 4);
    v12[v14[8]] = v13[v14[8]];
    *(void *)((char *)v7 + v9[6]) = *(void *)((char *)v8 + v9[6]);
    *(void *)((char *)v7 + v9[7]) = *(void *)((char *)v8 + v9[7]);
    *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
    uint64_t v63 = v9[9];
    uint64_t v64 = (_OWORD *)((char *)v7 + v63);
    uint64_t v65 = (_OWORD *)((char *)v8 + v63);
    uint64_t v66 = type metadata accessor for ActionParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
      memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      uint64_t v68 = v101;
    }
    else
    {
      *uint64_t v64 = *v65;
      uint64_t v69 = *(int *)(v66 + 20);
      uint64_t v70 = (_OWORD *)((char *)v64 + v69);
      uint64_t v71 = (_OWORD *)((char *)v65 + v69);
      uint64_t v72 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v71, 1, v72))
      {
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
        memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        long long v74 = v71[1];
        *uint64_t v70 = *v71;
        v70[1] = v74;
        uint64_t v75 = *(int *)(v72 + 24);
        __dsta = (char *)v70 + v75;
        uint64_t v76 = (char *)v71 + v75;
        uint64_t v77 = sub_1C9BEB0C8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(__dsta, v76, v77);
        __swift_storeEnumTagSinglePayload((uint64_t)v70, 0, 1, v72);
      }
      uint64_t v68 = v101;
      __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
    }
    uint64_t v78 = v9[10];
    int v79 = (char *)v7 + v78;
    uint64_t v80 = (char *)v8 + v78;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v78, 1, v68))
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v99)(v79, v80, v68);
      __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v68);
    }
    uint64_t v3 = v102;
    *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  uint64_t v82 = *(int *)(v3 + 40);
  uint64_t v83 = (_OWORD *)(a1 + v82);
  uint64_t v84 = (_OWORD *)(a2 + v82);
  long long v85 = v84[1];
  *uint64_t v83 = *v84;
  v83[1] = v85;
  return a1;
}

uint64_t assignWithTake for ExecuteResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 36);
  unsigned int v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for PluginAction();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9);
  if (!EnumTagSinglePayload)
  {
    if (v11)
    {
      sub_1C981A490((uint64_t)v7, (void (*)(void))type metadata accessor for PluginAction);
      goto LABEL_7;
    }
    uint64_t v232 = a3;
    uint64_t v21 = v8[1];
    *unsigned int v7 = *v8;
    v7[1] = v21;
    swift_bridgeObjectRelease();
    uint64_t v22 = v9[5];
    uint64_t v23 = (char *)v7 + v22;
    uint64_t v24 = (char *)v8 + v22;
    uint64_t v25 = sub_1C9BEAB08();
    uint64_t v224 = *(void *)(v25 - 8);
    uint64_t v230 = v25;
    __dst = *(void (**)(char *, char *))(v224 + 40);
    __dst(v23, v24);
    uint64_t v26 = type metadata accessor for Input(0);
    uint64_t v27 = (int *)v26;
    if (a1 != a2)
    {
      v222 = (int *)v26;
      uint64_t v28 = *(int *)(v26 + 20);
      uint64_t v29 = &v24[v28];
      uint64_t v30 = &v23[v28];
      sub_1C981A490((uint64_t)&v23[v28], (void (*)(void))type metadata accessor for Parse);
      uint64_t v31 = type metadata accessor for Parse(0);
      v226 = v29;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v32 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v29, v32);
          goto LABEL_41;
        case 1u:
          uint64_t v58 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v30, v29, v58);
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v30[*(int *)(v59 + 48)] = *(void *)&v29[*(int *)(v59 + 48)];
          goto LABEL_41;
        case 4u:
          uint64_t v60 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v30, v29, v60);
          goto LABEL_41;
        case 6u:
          uint64_t v61 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v30, v29, v61);
          v200 = (int *)type metadata accessor for USOParse();
          uint64_t v62 = v200[5];
          __srcc = &v30[v62];
          uint64_t v63 = &v29[v62];
          uint64_t v64 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__srcc, v63, *(void *)(*(void *)(v65 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(__srcc, v63, v64);
            __swift_storeEnumTagSinglePayload((uint64_t)__srcc, 0, 1, v64);
          }
          *(_OWORD *)&v30[v200[6]] = *(_OWORD *)&v226[v200[6]];
          uint64_t v93 = v200[7];
          uint64_t v94 = &v30[v93];
          uint64_t v95 = &v226[v93];
          v94[4] = v95[4];
          *(_DWORD *)uint64_t v94 = *(_DWORD *)v95;
          goto LABEL_41;
        case 7u:
          uint64_t v66 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v30, v29, v66);
          v201 = (int *)type metadata accessor for USOParse();
          uint64_t v67 = v201[5];
          __srcd = &v30[v67];
          uint64_t v68 = &v29[v67];
          uint64_t v69 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
          {
            uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__srcd, v68, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(__srcd, v68, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)__srcd, 0, 1, v69);
          }
          *(_OWORD *)&v30[v201[6]] = *(_OWORD *)&v226[v201[6]];
          uint64_t v96 = v201[7];
          uint64_t v97 = &v30[v96];
          v98 = &v226[v96];
          v97[4] = v98[4];
          *(_DWORD *)uint64_t v97 = *(_DWORD *)v98;
          uint64_t v99 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v30[v99[5]] = *(_OWORD *)&v226[v99[5]];
          *(_OWORD *)&v30[v99[6]] = *(_OWORD *)&v226[v99[6]];
          *(_OWORD *)&v30[v99[7]] = *(_OWORD *)&v226[v99[7]];
          goto LABEL_41;
        case 8u:
          uint64_t v71 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v30, v29, v71);
          uint64_t v72 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v30[*(int *)(v72 + 20)] = *(_OWORD *)&v29[*(int *)(v72 + 20)];
          v205 = v30;
          __srce = (int *)v72;
          uint64_t v73 = *(int *)(v72 + 24);
          long long v74 = &v30[v73];
          uint64_t v75 = &v29[v73];
          uint64_t v76 = type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)v75, 1, v76))
          {
            uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
            uint64_t v27 = v222;
          }
          else
          {
            uint64_t v150 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v74, v75, v150);
            uint64_t v197 = v76;
            uint64_t v199 = (uint64_t)v74;
            uint64_t v151 = *(int *)(v76 + 20);
            v203 = &v74[v151];
            v196 = &v75[v151];
            uint64_t v152 = sub_1C9BEAE48();
            uint64_t v27 = v222;
            if (__swift_getEnumTagSinglePayload((uint64_t)v196, 1, v152))
            {
              uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v203, v196, *(void *)(*(void *)(v153 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 32))(v203, v196, v152);
              __swift_storeEnumTagSinglePayload((uint64_t)v203, 0, 1, v152);
            }
            *(_OWORD *)(v199 + *(int *)(v197 + 24)) = *(_OWORD *)&v75[*(int *)(v197 + 24)];
            uint64_t v193 = *(int *)(v197 + 28);
            uint64_t v194 = v199 + v193;
            v195 = &v75[v193];
            *(unsigned char *)(v194 + 4) = v195[4];
            *(_DWORD *)uint64_t v194 = *(_DWORD *)v195;
            __swift_storeEnumTagSinglePayload(v199, 0, 1, v197);
          }
          *(void *)&v205[__srce[7]] = *(void *)&v226[__srce[7]];
          swift_storeEnumTagMultiPayload();
          goto LABEL_43;
        case 9u:
          uint64_t v78 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v30, v29, v78);
LABEL_41:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v30, v29, *(void *)(*(void *)(v31 - 8) + 64));
          break;
      }
      uint64_t v27 = v222;
    }
LABEL_43:
    *(void *)&v23[v27[6]] = *(void *)&v24[v27[6]];
    swift_bridgeObjectRelease();
    uint64_t v100 = v27[7];
    uint64_t v101 = (uint64_t)&v23[v100];
    uint64_t v102 = &v24[v100];
    if (*(void *)&v23[v100 + 24]) {
      __swift_destroy_boxed_opaque_existential_1(v101);
    }
    long long v103 = *((_OWORD *)v102 + 1);
    *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
    *(_OWORD *)(v101 + 16) = v103;
    *(void *)(v101 + 32) = *((void *)v102 + 4);
    v23[v27[8]] = v24[v27[8]];
    *(void *)((char *)v7 + v9[6]) = *(void *)((char *)v8 + v9[6]);
    swift_bridgeObjectRelease();
    uint64_t v104 = v9[7];
    uint64_t v105 = *(void **)((char *)v7 + v104);
    *(void *)((char *)v7 + v104) = *(void *)((char *)v8 + v104);

    uint64_t v106 = v9[8];
    v107 = (void *)((char *)v7 + v106);
    long long v108 = (void *)((char *)v8 + v106);
    uint64_t v110 = *v108;
    uint64_t v109 = v108[1];
    void *v107 = v110;
    v107[1] = v109;
    swift_bridgeObjectRelease();
    uint64_t v111 = v9[9];
    long long v112 = (void *)((char *)v7 + v111);
    v113 = (void *)((char *)v8 + v111);
    uint64_t v114 = type metadata accessor for ActionParaphrase(0);
    int v115 = __swift_getEnumTagSinglePayload((uint64_t)v112, 1, v114);
    int v116 = __swift_getEnumTagSinglePayload((uint64_t)v113, 1, v114);
    if (v115)
    {
      if (!v116)
      {
        *(_OWORD *)long long v112 = *(_OWORD *)v113;
        uint64_t v117 = *(int *)(v114 + 20);
        v118 = (_OWORD *)((char *)v112 + v117);
        v119 = (_OWORD *)((char *)v113 + v117);
        uint64_t v120 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v119, 1, v120))
        {
          uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
        }
        else
        {
          long long v139 = v119[1];
          _OWORD *v118 = *v119;
          v118[1] = v139;
          uint64_t v140 = *(int *)(v120 + 24);
          v227 = (char *)v118 + v140;
          v141 = (char *)v119 + v140;
          uint64_t v142 = sub_1C9BEB0C8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v227, v141, v142);
          __swift_storeEnumTagSinglePayload((uint64_t)v118, 0, 1, v120);
        }
        uint64_t v123 = v230;
        uint64_t v137 = (uint64_t)v112;
        uint64_t v138 = v114;
        goto LABEL_57;
      }
LABEL_51:
      uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
      memcpy(v112, v113, *(void *)(*(void *)(v122 - 8) + 64));
      uint64_t v123 = v230;
      goto LABEL_61;
    }
    if (v116)
    {
      sub_1C981A490((uint64_t)v112, (void (*)(void))type metadata accessor for ActionParaphrase);
      goto LABEL_51;
    }
    uint64_t v124 = v113[1];
    *long long v112 = *v113;
    v112[1] = v124;
    swift_bridgeObjectRelease();
    uint64_t v125 = *(int *)(v114 + 20);
    v126 = (char *)v112 + v125;
    v127 = (char *)v113 + v125;
    uint64_t v128 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    int v129 = __swift_getEnumTagSinglePayload((uint64_t)v126, 1, v128);
    int v130 = __swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128);
    if (v129)
    {
      uint64_t v123 = v230;
      if (!v130)
      {
        long long v131 = *((_OWORD *)v127 + 1);
        *(_OWORD *)v126 = *(_OWORD *)v127;
        *((_OWORD *)v126 + 1) = v131;
        uint64_t v132 = *(int *)(v128 + 24);
        v133 = &v126[v132];
        v134 = &v127[v132];
        uint64_t v135 = sub_1C9BEB0C8();
        v136 = v133;
        uint64_t v123 = v230;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v136, v134, v135);
        uint64_t v137 = (uint64_t)v126;
        uint64_t v138 = v128;
LABEL_57:
        __swift_storeEnumTagSinglePayload(v137, 0, 1, v138);
        goto LABEL_61;
      }
    }
    else
    {
      uint64_t v123 = v230;
      if (!v130)
      {
        uint64_t v187 = *((void *)v127 + 1);
        *(void *)v126 = *(void *)v127;
        *((void *)v126 + 1) = v187;
        swift_bridgeObjectRelease();
        uint64_t v188 = *((void *)v127 + 3);
        *((void *)v126 + 2) = *((void *)v127 + 2);
        *((void *)v126 + 3) = v188;
        swift_bridgeObjectRelease();
        uint64_t v189 = *(int *)(v128 + 24);
        v190 = &v126[v189];
        v191 = &v127[v189];
        uint64_t v192 = sub_1C9BEB0C8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 40))(v190, v191, v192);
LABEL_61:
        uint64_t v144 = v9[10];
        v145 = (char *)v7 + v144;
        v146 = (char *)v8 + v144;
        int v147 = __swift_getEnumTagSinglePayload((uint64_t)v7 + v144, 1, v123);
        int v148 = __swift_getEnumTagSinglePayload((uint64_t)v146, 1, v123);
        if (v147)
        {
          if (!v148)
          {
            (*(void (**)(char *, char *, uint64_t))(v224 + 32))(v145, v146, v123);
            __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v123);
LABEL_67:
            a3 = v232;
            *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
            goto LABEL_85;
          }
        }
        else
        {
          if (!v148)
          {
            ((void (*)(char *, char *, uint64_t))__dst)(v145, v146, v123);
            goto LABEL_67;
          }
          (*(void (**)(char *, uint64_t))(v224 + 8))(v145, v123);
        }
        uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v145, v146, *(void *)(*(void *)(v149 - 8) + 64));
        goto LABEL_67;
      }
      sub_1C981A490((uint64_t)v126, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
    }
    uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    memcpy(v126, v127, *(void *)(*(void *)(v143 - 8) + 64));
    goto LABEL_61;
  }
  if (v11)
  {
LABEL_7:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_85;
  }
  uint64_t v231 = a3;
  *(_OWORD *)unsigned int v7 = *(_OWORD *)v8;
  uint64_t v12 = v9[5];
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v229 = sub_1C9BEAB08();
  v223 = *(void (**)(char *, char *))(*(void *)(v229 - 8) + 32);
  v223(v13, v14);
  uint64_t v15 = (int *)type metadata accessor for Input(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = &v13[v16];
  uint64_t v18 = &v14[v16];
  v225 = (void *)type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v19 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      goto LABEL_74;
    case 1u:
      uint64_t v33 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v17, v18, v33);
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v17[*(int *)(v34 + 48)] = *(void *)&v18[*(int *)(v34 + 48)];
      goto LABEL_74;
    case 4u:
      uint64_t v35 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v17, v18, v35);
      goto LABEL_74;
    case 6u:
      uint64_t v36 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v17, v18, v36);
      uint64_t v37 = type metadata accessor for USOParse();
      uint64_t v38 = *(int *)(v37 + 20);
      v219 = v17;
      uint64_t v212 = v37;
      __dsta = &v17[v38];
      uint64_t v39 = &v18[v38];
      uint64_t v40 = sub_1C9BEAE48();
      __src = v39;
      uint64_t v41 = (uint64_t)v39;
      uint64_t v42 = v40;
      if (__swift_getEnumTagSinglePayload(v41, 1, v40))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(__dsta, __src, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(__dsta, __src, v42);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v42);
      }
      *(_OWORD *)&v219[*(int *)(v212 + 24)] = *(_OWORD *)&v18[*(int *)(v212 + 24)];
      uint64_t v79 = *(int *)(v212 + 28);
      uint64_t v80 = &v219[v79];
      uint64_t v81 = &v18[v79];
      v80[4] = v81[4];
      *(_DWORD *)uint64_t v80 = *(_DWORD *)v81;
      goto LABEL_74;
    case 7u:
      uint64_t v44 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v17, v18, v44);
      uint64_t v45 = type metadata accessor for USOParse();
      uint64_t v46 = *(int *)(v45 + 20);
      v220 = v17;
      uint64_t v213 = v45;
      __dstb = &v17[v46];
      uint64_t v47 = &v18[v46];
      uint64_t v48 = sub_1C9BEAE48();
      __srca = v47;
      uint64_t v49 = (uint64_t)v47;
      uint64_t v50 = v48;
      if (__swift_getEnumTagSinglePayload(v49, 1, v48))
      {
        uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(__dstb, __srca, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(__dstb, __srca, v50);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v50);
      }
      *(_OWORD *)&v220[*(int *)(v213 + 24)] = *(_OWORD *)&v18[*(int *)(v213 + 24)];
      uint64_t v82 = *(int *)(v213 + 28);
      uint64_t v83 = &v220[v82];
      uint64_t v84 = &v18[v82];
      v83[4] = v84[4];
      *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
      long long v85 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v220[v85[5]] = *(_OWORD *)&v18[v85[5]];
      *(_OWORD *)&v220[v85[6]] = *(_OWORD *)&v18[v85[6]];
      *(_OWORD *)&v220[v85[7]] = *(_OWORD *)&v18[v85[7]];
      goto LABEL_74;
    case 8u:
      __srcb = v15;
      uint64_t v52 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v17, v18, v52);
      uint64_t v53 = type metadata accessor for NLRouterParse();
      *(_OWORD *)&v17[*(int *)(v53 + 20)] = *(_OWORD *)&v18[*(int *)(v53 + 20)];
      uint64_t v54 = *(int *)(v53 + 24);
      uint64_t v214 = v53;
      __dstc = &v17[v54];
      v221 = &v18[v54];
      v204 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v221, 1, (uint64_t)v204))
      {
        uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(__dstc, v221, *(void *)(*(void *)(v55 - 8) + 64));
        uint64_t v56 = v214;
      }
      else
      {
        uint64_t v86 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(__dstc, v221, v86);
        uint64_t v87 = v204[5];
        v202 = &__dstc[v87];
        long long v88 = &v221[v87];
        uint64_t v89 = sub_1C9BEAE48();
        v198 = v88;
        uint64_t v90 = (uint64_t)v88;
        uint64_t v91 = v89;
        if (__swift_getEnumTagSinglePayload(v90, 1, v89))
        {
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v202, v198, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v202, v198, v91);
          __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v91);
        }
        uint64_t v15 = __srcb;
        *(_OWORD *)&__dstc[v204[6]] = *(_OWORD *)&v221[v204[6]];
        uint64_t v154 = v204[7];
        v155 = &__dstc[v154];
        v156 = &v221[v154];
        v155[4] = v156[4];
        *(_DWORD *)v155 = *(_DWORD *)v156;
        __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, (uint64_t)v204);
        uint64_t v56 = v214;
      }
      *(void *)&v17[*(int *)(v56 + 28)] = *(void *)&v18[*(int *)(v56 + 28)];
      goto LABEL_74;
    case 9u:
      uint64_t v57 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v17, v18, v57);
LABEL_74:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v17, v18, *(void *)(*(v225 - 1) + 64));
      break;
  }
  *(void *)&v13[v15[6]] = *(void *)&v14[v15[6]];
  uint64_t v157 = v15[7];
  v158 = &v13[v157];
  v159 = &v14[v157];
  long long v160 = *((_OWORD *)v159 + 1);
  *(_OWORD *)v158 = *(_OWORD *)v159;
  *((_OWORD *)v158 + 1) = v160;
  *((void *)v158 + 4) = *((void *)v159 + 4);
  v13[v15[8]] = v14[v15[8]];
  *(void *)((char *)v7 + v9[6]) = *(void *)((char *)v8 + v9[6]);
  *(void *)((char *)v7 + v9[7]) = *(void *)((char *)v8 + v9[7]);
  *(_OWORD *)((char *)v7 + v9[8]) = *(_OWORD *)((char *)v8 + v9[8]);
  uint64_t v161 = v9[9];
  v162 = (_OWORD *)((char *)v7 + v161);
  v163 = (_OWORD *)((char *)v8 + v161);
  uint64_t v164 = type metadata accessor for ActionParaphrase(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v164))
  {
    uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
    memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
    a3 = v231;
    uint64_t v166 = v229;
  }
  else
  {
    _OWORD *v162 = *v163;
    uint64_t v167 = *(int *)(v164 + 20);
    v168 = (_OWORD *)((char *)v162 + v167);
    v169 = (_OWORD *)((char *)v163 + v167);
    uint64_t v170 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v169, 1, v170))
    {
      uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
      memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
    }
    else
    {
      long long v172 = v169[1];
      _OWORD *v168 = *v169;
      v168[1] = v172;
      uint64_t v173 = *(int *)(v170 + 24);
      v228 = (char *)v168 + v173;
      v174 = (char *)v169 + v173;
      uint64_t v175 = sub_1C9BEB0C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v175 - 8) + 32))(v228, v174, v175);
      __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v170);
    }
    a3 = v231;
    uint64_t v166 = v229;
    __swift_storeEnumTagSinglePayload((uint64_t)v162, 0, 1, v164);
  }
  uint64_t v176 = v9[10];
  v177 = (char *)v7 + v176;
  v178 = (char *)v8 + v176;
  if (__swift_getEnumTagSinglePayload((uint64_t)v8 + v176, 1, v166))
  {
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
    memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v223)(v177, v178, v166);
    __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v166);
  }
  *((unsigned char *)v7 + v9[11]) = *((unsigned char *)v8 + v9[11]);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
LABEL_85:
  uint64_t v180 = *(int *)(a3 + 40);
  uint64_t v181 = a1 + v180;
  uint64_t v182 = a2 + v180;
  if (!*(void *)(a1 + v180 + 8))
  {
LABEL_89:
    long long v185 = *(_OWORD *)(v182 + 16);
    *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
    *(_OWORD *)(v181 + 16) = v185;
    return a1;
  }
  uint64_t v183 = *(void *)(v182 + 8);
  if (!v183)
  {
    sub_1C95FE81C(v181, &qword_1EA58E0A8);
    goto LABEL_89;
  }
  *(void *)uint64_t v181 = *(void *)v182;
  *(void *)(v181 + 8) = v183;
  swift_bridgeObjectRelease();
  uint64_t v184 = *(void *)(v182 + 24);
  *(void *)(v181 + 16) = *(void *)(v182 + 16);
  *(void *)(v181 + 24) = v184;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C9824498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
    uint64_t v10 = a1 + *(int *)(a3 + 36);
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

uint64_t sub_1C9824530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_1C98245B4()
{
  sub_1C9824674();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C9824674()
{
  if (!qword_1EBC77BB0)
  {
    type metadata accessor for PluginAction();
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBC77BB0);
    }
  }
}

uint64_t method lookup function for AnyFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyFlow);
}

uint64_t dispatch thunk of AnyFlow.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AnyFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of AnyFlow.unbox<A>()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of AnyFlow.isAdaptedFlow.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of AnyFlow.siriEnvironment.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t method lookup function for AnyValueFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AnyValueFlow);
}

uint64_t dispatch thunk of AnyValueFlow.debugDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of AnyValueFlow.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of AnyValueFlow.onAsync(input:)()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_40_10();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 136) + **(int **)(v1 + 136));
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_5(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C96167B4;
  return v6(v0);
}

uint64_t dispatch thunk of AnyValueFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of AnyValueFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AnyValueFlow.unbox<A>()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AnyValueFlow.unbox<A>(as:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AnyValueFlow.siriEnvironment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AnyValueFlow.siriEnvironment.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AnyValueFlow.siriEnvironment.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

ValueMetadata *type metadata accessor for PrescribedTool._PrescribedTool()
{
  return &type metadata for PrescribedTool._PrescribedTool;
}

unsigned char *_s11SiriKitFlow19ExecuteResponseTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9824AE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unint64_t sub_1C9824B18()
{
  unint64_t result = qword_1EA58E160;
  if (!qword_1EA58E160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E160);
  }
  return result;
}

unint64_t sub_1C9824B70()
{
  unint64_t result = qword_1EBC793D8;
  if (!qword_1EBC793D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC793D8);
  }
  return result;
}

unint64_t sub_1C9824BC0()
{
  unint64_t result = qword_1EBC793D0;
  if (!qword_1EBC793D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC793D0);
  }
  return result;
}

uint64_t objectdestroy_182Tm()
{
  OUTLINED_FUNCTION_112();
  uint64_t v0 = OUTLINED_FUNCTION_14_1();
  v1(v0);
  OUTLINED_FUNCTION_52_9();

  return swift_deallocObject();
}

uint64_t sub_1C9824CA0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = OUTLINED_FUNCTION_14_1();
  v1(v0);
  OUTLINED_FUNCTION_52_9();

  return swift_deallocObject();
}

uint64_t sub_1C9824D14(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);

  return sub_1C98181B0(a1);
}

uint64_t sub_1C9824D88(uint64_t a1)
{
  return sub_1C9AC23C4(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

uint64_t OUTLINED_FUNCTION_0_32()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_27()
{
  type metadata accessor for ExecuteResponse(0);
  return type metadata accessor for PluginAction();
}

double OUTLINED_FUNCTION_10_29()
{
  *(unsigned char *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 7;
  uint64_t v2 = (_OWORD *)(v0 + *(int *)(v1 + 40));
  double result = 0.0;
  *uint64_t v2 = 0u;
  v2[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_31()
{
  type metadata accessor for ExecuteResponse(0);
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_13_36()
{
  *(void *)(v1 + 8) = v0;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 32) = 7;
  int v3 = (_OWORD *)(v1 + *(int *)(v2 + 40));
  *int v3 = 0u;
  v3[1] = 0u;
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_29()
{
  *(void *)(v0 + 8) = v1;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 32) = 7;
  int v3 = (_OWORD *)(v0 + *(int *)(v2 + 40));
  *int v3 = 0u;
  v3[1] = 0u;
  return v1;
}

double OUTLINED_FUNCTION_17_23@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_19_28()
{
  return Flow.eraseToAnyFlow()();
}

double OUTLINED_FUNCTION_21_20(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 28);
  *(void *)(v2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_17()
{
  return v0;
}

void OUTLINED_FUNCTION_31_16()
{
  *(void *)(v2 + 8) = v0;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 32) = v4;
  unsigned int v6 = (_OWORD *)(v2 + *(int *)(v1 + 40));
  *unsigned int v6 = 0u;
  v6[1] = 0u;
  sub_1C9BEC838();
}

uint64_t OUTLINED_FUNCTION_33_13()
{
  return 0x74616E7265746C61;
}

uint64_t OUTLINED_FUNCTION_39_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_41_9()
{
  return Flow.eraseToAnyFlow()();
}

uint64_t OUTLINED_FUNCTION_47_11()
{
  type metadata accessor for ExecuteResponse(0);
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_50_9()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_56_9()
{
  return AnyChildCompletion.__allocating_init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_60_9()
{
  return sub_1C9BEAB08();
}

uint64_t OUTLINED_FUNCTION_63_7(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  return sub_1C9BEE568();
}

uint64_t OUTLINED_FUNCTION_67_6(uint64_t a1)
{
  uint64_t result = __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  *uint64_t v1 = 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_3()
{
  return AnyChildCompletion.__allocating_init<A>(_:)();
}

uint64_t OUTLINED_FUNCTION_78_4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 96) = a1;
  *(void *)(v2 - 88) = v1;
  return swift_getDynamicType();
}

uint64_t Abort.init(reason:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C96C3A20();
  uint64_t v6 = swift_allocError();
  *uint64_t v7 = a1;
  v7[1] = a2;
  *a3 = v6;
  type metadata accessor for FlowActionType(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t Abort.init(reason:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  OUTLINED_FUNCTION_50_10();

  return swift_storeEnumTagMultiPayload();
}

uint64_t Yield.init()@<X0>(void *a1@<X8>)
{
  *a1 = nullsub_1;
  a1[1] = 0;
  OUTLINED_FUNCTION_50_10();

  return swift_storeEnumTagMultiPayload();
}

uint64_t Delegate.init(to:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C95FD5D8(a1, a2);
  OUTLINED_FUNCTION_50_10();

  return swift_storeEnumTagMultiPayload();
}

uint64_t Conclude.init(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_6_0();
  uint64_t v12 = v11 - v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11 - v10, a1, a2);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_1C98254C4(v12, (uint64_t)v14, 0, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
}

uint64_t Conclude.init<A>()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FlowActionType(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = v5 - v4;
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588EE8);
  uint64_t v8 = a1 + *(int *)(v7 + 32);
  sub_1C96C3D08((uint64_t)v10, v8);
  *(unsigned char *)(a1 + *(int *)(v7 + 36)) = 0;
  *(void *)(v6 + 24) = MEMORY[0x1E4FBC848] + 8;
  sub_1C96C3D70((uint64_t)v10);
  sub_1C96C3D08(v8, v6 + 32);
  *(unsigned char *)(v6 + 72) = 0;
  swift_storeEnumTagMultiPayload();
  return sub_1C96C3DD0(v6, a1);
}

uint64_t sub_1C98254C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v20 = a3;
  uint64_t v7 = a1;
  uint64_t v19 = a1;
  uint64_t v21 = type metadata accessor for FlowActionType(0);
  MEMORY[0x1F4188790](v21, v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for Conclude();
  uint64_t v13 = a5 + v12[7];
  uint64_t v14 = *(void *)(a4 - 8);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v15(v13, v7, a4);
  uint64_t v18 = a5 + v12[8];
  sub_1C96C3D08(a2, v18);
  LOBYTE(v7) = v20;
  *(unsigned char *)(a5 + v12[9]) = v20;
  *((void *)v11 + 3) = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v11);
  v15((uint64_t)boxed_opaque_existential_0, v13, a4);
  sub_1C96C3D70(a2);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, a4);
  sub_1C96C3D08(v18, (uint64_t)(v11 + 32));
  v11[72] = v7;
  swift_storeEnumTagMultiPayload();
  return sub_1C96C3DD0((uint64_t)v11, a5);
}

uint64_t Conclude.followedBy(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_6_0();
  uint64_t v12 = v11 - v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11 - v10, v3 + *(int *)(v13 + 28), v7);
  sub_1C95FD5F0(a1, (uint64_t)v16);
  return sub_1C98254C4(v12, (uint64_t)v16, *(unsigned __int8 *)(v3 + *(int *)(a2 + 36)), v7, a3);
}

uint64_t sub_1C982572C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v9 - v8, v2 + *(int *)(v11 + 28), v5);
  sub_1C96C3D08(v2 + *(int *)(a1 + 32), (uint64_t)v14);
  return sub_1C98254C4(v10, (uint64_t)v14, 1, v5, a2);
}

uint64_t type metadata accessor for FlowActionType(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA58E3E0);
}

uint64_t sub_1C982581C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void Yield.onYield(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for FlowActionType(0);
  swift_storeEnumTagMultiPayload();

  sub_1C9BEC838();
}

_OWORD *initializeBufferWithCopyOfBuffer for FlowActionType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_51;
    case 1u:
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 3) = v7;
      (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
      uint64_t v8 = a1 + 2;
      uint64_t v9 = a2 + 2;
      uint64_t v10 = *((void *)a2 + 7);
      if (v10)
      {
        uint64_t v11 = *((void *)a2 + 8);
        *((void *)a1 + 7) = v10;
        *((void *)a1 + 8) = v11;
        (**(void (***)(_OWORD *, _OWORD *))(v10 - 8))(v8, v9);
      }
      else
      {
        long long v34 = a2[3];
        *uint64_t v8 = *v9;
        a1[3] = v34;
        *((void *)a1 + 8) = *((void *)a2 + 8);
      }
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      goto LABEL_51;
    case 2u:
      uint64_t v12 = *(void **)a2;
      id v13 = v12;
      *(void *)a1 = v12;
      goto LABEL_51;
    case 3u:
      uint64_t v14 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v14;
      sub_1C9BEC838();
    case 5u:
      uint64_t v15 = *((void *)a2 + 3);
      *((void *)a1 + 3) = v15;
      (**(void (***)(void *, const void *))(v15 - 8))(a1, a2);
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
      uint64_t v17 = (void *)((char *)a1 + v16);
      uint64_t v18 = (void *)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      long long v160 = (int *)type metadata accessor for PluginAction();
      uint64_t v20 = v160[5];
      uint64_t v21 = (char *)v17 + v20;
      uint64_t v22 = (char *)v18 + v20;
      uint64_t v23 = sub_1C9BEAB08();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v158 = v24;
      uint64_t v159 = v23;
      v24(v21, v22, v23);
      uint64_t v25 = (int *)type metadata accessor for Input(0);
      uint64_t v26 = v25[5];
      uint64_t v27 = &v21[v26];
      uint64_t v28 = &v22[v26];
      uint64_t v29 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v30 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v27, v28, v30);
          goto LABEL_37;
        case 1u:
          uint64_t v35 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v27, v28, v35);
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v27[*(int *)(v36 + 48)] = *(void *)&v28[*(int *)(v36 + 48)];
          sub_1C9BEC838();
        case 2u:
          uint64_t v37 = *((void *)v28 + 1);
          *(void *)uint64_t v27 = *(void *)v28;
          *((void *)v27 + 1) = v37;
          *((void *)v27 + 2) = *((void *)v28 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_37;
        case 3u:
          *(void *)uint64_t v27 = *(void *)v28;
          swift_unknownObjectRetain();
          goto LABEL_37;
        case 4u:
          uint64_t v38 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v27, v28, v38);
          goto LABEL_37;
        case 5u:
          uint64_t v39 = *(void **)v28;
          *(void *)uint64_t v27 = *(void *)v28;
          id v40 = v39;
          goto LABEL_37;
        case 6u:
          uint64_t v41 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v27, v28, v41);
          uint64_t v42 = type metadata accessor for USOParse();
          uint64_t v43 = *(int *)(v42 + 20);
          uint64_t v148 = v42;
          __dst = &v27[v43];
          uint64_t v44 = &v28[v43];
          uint64_t v45 = sub_1C9BEAE48();
          __src = v44;
          uint64_t v46 = (uint64_t)v44;
          uint64_t v47 = v45;
          if (__swift_getEnumTagSinglePayload(v46, 1, v45))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(__dst, __src, v47);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v47);
          }
          uint64_t v68 = *(int *)(v148 + 24);
          uint64_t v69 = &v27[v68];
          uint64_t v70 = &v28[v68];
          uint64_t v71 = *((void *)v70 + 1);
          *(void *)uint64_t v69 = *(void *)v70;
          *((void *)v69 + 1) = v71;
          uint64_t v72 = *(int *)(v148 + 28);
          uint64_t v73 = &v27[v72];
          long long v74 = &v28[v72];
          v73[4] = v74[4];
          *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
          swift_bridgeObjectRetain();
          goto LABEL_37;
        case 7u:
          uint64_t v49 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v27, v28, v49);
          uint64_t v50 = type metadata accessor for USOParse();
          uint64_t v51 = *(int *)(v50 + 20);
          uint64_t v149 = v50;
          __dsta = &v27[v51];
          uint64_t v52 = &v28[v51];
          uint64_t v53 = sub_1C9BEAE48();
          __srca = v52;
          uint64_t v54 = (uint64_t)v52;
          uint64_t v55 = v53;
          if (__swift_getEnumTagSinglePayload(v54, 1, v53))
          {
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(__dsta, __srca, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v55);
          }
          uint64_t v75 = *(int *)(v149 + 24);
          uint64_t v76 = &v27[v75];
          uint64_t v77 = &v28[v75];
          __dstc = (void *)*((void *)v77 + 1);
          *(void *)uint64_t v76 = *(void *)v77;
          *((void *)v76 + 1) = __dstc;
          uint64_t v78 = *(int *)(v149 + 28);
          uint64_t v79 = &v27[v78];
          uint64_t v80 = &v28[v78];
          v79[4] = v80[4];
          *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
          uint64_t v81 = (int *)type metadata accessor for LinkParse();
          uint64_t v82 = v81[5];
          uint64_t v83 = &v27[v82];
          uint64_t v84 = &v28[v82];
          uint64_t v151 = *((void *)v84 + 1);
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = v151;
          uint64_t v85 = v81[6];
          uint64_t v86 = &v27[v85];
          uint64_t v87 = &v28[v85];
          uint64_t v88 = *((void *)v87 + 1);
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = v88;
          uint64_t v89 = v81[7];
          uint64_t v90 = &v27[v89];
          uint64_t v91 = &v28[v89];
          uint64_t v92 = *((void *)v91 + 1);
          *(void *)uint64_t v90 = *(void *)v91;
          *((void *)v90 + 1) = v92;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_37;
        case 8u:
          uint64_t v57 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v27, v28, v57);
          uint64_t v58 = type metadata accessor for NLRouterParse();
          uint64_t v59 = *(int *)(v58 + 20);
          uint64_t v60 = &v27[v59];
          uint64_t v61 = &v28[v59];
          uint64_t v62 = *((void *)v61 + 1);
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v62;
          uint64_t v142 = v27;
          uint64_t v143 = v58;
          uint64_t v63 = *(int *)(v58 + 24);
          uint64_t v150 = &v28[v63];
          __dstb = &v27[v63];
          uint64_t v64 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          __srcb = (int *)v64;
          if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v64))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v150, *(void *)(*(void *)(v65 - 8) + 64));
            uint64_t v66 = v142;
          }
          else
          {
            uint64_t v93 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(__dstb, v150, v93);
            uint64_t v94 = *(int *)(v64 + 20);
            v141 = &__dstb[v94];
            uint64_t v95 = &v150[v94];
            uint64_t v96 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
            {
              uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v141, v95, *(void *)(*(void *)(v97 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v141, v95, v96);
              __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v96);
            }
            uint64_t v66 = v142;
            uint64_t v98 = __srcb[6];
            uint64_t v99 = &__dstb[v98];
            uint64_t v100 = &v150[v98];
            uint64_t v101 = *((void *)v100 + 1);
            *(void *)uint64_t v99 = *(void *)v100;
            *((void *)v99 + 1) = v101;
            uint64_t v102 = __srcb[7];
            long long v103 = &__dstb[v102];
            uint64_t v104 = &v150[v102];
            v103[4] = v104[4];
            *(_DWORD *)long long v103 = *(_DWORD *)v104;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)__srcb);
          }
          uint64_t v105 = *(int *)(v143 + 28);
          uint64_t v106 = *(void **)&v28[v105];
          *(void *)((char *)v66 + v105) = v106;
          id v107 = v106;
          goto LABEL_37;
        case 9u:
          uint64_t v67 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v27, v28, v67);
LABEL_37:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
          break;
      }
      *(void *)&v21[v25[6]] = *(void *)&v22[v25[6]];
      uint64_t v108 = v25[7];
      uint64_t v109 = &v21[v108];
      uint64_t v110 = &v22[v108];
      uint64_t v111 = *(void *)&v22[v108 + 24];
      swift_bridgeObjectRetain();
      if (v111)
      {
        uint64_t v112 = *((void *)v110 + 4);
        *((void *)v109 + 3) = v111;
        *((void *)v109 + 4) = v112;
        (**(void (***)(char *, char *, uint64_t))(v111 - 8))(v109, v110, v111);
      }
      else
      {
        long long v113 = *((_OWORD *)v110 + 1);
        *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
        *((_OWORD *)v109 + 1) = v113;
        *((void *)v109 + 4) = *((void *)v110 + 4);
      }
      v21[v25[8]] = v22[v25[8]];
      *(void *)((char *)v17 + v160[6]) = *(void *)((char *)v18 + v160[6]);
      uint64_t v114 = v160[7];
      int v115 = *(void **)((char *)v18 + v114);
      *(void *)((char *)v17 + v114) = v115;
      uint64_t v116 = v160[8];
      uint64_t v117 = (void *)((char *)v17 + v116);
      v118 = (void *)((char *)v18 + v116);
      uint64_t v119 = v118[1];
      *uint64_t v117 = *v118;
      v117[1] = v119;
      uint64_t v120 = v160[9];
      uint64_t v121 = (void *)((char *)v17 + v120);
      uint64_t v122 = (void *)((char *)v18 + v120);
      uint64_t v123 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      id v124 = v115;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v123))
      {
        uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        uint64_t v126 = v122[1];
        *uint64_t v121 = *v122;
        v121[1] = v126;
        uint64_t v127 = *(int *)(v123 + 20);
        uint64_t v128 = (void *)((char *)v121 + v127);
        int v129 = (void *)((char *)v122 + v127);
        uint64_t v130 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130))
        {
          uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          uint64_t v132 = v129[1];
          *uint64_t v128 = *v129;
          v128[1] = v132;
          uint64_t v133 = v129[3];
          v128[2] = v129[2];
          v128[3] = v133;
          uint64_t v134 = *(int *)(v130 + 24);
          __dstd = (char *)v129 + v134;
          uint64_t v157 = (char *)v128 + v134;
          uint64_t v135 = sub_1C9BEB0C8();
          __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __srcc(v157, __dstd, v135);
          __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v123);
      }
      uint64_t v136 = v160[10];
      uint64_t v137 = (char *)v17 + v136;
      uint64_t v138 = (char *)v18 + v136;
      if (__swift_getEnumTagSinglePayload((uint64_t)v18 + v136, 1, v159))
      {
        uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
      }
      else
      {
        v158(v137, v138, v159);
        __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v159);
      }
      *((unsigned char *)v17 + v160[11]) = *((unsigned char *)v18 + v160[11]);
      goto LABEL_51;
    case 6u:
      uint64_t v31 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v31;
      uint64_t v32 = *((void *)a2 + 2);
      uint64_t v33 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v32;
      *((void *)a1 + 3) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_51:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(v5 + 64));
      break;
  }
  return a1;
}

void destroy for FlowActionType(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = (uint64_t)a1;
      goto LABEL_5;
    case 1u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      if (a1[7])
      {
        uint64_t v2 = (uint64_t)(a1 + 4);
LABEL_5:
        __swift_destroy_boxed_opaque_existential_1(v2);
      }
      break;
    case 2u:
      uint64_t v3 = *a1;

      break;
    case 3u:
      swift_release();
      break;
    case 5u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      uint64_t v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
      swift_bridgeObjectRelease();
      uint64_t v5 = (int *)type metadata accessor for PluginAction();
      long long v6 = &v4[v5[5]];
      uint64_t v7 = sub_1C9BEAB08();
      uint64_t v37 = *(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);
      v37(v6, v7);
      uint64_t v8 = type metadata accessor for Input(0);
      uint64_t v9 = (void **)&v6[*(int *)(v8 + 20)];
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = sub_1C9BEC028();
          goto LABEL_36;
        case 1u:
          uint64_t v11 = sub_1C9BEC028();
          (*(void (**)(void **, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_28;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          uint64_t v10 = sub_1C9BEAC48();
          goto LABEL_36;
        case 5u:
          uint64_t v12 = *v9;
          goto LABEL_34;
        case 6u:
          uint64_t v13 = sub_1C9BEAF18();
          (*(void (**)(void **, uint64_t))(*(void *)(v13 - 8) + 8))(v9, v13);
          uint64_t v14 = (uint64_t)v9 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v15 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v14, 1, v15)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
          }
          goto LABEL_28;
        case 7u:
          uint64_t v16 = sub_1C9BEAF18();
          (*(void (**)(void **, uint64_t))(*(void *)(v16 - 8) + 8))(v9, v16);
          uint64_t v17 = (uint64_t)v9 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v18 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v17, 1, v18)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          }
          swift_bridgeObjectRelease();
          type metadata accessor for LinkParse();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          swift_bridgeObjectRelease();
          break;
        case 8u:
          uint64_t v19 = sub_1C9BEC928();
          (*(void (**)(void **, uint64_t))(*(void *)(v19 - 8) + 8))(v9, v19);
          uint64_t v20 = type metadata accessor for NLRouterParse();
          swift_bridgeObjectRelease();
          uint64_t v21 = (uint64_t)v9 + *(int *)(v20 + 24);
          uint64_t v22 = type metadata accessor for USOParse();
          if (!__swift_getEnumTagSinglePayload(v21, 1, v22))
          {
            uint64_t v23 = sub_1C9BEAF18();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
            uint64_t v24 = v21 + *(int *)(v22 + 20);
            uint64_t v25 = sub_1C9BEAE48();
            uint64_t v36 = v24;
            uint64_t v26 = v24;
            uint64_t v27 = v25;
            if (!__swift_getEnumTagSinglePayload(v26, 1, v25)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v36, v27);
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v12 = *(void **)((char *)v9 + *(int *)(v20 + 28));
LABEL_34:

          break;
        case 9u:
          uint64_t v10 = sub_1C9BEC8F8();
LABEL_36:
          (*(void (**)(void **, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = (uint64_t)&v6[*(int *)(v8 + 28)];
      if (*(void *)(v28 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(v28);
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v29 = (uint64_t)&v4[v5[9]];
      uint64_t v30 = type metadata accessor for ActionParaphrase(0);
      if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = v29 + *(int *)(v30 + 20);
        uint64_t v32 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = v31 + *(int *)(v32 + 24);
          uint64_t v34 = sub_1C9BEB0C8();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
        }
      }
      uint64_t v35 = (uint64_t)&v4[v5[10]];
      if (!__swift_getEnumTagSinglePayload(v35, 1, v7))
      {
        v37((char *)v35, v7);
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

_OWORD *initializeWithCopy for FlowActionType(_OWORD *a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)((char *)a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_49;
    case 1u:
      uint64_t v7 = (void (***)(void *, const void *))a2[3];
      *((void *)a1 + 3) = v7;
      (**(v7 - 1))(a1, a2);
      uint64_t v8 = a1 + 2;
      uint64_t v9 = a2 + 4;
      uint64_t v10 = a2[7];
      if (v10)
      {
        uint64_t v11 = a2[8];
        *((void *)a1 + 7) = v10;
        *((void *)a1 + 8) = v11;
        (**((void (***)(_OWORD *, _OWORD *))v10 - 1))(v8, v9);
      }
      else
      {
        long long v34 = *((_OWORD *)a2 + 3);
        *uint64_t v8 = *v9;
        a1[3] = v34;
        *((void *)a1 + 8) = a2[8];
      }
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      goto LABEL_49;
    case 2u:
      uint64_t v12 = *a2;
      id v13 = v12;
      *(void *)a1 = v12;
      goto LABEL_49;
    case 3u:
      uint64_t v14 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v14;
      sub_1C9BEC838();
    case 5u:
      uint64_t v15 = (void (***)(void *, const void *))a2[3];
      *((void *)a1 + 3) = v15;
      (**(v15 - 1))(a1, a2);
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
      uint64_t v17 = (void *)((char *)a1 + v16);
      uint64_t v18 = (void **)((char *)a2 + v16);
      uint64_t v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      long long v160 = (int *)type metadata accessor for PluginAction();
      uint64_t v20 = v160[5];
      uint64_t v21 = (char *)v17 + v20;
      uint64_t v22 = (char *)v18 + v20;
      uint64_t v23 = sub_1C9BEAB08();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v158 = v24;
      uint64_t v159 = v23;
      v24(v21, v22, v23);
      uint64_t v25 = (int *)type metadata accessor for Input(0);
      uint64_t v26 = v25[5];
      uint64_t v27 = &v21[v26];
      uint64_t v28 = &v22[v26];
      uint64_t v29 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v30 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v27, v28, v30);
          goto LABEL_35;
        case 1u:
          uint64_t v35 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v27, v28, v35);
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v27[*(int *)(v36 + 48)] = *(void *)&v28[*(int *)(v36 + 48)];
          sub_1C9BEC838();
        case 2u:
          uint64_t v37 = *((void *)v28 + 1);
          *(void *)uint64_t v27 = *(void *)v28;
          *((void *)v27 + 1) = v37;
          *((void *)v27 + 2) = *((void *)v28 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 3u:
          *(void *)uint64_t v27 = *(void *)v28;
          swift_unknownObjectRetain();
          goto LABEL_35;
        case 4u:
          uint64_t v38 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v27, v28, v38);
          goto LABEL_35;
        case 5u:
          uint64_t v39 = *(void **)v28;
          *(void *)uint64_t v27 = *(void *)v28;
          id v40 = v39;
          goto LABEL_35;
        case 6u:
          uint64_t v41 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v27, v28, v41);
          uint64_t v42 = type metadata accessor for USOParse();
          uint64_t v43 = *(int *)(v42 + 20);
          uint64_t v148 = v42;
          __dst = &v27[v43];
          uint64_t v44 = &v28[v43];
          uint64_t v45 = sub_1C9BEAE48();
          __src = v44;
          uint64_t v46 = (uint64_t)v44;
          uint64_t v47 = v45;
          if (__swift_getEnumTagSinglePayload(v46, 1, v45))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(__dst, __src, v47);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v47);
          }
          uint64_t v68 = *(int *)(v148 + 24);
          uint64_t v69 = &v27[v68];
          uint64_t v70 = &v28[v68];
          uint64_t v71 = *((void *)v70 + 1);
          *(void *)uint64_t v69 = *(void *)v70;
          *((void *)v69 + 1) = v71;
          uint64_t v72 = *(int *)(v148 + 28);
          uint64_t v73 = &v27[v72];
          long long v74 = &v28[v72];
          v73[4] = v74[4];
          *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 7u:
          uint64_t v49 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v27, v28, v49);
          uint64_t v50 = type metadata accessor for USOParse();
          uint64_t v51 = *(int *)(v50 + 20);
          uint64_t v149 = v50;
          __dsta = &v27[v51];
          uint64_t v52 = &v28[v51];
          uint64_t v53 = sub_1C9BEAE48();
          __srca = v52;
          uint64_t v54 = (uint64_t)v52;
          uint64_t v55 = v53;
          if (__swift_getEnumTagSinglePayload(v54, 1, v53))
          {
            uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(__dsta, __srca, v55);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v55);
          }
          uint64_t v75 = *(int *)(v149 + 24);
          uint64_t v76 = &v27[v75];
          uint64_t v77 = &v28[v75];
          __dstc = (void *)*((void *)v77 + 1);
          *(void *)uint64_t v76 = *(void *)v77;
          *((void *)v76 + 1) = __dstc;
          uint64_t v78 = *(int *)(v149 + 28);
          uint64_t v79 = &v27[v78];
          uint64_t v80 = &v28[v78];
          v79[4] = v80[4];
          *(_DWORD *)uint64_t v79 = *(_DWORD *)v80;
          uint64_t v81 = (int *)type metadata accessor for LinkParse();
          uint64_t v82 = v81[5];
          uint64_t v83 = &v27[v82];
          uint64_t v84 = &v28[v82];
          uint64_t v151 = *((void *)v84 + 1);
          *(void *)uint64_t v83 = *(void *)v84;
          *((void *)v83 + 1) = v151;
          uint64_t v85 = v81[6];
          uint64_t v86 = &v27[v85];
          uint64_t v87 = &v28[v85];
          uint64_t v88 = *((void *)v87 + 1);
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = v88;
          uint64_t v89 = v81[7];
          uint64_t v90 = &v27[v89];
          uint64_t v91 = &v28[v89];
          uint64_t v92 = *((void *)v91 + 1);
          *(void *)uint64_t v90 = *(void *)v91;
          *((void *)v90 + 1) = v92;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 8u:
          uint64_t v57 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v27, v28, v57);
          uint64_t v58 = type metadata accessor for NLRouterParse();
          uint64_t v59 = *(int *)(v58 + 20);
          uint64_t v60 = &v27[v59];
          uint64_t v61 = &v28[v59];
          uint64_t v62 = *((void *)v61 + 1);
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v62;
          uint64_t v142 = v27;
          uint64_t v143 = v58;
          uint64_t v63 = *(int *)(v58 + 24);
          uint64_t v150 = &v28[v63];
          __dstb = &v27[v63];
          uint64_t v64 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          __srcb = (int *)v64;
          if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v64))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v150, *(void *)(*(void *)(v65 - 8) + 64));
            uint64_t v66 = v142;
          }
          else
          {
            uint64_t v93 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(__dstb, v150, v93);
            uint64_t v94 = *(int *)(v64 + 20);
            v141 = &__dstb[v94];
            uint64_t v95 = &v150[v94];
            uint64_t v96 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v96))
            {
              uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v141, v95, *(void *)(*(void *)(v97 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16))(v141, v95, v96);
              __swift_storeEnumTagSinglePayload((uint64_t)v141, 0, 1, v96);
            }
            uint64_t v66 = v142;
            uint64_t v98 = __srcb[6];
            uint64_t v99 = &__dstb[v98];
            uint64_t v100 = &v150[v98];
            uint64_t v101 = *((void *)v100 + 1);
            *(void *)uint64_t v99 = *(void *)v100;
            *((void *)v99 + 1) = v101;
            uint64_t v102 = __srcb[7];
            long long v103 = &__dstb[v102];
            uint64_t v104 = &v150[v102];
            v103[4] = v104[4];
            *(_DWORD *)long long v103 = *(_DWORD *)v104;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)__srcb);
          }
          uint64_t v105 = *(int *)(v143 + 28);
          uint64_t v106 = *(void **)&v28[v105];
          *(void *)((char *)v66 + v105) = v106;
          id v107 = v106;
          goto LABEL_35;
        case 9u:
          uint64_t v67 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v27, v28, v67);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
          break;
      }
      *(void *)&v21[v25[6]] = *(void *)&v22[v25[6]];
      uint64_t v108 = v25[7];
      uint64_t v109 = &v21[v108];
      uint64_t v110 = &v22[v108];
      uint64_t v111 = *(void *)&v22[v108 + 24];
      swift_bridgeObjectRetain();
      if (v111)
      {
        uint64_t v112 = *((void *)v110 + 4);
        *((void *)v109 + 3) = v111;
        *((void *)v109 + 4) = v112;
        (**(void (***)(char *, char *, uint64_t))(v111 - 8))(v109, v110, v111);
      }
      else
      {
        long long v113 = *((_OWORD *)v110 + 1);
        *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
        *((_OWORD *)v109 + 1) = v113;
        *((void *)v109 + 4) = *((void *)v110 + 4);
      }
      v21[v25[8]] = v22[v25[8]];
      *(void *)((char *)v17 + v160[6]) = *(void *)((char *)v18 + v160[6]);
      uint64_t v114 = v160[7];
      int v115 = *(void **)((char *)v18 + v114);
      *(void *)((char *)v17 + v114) = v115;
      uint64_t v116 = v160[8];
      uint64_t v117 = (void *)((char *)v17 + v116);
      v118 = (void *)((char *)v18 + v116);
      uint64_t v119 = v118[1];
      *uint64_t v117 = *v118;
      v117[1] = v119;
      uint64_t v120 = v160[9];
      uint64_t v121 = (void *)((char *)v17 + v120);
      uint64_t v122 = (void *)((char *)v18 + v120);
      uint64_t v123 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      id v124 = v115;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v123))
      {
        uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        uint64_t v126 = v122[1];
        *uint64_t v121 = *v122;
        v121[1] = v126;
        uint64_t v127 = *(int *)(v123 + 20);
        uint64_t v128 = (void *)((char *)v121 + v127);
        int v129 = (void *)((char *)v122 + v127);
        uint64_t v130 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v130))
        {
          uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          uint64_t v132 = v129[1];
          *uint64_t v128 = *v129;
          v128[1] = v132;
          uint64_t v133 = v129[3];
          v128[2] = v129[2];
          v128[3] = v133;
          uint64_t v134 = *(int *)(v130 + 24);
          __dstd = (char *)v129 + v134;
          uint64_t v157 = (char *)v128 + v134;
          uint64_t v135 = sub_1C9BEB0C8();
          __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __srcc(v157, __dstd, v135);
          __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v130);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v123);
      }
      uint64_t v136 = v160[10];
      uint64_t v137 = (char *)v17 + v136;
      uint64_t v138 = (char *)v18 + v136;
      if (__swift_getEnumTagSinglePayload((uint64_t)v18 + v136, 1, v159))
      {
        uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v137, v138, *(void *)(*(void *)(v139 - 8) + 64));
      }
      else
      {
        v158(v137, v138, v159);
        __swift_storeEnumTagSinglePayload((uint64_t)v137, 0, 1, v159);
      }
      *((unsigned char *)v17 + v160[11]) = *((unsigned char *)v18 + v160[11]);
      goto LABEL_49;
    case 6u:
      uint64_t v31 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v31;
      uint64_t v32 = a2[2];
      uint64_t v33 = a2[3];
      *((void *)a1 + 2) = v32;
      *((void *)a1 + 3) = v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_49:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for FlowActionType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9828870((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *((void *)a2 + 3);
        *((void *)a1 + 3) = v6;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
        goto LABEL_50;
      case 1u:
        uint64_t v7 = *((void *)a2 + 3);
        *((void *)a1 + 3) = v7;
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        uint64_t v8 = a1 + 32;
        uint64_t v9 = (long long *)(a2 + 32);
        uint64_t v10 = *((void *)a2 + 7);
        if (v10)
        {
          *((void *)a1 + 7) = v10;
          *((void *)a1 + 8) = *((void *)a2 + 8);
          (**(void (***)(_OWORD *, long long *))(v10 - 8))(v8, v9);
        }
        else
        {
          long long v29 = *v9;
          long long v30 = *((_OWORD *)a2 + 3);
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *uint64_t v8 = v29;
          *((_OWORD *)a1 + 3) = v30;
        }
        a1[72] = a2[72];
        goto LABEL_50;
      case 2u:
        uint64_t v11 = *(void **)a2;
        id v12 = v11;
        *(void *)a1 = v11;
        goto LABEL_50;
      case 3u:
        uint64_t v13 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v13;
        sub_1C9BEC838();
      case 5u:
        uint64_t v14 = *((void *)a2 + 3);
        *((void *)a1 + 3) = v14;
        (**(void (***)(void *, const void *))(v14 - 8))(a1, a2);
        uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = *((void *)v17 + 1);
        int v147 = (int *)type metadata accessor for PluginAction();
        uint64_t v18 = v147[5];
        uint64_t v19 = &v16[v18];
        uint64_t v20 = &v17[v18];
        uint64_t v21 = sub_1C9BEAB08();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v145 = v22;
        uint64_t v146 = v21;
        v22(v19, v20, v21);
        uint64_t v23 = (int *)type metadata accessor for Input(0);
        uint64_t v24 = v23[5];
        uint64_t v25 = &v19[v24];
        uint64_t v26 = &v20[v24];
        uint64_t v27 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v28 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v25, v26, v28);
            goto LABEL_36;
          case 1u:
            uint64_t v31 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v25, v26, v31);
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v25[*(int *)(v32 + 48)] = *(void *)&v26[*(int *)(v32 + 48)];
            sub_1C9BEC838();
          case 2u:
            *(void *)uint64_t v25 = *(void *)v26;
            *((void *)v25 + 1) = *((void *)v26 + 1);
            *((void *)v25 + 2) = *((void *)v26 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_36;
          case 3u:
            *(void *)uint64_t v25 = *(void *)v26;
            swift_unknownObjectRetain();
            goto LABEL_36;
          case 4u:
            uint64_t v33 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v25, v26, v33);
            goto LABEL_36;
          case 5u:
            long long v34 = *(void **)v26;
            *(void *)uint64_t v25 = *(void *)v26;
            id v35 = v34;
            goto LABEL_36;
          case 6u:
            uint64_t v36 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v25, v26, v36);
            uint64_t v37 = type metadata accessor for USOParse();
            uint64_t v38 = *(int *)(v37 + 20);
            uint64_t v137 = v37;
            __dst = &v25[v38];
            uint64_t v39 = &v26[v38];
            uint64_t v40 = sub_1C9BEAE48();
            __src = v39;
            uint64_t v41 = (uint64_t)v39;
            uint64_t v42 = v40;
            if (__swift_getEnumTagSinglePayload(v41, 1, v40))
            {
              uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, __src, *(void *)(*(void *)(v43 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(__dst, __src, v42);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v42);
            }
            uint64_t v62 = *(int *)(v137 + 24);
            uint64_t v63 = &v25[v62];
            uint64_t v64 = &v26[v62];
            *(void *)uint64_t v63 = *(void *)v64;
            *((void *)v63 + 1) = *((void *)v64 + 1);
            uint64_t v65 = *(int *)(v137 + 28);
            uint64_t v66 = &v25[v65];
            uint64_t v67 = &v26[v65];
            int v68 = *(_DWORD *)v67;
            v66[4] = v67[4];
            *(_DWORD *)uint64_t v66 = v68;
            swift_bridgeObjectRetain();
            goto LABEL_36;
          case 7u:
            uint64_t v44 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v25, v26, v44);
            uint64_t v45 = type metadata accessor for USOParse();
            uint64_t v46 = *(int *)(v45 + 20);
            uint64_t v138 = v45;
            __dsta = &v25[v46];
            uint64_t v47 = &v26[v46];
            uint64_t v48 = sub_1C9BEAE48();
            __srca = v47;
            uint64_t v49 = (uint64_t)v47;
            uint64_t v50 = v48;
            if (__swift_getEnumTagSinglePayload(v49, 1, v48))
            {
              uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, __srca, *(void *)(*(void *)(v51 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(__dsta, __srca, v50);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v50);
            }
            uint64_t v69 = *(int *)(v138 + 24);
            uint64_t v70 = &v25[v69];
            uint64_t v71 = &v26[v69];
            *(void *)uint64_t v70 = *(void *)v71;
            *((void *)v70 + 1) = *((void *)v71 + 1);
            uint64_t v72 = *(int *)(v138 + 28);
            uint64_t v73 = &v25[v72];
            long long v74 = &v26[v72];
            int v75 = *(_DWORD *)v74;
            v73[4] = v74[4];
            *(_DWORD *)uint64_t v73 = v75;
            uint64_t v76 = (int *)type metadata accessor for LinkParse();
            uint64_t v77 = v76[5];
            uint64_t v78 = &v25[v77];
            uint64_t v79 = &v26[v77];
            *(void *)uint64_t v78 = *(void *)v79;
            *((void *)v78 + 1) = *((void *)v79 + 1);
            uint64_t v80 = v76[6];
            uint64_t v81 = &v25[v80];
            uint64_t v82 = &v26[v80];
            *(void *)uint64_t v81 = *(void *)v82;
            *((void *)v81 + 1) = *((void *)v82 + 1);
            uint64_t v83 = v76[7];
            uint64_t v84 = &v25[v83];
            uint64_t v85 = &v26[v83];
            *(void *)uint64_t v84 = *(void *)v85;
            *((void *)v84 + 1) = *((void *)v85 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_36;
          case 8u:
            uint64_t v52 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v25, v26, v52);
            uint64_t v53 = type metadata accessor for NLRouterParse();
            uint64_t v54 = *(int *)(v53 + 20);
            uint64_t v55 = &v25[v54];
            uint64_t v56 = &v26[v54];
            *(void *)uint64_t v55 = *(void *)v56;
            *((void *)v55 + 1) = *((void *)v56 + 1);
            uint64_t v131 = v25;
            uint64_t v132 = v53;
            uint64_t v57 = *(int *)(v53 + 24);
            uint64_t v139 = &v26[v57];
            __dstb = &v25[v57];
            uint64_t v58 = type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            __srcb = (int *)v58;
            if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v58))
            {
              uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstb, v139, *(void *)(*(void *)(v59 - 8) + 64));
              uint64_t v60 = v131;
            }
            else
            {
              uint64_t v86 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(__dstb, v139, v86);
              uint64_t v87 = *(int *)(v58 + 20);
              uint64_t v130 = &__dstb[v87];
              uint64_t v88 = &v139[v87];
              uint64_t v89 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
              {
                uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v130, v88, *(void *)(*(void *)(v90 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v130, v88, v89);
                __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v89);
              }
              uint64_t v60 = v131;
              uint64_t v91 = __srcb[6];
              uint64_t v92 = &__dstb[v91];
              uint64_t v93 = &v139[v91];
              *(void *)uint64_t v92 = *(void *)v93;
              *((void *)v92 + 1) = *((void *)v93 + 1);
              uint64_t v94 = __srcb[7];
              uint64_t v95 = &__dstb[v94];
              uint64_t v96 = &v139[v94];
              int v97 = *(_DWORD *)v96;
              v95[4] = v96[4];
              *(_DWORD *)uint64_t v95 = v97;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)__srcb);
            }
            uint64_t v98 = *(int *)(v132 + 28);
            uint64_t v99 = *(void **)&v26[v98];
            *(void *)((char *)v60 + v98) = v99;
            id v100 = v99;
            goto LABEL_36;
          case 9u:
            uint64_t v61 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v25, v26, v61);
LABEL_36:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
            break;
        }
        *(void *)&v19[v23[6]] = *(void *)&v20[v23[6]];
        uint64_t v101 = v23[7];
        uint64_t v102 = &v19[v101];
        long long v103 = &v20[v101];
        uint64_t v104 = *(void *)&v20[v101 + 24];
        swift_bridgeObjectRetain();
        if (v104)
        {
          *((void *)v102 + 3) = v104;
          *((void *)v102 + 4) = *((void *)v103 + 4);
          (**(void (***)(char *, char *, uint64_t))(v104 - 8))(v102, v103, v104);
        }
        else
        {
          long long v105 = *(_OWORD *)v103;
          long long v106 = *((_OWORD *)v103 + 1);
          *((void *)v102 + 4) = *((void *)v103 + 4);
          *(_OWORD *)uint64_t v102 = v105;
          *((_OWORD *)v102 + 1) = v106;
        }
        v19[v23[8]] = v20[v23[8]];
        *(void *)&v16[v147[6]] = *(void *)&v17[v147[6]];
        uint64_t v107 = v147[7];
        uint64_t v108 = *(void **)&v17[v107];
        *(void *)&v16[v107] = v108;
        uint64_t v109 = v147[8];
        uint64_t v110 = &v16[v109];
        uint64_t v111 = &v17[v109];
        *(void *)uint64_t v110 = *(void *)v111;
        *((void *)v110 + 1) = *((void *)v111 + 1);
        uint64_t v112 = v147[9];
        long long v113 = &v16[v112];
        uint64_t v114 = &v17[v112];
        uint64_t v115 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        id v116 = v108;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v115))
        {
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
          memcpy(v113, v114, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          *(void *)long long v113 = *(void *)v114;
          *((void *)v113 + 1) = *((void *)v114 + 1);
          uint64_t v118 = *(int *)(v115 + 20);
          uint64_t v119 = &v113[v118];
          uint64_t v120 = &v114[v118];
          uint64_t v121 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v121))
          {
            uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
            memcpy(v119, v120, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v119 = *(void *)v120;
            *((void *)v119 + 1) = *((void *)v120 + 1);
            *((void *)v119 + 2) = *((void *)v120 + 2);
            *((void *)v119 + 3) = *((void *)v120 + 3);
            uint64_t v123 = *(int *)(v121 + 24);
            __dstc = &v120[v123];
            uint64_t v144 = &v119[v123];
            uint64_t v124 = sub_1C9BEB0C8();
            __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __srcc(v144, __dstc, v124);
            __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v121);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v115);
        }
        uint64_t v125 = v147[10];
        uint64_t v126 = &v16[v125];
        uint64_t v127 = &v17[v125];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v17[v125], 1, v146))
        {
          uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
          memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
        }
        else
        {
          v145(v126, v127, v146);
          __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v146);
        }
        v16[v147[11]] = v17[v147[11]];
        goto LABEL_50;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((void *)a1 + 3) = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_50:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C9828870(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FlowActionType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
    uint64_t v10 = (int *)type metadata accessor for PluginAction();
    uint64_t v11 = v10[5];
    id v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    uint64_t v97 = sub_1C9BEAB08();
    uint64_t v94 = *(void (**)(char *, char *))(*(void *)(v97 - 8) + 32);
    v94(v12, v13);
    uint64_t v14 = (int *)type metadata accessor for Input(0);
    uint64_t v15 = v14[5];
    uint64_t v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    uint64_t v95 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v18 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_24;
      case 1u:
        uint64_t v19 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v16[*(int *)(v20 + 48)] = *(void *)&v17[*(int *)(v20 + 48)];
        goto LABEL_24;
      case 4u:
        uint64_t v21 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
        goto LABEL_24;
      case 6u:
        uint64_t v22 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v16, v17, v22);
        uint64_t v23 = type metadata accessor for USOParse();
        uint64_t v24 = *(int *)(v23 + 20);
        uint64_t v88 = v23;
        __dst = &v16[v24];
        uint64_t v25 = &v17[v24];
        uint64_t v26 = sub_1C9BEAE48();
        __src = v25;
        uint64_t v27 = (uint64_t)v25;
        uint64_t v28 = v26;
        if (__swift_getEnumTagSinglePayload(v27, 1, v26))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, __src, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(__dst, __src, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        *(_OWORD *)&v16[*(int *)(v88 + 24)] = *(_OWORD *)&v17[*(int *)(v88 + 24)];
        uint64_t v43 = *(int *)(v88 + 28);
        uint64_t v44 = &v16[v43];
        uint64_t v45 = &v17[v43];
        v44[4] = v45[4];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        goto LABEL_24;
      case 7u:
        uint64_t v30 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v16, v17, v30);
        uint64_t v31 = type metadata accessor for USOParse();
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v89 = v31;
        __dsta = &v16[v32];
        uint64_t v33 = &v17[v32];
        uint64_t v34 = sub_1C9BEAE48();
        __srca = v33;
        uint64_t v35 = (uint64_t)v33;
        uint64_t v36 = v34;
        if (__swift_getEnumTagSinglePayload(v35, 1, v34))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, __srca, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(__dsta, __srca, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v36);
        }
        *(_OWORD *)&v16[*(int *)(v89 + 24)] = *(_OWORD *)&v17[*(int *)(v89 + 24)];
        uint64_t v46 = *(int *)(v89 + 28);
        uint64_t v47 = &v16[v46];
        uint64_t v48 = &v17[v46];
        v47[4] = v48[4];
        *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
        uint64_t v49 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v16[v49[5]] = *(_OWORD *)&v17[v49[5]];
        *(_OWORD *)&v16[v49[6]] = *(_OWORD *)&v17[v49[6]];
        *(_OWORD *)&v16[v49[7]] = *(_OWORD *)&v17[v49[7]];
        goto LABEL_24;
      case 8u:
        uint64_t v38 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v16, v17, v38);
        uint64_t v39 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v16[*(int *)(v39 + 20)] = *(_OWORD *)&v17[*(int *)(v39 + 20)];
        uint64_t v84 = v16;
        __srcb = (int *)v39;
        uint64_t v40 = *(int *)(v39 + 24);
        __dstb = &v16[v40];
        uint64_t v90 = &v17[v40];
        uint64_t v83 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, (uint64_t)v83))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(__dstb, v90, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v50 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(__dstb, v90, v50);
          uint64_t v51 = v83[5];
          uint64_t v82 = &__dstb[v51];
          uint64_t v52 = &v90[v51];
          uint64_t v53 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v82, v52, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v82, v52, v53);
            __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v53);
          }
          uint64_t v16 = v84;
          *(_OWORD *)&__dstb[v83[6]] = *(_OWORD *)&v90[v83[6]];
          uint64_t v55 = v83[7];
          uint64_t v56 = &__dstb[v55];
          uint64_t v57 = &v90[v55];
          v56[4] = v57[4];
          *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v83);
        }
        *(void *)&v16[__srcb[7]] = *(void *)&v17[__srcb[7]];
        goto LABEL_24;
      case 9u:
        uint64_t v42 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v16, v17, v42);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v16, v17, *(void *)(*(void *)(v95 - 8) + 64));
        break;
    }
    *(void *)&v12[v14[6]] = *(void *)&v13[v14[6]];
    uint64_t v58 = v14[7];
    uint64_t v59 = &v12[v58];
    uint64_t v60 = &v13[v58];
    long long v61 = *((_OWORD *)v60 + 1);
    *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
    *((_OWORD *)v59 + 1) = v61;
    *((void *)v59 + 4) = *((void *)v60 + 4);
    v12[v14[8]] = v13[v14[8]];
    *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
    *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
    *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
    uint64_t v62 = v10[9];
    uint64_t v63 = &v8[v62];
    uint64_t v64 = &v9[v62];
    uint64_t v65 = type metadata accessor for ActionParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
    {
      uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
      memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      uint64_t v67 = v97;
    }
    else
    {
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
      uint64_t v68 = *(int *)(v65 + 20);
      uint64_t v69 = &v63[v68];
      uint64_t v70 = &v64[v68];
      uint64_t v71 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
      {
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
        memcpy(v69, v70, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        long long v73 = *((_OWORD *)v70 + 1);
        *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
        *((_OWORD *)v69 + 1) = v73;
        uint64_t v74 = *(int *)(v71 + 24);
        uint64_t v96 = &v69[v74];
        int v75 = &v70[v74];
        uint64_t v76 = sub_1C9BEB0C8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v96, v75, v76);
        __swift_storeEnumTagSinglePayload((uint64_t)v69, 0, 1, v71);
      }
      uint64_t v67 = v97;
      __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
    }
    uint64_t v77 = v10[10];
    uint64_t v78 = &v8[v77];
    uint64_t v79 = &v9[v77];
    if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v77], 1, v67))
    {
      uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v94)(v78, v79, v67);
      __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v67);
    }
    v8[v10[11]] = v9[v10[11]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for FlowActionType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9828870((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = (int *)type metadata accessor for PluginAction();
      uint64_t v11 = v10[5];
      id v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v102 = sub_1C9BEAB08();
      uint64_t v99 = *(void (**)(char *, char *))(*(void *)(v102 - 8) + 32);
      v99(v12, v13);
      uint64_t v14 = (int *)type metadata accessor for Input(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = &v12[v15];
      uint64_t v17 = &v13[v15];
      uint64_t v100 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v18 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
          goto LABEL_25;
        case 1u:
          uint64_t v19 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v16[*(int *)(v20 + 48)] = *(void *)&v17[*(int *)(v20 + 48)];
          goto LABEL_25;
        case 4u:
          uint64_t v21 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v16, v17, v21);
          goto LABEL_25;
        case 6u:
          uint64_t v87 = v14;
          uint64_t v22 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v16, v17, v22);
          uint64_t v23 = type metadata accessor for USOParse();
          uint64_t v24 = *(int *)(v23 + 20);
          uint64_t v93 = v23;
          __dst = &v16[v24];
          uint64_t v25 = &v17[v24];
          uint64_t v26 = sub_1C9BEAE48();
          __src = v25;
          uint64_t v27 = (uint64_t)v25;
          uint64_t v28 = v26;
          if (__swift_getEnumTagSinglePayload(v27, 1, v26))
          {
            uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(__dst, __src, v28);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
          }
          *(_OWORD *)&v16[*(int *)(v93 + 24)] = *(_OWORD *)&v17[*(int *)(v93 + 24)];
          uint64_t v43 = *(int *)(v93 + 28);
          uint64_t v44 = &v16[v43];
          uint64_t v45 = &v17[v43];
          v44[4] = v45[4];
          *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
          swift_storeEnumTagMultiPayload();
          uint64_t v14 = v87;
          break;
        case 7u:
          uint64_t v30 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v16, v17, v30);
          uint64_t v31 = type metadata accessor for USOParse();
          uint64_t v32 = *(int *)(v31 + 20);
          uint64_t v94 = v31;
          __dsta = &v16[v32];
          uint64_t v88 = v17;
          uint64_t v33 = &v17[v32];
          uint64_t v34 = sub_1C9BEAE48();
          __srca = v33;
          uint64_t v35 = (uint64_t)v33;
          uint64_t v36 = v34;
          if (__swift_getEnumTagSinglePayload(v35, 1, v34))
          {
            uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v37 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(__dsta, __srca, v36);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v36);
          }
          *(_OWORD *)&v16[*(int *)(v94 + 24)] = *(_OWORD *)&v88[*(int *)(v94 + 24)];
          uint64_t v46 = *(int *)(v94 + 28);
          uint64_t v47 = &v16[v46];
          uint64_t v48 = &v88[v46];
          v47[4] = v48[4];
          *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
          uint64_t v49 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v16[v49[5]] = *(_OWORD *)&v88[v49[5]];
          *(_OWORD *)&v16[v49[6]] = *(_OWORD *)&v88[v49[6]];
          *(_OWORD *)&v16[v49[7]] = *(_OWORD *)&v88[v49[7]];
          goto LABEL_25;
        case 8u:
          uint64_t v38 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v16, v17, v38);
          uint64_t v39 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v16[*(int *)(v39 + 20)] = *(_OWORD *)&v17[*(int *)(v39 + 20)];
          uint64_t v89 = v16;
          __srcb = (int *)v39;
          uint64_t v40 = *(int *)(v39 + 24);
          uint64_t v95 = &v16[v40];
          __dstb = &v17[v40];
          uint64_t v86 = (int *)type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)__dstb, 1, (uint64_t)v86))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v95, __dstb, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            uint64_t v50 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v95, __dstb, v50);
            uint64_t v51 = v86[5];
            uint64_t v85 = &v95[v51];
            uint64_t v52 = &__dstb[v51];
            uint64_t v53 = sub_1C9BEAE48();
            uint64_t v84 = v52;
            uint64_t v54 = (uint64_t)v52;
            uint64_t v55 = v53;
            if (__swift_getEnumTagSinglePayload(v54, 1, v53))
            {
              uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v85, v84, *(void *)(*(void *)(v56 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v85, v84, v55);
              __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v55);
            }
            uint64_t v16 = v89;
            *(_OWORD *)&v95[v86[6]] = *(_OWORD *)&__dstb[v86[6]];
            uint64_t v57 = v86[7];
            uint64_t v58 = &v95[v57];
            uint64_t v59 = &__dstb[v57];
            v58[4] = v59[4];
            *(_DWORD *)uint64_t v58 = *(_DWORD *)v59;
            __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, (uint64_t)v86);
          }
          *(void *)&v16[__srcb[7]] = *(void *)&v17[__srcb[7]];
          goto LABEL_25;
        case 9u:
          uint64_t v42 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v16, v17, v42);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v16, v17, *(void *)(*(void *)(v100 - 8) + 64));
          break;
      }
      *(void *)&v12[v14[6]] = *(void *)&v13[v14[6]];
      uint64_t v60 = v14[7];
      long long v61 = &v12[v60];
      uint64_t v62 = &v13[v60];
      long long v63 = *((_OWORD *)v62 + 1);
      *(_OWORD *)long long v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v63;
      *((void *)v61 + 4) = *((void *)v62 + 4);
      v12[v14[8]] = v13[v14[8]];
      *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
      *(void *)&v8[v10[7]] = *(void *)&v9[v10[7]];
      *(_OWORD *)&v8[v10[8]] = *(_OWORD *)&v9[v10[8]];
      uint64_t v64 = v10[9];
      uint64_t v65 = &v8[v64];
      uint64_t v66 = &v9[v64];
      uint64_t v67 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        uint64_t v69 = v102;
      }
      else
      {
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        uint64_t v70 = *(int *)(v67 + 20);
        uint64_t v71 = &v65[v70];
        uint64_t v72 = &v66[v70];
        uint64_t v73 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73))
        {
          uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          long long v75 = *((_OWORD *)v72 + 1);
          *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
          *((_OWORD *)v71 + 1) = v75;
          uint64_t v76 = *(int *)(v73 + 24);
          uint64_t v101 = &v71[v76];
          uint64_t v77 = &v72[v76];
          uint64_t v78 = sub_1C9BEB0C8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v101, v77, v78);
          __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v73);
        }
        uint64_t v69 = v102;
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
      }
      uint64_t v79 = v10[10];
      uint64_t v80 = &v8[v79];
      uint64_t v81 = &v9[v79];
      if (__swift_getEnumTagSinglePayload((uint64_t)&v9[v79], 1, v69))
      {
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v99)(v80, v81, v69);
        __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v69);
      }
      v8[v10[11]] = v9[v10[11]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C9829CA0()
{
  uint64_t v3 = "(";
  uint64_t v4 = &unk_1C9BF9FB0;
  uint64_t v5 = &unk_1C9BF9FC8;
  uint64_t v6 = MEMORY[0x1E4FBC858] + 64;
  uint64_t v7 = &unk_1C9BF9FE0;
  uint64_t result = type metadata accessor for PluginAction();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v8 = &v2;
    uint64_t v9 = &unk_1C9BF9FF8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FlowAction.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for Delegate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9829DC0);
}

uint64_t sub_1C9829DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowActionType(0);

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Delegate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9829E1C);
}

uint64_t sub_1C9829E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowActionType(0);

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for Delegate(uint64_t a1)
{
  return sub_1C95FCC2C(a1, qword_1EA58E3F0);
}

uint64_t sub_1C9829E8C()
{
  uint64_t result = type metadata accessor for FlowActionType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C9829F6C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v234 = sub_1C9BEAB08();
  uint64_t v269 = *(void *)(v234 - 8);
  int v262 = *(_DWORD *)(v269 + 80);
  uint64_t v228 = sub_1C9BEC028();
  uint64_t v227 = *(void *)(v228 - 8);
  int v3 = *(_DWORD *)(v227 + 80);
  uint64_t v226 = sub_1C9BEAC48();
  uint64_t v250 = *(void *)(v226 - 8);
  uint64_t v225 = v250;
  int v4 = *(_DWORD *)(v250 + 80) | v3;
  uint64_t v230 = sub_1C9BEAF18();
  uint64_t v248 = *(void *)(v230 - 8);
  uint64_t v267 = v248;
  int v241 = *(_DWORD *)(v248 + 80);
  uint64_t v229 = sub_1C9BEAE48();
  uint64_t v244 = *(void *)(v229 - 8);
  uint64_t v266 = v244;
  int v5 = *(_DWORD *)(v244 + 80);
  uint64_t v6 = v241 & 0xF8 | v5 | 7u;
  uint64_t v221 = sub_1C9BEC928();
  uint64_t v246 = *(void *)(v221 - 8);
  uint64_t v220 = v246;
  int v7 = *(_DWORD *)(v246 + 80);
  uint64_t v224 = sub_1C9BEC8F8();
  uint64_t v252 = *(void *)(v224 - 8);
  uint64_t v223 = v252;
  int v239 = v7;
  int v237 = *(_DWORD *)(v252 + 80);
  int v243 = v4;
  uint64_t v8 = (v4 | (v7 | v237)) & 0xF8 | v6;
  uint64_t v9 = v8 | v262;
  uint64_t v10 = sub_1C9BEB0C8();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = v9 | v13;
  uint64_t v15 = ((v9 | v13) + 32) & ~(v9 | v13);
  uint64_t v231 = v10;
  uint64_t v232 = v9 + 16;
  uint64_t v235 = v9;
  uint64_t v16 = (v9 + 16) & ~v9;
  uint64_t v17 = *(void *)(v269 + 64);
  unint64_t v18 = *(void *)(v227 + 64);
  unint64_t v222 = v18 + 7;
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
    unint64_t v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v18 <= *(void *)(v250 + 64)) {
    unint64_t v18 = *(void *)(v250 + 64);
  }
  int v19 = v5;
  uint64_t v251 = *(void *)(v248 + 64) + v5;
  uint64_t v259 = v5;
  int v20 = *(_DWORD *)(v244 + 84);
  size_t v215 = *(void *)(v244 + 64);
  if (v20) {
    uint64_t v21 = *(void *)(v244 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v244 + 64) + 1;
  }
  size_t v249 = v21;
  uint64_t v22 = v21 + 7;
  unint64_t v217 = v251 & ~(unint64_t)v5;
  unint64_t v23 = (v21 + 7 + v217) & 0xFFFFFFFFFFFFFFF8;
  size_t v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 <= v24) {
    unint64_t v18 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v25 = v23 + 31;
  unint64_t v26 = ((((((v23 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v18 <= v26) {
    unint64_t v18 = v26;
  }
  uint64_t v245 = *(void *)(v246 + 64) + 7;
  unsigned int v216 = *(_DWORD *)(v266 + 84);
  unsigned int v27 = v20 - 1;
  if (!v20) {
    unsigned int v27 = 0;
  }
  unsigned int v218 = *(_DWORD *)(v267 + 84);
  unsigned int v214 = v27;
  if (v27 <= v218) {
    unsigned int v27 = *(_DWORD *)(v267 + 84);
  }
  if (v27 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  unsigned int v247 = v27;
  uint64_t v219 = v6 + 16;
  uint64_t v255 = v17 + v8;
  uint64_t v257 = v241 & 0xF8 | v5 | 7u;
  unint64_t v28 = v25 + ((v6 + 16 + (v245 & 0xFFFFFFFFFFFFFFF8)) & ~v6);
  uint64_t v29 = v8;
  uint64_t v30 = (v17 + v8) & ~v8;
  uint64_t v31 = v11;
  unint64_t v32 = (v28 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v18 <= v32) {
    unint64_t v18 = v32;
  }
  if (v18 <= *(void *)(v252 + 64)) {
    unint64_t v18 = *(void *)(v252 + 64);
  }
  if (v18 <= 0x18) {
    unint64_t v18 = 24;
  }
  unint64_t v261 = v18;
  unint64_t v33 = (((v18 + v30 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (((((v33 + v16 + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v12 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unsigned int v36 = *(_DWORD *)(v11 + 84);
  if (v36 <= 0x7FFFFFFF) {
    int v37 = 0x7FFFFFFF;
  }
  else {
    int v37 = *(_DWORD *)(v11 + 84);
  }
  unint64_t v38 = *(void *)(v11 + 64) + ((v12 + 32) & ~(unint64_t)v12);
  uint64_t v39 = v12 + 16;
  unint64_t v40 = v38 + (v39 & v35) + v262;
  uint64_t v41 = v262;
  if (*(_DWORD *)(v269 + 84)) {
    size_t v42 = *(void *)(v269 + 64);
  }
  else {
    size_t v42 = v17 + 1;
  }
  unint64_t v43 = v15 + v42 + ((v40 + ((v12 + 16 + v34) & v35)) & ~(unint64_t)v262);
  if (v43 + 1 > 0x49) {
    uint64_t v44 = v43 + 1;
  }
  else {
    uint64_t v44 = 73;
  }
  uint64_t v45 = *(void *)(a3 + 16);
  uint64_t v46 = *(void *)(v45 - 8);
  int v47 = *(_DWORD *)(v46 + 80);
  if ((v14 | v47) != 7
    || ((v243 | v262 | v241 | v19 | v239 | v237 | v12 | v47) & 0x100000) != 0
    || (uint64_t v48 = v44 + v47 + 1,
        ((*(void *)(v46 + 64) + 7 + (v48 & ~(unint64_t)v47)) & 0xFFFFFFFFFFFFFFF8) + 41 > 0x18))
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  uint64_t v49 = v14;
  size_t v242 = v38 + ((v12 + 16) & v35);
  uint64_t v50 = a2;
  unsigned int v51 = a2[v44];
  unsigned int v52 = v51 - 7;
  if (v51 >= 7)
  {
    if (v44 <= 3) {
      uint64_t v53 = v44;
    }
    else {
      uint64_t v53 = 4;
    }
    switch(v53)
    {
      case 1:
        int v54 = *a2;
        goto LABEL_46;
      case 2:
        int v54 = *(unsigned __int16 *)a2;
        goto LABEL_46;
      case 3:
        int v54 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_46;
      case 4:
        int v54 = *(_DWORD *)a2;
LABEL_46:
        if (v44 < 4) {
          v54 |= v52 << (8 * v44);
        }
        unsigned int v51 = v54 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v55 = v22;
  int v263 = v37;
  unint64_t v265 = v35;
  unsigned int v253 = v36;
  uint64_t v56 = ~v49;
  uint64_t v57 = ~v235;
  uint64_t v58 = ~v29;
  uint64_t v59 = ~v259;
  uint64_t v60 = ~v257;
  uint64_t v61 = ~v13;
  unint64_t v62 = ~(unint64_t)v47;
  uint64_t v271 = *(void *)(v46 + 64) + 7;
  switch(v51)
  {
    case 1u:
      unint64_t v70 = ~(unint64_t)v47;
      uint64_t v71 = v44 + v47 + 1;
      uint64_t v72 = v44;
      uint64_t v73 = *(void *)(v45 - 8);
      uint64_t v74 = v45;
      uint64_t v75 = *((void *)a2 + 3);
      uint64_t v64 = a1;
      *(void *)(a1 + 24) = v75;
      (**(void (***)(uint64_t, unsigned __int8 *))(v75 - 8))(a1, a2);
      uint64_t v76 = (_OWORD *)(a1 + 32);
      uint64_t v77 = a2 + 32;
      uint64_t v78 = *((void *)a2 + 7);
      if (v78)
      {
        uint64_t v79 = *((void *)a2 + 8);
        *(void *)(a1 + 56) = v78;
        *(void *)(a1 + 64) = v79;
        (**(void (***)(_OWORD *, _OWORD *))(v78 - 8))(v76, v77);
      }
      else
      {
        long long v108 = *((_OWORD *)a2 + 3);
        *uint64_t v76 = *v77;
        *(_OWORD *)(a1 + 48) = v108;
        *(void *)(a1 + 64) = *((void *)a2 + 8);
      }
      uint64_t v45 = v74;
      uint64_t v46 = v73;
      uint64_t v48 = v71;
      unint64_t v62 = v70;
      *(unsigned char *)(a1 + 72) = a2[72];
      *(unsigned char *)(a1 + v72) = 1;
      goto LABEL_116;
    case 2u:
      uint64_t v80 = *(void *)a2;
      uint64_t v81 = v45;
      uint64_t v82 = *(void *)(v45 - 8);
      uint64_t v83 = v44;
      uint64_t v84 = v44 + v47 + 1;
      unint64_t v85 = ~(unint64_t)v47;
      id v86 = *(id *)a2;
      unint64_t v62 = v85;
      uint64_t v48 = v84;
      uint64_t v46 = v82;
      uint64_t v45 = v81;
      uint64_t v64 = a1;
      *(void *)a1 = v80;
      *(unsigned char *)(a1 + v83) = 2;
      goto LABEL_116;
    case 3u:
      uint64_t v87 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v87;
      *(unsigned char *)(a1 + v44) = 3;
      sub_1C9BEC838();
    case 4u:
      uint64_t v64 = a1;
      *(unsigned char *)a1 = *a2;
      *(unsigned char *)(a1 + v44) = 4;
      goto LABEL_116;
    case 5u:
      uint64_t v240 = v55;
      unint64_t v207 = v33 + 41;
      uint64_t v208 = ~v41;
      uint64_t v205 = v61;
      uint64_t v260 = v39;
      unint64_t v209 = v40;
      unint64_t v210 = ~(unint64_t)v47;
      size_t __n = v42;
      uint64_t v212 = v44 + v47 + 1;
      uint64_t v204 = v31;
      uint64_t v213 = v44;
      uint64_t v236 = *(void *)(v45 - 8);
      uint64_t v238 = v45;
      uint64_t v88 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v88;
      (**(void (***)(uint64_t, unsigned __int8 *))(v88 - 8))(a1, a2);
      uint64_t v89 = (void *)((a1 + v49 + 32) & v56);
      uint64_t v90 = (void *)((unint64_t)&a2[v49 + 32] & v56);
      *uint64_t v89 = *v90;
      v89[1] = v90[1];
      unint64_t v91 = ((unint64_t)v89 + v232) & v57;
      unint64_t v92 = ((unint64_t)v90 + v232) & v57;
      uint64_t v93 = *(void (**)(void *, const void *, uint64_t))(v269 + 16);
      swift_bridgeObjectRetain();
      v203 = v93;
      v93((void *)v91, (const void *)v92, v234);
      unint64_t v233 = v91;
      unint64_t v258 = (v255 + v91) & v58;
      unint64_t v206 = v92;
      uint64_t v94 = (unsigned __int8 *)((v255 + v92) & v58);
      unsigned int v95 = v94[v261];
      unsigned int v96 = v95 - 10;
      if (v95 < 0xA)
      {
        uint64_t v98 = v253;
        unint64_t v99 = v265;
        uint64_t v100 = v240;
      }
      else
      {
        if (v261 <= 3) {
          uint64_t v97 = v261;
        }
        else {
          uint64_t v97 = 4;
        }
        uint64_t v98 = v253;
        unint64_t v99 = v265;
        uint64_t v100 = v240;
        switch(v97)
        {
          case 1:
            int v101 = *v94;
            goto LABEL_69;
          case 2:
            int v101 = *(unsigned __int16 *)v94;
            goto LABEL_69;
          case 3:
            int v101 = *(unsigned __int16 *)v94 | (v94[2] << 16);
            goto LABEL_69;
          case 4:
            int v101 = *(_DWORD *)v94;
LABEL_69:
            if (v261 < 4) {
              unsigned int v95 = (v101 | (v96 << (8 * v261))) + 10;
            }
            else {
              unsigned int v95 = v101 + 10;
            }
            break;
          default:
            goto LABEL_72;
        }
      }
      break;
    case 6u:
      uint64_t v102 = *((void *)a2 + 1);
      uint64_t v64 = a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v102;
      uint64_t v103 = *((void *)a2 + 3);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = v103;
      *(unsigned char *)(a1 + v44) = 6;
      uint64_t v104 = v45;
      uint64_t v105 = v46;
      uint64_t v106 = v44 + v47 + 1;
      unint64_t v107 = ~(unint64_t)v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v62 = v107;
      uint64_t v48 = v106;
      uint64_t v46 = v105;
      uint64_t v45 = v104;
      goto LABEL_116;
    default:
      long long v63 = *(_OWORD *)(a2 + 24);
      uint64_t v64 = a1;
      *(_OWORD *)(a1 + 24) = v63;
      uint64_t v65 = v45;
      unint64_t v66 = ~(unint64_t)v47;
      uint64_t v67 = v44;
      uint64_t v68 = v46;
      uint64_t v69 = v44 + v47 + 1;
      (**(void (***)(uint64_t, unsigned __int8 *))(v63 - 8))(a1, a2);
      unint64_t v62 = v66;
      uint64_t v48 = v69;
      uint64_t v46 = v68;
      uint64_t v45 = v65;
      *(unsigned char *)(a1 + v67) = 0;
      goto LABEL_116;
  }
LABEL_72:
  switch(v95)
  {
    case 0u:
      unint64_t v109 = v258;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v227 + 16))(v258, v94, v228);
      *(unsigned char *)(v258 + v261) = 0;
      goto LABEL_86;
    case 1u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v227 + 16))(v258, v94, v228);
      *(void *)((v222 + v258) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v94[v222] & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v258 + v261) = 1;
      sub_1C9BEC838();
    case 2u:
      unint64_t v109 = v258;
      *(void *)unint64_t v258 = *(void *)v94;
      *(void *)(v258 + 8) = *((void *)v94 + 1);
      *(void *)(v258 + 16) = *((void *)v94 + 2);
      *(unsigned char *)(v258 + v261) = 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_86;
    case 3u:
      unint64_t v109 = v258;
      *(void *)unint64_t v258 = *(void *)v94;
      *(unsigned char *)(v258 + v261) = 3;
      swift_unknownObjectRetain();
      goto LABEL_86;
    case 4u:
      unint64_t v109 = v258;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v225 + 16))(v258, v94, v226);
      char v112 = 4;
      goto LABEL_85;
    case 5u:
      long long v113 = *(void **)v94;
      unint64_t v109 = v258;
      *(void *)unint64_t v258 = *(void *)v94;
      *(unsigned char *)(v258 + v261) = 5;
      id v114 = v113;
      goto LABEL_86;
    case 6u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v267 + 16))(v258, v94, v230);
      uint64_t v115 = (void *)((v251 + v258) & v59);
      v256 = v94;
      id v116 = (const void *)((unint64_t)&v94[v251] & v59);
      if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, v229))
      {
        memcpy(v115, v116, v249);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v266 + 16))(v115, v116, v229);
        __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v229);
      }
      uint64_t v64 = a1;
      unint64_t v120 = v233;
      uint64_t v111 = v234;
      unint64_t v110 = v261 + 1;
      unint64_t v121 = v206;
      v174 = (void *)(((unint64_t)v115 + v240) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v175 = (void *)(((unint64_t)v116 + v240) & 0xFFFFFFFFFFFFFFF8);
      void *v174 = *v175;
      v174[1] = v175[1];
      unint64_t v176 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v177 = ((unint64_t)v175 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v178 = *(_DWORD *)v177;
      *(unsigned char *)(v176 + 4) = *(unsigned char *)(v177 + 4);
      *(_DWORD *)unint64_t v176 = v178;
      unint64_t v109 = v258;
      *(unsigned char *)(v258 + v261) = 6;
      swift_bridgeObjectRetain();
      unint64_t v99 = v265;
      goto LABEL_141;
    case 7u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v267 + 16))(v258, v94, v230);
      uint64_t v117 = (void *)((v251 + v258) & v59);
      uint64_t v118 = (const void *)((unint64_t)&v94[v251] & v59);
      if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v229))
      {
        memcpy(v117, v118, v249);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v266 + 16))(v117, v118, v229);
        __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v229);
      }
      uint64_t v64 = a1;
      unint64_t v110 = v261 + 1;
      uint64_t v179 = (void *)(((unint64_t)v117 + v240) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v180 = (void *)(((unint64_t)v118 + v240) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v179 = *v180;
      v179[1] = v180[1];
      unint64_t v181 = ((unint64_t)v179 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v182 = ((unint64_t)v180 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v183 = *(_DWORD *)v182;
      *(unsigned char *)(v181 + 4) = *(unsigned char *)(v182 + 4);
      *(_DWORD *)unint64_t v181 = v183;
      unint64_t v109 = v258;
      uint64_t v184 = (void *)(((v258 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
      long long v185 = (void *)((((unint64_t)v94 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v184 = *v185;
      v184[1] = v185[1];
      v186 = (void *)(((unint64_t)v184 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v187 = (void *)(((unint64_t)v185 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v186 = *v187;
      v186[1] = v187[1];
      uint64_t v188 = (void *)(((unint64_t)v186 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v189 = (void *)(((unint64_t)v187 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v188 = *v189;
      v188[1] = v189[1];
      *(unsigned char *)(v258 + v261) = 7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v99 = v265;
      unint64_t v119 = (unint64_t)v94;
      unint64_t v120 = v233;
      uint64_t v111 = v234;
      goto LABEL_88;
    case 8u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v220 + 16))(v258, v94, v221);
      uint64_t v167 = (void *)((v245 + v258) & 0xFFFFFFFFFFFFFFF8);
      v168 = (void *)((unint64_t)&v94[v245] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v167 = *v168;
      v167[1] = v168[1];
      uint64_t v169 = v60;
      uint64_t v170 = (void *)(((unint64_t)v167 + v219) & v60);
      uint64_t v171 = ((unint64_t)v168 + v219) & v169;
      swift_bridgeObjectRetain();
      v256 = v94;
      uint64_t v202 = v59;
      unint64_t v254 = (unint64_t)v170;
      if (v218 == v247)
      {
        unint64_t v110 = v261 + 1;
        if (!__swift_getEnumTagSinglePayload(v171, v218, v230))
        {
          long long v172 = (const void *)((v251 + v171) & v202);
          goto LABEL_135;
        }
LABEL_127:
        memcpy(v170, (const void *)v171, v24);
        uint64_t v64 = a1;
        unint64_t v120 = v233;
        uint64_t v111 = v234;
        unint64_t v121 = v206;
        unint64_t v173 = v217;
LABEL_139:
        size_t v197 = v249;
        goto LABEL_140;
      }
      long long v172 = (const void *)((v251 + v171) & v59);
      if (v214 == v247)
      {
        unint64_t v110 = v261 + 1;
        if (v216 < 2 || __swift_getEnumTagSinglePayload((uint64_t)v172, v216, v229) < 2) {
          goto LABEL_135;
        }
        goto LABEL_127;
      }
      unint64_t v190 = *(void *)((((unint64_t)v172 + v100) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v190 >= 0xFFFFFFFF) {
        LODWORD(v190) = -1;
      }
      unint64_t v110 = v261 + 1;
      if ((v190 + 1) >= 2) {
        goto LABEL_127;
      }
LABEL_135:
      (*(void (**)(void *, uint64_t, uint64_t))(v267 + 16))(v170, v171, v230);
      v191 = (void *)(((unint64_t)v170 + v251) & v202);
      if (__swift_getEnumTagSinglePayload((uint64_t)v172, 1, v229))
      {
        memcpy(v191, v172, v249);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v266 + 16))(v191, v172, v229);
        __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v229);
      }
      uint64_t v111 = v234;
      uint64_t v192 = (void *)(((unint64_t)v191 + v240) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v193 = (void *)(((unint64_t)v172 + v240) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v192 = *v193;
      v192[1] = v193[1];
      unint64_t v194 = ((unint64_t)v192 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v195 = ((unint64_t)v193 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v196 = *(_DWORD *)v195;
      *(unsigned char *)(v194 + 4) = *(unsigned char *)(v195 + 4);
      *(_DWORD *)unint64_t v194 = v196;
      swift_bridgeObjectRetain();
      uint64_t v64 = a1;
      unint64_t v120 = v233;
      unint64_t v121 = v206;
      unint64_t v173 = v217;
      size_t v197 = v215;
      if (!v216) {
        goto LABEL_139;
      }
LABEL_140:
      unint64_t v198 = (((v173 + v197 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      uint64_t v199 = (void *)(((v254 | 7) + v198) & 0xFFFFFFFFFFFFFFF8);
      v200 = *(void **)(((v171 | 7) + v198) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v199 = v200;
      unint64_t v109 = v258;
      *(unsigned char *)(v258 + v261) = 8;
      id v201 = v200;
LABEL_141:
      unint64_t v119 = (unint64_t)v256;
LABEL_89:
      uint64_t v122 = (void *)(((v119 | 7) + v110) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v123 = (void *)(((v109 | 7) + v110) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v123 = *v122;
      unint64_t v124 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v126 = *(void *)(v125 + 24);
      swift_bridgeObjectRetain();
      if (v126 < 0xFFFFFFFF)
      {
        long long v127 = *(_OWORD *)v125;
        long long v128 = *(_OWORD *)(v125 + 16);
        *(void *)(v124 + 32) = *(void *)(v125 + 32);
        *(_OWORD *)unint64_t v124 = v127;
        *(_OWORD *)(v124 + 16) = v128;
      }
      else
      {
        *(void *)(v124 + 24) = v126;
        *(void *)(v124 + 32) = *(void *)(v125 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v126 - 8))(v124, v125, v126);
      }
      *(unsigned char *)(v124 + 40) = *(unsigned char *)(v125 + 40);
      int v129 = (void *)((v120 | 7) + v207);
      uint64_t v130 = (void *)((v121 | 7) + v207);
      *int v129 = *v130;
      uint64_t v131 = (void *)(((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v132 = (void **)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v133 = *v132;
      *uint64_t v131 = *v132;
      uint64_t v134 = (void *)(((unint64_t)v131 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v135 = (void *)(((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v134 = *v135;
      v134[1] = v135[1];
      uint64_t v136 = (void *)(((unint64_t)v134 + v260) & v99);
      uint64_t v137 = (void *)(((unint64_t)v135 + v260) & v99);
      swift_bridgeObjectRetain();
      id v138 = v133;
      swift_bridgeObjectRetain();
      if (v263 < 1)
      {
        v141 = (void *)(((unint64_t)v137 + v260) & v99);
        uint64_t v140 = v260;
        uint64_t v50 = a2;
        if ((v98 & 0x80000000) != 0)
        {
          unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v260 + (((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8)) & v205, v98, v231);
          uint64_t v140 = v260;
        }
        else
        {
          unint64_t v142 = v141[1];
          if (v142 >= 0xFFFFFFFF) {
            LODWORD(v142) = -1;
          }
          unsigned int EnumTagSinglePayload = v142 + 1;
        }
        if (EnumTagSinglePayload <= 1) {
          goto LABEL_103;
        }
LABEL_107:
        uint64_t v148 = v136;
        uint64_t v149 = v137;
        size_t v150 = v242;
        goto LABEL_111;
      }
      unint64_t v139 = v137[1];
      if (v139 >= 0xFFFFFFFF) {
        LODWORD(v139) = -1;
      }
      uint64_t v50 = a2;
      if ((v139 + 1) > 1) {
        goto LABEL_107;
      }
      uint64_t v140 = v260;
      v141 = (void *)(((unint64_t)v137 + v260) & v265);
LABEL_103:
      void *v136 = *v137;
      v136[1] = v137[1];
      uint64_t v144 = (void *)(((unint64_t)v136 + v140) & v265);
      uint64_t v145 = v140;
      swift_bridgeObjectRetain();
      if ((v98 & 0x80000000) != 0)
      {
        int v147 = __swift_getEnumTagSinglePayload((v145 + (((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8)) & v205, v98, v231);
      }
      else
      {
        unint64_t v146 = v141[1];
        if (v146 >= 0xFFFFFFFF) {
          LODWORD(v146) = -1;
        }
        int v147 = v146 + 1;
      }
      size_t v150 = v38;
      if (!v147)
      {
        *uint64_t v144 = *v141;
        v144[1] = v141[1];
        v162 = (void *)(((unint64_t)v144 + 23) & 0xFFFFFFFFFFFFFFF8);
        v163 = (void *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8);
        void *v162 = *v163;
        v162[1] = v163[1];
        unint64_t v164 = ((unint64_t)v162 + v260) & v205;
        unint64_t v165 = ((unint64_t)v163 + v260) & v205;
        uint64_t v166 = *(void (**)(unint64_t, unint64_t, uint64_t))(v204 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v166(v164, v165, v231);
        goto LABEL_112;
      }
      uint64_t v148 = v144;
      uint64_t v149 = v141;
LABEL_111:
      memcpy(v148, v149, v150);
LABEL_112:
      uint64_t v151 = (void *)(((unint64_t)v136 + v209) & v208);
      uint64_t v152 = (const void *)(((unint64_t)v137 + v209) & v208);
      if (__swift_getEnumTagSinglePayload((uint64_t)v152, 1, v111))
      {
        size_t v153 = __n;
        memcpy(v151, v152, __n);
      }
      else
      {
        v203(v151, v152, v111);
        __swift_storeEnumTagSinglePayload((uint64_t)v151, 0, 1, v111);
        size_t v153 = __n;
      }
      *((unsigned char *)v151 + v153) = *((unsigned char *)v152 + v153);
      uint64_t v48 = v212;
      *(unsigned char *)(v64 + v213) = 5;
      uint64_t v45 = v238;
      uint64_t v46 = v236;
      unint64_t v62 = v210;
LABEL_116:
      unint64_t v154 = (v48 + v64) & v62;
      unint64_t v155 = (unint64_t)&v50[v48] & v62;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v46 + 16))(v154, v155, v45);
      unint64_t v156 = (v271 + v154) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v157 = (v271 + v155) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = *(void *)(v157 + 24);
      if (v158 < 0xFFFFFFFF)
      {
        long long v159 = *(_OWORD *)v157;
        long long v160 = *(_OWORD *)(v157 + 16);
        *(void *)(v156 + 32) = *(void *)(v157 + 32);
        *(_OWORD *)unint64_t v156 = v159;
        *(_OWORD *)(v156 + 16) = v160;
      }
      else
      {
        *(void *)(v156 + 24) = v158;
        *(void *)(v156 + 32) = *(void *)(v157 + 32);
        (**(void (***)(unint64_t, unint64_t))(v158 - 8))(v156, v157);
      }
      *(unsigned char *)(v156 + 40) = *(unsigned char *)(v157 + 40);
      return v64;
    case 9u:
      unint64_t v109 = v258;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v223 + 16))(v258, v94, v224);
      char v112 = 9;
LABEL_85:
      *(unsigned char *)(v109 + v261) = v112;
LABEL_86:
      uint64_t v64 = a1;
      uint64_t v111 = v234;
      unint64_t v110 = v261 + 1;
      goto LABEL_87;
    default:
      unint64_t v109 = v258;
      unint64_t v110 = v261 + 1;
      memcpy((void *)v258, v94, v261 + 1);
      uint64_t v64 = a1;
      uint64_t v111 = v234;
LABEL_87:
      unint64_t v119 = (unint64_t)v94;
      unint64_t v120 = v233;
LABEL_88:
      unint64_t v121 = v206;
      goto LABEL_89;
  }
}

unint64_t sub_1C982B4DC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v107 = sub_1C9BEAB08();
  uint64_t v125 = *(void *)(v107 - 8);
  uint64_t v128 = *(unsigned __int8 *)(v125 + 80);
  uint64_t v102 = sub_1C9BEC028();
  uint64_t v101 = *(void *)(v102 - 8);
  int v2 = *(_DWORD *)(v101 + 80);
  uint64_t v100 = sub_1C9BEAC48();
  uint64_t v114 = *(void *)(v100 - 8);
  uint64_t v99 = v114;
  int v3 = *(_DWORD *)(v114 + 80) | v2;
  uint64_t v103 = sub_1C9BEAF18();
  uint64_t v112 = *(void *)(v103 - 8);
  uint64_t v123 = v112;
  int v4 = *(_DWORD *)(v112 + 80) & 0xF8;
  uint64_t v104 = sub_1C9BEAE48();
  uint64_t v108 = *(void *)(v104 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v108 + 80);
  uint64_t v6 = v4 | v5 | 7;
  uint64_t v96 = sub_1C9BEC928();
  uint64_t v110 = *(void *)(v96 - 8);
  uint64_t v95 = v110;
  int v7 = *(_DWORD *)(v110 + 80);
  uint64_t v98 = sub_1C9BEC8F8();
  uint64_t v116 = *(void *)(v98 - 8);
  uint64_t v97 = v116;
  uint64_t v8 = (v3 | (v7 | *(_DWORD *)(v116 + 80))) & 0xF8 | v6;
  uint64_t v9 = v8 | v128;
  uint64_t v105 = sub_1C9BEB0C8();
  uint64_t v10 = *(void *)(v105 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11;
  uint64_t v124 = v8 | v128 | v11;
  uint64_t v106 = (v8 | v128) + 16;
  uint64_t v13 = *(void *)(v125 + 64);
  unint64_t v14 = *(void *)(v101 + 64);
  if (((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v14) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v114 + 64)) {
    unint64_t v14 = *(void *)(v114 + 64);
  }
  uint64_t v15 = v5;
  uint64_t v118 = *(void *)(v112 + 64) + v5;
  uint64_t v16 = v118 & ~v5;
  uint64_t v94 = v108;
  unsigned int v17 = *(_DWORD *)(v108 + 84);
  if (v17) {
    uint64_t v18 = *(void *)(v108 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v108 + 64) + 1;
  }
  unint64_t v19 = (v18 + 7 + v16) & 0xFFFFFFFFFFFFFFF8;
  if (v14 <= ((v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5)) {
    unint64_t v14 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v20 = v19 + 31;
  unint64_t v21 = ((((((v19 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 <= v21) {
    unint64_t v14 = v21;
  }
  uint64_t v111 = *(void *)(v110 + 64) + 7;
  uint64_t v115 = v6 + 16;
  uint64_t v22 = *(unsigned int *)(v112 + 84);
  if (v17) {
    unsigned int v23 = v17 - 1;
  }
  else {
    unsigned int v23 = 0;
  }
  if (v23 <= v22) {
    unsigned int v24 = *(_DWORD *)(v112 + 84);
  }
  else {
    unsigned int v24 = v23;
  }
  if (v24 <= 0x7FFFFFFE) {
    unsigned int v24 = 2147483646;
  }
  unsigned int v113 = v24;
  unint64_t v109 = v20;
  if (v14 <= ((v20 + ((v6 + 16 + (v111 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v14 = ((v20 + ((v6 + 16 + (v111 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v116 + 64)) {
    unint64_t v14 = *(void *)(v116 + 64);
  }
  if (v14 <= 0x18) {
    uint64_t v25 = 24;
  }
  else {
    uint64_t v25 = v14;
  }
  unint64_t v26 = v11 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = v11 + 16;
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFFu) {
    int v28 = 0x7FFFFFFF;
  }
  else {
    int v28 = *(_DWORD *)(v10 + 84);
  }
  int v120 = v28;
  uint64_t v29 = ((v12 + 16) & v26) + ((v12 + 32) & ~v12) + *(void *)(*(void *)(v105 - 8) + 64) + v128;
  uint64_t v119 = v13 + v8;
  unint64_t v30 = (((v25 + ((v13 + v8) & ~v8) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = a1;
  uint64_t v32 = v13 + (((v9 | v12) + 32) & ~(v9 | v12));
  if (!*(_DWORD *)(v125 + 84)) {
    ++v32;
  }
  uint64_t v33 = v32
      + ((v29
        + ((v27
          + ((((((v30 + ((v9 + 16) & ~v9) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v26)) & ~v128);
  if ((unint64_t)(v33 + 1) > 0x49) {
    uint64_t v34 = v33 + 1;
  }
  else {
    uint64_t v34 = 73;
  }
  unsigned int v35 = a1[v34];
  unsigned int v36 = v35 - 7;
  if (v35 >= 7)
  {
    if (v34 <= 3) {
      uint64_t v37 = v34;
    }
    else {
      uint64_t v37 = 4;
    }
    switch(v37)
    {
      case 1:
        int v38 = *a1;
        goto LABEL_44;
      case 2:
        int v38 = *(unsigned __int16 *)a1;
        goto LABEL_44;
      case 3:
        int v38 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_44;
      case 4:
        int v38 = *(_DWORD *)a1;
LABEL_44:
        if (v34 < 4) {
          v38 |= v36 << (8 * v34);
        }
        unsigned int v35 = v38 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v39 = ~(v8 | v128);
  uint64_t v40 = ~v8;
  uint64_t v41 = ~v15;
  uint64_t v42 = ~v6;
  unint64_t v43 = v30 + 41;
  uint64_t v44 = ~v12;
  uint64_t v45 = ~v128;
  uint64_t v129 = v34;
  switch(v35)
  {
    case 1u:
      int v47 = a1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      uint64_t v31 = a1;
      if (!*((void *)a1 + 7)) {
        goto LABEL_62;
      }
      uint64_t v46 = (uint64_t)(a1 + 32);
LABEL_51:
      __swift_destroy_boxed_opaque_existential_1(v46);
LABEL_61:
      uint64_t v31 = v47;
      goto LABEL_62;
    case 2u:
      int v47 = a1;

      goto LABEL_61;
    case 3u:
      int v47 = a1;
      swift_release();
      goto LABEL_61;
    case 4u:
      goto LABEL_62;
    case 5u:
      uint64_t v48 = v41;
      unsigned int v86 = v17;
      uint64_t v117 = v25 + 1;
      unint64_t v90 = v43;
      uint64_t v91 = v45;
      uint64_t v88 = v44;
      unint64_t v92 = v26;
      uint64_t v93 = v29;
      unsigned int v89 = *(_DWORD *)(v10 + 84);
      uint64_t v121 = v27;
      uint64_t v87 = *(void *)(v105 - 8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      uint64_t v49 = (v106 + ((unint64_t)&a1[v124 + 32] & ~v124)) & v39;
      uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
      v50(v49, v107);
      uint64_t v51 = v49;
      unsigned int v52 = (unsigned __int8 *)((v119 + v49) & v40);
      unsigned int v53 = v52[v25];
      unsigned int v54 = v53 - 10;
      if (v53 < 0xA)
      {
        uint64_t v56 = v25 + 1;
      }
      else
      {
        if (v25 <= 3) {
          uint64_t v55 = v25;
        }
        else {
          uint64_t v55 = 4;
        }
        uint64_t v56 = v25 + 1;
        switch(v55)
        {
          case 1:
            int v57 = *v52;
            goto LABEL_69;
          case 2:
            int v57 = *(unsigned __int16 *)v52;
            goto LABEL_69;
          case 3:
            int v57 = *(unsigned __int16 *)v52 | (v52[2] << 16);
            goto LABEL_69;
          case 4:
            int v57 = *(_DWORD *)v52;
LABEL_69:
            if (v25 < 4) {
              unsigned int v53 = (v57 | (v54 << (8 * v25))) + 10;
            }
            else {
              unsigned int v53 = v57 + 10;
            }
            break;
          default:
            goto LABEL_72;
        }
      }
      break;
    case 6u:
      int v47 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_61;
    default:
      uint64_t v46 = (uint64_t)a1;
      int v47 = a1;
      goto LABEL_51;
  }
LABEL_72:
  switch(v53)
  {
    case 0u:
      uint64_t v63 = v101;
      uint64_t v62 = v102;
      goto LABEL_86;
    case 1u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v101 + 8))(v52, v102);
      swift_release();
      goto LABEL_101;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_101;
    case 3u:
      swift_unknownObjectRelease();
      goto LABEL_101;
    case 4u:
      uint64_t v63 = v99;
      uint64_t v62 = v100;
      goto LABEL_86;
    case 5u:

      goto LABEL_101;
    case 6u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v123 + 8))(v52, v103);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v52[v118] & v48, 1, v104)) {
        (*(void (**)(unint64_t, uint64_t))(v94 + 8))((unint64_t)&v52[v118] & v48, v104);
      }
      swift_bridgeObjectRelease();
      uint64_t v56 = v25 + 1;
      goto LABEL_101;
    case 7u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v123 + 8))(v52, v103);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v52[v118] & v48, 1, v104)) {
        (*(void (**)(unint64_t, uint64_t))(v94 + 8))((unint64_t)&v52[v118] & v48, v104);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v25 + 1;
      goto LABEL_101;
    case 8u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v95 + 8))(v52, v96);
      unint64_t v126 = v52;
      swift_bridgeObjectRelease();
      uint64_t v64 = v115 + ((unint64_t)&v52[v111] & 0xFFFFFFFFFFFFFFF8);
      uint64_t v65 = v64 & v42;
      if (v22 == v113)
      {
        uint64_t v66 = (v106 + ((unint64_t)&a1[v124 + 32] & ~v124)) & v39;
        uint64_t v67 = v103;
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v64 & v42, v22, v103);
        uint64_t v69 = v104;
        unint64_t v70 = v109;
        if (EnumTagSinglePayload) {
          goto LABEL_100;
        }
        uint64_t v71 = (v118 + v65) & v48;
        goto LABEL_97;
      }
      uint64_t v71 = (v118 + v65) & v48;
      uint64_t v66 = (v106 + ((unint64_t)&a1[v124 + 32] & ~v124)) & v39;
      if (v23 == v113)
      {
        uint64_t v67 = v103;
        uint64_t v69 = v104;
        unint64_t v70 = v109;
        if (v86 >= 2 && __swift_getEnumTagSinglePayload((v118 + v65) & v48, v86, v104) >= 2) {
          goto LABEL_100;
        }
        goto LABEL_97;
      }
      unint64_t v72 = *(void *)(((v18 + 7 + v71) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v72 >= 0xFFFFFFFF) {
        LODWORD(v72) = -1;
      }
      uint64_t v67 = v103;
      uint64_t v69 = v104;
      unint64_t v70 = v109;
      if ((v72 + 1) < 2)
      {
LABEL_97:
        (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v65, v67);
        if (!__swift_getEnumTagSinglePayload(v71, 1, v69)) {
          (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v71, v69);
        }
        swift_bridgeObjectRelease();
      }
LABEL_100:

      uint64_t v56 = v117;
      uint64_t v51 = v66;
      unsigned int v52 = v126;
LABEL_101:
      swift_bridgeObjectRelease();
      unint64_t v73 = (((((unint64_t)v52 | 7) + v56) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v73 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v73);
      }
      swift_bridgeObjectRelease();
      uint64_t v74 = (id *)(((v51 | 7) + v90 + 15) & 0xFFFFFFFFFFFFFFF8);

      swift_bridgeObjectRelease();
      unint64_t v75 = (v121 + (((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8)) & v92;
      if (v120 < 1)
      {
        unint64_t v77 = (v121 + v75) & v92;
        if ((v89 & 0x80000000) != 0)
        {
          unsigned int v79 = __swift_getEnumTagSinglePayload((v121 + ((v77 + 23) & 0xFFFFFFFFFFFFFFF8)) & v88, v89, v105);
        }
        else
        {
          unint64_t v78 = *(void *)(((v121 + v75) & v92) + 8);
          if (v78 >= 0xFFFFFFFF) {
            LODWORD(v78) = -1;
          }
          unsigned int v79 = v78 + 1;
        }
        if (v79 > 1) {
          goto LABEL_119;
        }
      }
      else
      {
        LODWORD(v76) = -1;
        if (*(void *)(v75 + 8) < 0xFFFFFFFFuLL) {
          uint64_t v76 = *(void *)(v75 + 8);
        }
        if ((v76 + 1) > 1) {
          goto LABEL_119;
        }
        unint64_t v77 = (v121 + v75) & v92;
      }
      swift_bridgeObjectRelease();
      if ((v89 & 0x80000000) != 0)
      {
        int v85 = __swift_getEnumTagSinglePayload((v121 + ((v77 + 23) & 0xFFFFFFFFFFFFFFF8)) & v88, v89, v105);
        uint64_t v82 = v121;
        if (!v85)
        {
LABEL_118:
          uint64_t v83 = v82;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v87 + 8))((v83 + ((v77 + 23) & 0xFFFFFFFFFFFFFFF8)) & v88, v105);
        }
      }
      else
      {
        unint64_t v80 = *(void *)(v77 + 8);
        if (v80 >= 0xFFFFFFFF) {
          LODWORD(v80) = -1;
        }
        int v81 = v80 + 1;
        uint64_t v82 = v121;
        if (!v81) {
          goto LABEL_118;
        }
      }
LABEL_119:
      int v84 = __swift_getEnumTagSinglePayload((v93 + v75) & v91, 1, v107);
      uint64_t v31 = a1;
      if (!v84)
      {
        v50((v93 + v75) & v91, v107);
        uint64_t v31 = a1;
      }
LABEL_62:
      uint64_t v58 = *(void *)(*(void *)(a2 + 16) - 8);
      uint64_t v59 = v58 + 8;
      unint64_t v60 = (unint64_t)&v31[v129 + 1 + *(unsigned __int8 *)(v58 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      (*(void (**)(unint64_t))(v58 + 8))(v60);
      unint64_t result = (*(void *)(v59 + 56) + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
        return __swift_destroy_boxed_opaque_existential_1(result);
      }
      return result;
    case 9u:
      uint64_t v63 = v97;
      uint64_t v62 = v98;
LABEL_86:
      (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(v52, v62);
      goto LABEL_101;
    default:
      goto LABEL_101;
  }
}

uint64_t sub_1C982C21C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v216 = sub_1C9BEAB08();
  uint64_t v230 = *(void *)(v216 - 8);
  uint64_t v242 = v230;
  uint64_t v243 = *(unsigned __int8 *)(v230 + 80);
  uint64_t v210 = sub_1C9BEC028();
  uint64_t v209 = *(void *)(v210 - 8);
  int v3 = *(_DWORD *)(v209 + 80);
  uint64_t v208 = sub_1C9BEAC48();
  uint64_t v226 = *(void *)(v208 - 8);
  uint64_t v207 = v226;
  int v238 = *(_DWORD *)(v226 + 80) | v3;
  uint64_t v212 = sub_1C9BEAF18();
  uint64_t v224 = *(void *)(v212 - 8);
  uint64_t v236 = v224;
  int v4 = *(_DWORD *)(v224 + 80) & 0xF8;
  uint64_t v211 = sub_1C9BEAE48();
  uint64_t v218 = *(void *)(v211 - 8);
  uint64_t v5 = v218;
  uint64_t v6 = *(unsigned __int8 *)(v218 + 80);
  uint64_t v220 = v4 | v6 | 7;
  uint64_t v204 = sub_1C9BEC928();
  uint64_t v222 = *(void *)(v204 - 8);
  uint64_t v203 = v222;
  int v7 = *(_DWORD *)(v222 + 80);
  uint64_t v206 = sub_1C9BEC8F8();
  uint64_t v228 = *(void *)(v206 - 8);
  uint64_t v8 = (v238 | (v7 | *(_DWORD *)(v228 + 80))) & 0xF8 | v220;
  uint64_t v9 = v8 | v243;
  uint64_t v213 = sub_1C9BEB0C8();
  uint64_t v10 = *(void *)(v213 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v11;
  uint64_t v239 = v9 | v12;
  uint64_t v13 = ((v9 | v12) + 32) & ~(v9 | v12);
  uint64_t v214 = (v8 | v243) + 16;
  uint64_t v234 = v8 | v243;
  size_t v14 = *(void *)(v230 + 64);
  uint64_t v231 = v14 + v8;
  uint64_t v15 = v8;
  uint64_t v16 = (v14 + v8) & ~v8;
  unint64_t v17 = *(void *)(v209 + 64);
  unint64_t v205 = v17 + 7;
  if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v17) {
    unint64_t v18 = *(void *)(v209 + 64);
  }
  else {
    unint64_t v18 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v18 <= *(void *)(v226 + 64)) {
    unint64_t v18 = *(void *)(v226 + 64);
  }
  uint64_t v229 = *(void *)(v224 + 64) + v6;
  uint64_t v19 = v6;
  uint64_t v200 = v218;
  int v20 = *(_DWORD *)(v218 + 84);
  size_t v198 = *(void *)(v218 + 64);
  if (v20) {
    uint64_t v21 = *(void *)(v218 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v218 + 64) + 1;
  }
  size_t v225 = v21;
  uint64_t v227 = v21 + 7;
  uint64_t v201 = v229 & ~v6;
  unint64_t v22 = (v21 + 7 + v201) & 0xFFFFFFFFFFFFFFF8;
  size_t v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 <= v23) {
    unint64_t v24 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  else {
    unint64_t v24 = v18;
  }
  unint64_t v25 = v22 + 31;
  unint64_t v26 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= v26) {
    unint64_t v27 = v26;
  }
  else {
    unint64_t v27 = v24;
  }
  uint64_t v219 = *(void *)(v222 + 64) + 7;
  uint64_t v28 = *(unsigned int *)(v236 + 84);
  unsigned int v199 = *(_DWORD *)(v5 + 84);
  if (v20) {
    unsigned int v29 = v20 - 1;
  }
  else {
    unsigned int v29 = 0;
  }
  if (v29 <= v28) {
    unsigned int v30 = *(_DWORD *)(v236 + 84);
  }
  else {
    unsigned int v30 = v29;
  }
  if (v30 <= 0x7FFFFFFE) {
    unsigned int v30 = 2147483646;
  }
  unsigned int v223 = v30;
  uint64_t v202 = v220 + 16;
  if (v27 <= ((v25 + ((v220 + 16 + (v219 & 0xFFFFFFFFFFFFFFF8)) & ~v220)) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v31 = ((v25 + ((v220 + 16 + (v219 & 0xFFFFFFFFFFFFFFF8)) & ~v220)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v31 = v27;
  }
  if (v31 <= *(void *)(v228 + 64)) {
    unint64_t v32 = *(void *)(v228 + 64);
  }
  else {
    unint64_t v32 = v31;
  }
  if (v32 <= 0x18) {
    uint64_t v33 = 24;
  }
  else {
    uint64_t v33 = v32;
  }
  unint64_t v34 = (((v33 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = v11 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = v11 + 16;
  unint64_t v37 = (v36
       + ((((((v34 + ((v9 + 16) & ~v9) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v35;
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFFu) {
    int v38 = 0x7FFFFFFF;
  }
  else {
    int v38 = *(_DWORD *)(v10 + 84);
  }
  int v233 = v38;
  uint64_t v39 = *(void *)(*(void *)(v213 - 8) + 64) + ((v12 + 32) & ~v12);
  unint64_t v40 = v39 + (v36 & v35);
  uint64_t v41 = v40 + v243;
  uint64_t v42 = v243;
  if (*(_DWORD *)(v242 + 84)) {
    size_t v43 = v14;
  }
  else {
    size_t v43 = v14 + 1;
  }
  uint64_t v44 = a2;
  unint64_t v45 = v13 + v43 + ((v40 + v243 + v37) & ~v243);
  if (v45 + 1 > 0x49) {
    uint64_t v46 = v45 + 1;
  }
  else {
    uint64_t v46 = 73;
  }
  unsigned int v47 = a2[v46];
  unsigned int v48 = v47 - 7;
  if (v47 >= 7)
  {
    if (v46 <= 3) {
      uint64_t v49 = v46;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *a2;
        goto LABEL_50;
      case 2:
        int v50 = *(unsigned __int16 *)a2;
        goto LABEL_50;
      case 3:
        int v50 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_50;
      case 4:
        int v50 = *(_DWORD *)a2;
LABEL_50:
        if (v46 < 4) {
          v50 |= v48 << (8 * v46);
        }
        unsigned int v47 = v50 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v51 = ~v239;
  uint64_t v52 = ~v234;
  uint64_t v53 = ~v15;
  uint64_t v54 = ~v19;
  uint64_t v55 = ~v220;
  switch(v47)
  {
    case 1u:
      uint64_t v59 = v46;
      uint64_t v60 = *((void *)a2 + 3);
      uint64_t v57 = a1;
      *(void *)(a1 + 24) = v60;
      (**(void (***)(uint64_t, unsigned __int8 *))(v60 - 8))(a1, a2);
      uint64_t v44 = a2;
      uint64_t v61 = (_OWORD *)(a1 + 32);
      uint64_t v62 = a2 + 32;
      uint64_t v63 = *((void *)a2 + 7);
      if (v63)
      {
        uint64_t v64 = *((void *)a2 + 8);
        *(void *)(a1 + 56) = v63;
        *(void *)(a1 + 64) = v64;
        (**(void (***)(_OWORD *, _OWORD *))(v63 - 8))(v61, v62);
        uint64_t v44 = a2;
      }
      else
      {
        long long v100 = *((_OWORD *)a2 + 3);
        *uint64_t v61 = *v62;
        *(_OWORD *)(a1 + 48) = v100;
        *(void *)(a1 + 64) = *((void *)a2 + 8);
      }
      uint64_t v86 = a3;
      *(unsigned char *)(a1 + 72) = v44[72];
      uint64_t v46 = v59;
      *(unsigned char *)(a1 + v59) = 1;
      goto LABEL_68;
    case 2u:
      uint64_t v65 = *(void *)a2;
      uint64_t v66 = v46;
      id v67 = *(id *)a2;
      uint64_t v46 = v66;
      uint64_t v44 = a2;
      uint64_t v57 = a1;
      *(void *)a1 = v65;
      *(unsigned char *)(a1 + v66) = 2;
      goto LABEL_67;
    case 3u:
      uint64_t v68 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v68;
      *(unsigned char *)(a1 + v46) = 3;
      sub_1C9BEC838();
    case 4u:
      uint64_t v57 = a1;
      *(unsigned char *)a1 = *a2;
      *(unsigned char *)(a1 + v46) = 4;
      goto LABEL_67;
    case 5u:
      uint64_t v187 = v54;
      unint64_t v193 = v34 + 41;
      uint64_t v244 = v33 + 1;
      uint64_t v191 = ~v12;
      uint64_t v194 = ~v42;
      size_t __n = *(void *)(*(void *)(v213 - 8) + 64) + ((v12 + 32) & ~v12);
      size_t v189 = v39 + (v36 & v35);
      unint64_t v197 = v35;
      unsigned int v192 = *(_DWORD *)(v10 + 84);
      uint64_t v235 = v12 + 16;
      uint64_t v195 = v41;
      size_t v221 = v43;
      uint64_t v190 = *(void *)(v213 - 8);
      uint64_t v196 = v46;
      uint64_t v69 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v69;
      (**(void (***)(uint64_t, unsigned __int8 *))(v69 - 8))(a1, a2);
      unint64_t v70 = (void *)((a1 + v239 + 32) & v51);
      uint64_t v71 = (void *)((unint64_t)&a2[v239 + 32] & v51);
      *unint64_t v70 = *v71;
      v70[1] = v71[1];
      unint64_t v72 = ((unint64_t)v70 + v214) & v52;
      unint64_t v73 = ((unint64_t)v71 + v214) & v52;
      uint64_t v74 = *(void (**)(unint64_t, unint64_t, uint64_t))(v242 + 16);
      swift_bridgeObjectRetain();
      v74(v72, v73, v216);
      unint64_t v75 = v72;
      uint64_t v76 = (void *)((v231 + v72) & v53);
      unint64_t v77 = (v231 + v73) & v53;
      unsigned int v78 = *(unsigned __int8 *)(v77 + v33);
      unsigned int v79 = v78 - 10;
      if (v78 < 0xA)
      {
        size_t v81 = v33 + 1;
      }
      else
      {
        if (v33 <= 3) {
          uint64_t v80 = v33;
        }
        else {
          uint64_t v80 = 4;
        }
        size_t v81 = v33 + 1;
        switch(v80)
        {
          case 1:
            int v82 = *(unsigned __int8 *)v77;
            goto LABEL_78;
          case 2:
            int v82 = *(unsigned __int16 *)v77;
            goto LABEL_78;
          case 3:
            int v82 = *(unsigned __int16 *)v77 | (*(unsigned __int8 *)(((v231 + v73) & v53) + 2) << 16);
            goto LABEL_78;
          case 4:
            int v82 = *(_DWORD *)v77;
LABEL_78:
            if (v33 < 4) {
              unsigned int v78 = (v82 | (v79 << (8 * v33))) + 10;
            }
            else {
              unsigned int v78 = v82 + 10;
            }
            break;
          default:
            goto LABEL_81;
        }
      }
      break;
    case 6u:
      uint64_t v83 = *((void *)a2 + 1);
      uint64_t v57 = a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v83;
      uint64_t v84 = *((void *)a2 + 3);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = v84;
      *(unsigned char *)(a1 + v46) = 6;
      uint64_t v85 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v46 = v85;
      uint64_t v44 = a2;
      goto LABEL_67;
    default:
      long long v56 = *(_OWORD *)(a2 + 24);
      uint64_t v57 = a1;
      *(_OWORD *)(a1 + 24) = v56;
      uint64_t v58 = v46;
      (**(void (***)(uint64_t, unsigned __int8 *))(v56 - 8))(a1, a2);
      uint64_t v46 = v58;
      uint64_t v44 = a2;
      *(unsigned char *)(a1 + v58) = 0;
LABEL_67:
      uint64_t v86 = a3;
      goto LABEL_68;
  }
LABEL_81:
  uint64_t v240 = (void (*)(void *, const void *, uint64_t))v74;
  switch(v78)
  {
    case 0u:
      (*(void (**)(void *, unint64_t, uint64_t))(v209 + 16))(v76, (v231 + v73) & v53, v210);
      *((unsigned char *)v76 + v33) = 0;
      goto LABEL_95;
    case 1u:
      (*(void (**)(void *, unint64_t, uint64_t))(v209 + 16))(v76, (v231 + v73) & v53, v210);
      *(void *)(((unint64_t)v76 + v205) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v205 + v77) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v76 + v33) = 1;
      sub_1C9BEC838();
    case 2u:
      *uint64_t v76 = *(void *)v77;
      v76[1] = *(void *)(((v231 + v73) & v53) + 8);
      v76[2] = *(void *)(((v231 + v73) & v53) + 0x10);
      *((unsigned char *)v76 + v33) = 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_95;
    case 3u:
      *uint64_t v76 = *(void *)v77;
      *((unsigned char *)v76 + v33) = 3;
      swift_unknownObjectRetain();
      goto LABEL_95;
    case 4u:
      (*(void (**)(void *, unint64_t, uint64_t))(v207 + 16))(v76, (v231 + v73) & v53, v208);
      char v101 = 4;
      goto LABEL_94;
    case 5u:
      uint64_t v102 = *(void **)v77;
      *uint64_t v76 = *(void *)v77;
      *((unsigned char *)v76 + v33) = 5;
      id v103 = v102;
      goto LABEL_95;
    case 6u:
      (*(void (**)(void *, unint64_t, uint64_t))(v236 + 16))(v76, (v231 + v73) & v53, v212);
      uint64_t v104 = v76;
      uint64_t v105 = (void *)(((unint64_t)v76 + v229) & v187);
      uint64_t v106 = (unsigned __int8 *)((v231 + v73) & v53);
      uint64_t v107 = (const void *)((unint64_t)&v106[v229] & v187);
      if (__swift_getEnumTagSinglePayload((uint64_t)v107, 1, v211))
      {
        memcpy(v105, v107, v225);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v200 + 16))(v105, v107, v211);
        __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v211);
      }
      uint64_t v57 = a1;
      uint64_t v86 = a3;
      unint64_t v112 = v75;
      long long v159 = (void *)(((unint64_t)v105 + v227) & 0xFFFFFFFFFFFFFFF8);
      long long v160 = (void *)(((unint64_t)v107 + v227) & 0xFFFFFFFFFFFFFFF8);
      void *v159 = *v160;
      v159[1] = v160[1];
      unint64_t v161 = ((unint64_t)v159 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v162 = ((unint64_t)v160 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v163 = *(_DWORD *)v162;
      *(unsigned char *)(v161 + 4) = *(unsigned char *)(v162 + 4);
      *(_DWORD *)unint64_t v161 = v163;
      unint64_t v111 = (unint64_t)v104;
      *((unsigned char *)v104 + v33) = 6;
      swift_bridgeObjectRetain();
      unint64_t v77 = (unint64_t)v106;
      goto LABEL_96;
    case 7u:
      (*(void (**)(void *, unint64_t, uint64_t))(v236 + 16))(v76, (v231 + v73) & v53, v212);
      unint64_t v108 = (unint64_t)v76;
      unint64_t v109 = (void *)(((unint64_t)v76 + v229) & v187);
      unint64_t v232 = (v231 + v73) & v53;
      uint64_t v110 = (const void *)((v229 + v232) & v187);
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v211))
      {
        memcpy(v109, v110, v225);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v200 + 16))(v109, v110, v211);
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v211);
      }
      uint64_t v57 = a1;
      uint64_t v86 = a3;
      unint64_t v112 = v75;
      unint64_t v164 = (void *)(((unint64_t)v109 + v227) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v165 = (void *)(((unint64_t)v110 + v227) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v164 = *v165;
      v164[1] = v165[1];
      unint64_t v166 = ((unint64_t)v164 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v167 = ((unint64_t)v165 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v168 = *(_DWORD *)v167;
      *(unsigned char *)(v166 + 4) = *(unsigned char *)(v167 + 4);
      *(_DWORD *)unint64_t v166 = v168;
      unint64_t v111 = v108;
      uint64_t v169 = (void *)(((v108 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v170 = (void *)(((v232 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
      void *v169 = *v170;
      v169[1] = v170[1];
      uint64_t v171 = (void *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
      long long v172 = (void *)(((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v171 = *v172;
      v171[1] = v172[1];
      unint64_t v173 = (void *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
      v174 = (void *)(((unint64_t)v172 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v173 = *v174;
      v173[1] = v174[1];
      *(unsigned char *)(v108 + v33) = 7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v77 = v232;
      swift_bridgeObjectRetain();
      goto LABEL_96;
    case 8u:
      unint64_t v215 = v73;
      (*(void (**)(void *, unint64_t, uint64_t))(v203 + 16))(v76, (v231 + v73) & v53, v204);
      uint64_t v152 = (void *)(((unint64_t)v76 + v219) & 0xFFFFFFFFFFFFFFF8);
      size_t v153 = (void *)((v219 + v77) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v152 = *v153;
      v152[1] = v153[1];
      unint64_t v154 = ((unint64_t)v152 + v202) & v55;
      uint64_t v155 = ((unint64_t)v153 + v202) & v55;
      swift_bridgeObjectRetain();
      if (v28 == v223)
      {
        uint64_t v57 = a1;
        unint64_t v156 = v154;
        if (!__swift_getEnumTagSinglePayload(v155, v28, v212))
        {
          unint64_t v157 = (const void *)((v229 + v155) & v187);
          goto LABEL_138;
        }
LABEL_130:
        unint64_t v111 = (unint64_t)v76;
        memcpy((void *)v156, (const void *)v155, v23);
        uint64_t v86 = a3;
        unint64_t v112 = v75;
        uint64_t v158 = v201;
LABEL_142:
        size_t v182 = v225;
        goto LABEL_143;
      }
      unint64_t v157 = (const void *)((v229 + v155) & v187);
      if (v29 == v223)
      {
        uint64_t v57 = a1;
        unint64_t v156 = v154;
        if (v199 < 2 || __swift_getEnumTagSinglePayload((v229 + v155) & v187, v199, v211) < 2) {
          goto LABEL_138;
        }
        goto LABEL_130;
      }
      unint64_t v175 = *(void *)((((unint64_t)v157 + v227) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v175 >= 0xFFFFFFFF) {
        LODWORD(v175) = -1;
      }
      uint64_t v57 = a1;
      unint64_t v156 = v154;
      if ((v175 + 1) >= 2) {
        goto LABEL_130;
      }
LABEL_138:
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v236 + 16))(v156, v155, v212);
      unint64_t v176 = (void *)((v229 + v156) & v187);
      unint64_t v111 = (unint64_t)v76;
      if (__swift_getEnumTagSinglePayload((uint64_t)v157, 1, v211))
      {
        memcpy(v176, v157, v225);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v200 + 16))(v176, v157, v211);
        __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v211);
      }
      unint64_t v177 = (void *)(((unint64_t)v176 + v227) & 0xFFFFFFFFFFFFFFF8);
      int v178 = (void *)(((unint64_t)v157 + v227) & 0xFFFFFFFFFFFFFFF8);
      void *v177 = *v178;
      v177[1] = v178[1];
      unint64_t v179 = ((unint64_t)v177 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v180 = ((unint64_t)v178 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v181 = *(_DWORD *)v180;
      *(unsigned char *)(v179 + 4) = *(unsigned char *)(v180 + 4);
      *(_DWORD *)unint64_t v179 = v181;
      swift_bridgeObjectRetain();
      uint64_t v86 = a3;
      unint64_t v112 = v75;
      uint64_t v158 = v201;
      size_t v182 = v198;
      if (!v199) {
        goto LABEL_142;
      }
LABEL_143:
      unint64_t v183 = (((v158 + v182 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      uint64_t v184 = (void *)(((v156 | 7) + v183) & 0xFFFFFFFFFFFFFFF8);
      long long v185 = *(void **)(((v155 | 7) + v183) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v184 = v185;
      *(unsigned char *)(v111 + v33) = 8;
      id v186 = v185;
      unint64_t v73 = v215;
LABEL_96:
      unsigned int v113 = (void *)(((v77 | 7) + v244) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v114 = (void *)(((v111 | 7) + v244) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v114 = *v113;
      unint64_t v115 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v116 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v117 = *(void *)(v116 + 24);
      swift_bridgeObjectRetain();
      if (v117 < 0xFFFFFFFF)
      {
        long long v118 = *(_OWORD *)v116;
        long long v119 = *(_OWORD *)(v116 + 16);
        *(void *)(v115 + 32) = *(void *)(v116 + 32);
        *(_OWORD *)unint64_t v115 = v118;
        *(_OWORD *)(v115 + 16) = v119;
      }
      else
      {
        *(void *)(v115 + 24) = v117;
        *(void *)(v115 + 32) = *(void *)(v116 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v117 - 8))(v115, v116, v117);
      }
      *(unsigned char *)(v115 + 40) = *(unsigned char *)(v116 + 40);
      int v120 = (void *)((v112 | 7) + v193);
      uint64_t v121 = (void *)((v73 | 7) + v193);
      *int v120 = *v121;
      uint64_t v122 = (void *)(((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v123 = (void **)(((unint64_t)v121 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v124 = *v123;
      *uint64_t v122 = *v123;
      uint64_t v125 = (void *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v126 = (void *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v125 = *v126;
      v125[1] = v126[1];
      long long v127 = (void *)(((unint64_t)v125 + v235) & v197);
      uint64_t v128 = (void *)(((unint64_t)v126 + v235) & v197);
      swift_bridgeObjectRetain();
      id v129 = v124;
      swift_bridgeObjectRetain();
      if (v233 < 1)
      {
        uint64_t v134 = (void *)(((unint64_t)v128 + v235) & v197);
        size_t v131 = v221;
        uint64_t v132 = v235;
        if ((v192 & 0x80000000) != 0)
        {
          unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v235 + (((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8)) & v191, v192, v213);
          unint64_t v133 = v197;
          uint64_t v132 = v235;
        }
        else
        {
          unint64_t v133 = v197;
          unint64_t v135 = *(void *)((((unint64_t)v128 + v235) & v197) + 8);
          if (v135 >= 0xFFFFFFFF) {
            LODWORD(v135) = -1;
          }
          unsigned int EnumTagSinglePayload = v135 + 1;
        }
        if (EnumTagSinglePayload <= 1) {
          goto LABEL_110;
        }
LABEL_114:
        v141 = v127;
        unint64_t v142 = v128;
        size_t v143 = v189;
        goto LABEL_118;
      }
      unint64_t v130 = v128[1];
      if (v130 >= 0xFFFFFFFF) {
        LODWORD(v130) = -1;
      }
      size_t v131 = v221;
      if ((v130 + 1) > 1) {
        goto LABEL_114;
      }
      uint64_t v132 = v235;
      unint64_t v133 = v197;
      uint64_t v134 = (void *)(((unint64_t)v128 + v235) & v197);
LABEL_110:
      void *v127 = *v128;
      v127[1] = v128[1];
      uint64_t v137 = (void *)(((unint64_t)v127 + v132) & v133);
      uint64_t v138 = v132;
      swift_bridgeObjectRetain();
      if ((v192 & 0x80000000) != 0)
      {
        int v140 = __swift_getEnumTagSinglePayload((v138 + (((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8)) & v191, v192, v213);
      }
      else
      {
        unint64_t v139 = v134[1];
        if (v139 >= 0xFFFFFFFF) {
          LODWORD(v139) = -1;
        }
        int v140 = v139 + 1;
      }
      if (!v140)
      {
        *uint64_t v137 = *v134;
        v137[1] = v134[1];
        unint64_t v146 = (void *)(((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8);
        int v147 = (void *)(((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8);
        void *v146 = *v147;
        v146[1] = v147[1];
        unint64_t v148 = ((unint64_t)v146 + v235) & v191;
        unint64_t v149 = ((unint64_t)v147 + v235) & v191;
        size_t v150 = *(void (**)(unint64_t, unint64_t, uint64_t))(v190 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v151 = v148;
        size_t v131 = v221;
        v150(v151, v149, v213);
        goto LABEL_119;
      }
      v141 = v137;
      unint64_t v142 = v134;
      size_t v143 = __n;
LABEL_118:
      memcpy(v141, v142, v143);
LABEL_119:
      uint64_t v144 = (void *)(((unint64_t)v127 + v195) & v194);
      uint64_t v145 = (const void *)(((unint64_t)v128 + v195) & v194);
      if (__swift_getEnumTagSinglePayload((uint64_t)v145, 1, v216))
      {
        memcpy(v144, v145, v131);
      }
      else
      {
        v240(v144, v145, v216);
        __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, v216);
      }
      *((unsigned char *)v144 + v131) = *((unsigned char *)v145 + v131);
      uint64_t v46 = v196;
      *(unsigned char *)(v57 + v196) = 5;
      uint64_t v44 = a2;
LABEL_68:
      uint64_t v87 = *(void *)(*(void *)(v86 + 16) - 8);
      uint64_t v88 = v87 + 16;
      uint64_t v89 = *(unsigned __int8 *)(v87 + 80);
      uint64_t v90 = v46 + v89 + 1;
      uint64_t v91 = (v90 + v57) & ~v89;
      uint64_t v92 = (unint64_t)&v44[v90] & ~v89;
      (*(void (**)(uint64_t, uint64_t))(v87 + 16))(v91, v92);
      uint64_t v93 = *(void *)(v88 + 48) + 7;
      unint64_t v94 = (v93 + v91) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v95 = (v93 + v92) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v96 = *(void *)(v95 + 24);
      if (v96 < 0xFFFFFFFF)
      {
        long long v97 = *(_OWORD *)v95;
        long long v98 = *(_OWORD *)(v95 + 16);
        *(void *)(v94 + 32) = *(void *)(v95 + 32);
        *(_OWORD *)unint64_t v94 = v97;
        *(_OWORD *)(v94 + 16) = v98;
      }
      else
      {
        *(void *)(v94 + 24) = v96;
        *(void *)(v94 + 32) = *(void *)(v95 + 32);
        (**(void (***)(unint64_t, unint64_t))(v96 - 8))(v94, v95);
      }
      *(unsigned char *)(v94 + 40) = *(unsigned char *)(v95 + 40);
      return v57;
    case 9u:
      (*(void (**)(void *, unint64_t, uint64_t))(v33 + 16))(v76, (v231 + v73) & v53, v206);
      char v101 = 9;
LABEL_94:
      *((unsigned char *)v76 + v33) = v101;
      goto LABEL_95;
    default:
      memcpy(v76, (const void *)((v231 + v73) & v53), v81);
LABEL_95:
      uint64_t v57 = a1;
      unint64_t v111 = (unint64_t)v76;
      uint64_t v86 = a3;
      unint64_t v112 = v75;
      goto LABEL_96;
  }
}

unsigned __int8 *sub_1C982D644(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    goto LABEL_203;
  }
  uint64_t v257 = sub_1C9BEAB08();
  uint64_t v282 = *(void *)(v257 - 8);
  uint64_t v293 = *(unsigned __int8 *)(v282 + 80);
  uint64_t v241 = sub_1C9BEC028();
  uint64_t v240 = *(void *)(v241 - 8);
  int v3 = *(_DWORD *)(v240 + 80);
  uint64_t v237 = sub_1C9BEAC48();
  uint64_t v274 = *(void *)(v237 - 8);
  uint64_t v236 = v274;
  int v260 = *(_DWORD *)(v274 + 80) | v3;
  uint64_t v247 = sub_1C9BEAF18();
  uint64_t v271 = *(void *)(v247 - 8);
  uint64_t v288 = v271;
  int v4 = *(_DWORD *)(v271 + 80) & 0xF8;
  uint64_t v248 = sub_1C9BEAE48();
  uint64_t v264 = *(void *)(v248 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v264 + 80);
  uint64_t v258 = v4 | v5 | 7;
  uint64_t v231 = sub_1C9BEC928();
  uint64_t v268 = *(void *)(v231 - 8);
  uint64_t v230 = v268;
  int v6 = *(_DWORD *)(v268 + 80);
  uint64_t v235 = sub_1C9BEC8F8();
  uint64_t v277 = *(void *)(v235 - 8);
  uint64_t v234 = v277;
  uint64_t v7 = (v260 | (v6 | *(_DWORD *)(v277 + 80))) & 0xF8 | v258;
  uint64_t v8 = sub_1C9BEB0C8();
  uint64_t v9 = v7 | v293;
  uint64_t v10 = v7;
  uint64_t v11 = v5;
  uint64_t v249 = v8;
  uint64_t v12 = *(void *)(v8 - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = v7 | v293 | v13;
  uint64_t v255 = (v7 | v293) + 16;
  size_t v15 = *(void *)(v282 + 64);
  uint64_t v16 = v282;
  uint64_t v261 = v15 + v7;
  uint64_t v17 = (v15 + v7) & ~v7;
  unint64_t v18 = *(void *)(v240 + 64);
  unint64_t v233 = v18 + 7;
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
    unint64_t v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v18 <= *(void *)(v274 + 64)) {
    unint64_t v18 = *(void *)(v274 + 64);
  }
  uint64_t v246 = *(void *)(v271 + 64) + v11;
  uint64_t v225 = v264;
  uint64_t v19 = *(unsigned int *)(v264 + 84);
  size_t v224 = *(void *)(v264 + 64);
  if (v19) {
    uint64_t v20 = *(void *)(v264 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v264 + 64) + 1;
  }
  size_t __n = v20;
  uint64_t v243 = v20 + 7;
  uint64_t v232 = v246 & ~v11;
  unint64_t v21 = (v20 + 7 + v232) & 0xFFFFFFFFFFFFFFF8;
  size_t v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v18 <= v22) {
    unint64_t v23 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  else {
    unint64_t v23 = v18;
  }
  unint64_t v24 = v21 + 31;
  unint64_t v25 = ((((((v21 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 <= v25) {
    unint64_t v26 = v25;
  }
  else {
    unint64_t v26 = v23;
  }
  uint64_t v228 = *(void *)(v268 + 64) + 7;
  uint64_t v27 = *(unsigned int *)(v271 + 84);
  if (v19) {
    unsigned int v28 = v19 - 1;
  }
  else {
    unsigned int v28 = 0;
  }
  if (v28 <= v27) {
    unsigned int v29 = *(_DWORD *)(v271 + 84);
  }
  else {
    unsigned int v29 = v28;
  }
  if (v29 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  unsigned int v229 = v29;
  uint64_t v227 = v258 + 16;
  if (v26 <= ((v24 + ((v258 + 16 + (v228 & 0xFFFFFFFFFFFFFFF8)) & ~v258)) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v26 = ((v24 + ((v258 + 16 + (v228 & 0xFFFFFFFFFFFFFFF8)) & ~v258)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v26 <= *(void *)(v277 + 64)) {
    unint64_t v30 = *(void *)(v277 + 64);
  }
  else {
    unint64_t v30 = v26;
  }
  if (v30 <= 0x18) {
    uint64_t v31 = 24;
  }
  else {
    uint64_t v31 = v30;
  }
  unint64_t v32 = (((v31 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v242 = v12;
  unsigned int v250 = *(_DWORD *)(v12 + 84);
  if (v250 <= 0x7FFFFFFF) {
    int v34 = 0x7FFFFFFF;
  }
  else {
    int v34 = *(_DWORD *)(v12 + 84);
  }
  int v275 = v34;
  BOOL v35 = *(_DWORD *)(v282 + 84) == 0;
  unint64_t v283 = v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v286 = v13 + 16;
  unint64_t v239 = *(void *)(v12 + 64) + ((v13 + 32) & ~(unint64_t)v13);
  size_t v244 = v239 + (v286 & v33);
  size_t v278 = v244 + v293;
  if (v35) {
    size_t v36 = v15 + 1;
  }
  else {
    size_t v36 = v15;
  }
  unint64_t v37 = (((v9 | v13) + 32) & ~(v9 | v13))
      + v36
      + ((v244
        + v293
        + ((v13
          + 16
          + ((((((v32 + ((v9 + 16) & ~v9) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v33)) & ~v293);
  if (v37 + 1 > 0x49) {
    uint64_t v38 = v37 + 1;
  }
  else {
    uint64_t v38 = 73;
  }
  size_t v280 = v31 + 1;
  unsigned int v39 = a1[v38];
  unsigned int v40 = v39 - 7;
  if (v39 >= 7)
  {
    if (v38 <= 3) {
      uint64_t v41 = v38;
    }
    else {
      uint64_t v41 = 4;
    }
    switch(v41)
    {
      case 1:
        int v42 = *a1;
        goto LABEL_49;
      case 2:
        int v42 = *(unsigned __int16 *)a1;
        goto LABEL_49;
      case 3:
        int v42 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_49;
      case 4:
        int v42 = *(_DWORD *)a1;
LABEL_49:
        if (v38 < 4) {
          v42 |= v40 << (8 * v38);
        }
        unsigned int v39 = v42 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v251 = ~v14;
  uint64_t v253 = ~v9;
  uint64_t v265 = ~v10;
  uint64_t v245 = ~v11;
  uint64_t v226 = ~v258;
  uint64_t v269 = v9 | v13;
  unint64_t v272 = v32 + 41;
  unint64_t v259 = ~(unint64_t)v13;
  uint64_t v294 = ~v293;
  switch(v39)
  {
    case 1u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      if (!*((void *)a1 + 7)) {
        goto LABEL_124;
      }
      uint64_t v43 = (uint64_t)(a1 + 32);
LABEL_56:
      __swift_destroy_boxed_opaque_existential_1(v43);
      goto LABEL_124;
    case 2u:

      goto LABEL_124;
    case 3u:
      swift_release();
      goto LABEL_124;
    case 4u:
      goto LABEL_124;
    case 5u:
      size_t v221 = v36;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      uint64_t v44 = (v255 + ((unint64_t)&a1[v269 + 32] & v251)) & v253;
      uint64_t v219 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v219(v44, v257);
      unint64_t v45 = (v261 + v44) & v265;
      unsigned int v46 = *(unsigned __int8 *)(v45 + v31);
      unsigned int v47 = v46 - 10;
      if (v46 >= 0xA)
      {
        if (v31 <= 3) {
          uint64_t v48 = v31;
        }
        else {
          uint64_t v48 = 4;
        }
        switch(v48)
        {
          case 1:
            int v49 = *(unsigned __int8 *)v45;
            goto LABEL_69;
          case 2:
            int v49 = *(unsigned __int16 *)v45;
            goto LABEL_69;
          case 3:
            int v49 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((v261 + v44) & v265) + 2) << 16);
            goto LABEL_69;
          case 4:
            int v49 = *(_DWORD *)v45;
LABEL_69:
            if (v31 < 4) {
              unsigned int v46 = (v49 | (v47 << (8 * v31))) + 10;
            }
            else {
              unsigned int v46 = v49 + 10;
            }
            break;
          default:
            goto LABEL_72;
        }
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_124;
    default:
      uint64_t v43 = (uint64_t)a1;
      goto LABEL_56;
  }
LABEL_72:
  switch(v46)
  {
    case 0u:
      uint64_t v51 = v240;
      uint64_t v50 = v241;
      goto LABEL_87;
    case 1u:
      uint64_t v52 = (id *)((v261 + v44) & v265);
      (*(void (**)(id *, uint64_t))(v240 + 8))(v52, v241);
      swift_release();
      goto LABEL_88;
    case 2u:
      uint64_t v52 = (id *)((v261 + v44) & v265);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_88;
    case 3u:
      uint64_t v52 = (id *)((v261 + v44) & v265);
      swift_unknownObjectRelease();
      goto LABEL_88;
    case 4u:
      uint64_t v51 = v236;
      uint64_t v50 = v237;
      goto LABEL_87;
    case 5u:
      uint64_t v52 = (id *)((v261 + v44) & v265);

      goto LABEL_88;
    case 6u:
      (*(void (**)(uint64_t, uint64_t))(v288 + 8))((v261 + v44) & v265, v247);
      uint64_t v218 = (id *)((v261 + v44) & v265);
      uint64_t v53 = ((unint64_t)v218 + v246) & v245;
      if (!__swift_getEnumTagSinglePayload(v53, 1, v248)) {
        (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v53, v248);
      }
      goto LABEL_85;
    case 7u:
      uint64_t v54 = (v261 + v44) & v265;
      (*(void (**)(uint64_t, uint64_t))(v288 + 8))(v54, v247);
      if (!__swift_getEnumTagSinglePayload((v246 + v54) & v245, 1, v248)) {
        (*(void (**)(uint64_t, uint64_t))(v225 + 8))((v246 + v54) & v245, v248);
      }
      swift_bridgeObjectRelease();
      uint64_t v218 = (id *)((v261 + v44) & v265);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_85:
      swift_bridgeObjectRelease();
      goto LABEL_103;
    case 8u:
      (*(void (**)(unint64_t, uint64_t))(v230 + 8))(v45, v231);
      uint64_t v218 = (id *)((v261 + v44) & v265);
      unint64_t v55 = ((unint64_t)v218 + v228) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      unint64_t v56 = (v227 + v55) & v226;
      if (v27 == v229)
      {
        uint64_t v57 = (v227 + v55) & v226;
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v57, v27, v247);
        unint64_t v56 = v57;
        uint64_t v44 = (v255 + ((unint64_t)&a1[v269 + 32] & v251)) & v253;
        if (EnumTagSinglePayload) {
          goto LABEL_102;
        }
        uint64_t v217 = (v246 + v56) & v245;
        goto LABEL_99;
      }
      uint64_t v217 = (v246 + v56) & v245;
      if (v28 == v229)
      {
        uint64_t v44 = (v255 + ((unint64_t)&a1[v269 + 32] & v251)) & v253;
        if (v19 >= 2)
        {
          unint64_t v215 = v56;
          unsigned int v59 = __swift_getEnumTagSinglePayload((v246 + v56) & v245, v19, v248);
          unint64_t v56 = v215;
          if (v59 >= 2) {
            goto LABEL_102;
          }
        }
        goto LABEL_99;
      }
      unint64_t v60 = *(void *)(((v243 + ((v246 + v56) & v245)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v60 >= 0xFFFFFFFF) {
        LODWORD(v60) = -1;
      }
      uint64_t v44 = (v255 + ((unint64_t)&a1[v269 + 32] & v251)) & v253;
      if ((v60 + 1) < 2)
      {
LABEL_99:
        unint64_t v216 = v56;
        (*(void (**)(unint64_t, uint64_t))(v288 + 8))(v56, v247);
        if (!__swift_getEnumTagSinglePayload(v217, 1, v248)) {
          (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v217, v248);
        }
        swift_bridgeObjectRelease();
        unint64_t v56 = v216;
      }
LABEL_102:

LABEL_103:
      unint64_t v45 = (unint64_t)v218;
LABEL_104:
      unint64_t v61 = (((v45 | 7) + v280) & 0xFFFFFFFFFFFFFFF8) + 15;
      swift_bridgeObjectRelease();
      if (*(void *)((v61 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v61 & 0xFFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRelease();
      uint64_t v62 = (id *)(((v44 | 7) + v272 + 15) & 0xFFFFFFFFFFFFFFF8);

      swift_bridgeObjectRelease();
      unint64_t v63 = (v286 + (((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8)) & v283;
      if (v275 < 1)
      {
        unint64_t v65 = (v286 + v63) & v283;
        if ((v250 & 0x80000000) != 0)
        {
          unsigned int v67 = __swift_getEnumTagSinglePayload((v286 + ((v65 + 23) & 0xFFFFFFFFFFFFFFF8)) & v259, v250, v249);
        }
        else
        {
          unint64_t v66 = *(void *)(((v286 + v63) & v283) + 8);
          if (v66 >= 0xFFFFFFFF) {
            LODWORD(v66) = -1;
          }
          unsigned int v67 = v66 + 1;
        }
        if (v67 > 1) {
          goto LABEL_122;
        }
      }
      else
      {
        LODWORD(v64) = -1;
        if (*(void *)(v63 + 8) < 0xFFFFFFFFuLL) {
          uint64_t v64 = *(void *)(v63 + 8);
        }
        if ((v64 + 1) > 1) {
          goto LABEL_122;
        }
        unint64_t v65 = (v286 + v63) & v283;
      }
      swift_bridgeObjectRelease();
      if ((v250 & 0x80000000) != 0)
      {
        if (!__swift_getEnumTagSinglePayload((v286 + ((v65 + 23) & 0xFFFFFFFFFFFFFFF8)) & v259, v250, v249))
        {
LABEL_121:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v242 + 8))((v286 + ((v65 + 23) & 0xFFFFFFFFFFFFFFF8)) & v259, v249);
        }
      }
      else
      {
        unint64_t v68 = *(void *)(v65 + 8);
        if (v68 >= 0xFFFFFFFF) {
          LODWORD(v68) = -1;
        }
        if (v68 == -1) {
          goto LABEL_121;
        }
      }
LABEL_122:
      uint64_t v69 = (v278 + v63) & v294;
      size_t v36 = v221;
      if (!__swift_getEnumTagSinglePayload(v69, 1, v257)) {
        v219(v69, v257);
      }
LABEL_124:
      unsigned int v70 = a2[v38];
      unsigned int v71 = v70 - 7;
      if (v70 >= 7)
      {
        if (v38 <= 3) {
          uint64_t v72 = v38;
        }
        else {
          uint64_t v72 = 4;
        }
        switch(v72)
        {
          case 1:
            int v73 = *a2;
            goto LABEL_133;
          case 2:
            int v73 = *(unsigned __int16 *)a2;
            goto LABEL_133;
          case 3:
            int v73 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_133;
          case 4:
            int v73 = *(_DWORD *)a2;
LABEL_133:
            if (v38 < 4) {
              unsigned int v70 = (v73 | (v71 << (8 * v38))) + 7;
            }
            else {
              unsigned int v70 = v73 + 7;
            }
            break;
          default:
            break;
        }
      }
      switch(v70)
      {
        case 1u:
          uint64_t v75 = *((void *)a2 + 3);
          *((void *)a1 + 3) = v75;
          (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v75 - 8))(a1, a2);
          uint64_t v76 = a1 + 32;
          unint64_t v77 = (long long *)(a2 + 32);
          uint64_t v78 = *((void *)a2 + 7);
          if (v78)
          {
            *((void *)a1 + 7) = v78;
            *((void *)a1 + 8) = *((void *)a2 + 8);
            (**(void (***)(_OWORD *, long long *))(v78 - 8))(v76, v77);
          }
          else
          {
            long long v102 = *v77;
            long long v103 = *((_OWORD *)a2 + 3);
            *((void *)a1 + 8) = *((void *)a2 + 8);
            *uint64_t v76 = v102;
            *((_OWORD *)a1 + 3) = v103;
          }
          a1[72] = a2[72];
          char v81 = 1;
          goto LABEL_202;
        case 2u:
          uint64_t v79 = *(void *)a2;
          id v80 = *(id *)a2;
          *(void *)a1 = v79;
          char v81 = 2;
          goto LABEL_202;
        case 3u:
          uint64_t v82 = *((void *)a2 + 1);
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = v82;
          a1[v38] = 3;
          sub_1C9BEC838();
        case 4u:
          *a1 = *a2;
          char v81 = 4;
          goto LABEL_202;
        case 5u:
          unsigned int v222 = v27;
          unsigned int v220 = v28;
          size_t v83 = v36;
          unsigned int v84 = v19;
          uint64_t v85 = *((void *)a2 + 3);
          *((void *)a1 + 3) = v85;
          (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v85 - 8))(a1, a2);
          uint64_t v86 = (void *)((unint64_t)&a1[v269 + 32] & v251);
          uint64_t v87 = (void *)((unint64_t)&a2[v269 + 32] & v251);
          *uint64_t v86 = *v87;
          v86[1] = v87[1];
          unint64_t v88 = ((unint64_t)v86 + v255) & v253;
          unint64_t v89 = ((unint64_t)v87 + v255) & v253;
          uint64_t v90 = *(void (**)(void *, const void *, uint64_t))(v16 + 16);
          swift_bridgeObjectRetain();
          unint64_t v254 = v90;
          v90((void *)v88, (const void *)v89, v257);
          unint64_t v256 = v88;
          unint64_t v91 = (v261 + v88) & v265;
          unint64_t v270 = v89;
          uint64_t v92 = (unsigned __int8 *)((v261 + v89) & v265);
          unsigned int v93 = v92[v31];
          unsigned int v94 = v93 - 10;
          if (v93 < 0xA)
          {
            unint64_t v96 = v283;
            unsigned int v97 = v84;
            size_t v98 = v83;
            unsigned int v99 = v220;
            uint64_t v100 = v222;
          }
          else
          {
            if (v31 <= 3) {
              uint64_t v95 = v31;
            }
            else {
              uint64_t v95 = 4;
            }
            unint64_t v96 = v283;
            unsigned int v97 = v84;
            size_t v98 = v83;
            unsigned int v99 = v220;
            uint64_t v100 = v222;
            switch(v95)
            {
              case 1:
                int v101 = *v92;
                goto LABEL_158;
              case 2:
                int v101 = *(unsigned __int16 *)v92;
                goto LABEL_158;
              case 3:
                int v101 = *(unsigned __int16 *)v92 | (v92[2] << 16);
                goto LABEL_158;
              case 4:
                int v101 = *(_DWORD *)v92;
LABEL_158:
                if (v31 < 4) {
                  unsigned int v93 = (v101 | (v94 << (8 * v31))) + 10;
                }
                else {
                  unsigned int v93 = v101 + 10;
                }
                break;
              default:
                goto LABEL_161;
            }
          }
          break;
        case 6u:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          *((void *)a1 + 2) = *((void *)a2 + 2);
          *((void *)a1 + 3) = *((void *)a2 + 3);
          a1[v38] = 6;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_203;
        default:
          uint64_t v74 = *((void *)a2 + 3);
          *((void *)a1 + 3) = v74;
          *((void *)a1 + 4) = *((void *)a2 + 4);
          (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v74 - 8))(a1, a2);
          a1[v38] = 0;
          goto LABEL_203;
      }
      break;
    case 9u:
      uint64_t v51 = v234;
      uint64_t v50 = v235;
LABEL_87:
      uint64_t v52 = (id *)((v261 + v44) & v265);
      (*(void (**)(id *, uint64_t))(v51 + 8))(v52, v50);
LABEL_88:
      unint64_t v45 = (unint64_t)v52;
      goto LABEL_104;
    default:
      goto LABEL_104;
  }
LABEL_161:
  switch(v93)
  {
    case 0u:
      unint64_t v104 = v91;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v240 + 16))(v91, v92, v241);
      *(unsigned char *)(v91 + v31) = 0;
      goto LABEL_175;
    case 1u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v240 + 16))(v91, v92, v241);
      *(void *)((v233 + v91) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v92[v233] & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v91 + v31) = 1;
      sub_1C9BEC838();
    case 2u:
      unint64_t v104 = v91;
      *(void *)unint64_t v91 = *(void *)v92;
      *(void *)(v91 + 8) = *((void *)v92 + 1);
      *(void *)(v91 + 16) = *((void *)v92 + 2);
      *(unsigned char *)(v91 + v31) = 2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_175;
    case 3u:
      unint64_t v104 = v91;
      *(void *)unint64_t v91 = *(void *)v92;
      *(unsigned char *)(v91 + v31) = 3;
      swift_unknownObjectRetain();
      goto LABEL_175;
    case 4u:
      unint64_t v104 = v91;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v236 + 16))(v91, v92, v237);
      char v105 = 4;
      goto LABEL_174;
    case 5u:
      uint64_t v106 = *(void **)v92;
      unint64_t v104 = v91;
      *(void *)unint64_t v91 = *(void *)v92;
      *(unsigned char *)(v91 + v31) = 5;
      id v107 = v106;
      goto LABEL_175;
    case 6u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v288 + 16))(v91, v92, v247);
      unint64_t v108 = (void *)((v246 + v91) & v245);
      unint64_t v109 = (const void *)((unint64_t)&v92[v246] & v245);
      if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v248))
      {
        memcpy(v108, v109, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v225 + 16))(v108, v109, v248);
        __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v248);
      }
      uint64_t v112 = v286;
      id v186 = (void *)(((unint64_t)v108 + v243) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v187 = (void *)(((unint64_t)v109 + v243) & 0xFFFFFFFFFFFFFFF8);
      void *v186 = *v187;
      v186[1] = v187[1];
      unint64_t v188 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v189 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v190 = *(_DWORD *)v189;
      *(unsigned char *)(v188 + 4) = *(unsigned char *)(v189 + 4);
      *(_DWORD *)unint64_t v188 = v190;
      unint64_t v104 = v91;
      *(unsigned char *)(v91 + v31) = 6;
      swift_bridgeObjectRetain();
      goto LABEL_176;
    case 7u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v288 + 16))(v91, v92, v247);
      uint64_t v110 = (void *)((v246 + v91) & v245);
      unint64_t v111 = (const void *)((unint64_t)&v92[v246] & v245);
      if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v248))
      {
        memcpy(v110, v111, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v225 + 16))(v110, v111, v248);
        __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v248);
      }
      uint64_t v191 = (void *)(((unint64_t)v110 + v243) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v192 = (void *)(((unint64_t)v111 + v243) & 0xFFFFFFFFFFFFFFF8);
      void *v191 = *v192;
      v191[1] = v192[1];
      unint64_t v193 = ((unint64_t)v191 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v194 = ((unint64_t)v192 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v195 = *(_DWORD *)v194;
      *(unsigned char *)(v193 + 4) = *(unsigned char *)(v194 + 4);
      *(_DWORD *)unint64_t v193 = v195;
      uint64_t v196 = (void *)(((v91 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v197 = (void *)((((unint64_t)v92 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
      void *v196 = *v197;
      v196[1] = v197[1];
      size_t v198 = (void *)(((unint64_t)v196 + 23) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v199 = (void *)(((unint64_t)v197 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v198 = *v199;
      v198[1] = v199[1];
      uint64_t v200 = (void *)(((unint64_t)v198 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v201 = (void *)(((unint64_t)v199 + 23) & 0xFFFFFFFFFFFFFFF8);
      void *v200 = *v201;
      v200[1] = v201[1];
      *(unsigned char *)(v91 + v31) = 7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v104 = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v112 = v286;
      unint64_t v113 = v256;
      goto LABEL_177;
    case 8u:
      unsigned int v252 = v97;
      size_t v223 = v98;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v230 + 16))(v91, v92, v231);
      unint64_t v180 = (void *)((v228 + v91) & 0xFFFFFFFFFFFFFFF8);
      int v181 = (void *)((unint64_t)&v92[v228] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v180 = *v181;
      v180[1] = v181[1];
      unint64_t v285 = ((unint64_t)v180 + v227) & v226;
      uint64_t v182 = ((unint64_t)v181 + v227) & v226;
      swift_bridgeObjectRetain();
      int v263 = v92;
      uint64_t v267 = v182;
      if (v100 == v229)
      {
        int v183 = __swift_getEnumTagSinglePayload(v182, v100, v247);
        uint64_t v184 = (const void *)v182;
        size_t v98 = v223;
        if (!v183)
        {
          long long v185 = (const void *)(((unint64_t)v184 + v246) & v245);
          goto LABEL_249;
        }
LABEL_251:
        memcpy((void *)v285, v184, v22);
        uint64_t v112 = v286;
        unint64_t v104 = v91;
LABEL_254:
        size_t v210 = __n;
        goto LABEL_255;
      }
      long long v185 = (const void *)((v246 + v182) & v245);
      if (v99 == v229)
      {
        size_t v98 = v223;
        if (v252 < 2)
        {
          uint64_t v184 = (const void *)v267;
          goto LABEL_249;
        }
        BOOL v203 = __swift_getEnumTagSinglePayload((uint64_t)v185, v252, v248) >= 2;
      }
      else
      {
        unint64_t v202 = *(void *)((((unint64_t)v185 + v243) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v202 >= 0xFFFFFFFF) {
          LODWORD(v202) = -1;
        }
        BOOL v203 = (v202 + 1) >= 2;
        size_t v98 = v223;
      }
      uint64_t v184 = (const void *)v267;
      if (v203) {
        goto LABEL_251;
      }
LABEL_249:
      (*(void (**)(unint64_t, const void *, uint64_t))(v288 + 16))(v285, v184, v247);
      uint64_t v204 = (void *)((v246 + v285) & v245);
      if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, v248))
      {
        memcpy(v204, v185, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v225 + 16))(v204, v185, v248);
        __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v248);
      }
      uint64_t v112 = v286;
      unint64_t v104 = v91;
      unint64_t v205 = (void *)(((unint64_t)v204 + v243) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v206 = (void *)(((unint64_t)v185 + v243) & 0xFFFFFFFFFFFFFFF8);
      void *v205 = *v206;
      v205[1] = v206[1];
      unint64_t v207 = ((unint64_t)v205 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v208 = ((unint64_t)v206 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v209 = *(_DWORD *)v208;
      *(unsigned char *)(v207 + 4) = *(unsigned char *)(v208 + 4);
      *(_DWORD *)unint64_t v207 = v209;
      swift_bridgeObjectRetain();
      size_t v210 = v224;
      if (!v252) {
        goto LABEL_254;
      }
LABEL_255:
      unint64_t v211 = (((v232 + v210 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      uint64_t v212 = (void *)(((v285 | 7) + v211) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v213 = *(void **)(((v267 | 7) + v211) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v212 = v213;
      *(unsigned char *)(v104 + v31) = 8;
      id v214 = v213;
      unint64_t v113 = v256;
      uint64_t v92 = v263;
LABEL_177:
      uint64_t v114 = (void *)((((unint64_t)v92 | 7) + v280) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v115 = (void *)(((v104 | 7) + v280) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v115 = *v114;
      unint64_t v116 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v117 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v118 = *(void *)(v117 + 24);
      swift_bridgeObjectRetain();
      size_t v119 = v98;
      if (v118 < 0xFFFFFFFF)
      {
        long long v120 = *(_OWORD *)v117;
        long long v121 = *(_OWORD *)(v117 + 16);
        *(void *)(v116 + 32) = *(void *)(v117 + 32);
        *(_OWORD *)unint64_t v116 = v120;
        *(_OWORD *)(v116 + 16) = v121;
      }
      else
      {
        *(void *)(v116 + 24) = v118;
        *(void *)(v116 + 32) = *(void *)(v117 + 32);
        (**(void (***)(unint64_t, unint64_t, unint64_t))(v118 - 8))(v116, v117, v118);
      }
      *(unsigned char *)(v116 + 40) = *(unsigned char *)(v117 + 40);
      uint64_t v122 = (void *)((v113 | 7) + v272);
      uint64_t v123 = (void *)((v270 | 7) + v272);
      *uint64_t v122 = *v123;
      uint64_t v124 = (void *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v125 = (void **)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v126 = *v125;
      *uint64_t v124 = *v125;
      long long v127 = (void *)(((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v128 = (void *)(((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v127 = *v128;
      v127[1] = v128[1];
      id v129 = (void *)(((unint64_t)v127 + v112) & v96);
      unint64_t v130 = (void *)(((unint64_t)v128 + v112) & v96);
      swift_bridgeObjectRetain();
      id v131 = v126;
      swift_bridgeObjectRetain();
      if (v275 >= 1)
      {
        unint64_t v132 = v130[1];
        if (v132 >= 0xFFFFFFFF) {
          LODWORD(v132) = -1;
        }
        uint64_t v133 = v250;
        if ((v132 + 1) <= 1)
        {
          uint64_t v134 = (void *)(((unint64_t)v130 + v112) & v96);
          goto LABEL_191;
        }
LABEL_196:
        unint64_t v139 = v129;
        int v140 = v130;
        size_t v141 = v244;
        goto LABEL_197;
      }
      uint64_t v134 = (void *)(((unint64_t)v130 + v112) & v96);
      uint64_t v133 = v250;
      if ((v250 & 0x80000000) != 0)
      {
        unsigned int v136 = __swift_getEnumTagSinglePayload((v112 + (((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8)) & v259, v250, v249);
      }
      else
      {
        unint64_t v135 = *(void *)((((unint64_t)v130 + v112) & v96) + 8);
        if (v135 >= 0xFFFFFFFF) {
          LODWORD(v135) = -1;
        }
        unsigned int v136 = v135 + 1;
      }
      if (v136 > 1) {
        goto LABEL_196;
      }
LABEL_191:
      *id v129 = *v130;
      v129[1] = v130[1];
      uint64_t v137 = (void *)(((unint64_t)v129 + v112) & v96);
      swift_bridgeObjectRetain();
      if ((v133 & 0x80000000) != 0)
      {
        if (__swift_getEnumTagSinglePayload((v112 + (((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8)) & v259, v133, v249))
        {
LABEL_195:
          unint64_t v139 = (void *)(((unint64_t)v129 + v112) & v96);
          int v140 = v134;
          size_t v141 = v239;
LABEL_197:
          memcpy(v139, v140, v141);
          goto LABEL_198;
        }
      }
      else
      {
        unint64_t v138 = v134[1];
        if (v138 >= 0xFFFFFFFF) {
          LODWORD(v138) = -1;
        }
        if (v138 != -1) {
          goto LABEL_195;
        }
      }
      *uint64_t v137 = *v134;
      *(void *)((((unint64_t)v129 + v112) & v96) + 8) = v134[1];
      unint64_t v175 = (void *)(((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v176 = (void *)(((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v175 = *v176;
      v175[1] = v176[1];
      unint64_t v177 = ((unint64_t)v175 + v112) & v259;
      unint64_t v178 = ((unint64_t)v176 + v112) & v259;
      unint64_t v179 = *(void (**)(unint64_t, unint64_t, uint64_t))(v242 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v179(v177, v178, v249);
LABEL_198:
      unint64_t v142 = (void *)(((unint64_t)v129 + v278) & v294);
      size_t v143 = (const void *)(((unint64_t)v130 + v278) & v294);
      if (__swift_getEnumTagSinglePayload((uint64_t)v143, 1, v257))
      {
        memcpy(v142, v143, v119);
      }
      else
      {
        v254(v142, v143, v257);
        __swift_storeEnumTagSinglePayload((uint64_t)v142, 0, 1, v257);
      }
      *((unsigned char *)v142 + v119) = *((unsigned char *)v143 + v119);
      char v81 = 5;
LABEL_202:
      a1[v38] = v81;
LABEL_203:
      uint64_t v289 = *(void *)(sub_1C9BEAB08() - 8);
      uint64_t v295 = *(unsigned __int8 *)(v289 + 80);
      uint64_t v287 = *(void *)(sub_1C9BEC028() - 8);
      int v144 = *(_DWORD *)(v287 + 80);
      uint64_t v284 = *(void *)(sub_1C9BEAC48() - 8);
      int v262 = *(_DWORD *)(v284 + 80) | v144;
      uint64_t v279 = *(void *)(sub_1C9BEAF18() - 8);
      int v145 = *(_DWORD *)(v279 + 80) & 0xF8;
      uint64_t v273 = *(void *)(sub_1C9BEAE48() - 8);
      uint64_t v146 = *(unsigned __int8 *)(v273 + 80);
      uint64_t v266 = v145 | v146 | 7;
      uint64_t v276 = *(void *)(sub_1C9BEC928() - 8);
      int v147 = *(_DWORD *)(v276 + 80);
      uint64_t v281 = *(void *)(sub_1C9BEC8F8() - 8);
      uint64_t v148 = (v262 | (v147 | *(_DWORD *)(v281 + 80))) & 0xF8 | v145 | v146 | 7;
      uint64_t v149 = v148 | v295;
      uint64_t v150 = *(void *)(sub_1C9BEB0C8() - 8);
      int v151 = *(_DWORD *)(v150 + 80);
      uint64_t v152 = *(void *)(v289 + 64);
      unint64_t v153 = *(void *)(v287 + 64);
      if (((v153 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v153) {
        unint64_t v153 = ((v153 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      }
      if (v153 <= *(void *)(v284 + 64)) {
        unint64_t v153 = *(void *)(v284 + 64);
      }
      uint64_t v154 = *(void *)(v273 + 64) + ((*(void *)(v279 + 64) + v146) & ~v146);
      if (!*(_DWORD *)(v273 + 84)) {
        ++v154;
      }
      unint64_t v155 = (v154 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v156 = (v155 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      if (v153 <= v156) {
        unint64_t v153 = (v155 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      }
      unint64_t v157 = ((((((v155 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v153 <= v157) {
        unint64_t v153 = v157;
      }
      if (v153 <= ((v156 + ((v266 + ((*(void *)(v276 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v266) + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 8)
        unint64_t v153 = ((v156 + ((v266 + ((*(void *)(v276 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v266) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 8;
      if (v153 <= *(void *)(v281 + 64)) {
        unint64_t v153 = *(void *)(v281 + 64);
      }
      if (v153 <= 0x18) {
        unint64_t v153 = 24;
      }
      unint64_t v158 = (((v151 + 32) & ~(unint64_t)v151)
            + v295
            + ((v151 + 16) & (v151 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
            + *(void *)(v150 + 64)
            + ((v151
              + 16
              + ((((((((v149 + 16) & ~v149)
                    + ((((((v152 + v148) & ~v148) + v153 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 48) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)) & (v151 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))) & ~v295;
      uint64_t v159 = v152 + (((v149 | v151) + 32) & ~(v149 | v151));
      if (!*(_DWORD *)(v289 + 84)) {
        ++v159;
      }
      uint64_t v160 = v159 + v158;
      if ((unint64_t)(v160 + 1) > 0x49) {
        uint64_t v161 = v160 + 1;
      }
      else {
        uint64_t v161 = 73;
      }
      uint64_t v162 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v163 = v162 + 24;
      uint64_t v164 = *(unsigned __int8 *)(v162 + 80);
      uint64_t v165 = v161 + v164 + 1;
      unint64_t v166 = (unint64_t)&a1[v165] & ~v164;
      unint64_t v167 = (unint64_t)&a2[v165] & ~v164;
      (*(void (**)(unint64_t, unint64_t))(v162 + 24))(v166, v167);
      uint64_t v168 = *(void *)(v163 + 40) + 7;
      unint64_t v169 = (v168 + v166) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v170 = (v168 + v167) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = *(void *)(v170 + 24);
      if (*(void *)(v169 + 24) < 0xFFFFFFFFuLL)
      {
        if (v171 >= 0xFFFFFFFF)
        {
          *(void *)(v169 + 24) = v171;
          *(void *)(v169 + 32) = *(void *)(v170 + 32);
          (**(void (***)(unint64_t, unint64_t))(v171 - 8))(v169, v170);
          goto LABEL_231;
        }
LABEL_230:
        long long v172 = *(_OWORD *)v170;
        long long v173 = *(_OWORD *)(v170 + 16);
        *(void *)(v169 + 32) = *(void *)(v170 + 32);
        *(_OWORD *)unint64_t v169 = v172;
        *(_OWORD *)(v169 + 16) = v173;
        goto LABEL_231;
      }
      if (v171 < 0xFFFFFFFF)
      {
        __swift_destroy_boxed_opaque_existential_1(v169);
        goto LABEL_230;
      }
      __swift_assign_boxed_opaque_existential_1((void *)v169, (void *)v170);
LABEL_231:
      *(unsigned char *)(v169 + 40) = *(unsigned char *)(v170 + 40);
      return a1;
    case 9u:
      unint64_t v104 = v91;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v234 + 16))(v91, v92, v235);
      char v105 = 9;
LABEL_174:
      *(unsigned char *)(v91 + v31) = v105;
      goto LABEL_175;
    default:
      unint64_t v104 = v91;
      memcpy((void *)v91, v92, v280);
LABEL_175:
      uint64_t v112 = v286;
LABEL_176:
      unint64_t v113 = v256;
      goto LABEL_177;
  }
}

void *sub_1C982F5A4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v209 = sub_1C9BEAB08();
  uint64_t v226 = *(void *)(v209 - 8);
  uint64_t v236 = v226;
  uint64_t v237 = *(unsigned __int8 *)(v226 + 80);
  uint64_t v204 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v204 + 80);
  uint64_t v221 = *(void *)(sub_1C9BEAC48() - 8);
  uint64_t v203 = v221;
  int v211 = *(_DWORD *)(v221 + 80) | v3;
  uint64_t v207 = sub_1C9BEAF18();
  uint64_t v219 = *(void *)(v207 - 8);
  uint64_t v232 = v219;
  int v4 = *(_DWORD *)(v219 + 80) & 0xF8;
  uint64_t v206 = sub_1C9BEAE48();
  uint64_t v213 = *(void *)(v206 - 8);
  uint64_t v231 = v213;
  uint64_t v5 = *(unsigned __int8 *)(v213 + 80);
  uint64_t v215 = v4 | v5 | 7;
  uint64_t v217 = *(void *)(sub_1C9BEC928() - 8);
  uint64_t v200 = v217;
  int v6 = *(_DWORD *)(v217 + 80);
  uint64_t v224 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v202 = v224;
  uint64_t v7 = (v211 | (v6 | *(_DWORD *)(v224 + 80))) & 0xF8 | v4 | v5 | 7;
  uint64_t v8 = v7 | v237;
  uint64_t v212 = sub_1C9BEB0C8();
  uint64_t v9 = *(void *)(v212 - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = v7 | v237 | v10;
  uint64_t v13 = (v7 | v237) + 16;
  size_t v14 = *(void *)(v226 + 64);
  uint64_t v15 = v14 + v7;
  unint64_t v16 = *(void *)(v204 + 64);
  unint64_t v201 = v16 + 7;
  if (((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 <= v16) {
    unint64_t v17 = *(void *)(v204 + 64);
  }
  else {
    unint64_t v17 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v17 <= *(void *)(v221 + 64)) {
    unint64_t v18 = *(void *)(v221 + 64);
  }
  else {
    unint64_t v18 = v17;
  }
  if (v18 <= 0x18) {
    unint64_t v19 = 24;
  }
  else {
    unint64_t v19 = v18;
  }
  uint64_t v208 = *(void *)(v219 + 64) + v5;
  uint64_t v20 = v5;
  int v21 = *(_DWORD *)(v213 + 84);
  size_t v192 = *(void *)(v213 + 64);
  if (v21) {
    uint64_t v22 = *(void *)(v213 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v213 + 64) + 1;
  }
  size_t __n = v22;
  uint64_t v214 = v22 + 7;
  unint64_t v23 = (v22 + 7 + (v208 & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  size_t v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  unint64_t v197 = v19;
  if (v24 <= v19) {
    unint64_t v25 = v19;
  }
  else {
    unint64_t v25 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v26 = v23 + 31;
  unint64_t v27 = ((((((v23 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v195 = v208 & ~v5;
  unint64_t v196 = v27;
  if (v27 <= v25) {
    unint64_t v28 = v25;
  }
  else {
    unint64_t v28 = v27;
  }
  uint64_t v29 = v7;
  uint64_t v199 = *(void *)(v217 + 64) + 7;
  uint64_t v30 = *(unsigned int *)(v219 + 84);
  unsigned int v193 = *(_DWORD *)(v231 + 84);
  if (v21) {
    unsigned int v31 = v21 - 1;
  }
  else {
    unsigned int v31 = 0;
  }
  if (v31 <= v30) {
    unsigned int v32 = *(_DWORD *)(v219 + 84);
  }
  else {
    unsigned int v32 = v31;
  }
  if (v32 <= 0x7FFFFFFE) {
    unsigned int v32 = 2147483646;
  }
  unsigned int v218 = v32;
  uint64_t v198 = v215 + 16;
  unint64_t v194 = ((v26 + ((v215 + 16 + (v199 & 0xFFFFFFFFFFFFFFF8)) & ~v215)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v194 <= v28) {
    unint64_t v33 = v28;
  }
  else {
    unint64_t v33 = ((v26 + ((v215 + 16 + (v199 & 0xFFFFFFFFFFFFFFF8)) & ~v215)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  int v34 = a2;
  unint64_t v35 = *(void *)(v224 + 64);
  uint64_t v36 = v237;
  if (v35 <= v33) {
    unint64_t v37 = v33;
  }
  else {
    unint64_t v37 = *(void *)(v224 + 64);
  }
  unsigned int v38 = *(_DWORD *)(v9 + 84);
  if (v38 <= 0x7FFFFFFF) {
    int v39 = 0x7FFFFFFF;
  }
  else {
    int v39 = *(_DWORD *)(v9 + 84);
  }
  int v227 = v39;
  unint64_t v40 = *(void *)(*(void *)(v212 - 8) + 64)
      + ((v10 + 32) & ~(unint64_t)v10);
  uint64_t v228 = v15;
  unint64_t v41 = (((v37 + (v15 & ~v29) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = v10 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = v10 + 16;
  unint64_t v44 = v40 + (v43 & v42);
  size_t v220 = v44;
  unint64_t v222 = v42;
  uint64_t v45 = v44 + v237;
  if (*(_DWORD *)(v236 + 84)) {
    size_t v46 = v14;
  }
  else {
    size_t v46 = v14 + 1;
  }
  unint64_t v47 = (((v8 | v10) + 32) & ~(v8 | v10))
      + v46
      + ((v44
        + v237
        + ((v10
          + 16
          + ((((((v41 + (v13 & ~v8) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42)) & ~v237);
  if (v47 + 1 > 0x49) {
    uint64_t v48 = v47 + 1;
  }
  else {
    uint64_t v48 = 73;
  }
  unsigned int v49 = a2[v48];
  unsigned int v50 = v49 - 7;
  if (v49 >= 7)
  {
    if (v48 <= 3) {
      uint64_t v51 = v48;
    }
    else {
      uint64_t v51 = 4;
    }
    switch(v51)
    {
      case 1:
        int v52 = *a2;
        goto LABEL_51;
      case 2:
        int v52 = *(unsigned __int16 *)a2;
        goto LABEL_51;
      case 3:
        int v52 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_51;
      case 4:
        int v52 = *(_DWORD *)a2;
LABEL_51:
        if (v48 < 4) {
          v52 |= v50 << (8 * v48);
        }
        unsigned int v49 = v52 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v53 = ~v12;
  uint64_t v54 = ~v8;
  uint64_t v55 = ~v29;
  uint64_t v56 = ~v20;
  uint64_t v57 = ~v215;
  unint64_t v223 = v41 + 41;
  size_t v225 = v37 + 1;
  uint64_t v58 = ~v11;
  switch(v49)
  {
    case 1u:
      unint64_t v61 = a1;
      uint64_t v62 = v48;
      memcpy(a1, a2, 0x49uLL);
      uint64_t v48 = v62;
      int v34 = a2;
      char v59 = 1;
      goto LABEL_67;
    case 2u:
      unint64_t v61 = a1;
      *a1 = *(void *)a2;
      char v59 = 2;
      goto LABEL_67;
    case 3u:
      unint64_t v61 = a1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v59 = 3;
      goto LABEL_67;
    case 4u:
      unint64_t v61 = a1;
      *(unsigned char *)a1 = *a2;
      char v59 = 4;
      goto LABEL_67;
    case 5u:
      uint64_t v238 = v58;
      uint64_t v186 = ~v36;
      uint64_t v187 = v45;
      uint64_t v190 = v43;
      unint64_t v191 = v40;
      size_t v188 = v46;
      uint64_t v216 = *(void *)(v212 - 8);
      uint64_t v189 = v48;
      long long v63 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v63;
      uint64_t v64 = (_OWORD *)(((unint64_t)a1 + v12 + 32) & v53);
      unint64_t v65 = (_OWORD *)((unint64_t)&a2[v12 + 32] & v53);
      *uint64_t v64 = *v65;
      unint64_t v66 = ((unint64_t)v64 + v13) & v54;
      unint64_t v67 = ((unint64_t)v65 + v13) & v54;
      uint64_t v184 = *(void (**)(unint64_t, unint64_t, uint64_t))(v236 + 32);
      v184(v66, v67, v209);
      unint64_t v185 = v66;
      uint64_t v68 = v228 + v66;
      unint64_t v69 = v67;
      unint64_t v70 = v68 & v55;
      unint64_t v71 = (v228 + v67) & v55;
      unsigned int v72 = *(unsigned __int8 *)(v71 + v37);
      unsigned int v73 = v72 - 10;
      if (v72 >= 0xA)
      {
        if (v37 <= 3) {
          uint64_t v74 = v37;
        }
        else {
          uint64_t v74 = 4;
        }
        switch(v74)
        {
          case 1:
            int v75 = *(unsigned __int8 *)v71;
            goto LABEL_72;
          case 2:
            int v75 = *(unsigned __int16 *)v71;
            goto LABEL_72;
          case 3:
            int v75 = *(unsigned __int16 *)v71 | (*(unsigned __int8 *)(v71 + 2) << 16);
            goto LABEL_72;
          case 4:
            int v75 = *(_DWORD *)v71;
LABEL_72:
            if (v37 < 4) {
              unsigned int v72 = (v75 | (v73 << (8 * v37))) + 10;
            }
            else {
              unsigned int v72 = v75 + 10;
            }
            break;
          default:
            goto LABEL_75;
        }
      }
      break;
    case 6u:
      long long v76 = *((_OWORD *)a2 + 1);
      unint64_t v61 = a1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v76;
      char v59 = 6;
      goto LABEL_67;
    default:
      char v59 = 0;
      long long v60 = *((_OWORD *)a2 + 1);
      unint64_t v61 = a1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v60;
      a1[4] = *((void *)a2 + 4);
LABEL_67:
      uint64_t v77 = a3;
      goto LABEL_68;
  }
LABEL_75:
  switch(v72)
  {
    case 0u:
      uint64_t v90 = (unsigned char *)v70;
      (*(void (**)(void))(v204 + 32))();
      unint64_t v70 = (unint64_t)v90;
      v90[v37] = 0;
      goto LABEL_90;
    case 1u:
      long long v102 = (unsigned char *)v70;
      (*(void (**)(void))(v204 + 32))();
      unint64_t v70 = (unint64_t)v102;
      *(void *)((unint64_t)&v102[v201] & 0xFFFFFFFFFFFFFFF8) = *(void *)((v201 + v71) & 0xFFFFFFFFFFFFFFF8);
      char v103 = 1;
      goto LABEL_89;
    case 2u:
      long long v104 = *(_OWORD *)v71;
      *(void *)(v70 + 16) = *(void *)(v71 + 16);
      *(_OWORD *)unint64_t v70 = v104;
      char v105 = 2;
      goto LABEL_83;
    case 3u:
      *(void *)unint64_t v70 = *(void *)v71;
      char v105 = 3;
      goto LABEL_83;
    case 4u:
      long long v102 = (unsigned char *)v70;
      (*(void (**)(void))(v203 + 32))();
      unint64_t v70 = (unint64_t)v102;
      char v103 = 4;
      goto LABEL_89;
    case 5u:
      *(void *)unint64_t v70 = *(void *)v71;
      char v105 = 5;
LABEL_83:
      *(unsigned char *)(v70 + v37) = v105;
      goto LABEL_90;
    case 6u:
      unint64_t v106 = v67;
      unint64_t v107 = v70;
      (*(void (**)(void))(v232 + 32))();
      unint64_t v108 = (unsigned char *)v107;
      unint64_t v109 = (void *)((v208 + v107) & v56);
      uint64_t v110 = (const void *)((v208 + v71) & v56);
      if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, v206))
      {
        memcpy(v109, v110, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v231 + 32))(v109, v110, v206);
        __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v206);
      }
      unint64_t v61 = a1;
      uint64_t v93 = v209;
      uint64_t v77 = a3;
      uint64_t v94 = v212;
      unint64_t v158 = (_OWORD *)(((unint64_t)v109 + v214) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v159 = (_OWORD *)(((unint64_t)v110 + v214) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v158 = *v159;
      unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v161 = ((unint64_t)v159 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v162 = *(_DWORD *)v161;
      *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
      *(_DWORD *)unint64_t v160 = v162;
      unint64_t v70 = (unint64_t)v108;
      v108[v37] = 6;
      uint64_t v95 = v216;
      uint64_t v97 = v190;
      size_t v96 = v191;
      uint64_t v98 = v38;
      unint64_t v99 = v222;
      unint64_t v115 = v223;
      int v100 = v227;
      uint64_t v101 = v238;
      size_t v91 = v37 + 1;
      unint64_t v116 = v185;
      unint64_t v69 = v106;
      goto LABEL_92;
    case 7u:
      unint64_t v229 = v67;
      unint64_t v111 = v70;
      (*(void (**)(void))(v232 + 32))();
      unint64_t v112 = v111;
      unint64_t v113 = (void *)((v208 + v111) & v56);
      uint64_t v114 = (const void *)((v208 + v71) & v56);
      if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v206))
      {
        memcpy(v113, v114, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v231 + 32))(v113, v114, v206);
        __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v206);
      }
      unint64_t v61 = a1;
      uint64_t v93 = v209;
      uint64_t v77 = a3;
      uint64_t v163 = (_OWORD *)(((unint64_t)v113 + v214) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v164 = (_OWORD *)(((unint64_t)v114 + v214) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v163 = *v164;
      unint64_t v165 = ((unint64_t)v163 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v166 = ((unint64_t)v164 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v167 = *(_DWORD *)v166;
      *(unsigned char *)(v165 + 4) = *(unsigned char *)(v166 + 4);
      *(_DWORD *)unint64_t v165 = v167;
      unint64_t v70 = v112;
      uint64_t v168 = (_OWORD *)(((v112 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v169 = (_OWORD *)(((v71 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v168 = *v169;
      unint64_t v170 = (_OWORD *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v171 = (_OWORD *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v170 = *v171;
      *(_OWORD *)(((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v112 + v37) = 7;
      uint64_t v94 = v212;
      uint64_t v95 = v216;
      uint64_t v97 = v190;
      size_t v96 = v191;
      uint64_t v98 = v38;
      unint64_t v99 = v222;
      unint64_t v115 = v223;
      int v100 = v227;
      uint64_t v101 = v238;
      size_t v91 = v37 + 1;
      unint64_t v116 = v185;
      unint64_t v69 = v229;
      goto LABEL_92;
    case 8u:
      uint64_t v146 = v56;
      unint64_t v230 = v70;
      (*(void (**)(void))(v200 + 32))();
      int v147 = (_OWORD *)((v199 + v230) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v148 = (_OWORD *)((v199 + v71) & 0xFFFFFFFFFFFFFFF8);
      *int v147 = *v148;
      uint64_t v149 = v57;
      unint64_t v150 = ((unint64_t)v147 + v198) & v57;
      uint64_t v151 = ((unint64_t)v148 + v198) & v149;
      unint64_t v183 = v35;
      if (v30 == v218)
      {
        unint64_t v61 = a1;
        uint64_t v77 = a3;
        unint64_t v99 = v222;
        if (!__swift_getEnumTagSinglePayload(v151, v30, v207))
        {
          uint64_t v152 = (const void *)((v208 + v151) & v146);
          goto LABEL_130;
        }
LABEL_122:
        memcpy((void *)v150, (const void *)v151, v24);
        uint64_t v93 = v209;
        uint64_t v94 = v212;
        uint64_t v95 = v216;
        uint64_t v97 = v190;
        size_t v96 = v191;
        uint64_t v98 = v38;
        int v100 = v227;
        unint64_t v115 = v223;
        size_t v91 = v225;
        unint64_t v116 = v185;
        size_t v153 = __n;
        unint64_t v70 = v230;
        unint64_t v155 = v196;
        unint64_t v154 = v197;
        unint64_t v156 = v194;
        uint64_t v157 = v195;
LABEL_134:
        size_t v179 = v153;
        goto LABEL_135;
      }
      uint64_t v152 = (const void *)((v208 + v151) & v146);
      if (v31 == v218)
      {
        unint64_t v61 = a1;
        uint64_t v77 = a3;
        unint64_t v99 = v222;
        if (v193 < 2 || __swift_getEnumTagSinglePayload((v208 + v151) & v146, v193, v206) < 2) {
          goto LABEL_130;
        }
        goto LABEL_122;
      }
      unint64_t v172 = *(void *)((((unint64_t)v152 + v214) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v172 >= 0xFFFFFFFF) {
        LODWORD(v172) = -1;
      }
      unint64_t v61 = a1;
      uint64_t v77 = a3;
      unint64_t v99 = v222;
      if ((v172 + 1) >= 2) {
        goto LABEL_122;
      }
LABEL_130:
      uint64_t v234 = (unsigned __int8 *)v71;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v232 + 32))(v150, v151, v207);
      long long v173 = (void *)((v208 + v150) & v146);
      if (__swift_getEnumTagSinglePayload((uint64_t)v152, 1, v206))
      {
        size_t v153 = __n;
        memcpy(v173, v152, __n);
        size_t v91 = v225;
        unint64_t v116 = v185;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v231 + 32))(v173, v152, v206);
        __swift_storeEnumTagSinglePayload((uint64_t)v173, 0, 1, v206);
        size_t v91 = v225;
        unint64_t v116 = v185;
        size_t v153 = __n;
      }
      uint64_t v94 = v212;
      v174 = (_OWORD *)(((unint64_t)v173 + v214) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v175 = (_OWORD *)(((unint64_t)v152 + v214) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v174 = *v175;
      unint64_t v176 = ((unint64_t)v175 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v177 = *(_DWORD *)v176;
      unint64_t v178 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
      *(unsigned char *)(v178 + 4) = *(unsigned char *)(v176 + 4);
      *(_DWORD *)unint64_t v178 = v177;
      uint64_t v93 = v209;
      uint64_t v95 = v216;
      uint64_t v97 = v190;
      size_t v96 = v191;
      uint64_t v98 = v38;
      int v100 = v227;
      unint64_t v115 = v223;
      unint64_t v71 = (unint64_t)v234;
      unint64_t v70 = v230;
      unint64_t v155 = v196;
      unint64_t v154 = v197;
      unint64_t v156 = v194;
      uint64_t v157 = v195;
      size_t v179 = v192;
      if (!v193) {
        goto LABEL_134;
      }
LABEL_135:
      uint64_t v180 = v157 + 7;
      unint64_t v181 = (((v180 + v179) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      *(void *)(((v150 | 7) + v181) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v151 | 7) + v181) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v182 = (((v180 + v153) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      if (v182 <= v154) {
        unint64_t v182 = v154;
      }
      if (v155 > v182) {
        unint64_t v182 = v155;
      }
      if (v156 > v182) {
        unint64_t v182 = v156;
      }
      if (v183 > v182) {
        unint64_t v182 = v183;
      }
      *(unsigned char *)(v70 + v182) = 8;
      uint64_t v101 = v238;
LABEL_92:
      unint64_t v117 = (void *)(((v71 | 7) + v91) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v118 = (void *)(((v70 | 7) + v91) & 0xFFFFFFFFFFFFFFF8);
      void *v118 = *v117;
      unint64_t v119 = ((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v120 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
      long long v121 = *(_OWORD *)v120;
      long long v122 = *(_OWORD *)(v120 + 16);
      *(void *)(v119 + 32) = *(void *)(v120 + 32);
      *(_OWORD *)unint64_t v119 = v121;
      *(_OWORD *)(v119 + 16) = v122;
      *(unsigned char *)(v119 + 40) = *(unsigned char *)(v120 + 40);
      uint64_t v123 = (void *)((v69 | 7) + v115);
      uint64_t v124 = (void *)((v116 | 7) + v115);
      *uint64_t v124 = *v123;
      uint64_t v125 = (void *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v126 = (void *)(((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v126 = *v125;
      long long v127 = (_OWORD *)(((unint64_t)v126 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v128 = (_OWORD *)(((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v127 = *v128;
      id v129 = (_OWORD *)(((unint64_t)v127 + v97) & v99);
      unint64_t v130 = (_OWORD *)(((unint64_t)v128 + v97) & v99);
      if (v100 >= 1)
      {
        unint64_t v131 = *(void *)((((unint64_t)v128 + v97) & v99) + 8);
        if (v131 >= 0xFFFFFFFF) {
          LODWORD(v131) = -1;
        }
        if ((v131 + 1) <= 1)
        {
          unint64_t v132 = (void *)(((unint64_t)v130 + v97) & v99);
          goto LABEL_103;
        }
LABEL_108:
        uint64_t v137 = v129;
        unint64_t v138 = v130;
        size_t v139 = v220;
        goto LABEL_109;
      }
      unint64_t v132 = (void *)(((unint64_t)v130 + v97) & v99);
      if ((v98 & 0x80000000) != 0)
      {
        unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v97 + (((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8)) & v101, v98, v94);
        uint64_t v101 = v238;
        uint64_t v98 = v38;
        uint64_t v97 = v190;
        size_t v96 = v191;
        uint64_t v95 = v216;
        uint64_t v94 = v212;
      }
      else
      {
        unint64_t v133 = *(void *)((((unint64_t)v130 + v97) & v99) + 8);
        if (v133 >= 0xFFFFFFFF) {
          LODWORD(v133) = -1;
        }
        unsigned int EnumTagSinglePayload = v133 + 1;
      }
      if (EnumTagSinglePayload > 1) {
        goto LABEL_108;
      }
LABEL_103:
      *id v129 = *v130;
      unint64_t v135 = (_OWORD *)(((unint64_t)v129 + v97) & v99);
      if ((v98 & 0x80000000) == 0)
      {
        unint64_t v136 = v132[1];
        if (v136 >= 0xFFFFFFFF) {
          LODWORD(v136) = -1;
        }
        if (v136 != -1) {
          goto LABEL_107;
        }
LABEL_115:
        *unint64_t v135 = *(_OWORD *)v132;
        int v144 = (_OWORD *)(((unint64_t)v135 + 23) & 0xFFFFFFFFFFFFFFF8);
        int v145 = (_OWORD *)(((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8);
        *int v144 = *v145;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 32))(((unint64_t)v144 + v190) & v238, ((unint64_t)v145 + v190) & v238, v212);
        goto LABEL_110;
      }
      int v143 = __swift_getEnumTagSinglePayload((v97 + (((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8)) & v101, v98, v94);
      size_t v96 = v191;
      uint64_t v95 = v216;
      if (!v143) {
        goto LABEL_115;
      }
LABEL_107:
      uint64_t v137 = v135;
      unint64_t v138 = v132;
      size_t v139 = v96;
LABEL_109:
      memcpy(v137, v138, v139);
LABEL_110:
      int v140 = (void *)(((unint64_t)v129 + v187) & v186);
      size_t v141 = (const void *)(((unint64_t)v130 + v187) & v186);
      if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v93))
      {
        size_t v142 = v188;
        memcpy(v140, v141, v188);
      }
      else
      {
        v184((unint64_t)v140, (unint64_t)v141, v93);
        __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, v93);
        size_t v142 = v188;
      }
      *((unsigned char *)v140 + v142) = *((unsigned char *)v141 + v142);
      char v59 = 5;
      int v34 = a2;
      uint64_t v48 = v189;
LABEL_68:
      *((unsigned char *)v61 + v48) = v59;
      uint64_t v78 = *(void *)(*(void *)(v77 + 16) - 8);
      uint64_t v79 = v78 + 32;
      uint64_t v80 = *(unsigned __int8 *)(v78 + 80);
      uint64_t v81 = v48 + v80 + 1;
      uint64_t v82 = ((unint64_t)v61 + v81) & ~v80;
      uint64_t v83 = (unint64_t)&v34[v81] & ~v80;
      (*(void (**)(uint64_t, uint64_t))(v78 + 32))(v82, v83);
      uint64_t v84 = *(void *)(v79 + 32) + 7;
      unint64_t v85 = (v84 + v82) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v86 = (v84 + v83) & 0xFFFFFFFFFFFFFFF8;
      long long v87 = *(_OWORD *)v86;
      long long v88 = *(_OWORD *)(v86 + 16);
      *(void *)(v85 + 32) = *(void *)(v86 + 32);
      *(_OWORD *)unint64_t v85 = v87;
      *(_OWORD *)(v85 + 16) = v88;
      *(unsigned char *)(v85 + 40) = *(unsigned char *)(v86 + 40);
      return v61;
    case 9u:
      long long v102 = (unsigned char *)v70;
      (*(void (**)(void))(v202 + 32))();
      unint64_t v70 = (unint64_t)v102;
      char v103 = 9;
LABEL_89:
      v102[v37] = v103;
LABEL_90:
      unint64_t v61 = a1;
      uint64_t v93 = v209;
      uint64_t v77 = a3;
      uint64_t v94 = v212;
      uint64_t v95 = v216;
      uint64_t v97 = v190;
      size_t v96 = v191;
      uint64_t v98 = v38;
      unint64_t v99 = v222;
      int v100 = v227;
      uint64_t v101 = v238;
      size_t v91 = v37 + 1;
      goto LABEL_91;
    default:
      size_t v91 = v37 + 1;
      unint64_t v92 = v70;
      memcpy((void *)v70, (const void *)v71, v225);
      unint64_t v70 = v92;
      unint64_t v61 = a1;
      uint64_t v93 = v209;
      uint64_t v77 = a3;
      uint64_t v94 = v212;
      uint64_t v95 = v216;
      uint64_t v97 = v190;
      size_t v96 = v191;
      uint64_t v98 = v38;
      unint64_t v99 = v222;
      int v100 = v227;
      uint64_t v101 = v238;
LABEL_91:
      unint64_t v115 = v223;
      unint64_t v116 = v185;
      goto LABEL_92;
  }
}

unsigned __int8 *sub_1C983073C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 == a2) {
    goto LABEL_205;
  }
  uint64_t v235 = sub_1C9BEAB08();
  uint64_t v262 = *(void *)(v235 - 8);
  uint64_t v267 = *(unsigned __int8 *)(v262 + 80);
  uint64_t v217 = sub_1C9BEC028();
  uint64_t v216 = *(void *)(v217 - 8);
  int v3 = *(_DWORD *)(v216 + 80);
  uint64_t v213 = sub_1C9BEAC48();
  uint64_t v246 = *(void *)(v213 - 8);
  uint64_t v212 = v246;
  int v4 = *(_DWORD *)(v246 + 80) | v3;
  uint64_t v223 = sub_1C9BEAF18();
  uint64_t v244 = *(void *)(v223 - 8);
  uint64_t v258 = v244;
  int v5 = *(_DWORD *)(v244 + 80) & 0xF8;
  uint64_t v224 = sub_1C9BEAE48();
  uint64_t v236 = *(void *)(v224 - 8);
  uint64_t v256 = v236;
  uint64_t v6 = *(unsigned __int8 *)(v236 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v206 = sub_1C9BEC928();
  uint64_t v241 = *(void *)(v206 - 8);
  uint64_t v205 = v241;
  int v8 = *(_DWORD *)(v241 + 80);
  uint64_t v211 = sub_1C9BEC8F8();
  uint64_t v251 = *(void *)(v211 - 8);
  uint64_t v210 = v251;
  uint64_t v9 = (v4 | (v8 | *(_DWORD *)(v251 + 80))) & 0xF8 | v7;
  uint64_t v10 = sub_1C9BEB0C8();
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  uint64_t v226 = v10;
  uint64_t v13 = *(void *)(v10 - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v14;
  uint64_t v16 = v9 | v267;
  uint64_t v260 = v9 | v267 | v14;
  uint64_t v17 = *(void *)(v262 + 64);
  unint64_t v18 = *(void *)(v216 + 64);
  unint64_t v209 = v18 + 7;
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
    unint64_t v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v18 <= *(void *)(v246 + 64)) {
    unint64_t v18 = *(void *)(v246 + 64);
  }
  if (v18 <= 0x18) {
    unint64_t v19 = 24;
  }
  else {
    unint64_t v19 = v18;
  }
  uint64_t v222 = *(void *)(v244 + 64) + v6;
  int v20 = *(_DWORD *)(v236 + 84);
  size_t v21 = *(void *)(v236 + 64);
  unint64_t v199 = v19;
  size_t v200 = v21;
  if (!v20) {
    ++v21;
  }
  size_t __n = v21;
  size_t v219 = v21 + 7;
  uint64_t v207 = v222 & ~v6;
  unint64_t v22 = (v21 + 7 + v207) & 0xFFFFFFFFFFFFFFF8;
  size_t v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v23 <= v19) {
    unint64_t v24 = v19;
  }
  else {
    unint64_t v24 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v25 = v22 + 31;
  unint64_t v26 = ((((((v22 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v198 = v26;
  if (v26 <= v24) {
    unint64_t v26 = v24;
  }
  uint64_t v202 = *(void *)(v241 + 64) + 7;
  uint64_t v204 = v7 + 16;
  uint64_t v27 = *(unsigned int *)(v244 + 84);
  unsigned int v208 = *(_DWORD *)(v236 + 84);
  unsigned int v28 = v20 - 1;
  if (!v20) {
    unsigned int v28 = 0;
  }
  unsigned int v195 = v28;
  if (v28 <= v27) {
    unsigned int v28 = *(_DWORD *)(v244 + 84);
  }
  if (v28 <= 0x7FFFFFFE) {
    unsigned int v28 = 2147483646;
  }
  unsigned int v203 = v28;
  unint64_t v197 = ((v25 + ((v7 + 16 + (v202 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v197 > v26) {
    unint64_t v26 = ((v25 + ((v7 + 16 + (v202 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v196 = *(void *)(v251 + 64);
  if (v196 <= v26) {
    unint64_t v29 = v26;
  }
  else {
    unint64_t v29 = *(void *)(v251 + 64);
  }
  uint64_t v218 = v13;
  unsigned int v227 = *(_DWORD *)(v13 + 84);
  if (v227 <= 0x7FFFFFFF) {
    int v30 = 0x7FFFFFFF;
  }
  else {
    int v30 = *(_DWORD *)(v13 + 84);
  }
  int v245 = v30;
  unint64_t v31 = *(void *)(v13 + 64) + ((v14 + 32) & ~(unint64_t)v14);
  uint64_t v237 = v17 + v9;
  unint64_t v32 = (((v29 + ((v17 + v9) & ~v9) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v233 = v16 + 16;
  unint64_t v252 = v14 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v254 = v14 + 16;
  size_t v215 = v31;
  size_t v220 = v31 + (v254 & v252);
  size_t v247 = v220 + v267;
  if (*(_DWORD *)(v262 + 84)) {
    size_t v33 = *(void *)(v262 + 64);
  }
  else {
    size_t v33 = v17 + 1;
  }
  unint64_t v34 = (((v16 | v14) + 32) & ~(v16 | v14))
      + v33
      + ((v220
        + v267
        + ((v14
          + 16
          + ((((((v32 + ((v16 + 16) & ~v16) + 48) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v252)) & ~v267);
  if (v34 + 1 > 0x49) {
    uint64_t v35 = v34 + 1;
  }
  else {
    uint64_t v35 = 73;
  }
  size_t v249 = v29 + 1;
  unsigned int v36 = a1[v35];
  unsigned int v37 = v36 - 7;
  if (v36 < 7)
  {
    int v39 = a2;
  }
  else
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    int v39 = a2;
    switch(v38)
    {
      case 1:
        int v40 = *a1;
        goto LABEL_46;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        goto LABEL_46;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_46;
      case 4:
        int v40 = *(_DWORD *)a1;
LABEL_46:
        if (v35 < 4) {
          v40 |= v37 << (8 * v35);
        }
        unsigned int v36 = v40 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v41 = ~v260;
  uint64_t v228 = ~v16;
  uint64_t v230 = ~v9;
  uint64_t v221 = ~v11;
  uint64_t v201 = ~v12;
  unint64_t v242 = v32 + 41;
  uint64_t v225 = ~v15;
  uint64_t v268 = ~v267;
  switch(v36)
  {
    case 1u:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      if (!*((void *)a1 + 7)) {
        goto LABEL_120;
      }
      uint64_t v42 = (uint64_t)(a1 + 32);
LABEL_53:
      __swift_destroy_boxed_opaque_existential_1(v42);
      goto LABEL_120;
    case 2u:

      goto LABEL_120;
    case 3u:
      swift_release();
      goto LABEL_120;
    case 4u:
      goto LABEL_120;
    case 5u:
      size_t v194 = v33;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      uint64_t v43 = (v233 + ((unint64_t)&a1[v260 + 32] & v41)) & v228;
      unsigned int v193 = *(void (**)(uint64_t, uint64_t))(v262 + 8);
      v193(v43, v235);
      uint64_t v44 = (v237 + v43) & v230;
      unsigned int v45 = *(unsigned __int8 *)(v44 + v29);
      unsigned int v46 = v45 - 10;
      if (v45 >= 0xA)
      {
        if (v29 <= 3) {
          uint64_t v47 = v29;
        }
        else {
          uint64_t v47 = 4;
        }
        switch(v47)
        {
          case 1:
            int v48 = *(unsigned __int8 *)v44;
            goto LABEL_66;
          case 2:
            int v48 = *(unsigned __int16 *)v44;
            goto LABEL_66;
          case 3:
            int v48 = *(unsigned __int16 *)v44 | (*(unsigned __int8 *)(((v237 + v43) & v230) + 2) << 16);
            goto LABEL_66;
          case 4:
            int v48 = *(_DWORD *)v44;
LABEL_66:
            if (v29 < 4) {
              unsigned int v45 = (v48 | (v46 << (8 * v29))) + 10;
            }
            else {
              unsigned int v45 = v48 + 10;
            }
            break;
          default:
            goto LABEL_69;
        }
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_120;
    default:
      uint64_t v42 = (uint64_t)a1;
      goto LABEL_53;
  }
LABEL_69:
  switch(v45)
  {
    case 0u:
      uint64_t v50 = v216;
      uint64_t v49 = v217;
      goto LABEL_84;
    case 1u:
      (*(void (**)(uint64_t, uint64_t))(v216 + 8))((v237 + v43) & v230, v217);
      swift_release();
      goto LABEL_100;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_82;
    case 3u:
      swift_unknownObjectRelease();
      goto LABEL_100;
    case 4u:
      uint64_t v50 = v212;
      uint64_t v49 = v213;
      goto LABEL_84;
    case 5u:

      goto LABEL_100;
    case 6u:
      (*(void (**)(uint64_t, uint64_t))(v258 + 8))((v237 + v43) & v230, v223);
      size_t v192 = (id *)((v237 + v43) & v230);
      if (!__swift_getEnumTagSinglePayload((v222 + v44) & v221, 1, v224)) {
        (*(void (**)(uint64_t, uint64_t))(v256 + 8))((v222 + v44) & v221, v224);
      }
      swift_bridgeObjectRelease();
      goto LABEL_99;
    case 7u:
      (*(void (**)(uint64_t, uint64_t))(v258 + 8))((v237 + v43) & v230, v223);
      if (!__swift_getEnumTagSinglePayload((v222 + v44) & v221, 1, v224)) {
        (*(void (**)(uint64_t, uint64_t))(v256 + 8))((v222 + v44) & v221, v224);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_82:
      swift_bridgeObjectRelease();
      goto LABEL_100;
    case 8u:
      (*(void (**)(uint64_t, uint64_t))(v205 + 8))((v237 + v43) & v230, v206);
      size_t v192 = (id *)((v237 + v43) & v230);
      unint64_t v51 = (v202 + v44) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      unint64_t v52 = (v204 + v51) & v201;
      if (v27 == v203)
      {
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v204 + v51) & v201, v27, v223);
        uint64_t v43 = (v233 + ((unint64_t)&a1[v260 + 32] & v41)) & v228;
        if (EnumTagSinglePayload) {
          goto LABEL_98;
        }
        uint64_t v191 = (v222 + v52) & v221;
        goto LABEL_95;
      }
      uint64_t v191 = (v222 + v52) & v221;
      if (v195 == v203)
      {
        uint64_t v43 = (v233 + ((unint64_t)&a1[v260 + 32] & v41)) & v228;
        if (v208 >= 2 && __swift_getEnumTagSinglePayload((v222 + v52) & v221, v208, v224) >= 2) {
          goto LABEL_98;
        }
        goto LABEL_95;
      }
      unint64_t v54 = *(void *)(((v219 + ((v222 + v52) & v221)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v54 >= 0xFFFFFFFF) {
        LODWORD(v54) = -1;
      }
      uint64_t v43 = (v233 + ((unint64_t)&a1[v260 + 32] & v41)) & v228;
      if ((v54 + 1) < 2)
      {
LABEL_95:
        (*(void (**)(unint64_t, uint64_t))(v258 + 8))(v52, v223);
        if (!__swift_getEnumTagSinglePayload(v191, 1, v224)) {
          (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v191, v224);
        }
        swift_bridgeObjectRelease();
      }
LABEL_98:

LABEL_99:
      uint64_t v44 = (uint64_t)v192;
LABEL_100:
      swift_bridgeObjectRelease();
      unint64_t v55 = ((((v44 | 7) + v249) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v55 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v55);
      }
      swift_bridgeObjectRelease();
      uint64_t v56 = (id *)(((v43 | 7) + v242 + 15) & 0xFFFFFFFFFFFFFFF8);

      swift_bridgeObjectRelease();
      unint64_t v57 = (v254 + (((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8)) & v252;
      if (v245 < 1)
      {
        unint64_t v59 = (v254 + v57) & v252;
        if ((v227 & 0x80000000) != 0)
        {
          unsigned int v61 = __swift_getEnumTagSinglePayload((v254 + ((v59 + 23) & 0xFFFFFFFFFFFFFFF8)) & v225, v227, v226);
        }
        else
        {
          unint64_t v60 = *(void *)(((v254 + v57) & v252) + 8);
          if (v60 >= 0xFFFFFFFF) {
            LODWORD(v60) = -1;
          }
          unsigned int v61 = v60 + 1;
        }
        if (v61 > 1) {
          goto LABEL_118;
        }
      }
      else
      {
        LODWORD(v58) = -1;
        if (*(void *)(v57 + 8) < 0xFFFFFFFFuLL) {
          uint64_t v58 = *(void *)(v57 + 8);
        }
        if ((v58 + 1) > 1) {
          goto LABEL_118;
        }
        unint64_t v59 = (v254 + v57) & v252;
      }
      swift_bridgeObjectRelease();
      if ((v227 & 0x80000000) != 0)
      {
        if (!__swift_getEnumTagSinglePayload((v254 + ((v59 + 23) & 0xFFFFFFFFFFFFFFF8)) & v225, v227, v226))
        {
LABEL_117:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v218 + 8))((v254 + ((v59 + 23) & 0xFFFFFFFFFFFFFFF8)) & v225, v226);
        }
      }
      else
      {
        unint64_t v62 = *(void *)(v59 + 8);
        if (v62 >= 0xFFFFFFFF) {
          LODWORD(v62) = -1;
        }
        if (v62 == -1) {
          goto LABEL_117;
        }
      }
LABEL_118:
      uint64_t v63 = (v247 + v57) & v268;
      size_t v33 = v194;
      if (!__swift_getEnumTagSinglePayload(v63, 1, v235)) {
        v193(v63, v235);
      }
LABEL_120:
      unsigned int v64 = v39[v35];
      unsigned int v65 = v64 - 7;
      if (v64 >= 7)
      {
        if (v35 <= 3) {
          uint64_t v66 = v35;
        }
        else {
          uint64_t v66 = 4;
        }
        switch(v66)
        {
          case 1:
            int v67 = *v39;
            goto LABEL_129;
          case 2:
            int v67 = *(unsigned __int16 *)v39;
            goto LABEL_129;
          case 3:
            int v67 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_129;
          case 4:
            int v67 = *(_DWORD *)v39;
LABEL_129:
            if (v35 < 4) {
              unsigned int v64 = (v67 | (v65 << (8 * v35))) + 7;
            }
            else {
              unsigned int v64 = v67 + 7;
            }
            break;
          default:
            break;
        }
      }
      switch(v64)
      {
        case 1u:
          memcpy(a1, v39, 0x49uLL);
          char v68 = 1;
          goto LABEL_204;
        case 2u:
          *(void *)a1 = *(void *)v39;
          char v68 = 2;
          goto LABEL_204;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)v39;
          char v68 = 3;
          goto LABEL_204;
        case 4u:
          *a1 = *v39;
          char v68 = 4;
          goto LABEL_204;
        case 5u:
          long long v70 = *((_OWORD *)v39 + 1);
          *(_OWORD *)a1 = *(_OWORD *)v39;
          *((_OWORD *)a1 + 1) = v70;
          unint64_t v71 = (_OWORD *)((unint64_t)&a1[v260 + 32] & v41);
          unsigned int v72 = (_OWORD *)((unint64_t)&v39[v260 + 32] & v41);
          *unint64_t v71 = *v72;
          unint64_t v73 = ((unint64_t)v71 + v233) & v228;
          unint64_t v74 = ((unint64_t)v72 + v233) & v228;
          uint64_t v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v262 + 32);
          v234(v73, v74, v235);
          unint64_t v75 = (v237 + v73) & v230;
          unint64_t v261 = v74;
          long long v76 = (unsigned __int8 *)((v237 + v74) & v230);
          unsigned int v77 = v76[v29];
          unsigned int v78 = v77 - 10;
          if (v77 >= 0xA)
          {
            if (v29 <= 3) {
              uint64_t v79 = v29;
            }
            else {
              uint64_t v79 = 4;
            }
            switch(v79)
            {
              case 1:
                int v80 = *v76;
                goto LABEL_150;
              case 2:
                int v80 = *(unsigned __int16 *)v76;
                goto LABEL_150;
              case 3:
                int v80 = *(unsigned __int16 *)v76 | (v76[2] << 16);
                goto LABEL_150;
              case 4:
                int v80 = *(_DWORD *)v76;
LABEL_150:
                if (v29 < 4) {
                  unsigned int v77 = (v80 | (v78 << (8 * v29))) + 10;
                }
                else {
                  unsigned int v77 = v80 + 10;
                }
                break;
              default:
                goto LABEL_153;
            }
          }
          break;
        case 6u:
          long long v81 = *((_OWORD *)v39 + 1);
          *(_OWORD *)a1 = *(_OWORD *)v39;
          *((_OWORD *)a1 + 1) = v81;
          char v68 = 6;
          goto LABEL_204;
        default:
          char v68 = 0;
          long long v69 = *((_OWORD *)v39 + 1);
          *(_OWORD *)a1 = *(_OWORD *)v39;
          *((_OWORD *)a1 + 1) = v69;
          *((void *)a1 + 4) = *((void *)v39 + 4);
          goto LABEL_204;
      }
      break;
    case 9u:
      uint64_t v50 = v210;
      uint64_t v49 = v211;
LABEL_84:
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))((v237 + v43) & v230, v49);
      goto LABEL_100;
    default:
      goto LABEL_100;
  }
LABEL_153:
  switch(v77)
  {
    case 0u:
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v216 + 32))((v237 + v73) & v230, v76, v217);
      unint64_t v75 = (v237 + v73) & v230;
      *(unsigned char *)(v75 + v29) = 0;
      goto LABEL_168;
    case 1u:
      uint64_t v82 = (_OWORD *)((v237 + v73) & v230);
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v216 + 32))(v82, v76, v217);
      unint64_t v75 = (unint64_t)v82;
      *(void *)(((unint64_t)v82 + v209) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v76[v209] & 0xFFFFFFFFFFFFFFF8);
      char v83 = 1;
      goto LABEL_167;
    case 2u:
      long long v84 = *(_OWORD *)v76;
      *(void *)(((v237 + v73) & v230) + 0x10) = *((void *)v76 + 2);
      *(_OWORD *)unint64_t v75 = v84;
      char v85 = 2;
      goto LABEL_161;
    case 3u:
      *(void *)unint64_t v75 = *(void *)v76;
      char v85 = 3;
      goto LABEL_161;
    case 4u:
      uint64_t v82 = (_OWORD *)((v237 + v73) & v230);
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v212 + 32))(v82, v76, v213);
      unint64_t v75 = (unint64_t)v82;
      char v83 = 4;
      goto LABEL_167;
    case 5u:
      *(void *)unint64_t v75 = *(void *)v76;
      char v85 = 5;
LABEL_161:
      *(unsigned char *)(v75 + v29) = v85;
      goto LABEL_168;
    case 6u:
      unint64_t v238 = v73;
      unint64_t v86 = v75;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v258 + 32))(v75, v76, v223);
      unint64_t v87 = v86;
      long long v88 = (void *)((v222 + v86) & v221);
      unint64_t v89 = (const void *)((unint64_t)&v76[v222] & v221);
      if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, v224))
      {
        memcpy(v88, v89, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v256 + 32))(v88, v89, v224);
        __swift_storeEnumTagSinglePayload((uint64_t)v88, 0, 1, v224);
      }
      uint64_t v95 = v227;
      unint64_t v106 = (_OWORD *)(((unint64_t)v88 + v219) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v107 = (_OWORD *)(((unint64_t)v89 + v219) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v106 = *v107;
      unint64_t v108 = ((unint64_t)v106 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v109 = ((unint64_t)v107 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v110 = *(_DWORD *)v109;
      *(unsigned char *)(v108 + 4) = *(unsigned char *)(v109 + 4);
      *(_DWORD *)unint64_t v108 = v110;
      char v111 = 6;
      unint64_t v75 = v87;
      goto LABEL_180;
    case 7u:
      unint64_t v238 = v73;
      unint64_t v90 = v75;
      (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v258 + 32))(v75, v76, v223);
      unint64_t v87 = v90;
      size_t v91 = (void *)((v222 + v90) & v221);
      uint64_t v231 = v76;
      unint64_t v92 = (const void *)((unint64_t)&v76[v222] & v221);
      if (__swift_getEnumTagSinglePayload((uint64_t)v92, 1, v224))
      {
        memcpy(v91, v92, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v256 + 32))(v91, v92, v224);
        __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v224);
      }
      uint64_t v95 = v227;
      unint64_t v112 = (_OWORD *)(((unint64_t)v91 + v219) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v113 = (_OWORD *)(((unint64_t)v92 + v219) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v112 = *v113;
      unint64_t v114 = ((unint64_t)v112 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v115 = ((unint64_t)v113 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v116 = *(_DWORD *)v115;
      *(unsigned char *)(v114 + 4) = *(unsigned char *)(v115 + 4);
      *(_DWORD *)unint64_t v114 = v116;
      unint64_t v75 = v87;
      unint64_t v117 = (_OWORD *)(((v87 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
      long long v76 = v231;
      unint64_t v118 = (_OWORD *)((((unint64_t)v231 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v117 = *v118;
      unint64_t v119 = (_OWORD *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v120 = (_OWORD *)(((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v119 = *v120;
      *(_OWORD *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
      char v111 = 7;
LABEL_180:
      *(unsigned char *)(v87 + v29) = v111;
      unint64_t v94 = v252;
      uint64_t v93 = v254;
      unint64_t v73 = v238;
      goto LABEL_181;
    case 8u:
      size_t v96 = (_OWORD *)((v237 + v73) & v230);
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v205 + 32))(v96, v76, v206);
      uint64_t v97 = (_OWORD *)(((unint64_t)v96 + v202) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v98 = (_OWORD *)((unint64_t)&v76[v202] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v97 = *v98;
      unint64_t v239 = ((unint64_t)v97 + v204) & v201;
      unint64_t v99 = (const void *)(((unint64_t)v98 + v204) & v201);
      unint64_t v229 = (unint64_t)v99;
      uint64_t v232 = v76;
      if (v27 == v203)
      {
        int v100 = __swift_getEnumTagSinglePayload((uint64_t)v99, v27, v223);
        unint64_t v99 = (const void *)v229;
        uint64_t v95 = v227;
        uint64_t v101 = v224;
        size_t v102 = __n;
        if (!v100)
        {
          char v103 = (const void *)((v222 + v229) & v221);
          goto LABEL_234;
        }
LABEL_175:
        memcpy((void *)v239, v99, v23);
        unint64_t v105 = v261;
        unint64_t v75 = (unint64_t)v96;
LABEL_238:
        size_t v188 = v102;
        goto LABEL_239;
      }
      char v103 = (const void *)(((unint64_t)v99 + v222) & v221);
      if (v195 == v203)
      {
        uint64_t v95 = v227;
        uint64_t v101 = v224;
        size_t v102 = __n;
        if (v208 < 2) {
          goto LABEL_234;
        }
        unsigned int v104 = __swift_getEnumTagSinglePayload(((unint64_t)v99 + v222) & v221, v208, v224);
        unint64_t v99 = (const void *)v229;
        if (v104 < 2) {
          goto LABEL_234;
        }
        goto LABEL_175;
      }
      unint64_t v180 = *(void *)((((unint64_t)v103 + v219) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v180 >= 0xFFFFFFFF) {
        LODWORD(v180) = -1;
      }
      uint64_t v95 = v227;
      uint64_t v101 = v224;
      size_t v102 = __n;
      if ((v180 + 1) >= 2) {
        goto LABEL_175;
      }
LABEL_234:
      unint64_t v181 = v73;
      (*(void (**)(unint64_t, const void *, uint64_t))(v258 + 32))(v239, v99, v223);
      unint64_t v182 = (void *)((v222 + v239) & v221);
      if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v101))
      {
        memcpy(v182, v103, v102);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v256 + 32))(v182, v103, v101);
        __swift_storeEnumTagSinglePayload((uint64_t)v182, 0, 1, v101);
      }
      unint64_t v105 = v261;
      unint64_t v183 = (_OWORD *)(((unint64_t)v182 + v219) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v184 = (_OWORD *)(((unint64_t)v103 + v219) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v183 = *v184;
      unint64_t v185 = ((unint64_t)v184 + 19) & 0xFFFFFFFFFFFFFFF8;
      int v186 = *(_DWORD *)v185;
      unint64_t v187 = ((unint64_t)v183 + 19) & 0xFFFFFFFFFFFFFFF8;
      *(unsigned char *)(v187 + 4) = *(unsigned char *)(v185 + 4);
      *(_DWORD *)unint64_t v187 = v186;
      size_t v188 = v200;
      unint64_t v73 = v181;
      unint64_t v75 = (unint64_t)v96;
      if (!v208) {
        goto LABEL_238;
      }
LABEL_239:
      unint64_t v189 = (((v207 + 7 + v188) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      *(void *)(((v239 | 7) + v189) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v229 | 7) + v189) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v190 = (((v207 + 7 + v102) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      if (v190 <= v199) {
        unint64_t v190 = v199;
      }
      if (v198 > v190) {
        unint64_t v190 = v198;
      }
      if (v197 > v190) {
        unint64_t v190 = v197;
      }
      if (v196 > v190) {
        unint64_t v190 = v196;
      }
      *(unsigned char *)(v75 + v190) = 8;
      unint64_t v94 = v252;
      uint64_t v93 = v254;
      long long v76 = v232;
LABEL_182:
      long long v121 = (void *)((((unint64_t)v76 | 7) + v249) & 0xFFFFFFFFFFFFFFF8);
      long long v122 = (void *)(((v75 | 7) + v249) & 0xFFFFFFFFFFFFFFF8);
      *long long v122 = *v121;
      unint64_t v123 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v124 = ((unint64_t)v121 + 15) & 0xFFFFFFFFFFFFFFF8;
      long long v125 = *(_OWORD *)v124;
      long long v126 = *(_OWORD *)(v124 + 16);
      *(void *)(v123 + 32) = *(void *)(v124 + 32);
      *(_OWORD *)unint64_t v123 = v125;
      *(_OWORD *)(v123 + 16) = v126;
      *(unsigned char *)(v123 + 40) = *(unsigned char *)(v124 + 40);
      long long v127 = (void *)((v105 | 7) + v242);
      uint64_t v128 = (void *)((v73 | 7) + v242);
      *uint64_t v128 = *v127;
      id v129 = (void *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v130 = (void *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v130 = *v129;
      unint64_t v131 = (_OWORD *)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v132 = (_OWORD *)(((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v131 = *v132;
      unint64_t v133 = (_OWORD *)(((unint64_t)v131 + v93) & v94);
      uint64_t v134 = (unint64_t *)(((unint64_t)v132 + v93) & v94);
      if (v245 >= 1)
      {
        size_t v135 = v33;
        unint64_t v136 = *(void *)((((unint64_t)v132 + v93) & v94) + 8);
        if (v136 >= 0xFFFFFFFF) {
          LODWORD(v136) = -1;
        }
        if ((v136 + 1) <= 1)
        {
          uint64_t v137 = (unint64_t *)(((unint64_t)v134 + v93) & v94);
          goto LABEL_193;
        }
LABEL_198:
        size_t v142 = v133;
        int v143 = v134;
        size_t v144 = v220;
        goto LABEL_199;
      }
      uint64_t v137 = (unint64_t *)(((unint64_t)v134 + v93) & v94);
      if ((v95 & 0x80000000) != 0)
      {
        unsigned int v139 = __swift_getEnumTagSinglePayload((v93 + (((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8)) & v225, v95, v226);
        unint64_t v94 = v252;
        uint64_t v93 = v254;
      }
      else
      {
        unint64_t v138 = *(void *)((((unint64_t)v134 + v93) & v94) + 8);
        if (v138 >= 0xFFFFFFFF) {
          LODWORD(v138) = -1;
        }
        unsigned int v139 = v138 + 1;
      }
      size_t v135 = v33;
      if (v139 > 1) {
        goto LABEL_198;
      }
LABEL_193:
      _OWORD *v133 = *(_OWORD *)v134;
      int v140 = (_OWORD *)(((unint64_t)v133 + v93) & v94);
      if ((v95 & 0x80000000) != 0)
      {
        if (__swift_getEnumTagSinglePayload((v93 + (((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8)) & v225, v95, v226))
        {
LABEL_197:
          size_t v142 = v140;
          int v143 = v137;
          size_t v144 = v215;
LABEL_199:
          memcpy(v142, v143, v144);
          goto LABEL_200;
        }
      }
      else
      {
        unint64_t v141 = v137[1];
        if (v141 >= 0xFFFFFFFF) {
          LODWORD(v141) = -1;
        }
        if (v141 != -1) {
          goto LABEL_197;
        }
      }
      *int v140 = *(_OWORD *)v137;
      unint64_t v178 = (_OWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
      size_t v179 = (_OWORD *)(((unint64_t)v137 + 23) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v178 = *v179;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v218 + 32))(((unint64_t)v178 + v254) & v225, ((unint64_t)v179 + v254) & v225, v226);
LABEL_200:
      int v145 = (void *)(((unint64_t)v133 + v247) & v268);
      uint64_t v146 = (const void *)(((unint64_t)v134 + v247) & v268);
      if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, v235))
      {
        size_t v147 = v135;
        memcpy(v145, v146, v135);
      }
      else
      {
        v234((unint64_t)v145, (unint64_t)v146, v235);
        __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v235);
        size_t v147 = v135;
      }
      *((unsigned char *)v145 + v147) = *((unsigned char *)v146 + v147);
      char v68 = 5;
LABEL_204:
      a1[v35] = v68;
LABEL_205:
      uint64_t v263 = *(void *)(sub_1C9BEAB08() - 8);
      uint64_t v269 = *(unsigned __int8 *)(v263 + 80);
      uint64_t v259 = *(void *)(sub_1C9BEC028() - 8);
      int v148 = *(_DWORD *)(v259 + 80);
      uint64_t v257 = *(void *)(sub_1C9BEAC48() - 8);
      int v240 = *(_DWORD *)(v257 + 80) | v148;
      uint64_t v253 = *(void *)(sub_1C9BEAF18() - 8);
      int v149 = *(_DWORD *)(v253 + 80) & 0xF8;
      uint64_t v248 = *(void *)(sub_1C9BEAE48() - 8);
      uint64_t v150 = *(unsigned __int8 *)(v248 + 80);
      uint64_t v243 = v149 | v150 | 7;
      uint64_t v250 = *(void *)(sub_1C9BEC928() - 8);
      int v151 = *(_DWORD *)(v250 + 80);
      uint64_t v255 = *(void *)(sub_1C9BEC8F8() - 8);
      uint64_t v152 = (v240 | (v151 | *(_DWORD *)(v255 + 80))) & 0xF8 | v149 | v150 | 7;
      uint64_t v153 = v152 | v269;
      uint64_t v154 = *(void *)(sub_1C9BEB0C8() - 8);
      int v155 = *(_DWORD *)(v154 + 80);
      uint64_t v156 = *(void *)(v263 + 64);
      unint64_t v157 = *(void *)(v259 + 64);
      if (((v157 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v157) {
        unint64_t v157 = ((v157 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
      }
      if (v157 <= *(void *)(v257 + 64)) {
        unint64_t v157 = *(void *)(v257 + 64);
      }
      uint64_t v158 = *(void *)(v248 + 64) + ((*(void *)(v253 + 64) + v150) & ~v150);
      if (!*(_DWORD *)(v248 + 84)) {
        ++v158;
      }
      unint64_t v159 = (v158 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v159 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      if (v157 <= v160) {
        unint64_t v157 = (v159 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
      }
      unint64_t v161 = ((((((v159 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v157 <= v161) {
        unint64_t v157 = v161;
      }
      if (v157 <= ((v160 + ((v243 + ((*(void *)(v250 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v243) + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 8)
        unint64_t v157 = ((v160 + ((v243 + ((*(void *)(v250 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v243) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 8;
      if (v157 <= *(void *)(v255 + 64)) {
        unint64_t v157 = *(void *)(v255 + 64);
      }
      if (v157 <= 0x18) {
        unint64_t v157 = 24;
      }
      unint64_t v162 = (((v155 + 32) & ~(unint64_t)v155)
            + v269
            + ((v155 + 16) & (v155 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
            + *(void *)(v154 + 64)
            + ((v155
              + 16
              + ((((((((v153 + 16) & ~v153)
                    + ((((((v156 + v152) & ~v152) + v157 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 48) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)) & (v155 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))) & ~v269;
      uint64_t v163 = v156 + (((v153 | v155) + 32) & ~(v153 | v155));
      if (!*(_DWORD *)(v263 + 84)) {
        ++v163;
      }
      uint64_t v164 = v163 + v162;
      if ((unint64_t)(v164 + 1) > 0x49) {
        uint64_t v165 = v164 + 1;
      }
      else {
        uint64_t v165 = 73;
      }
      uint64_t v166 = *(void *)(*(void *)(a3 + 16) - 8);
      uint64_t v167 = v166 + 40;
      uint64_t v168 = *(unsigned __int8 *)(v166 + 80);
      uint64_t v169 = v165 + v168 + 1;
      unint64_t v170 = (unint64_t)&a1[v169] & ~v168;
      uint64_t v171 = (unint64_t)&a2[v169] & ~v168;
      (*(void (**)(unint64_t, uint64_t))(v166 + 40))(v170, v171);
      uint64_t v172 = *(void *)(v167 + 24) + 7;
      unint64_t v173 = (v172 + v170) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v173 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v173);
      }
      unint64_t v174 = (v172 + v171) & 0xFFFFFFFFFFFFFFF8;
      long long v175 = *(_OWORD *)v174;
      long long v176 = *(_OWORD *)(v174 + 16);
      *(void *)(v173 + 32) = *(void *)(v174 + 32);
      *(_OWORD *)unint64_t v173 = v175;
      *(_OWORD *)(v173 + 16) = v176;
      *(unsigned char *)(v173 + 40) = *(unsigned char *)(v174 + 40);
      return a1;
    case 9u:
      uint64_t v82 = (_OWORD *)((v237 + v73) & v230);
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v210 + 32))(v82, v76, v211);
      unint64_t v75 = (unint64_t)v82;
      char v83 = 9;
LABEL_167:
      *((unsigned char *)v82 + v29) = v83;
      goto LABEL_168;
    default:
      memcpy((void *)((v237 + v73) & v230), v76, v249);
      unint64_t v75 = (v237 + v73) & v230;
LABEL_168:
      unint64_t v94 = v252;
      uint64_t v93 = v254;
      uint64_t v95 = v227;
LABEL_181:
      unint64_t v105 = v261;
      goto LABEL_182;
  }
}

uint64_t sub_1C98323C4(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v54 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v57 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v53 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v53 + 80);
  uint64_t v52 = *(void *)(sub_1C9BEAC48() - 8);
  int v46 = *(_DWORD *)(v52 + 80) | v3;
  uint64_t v50 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v50 + 80) & 0xF8;
  uint64_t v48 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v48 + 80);
  uint64_t v47 = v4 | v5 | 7;
  uint64_t v49 = *(void *)(sub_1C9BEC928() - 8);
  int v6 = *(_DWORD *)(v49 + 80);
  uint64_t v51 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v7 = (v46 | (v6 | *(_DWORD *)(v51 + 80))) & 0xF8 | v4 | v5 | 7;
  uint64_t v8 = v7 | v57;
  uint64_t v9 = *(void *)(sub_1C9BEB0C8() - 8);
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v10;
  uint64_t v12 = ((v8 | v11) + 32) & ~(v8 | v11);
  uint64_t v13 = *(void *)(v54 + 64);
  unint64_t v14 = *(void *)(v53 + 64);
  if (((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v14) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v52 + 64)) {
    unint64_t v14 = *(void *)(v52 + 64);
  }
  uint64_t v15 = *(void *)(v48 + 64) + ((*(void *)(v50 + 64) + v5) & ~v5);
  if (!*(_DWORD *)(v48 + 84)) {
    ++v15;
  }
  unint64_t v16 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v14 <= v17) {
    unint64_t v14 = (v16 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v18 = ((((((v16 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 <= v18) {
    unint64_t v14 = v18;
  }
  if (v14 <= ((v17 + ((v47 + ((*(void *)(v49 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v47) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v14 = ((v17 + ((v47 + ((*(void *)(v49 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v47) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  if (v14 <= *(void *)(v51 + 64)) {
    unint64_t v14 = *(void *)(v51 + 64);
  }
  if (v14 <= 0x18) {
    unint64_t v14 = 24;
  }
  unint64_t v19 = v10 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = v11 + 16;
  uint64_t v21 = (v11 + 16) & v19;
  uint64_t v22 = (v11 + 32) & ~v11;
  uint64_t v23 = *(void *)(v9 + 64);
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned int *)(v25 + 84);
  if (v26 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  else {
    unsigned int v27 = *(_DWORD *)(v25 + 84);
  }
  uint64_t v28 = v13 + v12;
  if (!*(_DWORD *)(v54 + 84)) {
    ++v28;
  }
  uint64_t v29 = v28
      + ((v22
        + v57
        + v21
        + v23
        + ((v20
          + ((((((((v8 + 16) & ~v8)
                + ((((((v13 + v7) & ~v7) + v14 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 48) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & v19)) & ~v57);
  uint64_t v30 = 73;
  if ((unint64_t)(v29 + 1) > 0x49) {
    uint64_t v30 = v29 + 1;
  }
  uint64_t v31 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v32 = *(void *)(v25 + 64);
  if (!a2) {
    return 0;
  }
  uint64_t v33 = v30 + v31 + 1;
  uint64_t v34 = v32 + 7;
  if (v27 < a2)
  {
    unint64_t v35 = ((v34 + (v33 & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 41;
    if (v35 < 4) {
      unsigned int v36 = ((a2 - v27 + 255) >> (8 * v35)) + 1;
    }
    else {
      unsigned int v36 = 2;
    }
    if (v36 >= 0x10000) {
      unsigned int v37 = 4;
    }
    else {
      unsigned int v37 = 2;
    }
    if (v36 < 0x100) {
      unsigned int v37 = 1;
    }
    if (v36 >= 2) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 0;
    }
    switch(v38)
    {
      case 1:
        int v39 = a1[v35];
        if (!a1[v35]) {
          break;
        }
        goto LABEL_42;
      case 2:
        int v39 = *(unsigned __int16 *)&a1[v35];
        if (*(_WORD *)&a1[v35]) {
          goto LABEL_42;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C98329C4);
      case 4:
        int v39 = *(_DWORD *)&a1[v35];
        if (!v39) {
          break;
        }
LABEL_42:
        int v41 = (v39 - 1) << (8 * v35);
        if (v35 >= 4) {
          int v41 = 0;
        }
        if (v35 == 1) {
          int v42 = *a1;
        }
        else {
          int v42 = *(_DWORD *)a1;
        }
        return v27 + (v42 | v41) + 1;
      default:
        break;
    }
  }
  uint64_t v43 = (unint64_t)&a1[v33] & ~v31;
  if (v26 < 0x7FFFFFFE)
  {
    unint64_t v44 = *(void *)(((v34 + v43) & 0xFFFFFFFFFFFFFFF8) + 24);
    if (v44 >= 0xFFFFFFFF) {
      LODWORD(v44) = -1;
    }
    if ((v44 + 1) >= 2) {
      return v44;
    }
    else {
      return 0;
    }
  }
  else
  {
    return __swift_getEnumTagSinglePayload(v43, v26, v24);
  }
}

double sub_1C98329D8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v54 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v59 = *(unsigned __int8 *)(v54 + 80);
  uint64_t v53 = *(void *)(sub_1C9BEC028() - 8);
  int v4 = *(_DWORD *)(v53 + 80);
  uint64_t v52 = *(void *)(sub_1C9BEAC48() - 8);
  int v46 = *(_DWORD *)(v52 + 80) | v4;
  uint64_t v50 = *(void *)(sub_1C9BEAF18() - 8);
  int v5 = *(_DWORD *)(v50 + 80) & 0xF8;
  uint64_t v48 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v48 + 80);
  uint64_t v47 = v5 | v6 | 7;
  uint64_t v49 = *(void *)(sub_1C9BEC928() - 8);
  int v7 = *(_DWORD *)(v49 + 80);
  uint64_t v51 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v8 = (v46 | (v7 | *(_DWORD *)(v51 + 80))) & 0xF8 | v5 | v6 | 7;
  uint64_t v9 = v8 | v59;
  uint64_t v10 = *(void *)(sub_1C9BEB0C8() - 8);
  int v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = v12;
  uint64_t v14 = ((v9 | v13) + 32) & ~(v9 | v13);
  uint64_t v15 = *(void *)(v54 + 64);
  unint64_t v16 = *(void *)(v53 + 64);
  if (((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v16) {
    unint64_t v16 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v16 <= *(void *)(v52 + 64)) {
    unint64_t v16 = *(void *)(v52 + 64);
  }
  uint64_t v17 = *(void *)(v48 + 64) + ((*(void *)(v50 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v48 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v16 <= v19) {
    unint64_t v16 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v20 = ((((((v18 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v16 <= v20) {
    unint64_t v16 = v20;
  }
  if (v16 <= ((v19 + ((v47 + ((*(void *)(v49 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v47) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v16 = ((v19 + ((v47 + ((*(void *)(v49 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v47) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  if (v16 <= *(void *)(v51 + 64)) {
    unint64_t v16 = *(void *)(v51 + 64);
  }
  if (v16 <= 0x18) {
    unint64_t v16 = 24;
  }
  unint64_t v21 = v12 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = v13 + 16;
  uint64_t v23 = (v13 + 16) & v21;
  uint64_t v24 = (v13 + 32) & ~v13;
  uint64_t v25 = *(void *)(v10 + 64);
  uint64_t v26 = *(void *)(a4 + 16);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned int *)(v27 + 84);
  if (v28 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  else {
    unsigned int v29 = *(_DWORD *)(v27 + 84);
  }
  uint64_t v30 = v15 + v14;
  if (!*(_DWORD *)(v54 + 84)) {
    ++v30;
  }
  uint64_t v31 = v30
      + ((v24
        + v59
        + v23
        + v25
        + ((v22
          + ((((((((v9 + 16) & ~v9)
                + ((((((v15 + v8) & ~v8) + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 48) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & v21)) & ~v59);
  if ((unint64_t)(v31 + 1) > 0x49) {
    uint64_t v32 = v31 + 1;
  }
  else {
    uint64_t v32 = 73;
  }
  uint64_t v33 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v34 = v32 + v33 + 1;
  uint64_t v35 = *(void *)(v27 + 64) + 7;
  size_t v36 = ((v35 + (v34 & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 41;
  char v37 = 8 * v36;
  if (v29 >= a3)
  {
    int v40 = 0;
  }
  else
  {
    if (v36 <= 3) {
      unsigned int v38 = ((a3 - v29 + 255) >> v37) + 1;
    }
    else {
      unsigned int v38 = 2;
    }
    if (v38 >= 0x10000) {
      int v39 = 4;
    }
    else {
      int v39 = 2;
    }
    if (v38 < 0x100) {
      int v39 = 1;
    }
    if (v38 >= 2) {
      int v40 = v39;
    }
    else {
      int v40 = 0;
    }
  }
  if (v29 < a2)
  {
    if (v36 < 4) {
      unsigned int v41 = ((~v29 + a2) >> v37) + 1;
    }
    else {
      unsigned int v41 = 1;
    }
    if (v36 >= 4) {
      unsigned int v42 = ~v29 + a2;
    }
    else {
      unsigned int v42 = (~(_BYTE)v29 + a2);
    }
    bzero(a1, v36);
    if (v36 == 1) {
      *a1 = v42;
    }
    else {
      *(_DWORD *)a1 = v42;
    }
    switch(v40)
    {
      case 1:
        a1[v36] = v41;
        return result;
      case 2:
        *(_WORD *)&a1[v36] = v41;
        return result;
      case 3:
        goto LABEL_67;
      case 4:
        *(_DWORD *)&a1[v36] = v41;
        return result;
      default:
        return result;
    }
  }
  uint64_t v43 = ~v33;
  switch(v40)
  {
    case 1:
      a1[v36] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_55;
    case 2:
      *(_WORD *)&a1[v36] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_55;
    case 3:
LABEL_67:
      __break(1u);
      JUMPOUT(0x1C9833044);
    case 4:
      *(_DWORD *)&a1[v36] = 0;
      goto LABEL_54;
    default:
LABEL_54:
      if (a2)
      {
LABEL_55:
        uint64_t v44 = (unint64_t)&a1[v34] & v43;
        if (v28 < 0x7FFFFFFE)
        {
          unint64_t v45 = (v35 + v44) & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0x7FFFFFFE)
          {
            *(void *)(v45 + 32) = 0;
            double result = 0.0;
            *(_OWORD *)unint64_t v45 = 0u;
            *(_OWORD *)(v45 + 16) = 0u;
            *(_DWORD *)unint64_t v45 = a2 - 0x7FFFFFFF;
          }
          else
          {
            *(void *)(v45 + 24) = a2;
          }
        }
        else
        {
          __swift_storeEnumTagSinglePayload(v44, a2, v28, v26);
        }
      }
      return result;
  }
}

uint64_t type metadata accessor for Conclude()
{
  return __swift_instantiateGenericMetadata();
}

#error "1C983368C: call analysis failed (funcsize=474)"

void _s11SiriKitFlow8DelegateVwxx_0(uint64_t a1)
{
  OUTLINED_FUNCTION_50_10();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v3 = a1;
      goto LABEL_5;
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      if (*(void *)(a1 + 56))
      {
        uint64_t v3 = a1 + 32;
LABEL_5:
        __swift_destroy_boxed_opaque_existential_1(v3);
      }
      goto LABEL_43;
    case 2u:
      OUTLINED_FUNCTION_35_14();

      return;
    case 3u:
      OUTLINED_FUNCTION_35_14();
      swift_release();
      return;
    case 5u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      uint64_t v7 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8) + 48);
      swift_bridgeObjectRelease();
      uint64_t v8 = (int *)type metadata accessor for PluginAction();
      uint64_t v9 = v7 + v8[5];
      uint64_t v10 = sub_1C9BEAB08();
      OUTLINED_FUNCTION_8_4();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
      int v12 = (int *)type metadata accessor for Input(0);
      uint64_t v13 = (void **)(v9 + v12[5]);
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          sub_1C9BEC028();
          goto LABEL_36;
        case 1u:
          sub_1C9BEC028();
          OUTLINED_FUNCTION_8_4();
          uint64_t v15 = OUTLINED_FUNCTION_48_10();
          v16(v15);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_28;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          sub_1C9BEAC48();
          goto LABEL_36;
        case 5u:
          uint64_t v17 = *v13;
          goto LABEL_34;
        case 6u:
          sub_1C9BEAF18();
          OUTLINED_FUNCTION_8_4();
          uint64_t v18 = OUTLINED_FUNCTION_48_10();
          v19(v18);
          type metadata accessor for USOParse();
          uint64_t v20 = OUTLINED_FUNCTION_101_2();
          if (!OUTLINED_FUNCTION_35_16(v1))
          {
            OUTLINED_FUNCTION_112();
            (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v20);
          }
          goto LABEL_28;
        case 7u:
          sub_1C9BEAF18();
          OUTLINED_FUNCTION_8_4();
          uint64_t v22 = OUTLINED_FUNCTION_48_10();
          v23(v22);
          type metadata accessor for USOParse();
          uint64_t v24 = OUTLINED_FUNCTION_101_2();
          if (!OUTLINED_FUNCTION_35_16(v1))
          {
            OUTLINED_FUNCTION_112();
            (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v24);
          }
          OUTLINED_FUNCTION_98_2();
          type metadata accessor for LinkParse();
          OUTLINED_FUNCTION_98_2();
          OUTLINED_FUNCTION_98_2();
LABEL_28:
          swift_bridgeObjectRelease();
          break;
        case 8u:
          sub_1C9BEC928();
          OUTLINED_FUNCTION_8_4();
          uint64_t v26 = OUTLINED_FUNCTION_48_10();
          v27(v26);
          uint64_t v28 = type metadata accessor for NLRouterParse();
          OUTLINED_FUNCTION_98_2();
          uint64_t v29 = (uint64_t)v13 + *(int *)(v28 + 24);
          uint64_t v30 = type metadata accessor for USOParse();
          if (!OUTLINED_FUNCTION_35_16(v29))
          {
            sub_1C9BEAF18();
            OUTLINED_FUNCTION_8_4();
            (*(void (**)(uint64_t))(v31 + 8))(v29);
            uint64_t v32 = v29 + *(int *)(v30 + 20);
            uint64_t v33 = sub_1C9BEAE48();
            uint64_t v47 = v32;
            uint64_t v34 = v32;
            uint64_t v35 = v33;
            if (!__swift_getEnumTagSinglePayload(v34, 1, v33))
            {
              OUTLINED_FUNCTION_112();
              (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v47, v35);
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v17 = *(void **)((char *)v13 + *(int *)(v28 + 28));
LABEL_34:

          break;
        case 9u:
          sub_1C9BEC8F8();
LABEL_36:
          OUTLINED_FUNCTION_8_4();
          (*(void (**)(void **))(v37 + 8))(v13);
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = v9 + v12[7];
      if (*(void *)(v38 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(v38);
      }
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v39 = v7 + v8[9];
      uint64_t v40 = type metadata accessor for ActionParaphrase(0);
      if (!OUTLINED_FUNCTION_99_2(v40))
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = v39 + v12[5];
        uint64_t v42 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (!OUTLINED_FUNCTION_99_2(v42))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v43 = v41 + v12[6];
          sub_1C9BEB0C8();
          OUTLINED_FUNCTION_8_4();
          (*(void (**)(uint64_t))(v44 + 8))(v43);
        }
      }
      if (!__swift_getEnumTagSinglePayload(v7 + v8[10], 1, v10))
      {
        OUTLINED_FUNCTION_35_14();
        __asm { BRAA            X2, X16 }
      }
      goto LABEL_43;
    case 6u:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_35_14();
      swift_bridgeObjectRelease();
      return;
    default:
LABEL_43:
      OUTLINED_FUNCTION_35_14();
      return;
  }
}

#error "1C9834440: call analysis failed (funcsize=461)"

#error "1C9834CC8: call analysis failed (funcsize=559)"

#error "1C983537C: call analysis failed (funcsize=335)"

#error "1C9835924: call analysis failed (funcsize=342)"

uint64_t getEnumTagSinglePayload for Abort(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9835D00);
}

uint64_t storeEnumTagSinglePayload for Abort(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9835CEC);
}

uint64_t type metadata accessor for Abort(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA58E480);
}

uint64_t sub_1C9835AB8()
{
  uint64_t result = type metadata accessor for FlowActionType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Yield(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9835D04);
}

uint64_t storeEnumTagSinglePayload for Yield(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9835CF0);
}

uint64_t type metadata accessor for Yield(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA58E490);
}

uint64_t getEnumTagSinglePayload for Unhandled(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9835D08);
}

uint64_t storeEnumTagSinglePayload for Unhandled(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9835CF4);
}

uint64_t type metadata accessor for Unhandled(uint64_t a1)
{
  return sub_1C95FCC2C(a1, qword_1EA58E4A0);
}

uint64_t sub_1C9835BD4()
{
  uint64_t result = type metadata accessor for FlowActionType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C9835C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9835D0C);
}

uint64_t sub_1C9835C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9835CF8);
}

uint64_t type metadata accessor for Redirect()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t getEnumTagSinglePayload for Reparse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9835D10);
}

uint64_t storeEnumTagSinglePayload for Reparse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9835CFC);
}

uint64_t type metadata accessor for Reparse(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA58E530);
}

uint64_t OUTLINED_FUNCTION_3_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_28()
{
  *(void *)(v3 + v5[6]) = *(void *)(v4 + v5[6]);
  uint64_t v7 = v5[7];
  uint64_t v8 = v3 + v7;
  uint64_t v9 = v4 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(unsigned char *)(v3 + v5[8]) = *(unsigned char *)(v4 + v5[8]);
  *(void *)(v2 + v1[6]) = *(void *)(v0 + v1[6]);
  *(void *)(v2 + v1[7]) = *(void *)(v0 + v1[7]);
  *(_OWORD *)(v2 + v1[8]) = *(_OWORD *)(v0 + v1[8]);
  return type metadata accessor for ActionParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_9_28(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_10_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_32()
{
  return sub_1C9BEAE48();
}

uint64_t OUTLINED_FUNCTION_12_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int *a20)
{
  *(unsigned char *)(v21 + *(int *)(v23 + 32)) = *(unsigned char *)(v22 + *(int *)(v23 + 32));
  *(void *)(v24 + a20[6]) = *(void *)(v20 + a20[6]);
  *(void *)(v24 + a20[7]) = *(void *)(v20 + a20[7]);
  uint64_t v26 = a20[8];
  uint64_t v27 = (void *)(v24 + v26);
  uint64_t v28 = (void *)(v20 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  return type metadata accessor for ActionParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_14_30(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_15_24(int *a1)
{
  uint64_t v4 = a1[5];
  uint64_t v5 = (void *)(v1 + v4);
  uint64_t v6 = (void *)(v2 + v4);
  uint64_t v16 = v6[1];
  *uint64_t v5 = *v6;
  v5[1] = v16;
  uint64_t v7 = a1[6];
  uint64_t v8 = (void *)(v1 + v7);
  uint64_t v9 = (void *)(v2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a1[7];
  int v12 = (void *)(v1 + v11);
  uint64_t v13 = (void *)(v2 + v11);
  uint64_t v14 = v13[1];
  *int v12 = *v13;
  v12[1] = v14;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_16_23(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_17_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v17 = *(int *)(a14 + 24);
  uint64_t v18 = (void *)(v14 + v17);
  unint64_t v19 = (void *)(v15 + v17);
  uint64_t v24 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v24;
  uint64_t v20 = *(int *)(a14 + 28);
  uint64_t v21 = v14 + v20;
  uint64_t v22 = v15 + v20;
  *(unsigned char *)(v21 + 4) = *(unsigned char *)(v22 + 4);
  *(_DWORD *)uint64_t v21 = *(_DWORD *)v22;
  return type metadata accessor for LinkParse();
}

uint64_t OUTLINED_FUNCTION_18_25(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_19_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_OWORD *)(v14 + *(int *)(a14 + 24)) = *(_OWORD *)(v15 + *(int *)(a14 + 24));
  uint64_t v16 = *(int *)(a14 + 28);
  uint64_t v17 = v14 + v16;
  uint64_t v18 = v15 + v16;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  return v14;
}

uint64_t OUTLINED_FUNCTION_20_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v17 = *(int *)(a14 + 24);
  uint64_t v18 = (void *)(v14 + v17);
  unint64_t v19 = (void *)(v15 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = *(int *)(a14 + 28);
  uint64_t v22 = v14 + v21;
  uint64_t v23 = v15 + v21;
  *(unsigned char *)(v22 + 4) = *(unsigned char *)(v23 + 4);
  *(_DWORD *)uint64_t v22 = *(_DWORD *)v23;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_21_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(unsigned char *)(v22 + *(int *)(a20 + 44)) = *(unsigned char *)(v21 + *(int *)(a20 + 44));
  return v20;
}

uint64_t OUTLINED_FUNCTION_22_20()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_20()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_24_18()
{
  *(void *)(v0 + *(int *)(v2 + 24)) = *(void *)(v1 + *(int *)(v2 + 24));
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v22 = *(int *)(a20 + 40);
  return __swift_getEnumTagSinglePayload(v20 + v22, 1, a19);
}

uint64_t OUTLINED_FUNCTION_26_18()
{
  return sub_1C9BEAE48();
}

uint64_t OUTLINED_FUNCTION_27_17()
{
  return type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_28_15@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + 4) = *(unsigned char *)(a1 + 4);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)a1;
  return type metadata accessor for LinkParse();
}

uint64_t OUTLINED_FUNCTION_29_16(int *a1)
{
  *(_OWORD *)(v1 + a1[5]) = *(_OWORD *)(v2 + a1[5]);
  *(_OWORD *)(v1 + a1[6]) = *(_OWORD *)(v2 + a1[6]);
  *(_OWORD *)(v1 + a1[7]) = *(_OWORD *)(v2 + a1[7]);
  return v1;
}

uint64_t OUTLINED_FUNCTION_30_13(uint64_t a1)
{
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_32_19@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a1 + a3) = *(_OWORD *)(v3 + a3);
  uint64_t v5 = *(int *)(a2 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = v3 + v5;
  *(unsigned char *)(v6 + 4) = *(unsigned char *)(v7 + 4);
  *(_DWORD *)uint64_t v6 = *(_DWORD *)v7;
  return __swift_storeEnumTagSinglePayload(a1, 0, 1, a2);
}

uint64_t OUTLINED_FUNCTION_33_14()
{
  return type metadata accessor for USOParse();
}

uint64_t OUTLINED_FUNCTION_36_15()
{
  return sub_1C9BEAE48();
}

void *OUTLINED_FUNCTION_38_11(int a1, int a2, size_t a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__src, uint64_t a14, void *__dst)
{
  return memcpy(__dst, __src, a3);
}

uint64_t OUTLINED_FUNCTION_39_13()
{
  uint64_t v3 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v3;
  uint64_t v4 = v1[3];
  v0[2] = v1[2];
  v0[3] = v4;
  return sub_1C9BEB0C8();
}

uint64_t OUTLINED_FUNCTION_40_11@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + 4) = *(unsigned char *)(a1 + 4);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_41_10()
{
  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_45_9()
{
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(v1 + 72);
  return v0;
}

uint64_t OUTLINED_FUNCTION_46_11()
{
  return v0;
}

id OUTLINED_FUNCTION_49_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = *(int *)(a12 + 28);
  uint64_t v16 = *(void **)(v13 + v15);
  *(void *)(v12 + v15) = v16;
  return v16;
}

uint64_t OUTLINED_FUNCTION_50_10()
{
  type metadata accessor for FlowActionType(0);
  return v0;
}

void *OUTLINED_FUNCTION_51_9()
{
  *uint64_t v0 = v1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_54_11()
{
  long long v3 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v3;
  return sub_1C9BEB0C8();
}

void OUTLINED_FUNCTION_55_9()
{
  uint64_t v3 = *(int *)(v0 + 28);
  uint64_t v4 = v1 + v3;
  uint64_t v5 = (int *)(v2 + v3);
  int v6 = *v5;
  *(unsigned char *)(v4 + 4) = *((unsigned char *)v5 + 4);
  *(_DWORD *)uint64_t v4 = v6;
}

uint64_t OUTLINED_FUNCTION_56_10()
{
  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

void OUTLINED_FUNCTION_57_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v14 + *(int *)(a14 + 24)) = *(void *)(v15 + *(int *)(a14 + 24));
}

uint64_t OUTLINED_FUNCTION_59_7()
{
  return sub_1C9BEAE48();
}

uint64_t OUTLINED_FUNCTION_60_10(uint64_t a1)
{
  uint64_t v4 = *(int *)(a1 + 48);
  uint64_t v5 = (void *)(v1 + v4);
  int v6 = (void *)(v2 + v4);
  uint64_t v7 = v6[1];
  *uint64_t v5 = *v6;
  v5[1] = v7;
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_61_11(uint64_t a1)
{
  *(_OWORD *)(v1 + *(int *)(a1 + 48)) = *(_OWORD *)(v2 + *(int *)(a1 + 48));
  return type metadata accessor for PluginAction();
}

void OUTLINED_FUNCTION_63_8(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + a1);
  uint64_t v4 = (void *)(v2 + a1);
  *uint64_t v3 = *v4;
  v3[1] = v4[1];
}

uint64_t OUTLINED_FUNCTION_64_6()
{
  *(unsigned char *)(v2 + *(int *)(v1 + 44)) = *(unsigned char *)(v0 + *(int *)(v1 + 44));
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  uint64_t v4 = *(int *)(v1 + 40);
  return __swift_getEnumTagSinglePayload(v0 + v4, 1, v2);
}

uint64_t OUTLINED_FUNCTION_67_7()
{
  return sub_1C9BEAF18();
}

uint64_t OUTLINED_FUNCTION_71_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_74_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_75_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_76_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_78_5()
{
  return type metadata accessor for FlowActionType(0);
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_83_4()
{
  return type metadata accessor for Parse(0);
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_85_3()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_86_5()
{
  return v0;
}

void *OUTLINED_FUNCTION_87_5(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_88_4(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_89_2()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_90_3(uint64_t a1)
{
  *(void *)(v1 + *(int *)(a1 + 48)) = *(void *)(v2 + *(int *)(a1 + 48));
  sub_1C9BEC838();
}

void *OUTLINED_FUNCTION_91_4(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  return v0 + 32;
}

__n128 OUTLINED_FUNCTION_94_2(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return result;
}

__n128 OUTLINED_FUNCTION_95_4()
{
  __n128 result = *(__n128 *)v1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)uint64_t v0 = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 16) = v3;
  *(void *)(v0 + 32) = *(void *)(v1 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_96_3()
{
  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_97_2(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_100_2()
{
  uint64_t v3 = v1[1];
  *uint64_t v0 = *v1;
  v0[1] = v3;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  v0[2] = v4;
  v0[3] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_101_2()
{
  return sub_1C9BEAE48();
}

uint64_t static FlowActionBuilder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = type metadata accessor for Delegate(0);
  a2[4] = (uint64_t)&protocol witness table for Delegate;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  sub_1C95FD5F0(a1, (uint64_t)boxed_opaque_existential_0);
  type metadata accessor for FlowActionType(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t static FlowActionBuilder.buildBlock(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C95FD5F0(a1, a2);
}

ValueMetadata *type metadata accessor for FlowActionBuilder()
{
  return &type metadata for FlowActionBuilder;
}

uint64_t sub_1C98367D8()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9836814()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t (*sub_1C9836850())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C9836894()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C98368D0()
{
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_2_41();
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C9836914())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C9836958()
{
  return sub_1C963750C();
}

uint64_t sub_1C9836998()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t (*sub_1C98369D4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C9836A18()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t (*sub_1C9836A54())()
{
  return j_j__swift_endAccess;
}

double sub_1C9836A98()
{
  OUTLINED_FUNCTION_1_38();
  return *(double *)(v0 + 96);
}

uint64_t (*sub_1C9836AC0())()
{
  return j_j__swift_endAccess;
}

double sub_1C9836B04()
{
  OUTLINED_FUNCTION_1_38();
  return *(double *)(v0 + 104);
}

uint64_t sub_1C9836B2C(double a1)
{
  uint64_t result = OUTLINED_FUNCTION_2_41();
  *(double *)(v1 + 104) = a1;
  return result;
}

uint64_t (*sub_1C9836B60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C9836BA4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_1C9836BEC()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9836C28()
{
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_2_41();
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C9836C6C())()
{
  return j_j__swift_endAccess;
}

uint64_t DefaultFlowActivity.__allocating_init(activityName:activityType:activityStartTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  char v11 = a6 & 1;
  OUTLINED_FUNCTION_13_37();
  uint64_t v12 = swift_allocObject();
  DefaultFlowActivity.init(activityName:activityType:activityStartTime:)(a1, a2, a3, a4, a5, v11);
  return v12;
}

uint64_t sub_1C9836D28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D726F6674616C70 && a2 == 0xE800000000000000;
    if (v6 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7974697669746361 && a2 == 0xEC000000656D614ELL;
      if (v7 || (sub_1C9BEE618() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
        if (v8 || (sub_1C9BEE618() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E696769726FLL && a2 == 0xE600000000000000;
          if (v9 || (sub_1C9BEE618() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            BOOL v10 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
            if (v10 || (sub_1C9BEE618() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              BOOL v11 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
              if (v11 || (sub_1C9BEE618() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x7974697669746361 && a2 == 0xEC00000065707954)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                char v13 = sub_1C9BEE618();
                swift_bridgeObjectRelease();
                if (v13) {
                  return 7;
                }
                else {
                  return 8;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C983707C()
{
  return 8;
}

uint64_t sub_1C98370A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9836D28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C98370CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C983707C();
  *a1 = result;
  return result;
}

uint64_t sub_1C98370F4(uint64_t a1)
{
  unint64_t v2 = sub_1C963792C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9837130(uint64_t a1)
{
  unint64_t v2 = sub_1C963792C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DefaultFlowActivity.__deallocating_deinit()
{
  DefaultFlowActivity.deinit();
  OUTLINED_FUNCTION_13_37();

  return swift_deallocClassInstance();
}

uint64_t DefaultFlowActivity.__allocating_init(from:)(void *a1)
{
  OUTLINED_FUNCTION_13_37();
  uint64_t v2 = swift_allocObject();
  DefaultFlowActivity.init(from:)(a1);
  return v2;
}

void *DefaultFlowActivity.init(from:)(void *a1)
{
  uint64_t v2 = v1;
  v41[4] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E540);
  OUTLINED_FUNCTION_0_2();
  v41[3] = v4;
  MEMORY[0x1F4188790](v5, v6);
  BOOL v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_17_25();
  uint64_t v43 = v2;
  OUTLINED_FUNCTION_16_24();
  v2[2] = v9;
  v2[3] = v10;
  BOOL v11 = v2 + 2;
  v11[2] = v9;
  v11[4] = 0xD000000000000013;
  v11[3] = v10;
  v11[6] = 0;
  v11[5] = 0x80000001C9BFA0D0;
  v11[8] = v9;
  v11[7] = 0;
  v11[9] = v10;
  v11[11] = 0xBFF0000000000000;
  uint64_t v12 = v11 + 11;
  uint64_t v13 = a1[3];
  uint64_t v44 = (void *)a1[4];
  uint64_t v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C963792C();
  v41[5] = v8;
  uint64_t v14 = v45;
  sub_1C9BEE798();
  if (v14)
  {
    uint64_t v32 = (uint64_t)v42;
    unint64_t v19 = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DefaultFlowActivity();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v44 = v11 + 4;
    unint64_t v45 = v11 + 2;
    v41[2] = v11 + 6;
    v41[1] = v11 + 8;
    char v51 = 0;
    uint64_t v16 = sub_1C9BEE488();
    uint64_t v18 = v17;
    OUTLINED_FUNCTION_1_0();
    unint64_t v19 = v43;
    v43[2] = v16;
    v19[3] = v18;
    swift_bridgeObjectRelease();
    char v50 = 1;
    uint64_t v20 = OUTLINED_FUNCTION_14_31();
    uint64_t v22 = v21;
    OUTLINED_FUNCTION_1_0();
    v19[4] = v20;
    v19[5] = v22;
    swift_bridgeObjectRelease();
    char v49 = 2;
    uint64_t v23 = OUTLINED_FUNCTION_14_31();
    uint64_t v25 = v24;
    OUTLINED_FUNCTION_1_0();
    v19[6] = v23;
    v19[7] = v25;
    swift_bridgeObjectRelease();
    char v48 = 3;
    uint64_t v26 = sub_1C9BEE468();
    uint64_t v28 = v27;
    OUTLINED_FUNCTION_1_0();
    v19[8] = v26;
    void v19[9] = v28;
    swift_bridgeObjectRelease();
    char v47 = 4;
    uint64_t v29 = OUTLINED_FUNCTION_14_31();
    uint64_t v31 = v30;
    OUTLINED_FUNCTION_1_0();
    v19[10] = v29;
    v19[11] = v31;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15_25(5);
    uint64_t v32 = (uint64_t)v42;
    v19[12] = v33;
    OUTLINED_FUNCTION_15_25(6);
    uint64_t v35 = v34;
    OUTLINED_FUNCTION_1_0();
    *uint64_t v12 = v35;
    char v46 = 7;
    uint64_t v36 = OUTLINED_FUNCTION_14_31();
    uint64_t v38 = v37;
    uint64_t v39 = OUTLINED_FUNCTION_12_29();
    v40(v39);
    v19[14] = v36;
    v19[15] = v38;
  }
  __swift_destroy_boxed_opaque_existential_1(v32);
  return v19;
}

uint64_t sub_1C98375B8()
{
  return sub_1C9836894();
}

uint64_t sub_1C98375DC()
{
  return sub_1C9836998();
}

uint64_t sub_1C9837600()
{
  return sub_1C963750C();
}

uint64_t (*sub_1C9837624())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C983767C()
{
  return sub_1C9836A18();
}

uint64_t sub_1C98376A0()
{
  return sub_1C969B83C();
}

uint64_t (*sub_1C98376C4())()
{
  return j_j__swift_endAccess;
}

double sub_1C983771C()
{
  return sub_1C9836A98();
}

uint64_t sub_1C9837740(double a1)
{
  return sub_1C9637490(a1);
}

uint64_t (*sub_1C9837764())()
{
  return j_j__swift_endAccess;
}

double sub_1C98377BC()
{
  return sub_1C9836B04();
}

uint64_t sub_1C98377E0(double a1)
{
  return sub_1C9836B2C(a1);
}

uint64_t (*sub_1C9837804())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C983785C()
{
  return sub_1C9836BEC();
}

uint64_t sub_1C9837880()
{
  return sub_1C9836C28();
}

uint64_t (*sub_1C98378A4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C98378FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 352))();
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C9837938(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C98379A0(&qword_1EBC78818);
  uint64_t result = sub_1C98379A0(&qword_1EBC78810);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C98379A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DefaultFlowActivity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C98379E0()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C98367D8();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9837A08(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9836BA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C9629E8C);
}

uint64_t sub_1C9837A34()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9836814();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9837A5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9836BA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C9629ED0);
}

uint64_t sub_1C9837A88()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9836894();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9837AB0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9836BA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C98368D0);
}

uint64_t sub_1C9837ADC()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9836998();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9837B08()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9836A18();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9837B30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9836BA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C969B83C);
}

void sub_1C9837B5C()
{
  OUTLINED_FUNCTION_8_14();
  *uint64_t v0 = sub_1C9836A98();
}

uint64_t sub_1C9837B84(double *a1)
{
  return sub_1C9637490(*a1);
}

void sub_1C9837BAC()
{
  OUTLINED_FUNCTION_8_14();
  *uint64_t v0 = sub_1C9836B04();
}

uint64_t sub_1C9837BD4(double *a1)
{
  return sub_1C9836B2C(*a1);
}

uint64_t sub_1C9837BFC()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9836BEC();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9837C24(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9836BA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C9836C28);
}

uint64_t dispatch thunk of FlowActivity.activityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FlowActivity.message.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FlowActivity.message.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FlowActivity.message.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FlowActivity.origin.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FlowActivity.origin.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of FlowActivity.origin.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FlowActivity.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FlowActivity.timestamp.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FlowActivity.timestamp.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of FlowActivity.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FlowActivity.duration.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FlowActivity.duration.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of FlowActivity.activityType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FlowActivity.activityType.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of FlowActivity.activityType.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of DefaultFlowActivity.locale.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DefaultFlowActivity.locale.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of DefaultFlowActivity.locale.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of DefaultFlowActivity.platform.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DefaultFlowActivity.platform.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of DefaultFlowActivity.platform.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityName.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of DefaultFlowActivity.message.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of DefaultFlowActivity.message.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of DefaultFlowActivity.origin.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of DefaultFlowActivity.origin.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of DefaultFlowActivity.origin.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of DefaultFlowActivity.timestamp.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of DefaultFlowActivity.timestamp.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of DefaultFlowActivity.duration.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of DefaultFlowActivity.duration.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of DefaultFlowActivity.duration.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityType.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of DefaultFlowActivity.activityType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of DefaultFlowActivity.__allocating_init(activityName:activityType:activityStartTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6 + 336))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of DefaultFlowActivity.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of DefaultFlowActivity.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 352))();
}

ValueMetadata *type metadata accessor for DefaultFlowActivity.CodingKeys()
{
  return &type metadata for DefaultFlowActivity.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_1_38()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_41()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_3_44()
{
  return sub_1C9BEE528();
}

uint64_t OUTLINED_FUNCTION_5_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_31()
{
  return sub_1C9BEE488();
}

uint64_t OUTLINED_FUNCTION_15_25@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v2 - 232) = a1;
  return MEMORY[0x1F4185578](v2 - 232, v1);
}

uint64_t _s11SiriKitFlow0C7BuilderO10buildBlockyxxAA06ActingC0RzlFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t static FlowsBuilder.buildExpression(_:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E550);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C9BEF570;
  sub_1C95FD5F0(a1, v2 + 32);
  return v2;
}

uint64_t _s11SiriKitFlow12FlowsBuilderO10buildArrayySayAA06ActingC0_pGSayAFGFZ_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + 8 * v3 + 32);
      uint64_t v6 = *(void *)(v5 + 16);
      uint64_t v7 = *(void *)(v4 + 16);
      if (__OFADD__(v7, v6)) {
        break;
      }
      swift_bridgeObjectRetain();
      if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v6 > *(void *)(v4 + 24) >> 1)
      {
        sub_1C9654744();
        uint64_t v4 = v8;
      }
      if (*(void *)(v5 + 16))
      {
        uint64_t v9 = *(void *)(v4 + 16);
        if ((*(void *)(v4 + 24) >> 1) - v9 < v6) {
          goto LABEL_24;
        }
        unint64_t v10 = v4 + 40 * v9 + 32;
        if (v5 + 32 < v10 + 40 * v6 && v10 < v5 + 32 + 40 * v6) {
          goto LABEL_26;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E558);
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v12 = *(void *)(v4 + 16);
          BOOL v13 = __OFADD__(v12, v6);
          uint64_t v14 = v12 + v6;
          if (v13) {
            goto LABEL_25;
          }
          *(void *)(v4 + 16) = v14;
        }
      }
      else if (v6)
      {
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      if (v1 == ++v3)
      {
        swift_bridgeObjectRelease();
        return v4;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t static FlowsBuilder.buildOptional(_:)(uint64_t a1)
{
  if (a1) {
    uint64_t v1 = a1;
  }
  else {
    uint64_t v1 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C9838544(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C9838558(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C983856C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_5_40();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  sub_1C96044C4(0, v3);
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838620(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C9838634()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (v2 + 32 * v1 > v0 && v0 + 32 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C98386E4(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C98386F8()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (v2 + 16 * v1 > v0 && v0 + 16 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C98387A4(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C98387B8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_36();
  if (v4 + 24 * v3 > v2 && v2 + 24 * v3 > v4)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E568);
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838878()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (v2 + 224 * v1 > v0 && v0 + 224 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

void *sub_1C983892C()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (&v2[v1] > v0 && &v0[v1] > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return memcpy(v2, v0, v1);
}

uint64_t sub_1C98389D0()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (v2 + (v1 << 6) > v0 && v0 + (v1 << 6) > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838A7C()
{
  OUTLINED_FUNCTION_7_35();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_8_29();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838B1C(uint64_t a1, uint64_t a2)
{
  return sub_1C9839290(a1, a2);
}

uint64_t sub_1C9838B28(uint64_t a1, uint64_t a2)
{
  return sub_1C98391B8(a1, a2);
}

uint64_t sub_1C9838B40(uint64_t a1, uint64_t a2)
{
  return sub_1C98391B8(a1, a2);
}

uint64_t sub_1C9838B58()
{
  return sub_1C9838D88();
}

uint64_t sub_1C9838B64(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_5_40();
  if (!v5 & v4) {
    BOOL v6 = v3 > v2;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58AE28);
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838C14(uint64_t a1, uint64_t a2)
{
  return sub_1C98391B8(a1, a2);
}

uint64_t sub_1C9838C2C()
{
  OUTLINED_FUNCTION_7_35();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_8_29();
  if (!v4 & v3) {
    BOOL v5 = v2 > v1;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838CCC()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (v2 + 96 * v1 > v0 && v0 + 96 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838D7C()
{
  return sub_1C9838D88();
}

uint64_t sub_1C9838D88()
{
  OUTLINED_FUNCTION_7_35();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (v2 + 48 * v1 > v0 && v0 + 48 * v1 > v2)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838E30(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_36();
  if (v4 + 56 * v3 > v2 && v2 + 56 * v3 > v4)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E570);
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838EF4(uint64_t a1, uint64_t a2)
{
  return sub_1C9838F0C(a1, a2);
}

uint64_t sub_1C9838F0C(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_5_40();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  v3(0);
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9838FBC(uint64_t a1, uint64_t a2)
{
  return sub_1C98391B8(a1, a2);
}

void *sub_1C9838FD4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = (void *)OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  if (&__dst[8 * a2] > __src && &__src[8 * a2] > __dst)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }

  return memcpy(__dst, __src, 8 * a2);
}

uint64_t sub_1C9839080(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_36();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E558);
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

ValueMetadata *type metadata accessor for FlowBuilder()
{
  return &type metadata for FlowBuilder;
}

ValueMetadata *type metadata accessor for FlowsBuilder()
{
  return &type metadata for FlowsBuilder;
}

uint64_t sub_1C9839160(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C9839174(uint64_t a1, uint64_t a2)
{
  return sub_1C983856C(a1, a2);
}

uint64_t sub_1C9839188(uint64_t a1, uint64_t a2)
{
  return sub_1C9838F0C(a1, a2);
}

uint64_t sub_1C98391A0(uint64_t a1, uint64_t a2)
{
  return sub_1C98391B8(a1, a2);
}

uint64_t sub_1C98391B8(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_36();
  v3(0);
  OUTLINED_FUNCTION_9_29();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1C9839284(uint64_t a1, uint64_t a2)
{
  return sub_1C9839290(a1, a2);
}

uint64_t sub_1C9839290(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_2_42();
LABEL_11:
    uint64_t result = OUTLINED_FUNCTION_4_41();
    __break(1u);
    return result;
  }
  OUTLINED_FUNCTION_6_36();
  __swift_instantiateConcreteTypeFromMangledName(v3);
  OUTLINED_FUNCTION_9_29();
  if (!v6 & v5) {
    BOOL v7 = v4 > v2;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    OUTLINED_FUNCTION_0_34();
    OUTLINED_FUNCTION_1_39();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_3_45();

  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_3_45()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  return sub_1C9BEE408();
}

void sub_1C9839424()
{
}

uint64_t sub_1C9839490()
{
  type metadata accessor for RefreshableFlowContextPublisher();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1C9839F7C();
  qword_1EBC7A498 = v0;
  return result;
}

void static FlowContextPublisher.current.getter()
{
  if (qword_1EBC77840 != -1) {
    swift_once();
  }
  sub_1C9BEC838();
}

uint64_t dispatch thunk of FlowContextPublishing.publish(nlContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_1C9615010;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FlowContextPublishing.publish(dialogEngineOutput:executionSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C9615888;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of FlowContextPublishing.isAvailable()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for FlowContextPublisher()
{
  return &type metadata for FlowContextPublisher;
}

uint64_t sub_1C9839764@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v6 = MEMORY[0x1F4188790](v4 - 8, v5);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v10 = (char *)v24 - v9;
  if (!*a1)
  {
    uint64_t v28 = v8;
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C9BECF88();
    uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
    uint64_t v15 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, v14, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v13);
    uint64_t v16 = (uint64_t)v10;
    uint64_t v17 = v28;
    sub_1C96C26E8(v16, v28);
    if (__swift_getEnumTagSinglePayload(v17, 1, v13) == 1)
    {
      sub_1C95FE7C0(v28, &qword_1EBC7A230);
    }
    else
    {
      uint64_t v18 = sub_1C9BECF78();
      os_log_type_t v19 = sub_1C9BEDC88();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        *(void *)&v24[0] = v21;
        *(_DWORD *)uint64_t v20 = 136315650;
        uint64_t v22 = sub_1C9BEE1B8();
        *(void *)&long long v26 = sub_1C95FF228(v22, v23, (uint64_t *)v24);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2048;
        *(void *)&long long v26 = 52;
        sub_1C9BEDF68();
        *(_WORD *)(v20 + 22) = 2080;
        *(void *)&long long v26 = sub_1C95FF228(0xD0000000000000DBLL, 0x80000001C9C1DF10, (uint64_t *)v24);
        sub_1C9BEDF68();
        _os_log_impl(&dword_1C95F9000, v18, v19, "FatalError at %s:%lu - %s", (uint8_t *)v20, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v21, -1, -1);
        MEMORY[0x1CB78C440](v20, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v28, v13);
    }
    if (qword_1EBC78750 != -1) {
      swift_once();
    }
    long long v26 = 0u;
    long long v27 = 0u;
    uint64_t v25 = 0;
    memset(v24, 0, sizeof(v24));
    sub_1C9BEC838();
  }
  uint64_t v11 = a1[1];
  *a2 = *a1;
  a2[1] = v11;
  return swift_unknownObjectRetain();
}

uint64_t sub_1C9839BE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 96) = a2;
  *(void *)(v3 + 104) = v2;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 128) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v3 + 160) = v5;
  *(void *)(v3 + 176) = *(void *)(a1 + 64);
  *(unsigned char *)(v3 + 89) = *(unsigned char *)(a1 + 72);
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9839C18);
}

void sub_1C9839C18()
{
}

uint64_t sub_1C9839D88()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  *(void *)(v4 + 200) = v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C9839EA4, 0, 0);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v5();
  }
}

uint64_t sub_1C9839EA4()
{
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void *sub_1C9839EC0@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_1C9839ED4(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a2;
  a1[1] = a3;
  return swift_unknownObjectRetain();
}

uint64_t sub_1C9839F20()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RefreshableFlowContextPublisher()
{
  return self;
}

uint64_t sub_1C9839F7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76630);
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 32) = 0;
  *(void *)(v0 + 16) = v1;
  return v0;
}

uint64_t sub_1C9839FB8(uint64_t a1, uint64_t a2)
{
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9839BE0(a1, a2);
}

uint64_t sub_1C983A05C(void *a1)
{
  return sub_1C9839ED4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C983A078(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      uint64_t v13 = MEMORY[0x1E4FBC860];
      sub_1C963C200();
      if (v5 < 0) {
        break;
      }
      uint64_t v6 = 0;
      while (v5 != v6)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)MEMORY[0x1CB78B3A0](v6, a1);
        }
        else {
          id v7 = *(id *)(a1 + 8 * v6 + 32);
        }
        id v8 = v7;
        unint64_t v10 = *(void *)(v13 + 16);
        unint64_t v9 = *(void *)(v13 + 24);
        swift_bridgeObjectRetain();
        if (v10 >= v9 >> 1) {
          sub_1C963C200();
        }
        ++v6;
        *(void *)(v13 + 16) = v10 + 1;
        uint64_t v11 = (void *)(v13 + 24 * v10);
        v11[4] = a2;
        v11[5] = a3;
        v11[6] = v8;
        if (v5 == v6) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C9BEE3C8();
      swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
  }
}

void static FlowDelegatePluginLoader.sharedInstance.getter()
{
  if (qword_1EBC79EB8 != -1) {
    swift_once();
  }

  sub_1C9BEC838();
}

uint64_t sub_1C983A258()
{
  uint64_t v0 = sub_1C9BEA988();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v0, v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v3, qword_1EBC79EF8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC79EF8);
  id v6 = (id)MEMORY[0x1CB78BA10]();
  sub_1C9BED568();

  sub_1C9BEA908();
  swift_bridgeObjectRelease();
  sub_1C9BEA938();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v5, v0);
}

uint64_t sub_1C983A3A0()
{
  uint64_t v0 = sub_1C9BED348();
  __swift_allocate_value_buffer(v0, qword_1EA58E5A8);
  *(void *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA58E5A8) = 2500;
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)(v0 - 8) + 104);

  return v1();
}

uint64_t (*sub_1C983A430())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C983A478()
{
  int v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 != 2) {
    return v1 & 1;
  }
  if (qword_1EBC78730 != -1) {
    swift_once();
  }
  uint64_t result = 1;
  *(unsigned char *)(v0 + 112) = 1;
  return result;
}

uint64_t sub_1C983A4D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C9BEA988();
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  MEMORY[0x1F4188790](v6 - 8, v7);
  unint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  *(_OWORD *)(v0 + 56) = 0u;
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 104) = dispatch_semaphore_create(1);
  *(unsigned char *)(v0 + 112) = 2;
  sub_1C977D3EC();
  if (qword_1EBC79F40 != -1) {
    swift_once();
  }
  unint64_t v10 = (char *)__swift_project_value_buffer(v2, (uint64_t)qword_1EBC79EF8);
  static FlowDelegatePluginLoader.getSystemPluginCachePathURL()();
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v2);
  sub_1C983ACCC(v10, (uint64_t)v9, v23);
  sub_1C9845E7C((uint64_t)v9, qword_1EBC7A190);
  long long v11 = v23[1];
  *(_OWORD *)(v0 + 16) = v23[0];
  *(_OWORD *)(v0 + 32) = v11;
  *(void *)(v0 + 48) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC74518);
  *(void *)(v0 + 96) = sub_1C9BED458();
  id v12 = objc_msgSend(self, sel_processInfo);
  id v13 = objc_msgSend(v12, sel_environment);

  uint64_t v14 = sub_1C9BED428();
  sub_1C9606628(0xD000000000000021, 0x80000001C9C1E260, v14);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_1C9BEA908();
    swift_bridgeObjectRelease();
    sub_1C984DCB8((uint64_t)v5, v25);
    uint64_t v17 = v25[0];
    uint64_t v18 = v25[1];
    long long v22 = v26;
    uint64_t v19 = v27;
    swift_beginAccess();
    uint64_t v20 = *(void *)(v1 + 56);
    *(void *)(v1 + 56) = v17;
    *(void *)(v1 + 64) = v18;
    *(_OWORD *)(v1 + 72) = v22;
    *(void *)(v1 + 88) = v19;
    sub_1C9845548(v20);
  }
  return v1;
}

#error "1C983AC54: call analysis failed (funcsize=293)"

uint64_t sub_1C983ACCC@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8, v6);
  unint64_t v9 = (char *)&v34[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v10);
  id v12 = (char *)&v34[-1] - v11;
  uint64_t v13 = sub_1C9BEA988();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13, v15);
  uint64_t v18 = (char *)&v34[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v16, v19);
  long long v22 = (char *)&v34[-1] - v21;
  MEMORY[0x1F4188790](v20, v23);
  uint64_t v25 = (char *)&v34[-1] - v24;
  sub_1C95FE5B0(a2, (uint64_t)v12, qword_1EBC7A190);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13) == 1)
  {
    sub_1C9845E7C((uint64_t)v12, qword_1EBC7A190);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v33, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v25, v12, v13);
    long long v26 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v26(v22, v25, v13);
    sub_1C984E69C((uint64_t)v22, v34);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v25, v13);
    uint64_t result = sub_1C9845EC8((uint64_t)v34, (uint64_t)v38);
    if (v38[0])
    {
      uint64_t v28 = v38[1];
      uint64_t v29 = v38[2];
      uint64_t v30 = v38;
      uint64_t v32 = v38[3];
      uint64_t v31 = v38[4];
      goto LABEL_10;
    }
    v26(v22, v33, v13);
  }
  sub_1C984DCB8((uint64_t)v22, v35);
  sub_1C95FE5B0(a2, (uint64_t)v9, qword_1EBC7A190);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v13) == 1)
  {
    uint64_t result = sub_1C9845E7C((uint64_t)v9, qword_1EBC7A190);
    uint64_t v32 = v36;
    uint64_t v31 = v37;
    uint64_t v30 = v35;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v9, v13);
    uint64_t v30 = v35;
    sub_1C984F294();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    uint64_t v32 = v36;
    uint64_t v31 = v37;
  }
  uint64_t v28 = v35[1];
  uint64_t v29 = v35[2];
LABEL_10:
  *a3 = *v30;
  a3[1] = v28;
  a3[2] = v29;
  a3[3] = v32;
  a3[4] = v31;
  return result;
}

BOOL sub_1C983AFD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(sub_1C983EA20(a1) + 16);
  swift_bridgeObjectRelease();
  return v1 != 0;
}

uint64_t sub_1C983B008()
{
  return sub_1C983B018();
}

uint64_t sub_1C983B018()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5C0);
  uint64_t v2 = OUTLINED_FUNCTION_22(v1);
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_34_0();
  sub_1C983B100();
  uint64_t v4 = type metadata accessor for LoadedFlowInfo(0);
  if (__swift_getEnumTagSinglePayload(v0, 1, v4) != 1) {
    sub_1C9BEC838();
  }
  sub_1C9845E7C(v0, &qword_1EA58E5C0);
  return 0;
}

void sub_1C983B100()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v4 = v3;
  uint64_t v125 = v5;
  uint64_t v124 = v6;
  uint64_t v117 = v7;
  uint64_t v131 = v1;
  OUTLINED_FUNCTION_4_0();
  uint64_t v127 = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC762A0);
  uint64_t v10 = OUTLINED_FUNCTION_22(v9);
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_33_0();
  uint64_t v115 = v12;
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76298);
  OUTLINED_FUNCTION_0();
  uint64_t v118 = v13;
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_33_0();
  uint64_t v120 = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC75838);
  uint64_t v18 = OUTLINED_FUNCTION_22(v17);
  MEMORY[0x1F4188790](v18, v19);
  OUTLINED_FUNCTION_33_0();
  uint64_t v123 = v20;
  uint64_t v129 = type metadata accessor for NamedParseTransformer();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v21, v22);
  OUTLINED_FUNCTION_33_0();
  uint64_t v128 = v23;
  uint64_t v130 = type metadata accessor for FlowSearchResult();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v24, v25);
  OUTLINED_FUNCTION_33_0();
  unint64_t v132 = v26;
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA58AE50);
  OUTLINED_FUNCTION_0();
  v133._rawValue = v27;
  MEMORY[0x1F4188790](v28, v29);
  OUTLINED_FUNCTION_68_0();
  uint64_t v32 = v30 - v31;
  MEMORY[0x1F4188790](v33, v34);
  uint64_t v36 = (char *)v108 - v35;
  uint64_t v122 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0();
  uint64_t v38 = v37;
  MEMORY[0x1F4188790](v39, v40);
  OUTLINED_FUNCTION_221();
  uint64_t v41 = type metadata accessor for Parse(0);
  uint64_t v42 = OUTLINED_FUNCTION_22(v41);
  MEMORY[0x1F4188790](v42, v43);
  OUTLINED_FUNCTION_68_0();
  uint64_t v119 = v44 - v45;
  uint64_t v48 = MEMORY[0x1F4188790](v46, v47);
  char v50 = (char *)v108 - v49;
  MEMORY[0x1F4188790](v48, v51);
  uint64_t v53 = (char *)v108 - v52;
  uint64_t v54 = (int *)type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v55, v56);
  OUTLINED_FUNCTION_34_0();
  sub_1C97D1F40(v4, (uint64_t)v53);
  OUTLINED_FUNCTION_19_30(v0 + v54[7]);
  uint64_t v57 = v0 + v54[5];
  sub_1C97D1F40((uint64_t)v53, v57);
  *(void *)(v0 + v54[6]) = MEMORY[0x1E4FBC860];
  sub_1C9BEAAF8();
  int v116 = v53;
  sub_1C9845D60((uint64_t)v53, (void (*)(void))type metadata accessor for Parse);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32);
  uint64_t v111 = v2;
  uint64_t v112 = v38 + 32;
  v108[2] = v58;
  v58(v0, v2, v122);
  int v110 = v54;
  *(unsigned char *)(v0 + v54[8]) = 0;
  uint64_t v59 = sub_1C983EA20(v57);
  uint64_t v137 = v0;
  uint64_t v60 = sub_1C972A710((void (*)(void *))sub_1C9845528, (uint64_t)&v136, v59);
  swift_bridgeObjectRelease();
  uint64_t v109 = v0;
  sub_1C9845D60(v0, (void (*)(void))type metadata accessor for Input);
  uint64_t v135 = 0;
  uint64_t v146 = v60;
  v144[5] = MEMORY[0x1E4FBC870];
  uint64_t v145 = MEMORY[0x1E4FBC870];
  long long v126 = v132 + 1;
  uint64_t v114 = v118 + 32;
  v118 += 8;
  while (1)
  {
    if (!*(void *)(v146 + 16))
    {
LABEL_23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_1C9BECF88();
      __swift_project_value_buffer(v83, (uint64_t)qword_1EBC7A520);
      long long v84 = (void *)sub_1C9BECF78();
      os_log_type_t v85 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_4(v85))
      {
        unint64_t v86 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v86);
        OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v87, v88, "Failed to find a viable Flow plugin; giving up");
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v89 = type metadata accessor for LoadedFlowInfo(0);
      __swift_storeEnumTagSinglePayload(v117, 1, 1, v89);
      goto LABEL_28;
    }
    uint64_t v61 = v146
        + ((*((unsigned __int8 *)v133._rawValue + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v133._rawValue
                                                                                   + 80));
    sub_1C95FE5B0(v61, (uint64_t)v36, (uint64_t *)&unk_1EA58AE50);
    uint64_t v62 = v134;
    uint64_t v63 = (uint64_t *)&v36[*(int *)(v134 + 48)];
    uint64_t v64 = *v63;
    uint64_t v65 = v63[1];
    uint64_t v66 = (void *)v63[2];
    sub_1C960B448((uint64_t)v36, (uint64_t)v50, (void (*)(void))type metadata accessor for Parse);
    sub_1C95FE5B0(v61, v32, (uint64_t *)&unk_1EA58AE50);
    sub_1C9845068(0, 1);
    uint64_t v67 = v32 + *(int *)(v62 + 48);
    swift_bridgeObjectRelease();

    sub_1C9845D60(v32, (void (*)(void))type metadata accessor for Parse);
    swift_bridgeObjectRetain();
    id v68 = v66;
    LOBYTE(v64) = sub_1C984051C(v144, v64, v65, v68);
    swift_bridgeObjectRelease();

    if ((v64 & 1) == 0)
    {
      sub_1C9845D60((uint64_t)v50, (void (*)(void))type metadata accessor for Parse);

      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    uint64_t v69 = (uint64_t)v50;
    uint64_t v70 = v145;
    id v71 = v68;
    swift_bridgeObjectRetain();
    char v72 = sub_1C97E9204(v71, v70);
    swift_bridgeObjectRelease();
    if ((v72 & 1) == 0) {
      break;
    }
    char v50 = (char *)v69;
    sub_1C9845D60(v69, (void (*)(void))type metadata accessor for Parse);
    swift_bridgeObjectRelease();

LABEL_22:
    if (v135 >= 10) {
      goto LABEL_23;
    }
  }
  ++v135;
  sub_1C983DDE4();
  if (!v142)
  {
    char v50 = (char *)v69;
    sub_1C9845D60(v69, (void (*)(void))type metadata accessor for Parse);
    swift_bridgeObjectRelease();

    sub_1C9845E7C((uint64_t)&v141, &qword_1EBC74520);
    goto LABEL_22;
  }
  sub_1C95FD5D8(&v141, (uint64_t)v144);
  unint64_t v73 = v132;
  sub_1C983C574(v69, v144, v132);
  if (*v73) {
    sub_1C9BEC838();
  }
  sub_1C95FE5B0((uint64_t)v126, (uint64_t)&v138, &qword_1EBC77350);
  if (!v139)
  {
    sub_1C9845E7C((uint64_t)&v138, &qword_1EBC77350);
    if (*((unsigned char *)v132 + *(int *)(v130 + 28)) == 1)
    {
      sub_1C9840280(&v141, v71);
    }
    uint64_t v74 = v123;
    sub_1C95FE5B0((uint64_t)v132 + *(int *)(v130 + 24), v123, &qword_1EBC75838);
    if (__swift_getEnumTagSinglePayload(v74, 1, v129) != 1)
    {
      sub_1C960B448(v74, v128, (void (*)(void))type metadata accessor for NamedParseTransformer);
      if (qword_1EBC78E28 != -1) {
        swift_once();
      }
      id v113 = v71;
      id v82 = objc_msgSend(v71, sel_bundlePath);
      sub_1C9BED568();

      OUTLINED_FUNCTION_9_30();
      sub_1C97CB324();
      swift_bridgeObjectRelease();
      NamedParseTransformer.resolve()();
    }
    char v50 = (char *)v69;
    uint64_t v75 = OUTLINED_FUNCTION_33_1();
    sub_1C9845E7C(v75, v76);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v77 = sub_1C9BECF88();
    __swift_project_value_buffer(v77, (uint64_t)qword_1EBC7A520);
    unsigned int v78 = sub_1C9BECF78();
    os_log_type_t v79 = sub_1C9BEDC68();
    if (OUTLINED_FUNCTION_123_0(v79))
    {
      int v80 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)int v80 = 0;
      _os_log_impl(&dword_1C95F9000, v78, OS_LOG_TYPE_DEFAULT, "Plugin rejected flow for which it registered; still looking.",
        v80,
        2u);
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v81 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_21(v81, (void (*)(void))type metadata accessor for FlowSearchResult);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
    sub_1C9845D60(v69, (void (*)(void))type metadata accessor for Parse);
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C95FD5D8(&v138, (uint64_t)&v141);
  id v90 = OUTLINED_FUNCTION_45_10();
  sub_1C9BED568();

  OUTLINED_FUNCTION_3_0();
  uint64_t v91 = sub_1C984E5DC();
  uint64_t v92 = OUTLINED_FUNCTION_54_12(v91);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v93 = (void *)MEMORY[0x1E4FBC860];
  if (v92) {
    uint64_t v93 = (void *)v92;
  }
  v133._rawValue = v93;
  uint64_t v134 = v143;
  __swift_project_boxed_opaque_existential_1(&v141, v142);
  uint64_t v135 = (uint64_t)v108;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v94, v95);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t))(v96 + 16))(v98 - v97);
  uint64_t v99 = v69;
  sub_1C97D1F40(v69, (uint64_t)v116);
  Parse.usoTasks.getter();
  id v100 = OUTLINED_FUNCTION_45_10();
  uint64_t v101 = sub_1C9BED568();
  char v103 = v102;

  unsigned int v139 = &type metadata for FlowPluginBundleImpl;
  int v140 = &protocol witness table for FlowPluginBundleImpl;
  v104._uint64_t countAndFlagsBits = v101;
  v104._object = v103;
  FlowPluginBundleImpl.init(bundlePath:pluginCacheKeys:)(v104, v133);
  uint64_t v105 = v117;
  LoadedFlowInfo.init<A>(actingFlow:parse:activeTasks:fromBundle:)();
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_23_21(v106, (void (*)(void))type metadata accessor for FlowSearchResult);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v144);
  sub_1C9845D60(v99, (void (*)(void))type metadata accessor for Parse);
  uint64_t v107 = type metadata accessor for LoadedFlowInfo(0);
  __swift_storeEnumTagSinglePayload(v105, 0, 1, v107);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
LABEL_28:
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C983C574@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  sub_1C95FD5F0((uint64_t)a2, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC74518);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC74C48);
  if (!swift_dynamicCast())
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1C9845E7C((uint64_t)v12, &qword_1EBC74C50);
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, v9, v10);
    static FlowSearchResult.flow(_:)(v11, a3);
  }
  sub_1C95FD5D8(v12, (uint64_t)v15);
  uint64_t v6 = v16;
  uint64_t v7 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

id sub_1C983C6B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = (void *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA58AE50) + 48));
  uint64_t v9 = type metadata accessor for Input(0);
  sub_1C97D1F40(a2 + *(int *)(v9 + 20), a3);
  *uint64_t v8 = v6;
  v8[1] = v5;
  v8[2] = v7;
  swift_bridgeObjectRetain();
  return v7;
}

double sub_1C983C740@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 1);
  char v4 = *(unsigned char *)(a1 + 56);
  v11[0] = *(unsigned char *)a1;
  v11[1] = v3;
  long long v12 = *(_OWORD *)(a1 + 8);
  long long v13 = *(_OWORD *)(a1 + 24);
  long long v14 = *(_OWORD *)(a1 + 40);
  char v15 = v4;
  uint64_t v5 = (void *)IntentTopic.makeCacheKeyAndWildcardFallbacks()();
  uint64_t v6 = sub_1C983EC08(v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    uint64_t v7 = *(void **)(v6 + 48);
    swift_bridgeObjectRetain();
    id v8 = v7;
    swift_bridgeObjectRelease();
    id v9 = v8;
    sub_1C983DDE4();

    swift_bridgeObjectRelease();
    if ((void)v13)
    {
      sub_1C95FD5D8((long long *)v11, a2);
      return result;
    }
    sub_1C9845E7C((uint64_t)v11, &qword_1EBC74520);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1C983C854(uint64_t a1)
{
  OUTLINED_FUNCTION_4_0();
  char v3 = (void *)sub_1C983EA20(v2);
  if (!v3[2])
  {
    swift_bridgeObjectRelease();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C9BECF88();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
    long long v14 = (void *)sub_1C9BECF78();
    os_log_type_t v15 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_81_2(v15))
    {
      uint64_t v16 = (_DWORD *)OUTLINED_FUNCTION_67();
      v29[0] = OUTLINED_FUNCTION_35_0();
      *uint64_t v16 = 136315138;
      sub_1C95FF228(4999502, 0xE300000000000000, v29);
      OUTLINED_FUNCTION_41_11();
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_13_38(&dword_1C95F9000, v17, v18, "FlowDelegatePluginLoader.makeFlowFrame no bundle : %s");
      OUTLINED_FUNCTION_32_20();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    return 0;
  }
  uint64_t v5 = v3[4];
  unint64_t v4 = v3[5];
  uint64_t v6 = (void *)v3[6];
  swift_bridgeObjectRetain();
  id v7 = v6;
  swift_bridgeObjectRelease();
  id v8 = v7;
  sub_1C983DDE4();
  if (!v28)
  {
    sub_1C9845E7C((uint64_t)&v27, &qword_1EBC74520);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C9BECF88();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    id v20 = v8;
    uint64_t v21 = (void *)sub_1C9BECF78();
    os_log_type_t v22 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v22))
    {
      uint64_t v23 = (_DWORD *)OUTLINED_FUNCTION_67();
      v29[0] = OUTLINED_FUNCTION_35_0();
      *uint64_t v23 = 136315138;
      swift_bridgeObjectRetain();
      sub_1C95FF228(v5, v4, v29);
      OUTLINED_FUNCTION_41_11();
      sub_1C9BEDF68();

      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_25(&dword_1C95F9000, v24, v25, "FlowDelegatePluginLoader.makeFlowFrame no provider : %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  sub_1C95FD5D8(&v27, (uint64_t)v29);
  uint64_t v9 = sub_1C983CC40(v29, a1);
  if (!v9)
  {
    uint64_t v10 = v30;
    uint64_t v11 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(a1, v10, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5C8);
    swift_allocObject();
    sub_1C983F590();
  }
  uint64_t v12 = v9;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return v12;
}

uint64_t sub_1C983CC40(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BED378();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  id v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Parse(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8, v12);
  uint64_t v13 = type metadata accessor for WithDispatchSemaphoreTimeout();
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v16 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEE438();
  if ((v29[0] & 1) == 0)
  {
    if (qword_1EA588068 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1C9BED348();
    uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EA58E5A8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v24, v23);
    sub_1C95FD5F0((uint64_t)a1, (uint64_t)v29);
    sub_1C97D1F40(a2, (uint64_t)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v25 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v26 = swift_allocObject();
    sub_1C95FD5D8(v29, v26 + 16);
    sub_1C960B448((uint64_t)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v26 + v25, (void (*)(void))type metadata accessor for Parse);
    sub_1C96044C4(0, (unint64_t *)&qword_1EBC76410);
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, *MEMORY[0x1E4FBCB28], v4);
    uint64_t v27 = sub_1C9BEDD48();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_1C983D1FC(v27, (uint64_t)sub_1C9845CEC, v26);
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C9BECF88();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
  uint64_t v18 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC88();
  if (os_log_type_enabled(v18, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    _os_log_impl(&dword_1C95F9000, v18, v19, "Calling deprecated FlowPlugin.makeFlowFrame function. Note the time out guard previously surrounding this call was removed due to risk of deadlock (see rdar://79777131). The runtime should no longer execute through this codepath.", v20, 2u);
    MEMORY[0x1CB78C440](v20, -1, -1);
  }

  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(a2, v21, v22);
}

uint64_t sub_1C983D13C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = sub_1C9BEDAF8();
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 1, v4);
  *a2 = result != 1;
  return result;
}

uint64_t sub_1C983D194@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a2, v5, v6);
  *a3 = result;
  return result;
}

void sub_1C983D1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  uint64_t v5 = sub_1C9BED3D8();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v22 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v21 = (char *)&v17 - v10;
  uint64_t v11 = sub_1C9BED368();
  uint64_t v19 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v18 = sub_1C9BED3B8();
  MEMORY[0x1F4188790](v18, v13);
  dispatch_semaphore_t v14 = dispatch_semaphore_create(0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1;
  uint64_t v17 = v15 + 16;
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v15;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = v14;
  aBlock[4] = sub_1C9845E38;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C9A68990;
  aBlock[3] = &block_descriptor_8;
  _Block_copy(aBlock);
  sub_1C9BEC838();
}

void sub_1C983D65C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_1EBC7A3B8 == -1) {
    goto LABEL_2;
  }
LABEL_56:
  swift_once();
LABEL_2:
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    char v3 = (uint8_t *)OUTLINED_FUNCTION_67();
    *(void *)&long long v41 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)char v3 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C95FF228(a1, a2, (uint64_t *)&v41);
    OUTLINED_FUNCTION_52_11();
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v6, v7, "%s being loaded...", v3, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if ((sub_1C983A478() & 1) == 0)
  {
    uint64_t v8 = sub_1C9BECF78();
    os_log_type_t v9 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_123_0(v9))
    {
      uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1C95F9000, v8, (os_log_type_t)v3, "Environment should be initialized by this point", v10, 2u);
      OUTLINED_FUNCTION_11_4();
    }
  }
  OUTLINED_FUNCTION_3_0();
  uint64_t v11 = sub_1C984E628();
  swift_endAccess();
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v36 = v11 + 64;
  uint64_t v39 = v11;
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v37 = (unint64_t)(v14 + 63) >> 6;
  if ((v15 & v13) != 0)
  {
LABEL_12:
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v18 = v17 | (v12 << 6);
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v19 >= v37) {
      goto LABEL_53;
    }
    unint64_t v20 = *(void *)(v36 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v37) {
        goto LABEL_53;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v37) {
          goto LABEL_53;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v12);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v37)
          {
LABEL_53:
            swift_release();
            goto LABEL_52;
          }
          unint64_t v20 = *(void *)(v36 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v12 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                break;
              }
              if (v12 >= v37) {
                goto LABEL_53;
              }
              unint64_t v20 = *(void *)(v36 + 8 * v12);
              ++v21;
              if (v20) {
                goto LABEL_26;
              }
            }
            __break(1u);
            return;
          }
          int64_t v12 = v21;
        }
      }
    }
LABEL_26:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_27:
    int64_t v38 = v12;
    unint64_t v22 = *(void *)(*(void *)(v39 + 56) + 8 * v18);
    if (!(v22 >> 62))
    {
      uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v23) {
        break;
      }
      goto LABEL_41;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v23) {
      break;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    int64_t v12 = v38;
    if (v16) {
      goto LABEL_12;
    }
  }
  char v3 = (uint8_t *)(v22 & 0xC000000000000001);
  uint64_t v24 = 4;
  while (1)
  {
    if (v3) {
      id v25 = (id)MEMORY[0x1CB78B3A0](v24 - 4, v22);
    }
    else {
      id v25 = *(id *)(v22 + 8 * v24);
    }
    uint64_t v26 = v25;
    uint64_t v27 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    uint64_t v28 = sub_1C98454C4(v25);
    if (!v29) {
      goto LABEL_40;
    }
    if (v28 == a1 && v29 == a2) {
      break;
    }
    char v31 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_46;
    }
LABEL_40:

    ++v24;
    if (v27 == v23) {
      goto LABEL_41;
    }
  }
  swift_bridgeObjectRelease();
LABEL_46:
  swift_bridgeObjectRelease();
  sub_1C983DDE4();
  if (v42)
  {

    swift_release();
    sub_1C95FD5D8(&v41, a3);
    return;
  }
  sub_1C9845E7C((uint64_t)&v41, &qword_1EBC74520);
  swift_bridgeObjectRetain_n();
  uint64_t v32 = sub_1C9BECF78();
  os_log_type_t v33 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_96(v33))
  {
    uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_67();
    *(void *)&long long v41 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v34 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C95FF228(a1, a2, (uint64_t *)&v41);
    OUTLINED_FUNCTION_52_11();
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v32, (os_log_type_t)v24, "Didn't find a bundle for input %s", v34, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
  }

LABEL_52:
  OUTLINED_FUNCTION_19_30(a3);
}

uint64_t sub_1C983DBF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C983D65C(a1, a2, (uint64_t)&v16);
  if (!v17) {
    return sub_1C9845E7C((uint64_t)&v16, &qword_1EBC74520);
  }
  sub_1C95FD5D8(&v16, (uint64_t)v18);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1C9BECF88();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1C9BECF78();
  os_log_type_t v11 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_123_0(v11))
  {
    int64_t v12 = (_DWORD *)OUTLINED_FUNCTION_67();
    *(void *)&long long v16 = OUTLINED_FUNCTION_35_0();
    *int64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C95FF228(a1, a2, (uint64_t *)&v16);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_103_1(&dword_1C95F9000, v10, v4, "%s being warmed...");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(a3, a4, v14, v15);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

void sub_1C983DDE4()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = sub_1C9BECEE8();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = v10 - v9;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C9BECF88();
  os_log_type_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBC7A520);
  uint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC78();
  if (os_log_type_enabled(v14, v15))
  {
    long long v16 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)long long v16 = 0;
    _os_log_impl(&dword_1C95F9000, v14, v15, "FlowDelegatePluginLoader.loadFlowPlugin begin", v16, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  sub_1C9BEDDC8();
  uint64_t v17 = sub_1C98454C4(v1);
  if (!v18)
  {
    uint64_t v24 = (void *)sub_1C9BECF78();
    os_log_type_t v25 = sub_1C9BEDC88();
    if (!OUTLINED_FUNCTION_4(v25))
    {
LABEL_37:

LABEL_38:
      *(void *)(v3 + 32) = 0;
      *(_OWORD *)uint64_t v3 = 0u;
      *(_OWORD *)(v3 + 16) = 0u;
      goto LABEL_39;
    }
    uint64_t v26 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v26);
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v27, v28, "Bundle has no bundleIdentifier?");
LABEL_36:
    OUTLINED_FUNCTION_11_4();
    goto LABEL_37;
  }
  unint64_t v19 = v18;
  uint64_t v102 = v11;
  uint64_t v103 = v4;
  uint64_t v106 = v17;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1C9BECF78();
  os_log_type_t v21 = sub_1C9BEDC78();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v104 = v3;
    unint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_67();
    *(void *)&long long v109 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)unint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C95FF228(v106, v19, (uint64_t *)&v109);
    OUTLINED_FUNCTION_84_2(v23);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v20, v21, "FlowDelegatePluginLoader.loadFlowPlugin %s", v22, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v3 = v104;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C9606670();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v108)
  {
    sub_1C95FD5D8(&v107, (uint64_t)&v109);
    swift_bridgeObjectRetain();
    uint64_t v29 = (void *)sub_1C9BECF78();
    os_log_type_t v30 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_81_2(v30))
    {
      char v31 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v107 = OUTLINED_FUNCTION_35_0();
      *char v31 = 136315138;
      swift_bridgeObjectRetain();
      sub_1C95FF228(v106, v19, (uint64_t *)&v107);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_13_38(&dword_1C95F9000, v32, v33, "FlowDelegatePluginLoader.loadFlowPlugin found flowPlugin %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C95FD5D8(&v109, v3);
    goto LABEL_39;
  }
  sub_1C9845E7C((uint64_t)&v107, &qword_1EBC74520);
  if (objc_msgSend(v1, sel_isLoaded))
  {
LABEL_28:
    if (objc_msgSend(v1, sel_principalClass))
    {
      uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
      uint64_t v81 = dynamic_cast_existential_1_conditional(ObjCClassMetadata);
      if (v81)
      {
        uint64_t v83 = *(void (**)(uint64_t))(v82 + 8);
        uint64_t v110 = v81;
        uint64_t v111 = v82;
        __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v109);
        uint64_t v84 = OUTLINED_FUNCTION_33_1();
        v83(v84);
        sub_1C95FD5F0((uint64_t)&v109, (uint64_t)&v107);
        OUTLINED_FUNCTION_3_0();
        sub_1C9803D34();
        swift_endAccess();
        sub_1C95FD5F0((uint64_t)&v109, v3);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
        goto LABEL_39;
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)sub_1C9BECF78();
      os_log_type_t v97 = sub_1C9BEDC88();
      if (!OUTLINED_FUNCTION_81_2(v97)) {
        goto LABEL_37;
      }
      uint64_t v98 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v109 = OUTLINED_FUNCTION_35_0();
      _DWORD *v98 = 136315138;
      *(void *)&long long v107 = ObjCClassMetadata;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA58AE60);
      uint64_t v99 = sub_1C9BED5D8();
      *(void *)&long long v107 = sub_1C95FF228(v99, v100, (uint64_t *)&v109);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      uint64_t v96 = "Could not cast class %s as FlowPlugin";
    }
    else
    {
      swift_bridgeObjectRelease();
      id v85 = v1;
      uint64_t v24 = (void *)sub_1C9BECF78();
      os_log_type_t v86 = sub_1C9BEDC88();
      if (!OUTLINED_FUNCTION_81_2(v86))
      {

        goto LABEL_38;
      }
      uint64_t v87 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v109 = OUTLINED_FUNCTION_35_0();
      *uint64_t v87 = 136315138;
      uint64_t v88 = v3;
      id v89 = objc_msgSend(v85, sel_bundlePath);
      uint64_t v90 = sub_1C9BED568();
      unint64_t v92 = v91;

      uint64_t v3 = v88;
      uint64_t v93 = sub_1C95FF228(v90, v92, (uint64_t *)&v109);
      OUTLINED_FUNCTION_84_2(v93);
      sub_1C9BEDF68();

      swift_bridgeObjectRelease();
      uint64_t v96 = "No principal class found in bundle %s";
    }
    OUTLINED_FUNCTION_13_38(&dword_1C95F9000, v94, v95, v96);
    OUTLINED_FUNCTION_32_20();
    OUTLINED_FUNCTION_11_4();
    goto LABEL_36;
  }
  uint64_t v34 = (void *)sub_1C9BECF78();
  os_log_type_t v35 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_4(v35))
  {
    uint64_t v36 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v36);
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v37, v38, "FlowDelegatePluginLoader.loadFlowPlugin bundle is not loaded");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v105 = v3;

  sub_1C9BEDD88();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C9BEF570;
  id v40 = objc_msgSend(v1, sel_bundlePath);
  uint64_t v41 = sub_1C9BED568();
  uint64_t v101 = v1;
  uint64_t v43 = v42;

  *(void *)(v39 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v44 = sub_1C9604B38();
  *(void *)(v39 + 64) = v44;
  *(void *)(v39 + 32) = v41;
  *(void *)(v39 + 40) = v43;
  sub_1C9BECED8();
  OUTLINED_FUNCTION_27_18();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v45(v102, v103);
  if (objc_msgSend(v101, sel_load))
  {
    sub_1C9BEDD78();
    uint64_t v46 = OUTLINED_FUNCTION_55_10();
    *(_OWORD *)(v46 + 16) = xmmword_1C9BF0BB0;
    id v47 = objc_msgSend(v101, (SEL)&off_1E65A0418);
    uint64_t v48 = sub_1C9BED568();
    uint64_t v50 = v49;

    uint64_t v51 = MEMORY[0x1E4FBB1A0];
    *(void *)(v46 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v46 + 64) = v44;
    *(void *)(v46 + 32) = v48;
    *(void *)(v46 + 40) = v50;
    uint64_t v1 = v101;
    *(void *)(v46 + 96) = v51;
    *(void *)(v46 + 104) = v44;
    *(void *)(v46 + 72) = 0x73736563637553;
    *(void *)(v46 + 80) = 0xE700000000000000;
    sub_1C9BECED8();
    OUTLINED_FUNCTION_39_14();
    OUTLINED_FUNCTION_27_18();
    swift_bridgeObjectRelease();
    uint64_t v52 = OUTLINED_FUNCTION_46_12();
    ((void (*)(uint64_t))v45)(v52);
    id v53 = v101;
    uint64_t v54 = sub_1C9BECF78();
    os_log_type_t v55 = sub_1C9BEDCA8();
    if (OUTLINED_FUNCTION_4(v55))
    {
      uint64_t v56 = (uint8_t *)OUTLINED_FUNCTION_67();
      *(void *)&long long v109 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v56 = 136315138;
      id v57 = objc_msgSend(v53, sel_bundlePath);
      uint64_t v58 = sub_1C9BED568();
      unint64_t v60 = v59;

      uint64_t v1 = v101;
      uint64_t v61 = sub_1C95FF228(v58, v60, (uint64_t *)&v109);
      OUTLINED_FUNCTION_84_2(v61);
      sub_1C9BEDF68();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v54, v13, "Loaded bundle at path %s", v56, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
    }
    uint64_t v3 = v105;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  sub_1C9BEDD78();
  uint64_t v62 = OUTLINED_FUNCTION_55_10();
  *(_OWORD *)(v62 + 16) = xmmword_1C9BF0BB0;
  id v63 = objc_msgSend(v101, (SEL)&off_1E65A0418);
  uint64_t v64 = sub_1C9BED568();
  uint64_t v66 = v65;

  uint64_t v67 = MEMORY[0x1E4FBB1A0];
  *(void *)(v62 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v62 + 64) = v44;
  *(void *)(v62 + 32) = v64;
  *(void *)(v62 + 40) = v66;
  *(void *)(v62 + 96) = v67;
  *(void *)(v62 + 104) = v44;
  *(void *)(v62 + 72) = 0x6572756C696146;
  *(void *)(v62 + 80) = 0xE700000000000000;
  sub_1C9BECED8();
  OUTLINED_FUNCTION_39_14();
  OUTLINED_FUNCTION_27_18();
  swift_bridgeObjectRelease();
  uint64_t v68 = OUTLINED_FUNCTION_46_12();
  ((void (*)(uint64_t))v45)(v68);
  id v69 = v101;
  uint64_t v70 = (void *)sub_1C9BECF78();
  os_log_type_t v71 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_81_2(v71))
  {
    char v72 = (_DWORD *)OUTLINED_FUNCTION_67();
    *(void *)&long long v109 = OUTLINED_FUNCTION_35_0();
    *char v72 = 136315138;
    id v73 = objc_msgSend(v69, sel_bundlePath);
    uint64_t v74 = sub_1C9BED568();
    unint64_t v76 = v75;

    uint64_t v77 = sub_1C95FF228(v74, v76, (uint64_t *)&v109);
    OUTLINED_FUNCTION_84_2(v77);
    sub_1C9BEDF68();

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_13_38(&dword_1C95F9000, v78, v79, "Failed to load bundle at path %s. To see the root cause, check the full assistant_service logs with --predicate 'process == \"assistant_service\"'");
    OUTLINED_FUNCTION_32_20();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  OUTLINED_FUNCTION_19_30(v105);
LABEL_39:
  sub_1C9BEDDD8();
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C983EA20(uint64_t a1)
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = v5 - v4;
  sub_1C97D1F40(a1, v5 - v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1C9845D60(v6, (void (*)(void))type metadata accessor for Parse);
  if (EnumCaseMultiPayload == 10)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C9BECF88();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
    uint64_t v9 = (void *)sub_1C9BECF78();
    os_log_type_t v10 = sub_1C9BEDC68();
    if (OUTLINED_FUNCTION_4(v10))
    {
      uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v11);
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v12, v13, "Got empty parse; returning no KeyAndBundles.");
      OUTLINED_FUNCTION_11_4();
    }

    return MEMORY[0x1E4FBC860];
  }
  else
  {
    static IntentTopic.make(from:)();
    uint64_t v20 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = v15 + 56;
      do
      {
        v17 += 64;
        IntentTopic.makeCacheKeyAndWildcardFallbacks()();
        sub_1C965F860();
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      unint64_t v18 = v20;
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v14 = sub_1C983EC08(v18);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1C983EC08(void *a1)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  os_log_type_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC78();
  if (os_log_type_enabled(v4, v5))
  {
    *(_DWORD *)OUTLINED_FUNCTION_67() = 134217984;
    OUTLINED_FUNCTION_47_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_103_1(&dword_1C95F9000, v4, v5, "cacheKeys count %ld");
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v7 = a1[2];
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 5;
    uint64_t v9 = v7;
    do
    {
      uint64_t v10 = *v8;
      v25[0] = *(v8 - 1);
      v25[1] = v10;
      swift_bridgeObjectRetain();
      sub_1C983EFA8(v25, &v24);
      v8 += 2;
      swift_bridgeObjectRelease();
      sub_1C965FB20();
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v6 = v26;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C9BECF78();
  os_log_type_t v12 = sub_1C9BEDC78();
  if (os_log_type_enabled(v11, v12))
  {
    *(_DWORD *)OUTLINED_FUNCTION_67() = 134217984;
    OUTLINED_FUNCTION_47_12();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_103_1(&dword_1C95F9000, v11, v12, "Found %ld eligible bundles.");
    OUTLINED_FUNCTION_11_4();

    if (!v7) {
      return v6;
    }
  }
  else
  {

    swift_bridgeObjectRelease();
    if (!v7) {
      return v6;
    }
  }
  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_1C9BECF78();
    os_log_type_t v14 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_96(v14))
    {
      uint64_t v15 = (_DWORD *)OUTLINED_FUNCTION_67();
      v25[0] = OUTLINED_FUNCTION_35_0();
      *uint64_t v15 = 136315138;
      uint64_t v17 = a1[4];
      unint64_t v16 = a1[5];
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_1C95FF228(v17, v16, v25);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_25(&dword_1C95F9000, v18, v19, "Didn't find a bundle for input %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v20 = sub_1C9BECF78();
    os_log_type_t v21 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_4(v21))
    {
      unint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)unint64_t v22 = 0;
      OUTLINED_FUNCTION_11_4();
    }
  }
  return v6;
}

uint64_t sub_1C983EFA8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = a2;
    uint64_t v10 = swift_slowAlloc();
    v21[0] = v10;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1C95FF228(v3, v4, v21);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v6, v7, "Searching bundleCache for '%s'", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v11 = v10;
    a2 = v9;
    MEMORY[0x1CB78C440](v11, -1, -1);
    MEMORY[0x1CB78C440](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v12 = sub_1C983A430();
  if (!*v13)
  {
    ((void (*)(uint64_t *, void))v12)(v21, 0);
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x1E4FBC860];
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C984E628();
  uint64_t v15 = sub_1C9606790(v3, v4, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t *, void))v12)(v21, 0);
  if (!v15) {
    goto LABEL_10;
  }
LABEL_11:
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C984E628();
  sub_1C9606790(v3, v4, v16);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21[0] = v15;
  sub_1C965F94C();
  unint64_t v17 = v21[0];
  swift_bridgeObjectRetain();
  sub_1C983A078(v17, v3, v4);
  uint64_t v19 = v18;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v19;
  return result;
}

void sub_1C983F2C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();
  swift_bridgeObjectRelease();
  id v5 = a4;
  sub_1C9BEDE78();
}

uint64_t sub_1C983F348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5 = a1 == a4 && a2 == a5;
  if (!v5 && (sub_1C9BEE618() & 1) == 0) {
    return 0;
  }
  sub_1C96044C4(0, (unint64_t *)&qword_1EBC764A0);
  OUTLINED_FUNCTION_33_1();
  return sub_1C9BEDE68() & 1;
}

uint64_t sub_1C983F3C0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C9BEE738();
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();
  swift_bridgeObjectRelease();
  id v4 = a3;
  sub_1C9BEDE78();

  return sub_1C9BEE768();
}

uint64_t sub_1C983F440()
{
  return sub_1C983F3C0(*(void *)v0, *(void *)(v0 + 8), *(void **)(v0 + 16));
}

void sub_1C983F44C(uint64_t a1)
{
  sub_1C983F2C0(a1, *(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16));
}

uint64_t sub_1C983F458()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1C9BEE738();
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();
  swift_bridgeObjectRelease();
  id v2 = v1;
  sub_1C9BEDE78();

  return sub_1C9BEE768();
}

uint64_t sub_1C983F4D0(uint64_t *a1, uint64_t *a2)
{
  return sub_1C983F348(*a1, a1[1], a1[2], *a2, a2[1]);
}

uint64_t FlowDelegatePluginLoader.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C9845548(*(void *)(v0 + 56));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t FlowDelegatePluginLoader.__deallocating_deinit()
{
  FlowDelegatePluginLoader.deinit();

  return swift_deallocClassInstance();
}

void sub_1C983F590()
{
  OUTLINED_FUNCTION_25_16();
  *(void *)(v0 + 48) = v1;
  swift_retain_n();
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_14();
  swift_bridgeObjectRetain();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  uint64_t v2 = swift_release();
  OUTLINED_FUNCTION_40_12(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, 0, 0xE000000000000000);
}

void sub_1C983F6A8()
{
}

uint64_t sub_1C983F7FC(uint64_t a1, void (*a2)(void *__return_ptr))
{
  a2(v6);
  uint64_t v3 = v6[0];
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v3;
  sub_1C9845E6C(v4);
  return sub_1C9BEDDD8();
}

uint64_t sub_1C983F870(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4 = *v2;
  sub_1C9BEE738();
  swift_bridgeObjectRetain();
  IntentTopic.hash(into:)();
  uint64_t v5 = sub_1C9BEE768();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v65 = v4 + 56;
  id v53 = a2;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_80:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v68 = *v51;
    *uint64_t v51 = 0x8000000000000000;
    sub_1C98458AC((uint64_t)v53);
    sub_1C9842124((uint64_t)v53, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v51 = v68;
    swift_bridgeObjectRelease();
    long long v41 = v53[1];
    *(_OWORD *)a1 = *v53;
    *(_OWORD *)(a1 + 16) = v41;
    *(_OWORD *)(a1 + 32) = v53[2];
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)v53 + 41);
    return 1;
  }
  uint64_t v61 = ~v6;
  uint64_t v63 = *a2;
  uint64_t v57 = *((void *)a2 + 1);
  uint64_t v58 = *((void *)a2 + 2);
  uint64_t v55 = *((void *)a2 + 3);
  uint64_t v56 = *((void *)a2 + 4);
  uint64_t v50 = *((void *)a2 + 5);
  uint64_t v54 = *((void *)a2 + 6);
  if (a2[1]) {
    uint64_t v8 = 1701736302;
  }
  else {
    uint64_t v8 = 0x33764F5355;
  }
  unint64_t v9 = 0xE500000000000000;
  if (a2[1]) {
    unint64_t v9 = 0xE400000000000000;
  }
  unint64_t v59 = v9;
  uint64_t v60 = v8;
  uint64_t v62 = v4;
  while (1)
  {
    unint64_t v10 = *(void *)(v4 + 48) + (v7 << 6);
    int v11 = *(unsigned __int8 *)(v10 + 1);
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t v67 = *(void *)(v10 + 16);
    uint64_t v13 = *(void *)(v10 + 24);
    uint64_t v14 = *(void *)(v10 + 32);
    uint64_t v16 = *(void *)(v10 + 40);
    uint64_t v15 = *(void *)(v10 + 48);
    unint64_t v17 = 0xE400000000000000;
    unint64_t v18 = 863390798;
    switch(*(unsigned char *)v10)
    {
      case 1:
        unint64_t v18 = 880168014;
        break;
      case 2:
        unint64_t v18 = 1885430133;
        break;
      case 3:
        unint64_t v18 = 0x4974694B69726973;
        unint64_t v17 = 0xED0000746E65746ELL;
        break;
      case 4:
        uint64_t v19 = "pp";
        goto LABEL_14;
      case 5:
        uint64_t v19 = "directInvocation";
LABEL_14:
        unint64_t v17 = (unint64_t)v19 | 0x8000000000000000;
        unint64_t v18 = 0xD000000000000010;
        break;
      case 6:
        unint64_t v17 = 0xE800000000000000;
        unint64_t v18 = 0x726574756F526C6ELL;
        break;
      case 7:
        unint64_t v18 = 0x746E65696C436669;
        unint64_t v17 = 0xEE006E6F69746341;
        break;
      case 8:
        unint64_t v17 = 0xE700000000000000;
        unint64_t v18 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    unint64_t v20 = 0xE400000000000000;
    unint64_t v21 = 863390798;
    switch(v63)
    {
      case 1:
        unint64_t v21 = 880168014;
        break;
      case 2:
        unint64_t v21 = 1885430133;
        break;
      case 3:
        unint64_t v21 = 0x4974694B69726973;
        unint64_t v20 = 0xED0000746E65746ELL;
        break;
      case 4:
        unint64_t v22 = "pp";
        goto LABEL_24;
      case 5:
        unint64_t v22 = "directInvocation";
LABEL_24:
        unint64_t v20 = (unint64_t)v22 | 0x8000000000000000;
        unint64_t v21 = 0xD000000000000010;
        break;
      case 6:
        unint64_t v20 = 0xE800000000000000;
        unint64_t v21 = 0x726574756F526C6ELL;
        break;
      case 7:
        unint64_t v21 = 0x746E65696C436669;
        unint64_t v20 = 0xEE006E6F69746341;
        break;
      case 8:
        unint64_t v20 = 0xE700000000000000;
        unint64_t v21 = 0x6E776F6E6B6E75;
        break;
      default:
        break;
    }
    BOOL v23 = v18 == v21 && v17 == v20;
    uint64_t v66 = v12;
    uint64_t v64 = v16;
    if (v23)
    {
      uint64_t v31 = v14;
      uint64_t v28 = v15;
      swift_bridgeObjectRetain();
      uint64_t v29 = v67;
      swift_bridgeObjectRetain();
      uint64_t v30 = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = sub_1C9BEE618();
      uint64_t v25 = v15;
      char v26 = v24;
      uint64_t v27 = v14;
      uint64_t v28 = v25;
      swift_bridgeObjectRetain();
      uint64_t v29 = v67;
      swift_bridgeObjectRetain();
      uint64_t v30 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_73;
      }
    }
    uint64_t v32 = v11 ? 1701736302 : 0x33764F5355;
    unint64_t v33 = v11 ? 0xE400000000000000 : 0xE500000000000000;
    if (v32 == v60 && v33 == v59)
    {
      swift_bridgeObjectRelease_n();
      if (!v29) {
        goto LABEL_69;
      }
    }
    else
    {
      char v35 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        goto LABEL_73;
      }
      if (!v29)
      {
LABEL_69:
        if (v58) {
          goto LABEL_73;
        }
        swift_bridgeObjectRelease_n();
        if (v30) {
          goto LABEL_54;
        }
        goto LABEL_72;
      }
    }
    if (!v58) {
      goto LABEL_73;
    }
    BOOL v36 = v66 == v57 && v29 == v58;
    if (!v36 && (sub_1C9BEE618() & 1) == 0) {
      goto LABEL_73;
    }
    if (v30)
    {
LABEL_54:
      if (!v56) {
        goto LABEL_73;
      }
      BOOL v37 = v13 == v55 && v30 == v56;
      if (!v37 && (sub_1C9BEE618() & 1) == 0) {
        goto LABEL_73;
      }
      if (!v28) {
        goto LABEL_77;
      }
      goto LABEL_61;
    }
LABEL_72:
    if (v56) {
      goto LABEL_73;
    }
    swift_bridgeObjectRelease_n();
    if (!v28)
    {
LABEL_77:
      if (!v54) {
        break;
      }
LABEL_73:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v62;
      goto LABEL_74;
    }
LABEL_61:
    if (!v54) {
      goto LABEL_73;
    }
    if (v64 == v50 && v28 == v54) {
      break;
    }
    char v39 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v62;
    if (v39)
    {
      uint64_t v43 = (uint64_t)v53;
      goto LABEL_82;
    }
LABEL_74:
    unint64_t v7 = (v7 + 1) & v61;
    if (((*(void *)(v65 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_80;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v43 = (uint64_t)v53;
  swift_bridgeObjectRelease();
LABEL_82:
  swift_bridgeObjectRelease();
  sub_1C98458F8(v43);
  unint64_t v44 = *(void *)(*v51 + 48) + (v7 << 6);
  char v45 = *(unsigned char *)(v44 + 1);
  uint64_t v46 = *(void *)(v44 + 8);
  uint64_t v47 = *(void *)(v44 + 48);
  char v48 = *(unsigned char *)(v44 + 56);
  *(unsigned char *)a1 = *(unsigned char *)v44;
  *(unsigned char *)(a1 + 1) = v45;
  *(void *)(a1 + 8) = v46;
  long long v49 = *(_OWORD *)(v44 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v44 + 16);
  *(_OWORD *)(a1 + 32) = v49;
  *(void *)(a1 + 48) = v47;
  *(unsigned char *)(a1 + 56) = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

void sub_1C983FF98()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C9BEAE08();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_6_0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = *v0;
  sub_1C96138FC((unint64_t *)&qword_1EBC77460, MEMORY[0x1E4FA2760]);
  swift_bridgeObjectRetain();
  uint64_t v32 = v3;
  uint64_t v15 = sub_1C9BED4C8();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v17 = v15 & ~v16;
  uint64_t v31 = v14 + 56;
  if ((*(void *)(v14 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
  {
    uint64_t v28 = v5;
    uint64_t v29 = ~v16;
    uint64_t v27 = v8;
    unint64_t v20 = *(void (**)(void, void, void))(v8 + 16);
    uint64_t v19 = v8 + 16;
    unint64_t v18 = v20;
    uint64_t v30 = *(void *)(v19 + 56);
    unint64_t v21 = (void (**)(uint64_t, uint64_t))(v19 - 8);
    while (1)
    {
      uint64_t v22 = v14;
      BOOL v23 = v18;
      v18(v13, *(void *)(v14 + 48) + v30 * v17, v6);
      sub_1C96138FC(&qword_1EA58E5E8, MEMORY[0x1E4FA2760]);
      char v24 = sub_1C9BED528();
      uint64_t v25 = *v21;
      (*v21)(v13, v6);
      if (v24) {
        break;
      }
      unint64_t v17 = (v17 + 1) & v29;
      uint64_t v14 = v22;
      unint64_t v18 = v23;
      if (((*(void *)(v31 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v28;
        uint64_t v8 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v25(v32, v6);
    v23(v28, *(void *)(*v1 + 48) + v30 * v17, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v18 = *(void (**)(void, void, void))(v8 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18(v13, v32, v6);
    uint64_t v33 = *v1;
    *uint64_t v1 = 0x8000000000000000;
    sub_1C9842794(v13, v17, isUniquelyReferenced_nonNull_native);
    *uint64_t v1 = v33;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v5, v32, v6);
  }
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9840280(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1C9BEE0B8();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1C96044C4(0, (unint64_t *)&qword_1EBC76488);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C9BEE0A8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1C9840A08(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1C9841538();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1C98420A0((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C9BEDE58();
    uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      sub_1C96044C4(0, (unint64_t *)&qword_1EBC76488);
      id v13 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
      char v14 = sub_1C9BEDE68();

      if (v14)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v18 = *(void **)(*(void *)(*v2 + 48) + 8 * v12);
        *a1 = v18;
        id v19 = v18;
        return 0;
      }
      uint64_t v15 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        id v16 = *(id *)(*(void *)(v6 + 48) + 8 * v12);
        char v17 = sub_1C9BEDE68();

        if (v17) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1C9842A34((uint64_t)v8, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1C984051C(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *v4;
  sub_1C9BEE738();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();
  swift_bridgeObjectRelease();
  id v9 = a4;
  sub_1C9BEDE78();

  uint64_t v10 = sub_1C9BEE768();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    while (1)
    {
      char v14 = (void *)(*(void *)(v8 + 48) + 24 * v12);
      uint64_t v15 = (void *)v14[2];
      BOOL v16 = *v14 == a2 && v14[1] == a3;
      if (v16 || (sub_1C9BEE618() & 1) != 0)
      {
        sub_1C96044C4(0, (unint64_t *)&qword_1EBC764A0);
        swift_bridgeObjectRetain();
        id v17 = v15;
        char v18 = sub_1C9BEDE68();

        swift_bridgeObjectRelease();
        if (v18) {
          break;
        }
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v8 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_10;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t *)(*(void *)(*v26 + 48) + 24 * v12);
    uint64_t v23 = v22[1];
    char v24 = (void *)v22[2];
    *a1 = *v22;
    a1[1] = v23;
    a1[2] = (uint64_t)v24;
    swift_bridgeObjectRetain();
    id v25 = v24;
    return 0;
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v26;
    *uint64_t v26 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    id v20 = v9;
    sub_1C9842BBC(a2, a3, v20, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v26 = v28;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    uint64_t result = 1;
    a1[2] = (uint64_t)v20;
  }
  return result;
}

uint64_t sub_1C9840750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_31_18();
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();
  uint64_t v8 = sub_1C9BEE768();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  OUTLINED_FUNCTION_2_33();
  if (v11)
  {
    uint64_t v12 = *(void *)(v6 + 48);
    OUTLINED_FUNCTION_48_11(v12 + 16 * v10);
    BOOL v14 = v14 && v13 == a3;
    if (v14 || (sub_1C9BEE618() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_12(*v4);
      return 0;
    }
    uint64_t v16 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v16;
      OUTLINED_FUNCTION_2_33();
      if ((v17 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_48_11(v12 + 16 * v10);
      BOOL v19 = v14 && v18 == a3;
      if (v19 || (sub_1C9BEE618() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v4;
  uint64_t *v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C9842DC4(v5, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v4 = v21;
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  v3[1] = a3;
  return 1;
}

uint64_t sub_1C98408BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_31_18();
  sub_1C9BED4E8();
  uint64_t v8 = sub_1C9BEE768();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  OUTLINED_FUNCTION_2_33();
  if (v11)
  {
    uint64_t v12 = *(void *)(v6 + 48);
    OUTLINED_FUNCTION_48_11(v12 + 16 * v10);
    BOOL v14 = v14 && v13 == a3;
    if (v14 || (sub_1C9BEE618() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_43_12(*v4);
      return 0;
    }
    uint64_t v16 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v16;
      OUTLINED_FUNCTION_2_33();
      if ((v17 & 1) == 0) {
        break;
      }
      OUTLINED_FUNCTION_48_11(v12 + 16 * v10);
      BOOL v19 = v14 && v18 == a3;
      if (v19 || (sub_1C9BEE618() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v4;
  uint64_t *v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C9842F60(v5, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v4 = v21;
  swift_bridgeObjectRelease();
  *uint64_t v3 = v5;
  v3[1] = a3;
  return 1;
}

uint64_t sub_1C9840A08(uint64_t a1, uint64_t a2)
{
  if (!a2)
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F8);
  uint64_t v2 = sub_1C9BEE168();
  uint64_t v14 = v2;
  sub_1C9BEE068();
  if (!sub_1C9BEE0D8())
  {
LABEL_16:
    swift_release();
    return v2;
  }
  sub_1C96044C4(0, (unint64_t *)&qword_1EBC76488);
  while (1)
  {
    swift_dynamicCast();
    uint64_t v2 = v14;
    if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
    {
      sub_1C9841538();
      uint64_t v2 = v14;
    }
    uint64_t result = sub_1C9BEDE58();
    uint64_t v4 = v2 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = result & ~v5;
    unint64_t v7 = v6 >> 6;
    if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) == 0) {
      break;
    }
    unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
LABEL_15:
    *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
    ++*(void *)(v2 + 16);
    if (!sub_1C9BEE0D8()) {
      goto LABEL_16;
    }
  }
  char v9 = 0;
  unint64_t v10 = (unint64_t)(63 - v5) >> 6;
  while (++v7 != v10 || (v9 & 1) == 0)
  {
    BOOL v11 = v7 == v10;
    if (v7 == v10) {
      unint64_t v7 = 0;
    }
    v9 |= v11;
    uint64_t v12 = *(void *)(v4 + 8 * v7);
    if (v12 != -1)
    {
      unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C9840BF0()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76718);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C9841140()
{
  uint64_t v9 = sub_1C9BEAE08();
  uint64_t v1 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9, v2);
  v8[6] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F0);
  uint64_t v5 = sub_1C9BEE158();
  if (*(void *)(v4 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
    v8[2] = v4 + 56;
    v8[0] = v0;
    v8[1] = (unint64_t)(v6 + 63) >> 6;
    v8[4] = v1;
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_1C9841538()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F8);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C98417D4()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC764B0);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C9841AF8()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79460);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C9841DD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5D8);
  uint64_t result = sub_1C9BEE158();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v30 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v6;
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    if ((v8 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_1C9BEE738();
      sub_1C9BED4E8();
      uint64_t result = sub_1C9BEE768();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *uint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v5;
      if (!v15)
      {
        int64_t v5 = v14 + 1;
        if (v14 + 1 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v5];
        if (!v15)
        {
          int64_t v5 = v14 + 2;
          if (v14 + 2 >= v10) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v5];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1C976AA7C(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                void *v30 = -1 << v29;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v5 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v10) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v5];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v9 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C98420A0(uint64_t a1, uint64_t a2)
{
  sub_1C9BEDE58();
  unint64_t result = sub_1C9BEE048();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C9842124(uint64_t result, unint64_t a2, char a3)
{
  int64_t v5 = (unsigned __int8 *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v45 = (_OWORD *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C9840BF0();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C98430FC();
        goto LABEL_88;
      }
      sub_1C9843C98();
    }
    uint64_t v8 = *v3;
    sub_1C9BEE738();
    IntentTopic.hash(into:)();
    unint64_t result = sub_1C9BEE768();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    uint64_t v54 = v8 + 56;
    uint64_t v55 = v8;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v52 = ~v9;
      uint64_t v51 = *v5;
      uint64_t v47 = *((void *)v5 + 1);
      uint64_t v48 = *((void *)v5 + 2);
      uint64_t v43 = *((void *)v5 + 3);
      uint64_t v46 = *((void *)v5 + 4);
      uint64_t v41 = *((void *)v5 + 5);
      uint64_t v42 = *((void *)v5 + 6);
      if (v5[1]) {
        uint64_t v10 = 1701736302;
      }
      else {
        uint64_t v10 = 0x33764F5355;
      }
      unint64_t v11 = 0xE500000000000000;
      if (v5[1]) {
        unint64_t v11 = 0xE400000000000000;
      }
      unint64_t v49 = v11;
      uint64_t v50 = v10;
      do
      {
        unint64_t v12 = *(void *)(v55 + 48) + (a2 << 6);
        int v13 = *(unsigned __int8 *)(v12 + 1);
        uint64_t v15 = *(void *)(v12 + 8);
        uint64_t v14 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 24);
        uint64_t v17 = *(void *)(v12 + 32);
        uint64_t v18 = *(void *)(v12 + 48);
        uint64_t v53 = *(void *)(v12 + 40);
        unint64_t v19 = 0xE400000000000000;
        unint64_t v20 = 863390798;
        switch(*(unsigned char *)v12)
        {
          case 1:
            unint64_t v20 = 880168014;
            break;
          case 2:
            unint64_t v20 = 1885430133;
            break;
          case 3:
            unint64_t v20 = 0x4974694B69726973;
            unint64_t v19 = 0xED0000746E65746ELL;
            break;
          case 4:
            unint64_t v21 = "pp";
            goto LABEL_22;
          case 5:
            unint64_t v21 = "directInvocation";
LABEL_22:
            unint64_t v19 = (unint64_t)v21 | 0x8000000000000000;
            unint64_t v20 = 0xD000000000000010;
            break;
          case 6:
            unint64_t v19 = 0xE800000000000000;
            unint64_t v20 = 0x726574756F526C6ELL;
            break;
          case 7:
            unint64_t v20 = 0x746E65696C436669;
            unint64_t v19 = 0xEE006E6F69746341;
            break;
          case 8:
            unint64_t v19 = 0xE700000000000000;
            unint64_t v20 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        unint64_t v22 = 0xE400000000000000;
        unint64_t v23 = 863390798;
        switch(v51)
        {
          case 1:
            unint64_t v23 = 880168014;
            break;
          case 2:
            unint64_t v23 = 1885430133;
            break;
          case 3:
            unint64_t v23 = 0x4974694B69726973;
            unint64_t v22 = 0xED0000746E65746ELL;
            break;
          case 4:
            char v24 = "pp";
            goto LABEL_32;
          case 5:
            char v24 = "directInvocation";
LABEL_32:
            unint64_t v22 = (unint64_t)v24 | 0x8000000000000000;
            unint64_t v23 = 0xD000000000000010;
            break;
          case 6:
            unint64_t v22 = 0xE800000000000000;
            unint64_t v23 = 0x726574756F526C6ELL;
            break;
          case 7:
            unint64_t v23 = 0x746E65696C436669;
            unint64_t v22 = 0xEE006E6F69746341;
            break;
          case 8:
            unint64_t v22 = 0xE700000000000000;
            unint64_t v23 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        if (v20 == v23 && v19 == v22)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v26 = sub_1C9BEE618();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v26 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_82;
          }
        }
        if (v13) {
          uint64_t v27 = 1701736302;
        }
        else {
          uint64_t v27 = 0x33764F5355;
        }
        if (v13) {
          unint64_t v28 = 0xE400000000000000;
        }
        else {
          unint64_t v28 = 0xE500000000000000;
        }
        if (v27 == v50 && v28 == v49)
        {
          swift_bridgeObjectRelease_n();
          if (!v14) {
            goto LABEL_76;
          }
        }
        else
        {
          char v30 = sub_1C9BEE618();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v30 & 1) == 0) {
            goto LABEL_80;
          }
          if (!v14)
          {
LABEL_76:
            if (v48) {
              goto LABEL_80;
            }
            swift_bridgeObjectRelease_n();
            if (v17) {
              goto LABEL_61;
            }
            goto LABEL_79;
          }
        }
        if (!v48 || (v15 == v47 ? (BOOL v31 = v14 == v48) : (BOOL v31 = 0), !v31 && (sub_1C9BEE618() & 1) == 0))
        {
LABEL_80:
          swift_bridgeObjectRelease();
          goto LABEL_81;
        }
        if (v17)
        {
LABEL_61:
          if (!v46) {
            goto LABEL_80;
          }
          BOOL v32 = v16 == v43 && v17 == v46;
          if (!v32 && (sub_1C9BEE618() & 1) == 0) {
            goto LABEL_80;
          }
          if (!v18) {
            goto LABEL_86;
          }
          goto LABEL_68;
        }
LABEL_79:
        if (v46) {
          goto LABEL_80;
        }
        swift_bridgeObjectRelease_n();
        if (!v18)
        {
LABEL_86:
          swift_bridgeObjectRelease();
          if (!v42) {
            goto LABEL_92;
          }
LABEL_81:
          swift_bridgeObjectRelease();
LABEL_82:
          unint64_t result = swift_bridgeObjectRelease();
          goto LABEL_83;
        }
LABEL_68:
        if (!v42) {
          goto LABEL_80;
        }
        if (v53 == v41 && v18 == v42) {
          goto LABEL_91;
        }
        char v34 = sub_1C9BEE618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v34) {
          goto LABEL_93;
        }
LABEL_83:
        a2 = (a2 + 1) & v52;
      }
      while (((*(void *)(v54 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_88:
  uint64_t v35 = *v44;
  *(void *)(*v44 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  BOOL v36 = (_OWORD *)(*(void *)(v35 + 48) + (a2 << 6));
  long long v37 = v45[1];
  *BOOL v36 = *v45;
  v36[1] = v37;
  _OWORD v36[2] = v45[2];
  *(_OWORD *)((char *)v36 + 41) = *(_OWORD *)((char *)v45 + 41);
  uint64_t v38 = *(void *)(v35 + 16);
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (v39)
  {
    __break(1u);
LABEL_91:
    swift_bridgeObjectRelease();
LABEL_92:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_93:
    sub_1C9BEE688();
    __break(1u);
    JUMPOUT(0x1C984274CLL);
  }
  *(void *)(v35 + 16) = v40;
  return result;
}

uint64_t sub_1C9842794(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_1C9BEAE08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C9841140();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C98432F8();
      goto LABEL_12;
    }
    sub_1C98441EC();
  }
  uint64_t v13 = *v3;
  sub_1C96138FC((unint64_t *)&qword_1EBC77460, MEMORY[0x1E4FA2760]);
  uint64_t v14 = sub_1C9BED4C8();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    unint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_1C96138FC(&qword_1EA58E5E8, MEMORY[0x1E4FA2760]);
      char v22 = sub_1C9BED528();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C9BEE688();
  __break(1u);
  return result;
}

void sub_1C9842A34(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C9841538();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C98435A8();
      goto LABEL_14;
    }
    sub_1C9844598();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1C9BEDE58();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C96044C4(0, (unint64_t *)&qword_1EBC76488);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1C9BEDE68();

    if (v12)
    {
LABEL_13:
      sub_1C9BEE688();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1C9BEDE68();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1C9842BBC(uint64_t result, uint64_t a2, void *a3, unint64_t a4, char a5)
{
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0) {
    goto LABEL_17;
  }
  if (a5)
  {
    sub_1C98417D4();
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_1C9843754();
      goto LABEL_17;
    }
    sub_1C9844810();
  }
  uint64_t v12 = *v5;
  sub_1C9BEE738();
  swift_bridgeObjectRetain();
  sub_1C9BED4E8();
  swift_bridgeObjectRelease();
  id v13 = a3;
  sub_1C9BEDE78();

  uint64_t result = sub_1C9BEE768();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a4 = result & ~v14;
  if ((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v15 = ~v14;
    do
    {
      uint64_t v16 = (void *)(*(void *)(v12 + 48) + 24 * a4);
      uint64_t v17 = (void *)v16[2];
      BOOL v18 = *v16 == v9 && v16[1] == a2;
      if (v18 || (uint64_t result = sub_1C9BEE618(), (result & 1) != 0))
      {
        sub_1C96044C4(0, (unint64_t *)&qword_1EBC764A0);
        swift_bridgeObjectRetain();
        id v19 = v17;
        char v20 = sub_1C9BEDE68();

        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_20;
        }
      }
      a4 = (a4 + 1) & v15;
    }
    while (((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_17:
  uint64_t v21 = *v26;
  *(void *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  char v22 = (uint64_t *)(*(void *)(v21 + 48) + 24 * a4);
  *char v22 = v9;
  v22[1] = a2;
  v22[2] = (uint64_t)a3;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_20:
  uint64_t result = sub_1C9BEE688();
  __break(1u);
  return result;
}

uint64_t sub_1C9842DC4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C9841AF8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C9843930();
      goto LABEL_22;
    }
    sub_1C9844B20();
  }
  uint64_t v11 = *v4;
  sub_1C9BEE738();
  sub_1C9BED4E8();
  uint64_t result = sub_1C9BEE768();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C9BEE618(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C9BEE688();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C9BEE618();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C9842F60(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C9841DD4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C9843AE4();
      goto LABEL_22;
    }
    sub_1C9844DCC();
  }
  uint64_t v11 = *v4;
  sub_1C9BEE738();
  sub_1C9BED4E8();
  uint64_t result = sub_1C9BEE768();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C9BEE618(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C9BEE688();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        BOOL v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C9BEE618();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1C98430FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76718);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C9BEE148();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    unint64_t v20 = *(void *)(v2 + 48) + (i << 6);
    char v21 = *(unsigned char *)(v20 + 1);
    uint64_t v22 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 48);
    char v24 = *(unsigned char *)(v20 + 56);
    unint64_t v25 = *(void *)(v4 + 48) + (i << 6);
    long long v26 = *(_OWORD *)(v20 + 16);
    long long v27 = *(_OWORD *)(v20 + 32);
    *(unsigned char *)unint64_t v25 = *(unsigned char *)v20;
    *(unsigned char *)(v25 + 1) = v21;
    *(void *)(v25 + 8) = v22;
    *(_OWORD *)(v25 + 16) = v26;
    *(_OWORD *)(v25 + 32) = v27;
    *(void *)(v25 + 48) = v23;
    *(unsigned char *)(v25 + 56) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C98432F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C9BEAE08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F0);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1C9BEE148();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t result = (void *)(v8 + 56);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  unint64_t v25 = v1;
  long long v26 = (const void *)(v7 + 56);
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v11) {
    uint64_t result = memmove(result, v26, 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = *(void *)(v7 + 56);
  uint64_t v16 = -1;
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  unint64_t v17 = v16 & v15;
  int64_t v27 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v18 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    unint64_t v23 = *(void *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v23, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v23, v6, v2);
    if (v17) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v27) {
      goto LABEL_28;
    }
    unint64_t v21 = *((void *)v26 + v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v27) {
        goto LABEL_28;
      }
      unint64_t v21 = *((void *)v26 + v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v27) {
          goto LABEL_28;
        }
        unint64_t v21 = *((void *)v26 + v13);
        if (!v21) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v17 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v27)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_30;
  }
  unint64_t v21 = *((void *)v26 + v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_28;
    }
    unint64_t v21 = *((void *)v26 + v13);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C98435A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C9BEE148();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    int64_t v20 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    *(void *)(*(void *)(v4 + 48) + 8 * i) = v20;
    id result = v20;
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C9843754()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC764B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C9BEE148();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = 3 * i;
    uint64_t v21 = *(void *)(v2 + 48) + 8 * v20;
    long long v23 = *(_OWORD *)(v21 + 8);
    uint64_t v22 = *(void *)(v4 + 48) + 8 * v20;
    *(void *)uint64_t v22 = *(void *)v21;
    *(_OWORD *)(v22 + 8) = v23;
    swift_bridgeObjectRetain();
    id result = *((id *)&v23 + 1);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C9843930()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79460);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C9BEE148();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    id result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C9843AE4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C9BEE148();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    uint64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v22 = *v20;
    v22[1] = v21;
    id result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C9843C98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76718);
  uint64_t v3 = sub_1C9BEE158();
  if (*(void *)(v2 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1C98441EC()
{
  uint64_t v1 = sub_1C9BEAE08();
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F0);
  uint64_t v4 = sub_1C9BEE158();
  if (*(void *)(v3 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v4;
  return result;
}

uint64_t sub_1C9844598()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5F8);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C9844810()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC764B0);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C9844B20()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79460);
  uint64_t v2 = sub_1C9BEE158();
  if (*(void *)(v1 + 16)) {
    sub_1C9BEC838();
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v2;
  return result;
}

uint64_t sub_1C9844DCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5D8);
  uint64_t result = sub_1C9BEE158();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = v2 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = result + 56;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v11 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v5 << 6))
    {
      uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1C9BEE738();
      sub_1C9BED4E8();
      uint64_t result = sub_1C9BEE768();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_29;
          }
        }
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_29:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      int64_t v27 = (void *)(*(void *)(v4 + 48) + 16 * v22);
      *int64_t v27 = v18;
      v27[1] = v17;
      ++*(void *)(v4 + 16);
      uint64_t result = swift_bridgeObjectRetain();
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_35;
      }
      if (v13 >= v28) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v13);
      ++v5;
      if (!v14)
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v28) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14)
        {
          int64_t v5 = v13 + 2;
          if (v13 + 2 >= v28) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v5);
          if (!v14)
          {
            int64_t v15 = v13 + 3;
            if (v15 >= v28)
            {
LABEL_31:
              uint64_t result = swift_release();
              uint64_t v1 = v0;
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            int64_t v5 = v15;
            if (!v14) {
              break;
            }
          }
        }
      }
LABEL_19:
      unint64_t v9 = (v14 - 1) & v14;
    }
    while (1)
    {
      int64_t v5 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        break;
      }
      if (v5 >= v28) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      ++v15;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_36:
    __break(1u);
  }
  else
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
  }
  return result;
}

void sub_1C9845068(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v7 = a1 - a2;
  if (__OFSUB__(0, v6))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v5, v7))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v5 - v6 > *(void *)(v4 + 24) >> 1) {
    uint64_t v4 = sub_1C965476C();
  }
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA58AE50) - 8);
  unint64_t v9 = v4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v10 = *(void *)(v8 + 72);
  swift_arrayDestroy();
  if (!v6) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  if (__OFSUB__(v11, a2)) {
    goto LABEL_19;
  }
  sub_1C96343C4(v9 + v10 * a2, v11 - a2);
  uint64_t v12 = *(void *)(v4 + 16);
  BOOL v13 = __OFADD__(v12, v7);
  uint64_t v14 = v12 - v6;
  if (!v13)
  {
    *(void *)(v4 + 16) = v14;
LABEL_13:
    *uint64_t v2 = v4;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1C98451C0(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_24_19();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v5;
  uint64_t v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 - v9 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_44_12();
    sub_1C965519C();
    uint64_t v1 = v11;
  }
  uint64_t v12 = (char *)(v1 + 32 + 16 * v8);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(v1 + 16);
  if (__OFSUB__(v13, v3)) {
    goto LABEL_19;
  }
  sub_1C9633E4C((char *)(v1 + 32 + 16 * v3), v13 - v3, v12);
  uint64_t v14 = *(void *)(v1 + 16);
  BOOL v7 = __OFADD__(v14, v10);
  uint64_t v15 = v14 - v9;
  if (!v7)
  {
    *(void *)(v1 + 16) = v15;
LABEL_13:
    *uint64_t v2 = v1;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1C98452B0(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_24_19();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v5;
  uint64_t v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v10 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, v10))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 - v9 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_44_12();
    sub_1C9654100();
    uint64_t v1 = v11;
  }
  uint64_t v12 = (char *)(v1 + 32 + 16 * v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5E0);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_13;
  }
  uint64_t v13 = *(void *)(v1 + 16);
  if (__OFSUB__(v13, v3)) {
    goto LABEL_19;
  }
  sub_1C9633E4C((char *)(v1 + 32 + 16 * v3), v13 - v3, v12);
  uint64_t v14 = *(void *)(v1 + 16);
  BOOL v7 = __OFADD__(v14, v10);
  uint64_t v15 = v14 - v9;
  if (!v7)
  {
    *(void *)(v1 + 16) = v15;
LABEL_13:
    *uint64_t v2 = v1;
    return;
  }
LABEL_20:
  __break(1u);
}

void sub_1C98453A8(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_24_19();
  if (v6 != v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v4, v9))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 - v8 > *(void *)(v1 + 24) >> 1)
  {
    OUTLINED_FUNCTION_44_12();
    uint64_t v1 = sub_1C96549BC(v10, v11, v12, v13);
  }
  type metadata accessor for SnippetManager.SnippetRecord(0);
  OUTLINED_FUNCTION_6_37();
  unint64_t v15 = v1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v17 = *(void *)(v16 + 72);
  swift_arrayDestroy();
  if (!v8) {
    goto LABEL_13;
  }
  uint64_t v18 = *(void *)(v1 + 16);
  if (__OFSUB__(v18, v3)) {
    goto LABEL_19;
  }
  sub_1C963429C(v15 + v17 * v3, v18 - v3);
  uint64_t v19 = *(void *)(v1 + 16);
  BOOL v7 = __OFADD__(v19, v9);
  uint64_t v20 = v19 - v8;
  if (!v7)
  {
    *(void *)(v1 + 16) = v20;
LABEL_13:
    *uint64_t v2 = v1;
    return;
  }
LABEL_20:
  __break(1u);
}

uint64_t sub_1C98454C4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_bundleIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

id sub_1C9845528@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C983C6B4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C9845548(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FlowDelegatePluginLoader()
{
  return self;
}

uint64_t method lookup function for FlowDelegatePluginLoader(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlowDelegatePluginLoader);
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.hasFlowPluginFor(parse:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.makeFlow(parse:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.makeFlow(rcId:parse:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.loadFlow(rcId:parse:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.findFlowPlugin(intentTopic:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.makeFlowFrame(parse:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.loadFlowPlugin(bundleIdentifier:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of FlowDelegatePluginLoader.loadAndWarmBundle(bundleIdentifier:refId:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

void destroy for FlowDelegatePluginLoader.KeyAndBundle(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s11SiriKitFlow24FlowDelegatePluginLoaderC12KeyAndBundleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for FlowDelegatePluginLoader.KeyAndBundle(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for FlowDelegatePluginLoader.KeyAndBundle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for FlowDelegatePluginLoader.KeyAndBundle()
{
  return &type metadata for FlowDelegatePluginLoader.KeyAndBundle;
}

unint64_t sub_1C9845860()
{
  unint64_t result = qword_1EBC74C58;
  if (!qword_1EBC74C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC74C58);
  }
  return result;
}

uint64_t sub_1C98458AC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C98458F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C9845944()
{
  OUTLINED_FUNCTION_11_1();
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_6_37();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  id v5 = (void **)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1C9BEC028();
      goto LABEL_22;
    case 1u:
      sub_1C9BEC028();
      OUTLINED_FUNCTION_8_4();
      uint64_t v6 = OUTLINED_FUNCTION_8_30();
      v7(v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      sub_1C9BEAC48();
      goto LABEL_22;
    case 5u:
      uint64_t v8 = *v5;
      goto LABEL_20;
    case 6u:
      sub_1C9BEAF18();
      OUTLINED_FUNCTION_8_4();
      uint64_t v9 = OUTLINED_FUNCTION_8_30();
      v10(v9);
      type metadata accessor for USOParse();
      uint64_t v11 = OUTLINED_FUNCTION_51_10();
      if (!OUTLINED_FUNCTION_22_21(v11)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
      }
      goto LABEL_14;
    case 7u:
      sub_1C9BEAF18();
      OUTLINED_FUNCTION_8_4();
      uint64_t v12 = OUTLINED_FUNCTION_8_30();
      v13(v12);
      type metadata accessor for USOParse();
      uint64_t v14 = OUTLINED_FUNCTION_51_10();
      if (!OUTLINED_FUNCTION_22_21(v14)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
      }
      OUTLINED_FUNCTION_42_9();
      type metadata accessor for LinkParse();
      OUTLINED_FUNCTION_42_9();
      OUTLINED_FUNCTION_42_9();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      sub_1C9BEC928();
      OUTLINED_FUNCTION_8_4();
      uint64_t v15 = OUTLINED_FUNCTION_8_30();
      v16(v15);
      uint64_t v17 = type metadata accessor for NLRouterParse();
      OUTLINED_FUNCTION_42_9();
      uint64_t v18 = (char *)v5 + *(int *)(v17 + 24);
      uint64_t v19 = type metadata accessor for USOParse();
      if (!OUTLINED_FUNCTION_22_21(v19))
      {
        sub_1C9BEAF18();
        OUTLINED_FUNCTION_8_4();
        OUTLINED_FUNCTION_37();
        v20();
        uint64_t v21 = (uint64_t)&v18[*(int *)(v2 + 20)];
        uint64_t v22 = sub_1C9BEAE48();
        if (!__swift_getEnumTagSinglePayload(v21, 1, v22)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v8 = *(void **)((char *)v5 + *(int *)(v17 + 28));
LABEL_20:

      break;
    case 9u:
      sub_1C9BEC8F8();
LABEL_22:
      OUTLINED_FUNCTION_8_4();
      (*(void (**)(unint64_t))(v23 + 8))(v0 + v4);
      break;
    default:
      break;
  }
  OUTLINED_FUNCTION_10();
  return swift_deallocObject();
}

uint64_t sub_1C9845CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for Parse(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1C983D194((void *)(v1 + 16), v4, a1);
}

uint64_t sub_1C9845D60(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v3 = OUTLINED_FUNCTION_8_30();
  v4(v3);
  return a1;
}

uint64_t sub_1C9845DB0()
{
  if (*(void *)(v0 + 16) != 1) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1C9845DF0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9845E38()
{
  return sub_1C983F7FC(*(void *)(v0 + 16), *(void (**)(void *__return_ptr))(v0 + 24));
}

void block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  sub_1C9BEC838();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1C9845E5C(uint64_t result)
{
  if (result != 1) {
    sub_1C9BEC838();
  }
  return result;
}

uint64_t sub_1C9845E6C(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1C9845E7C(uint64_t a1, uint64_t *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_8_4();
  uint64_t v3 = OUTLINED_FUNCTION_8_30();
  v4(v3);
  return a1;
}

uint64_t sub_1C9845EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79F38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1C9845F30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C9845528(a1, a2);
}

uint64_t OUTLINED_FUNCTION_8_30()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_30()
{
  return *(void *)(v0 - 416);
}

void OUTLINED_FUNCTION_13_38(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

double OUTLINED_FUNCTION_19_30@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_21(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_23_21(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = *(void *)(v2 - 352);
  return sub_1C9845D60(v4, a2);
}

void OUTLINED_FUNCTION_25_16()
{
  *(void *)(v0 + 16) = 6841202;
  *(void *)(v0 + 24) = 0xE300000000000000;
}

uint64_t OUTLINED_FUNCTION_27_18()
{
  return sub_1C9BECE98();
}

uint64_t OUTLINED_FUNCTION_31_18()
{
  return sub_1C9BEE738();
}

uint64_t OUTLINED_FUNCTION_32_20()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_40_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v15 + 32) = a14;
  *(void *)(v15 + 40) = a15;
  sub_1C9BEC838();
}

id OUTLINED_FUNCTION_45_10()
{
  return [v0 (SEL)(v1 + 1048)];
}

uint64_t OUTLINED_FUNCTION_46_12()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_12()
{
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_51_10()
{
  return sub_1C9BEAE48();
}

uint64_t OUTLINED_FUNCTION_54_12(uint64_t a1)
{
  return sub_1C9606790(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_55_10()
{
  return swift_allocObject();
}

uint64_t (*FlowOperationIgnored.description.modify())(void)
{
  return nullsub_1;
}

uint64_t (*FlowOperationAborted.description.modify())(void)
{
  return nullsub_1;
}

uint64_t (*InvalidOperation.description.modify())(void)
{
  return nullsub_1;
}

uint64_t FlowUnhandledEvent.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowUnhandledEvent.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FlowUnhandledEvent.description.modify())(void)
{
  return nullsub_1;
}

SiriKitFlow::FlowUnhandledEvent __swiftcall FlowUnhandledEvent.init(_:)(SiriKitFlow::FlowUnhandledEvent result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*FlowAbort.description.modify())(void)
{
  return nullsub_1;
}

void type metadata accessor for FlowOperationIgnored()
{
}

void type metadata accessor for FlowOperationAborted()
{
}

void type metadata accessor for InvalidOperation()
{
}

void type metadata accessor for FlowUnhandledEvent()
{
}

void type metadata accessor for FlowAbort()
{
}

void *assignWithCopy for FlowExecutionEnvironment(void *a1, void *a2)
{
  return a1;
}

void *__swift_memcpy120_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for FlowExecutionEnvironment(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowExecutionEnvironment(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowExecutionEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowExecutionEnvironment()
{
  return &type metadata for FlowExecutionEnvironment;
}

uint64_t FlowOutput.__allocating_init(atoms:flowActivity:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  FlowOutput.init(atoms:flowActivity:)(a1, a2);
  return v4;
}

uint64_t FlowOutput.atoms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C98464E8(uint64_t a1)
{
  sub_1C9846638(a1, (uint64_t)v2);
  return sub_1C9846570((uint64_t)v2);
}

uint64_t sub_1C9846524@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1C9846638(v1 + 24, a1);
}

uint64_t sub_1C9846570(uint64_t a1)
{
  swift_beginAccess();
  sub_1C962F434(a1, v1 + 24);
  return swift_endAccess();
}

uint64_t FlowOutput.init(atoms:flowActivity:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = 0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(void *)(v2 + 16) = a1;
  swift_beginAccess();
  sub_1C962F434(a2, v2 + 24);
  swift_endAccess();
  return v2;
}

uint64_t sub_1C9846638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC789D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FlowOutput.deinit()
{
  swift_bridgeObjectRelease();
  sub_1C97A5178(v0 + 24);
  return v0;
}

uint64_t FlowOutput.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1C97A5178(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9846708@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9846524(a1);
}

uint64_t sub_1C984672C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9846524(a1);
}

uint64_t type metadata accessor for FlowOutput()
{
  return self;
}

uint64_t method lookup function for FlowOutput(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlowOutput);
}

uint64_t dispatch thunk of FlowOutput.flowActivity.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of FlowOutput.__allocating_init(atoms:flowActivity:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t initializeBufferWithCopyOfBuffer for FlowOutputAtom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v9 = *(void *)(a2 + 56);
    uint64_t v8 = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 56) = v9;
    *(void *)(a1 + 64) = v8;
    uint64_t v10 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v10;
    uint64_t v29 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v29;
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    uint64_t v31 = *(void **)(a2 + 128);
    *(void *)(a1 + 128) = v31;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v30 = *(void **)(a2 + 144);
    uint64_t v32 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v30;
    *(void *)(a1 + 152) = v32;
    uint64_t v34 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v34;
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    uint64_t v12 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v12;
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    uint64_t v33 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v33;
    uint64_t v35 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v35;
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    uint64_t v36 = *(void *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v31;
    id v14 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v36)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v36;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
    }
    uint64_t v17 = *(void *)(a2 + 280);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = v17;
    uint64_t v18 = (int *)type metadata accessor for NLContextUpdate();
    uint64_t v19 = v18[32];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    uint64_t v22 = sub_1C9BECDB8();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79C20);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    *(unsigned char *)(a1 + v18[33]) = *(unsigned char *)(a2 + v18[33]);
    *(unsigned char *)(a1 + v18[34]) = *(unsigned char *)(a2 + v18[34]);
    uint64_t v24 = v18[35];
    BOOL v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    uint64_t v27 = v26[1];
    *BOOL v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    id v16 = v15;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void destroy for FlowOutputAtom(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 256))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for NLContextUpdate() + 128);
    uint64_t v3 = sub_1C9BECDB8();
    if (!__swift_getEnumTagSinglePayload(v2, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void **)a1;
  }
}

uint64_t initializeWithCopy for FlowOutputAtom(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v4 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v6;
    uint64_t v7 = *(void *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v7;
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    uint64_t v10 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v10;
    uint64_t v11 = *(void *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v11;
    uint64_t v30 = *(void **)(a2 + 128);
    *(void *)(a1 + 128) = v30;
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v29 = *(void **)(a2 + 144);
    uint64_t v31 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v29;
    *(void *)(a1 + 152) = v31;
    uint64_t v33 = *(void *)(a2 + 168);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = v33;
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    uint64_t v12 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v12;
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    uint64_t v32 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v32;
    uint64_t v34 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v34;
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    uint64_t v35 = *(void *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v30;
    id v14 = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35)
    {
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v35;
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
    }
    uint64_t v17 = *(void *)(a2 + 280);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = v17;
    uint64_t v18 = (int *)type metadata accessor for NLContextUpdate();
    uint64_t v19 = v18[32];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    uint64_t v22 = sub_1C9BECDB8();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79C20);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    *(unsigned char *)(a1 + v18[33]) = *(unsigned char *)(a2 + v18[33]);
    *(unsigned char *)(a1 + v18[34]) = *(unsigned char *)(a2 + v18[34]);
    uint64_t v24 = v18[35];
    BOOL v25 = (void *)(a1 + v24);
    uint64_t v26 = (void *)(a2 + v24);
    uint64_t v27 = v26[1];
    *BOOL v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    id v16 = v15;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FlowOutputAtom(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C98473E0(a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v4 = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 64) = v4;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v21 = *(void **)(a2 + 128);
      *(void *)(a1 + 128) = v21;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v20 = *(void **)(a2 + 144);
      *(void *)(a1 + 144) = v20;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      uint64_t v22 = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v5 = v21;
      id v6 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v22)
      {
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v9 = *(_OWORD *)(a2 + 248);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        *(_OWORD *)(a1 + 248) = v9;
      }
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      uint64_t v10 = (int *)type metadata accessor for NLContextUpdate();
      uint64_t v11 = v10[32];
      uint64_t v12 = (void *)(a1 + v11);
      id v13 = (const void *)(a2 + v11);
      uint64_t v14 = sub_1C9BECDB8();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79C20);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
      *(unsigned char *)(a1 + v10[33]) = *(unsigned char *)(a2 + v10[33]);
      *(unsigned char *)(a1 + v10[34]) = *(unsigned char *)(a2 + v10[34]);
      uint64_t v16 = v10[35];
      uint64_t v17 = (void *)(a1 + v16);
      uint64_t v18 = (void *)(a2 + v16);
      *uint64_t v17 = *v18;
      v17[1] = v18[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v8 = v7;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C98473E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FlowOutputAtom();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FlowOutputAtom()
{
  uint64_t result = qword_1EA58E660;
  if (!qword_1EA58E660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *initializeWithTake for FlowOutputAtom(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    long long v6 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v6;
    *((void *)a1 + 8) = *((void *)a2 + 8);
    a1[72] = a2[72];
    *((void *)a1 + 10) = *((void *)a2 + 10);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *((void *)a1 + 13) = *((void *)a2 + 13);
    *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
    *((void *)a1 + 16) = *((void *)a2 + 16);
    a1[136] = a2[136];
    long long v7 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v7;
    a1[176] = a2[176];
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    a1[200] = a2[200];
    long long v8 = *((_OWORD *)a2 + 14);
    *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
    *((_OWORD *)a1 + 14) = v8;
    *((void *)a1 + 30) = *((void *)a2 + 30);
    *((void *)a1 + 33) = *((void *)a2 + 33);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *((_OWORD *)a1 + 17) = *((_OWORD *)a2 + 17);
    long long v9 = (int *)type metadata accessor for NLContextUpdate();
    uint64_t v10 = v9[32];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_1C9BECDB8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79C20);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    a1[v9[33]] = a2[v9[33]];
    a1[v9[34]] = a2[v9[34]];
    *(_OWORD *)&a1[v9[35]] = *(_OWORD *)&a2[v9[35]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FlowOutputAtom(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C98473E0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      long long v6 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v6;
      *((void *)a1 + 8) = *((void *)a2 + 8);
      a1[72] = a2[72];
      *((void *)a1 + 10) = *((void *)a2 + 10);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *((void *)a1 + 13) = *((void *)a2 + 13);
      *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
      *((void *)a1 + 16) = *((void *)a2 + 16);
      a1[136] = a2[136];
      long long v7 = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 10) = v7;
      a1[176] = a2[176];
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      a1[200] = a2[200];
      long long v8 = *((_OWORD *)a2 + 14);
      *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
      *((_OWORD *)a1 + 14) = v8;
      *((void *)a1 + 30) = *((void *)a2 + 30);
      *((void *)a1 + 33) = *((void *)a2 + 33);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *((_OWORD *)a1 + 17) = *((_OWORD *)a2 + 17);
      long long v9 = (int *)type metadata accessor for NLContextUpdate();
      uint64_t v10 = v9[32];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = sub_1C9BECDB8();
      if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79C20);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      }
      a1[v9[33]] = a2[v9[33]];
      a1[v9[34]] = a2[v9[34]];
      *(_OWORD *)&a1[v9[35]] = *(_OWORD *)&a2[v9[35]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C98478A4()
{
  uint64_t result = type metadata accessor for NLContextUpdate();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C984793C(uint64_t a1)
{
  sub_1C95FD5F0(a1, (uint64_t)v3);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  type metadata accessor for FlowOutput();
  uint64_t v1 = swift_dynamicCast();
  if (v1) {
    swift_release();
  }
  return v1;
}

uint64_t sub_1C98479AC()
{
  OUTLINED_FUNCTION_24();
  v1[19] = v2;
  v1[20] = v0;
  type metadata accessor for NLContextUpdate();
  v1[21] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FlowOutputAtom();
  v1[22] = v3;
  v1[23] = *(void *)(v3 - 8);
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9847AB0, 0, 0);
}

uint64_t sub_1C9847AB0()
{
  sub_1C95FD5F0(*(void *)(v0 + 152), v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  type metadata accessor for FlowOutput();
  if (!swift_dynamicCast())
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C9BECF88();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBC7A520);
    uint64_t v23 = sub_1C9BECF78();
    os_log_type_t v24 = sub_1C9BEDC88();
    if (os_log_type_enabled(v23, v24))
    {
      BOOL v25 = (_WORD *)swift_slowAlloc();
      *BOOL v25 = 0;
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v26, v27, "Output is not a FlowOutput! handle() should have never been called.");
      MEMORY[0x1CB78C440](v25, -1, -1);
    }

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
    *(void *)(inited + 32) = 0x6567617373654DLL;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD000000000000078;
    *(void *)(inited + 56) = 0x80000001C9C1E320;
    uint64_t v29 = sub_1C9BED458();
    id v30 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    sub_1C9A865A8(0xD000000000000016, 0x80000001C9C16260, 1002, v29);
    swift_willThrow();
    OUTLINED_FUNCTION_3_46();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_1_40();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v1 = *(void *)(v0 + 136);
  *(void *)(v0 + 216) = v1;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  uint64_t v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC88();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (_WORD *)swift_slowAlloc();
    *uint64_t v5 = 0;
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v6, v7, "Warning: Deprecated FlowOutput being used. Domains should use AceOutput instead.");
    MEMORY[0x1CB78C440](v5, -1, -1);
  }

  *(void *)(v0 + 144) = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(v1 + 16);
  *(void *)(v0 + 224) = v8;
  uint64_t v9 = *(void *)(v8 + 16);
  *(void *)(v0 + 232) = v9;
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 184);
    int v11 = *(_DWORD *)(v10 + 80);
    *(_DWORD *)(v0 + 296) = v11;
    uint64_t v12 = *(void *)(v10 + 72);
    *(void *)(v0 + 240) = v12;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    while (1)
    {
      *(void *)(v0 + 248) = v14;
      sub_1C97C7030(v13 + ((v11 + 32) & ~(unint64_t)v11) + v12 * v14, *(void *)(v0 + 208));
      OUTLINED_FUNCTION_10_31();
      int v15 = OUTLINED_FUNCTION_13_39();
      uint64_t v16 = *(void *)(v0 + 200);
      if (v15 == 1)
      {
        sub_1C98487B8(v16, *(void *)(v0 + 168));
        swift_getObjectType();
        uint64_t v33 = (void *)swift_task_alloc();
        *(void *)(v0 + 256) = v33;
        *uint64_t v33 = v0;
        v33[1] = sub_1C9848034;
        OUTLINED_FUNCTION_5_41();
        OUTLINED_FUNCTION_1_40();
        __asm { BRAA            X4, X16 }
      }
      id v17 = *(id *)(v0 + 208);
      id v18 = *(id *)(v0 + 192);
      sub_1C984881C(v16, (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
      OUTLINED_FUNCTION_10_31();
      if (OUTLINED_FUNCTION_13_39() == 1)
      {
        sub_1C984881C(*(void *)(v0 + 208), (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
        uint64_t v19 = v0 + 192;
      }
      else
      {
        id v17 = **(id **)(v0 + 192);
        MEMORY[0x1CB78AA10]();
        OUTLINED_FUNCTION_8_31();
        if (v20) {
          OUTLINED_FUNCTION_11_34();
        }
        sub_1C9BED948();
        sub_1C9BED8A8();

        uint64_t v19 = v0 + 208;
      }
      uint64_t v21 = OUTLINED_FUNCTION_14_32(v19);
      sub_1C984881C(v21, (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
      if (v18 == v17) {
        break;
      }
      uint64_t v12 = *(void *)(v0 + 240);
      uint64_t v14 = *(void *)(v0 + 248) + 1;
      LOBYTE(v11) = *(unsigned char *)(v0 + 296);
      uint64_t v13 = *(void *)(v0 + 224);
    }
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_9_31();
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_1C9848414;
  OUTLINED_FUNCTION_4_42();
  OUTLINED_FUNCTION_1_40();
  return AceServiceInvokerAsync.submitAllSerial(_:)();
}

uint64_t sub_1C9848034()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v3 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1C9848590;
  }
  else
  {
    uint64_t v6 = sub_1C9848128;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C9848128()
{
  sub_1C984881C(*(void *)(v0 + 168), (uint64_t (*)(void))type metadata accessor for NLContextUpdate);
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 248) + 1;
  sub_1C984881C(*(void *)(v0 + 208), (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
  if (v2 == v1)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_9_31();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C9848414;
    OUTLINED_FUNCTION_4_42();
    return AceServiceInvokerAsync.submitAllSerial(_:)();
  }
  else
  {
    while (1)
    {
      uint64_t v5 = *(void *)(v0 + 240);
      uint64_t v6 = *(void *)(v0 + 248) + 1;
      *(void *)(v0 + 248) = v6;
      sub_1C97C7030(*(void *)(v0 + 224)+ ((*(unsigned __int8 *)(v0 + 296) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 296))+ v5 * v6, *(void *)(v0 + 208));
      OUTLINED_FUNCTION_10_31();
      if (OUTLINED_FUNCTION_13_39() == 1) {
        break;
      }
      id v7 = *(id *)(v0 + 208);
      id v8 = *(id *)(v0 + 192);
      sub_1C984881C(*(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
      OUTLINED_FUNCTION_10_31();
      if (OUTLINED_FUNCTION_13_39() == 1)
      {
        sub_1C984881C(*(void *)(v0 + 208), (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
        uint64_t v9 = v0 + 192;
      }
      else
      {
        id v7 = **(id **)(v0 + 192);
        MEMORY[0x1CB78AA10]();
        OUTLINED_FUNCTION_8_31();
        if (v10) {
          OUTLINED_FUNCTION_11_34();
        }
        sub_1C9BED948();
        sub_1C9BED8A8();

        uint64_t v9 = v0 + 208;
      }
      uint64_t v11 = OUTLINED_FUNCTION_14_32(v9);
      sub_1C984881C(v11, (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
      if (v8 == v7) {
        goto LABEL_2;
      }
    }
    uint64_t v12 = *(void *)(v0 + 160);
    sub_1C98487B8(*(void *)(v0 + 200), *(void *)(v0 + 168));
    uint64_t v13 = *(void *)(v12 + 24);
    swift_getObjectType();
    uint64_t v16 = (uint64_t (*)(uint64_t))(*(void *)(v13 + 8) + **(int **)(v13 + 8));
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_1C9848034;
    uint64_t v15 = OUTLINED_FUNCTION_5_41();
    return v16(v15);
  }
}

uint64_t sub_1C9848414()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_1C9848650;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1C9848500;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C9848500()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9848590()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 168);
  swift_release();
  sub_1C984881C(v2, (uint64_t (*)(void))type metadata accessor for NLContextUpdate);
  sub_1C984881C(v1, (uint64_t (*)(void))type metadata accessor for FlowOutputAtom);
  OUTLINED_FUNCTION_3_46();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9848650()
{
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_46();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t type metadata accessor for FlowOutputHandler()
{
  return self;
}

uint64_t sub_1C9848704(uint64_t a1)
{
  return sub_1C984793C(a1) & 1;
}

uint64_t sub_1C9848720()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C98479AC();
}

uint64_t sub_1C98487B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NLContextUpdate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C984881C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_46()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_41()
{
  return *(void *)(v0 + 168);
}

void *OUTLINED_FUNCTION_9_31()
{
  *(void *)(v1 + 272) = v0;
  return __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v1 + 160) + 32), *(void *)(*(void *)(v1 + 160) + 56));
}

uint64_t OUTLINED_FUNCTION_10_31()
{
  return sub_1C97C7030(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_34()
{
  return sub_1C9BED8D8();
}

uint64_t OUTLINED_FUNCTION_13_39()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_14_32@<X0>(uint64_t a1@<X8>)
{
  return *(void *)a1;
}

uint64_t static FlowOutputHelper.makeFlowOutput(atoms:flowActivity:)(uint64_t a1, uint64_t a2)
{
  sub_1C95FE5B0(a2, (uint64_t)v4, (uint64_t *)&unk_1EBC789D0);
  type metadata accessor for FlowOutput();
  swift_allocObject();
  uint64_t v2 = swift_bridgeObjectRetain();
  return FlowOutput.init(atoms:flowActivity:)(v2, (uint64_t)v4);
}

uint64_t sub_1C9848A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58B0D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s11SiriKitFlow0C12OutputHelperO04makecD08addViews15nlContextUpdate12flowActivityAA0cD0CSo07SAUIAddH0C_AA09NLContextK0VSgAA0cM0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v53 = a2;
  uint64_t v58 = (char *)a1;
  uint64_t v52 = type metadata accessor for FlowOutputAtom();
  uint64_t v59 = *(void *)(v52 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v52, v3);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v57 = (uint64_t)&v51 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58B0D8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v13 = MEMORY[0x1F4188790](v9, v12);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16);
  id v18 = (char *)&v51 - v17;
  uint64_t v19 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v20, v21);
  OUTLINED_FUNCTION_6_0();
  uint64_t v51 = v23 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  MEMORY[0x1F4188790](v24 - 8, v25);
  OUTLINED_FUNCTION_6_0();
  uint64_t v28 = v27 - v26;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA58E680);
  uint64_t v29 = *(void *)(v10 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C9BF0BB0;
  uint64_t v54 = v31;
  uint64_t v32 = v31 + v30;
  uint64_t v33 = v52;
  sub_1C95FE5B0(v53, v28, &qword_1EBC77C70);
  uint64_t v34 = 1;
  if (__swift_getEnumTagSinglePayload(v28, 1, v19) != 1)
  {
    uint64_t v35 = v51;
    sub_1C984AA08(v28, v51, (void (*)(void))type metadata accessor for NLContextUpdate);
    sub_1C9652F6C(v35, v32);
    swift_storeEnumTagMultiPayload();
    sub_1C96A944C(v35);
    uint64_t v34 = 0;
  }
  __swift_storeEnumTagSinglePayload(v32, v34, 1, v33);
  uint64_t v36 = v58;
  *(void *)(v32 + v29) = v58;
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v32 + v29, 0, 1, v33);
  id v37 = v36;
  char v38 = 0;
  uint64_t v39 = 0;
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t v41 = &qword_1EA58B0D8;
  uint64_t v58 = v6;
  uint64_t v42 = v33;
  uint64_t v56 = v18;
  do
  {
    char v43 = v38;
    sub_1C95FE5B0(v32 + v39 * v29, (uint64_t)v18, v41);
    sub_1C9848A00((uint64_t)v18, (uint64_t)v15);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v42) == 1)
    {
      sub_1C95FE76C((uint64_t)v15, v41);
    }
    else
    {
      unint64_t v44 = v41;
      uint64_t v45 = v32;
      uint64_t v46 = v57;
      sub_1C984AA08((uint64_t)v15, v57, (void (*)(void))type metadata accessor for FlowOutputAtom);
      sub_1C984AA08(v46, (uint64_t)v6, (void (*)(void))type metadata accessor for FlowOutputAtom);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_1C9654C1C(0, *(void *)(v40 + 16) + 1, 1, v40);
      }
      unint64_t v48 = *(void *)(v40 + 16);
      unint64_t v47 = *(void *)(v40 + 24);
      uint64_t v32 = v45;
      if (v48 >= v47 >> 1) {
        uint64_t v40 = sub_1C9654C1C(v47 > 1, v48 + 1, 1, v40);
      }
      uint64_t v41 = v44;
      *(void *)(v40 + 16) = v48 + 1;
      uint64_t v49 = v40
          + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))
          + *(void *)(v59 + 72) * v48;
      uint64_t v6 = v58;
      sub_1C984AA08((uint64_t)v58, v49, (void (*)(void))type metadata accessor for FlowOutputAtom);
      id v18 = v56;
    }
    char v38 = 1;
    uint64_t v39 = 1;
  }
  while ((v43 & 1) == 0);
  swift_setDeallocating();
  sub_1C95FE44C();
  sub_1C95FE5B0(v55, (uint64_t)v60, (uint64_t *)&unk_1EBC789D0);
  type metadata accessor for FlowOutput();
  swift_allocObject();
  return FlowOutput.init(atoms:flowActivity:)(v40, (uint64_t)v60);
}

void static FlowOutputHelper.makeCancellationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:canUseServerTTS:flowActivity:)(uint64_t a1, void *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  MEMORY[0x1F4188790](v3 - 8, v4);
  OUTLINED_FUNCTION_6_0();
  sub_1C98491A4(a2);
}

void sub_1C98491A4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D40);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 184))(v4, v5);
  sub_1C9BEC878();
}

void sub_1C984956C(unint64_t a1, unint64_t a2)
{
  unint64_t v28 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_48:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C9BEE3C8();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      while (1)
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v6 = (id)MEMORY[0x1CB78B3A0](v5 - 4, a2);
        }
        else {
          id v6 = *(id *)(a2 + 8 * v5);
        }
        uint64_t v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        id v9 = objc_msgSend(v6, sel_dialog);

        if (v9) {
          break;
        }
        ++v5;
        if (v8 == v4) {
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_1EBC7A3B8 != -1) {
        goto LABEL_55;
      }
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v28)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v12 = &unk_1C9BF0000;
  if (v11 >= v10) {
    goto LABEL_24;
  }
  if (qword_1EBC7A3B8 != -1) {
    goto LABEL_52;
  }
  while (1)
  {
    uint64_t v13 = sub_1C9BECF88();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C9BECF78();
    os_log_type_t v15 = sub_1C9BEDC88();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = v12[106];
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      uint64_t v12 = (void *)&unk_1C9BF0000;
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v14, v15, "FlowOutputHelper is applying dialogs to snippets but there are %ld dialogs and %ld snippets. We will attempt to attach dialogs to as many snippets as possible and add empty AceViews as needed.", (uint8_t *)v16, 0x16u);
      MEMORY[0x1CB78C440](v16, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_24:
    if ((v10 & 0x8000000000000000) == 0) {
      break;
    }
    __break(1u);
LABEL_52:
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C96B00CC(0, v10, a2, a1);
  if (v10 < v11)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C9BECF88();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1C9BECF78();
    os_log_type_t v23 = sub_1C9BEDC78();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = v12[106];
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2048;
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v22, v23, "FlowOutputHelper received %ld dialogs but there are %ld snippets. Adding remaining snippets without dialog.", (uint8_t *)v24, 0x16u);
      MEMORY[0x1CB78C440](v24, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v4 < v10)
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v28)
    {
      swift_bridgeObjectRetain();
      if (sub_1C9BEE3C8() >= v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C9BEE3C8();
        swift_bridgeObjectRelease();
LABEL_38:
        if (v25 >= v4)
        {
          if ((a2 & 0xC000000000000001) == 0 || v10 == v4)
          {
LABEL_44:
            if (v28)
            {
              swift_bridgeObjectRetain();
              sub_1C9BEE3D8();
              swift_bridgeObjectRelease_n();
            }
            sub_1C965F67C();
            return;
          }
          if (v10 < v4)
          {
            sub_1C96044C4(0, (unint64_t *)&qword_1EA588D70);
            uint64_t v26 = v10;
            do
            {
              uint64_t v27 = v26 + 1;
              sub_1C9BEE1C8();
              uint64_t v26 = v27;
            }
            while (v4 != v27);
            goto LABEL_44;
          }
LABEL_58:
          __break(1u);
          return;
        }
LABEL_54:
        __break(1u);
LABEL_55:
        swift_once();
LABEL_20:
        uint64_t v17 = sub_1C9BECF88();
        __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
        id v18 = sub_1C9BECF78();
        os_log_type_t v19 = sub_1C9BEDC68();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          _os_log_impl(&dword_1C95F9000, v18, v19, "FlowOutputHelper detected SADialogs on one or more snippets. Declining to modify provided snippets", v20, 2u);
          MEMORY[0x1CB78C440](v20, -1, -1);
        }

        swift_bridgeObjectRetain();
        return;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v25 >= (unint64_t)v10)
      {
        swift_bridgeObjectRetain();
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_58;
  }
}

uint64_t static FlowOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:preCommandSubmissionContextUpdate:postCommandSubmissionContextUpdate:flowActivity:)(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *a1;
  long long v28 = *(_OWORD *)(a1 + 5);
  uint64_t v15 = a1[7];
  uint64_t v16 = a1[8];
  sub_1C96044C4(0, &qword_1EBC774D8);
  uint64_t v29 = v14;
  long long v17 = *(_OWORD *)(a1 + 3);
  long long v30 = *(_OWORD *)(a1 + 1);
  long long v31 = v17;
  long long v32 = v28;
  uint64_t v33 = v15;
  uint64_t v34 = v16;
  unint64_t v18 = sub_1C9651EC4((uint64_t)&v29, a6);
  sub_1C984956C(v18, a4);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  sub_1C96044C4(0, &qword_1EA595FD0);
  uint64_t v21 = sub_1C9BED568();
  id v23 = sub_1C96A055C(v21, v22, v20, MEMORY[0x1E4FBC860], 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v24 = v23;
  uint64_t v25 = sub_1C9849D70(v23, a7, a8);

  sub_1C95FE5B0(a9, (uint64_t)&v29, (uint64_t *)&unk_1EBC789D0);
  type metadata accessor for FlowOutput();
  swift_allocObject();
  uint64_t v26 = FlowOutput.init(atoms:flowActivity:)(v25, (uint64_t)&v29);

  return v26;
}

uint64_t sub_1C9849D70(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for NLContextUpdate();
  MEMORY[0x1F4188790](v6, v7);
  id v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15);
  long long v17 = (char *)&v30 - v16;
  sub_1C95FE5B0(a2, (uint64_t)&v30 - v16, &qword_1EBC77C70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v6) == 1)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    if (!a1) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C984AA08((uint64_t)v17, (uint64_t)v9, (void (*)(void))type metadata accessor for NLContextUpdate);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9C8);
  uint64_t v22 = *(void *)(type metadata accessor for FlowOutputAtom() - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C9BEF570;
  sub_1C9652F6C((uint64_t)v9, v18 + v23);
  swift_storeEnumTagMultiPayload();
  sub_1C96A944C((uint64_t)v9);
  if (a1)
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9C8);
    uint64_t v19 = *(void *)(type metadata accessor for FlowOutputAtom() - 8);
    unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C9BEF570;
    *(void *)(v21 + v20) = a1;
    swift_storeEnumTagMultiPayload();
  }
LABEL_5:
  uint64_t v31 = v18;
  id v24 = a1;
  sub_1C965F1CC();
  uint64_t v25 = v31;
  sub_1C95FE5B0(a3, (uint64_t)v14, &qword_1EBC77C70);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v6) != 1)
  {
    sub_1C984AA08((uint64_t)v14, (uint64_t)v9, (void (*)(void))type metadata accessor for NLContextUpdate);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9C8);
    uint64_t v26 = *(void *)(type metadata accessor for FlowOutputAtom() - 8);
    unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C9BEF570;
    sub_1C9652F6C((uint64_t)v9, v28 + v27);
    swift_storeEnumTagMultiPayload();
    sub_1C96A944C((uint64_t)v9);
  }
  uint64_t v31 = v25;
  sub_1C965F1CC();
  return v31;
}

void static FlowOutputHelper.makeClarificationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t a1, void *a2)
{
}

uint64_t static FlowOutputHelper.makeClarificationViewOutput(aceViews:nlContextUpdate:flowActivity:)(uint64_t a1)
{
  sub_1C96044C4(0, &qword_1EA595FD0);
  uint64_t v2 = sub_1C9BED568();
  id v4 = sub_1C96A055C(v2, v3, a1, MEMORY[0x1E4FBC860], 0);
  swift_bridgeObjectRelease();
  uint64_t v5 = static FlowOutputHelper.makeFlowOutput(addDialogs:nlContextUpdate:flowActivity:)(v4);

  return v5;
}

void static FlowOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t a1, void *a2)
{
}

void static FlowOutputHelper.makeConfirmationViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t a1, void *a2)
{
}

void static FlowOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t a1, void *a2)
{
}

void static FlowOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t a1, void *a2)
{
}

void static FlowOutputHelper.makeSummaryViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:flowActivity:)(uint64_t a1, void *a2)
{
}

void sub_1C984A7E8(uint64_t a1, void *a2)
{
}

uint64_t sub_1C984AA08(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

ValueMetadata *type metadata accessor for FlowOutputHelper()
{
  return &type metadata for FlowOutputHelper;
}

uint64_t OUTLINED_FUNCTION_0_35()
{
  uint64_t v5 = *(void *)(v4 - 216);
  *(void *)(v4 - 152) = *(void *)(v4 - 168);
  *(void *)(v4 - 144) = v5;
  *(void *)(v4 - 136) = *(void *)(v4 - 208);
  *(void *)(v4 - 128) = v1;
  *(void *)(v4 - 120) = *(void *)(v4 - 200);
  *(void *)(v4 - 112) = v3;
  uint64_t v6 = *(void *)(v4 - 192);
  *(void *)(v4 - 104) = v0;
  *(void *)(v4 - 96) = v6;
  *(void *)(v4 - 88) = v2;
  return v4 - 152;
}

uint64_t OUTLINED_FUNCTION_6_38()
{
  return swift_bridgeObjectRelease();
}

id OUTLINED_FUNCTION_8_32(uint64_t *a1, int a2, uint64_t a3)
{
  return sub_1C9651C84(a1, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_9_32(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  return v1;
}

uint64_t OUTLINED_FUNCTION_10_32@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

id OUTLINED_FUNCTION_11_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C96A055C(a1, a2, v4, a4, 0);
}

uint64_t OUTLINED_FUNCTION_12_30()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C984ABCC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C984AC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x28uLL) {
    uint64_t v5 = 40;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if ((*(_DWORD *)(v4 + 80) & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  unsigned int v7 = *(unsigned __int8 *)(a2 + v5);
  if (v7 >= 2) {
    unsigned int v7 = *(_DWORD *)a2 + 2;
  }
  if (v7 == 1)
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    *(unsigned char *)(a1 + v5) = 1;
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v8;
    (**(void (***)(uint64_t))(v8 - 8))(a1);
    *(unsigned char *)(a1 + v5) = 0;
  }
  return a1;
}

uint64_t sub_1C984AD94(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x28) {
    unint64_t v2 = 40;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

uint64_t sub_1C984AE90(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x28uLL) {
    uint64_t v4 = 40;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t))(v11 - 8))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C984AFF8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x28uLL) {
      uint64_t v7 = 40;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      uint64_t v19 = *((void *)a2 + 3);
      *((void *)a1 + 3) = v19;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v19 - 8))(a1, a2);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C984B248(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x28uLL) {
    uint64_t v4 = 40;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C984B388(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x28uLL) {
      uint64_t v7 = 40;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      long long v19 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v19;
      *((void *)a1 + 4) = *((void *)a2 + 4);
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C984B5A8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 40;
  if (*(void *)(v3 + 64) > 0x28uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C984B6DC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x28) {
    unint64_t v5 = 40;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C984B8A0);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C984B8C8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 40;
  if (*(void *)(v2 + 64) > 0x28uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C984B980(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x28uLL) {
    size_t v4 = 40;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for _FlowPlanEvent()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C984BA70@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v21[1] = a3;
  uint64_t v7 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v10, v11);
  unsigned int v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14, v15);
  int v17 = (long long *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long long *, uint64_t))(v18 + 16))(v17, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, long long *, uint64_t))(v9 + 32))(v13, v17, v7);
    a1(v13);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v7);
    if (v4) {
      return result;
    }
  }
  else
  {
    sub_1C95FD5D8(v17, a4);
  }
  type metadata accessor for _FlowPlanEvent();
  return swift_storeEnumTagMultiPayload();
}

void sub_1C984BC18()
{
}

Swift::Void __swiftcall FlowPlugin.warmup()()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  osos_log_t log = sub_1C9BECF78();
  os_log_type_t v1 = sub_1C9BEDC78();
  if (os_log_type_enabled(oslog, v1))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_5_27(&dword_1C95F9000, v2, v3, "No-op warming...", v4, v5, v6, v7, v8, oslog);
    OUTLINED_FUNCTION_11_4();
  }
}

void sub_1C984BD00(uint64_t a1, uint64_t a2)
{
}

Swift::Void __swiftcall FlowPlugin.warmup(refId:)(Swift::String refId)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  osos_log_t log = sub_1C9BECF78();
  os_log_type_t v2 = sub_1C9BEDC78();
  if (os_log_type_enabled(oslog, v2))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_5_27(&dword_1C95F9000, v3, v4, "No-op warming...", v5, v6, v7, v8, v9, oslog);
    OUTLINED_FUNCTION_11_4();
  }
}

uint64_t OUTLINED_FUNCTION_14_33()
{
  return 0;
}

uint64_t FlowPlugin.makeFlowFrame(parse:)()
{
  return 0;
}

void *sub_1C984BDF8()
{
  return FlowPlugin.makeFlowFor(parse:)();
}

void *FlowPlugin.makeFlowFor(parse:)()
{
  return sub_1C96C5784();
}

void FlowPlugin.findFlowFor(parse:)(uint64_t a1@<X2>, void *a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a1 + 40))();
  static FlowSearchResult.flow(_:)(v3, a2);
}

uint64_t FlowSearchResult.exclude.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FlowSearchResult() + 28));
}

uint64_t sub_1C984BEC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = 0;
  a4[4] = a2;
  a4[5] = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4 + 1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(boxed_opaque_existential_0, a1, a2);
  uint64_t v8 = type metadata accessor for FlowSearchResult();
  *((unsigned char *)a4 + *(int *)(v8 + 28)) = 1;
  uint64_t v9 = (uint64_t)a4 + *(int *)(v8 + 24);
  uint64_t v10 = type metadata accessor for NamedParseTransformer();

  return __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
}

double sub_1C984BF78()
{
  uint64_t v0 = type metadata accessor for FlowSearchResult();
  __swift_allocate_value_buffer(v0, qword_1EA58E708);
  uint64_t v1 = (_OWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EA58E708);
  uint64_t v2 = (uint64_t)v1 + *(int *)(v0 + 24);
  uint64_t v3 = type metadata accessor for NamedParseTransformer();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  double result = 0.0;
  v1[1] = 0u;
  v1[2] = 0u;
  *uint64_t v1 = 0u;
  *((unsigned char *)v1 + *(int *)(v0 + 28)) = 1;
  return result;
}

uint64_t static FlowSearchResult.noFlow.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA588070 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for FlowSearchResult();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EA58E708);
  return sub_1C968CE28(v3, a1, (void (*)(void))type metadata accessor for FlowSearchResult);
}

uint64_t static FlowSearchResult.flow<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  MEMORY[0x1F4188790](a1, a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  return sub_1C984BEC4((uint64_t)v8, a2, a3, a4);
}

uint64_t SentinalFlow.on(input:)()
{
  return 0;
}

void SentinalFlow.execute(completion:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v2 = MEMORY[0x1F4188790](v0 - 8, v1);
  int v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2, v5);
  uint64_t v7 = (char *)v16 - v6;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C9BECF88();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, v9, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v8);
  sub_1C9608D98((uint64_t)v7, (uint64_t)v4, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_1C95FE76C((uint64_t)v4, &qword_1EBC7A230);
  }
  else
  {
    uint64_t v11 = sub_1C9BECF78();
    os_log_type_t v12 = sub_1C9BEDC88();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      *(void *)&v16[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315650;
      uint64_t v14 = sub_1C9BEE1B8();
      *(void *)&long long v18 = sub_1C95FF228(v14, v15, (uint64_t *)v16);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2048;
      *(void *)&long long v18 = 191;
      sub_1C9BEDF68();
      *(_WORD *)(v13 + 22) = 2080;
      *(void *)&long long v18 = sub_1C95FF228(0xD000000000000022, 0x80000001C9C1DD60, (uint64_t *)v16);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v11, v12, "FatalError at %s:%lu - %s", (uint8_t *)v13, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v8);
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v17 = 0;
  memset(v16, 0, sizeof(v16));
  sub_1C9BEC838();
}

void sub_1C984C58C()
{
}

uint64_t dispatch thunk of FlowPlugin.warmup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FlowPlugin.makeFlowFrame(parse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FlowPlugin.makeFlowFor(parse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FlowPlugin.findFlowFor(parse:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void initializeBufferWithCopyOfBuffer for FlowSearchResult(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  *a1 = *a2;
  if ((v3 & 0x20000) == 0) {
    sub_1C9BEC838();
  }
  sub_1C9BEC838();
}

void assignWithCopy for FlowSearchResult(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1C9BEC838();
}

uint64_t sub_1C984CD9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NamedParseTransformer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for FlowSearchResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for NamedParseTransformer();
  if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76298);
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC762A0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
    }
    sub_1C9BEC828();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC75838);
  memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *(unsigned char *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t assignWithTake for FlowSearchResult(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *(void *)a1 = *a2;
  swift_release();
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v7 = *((_OWORD *)v6 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v6;
  *(_OWORD *)(a1 + 24) = v7;
  *(void *)(a1 + 40) = v6[4];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for NamedParseTransformer();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  int v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      sub_1C984CD9C((uint64_t)v9);
      goto LABEL_9;
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76298);
    int v18 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v17);
    int v19 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v17);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v9, v10, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v17);
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(v17 - 8);
      if (!v19)
      {
        (*(void (**)(void *, char *, uint64_t))(v21 + 40))(v9, v10, v17);
LABEL_18:
        sub_1C9BEC828();
      }
      (*(void (**)(void *, uint64_t))(v21 + 8))(v9, v17);
    }
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC762A0);
    memcpy(v9, v10, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_18;
  }
  if (!v13)
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76298);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v14))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC762A0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v9, v10, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v14);
    }
    sub_1C9BEC828();
  }
LABEL_9:
  size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBC75838) - 8) + 64);
  memcpy(v9, v10, v16);
  *(unsigned char *)(a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C984D4B0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC75838);
    uint64_t v10 = (uint64_t)a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

void *sub_1C984D548(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *double result = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC75838);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_1C984D5CC()
{
  sub_1C984D674();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C984D674()
{
  if (!qword_1EBC75840)
  {
    type metadata accessor for NamedParseTransformer();
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBC75840);
    }
  }
}

ValueMetadata *type metadata accessor for SentinalFlow()
{
  return &type metadata for SentinalFlow;
}

SiriKitFlow::FlowPluginBundleImpl __swiftcall FlowPluginBundleImpl.init(bundlePath:pluginCacheKeys:)(Swift::String bundlePath, Swift::OpaquePointer pluginCacheKeys)
{
  object = bundlePath._object;
  uint64_t countAndFlagsBits = bundlePath._countAndFlagsBits;
  uint64_t v6 = v2;
  uint64_t v7 = *((void *)pluginCacheKeys._rawValue + 2);
  if (v7)
  {
    uint64_t v24 = bundlePath._countAndFlagsBits;
    uint64_t v25 = v2;
    uint64_t v26 = bundlePath._object;
    swift_bridgeObjectRetain();
    uint64_t v8 = (uint64_t *)((char *)pluginCacheKeys._rawValue + 40);
    uint64_t v9 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v10 = *(v8 - 1);
      uint64_t v11 = *v8;
      swift_bridgeObjectRetain();
      sub_1C98A6CB0(v10, v11, (uint64_t)v29);
      if ((void)v30 != 1)
      {
        long long v28 = v30;
        __int16 v12 = v29[0];
        uint64_t v13 = v29[1];
        long long v27 = v31;
        uint64_t v14 = v32;
        char v15 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C9654838();
          uint64_t v9 = v19;
        }
        unint64_t v16 = *(void *)(v9 + 16);
        long long v17 = v28;
        if (v16 >= *(void *)(v9 + 24) >> 1)
        {
          sub_1C9654838();
          long long v17 = v28;
          uint64_t v9 = v20;
        }
        *(void *)(v9 + 16) = v16 + 1;
        uint64_t v18 = v9 + (v16 << 6);
        *(unsigned char *)(v18 + 32) = v12;
        *(unsigned char *)(v18 + 33) = HIBYTE(v12) & 1;
        *(void *)(v18 + 40) = v13;
        *(_OWORD *)(v18 + 48) = v17;
        *(_OWORD *)(v18 + 64) = v27;
        *(void *)(v18 + 80) = v14;
        *(unsigned char *)(v18 + 88) = v15 & 1;
      }
      v8 += 2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    uint64_t v6 = v25;
    object = v26;
    uint64_t countAndFlagsBits = v24;
  }
  else
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  uint64_t v21 = swift_bridgeObjectRelease();
  *uint64_t v6 = countAndFlagsBits;
  v6[1] = (uint64_t)object;
  v6[2] = v9;
  result.supportedTopics._rawValue = v23;
  result.bundlePath._object = v22;
  result.bundlePath._uint64_t countAndFlagsBits = v21;
  return result;
}

uint64_t sub_1C984D868()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C965519C);
}

uint64_t sub_1C984D880()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9654838);
}

uint64_t sub_1C984D898()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C96546E8);
}

uint64_t sub_1C984D8B0()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9655000);
}

uint64_t sub_1C984D8C8()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9654D08);
}

uint64_t sub_1C984D8E0()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9654100);
}

uint64_t sub_1C984D8F8()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C96541FC);
}

uint64_t sub_1C984D910()
{
  return sub_1C984D928((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C96542A0);
}

uint64_t sub_1C984D928(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    *uint64_t v1 = result;
  }
  return result;
}

void *_s11SiriKitFlow5ParseO16DirectInvocationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FlowPluginBundleImpl(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Parse.DirectInvocation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for FlowPluginBundleCache()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FlowPluginBundleCache(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FlowPluginBundleCache(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FlowPluginBundleCache(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowPluginBundleCache(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowPluginBundleCache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowPluginBundleCache()
{
  return &type metadata for FlowPluginBundleCache;
}

uint64_t sub_1C984DCB8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  MEMORY[0x1F4188790](v5 - 8, v6);
  OUTLINED_FUNCTION_7_37();
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v68 = (char *)&v62 - v9;
  uint64_t v10 = sub_1C9BEA988();
  OUTLINED_FUNCTION_0_2();
  uint64_t v67 = v11;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_1();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  MEMORY[0x1F4188790](v14 - 8, v15);
  OUTLINED_FUNCTION_6_0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_1C9BECEE8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v21 = v20;
  MEMORY[0x1F4188790](v22, v23);
  OUTLINED_FUNCTION_6_0();
  uint64_t v26 = v25 - v24;
  sub_1C9BEDD88();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BECED8();
  sub_1C9BECEA8();
  uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v64(v26, v19);
  id v27 = objc_msgSend(self, sel_defaultManager);
  uint64_t v65 = a1;
  uint64_t v63 = v19;
  long long v28 = (void *)sub_1C9BEA928();
  *(void *)&v69[0] = 0;
  id v29 = objc_msgSend(v27, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v28, 0, 0, v69);

  long long v30 = *(void **)&v69[0];
  if (!v29)
  {
    uint64_t v49 = v2;
    id v50 = *(id *)&v69[0];
    uint64_t v51 = (void *)sub_1C9BEA8C8();

    swift_willThrow();
    sub_1C9BEDD78();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1C9BEF570;
    *(void *)(v52 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v52 + 64) = sub_1C9604B38();
    *(void *)(v52 + 32) = 0x6572756C696146;
    *(void *)(v52 + 40) = 0xE700000000000000;
    sub_1C9BECED8();
    sub_1C9BECE98();
    swift_bridgeObjectRelease();
    v64(v26, v63);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_1C9BECF88();
    uint64_t v54 = __swift_project_value_buffer(v53, (uint64_t)qword_1EBC7A520);
    uint64_t v55 = *(void *)(v53 - 8);
    uint64_t v56 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v68, v54, v53);
    __swift_storeEnumTagSinglePayload(v56, 0, 1, v53);
    sub_1C96C26E8(v56, v49);
    if (__swift_getEnumTagSinglePayload(v49, 1, v53) == 1)
    {
      sub_1C95FE7C0(v49, &qword_1EBC7A230);
    }
    else
    {
      uint64_t v57 = sub_1C9BECF78();
      os_log_type_t v58 = sub_1C9BEDC88();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = swift_slowAlloc();
        *(void *)&v69[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 136315650;
        uint64_t v60 = sub_1C9BEE1B8();
        *(void *)&v71[0] = sub_1C95FF228(v60, v61, (uint64_t *)v69);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        *(_WORD *)(v59 + 12) = 2048;
        *(void *)&v71[0] = 94;
        sub_1C9BEDF68();
        *(_WORD *)(v59 + 22) = 2080;
        *(void *)&v71[0] = sub_1C95FF228(0xD000000000000036, 0x80000001C9C1E3C0, (uint64_t *)v69);
        sub_1C9BEDF68();
        _os_log_impl(&dword_1C95F9000, v57, v58, "FatalError at %s:%lu - %s", (uint8_t *)v59, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }

      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v49, v53);
    }
    if (qword_1EBC78750 != -1) {
      swift_once();
    }
    memset(v71, 0, sizeof(v71));
    uint64_t v70 = 0;
    memset(v69, 0, sizeof(v69));
    sub_1C9BEC838();
  }
  uint64_t v31 = sub_1C9BED878();
  id v32 = v30;

  *(void *)&v69[0] = MEMORY[0x1E4FBC868];
  *(void *)&v71[0] = MEMORY[0x1E4FBC868];
  uint64_t v33 = *(void *)(v31 + 16);
  uint64_t v64 = (void (*)(uint64_t, uint64_t))v31;
  if (v33)
  {
    uint64_t v68 = *(char **)(v67 + 16);
    unint64_t v34 = v31 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
    uint64_t v35 = *(void *)(v67 + 72);
    uint64_t v36 = (void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32);
    swift_bridgeObjectRetain();
    while (1)
    {
      ((void (*)(uint64_t, unint64_t, uint64_t))v68)(v18, v34, v10);
      __swift_storeEnumTagSinglePayload(v18, 0, 1, v10);
      if (__swift_getEnumTagSinglePayload(v18, 1, v10) == 1) {
        break;
      }
      (*v36)(v3, v18, v10);
      sub_1C985004C(v3, (uint64_t *)v69, (uint64_t *)v71);
      uint64_t v37 = OUTLINED_FUNCTION_12_31();
      v38(v37);
      v34 += v35;
      if (!--v33) {
        goto LABEL_10;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_10:
    __swift_storeEnumTagSinglePayload(v18, 1, 1, v10);
  }
  swift_bridgeObjectRelease_n();
  uint64_t v39 = *(void *)&v69[0];
  uint64_t v40 = *(void *)&v71[0];
  uint64_t v41 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v42 = objc_msgSend(v41, sel_processInfo);
  id v43 = objc_msgSend(v42, sel_operatingSystemVersionString);

  uint64_t v44 = sub_1C9BED568();
  uint64_t v46 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1C984FE9C();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v65, v10);
  unint64_t v48 = v66;
  *uint64_t v66 = v39;
  v48[1] = v44;
  void v48[2] = v46;
  v48[3] = 0;
  v48[4] = v40;
  return result;
}

uint64_t sub_1C984E5DC()
{
  if (v0[4])
  {
    uint64_t v1 = v0[4];
  }
  else
  {
    uint64_t v1 = sub_1C984FA34(v0);
    v0[4] = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C984E628()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v1 = sub_1C984F664(v2);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C984E69C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1C9BEA988();
  OUTLINED_FUNCTION_0_2();
  uint64_t v65 = v6;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_7_37();
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v11 = sub_1C9BECEE8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_1();
  uint64_t v62 = self;
  id v16 = objc_msgSend(v62, sel_processInfo);

  sub_1C9BEDD88();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BECED8();
  sub_1C9BECEA8();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  uint64_t v63 = v11;
  v17(v2, v11);
  uint64_t v18 = v17;
  id v19 = objc_msgSend(self, sel_defaultManager);
  sub_1C9BEA968();
  uint64_t v20 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  LODWORD(v17) = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  uint64_t v64 = a2;
  if (!v17)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C9BECF88();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EBC7A520);
    uint64_t v23 = sub_1C9BECF78();
    os_log_type_t v24 = sub_1C9BEDCA8();
    uint64_t v25 = v65;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1C95F9000, v23, v24, "Didn't find a bundle cache file, will compute a fresh cache file", v26, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C9BEDD78();
    sub_1C9BECED8();
    OUTLINED_FUNCTION_4_43();
    OUTLINED_FUNCTION_1_42();
    goto LABEL_10;
  }
  uint64_t v21 = sub_1C9BEA998();
  unint64_t v61 = v18;
  unint64_t v28 = v27;
  uint64_t v29 = v21;
  sub_1C9BEA758();
  swift_allocObject();
  sub_1C9BEA748();
  sub_1C9851710();
  uint64_t v58 = v29;
  unint64_t v59 = v28;
  sub_1C9BEA738();
  uint64_t v57 = v5;
  uint64_t v60 = a1;
  swift_release();
  uint64_t v30 = v66;
  uint64_t v31 = v67;
  unint64_t v32 = v68;
  uint64_t v33 = v69;
  uint64_t v34 = v70;
  id v35 = objc_msgSend(v62, sel_processInfo);
  id v36 = objc_msgSend(v35, sel_operatingSystemVersionString);

  uint64_t v37 = sub_1C9BED568();
  uint64_t v39 = v38;

  if (v67 == v37 && v68 == v39)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v41 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if ((v41 & 1) == 0)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v42 = sub_1C9BECF88();
      __swift_project_value_buffer(v42, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v43 = sub_1C9BECF78();
      os_log_type_t v44 = sub_1C9BEDCA8();
      if (os_log_type_enabled(v43, v44))
      {
        os_log_type_t v56 = v44;
        uint64_t v45 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        *(_DWORD *)uint64_t v45 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_1C95FF228(v31, v32, &v66);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        id v46 = objc_msgSend(v62, sel_processInfo);
        id v47 = objc_msgSend(v46, sel_operatingSystemVersionString);

        uint64_t v48 = sub_1C9BED568();
        unint64_t v50 = v49;

        uint64_t v71 = sub_1C95FF228(v48, v50, &v66);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C95F9000, v43, v56, "Cached FlowDelegate os version %s does not match current os version %s", (uint8_t *)v45, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
        sub_1C960B0D8(v58, v59);
      }
      else
      {
        sub_1C960B0D8(v58, v59);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v25 = v65;
      sub_1C9BEDD78();
      sub_1C9BECED8();
      OUTLINED_FUNCTION_13_40();
      OUTLINED_FUNCTION_1_42();
      a1 = v60;
      uint64_t v5 = v57;
LABEL_10:
      v18(v2, v63);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(a1, v5);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      unint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      goto LABEL_20;
    }
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_1C9BECF88();
  __swift_project_value_buffer(v52, (uint64_t)qword_1EBC7A520);
  uint64_t v53 = sub_1C9BECF78();
  os_log_type_t v54 = sub_1C9BEDCA8();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v55 = 0;
    _os_log_impl(&dword_1C95F9000, v53, v54, "Loaded bundle cache successfully", v55, 2u);
    OUTLINED_FUNCTION_11_4();
  }
  sub_1C960B0D8(v58, v59);

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C9BEDD78();
  sub_1C9BECED8();
  OUTLINED_FUNCTION_4_43();
  OUTLINED_FUNCTION_1_42();
  v61(v2, v63);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v60, v57);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_20:
  *uint64_t v64 = v30;
  v64[1] = v31;
  v64[2] = v32;
  v64[3] = v33;
  v64[4] = v34;
  return result;
}

uint64_t sub_1C984F294()
{
  sub_1C9BECEE8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v1 = v0;
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  sub_1C9BEDD88();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BECED8();
  sub_1C9BECEA8();
  uint64_t v4 = *(void (**)(uint64_t))(v1 + 8);
  uint64_t v5 = OUTLINED_FUNCTION_5_42();
  v4(v5);
  sub_1C9BEA798();
  swift_allocObject();
  sub_1C9BEA788();
  sub_1C985175C();
  uint64_t v6 = sub_1C9BEA778();
  unint64_t v8 = v7;
  sub_1C9BEAA08();
  sub_1C9BEDD78();
  sub_1C9BECED8();
  OUTLINED_FUNCTION_4_43();
  sub_1C9BECE98();
  uint64_t v9 = OUTLINED_FUNCTION_5_42();
  v4(v9);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C9BECF88();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EBC7A520);
  uint64_t v11 = sub_1C9BECF78();
  os_log_type_t v12 = sub_1C9BEDCA8();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_1C95F9000, v11, v12, "Wrote bundle cache successfully", v13, 2u);
    OUTLINED_FUNCTION_11_4();
  }
  sub_1C960B0D8(v6, v8);

  return swift_release();
}

uint64_t sub_1C984F664(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x1E4FBC868];
  uint64_t v37 = MEMORY[0x1E4FBC868];
  sub_1C9B8C3DC(a1);
  int64_t v30 = v35;
  unint64_t v2 = v36;
  int64_t v28 = (unint64_t)(v34 + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v36) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v5 = __clz(__rbit64(v2));
  v2 &= v2 - 1;
  unint64_t v6 = v5 | (v30 << 6);
  while (1)
  {
    uint64_t v31 = v4;
    uint64_t v11 = (uint64_t *)(*(void *)(v32 + 48) + 16 * v6);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    uint64_t v14 = *(void *)(*(void *)(v32 + 56) + 8 * v6);
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v29 = *v11;
      sub_1C97EA544();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v16 = v14 + 40;
      do
      {
        swift_bridgeObjectRetain();
        if (sub_1C98163BC())
        {
          MEMORY[0x1CB78AA10]();
          if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C9BED8D8();
          }
          sub_1C9BED948();
          sub_1C9BED8A8();
        }
        v16 += 16;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      uint64_t v17 = v31;
      uint64_t v4 = MEMORY[0x1E4FBC860];
      uint64_t v12 = v29;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = v4;
    }
    if (*(void *)(v1 + 24) <= *(void *)(v1 + 16))
    {
      sub_1C976A8A4();
      uint64_t v1 = v37;
    }
    sub_1C9BEE738();
    sub_1C9BED4E8();
    uint64_t result = sub_1C9BEE768();
    uint64_t v18 = v1 + 64;
    uint64_t v19 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v1 + 64 + 8 * (v20 >> 6))) == 0) {
      break;
    }
    unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v1 + 64 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_39:
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    unint64_t v27 = (void *)(*(void *)(v1 + 48) + 16 * v22);
    *unint64_t v27 = v12;
    v27[1] = v13;
    *(void *)(*(void *)(v1 + 56) + 8 * v22) = v17;
    ++*(void *)(v1 + 16);
    uint64_t result = swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v7 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      goto LABEL_43;
    }
    if (v7 >= v28) {
      goto LABEL_41;
    }
    unint64_t v8 = *(void *)(v33 + 8 * v7);
    int64_t v9 = v30 + 1;
    if (!v8)
    {
      int64_t v9 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_41;
      }
      unint64_t v8 = *(void *)(v33 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_41;
        }
        unint64_t v8 = *(void *)(v33 + 8 * v9);
        if (!v8)
        {
          int64_t v9 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_41;
          }
          unint64_t v8 = *(void *)(v33 + 8 * v9);
          if (!v8)
          {
            int64_t v9 = v30 + 5;
            if (v30 + 5 >= v28) {
              goto LABEL_41;
            }
            unint64_t v8 = *(void *)(v33 + 8 * v9);
            if (!v8)
            {
              int64_t v10 = v30 + 6;
              while (v10 < v28)
              {
                unint64_t v8 = *(void *)(v33 + 8 * v10++);
                if (v8)
                {
                  int64_t v9 = v10 - 1;
                  goto LABEL_18;
                }
              }
LABEL_41:
              sub_1C9757D18();
              return v1;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v2 = (v8 - 1) & v8;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
    int64_t v30 = v9;
  }
  char v23 = 0;
  unint64_t v24 = (unint64_t)(63 - v19) >> 6;
  while (++v21 != v24 || (v23 & 1) == 0)
  {
    BOOL v25 = v21 == v24;
    if (v21 == v24) {
      unint64_t v21 = 0;
    }
    v23 |= v25;
    uint64_t v26 = *(void *)(v18 + 8 * v21);
    if (v26 != -1)
    {
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
      goto LABEL_39;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C984FA34(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v18[0] = MEMORY[0x1E4FBC868];
  sub_1C9B8C3DC(v1);
  uint64_t v2 = v18[1];
  uint64_t v3 = v18[2];
  int64_t v4 = v18[4];
  unint64_t v5 = v19;
  int64_t v6 = (unint64_t)(v18[3] + 64) >> 6;
  swift_bridgeObjectRetain_n();
  if (!v19) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v8);
    uint64_t v13 = v12[1];
    uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * v8);
    v17[0] = *v12;
    v17[1] = v13;
    v17[2] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C984FC1C(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_24;
    }
    unint64_t v10 = *(void *)(v3 + 8 * v9);
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 3;
      if (v4 + 3 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 4;
      if (v4 + 4 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10) {
        goto LABEL_14;
      }
      int64_t v11 = v4 + 5;
      if (v4 + 5 >= v6) {
        goto LABEL_24;
      }
      unint64_t v10 = *(void *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        int64_t v9 = v11;
      }
      else
      {
        int64_t v9 = v4 + 6;
        if (v4 + 6 >= v6) {
          goto LABEL_24;
        }
        unint64_t v10 = *(void *)(v3 + 8 * v9);
        if (!v10)
        {
          int64_t v15 = v4 + 7;
          while (v15 < v6)
          {
            unint64_t v10 = *(void *)(v3 + 8 * v15++);
            if (v10)
            {
              int64_t v9 = v15 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_bridgeObjectRelease();
          swift_release();
          return v18[0];
        }
      }
    }
LABEL_15:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v9 << 6);
    int64_t v4 = v9;
  }
  __break(1u);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1C984FC1C(void *a1, uint64_t *a2)
{
  uint64_t result = a2[2];
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = a2[1];
    uint64_t v28 = *a2;
    unint64_t v5 = 0;
    int64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    uint64_t v27 = v4;
    while (1)
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C9629FFC((uint64_t)v5);
      swift_isUniquelyReferenced_nonNull_native();
      int64_t v30 = (void *)*a1;
      *a1 = 0x8000000000000000;
      unint64_t v9 = sub_1C9604E34(v8, v7);
      if (__OFADD__(v30[2], (v10 & 1) == 0)) {
        break;
      }
      unint64_t v11 = v9;
      char v12 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E728);
      if (sub_1C9BEE358())
      {
        unint64_t v13 = sub_1C9604E34(v8, v7);
        if ((v12 & 1) != (v14 & 1)) {
          goto LABEL_22;
        }
        unint64_t v11 = v13;
      }
      *a1 = v30;
      swift_bridgeObjectRelease();
      int64_t v15 = (void *)*a1;
      if ((v12 & 1) == 0)
      {
        v15[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v16 = (uint64_t *)(v15[6] + 16 * v11);
        *uint64_t v16 = v8;
        v16[1] = v7;
        *(void *)(v15[7] + 8 * v11) = MEMORY[0x1E4FBC860];
        uint64_t v17 = v15[2];
        uint64_t v18 = v17 + 1;
        BOOL v19 = __OFADD__(v17, 1);
        swift_bridgeObjectRetain();
        if (v19) {
          goto LABEL_21;
        }
        void v15[2] = v18;
      }
      swift_bridgeObjectRetain();
      uint64_t v20 = v15[7];
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v20 + 8 * v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v20 + 8 * v11) = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C965519C();
        uint64_t v21 = v25;
        *(void *)(v20 + 8 * v11) = v25;
      }
      unint64_t v23 = *(void *)(v21 + 16);
      if (v23 >= *(void *)(v21 + 24) >> 1)
      {
        sub_1C965519C();
        uint64_t v21 = v26;
        *(void *)(v20 + 8 * v11) = v26;
      }
      v6 += 2;
      *(void *)(v21 + 16) = v23 + 1;
      uint64_t v24 = v21 + 16 * v23;
      *(void *)(v24 + 32) = v28;
      *(void *)(v24 + 40) = v27;
      swift_bridgeObjectRelease();
      unint64_t v5 = sub_1C984FE8C;
      if (!--v3) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    uint64_t result = sub_1C9BEE698();
    __break(1u);
  }
  return result;
}

void sub_1C984FE8C(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1C984FE9C()
{
  uint64_t v0 = sub_1C9BECEE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEDD78();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C9BEF570;
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1C9604B38();
  *(void *)(v5 + 32) = 0x73736563637553;
  *(void *)(v5 + 40) = 0xE700000000000000;
  sub_1C9BECED8();
  sub_1C9BECE98();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

void sub_1C985004C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C9BEA988();
  uint64_t v7 = *(NSObject **)(v6 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6, v8);
  uint64_t v77 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9, v11);
  uint64_t v78 = (char *)&v74 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12, v14);
  uint64_t v79 = (char *)&v74 - v16;
  MEMORY[0x1F4188790](v15, v17);
  BOOL v19 = (char *)&v74 - v18;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C9BECF88();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1EBC7A520);
  isa = (void (*)(char *, uint64_t, uint64_t))v7[2].isa;
  os_log_t v83 = v7 + 2;
  isa(v19, a1, v6);
  uint64_t v84 = v21;
  unint64_t v22 = sub_1C9BECF78();
  os_log_type_t v23 = sub_1C9BEDCA8();
  BOOL v24 = os_log_type_enabled(v22, v23);
  id v85 = v7;
  if (v24)
  {
    os_log_t v76 = v22;
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    uint64_t v86 = v75;
    uint64_t v81 = v6;
    *(_DWORD *)uint64_t v25 = 136315138;
    int v80 = (void (*)(char *, uint64_t))(v25 + 4);
    uint64_t v26 = sub_1C9BEA968();
    uint64_t v91 = sub_1C95FF228(v26, v27, &v86);
    uint64_t v6 = v81;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    int v80 = (void (*)(char *, uint64_t))v85[1].isa;
    v80(v19, v6);
    unint64_t v22 = v76;
    _os_log_impl(&dword_1C95F9000, v76, v23, "Loading bundle at path %s", v25, 0xCu);
    uint64_t v28 = v75;
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v28, -1, -1);
    MEMORY[0x1CB78C440](v25, -1, -1);
  }
  else
  {
    int v80 = (void (*)(char *, uint64_t))v7[1].isa;
    ((void (*)(void *__return_ptr, char *, uint64_t))v80)(&loc_1C9BEF000, v19, v6);
  }

  sub_1C97EA544();
  sub_1C9BEA968();
  id v29 = sub_1C98163BC();
  if (v29)
  {
    int64_t v30 = v29;
    uint64_t v31 = sub_1C98454C4(v29);
    if (v32)
    {
      uint64_t v33 = v31;
      unint64_t v34 = v32;
      if (sub_1C98508DC(v31, v32))
      {
        uint64_t v35 = v78;
        isa(v78, a1, v6);
        swift_bridgeObjectRetain();
        uint64_t v36 = v6;
        uint64_t v37 = sub_1C9BECF78();
        os_log_type_t v38 = sub_1C9BEDC68();
        int v39 = v38;
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v40 = swift_slowAlloc();
          uint64_t v81 = v36;
          uint64_t v41 = v40;
          uint64_t v84 = swift_slowAlloc();
          uint64_t v86 = v84;
          *(_DWORD *)uint64_t v41 = 136315394;
          os_log_t v83 = v37;
          uint64_t v42 = sub_1C9BEA968();
          uint64_t v91 = sub_1C95FF228(v42, v43, &v86);
          LODWORD(isa) = v39;
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          v80(v35, v81);
          *(_WORD *)(v41 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v91 = sub_1C95FF228(v33, v34, &v86);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease_n();
          os_log_t v44 = v83;
          _os_log_impl(&dword_1C95F9000, v83, (os_log_type_t)isa, "Skipping bundle at path %s with ID %s; it is in the exclude list",
            (uint8_t *)v41,
            0x16u);
          uint64_t v45 = v84;
          swift_arrayDestroy();
          MEMORY[0x1CB78C440](v45, -1, -1);
          MEMORY[0x1CB78C440](v41, -1, -1);

LABEL_23:
          return;
        }
        v80(v35, v36);

        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
    }
    if (!sub_1C9816494(v30)) {
      sub_1C9BED458();
    }
    uint64_t v54 = static IntentTopic.makeFromBundleInfoPlist(dictionary:)();
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v54 + 16);
    if (v55)
    {
      swift_bridgeObjectRetain();
      uint64_t v60 = v54 + 56;
      do
      {
        char v61 = *(unsigned char *)(v60 + 32);
        char v62 = *(unsigned char *)(v60 - 23);
        LOBYTE(v86) = *(unsigned char *)(v60 - 24);
        BYTE1(v86) = v62;
        long long v87 = *(_OWORD *)(v60 - 16);
        long long v63 = *(_OWORD *)v60;
        long long v64 = *(_OWORD *)(v60 + 16);
        v60 += 64;
        long long v88 = v63;
        long long v89 = v64;
        char v90 = v61;
        sub_1C9850A04((uint64_t)&v86, a2, a1, a3, v56, v57, v58, v59);
        --v55;
      }
      while (v55);

LABEL_25:
      swift_bridgeObjectRelease_n();
      return;
    }
    swift_bridgeObjectRelease();
    uint64_t v67 = v77;
    isa(v77, a1, v6);
    id v47 = sub_1C9BECF78();
    uint64_t v68 = v6;
    os_log_type_t v69 = sub_1C9BEDC88();
    if (os_log_type_enabled(v47, v69))
    {
      uint64_t v81 = v68;
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v86 = v71;
      *(_DWORD *)uint64_t v70 = 136315138;
      uint64_t v84 = (uint64_t)(v70 + 4);
      uint64_t v72 = sub_1C9BEA968();
      uint64_t v91 = sub_1C95FF228(v72, v73, &v86);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      v80(v67, v81);
      _os_log_impl(&dword_1C95F9000, v47, v69, "Bundle at path %s has malformed or no entries for SupportDomains, SupportedIntents, SupportedInvocations, or SupportedPegasusComponents keys", v70, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v71, -1, -1);
      MEMORY[0x1CB78C440](v70, -1, -1);

      goto LABEL_23;
    }

    uint64_t v65 = v67;
    uint64_t v66 = v68;
    goto LABEL_27;
  }
  id v46 = v79;
  isa(v79, a1, v6);
  id v47 = sub_1C9BECF78();
  os_log_type_t v48 = sub_1C9BEDC88();
  if (!os_log_type_enabled(v47, v48))
  {
    uint64_t v65 = v46;
    uint64_t v66 = v6;
LABEL_27:
    v80(v65, v66);
    goto LABEL_28;
  }
  unint64_t v49 = (uint8_t *)swift_slowAlloc();
  uint64_t v50 = swift_slowAlloc();
  uint64_t v81 = v6;
  uint64_t v51 = v50;
  uint64_t v86 = v50;
  *(_DWORD *)unint64_t v49 = 136315138;
  uint64_t v52 = sub_1C9BEA968();
  uint64_t v91 = sub_1C95FF228(v52, v53, &v86);
  sub_1C9BEDF68();
  swift_bridgeObjectRelease();
  v80(v46, v81);
  _os_log_impl(&dword_1C95F9000, v47, v48, "Could not initialize bundle for path %s", v49, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1CB78C440](v51, -1, -1);
  MEMORY[0x1CB78C440](v49, -1, -1);
LABEL_28:
}

uint64_t sub_1C98508DC(uint64_t a1, uint64_t a2)
{
  if (qword_1EBC78658 != -1) {
    swift_once();
  }
  uint64_t v4 = off_1EBC78650;
  uint64_t v5 = *((void *)off_1EBC78650 + 2);
  if (!v5) {
    return 0;
  }
  BOOL v6 = *((void *)off_1EBC78650 + 4) == a1 && *((void *)off_1EBC78650 + 5) == a2;
  if (v6 || (sub_1C9BEE618() & 1) != 0) {
    return 1;
  }
  if (v5 == 1) {
    return 0;
  }
  if (v4[6] == a1 && v4[7] == a2) {
    return 1;
  }
  uint64_t result = sub_1C9BEE618();
  if (result) {
    return 1;
  }
  if (v5 == 2) {
    return 0;
  }
  uint64_t v9 = v4 + 9;
  for (uint64_t i = 2; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C9BEE618() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v5) {
      return result;
    }
  }
  __break(1u);
  return result;
}

void sub_1C9850A04(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v10 = *(unsigned char *)(a1 + 1);
  char v11 = *(unsigned char *)(a1 + 56);
  LOBYTE(v58) = *(unsigned char *)a1;
  BYTE1(v58) = v10;
  long long v59 = *(_OWORD *)(a1 + 8);
  long long v60 = *(_OWORD *)(a1 + 24);
  long long v61 = *(_OWORD *)(a1 + 40);
  char v62 = v11;
  uint64_t v12 = IntentTopic.cacheKey.getter(a1, (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8, v49, v50, v51, v53, v55, v56, v58, v59);
  unint64_t v14 = v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C9BEA968();
  uint64_t v52 = v16;
  uint64_t v54 = v15;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = v12;
  uint64_t v58 = *a2;
  uint64_t v17 = v58;
  *a2 = 0x8000000000000000;
  unint64_t v18 = sub_1C9604E34(v12, v14);
  if (__OFADD__(*(void *)(v17 + 16), (v19 & 1) == 0))
  {
    __break(1u);
  }
  else
  {
    unint64_t v20 = v18;
    char v21 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E728);
    if (sub_1C9BEE358())
    {
      unint64_t v22 = sub_1C9604E34(v57, v14);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_20;
      }
      unint64_t v20 = v22;
    }
    *a2 = v58;
    swift_bridgeObjectRelease();
    uint64_t v24 = *a2;
    if ((v21 & 1) == 0)
    {
      sub_1C991A4D8(v20, v57, v14, MEMORY[0x1E4FBC860], v24);
      swift_bridgeObjectRetain();
    }
    uint64_t v25 = *(void *)(v24 + 56) + 8 * v20;
    sub_1C984D868();
    uint64_t v26 = *(void *)(*(void *)v25 + 16);
    sub_1C96B0248(v26);
    uint64_t v27 = *(void *)v25;
    *(void *)(v27 + 16) = v26 + 1;
    uint64_t v28 = v27 + 16 * v26;
    *(void *)(v28 + 32) = v54;
    *(void *)(v28 + 40) = v52;
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_1C9BEA968();
    uint64_t v31 = v30;
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = *a4;
    uint64_t v32 = v58;
    *a4 = 0x8000000000000000;
    unint64_t v33 = sub_1C9604E34(v29, v31);
    char v35 = v34;
    if (!__OFADD__(*(void *)(v32 + 16), (v34 & 1) == 0))
    {
      unint64_t v36 = v33;
      if ((sub_1C9BEE358() & 1) == 0) {
        goto LABEL_11;
      }
      unint64_t v37 = sub_1C9604E34(v29, v31);
      if ((v35 & 1) == (v38 & 1))
      {
        unint64_t v36 = v37;
LABEL_11:
        *a4 = v58;
        swift_bridgeObjectRelease();
        uint64_t v39 = *a4;
        if ((v35 & 1) == 0)
        {
          sub_1C991A4D8(v36, v29, v31, MEMORY[0x1E4FBC860], *a4);
          swift_bridgeObjectRetain();
        }
        uint64_t v40 = *(void *)(v39 + 56) + 8 * v36;
        sub_1C984D868();
        uint64_t v41 = *(void *)(*(void *)v40 + 16);
        sub_1C96B0248(v41);
        uint64_t v42 = *(void *)v40;
        *(void *)(v42 + 16) = v41 + 1;
        uint64_t v43 = v42 + 16 * v41;
        *(void *)(v43 + 32) = v57;
        *(void *)(v43 + 40) = v14;
        swift_bridgeObjectRelease();
        if (qword_1EBC7A3B8 == -1) {
          goto LABEL_14;
        }
        goto LABEL_19;
      }
LABEL_20:
      sub_1C9BEE698();
      __break(1u);
      return;
    }
  }
  __break(1u);
LABEL_19:
  swift_once();
LABEL_14:
  uint64_t v44 = sub_1C9BECF88();
  __swift_project_value_buffer(v44, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_1C9BECF78();
  os_log_type_t v46 = sub_1C9BEDC78();
  if (os_log_type_enabled(v45, v46))
  {
    id v47 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v58 = v48;
    *(_DWORD *)id v47 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1C95FF228(v57, v14, &v58);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v45, v46, "Plugin Cache entry for '%s'", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v48, -1, -1);
    MEMORY[0x1CB78C440](v47, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1C9850E40()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  id v1 = sub_1C98516AC(0xD000000000000017, 0x80000001C9C1E470);
  if (v1
    && (uint64_t v2 = v1,
        uint64_t v3 = (void *)sub_1C9BED538(),
        id v4 = objc_msgSend(v2, sel_stringArrayForKey_, v3),
        v2,
        v3,
        v4))
  {
    uint64_t v5 = (void *)sub_1C9BED878();
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  off_1EBC78650 = v5;
}

uint64_t sub_1C9850F14(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001C9C1E590 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C985100C(char a1)
{
  if (a1) {
    return 0x6F6973726556736FLL;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_1C985104C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC74528);
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C98514C4();
  sub_1C9BEE7A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78668);
  sub_1C98515AC();
  sub_1C9BEE568();
  if (!v1) {
    sub_1C9BEE528();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

uint64_t sub_1C98511A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79EF0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  id v7 = objc_msgSend(self, sel_processInfo);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C98514C4();
  sub_1C9BEE798();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78668);
  sub_1C9851510();
  sub_1C9BEE4C8();
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C9BEE488();
  uint64_t v10 = v9;
  uint64_t v11 = OUTLINED_FUNCTION_8_33();
  v12(v11);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v14;
  a2[1] = v8;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = v10;
  return result;
}

uint64_t sub_1C98513BC()
{
  return sub_1C985100C(*v0);
}

uint64_t sub_1C98513C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9850F14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C98513EC(uint64_t a1)
{
  unint64_t v2 = sub_1C98514C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9851428(uint64_t a1)
{
  unint64_t v2 = sub_1C98514C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C9851464@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C98511A0(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C98514AC(void *a1)
{
  return sub_1C985104C(a1);
}

unint64_t sub_1C98514C4()
{
  unint64_t result = qword_1EBC79F18;
  if (!qword_1EBC79F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC79F18);
  }
  return result;
}

unint64_t sub_1C9851510()
{
  unint64_t result = qword_1EA58E720;
  if (!qword_1EA58E720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78668);
    sub_1C9851648(&qword_1EA5927B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E720);
  }
  return result;
}

unint64_t sub_1C98515AC()
{
  unint64_t result = qword_1EBC78670;
  if (!qword_1EBC78670)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78668);
    sub_1C9851648(&qword_1EBC78680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC78670);
  }
  return result;
}

uint64_t sub_1C9851648(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBC786E0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1C98516AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_1C9BED538();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

unint64_t sub_1C9851710()
{
  unint64_t result = qword_1EBC79F30;
  if (!qword_1EBC79F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC79F30);
  }
  return result;
}

unint64_t sub_1C985175C()
{
  unint64_t result = qword_1EBC74510;
  if (!qword_1EBC74510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC74510);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FlowPluginBundleCache.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9851874);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowPluginBundleCache.CodingKeys()
{
  return &type metadata for FlowPluginBundleCache.CodingKeys;
}

unint64_t sub_1C98518B0()
{
  unint64_t result = qword_1EA58E730;
  if (!qword_1EA58E730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58E730);
  }
  return result;
}

unint64_t sub_1C9851900()
{
  unint64_t result = qword_1EBC79F28;
  if (!qword_1EBC79F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC79F28);
  }
  return result;
}

unint64_t sub_1C9851950()
{
  unint64_t result = qword_1EBC79F20;
  if (!qword_1EBC79F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC79F20);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_42()
{
  return sub_1C9BECE98();
}

uint64_t OUTLINED_FUNCTION_5_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_39(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_8_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_11_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_31()
{
  return v0;
}

BOOL OUTLINED_FUNCTION_15_26(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

void AnyFlow.toActingFlow()()
{
}

void Flow.toActingFlow()(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1, a2);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5 - v4, v2, a1);
  type metadata accessor for AnyFlow();
  if (!swift_dynamicCast()) {
    Flow.eraseToAnyFlow()();
  }
  type metadata accessor for FlowToActingFlowAdapter(0);
  OUTLINED_FUNCTION_39_0();
  sub_1C96100A0();
}

void sub_1C9851C3C()
{
  uint64_t v0 = type metadata accessor for FlowToActingFlowAdapter.State(0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_32_21();
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  sub_1C9BEC838();
}

BOOL sub_1C9851D90()
{
  type metadata accessor for FlowToActingFlowAdapter.State(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_34_0();
  uint64_t v4 = v1 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_84_1();
  sub_1C985A7D4(v4, v0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload) {
    sub_1C9611A98(v0, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v0);
  }
  return EnumCaseMultiPayload != 0;
}

void sub_1C9851E6C()
{
}

void sub_1C9851E90()
{
}

void sub_1C9851EB4()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v2;
  v23[3] = type metadata accessor for FlowToActingFlowAdapter.State(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_21_22();
  MEMORY[0x1F4188790](v6, v7);
  v23[4] = (char *)v23 - v8;
  type metadata accessor for FlowTraceEvent();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_68_0();
  unint64_t v13 = (void *)(v11 - v12);
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (void *)((char *)v23 - v16);
  uint64_t v18 = *(void *)(v0 + 24);
  char v19 = (*(uint64_t (**)(uint64_t))(v18 + 80))(v3);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77348);
  uint64_t v21 = *(int *)(v20 + 48);
  uint64_t v22 = *(int *)(v20 + 64);
  if (v19)
  {
    _OWORD v23[2] = v1;
    *uint64_t v17 = v18;
    sub_1C985A7D4(v3, (uint64_t)v17 + v21);
    *((unsigned char *)v17 + v22) = 1;
    swift_storeEnumTagMultiPayload();
    sub_1C9BEC838();
  }
  *unint64_t v13 = v18;
  sub_1C985A7D4(v3, (uint64_t)v13 + v21);
  *((unsigned char *)v13 + v22) = 0;
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

uint64_t sub_1C985251C()
{
  OUTLINED_FUNCTION_24();
  v1[22] = v0;
  uint64_t v2 = type metadata accessor for ExecuteResponse(0);
  OUTLINED_FUNCTION_22(v2);
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FlowToActingFlowAdapter.Event(0);
  v1[24] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[25] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FlowTraceEvent();
  v1[26] = v4;
  OUTLINED_FUNCTION_22(v4);
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for FlowToActingFlowAdapter.State(0);
  v1[29] = v5;
  OUTLINED_FUNCTION_22(v5);
  v1[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9852638, 0, 0);
}

void sub_1C9852638()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 176) + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_84_1();
  sub_1C985A7D4(v2, v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 8)
  {
    if (!EnumCaseMultiPayload)
    {
      sub_1C95FD5D8(*(long long **)(v0 + 240), v0 + 16);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_1C9BECF88();
      __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
      sub_1C9BEC838();
    }
    sub_1C9611A98(*(void *)(v0 + 240), (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
    OUTLINED_FUNCTION_18_26();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_94();
    __asm { BRAA            X1, X16 }
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

uint64_t sub_1C9852B1C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C9852BE8, 0, 0);
}

void sub_1C9852BE8()
{
  uint64_t v1 = *(void *)(v0 + 224);
  char v2 = *(unsigned char *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  *(void *)uint64_t v1 = *(void *)(*(void *)(v0 + 176) + 24);
  *(unsigned char *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  *(unsigned char *)(v1 + 24) = v4;
  *(void *)(v1 + 32) = v5;
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

uint64_t sub_1C9852E34()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *char v2 = v1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C9852F00, 0, 0);
}

void sub_1C9852F00()
{
  uint64_t v1 = v0[32];
  char v2 = (void *)v0[27];
  uint64_t v3 = v0[23];
  uint64_t v4 = (uint64_t)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77340) + 48);
  *char v2 = v1;
  sub_1C985A7D4(v3, v4);
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

uint64_t sub_1C985313C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  _OWORD v4[5] = v3;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C9853160, 0, 0);
}

uint64_t sub_1C9853160()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C961E390;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x1F41880D8](v4);
}

void sub_1C9853254()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for FlowTraceEvent();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_22_22();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_21_22();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_28_16();
  MEMORY[0x1F4188790](v10, v11);
  unint64_t v13 = (char *)v16 - v12;
  uint64_t v14 = v2 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
  OUTLINED_FUNCTION_84_1();
  sub_1C985A7D4(v14, (uint64_t)v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 8)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1C9611A98((uint64_t)v13, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
      *uint64_t v0 = *(void *)(v2 + 24);
      swift_storeEnumTagMultiPayload();
      sub_1C9BEC838();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  v16[6] = 0;
  v16[7] = 0xE000000000000000;
  sub_1C9BEE188();
  OUTLINED_FUNCTION_25_17();
  v16[0] = v2;
  v16[1] = v3;
  sub_1C9BEC838();
}

void sub_1C9853610()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E760);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_33_0();
  long long v88 = v8;
  uint64_t v9 = type metadata accessor for PluginAction();
  uint64_t v10 = OUTLINED_FUNCTION_22(v9);
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = OUTLINED_FUNCTION_11_37(v12, v82[0]);
  type metadata accessor for FlowActionType(v13);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_33_0();
  uint64_t v89 = v16;
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E768);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v91 = (char *)v82 - v21;
  *(void *)&long long v93 = type metadata accessor for FlowToActingFlowAdapter.State(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v22, v23);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v24, v25);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v26, v27);
  OUTLINED_FUNCTION_28_16();
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v31 = (uint64_t *)((char *)v82 - v30);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_1C9BECF88();
  __swift_project_value_buffer(v32, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  unint64_t v33 = sub_1C9BECF78();
  os_log_type_t v34 = sub_1C9BEDC78();
  BOOL v35 = os_log_type_enabled(v33, v34);
  unint64_t v36 = &unk_1EBC7A000;
  uint64_t v37 = MEMORY[0x1E4FBC840];
  if (v35)
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    *(void *)&long long v98 = v83;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v39 = *(void *)(v2 + 24);
    uint64_t v92 = v2;
    uint64_t v84 = v5;
    uint64_t v41 = *(void *)(v39 + 16);
    unint64_t v40 = *(void *)(v39 + 24);
    swift_bridgeObjectRetain();
    v95[0] = sub_1C95FF228(v41, v40, (uint64_t *)&v98);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2080;
    v82[2] = v38 + 14;
    uint64_t v42 = v92 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
    OUTLINED_FUNCTION_84_1();
    sub_1C985A7D4(v42, (uint64_t)v31);
    uint64_t v43 = sub_1C9854908();
    uint64_t v44 = v1;
    uint64_t v45 = v4;
    unint64_t v47 = v46;
    sub_1C9611A98((uint64_t)v31, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
    v95[0] = sub_1C95FF228(v43, v47, (uint64_t *)&v98);
    uint64_t v48 = v92;
    sub_1C9BEDF68();
    uint64_t v2 = v48;
    uint64_t v37 = MEMORY[0x1E4FBC840];
    swift_release_n();
    uint64_t v4 = v45;
    uint64_t v1 = v44;
    uint64_t v5 = v84;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v33, v34, "[Encore FlowToActingFlowAdapter] %s.action state: %s", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    unint64_t v36 = (void *)&unk_1EBC7A000;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v49 = v2 + v36[144];
  OUTLINED_FUNCTION_84_1();
  sub_1C985A7D4(v49, v1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      OUTLINED_FUNCTION_36_16();
      sub_1C9854668((uint64_t)v95);
      *(void *)&long long v93 = v31;
      uint64_t v50 = v96;
      uint64_t v51 = v97;
      __swift_project_boxed_opaque_existential_1(v95, v96);
      *(void *)&long long v98 = 1;
      sub_1C98546F8((unint64_t *)&v98, v50, v51);
    case 2u:
      uint64_t v52 = v85;
      sub_1C985A7D4(v1, v85);
      char v53 = *(unsigned char *)(v52 + 1);
      uint64_t v54 = *(void *)(v52 + 8);
      if (*(unsigned char *)v52 == 2)
      {
        if (v54) {
          sub_1C9BEC838();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E770);
        swift_allocObject();
        sub_1C978A1C4(v53);
        uint64_t v81 = OUTLINED_FUNCTION_31_7();
        sub_1C9964920(v81);
        sub_1C9BEC838();
      }
      if (!*(unsigned char *)v52)
      {
        if (v54) {
          sub_1C9BEC838();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E770);
        swift_allocObject();
        sub_1C978A1C4(v53);
        sub_1C9964920(1);
        sub_1C9BEC838();
      }
      swift_release();
      swift_release();
      goto LABEL_23;
    case 3u:
      uint64_t v55 = v86;
      uint64_t v56 = sub_1C985A7D4(v1, (uint64_t)v86);
      if (*v55) {
        sub_1C9BEC838();
      }
      (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v2 + 24) + 112))(v95, v56);
      sub_1C95FF454((uint64_t)v95, (uint64_t)v94);
      OUTLINED_FUNCTION_23_22();
      uint64_t v72 = (uint64_t)v91;
      uint64_t v74 = (uint64_t)&v91[v73];
      sub_1C95FF454((uint64_t)v94, (uint64_t)&v91[v73]);
      uint64_t v75 = v72 + *(int *)(v2 + 32);
      sub_1C9608D98((uint64_t)&v98, v75, &qword_1EBC77350);
      *(unsigned char *)(v72 + *(int *)(v2 + 36)) = 0;
      uint64_t v76 = v89;
      *(void *)(v89 + 24) = MEMORY[0x1E4FBC840] + 8;
      uint64_t v77 = OUTLINED_FUNCTION_47_2();
      *(void *)uint64_t v76 = v77;
      sub_1C95FF454(v74, v77 + 16);
      sub_1C95FE76C((uint64_t)&v98, &qword_1EBC77350);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
      sub_1C9608D98(v75, v76 + 32, &qword_1EBC77350);
      *(unsigned char *)(v76 + 72) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1C96102F8(v76, v72);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      uint64_t v99 = v2;
      unint64_t v100 = &protocol witness table for Conclude<A>;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v98);
      sub_1C985A8C0(v72, (uint64_t)boxed_opaque_existential_0, &qword_1EA58E768);
      goto LABEL_27;
    case 4u:
      OUTLINED_FUNCTION_36_16();
      uint64_t v57 = *v31;
      uint64_t v58 = v31[1];
      sub_1C96C3A20();
      uint64_t v79 = swift_allocError();
      *int v80 = v57;
      v80[1] = v58;
      v4[3] = type metadata accessor for Abort(0);
      v4[4] = (uint64_t)&protocol witness table for Abort;
      *__swift_allocate_boxed_opaque_existential_0(v4) = v79;
      goto LABEL_24;
    case 5u:
      OUTLINED_FUNCTION_36_16();
      char v59 = *(unsigned char *)v31;
      v4[3] = type metadata accessor for Unhandled(0);
      v4[4] = (uint64_t)&protocol witness table for Unhandled;
      *(unsigned char *)__swift_allocate_boxed_opaque_existential_0(v4) = v59;
      goto LABEL_24;
    case 6u:
      OUTLINED_FUNCTION_36_16();
      uint64_t v60 = (uint64_t)v31;
      uint64_t v61 = v87;
      sub_1C96102F8(v60, v87);
      char v62 = *(void (**)(void))(*(void *)(v2 + 24) + 112);
      uint64_t v63 = v88;
      v88[3] = v37 + 8;
      *uint64_t v63 = OUTLINED_FUNCTION_47_2();
      v62();
      uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D8);
      sub_1C985A7D4(v61, (uint64_t)v63 + *(int *)(v64 + 48));
      swift_storeEnumTagMultiPayload();
      uint64_t v99 = v5;
      unint64_t v100 = &protocol witness table for Redirect<A>;
      uint64_t v65 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v98);
      sub_1C985A8C0((uint64_t)v63, (uint64_t)v65, &qword_1EA58E760);
      sub_1C9611A98(v61, (void (*)(void))type metadata accessor for PluginAction);
      goto LABEL_27;
    case 7u:
      OUTLINED_FUNCTION_36_16();
      long long v93 = *(_OWORD *)v31;
      uint64_t v66 = v31[2];
      uint64_t v67 = v31[3];
      v4[3] = type metadata accessor for Reparse(0);
      v4[4] = (uint64_t)&protocol witness table for Reparse;
      uint64_t v68 = __swift_allocate_boxed_opaque_existential_0(v4);
      *(_OWORD *)uint64_t v68 = v93;
      v68[2] = v66;
      v68[3] = v67;
LABEL_24:
      swift_storeEnumTagMultiPayload();
      break;
    case 8u:
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E770);
      swift_allocObject();
      uint64_t v70 = sub_1C978A1C4(0);
      sub_1C9964920(1);
      uint64_t v96 = v69;
      unint64_t v97 = sub_1C985A92C();
      v95[0] = v70;
      uint64_t v99 = type metadata accessor for Delegate(0);
      unint64_t v100 = &protocol witness table for Delegate;
      uint64_t v71 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v98);
      sub_1C95FD5F0((uint64_t)v95, (uint64_t)v71);
      OUTLINED_FUNCTION_12_32();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
LABEL_27:
      sub_1C95FD5D8(&v98, (uint64_t)v4);
      break;
    default:
LABEL_23:
      *(void *)&long long v98 = 0;
      *((void *)&v98 + 1) = 0xE000000000000000;
      sub_1C9BEE188();
      OUTLINED_FUNCTION_25_17();
      sub_1C9BEC838();
  }
  sub_1C9611A98(v1, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9854668@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1C9787EEC();
  if (!v2)
  {
    *(void *)(a1 + 24) = type metadata accessor for FlowToActingFlowAdapter(0);
    *(void *)(a1 + 32) = &off_1EC7023E8;
    OUTLINED_FUNCTION_39_0();
    sub_1C9BEC838();
  }
  sub_1C95FD5F0(v2 + 16, a1);

  return swift_release();
}

void sub_1C98546F8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *a1;
  sub_1C98B1CE8(a2, a3);
  unint64_t v4 = v3;
  sub_1C98B25B8(&v4);
}

uint64_t sub_1C98547B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for FlowToActingFlowAdapter.Event(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_222();
  swift_storeEnumTagMultiPayload();
  sub_1C9855034();
  uint64_t result = sub_1C9611A98(v3, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
  if (a3)
  {
    sub_1C95FF454(a1, (uint64_t)v9);
    (*(void (**)(unsigned char *))(a3 + 16))(v9);
    return sub_1C95FE76C((uint64_t)v9, &qword_1EBC78700);
  }
  return result;
}

uint64_t sub_1C9854884()
{
  uint64_t v1 = OUTLINED_FUNCTION_31_7();
  type metadata accessor for FlowToActingFlowAdapter.Event(v1);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_34_0();
  swift_storeEnumTagMultiPayload();
  sub_1C9855034();
  return sub_1C9611A98(v0, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
}

uint64_t sub_1C9854908()
{
  uint64_t v3 = type metadata accessor for PluginAction();
  uint64_t v4 = OUTLINED_FUNCTION_22(v3);
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_22_22();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_222();
  sub_1C985A7D4(v1, v2);
  uint64_t v8 = 0x65747563657865;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_release();
      sub_1C95FD5D8((long long *)v2, (uint64_t)&v16);
      uint64_t v14 = 0x6465726170657270;
      unint64_t v15 = 0xE900000000000028;
      sub_1C95FD5F0((uint64_t)&v16, (uint64_t)v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77558);
      OUTLINED_FUNCTION_44_13();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_34_16();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_16_26();
      swift_release();
      goto LABEL_4;
    case 2u:
      uint64_t v9 = *(void *)(v2 + 8);
      swift_release();
      OUTLINED_FUNCTION_32_21();
      sub_1C9BEE188();
      OUTLINED_FUNCTION_43_13();
      sub_1C9BED6B8();
      sub_1C9BEE348();
      sub_1C9BED6B8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      v13[0] = v9;
      sub_1C9BEC838();
    case 3u:
      uint64_t v10 = *(void *)v2;
      uint64_t v16 = 0x6574656C706D6F63;
      unint64_t v17 = 0xE900000000000028;
      v13[0] = v10;
      sub_1C9BEC838();
    case 4u:
      uint64_t v16 = 0x2874726F6261;
      unint64_t v17 = 0xE600000000000000;
      sub_1C9BED6B8();
      goto LABEL_11;
    case 5u:
      char v11 = *(unsigned char *)v2;
      OUTLINED_FUNCTION_32_21();
      sub_1C9BED6B8();
      LOBYTE(v13[0]) = v11;
      sub_1C9BEE348();
      goto LABEL_12;
    case 6u:
      sub_1C96102F8(v2, v0);
      PluginAction.description.getter();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_16_26();
      uint64_t v8 = 0x7463657269646572;
      sub_1C9611A98(v0, (void (*)(void))type metadata accessor for PluginAction);
      return v8;
    case 7u:
      uint64_t v16 = 0x2865737261706572;
      unint64_t v17 = 0xE800000000000000;
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      OUTLINED_FUNCTION_34_16();
LABEL_11:
      swift_bridgeObjectRelease();
LABEL_12:
      OUTLINED_FUNCTION_16_26();
      uint64_t v8 = v16;
      break;
    case 8u:
      return v8;
    default:
      sub_1C95FD5D8((long long *)v2, (uint64_t)&v16);
      uint64_t v14 = 0x2865726170657270;
      unint64_t v15 = 0xE800000000000000;
      sub_1C95FD5F0((uint64_t)&v16, (uint64_t)v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77558);
      OUTLINED_FUNCTION_44_13();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_16_26();
LABEL_4:
      uint64_t v8 = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
      break;
  }
  return v8;
}

uint64_t sub_1C9854DC8()
{
  uint64_t v1 = v0;
  type metadata accessor for ExecuteResponse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FlowToActingFlowAdapter.Event(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  sub_1C985A7D4(v1, v9 - v8);
  uint64_t v11 = 0x6D6F43646C696863;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C96102F8(v10, (uint64_t)v5);
      uint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      OUTLINED_FUNCTION_43_13();
      sub_1C9BED6B8();
      sub_1C9BEE348();
      OUTLINED_FUNCTION_16_26();
      uint64_t v11 = v17;
      sub_1C9611A98((uint64_t)v5, (void (*)(void))type metadata accessor for ExecuteResponse);
      break;
    case 2u:

      uint64_t v11 = 0x6572756C696166;
      break;
    case 3u:
      return v11;
    default:
      char v12 = *(unsigned char *)v10;
      unint64_t v13 = *(void *)(v10 + 8);
      char v14 = *(unsigned char *)(v10 + 16);
      uint64_t v15 = *(void *)(v10 + 24);
      uint64_t v21 = 0;
      unint64_t v22 = 0xE000000000000000;
      sub_1C9BED6B8();
      LOBYTE(v17) = v12;
      unint64_t v18 = v13;
      char v19 = v14;
      uint64_t v20 = v15;
      sub_1C9BEE348();
      OUTLINED_FUNCTION_16_26();
      swift_release();
      swift_release();
      uint64_t v11 = v21;
      break;
  }
  return v11;
}

void sub_1C9855034()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
  uint64_t v7 = OUTLINED_FUNCTION_22(v6);
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_11_37(v9, v87[0]);
  uint64_t v93 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_33_0();
  uint64_t v91 = v12;
  uint64_t v92 = type metadata accessor for FlowTraceEvent();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_6_0();
  uint64_t v17 = (void *)(v16 - v15);
  uint64_t v95 = type metadata accessor for ExecuteResponse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v18, v19);
  OUTLINED_FUNCTION_33_0();
  uint64_t v96 = (unsigned char *)v20;
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E750);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v21, v22);
  OUTLINED_FUNCTION_222();
  uint64_t v23 = type metadata accessor for FlowToActingFlowAdapter.State(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v24, v25);
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_28_16();
  MEMORY[0x1F4188790](v26, v27);
  uint64_t v103 = (uint64_t *)((char *)v87 - v28);
  uint64_t v98 = type metadata accessor for FlowToActingFlowAdapter.Event(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v29, v30);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v31, v32);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v33, v34);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v35, v36);
  uint64_t v38 = (char *)v87 - v37;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v39 = sub_1C9BECF88();
  __swift_project_value_buffer(v39, (uint64_t)qword_1EBC7A520);
  uint64_t v40 = OUTLINED_FUNCTION_26_19();
  sub_1C985A7D4(v40, v41);
  swift_retain_n();
  uint64_t v42 = sub_1C9BECF78();
  os_log_type_t v43 = sub_1C9BEDC78();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v45 = &unk_1EBC7A000;
  uint64_t v102 = v3;
  if (v44)
  {
    uint64_t v46 = OUTLINED_FUNCTION_35_0();
    uint64_t v89 = v5;
    uint64_t v47 = v46;
    uint64_t v48 = swift_slowAlloc();
    uint64_t v94 = v23;
    v87[1] = v48;
    *(void *)&v106[0] = v48;
    *(_DWORD *)uint64_t v47 = 136315650;
    uint64_t v49 = *(void *)(v3 + 24);
    long long v88 = v17;
    uint64_t v90 = v2;
    uint64_t v50 = *(void *)(v49 + 16);
    unint64_t v51 = *(void *)(v49 + 24);
    swift_bridgeObjectRetain();
    *(void *)&long long v104 = sub_1C95FF228(v50, v51, (uint64_t *)v106);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    uint64_t v52 = v3 + OBJC_IVAR____TtC11SiriKitFlow23FlowToActingFlowAdapter_state;
    OUTLINED_FUNCTION_84_1();
    uint64_t v53 = v52;
    uint64_t v54 = v103;
    sub_1C985A7D4(v53, (uint64_t)v103);
    uint64_t v55 = sub_1C9854908();
    uint64_t v56 = v1;
    unint64_t v58 = v57;
    sub_1C9611A98((uint64_t)v54, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
    uint64_t v59 = v55;
    uint64_t v3 = v102;
    *(void *)&long long v104 = sub_1C95FF228(v59, v58, (uint64_t *)v106);
    uint64_t v2 = v90;
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 22) = 2080;
    uint64_t v60 = sub_1C9854DC8();
    *(void *)&long long v104 = sub_1C95FF228(v60, v61, (uint64_t *)v106);
    uint64_t v17 = v88;
    uint64_t v1 = v56;
    sub_1C9BEDF68();
    uint64_t v45 = (void *)&unk_1EBC7A000;
    swift_bridgeObjectRelease();
    sub_1C9611A98((uint64_t)v38, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
    _os_log_impl(&dword_1C95F9000, v42, v43, "[Encore FlowToActingFlowAdapter] %s.handle() state: %s event: %s", (uint8_t *)v47, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v5 = v89;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    swift_release_n();
    sub_1C9611A98((uint64_t)v38, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
  }

  uint64_t v62 = v3 + v45[144];
  OUTLINED_FUNCTION_84_1();
  uint64_t v63 = v1 + *(int *)(v101 + 48);
  sub_1C985A7D4(v62, v1);
  sub_1C985A7D4(v5, v63);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v65 = v100;
  uint64_t v66 = v99;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_1C985A7D4(v63, v100);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v70 = v96;
        sub_1C96102F8(v65, (uint64_t)v96);
        switch(*v70)
        {
          case 1:
            *uint64_t v17 = *(void *)(v102 + 24);
            sub_1C9BEC838();
          case 2:
            OUTLINED_FUNCTION_45_11();
          case 3:
            if (v70[32] == 7)
            {
              OUTLINED_FUNCTION_33_15();
              sub_1C9BEE188();
              OUTLINED_FUNCTION_20_26();
              uint64_t v102 = v63;
              sub_1C9BEC838();
            }
            sub_1C9611A98((uint64_t)v70, (void (*)(void))type metadata accessor for ExecuteResponse);
            OUTLINED_FUNCTION_30_15();
            swift_storeEnumTagMultiPayload();
            uint64_t v78 = v65;
            break;
          default:
            uint64_t v71 = (uint64_t *)&v70[*(int *)(v95 + 40)];
            uint64_t v72 = v71[1];
            if (!v72) {
              OUTLINED_FUNCTION_45_11();
            }
            uint64_t v74 = v71[2];
            uint64_t v73 = v71[3];
            uint64_t v75 = (uint64_t)v70;
            uint64_t v76 = *v71;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C9611A98(v75, (void (*)(void))type metadata accessor for ExecuteResponse);
            uint64_t v77 = v103;
            *uint64_t v103 = v76;
            v77[1] = v72;
            v77[2] = v74;
            v77[3] = v73;
            swift_storeEnumTagMultiPayload();
            uint64_t v78 = (uint64_t)v77;
            break;
        }
        goto LABEL_36;
      }
      sub_1C95FE76C(v65, &qword_1EA58E758);
      goto LABEL_18;
    case 2:
      sub_1C985A7D4(v63, v97);
      OUTLINED_FUNCTION_33_15();
      sub_1C9BEE188();
      sub_1C9BED6B8();
      uint64_t v102 = v1;
      sub_1C9BEC838();
    case 3:
      int v79 = swift_getEnumCaseMultiPayload();
      if (v79 != 2)
      {
        if (v79 == 1)
        {
          swift_release();
          swift_release();
          int v80 = v103;
          sub_1C95FD5D8((long long *)v1, (uint64_t)v103);
          swift_storeEnumTagMultiPayload();
          uint64_t v78 = (uint64_t)v80;
LABEL_36:
          sub_1C96102F8(v78, v2);
          OUTLINED_FUNCTION_5_43();
          uint64_t v85 = v2;
          goto LABEL_37;
        }
LABEL_18:
        OUTLINED_FUNCTION_33_15();
        sub_1C9BEE188();
        OUTLINED_FUNCTION_20_26();
        sub_1C9BEC838();
      }
      uint64_t v84 = *(void *)(v1 + 16);
      swift_release();
      swift_release();
      sub_1C9787E68((uint64_t)&v104);
      if (v105)
      {
        sub_1C95FD5D8(&v104, (uint64_t)v106);
        uint64_t v83 = v103;
        sub_1C95FD5D8(v106, (uint64_t)v103);
        goto LABEL_23;
      }
      sub_1C95FE76C((uint64_t)&v104, &qword_1EBC77560);
      OUTLINED_FUNCTION_49_8();
      OUTLINED_FUNCTION_5_43();
      uint64_t v85 = v84;
      goto LABEL_37;
    default:
      sub_1C985A7D4(v63, v99);
      uint64_t v67 = *(void *)(v66 + 8);
      int v68 = *(unsigned __int8 *)(v66 + 16);
      uint64_t v69 = *(void *)(v66 + 24);
      if (swift_getEnumCaseMultiPayload())
      {
        swift_release();
        swift_release();
        goto LABEL_18;
      }
      uint64_t v81 = (long long *)v1;
      char v82 = *(unsigned char *)v66;
      sub_1C95FD5D8(v81, (uint64_t)v106);
      if (v82)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
        swift_release();
        uint64_t v83 = v103;
        *uint64_t v103 = v67;
LABEL_23:
        swift_storeEnumTagMultiPayload();
        uint64_t v78 = (uint64_t)v83;
        goto LABEL_36;
      }
      if (v68)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
        swift_release();
        swift_release();
        OUTLINED_FUNCTION_49_8();
        OUTLINED_FUNCTION_5_43();
        uint64_t v85 = v69;
LABEL_37:
        sub_1C985A824(v85, v62);
        swift_endAccess();
        goto LABEL_38;
      }
      if (v67)
      {
        uint64_t v86 = v103;
        sub_1C95FD5D8(v106, (uint64_t)v103);
        v86[5] = v67;
        v86[6] = v69;
        swift_storeEnumTagMultiPayload();
        uint64_t v78 = (uint64_t)v86;
        goto LABEL_36;
      }
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v106);
LABEL_38:
      sub_1C9611A98(v63, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
      OUTLINED_FUNCTION_10();
      return;
  }
}

void sub_1C985619C()
{
}

void sub_1C98561C0()
{
}

BOOL sub_1C98561E4()
{
  return sub_1C9851D90();
}

uint64_t sub_1C985620C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C985251C();
}

void sub_1C985629C()
{
}

void sub_1C98562C0()
{
}

void sub_1C98562E4()
{
}

void sub_1C9856308(uint64_t a1)
{
  *(void *)(a1 + 8) = *v1;
  sub_1C9851E6C();
}

void sub_1C9856354(uint64_t a1, char a2)
{
  if (a2) {
    sub_1C9BEC838();
  }
  sub_1C9851E90();
}

void sub_1C98563AC()
{
}

uint64_t sub_1C98563D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E788);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1C985AA80;
  *(void *)(v13 + 24) = v12;
  (*(void (**)(void (*)(char *), uint64_t, uint64_t, uint64_t))(a4 + 8))(sub_1C985AB2C, v13, a3, a4);
  return swift_release();
}

uint64_t sub_1C9856564()
{
  return sub_1C9BEDA08();
}

void sub_1C98565C4(char *a1)
{
  char v1 = *a1;
  uint64_t v2 = *((void *)a1 + 1);
  char v3 = a1[16];
  uint64_t v4 = *((void *)a1 + 3);
  char v5 = v1;
  uint64_t v6 = v2;
  char v7 = v3;
  uint64_t v8 = v4;
  sub_1C9BEC838();
}

void sub_1C9856630()
{
  OUTLINED_FUNCTION_11_1();
  char v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for FlowActionType(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_222();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588EE8);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_68_0();
  uint64_t v12 = v10 - v11;
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)&v22 - v15;
  if (v2)
  {
    uint64_t v25 = 0;
    memset(v24, 0, sizeof(v24));
    uint64_t v17 = v12 + *(int *)(v7 + 32);
    sub_1C9608D98((uint64_t)v24, v17, &qword_1EBC77350);
    *(unsigned char *)(v12 + *(int *)(v7 + 36)) = 0;
    uint64_t v23 = v0 + 32;
    uint64_t v18 = MEMORY[0x1E4FBC848] + 8;
    *(void *)(v0 + 24) = MEMORY[0x1E4FBC848] + 8;
    sub_1C95FE76C((uint64_t)v24, &qword_1EBC77350);
    sub_1C9608D98(v17, v0 + 32, &qword_1EBC77350);
    *(unsigned char *)(v0 + 72) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1C96102F8(v0, v12);
    sub_1C9608D98(v17, (uint64_t)v24, &qword_1EBC77350);
    uint64_t v19 = (uint64_t)&v16[*(int *)(v7 + 32)];
    sub_1C9608D98((uint64_t)v24, v19, &qword_1EBC77350);
    v16[*(int *)(v7 + 36)] = 1;
    *(void *)(v0 + 24) = v18;
    sub_1C95FE76C((uint64_t)v24, &qword_1EBC77350);
    sub_1C9608D98(v19, v23, &qword_1EBC77350);
    *(unsigned char *)(v0 + 72) = 1;
    swift_storeEnumTagMultiPayload();
    sub_1C96102F8(v0, (uint64_t)v16);
    sub_1C95FE76C(v12, &qword_1EA588EE8);
    v4[3] = v7;
    v4[4] = (uint64_t)&protocol witness table for Conclude<A>;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v4);
    sub_1C985A8C0((uint64_t)v16, (uint64_t)boxed_opaque_existential_0, &qword_1EA588EE8);
  }
  else
  {
    v4[3] = v7;
    v4[4] = (uint64_t)&protocol witness table for Conclude<A>;
    uint64_t v21 = __swift_allocate_boxed_opaque_existential_0(v4);
    sub_1C988C2DC((uint64_t)v21);
  }
  OUTLINED_FUNCTION_10();
}

void sub_1C985687C()
{
}

uint64_t ActingFlow.isNoop.getter(uint64_t a1, uint64_t a2)
{
  ActingFlow.unwrap.getter(a1, a2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E558);
  return swift_dynamicCast();
}

uint64_t ActingFlow.isAdaptedFlow.getter(uint64_t a1, uint64_t a2)
{
  ActingFlow.unwrap.getter(a1, a2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E558);
  type metadata accessor for FlowToActingFlowAdapter(0);
  uint64_t v2 = swift_dynamicCast();
  if (v2) {
    swift_release();
  }
  return v2;
}

uint64_t sub_1C9856940()
{
  return type metadata accessor for FlowToActingFlowAdapter(0);
}

uint64_t sub_1C9856948()
{
  uint64_t result = type metadata accessor for FlowToActingFlowAdapter.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

_UNKNOWN **sub_1C98569F0()
{
  return &off_1EC7023E8;
}

_UNKNOWN **sub_1C98569FC()
{
  return &off_1F23E06A8;
}

_UNKNOWN **sub_1C9856A08()
{
  return &off_1EC7023E8;
}

_UNKNOWN **sub_1C9856A14()
{
  return &off_1F23E06A8;
}

char *sub_1C9856A20(char *a1, char *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_49;
    case 1u:
      long long v7 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
      uint64_t v8 = *((void *)a2 + 5);
      uint64_t v9 = *((void *)a2 + 6);
      *((void *)a1 + 5) = v8;
      *((void *)a1 + 6) = v9;
      sub_1C9BEC838();
    case 2u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v10 = *((void *)a2 + 1);
      uint64_t v11 = *((void *)a2 + 2);
      *((void *)a1 + 1) = v10;
      *((void *)a1 + 2) = v11;
      sub_1C9BEC838();
    case 3u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 4u:
      uint64_t v12 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v12;
      swift_bridgeObjectRetain();
      goto LABEL_49;
    case 6u:
      uint64_t v13 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v13;
      uint64_t v156 = (int *)type metadata accessor for PluginAction();
      uint64_t v14 = v156[5];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1C9BEAB08();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v155 = v17;
      v18(v15, v16, v17);
      uint64_t v19 = (int *)type metadata accessor for Input(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      uint64_t v23 = type metadata accessor for Parse(0);
      uint64_t v154 = v18;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v24 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
          goto LABEL_35;
        case 1u:
          uint64_t v28 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v21, v22, v28);
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v21[*(int *)(v29 + 48)] = *(void *)&v22[*(int *)(v29 + 48)];
          sub_1C9BEC838();
        case 2u:
          uint64_t v30 = *((void *)v22 + 1);
          *(void *)uint64_t v21 = *(void *)v22;
          *((void *)v21 + 1) = v30;
          *((void *)v21 + 2) = *((void *)v22 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 3u:
          *(void *)uint64_t v21 = *(void *)v22;
          swift_unknownObjectRetain();
          goto LABEL_35;
        case 4u:
          uint64_t v31 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v21, v22, v31);
          goto LABEL_35;
        case 5u:
          uint64_t v32 = *(void **)v22;
          *(void *)uint64_t v21 = *(void *)v22;
          id v33 = v32;
          goto LABEL_35;
        case 6u:
          uint64_t v34 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v21, v22, v34);
          uint64_t v35 = type metadata accessor for USOParse();
          uint64_t v36 = *(int *)(v35 + 20);
          uint64_t v145 = v35;
          __dst = &v21[v36];
          uint64_t v37 = &v22[v36];
          uint64_t v38 = sub_1C9BEAE48();
          __src = v37;
          uint64_t v39 = (uint64_t)v37;
          uint64_t v40 = v38;
          if (__swift_getEnumTagSinglePayload(v39, 1, v38))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(__dst, __src, v40);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v40);
          }
          uint64_t v62 = *(int *)(v145 + 24);
          uint64_t v63 = &v21[v62];
          uint64_t v64 = &v22[v62];
          uint64_t v65 = *((void *)v64 + 1);
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = v65;
          uint64_t v66 = *(int *)(v145 + 28);
          uint64_t v67 = &v21[v66];
          int v68 = &v22[v66];
          v67[4] = v68[4];
          *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 7u:
          uint64_t v42 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v21, v22, v42);
          uint64_t v43 = type metadata accessor for USOParse();
          uint64_t v44 = *(int *)(v43 + 20);
          uint64_t v146 = v43;
          __dsta = &v21[v44];
          uint64_t v45 = &v22[v44];
          uint64_t v46 = sub_1C9BEAE48();
          __srca = v45;
          uint64_t v47 = (uint64_t)v45;
          uint64_t v48 = v46;
          if (__swift_getEnumTagSinglePayload(v47, 1, v46))
          {
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(__dsta, __srca, v48);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v48);
          }
          uint64_t v69 = *(int *)(v146 + 24);
          uint64_t v70 = &v21[v69];
          uint64_t v71 = &v22[v69];
          __dstc = (void *)*((void *)v71 + 1);
          *(void *)uint64_t v70 = *(void *)v71;
          *((void *)v70 + 1) = __dstc;
          uint64_t v72 = *(int *)(v146 + 28);
          uint64_t v73 = &v21[v72];
          uint64_t v74 = &v22[v72];
          v73[4] = v74[4];
          *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
          uint64_t v75 = (int *)type metadata accessor for LinkParse();
          uint64_t v76 = v75[5];
          uint64_t v77 = &v21[v76];
          uint64_t v78 = &v22[v76];
          uint64_t v147 = *((void *)v78 + 1);
          *(void *)uint64_t v77 = *(void *)v78;
          *((void *)v77 + 1) = v147;
          uint64_t v79 = v75[6];
          int v80 = &v21[v79];
          uint64_t v81 = &v22[v79];
          uint64_t v82 = *((void *)v81 + 1);
          *(void *)int v80 = *(void *)v81;
          *((void *)v80 + 1) = v82;
          uint64_t v83 = v75[7];
          uint64_t v84 = &v21[v83];
          uint64_t v85 = &v22[v83];
          uint64_t v86 = *((void *)v85 + 1);
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = v86;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 8u:
          uint64_t v50 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v21, v22, v50);
          uint64_t v51 = type metadata accessor for NLRouterParse();
          uint64_t v52 = *(int *)(v51 + 20);
          uint64_t v53 = &v21[v52];
          uint64_t v54 = &v22[v52];
          uint64_t v55 = *((void *)v54 + 1);
          *(void *)uint64_t v53 = *(void *)v54;
          *((void *)v53 + 1) = v55;
          __srcb = (int *)v51;
          uint64_t v56 = *(int *)(v51 + 24);
          __dstb = &v21[v56];
          unint64_t v57 = &v22[v56];
          uint64_t v58 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v57, *(void *)(*(void *)(v59 - 8) + 64));
            uint64_t v60 = __srcb;
          }
          else
          {
            uint64_t v87 = sub_1C9BEAF18();
            uint64_t v140 = v58;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(__dstb, v57, v87);
            uint64_t v88 = *(int *)(v58 + 20);
            long long v138 = v57;
            unsigned int v139 = &__dstb[v88];
            uint64_t v89 = (uint64_t)&v57[v88];
            uint64_t v90 = sub_1C9BEAE48();
            uint64_t v137 = (void *)v89;
            if (__swift_getEnumTagSinglePayload(v89, 1, v90))
            {
              uint64_t v91 = v140;
              uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v139, v137, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              uint64_t v91 = v140;
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v90 - 8) + 16))(v139, v137, v90);
              __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v90);
            }
            uint64_t v60 = __srcb;
            uint64_t v93 = *(int *)(v91 + 24);
            uint64_t v94 = &__dstb[v93];
            uint64_t v95 = &v138[v93];
            uint64_t v96 = *((void *)v95 + 1);
            *(void *)uint64_t v94 = *(void *)v95;
            *((void *)v94 + 1) = v96;
            uint64_t v97 = *(int *)(v91 + 28);
            uint64_t v98 = &__dstb[v97];
            uint64_t v99 = &v138[v97];
            v98[4] = v99[4];
            *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v91);
          }
          uint64_t v100 = v60[7];
          uint64_t v101 = *(void **)&v22[v100];
          *(void *)&v21[v100] = v101;
          id v102 = v101;
          goto LABEL_35;
        case 9u:
          uint64_t v61 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v21, v22, v61);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
          break;
      }
      *(void *)&v15[v19[6]] = *(void *)&v16[v19[6]];
      uint64_t v103 = v19[7];
      long long v104 = &v15[v103];
      uint64_t v105 = &v16[v103];
      uint64_t v106 = *(void *)&v16[v103 + 24];
      swift_bridgeObjectRetain();
      if (v106)
      {
        uint64_t v107 = *((void *)v105 + 4);
        *((void *)v104 + 3) = v106;
        *((void *)v104 + 4) = v107;
        (**(void (***)(char *, char *, uint64_t))(v106 - 8))(v104, v105, v106);
      }
      else
      {
        long long v108 = *((_OWORD *)v105 + 1);
        *(_OWORD *)long long v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v108;
        *((void *)v104 + 4) = *((void *)v105 + 4);
      }
      v15[v19[8]] = v16[v19[8]];
      long long v109 = v156;
      *(void *)&a1[v156[6]] = *(void *)&a2[v156[6]];
      uint64_t v110 = v156[7];
      uint64_t v111 = *(void **)&a2[v110];
      *(void *)&a1[v110] = v111;
      uint64_t v112 = v156[8];
      id v113 = &a1[v112];
      uint64_t v114 = &a2[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)id v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      uint64_t v116 = v156[9];
      uint64_t v117 = &a1[v116];
      uint64_t v118 = &a2[v116];
      uint64_t v119 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      id v120 = v111;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
      {
        uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        uint64_t v122 = *((void *)v118 + 1);
        *(void *)uint64_t v117 = *(void *)v118;
        *((void *)v117 + 1) = v122;
        uint64_t v123 = *(int *)(v119 + 20);
        uint64_t v124 = &v117[v123];
        uint64_t v125 = &v118[v123];
        uint64_t v126 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v126))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          uint64_t v128 = *((void *)v125 + 1);
          *(void *)uint64_t v124 = *(void *)v125;
          *((void *)v124 + 1) = v128;
          uint64_t v129 = *((void *)v125 + 3);
          *((void *)v124 + 2) = *((void *)v125 + 2);
          *((void *)v124 + 3) = v129;
          uint64_t v130 = *(int *)(v126 + 24);
          int v148 = &v125[v130];
          __dstd = &v124[v130];
          uint64_t v131 = sub_1C9BEB0C8();
          __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __srcc(__dstd, v148, v131);
          __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v126);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
        long long v109 = v156;
      }
      uint64_t v132 = v109[10];
      Swift::OpaquePointer v133 = &a1[v132];
      uint64_t v134 = &a2[v132];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v132], 1, v155))
      {
        uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        v154(v133, v134, v155);
        __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v155);
      }
      a1[v109[11]] = a2[v109[11]];
      goto LABEL_49;
    case 7u:
      uint64_t v25 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v25;
      uint64_t v26 = *((void *)a2 + 2);
      uint64_t v27 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v26;
      *((void *)a1 + 3) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_49:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(v5 + 64));
      break;
  }
  return a1;
}

char *sub_1C9857770(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
      goto LABEL_47;
    case 1u:
      long long v7 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
      uint64_t v8 = *((void *)a2 + 5);
      uint64_t v9 = *((void *)a2 + 6);
      *((void *)a1 + 5) = v8;
      *((void *)a1 + 6) = v9;
      sub_1C9BEC838();
    case 2u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v10 = *((void *)a2 + 1);
      uint64_t v11 = *((void *)a2 + 2);
      *((void *)a1 + 1) = v10;
      *((void *)a1 + 2) = v11;
      sub_1C9BEC838();
    case 3u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 4u:
      uint64_t v12 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v12;
      swift_bridgeObjectRetain();
      goto LABEL_47;
    case 6u:
      uint64_t v13 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v13;
      uint64_t v156 = (int *)type metadata accessor for PluginAction();
      uint64_t v14 = v156[5];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_1C9BEAB08();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v155 = v17;
      v18(v15, v16, v17);
      uint64_t v19 = (int *)type metadata accessor for Input(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = &v15[v20];
      uint64_t v22 = &v16[v20];
      uint64_t v23 = type metadata accessor for Parse(0);
      uint64_t v154 = v18;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v24 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
          goto LABEL_33;
        case 1u:
          uint64_t v28 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v21, v22, v28);
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v21[*(int *)(v29 + 48)] = *(void *)&v22[*(int *)(v29 + 48)];
          sub_1C9BEC838();
        case 2u:
          uint64_t v30 = *((void *)v22 + 1);
          *(void *)uint64_t v21 = *(void *)v22;
          *((void *)v21 + 1) = v30;
          *((void *)v21 + 2) = *((void *)v22 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 3u:
          *(void *)uint64_t v21 = *(void *)v22;
          swift_unknownObjectRetain();
          goto LABEL_33;
        case 4u:
          uint64_t v31 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v21, v22, v31);
          goto LABEL_33;
        case 5u:
          uint64_t v32 = *(void **)v22;
          *(void *)uint64_t v21 = *(void *)v22;
          id v33 = v32;
          goto LABEL_33;
        case 6u:
          uint64_t v34 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v21, v22, v34);
          uint64_t v35 = type metadata accessor for USOParse();
          uint64_t v36 = *(int *)(v35 + 20);
          uint64_t v145 = v35;
          __dst = &v21[v36];
          uint64_t v37 = &v22[v36];
          uint64_t v38 = sub_1C9BEAE48();
          __src = v37;
          uint64_t v39 = (uint64_t)v37;
          uint64_t v40 = v38;
          if (__swift_getEnumTagSinglePayload(v39, 1, v38))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(__dst, __src, v40);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v40);
          }
          uint64_t v62 = *(int *)(v145 + 24);
          uint64_t v63 = &v21[v62];
          uint64_t v64 = &v22[v62];
          uint64_t v65 = *((void *)v64 + 1);
          *(void *)uint64_t v63 = *(void *)v64;
          *((void *)v63 + 1) = v65;
          uint64_t v66 = *(int *)(v145 + 28);
          uint64_t v67 = &v21[v66];
          int v68 = &v22[v66];
          v67[4] = v68[4];
          *(_DWORD *)uint64_t v67 = *(_DWORD *)v68;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 7u:
          uint64_t v42 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v21, v22, v42);
          uint64_t v43 = type metadata accessor for USOParse();
          uint64_t v44 = *(int *)(v43 + 20);
          uint64_t v146 = v43;
          __dsta = &v21[v44];
          uint64_t v45 = &v22[v44];
          uint64_t v46 = sub_1C9BEAE48();
          __srca = v45;
          uint64_t v47 = (uint64_t)v45;
          uint64_t v48 = v46;
          if (__swift_getEnumTagSinglePayload(v47, 1, v46))
          {
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(__dsta, __srca, v48);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v48);
          }
          uint64_t v69 = *(int *)(v146 + 24);
          uint64_t v70 = &v21[v69];
          uint64_t v71 = &v22[v69];
          __dstc = (void *)*((void *)v71 + 1);
          *(void *)uint64_t v70 = *(void *)v71;
          *((void *)v70 + 1) = __dstc;
          uint64_t v72 = *(int *)(v146 + 28);
          uint64_t v73 = &v21[v72];
          uint64_t v74 = &v22[v72];
          v73[4] = v74[4];
          *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
          uint64_t v75 = (int *)type metadata accessor for LinkParse();
          uint64_t v76 = v75[5];
          uint64_t v77 = &v21[v76];
          uint64_t v78 = &v22[v76];
          uint64_t v147 = *((void *)v78 + 1);
          *(void *)uint64_t v77 = *(void *)v78;
          *((void *)v77 + 1) = v147;
          uint64_t v79 = v75[6];
          int v80 = &v21[v79];
          uint64_t v81 = &v22[v79];
          uint64_t v82 = *((void *)v81 + 1);
          *(void *)int v80 = *(void *)v81;
          *((void *)v80 + 1) = v82;
          uint64_t v83 = v75[7];
          uint64_t v84 = &v21[v83];
          uint64_t v85 = &v22[v83];
          uint64_t v86 = *((void *)v85 + 1);
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = v86;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 8u:
          uint64_t v50 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v21, v22, v50);
          uint64_t v51 = type metadata accessor for NLRouterParse();
          uint64_t v52 = *(int *)(v51 + 20);
          uint64_t v53 = &v21[v52];
          uint64_t v54 = &v22[v52];
          uint64_t v55 = *((void *)v54 + 1);
          *(void *)uint64_t v53 = *(void *)v54;
          *((void *)v53 + 1) = v55;
          __srcb = (int *)v51;
          uint64_t v56 = *(int *)(v51 + 24);
          __dstb = &v21[v56];
          unint64_t v57 = &v22[v56];
          uint64_t v58 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v57, *(void *)(*(void *)(v59 - 8) + 64));
            uint64_t v60 = __srcb;
          }
          else
          {
            uint64_t v87 = sub_1C9BEAF18();
            uint64_t v140 = v58;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(__dstb, v57, v87);
            uint64_t v88 = *(int *)(v58 + 20);
            long long v138 = v57;
            unsigned int v139 = &__dstb[v88];
            uint64_t v89 = (uint64_t)&v57[v88];
            uint64_t v90 = sub_1C9BEAE48();
            uint64_t v137 = (void *)v89;
            if (__swift_getEnumTagSinglePayload(v89, 1, v90))
            {
              uint64_t v91 = v140;
              uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v139, v137, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              uint64_t v91 = v140;
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v90 - 8) + 16))(v139, v137, v90);
              __swift_storeEnumTagSinglePayload((uint64_t)v139, 0, 1, v90);
            }
            uint64_t v60 = __srcb;
            uint64_t v93 = *(int *)(v91 + 24);
            uint64_t v94 = &__dstb[v93];
            uint64_t v95 = &v138[v93];
            uint64_t v96 = *((void *)v95 + 1);
            *(void *)uint64_t v94 = *(void *)v95;
            *((void *)v94 + 1) = v96;
            uint64_t v97 = *(int *)(v91 + 28);
            uint64_t v98 = &__dstb[v97];
            uint64_t v99 = &v138[v97];
            v98[4] = v99[4];
            *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v91);
          }
          uint64_t v100 = v60[7];
          uint64_t v101 = *(void **)&v22[v100];
          *(void *)&v21[v100] = v101;
          id v102 = v101;
          goto LABEL_33;
        case 9u:
          uint64_t v61 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v21, v22, v61);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
          break;
      }
      *(void *)&v15[v19[6]] = *(void *)&v16[v19[6]];
      uint64_t v103 = v19[7];
      long long v104 = &v15[v103];
      uint64_t v105 = &v16[v103];
      uint64_t v106 = *(void *)&v16[v103 + 24];
      swift_bridgeObjectRetain();
      if (v106)
      {
        uint64_t v107 = *((void *)v105 + 4);
        *((void *)v104 + 3) = v106;
        *((void *)v104 + 4) = v107;
        (**(void (***)(char *, char *, uint64_t))(v106 - 8))(v104, v105, v106);
      }
      else
      {
        long long v108 = *((_OWORD *)v105 + 1);
        *(_OWORD *)long long v104 = *(_OWORD *)v105;
        *((_OWORD *)v104 + 1) = v108;
        *((void *)v104 + 4) = *((void *)v105 + 4);
      }
      v15[v19[8]] = v16[v19[8]];
      long long v109 = v156;
      *(void *)&a1[v156[6]] = *(void *)&a2[v156[6]];
      uint64_t v110 = v156[7];
      uint64_t v111 = *(void **)&a2[v110];
      *(void *)&a1[v110] = v111;
      uint64_t v112 = v156[8];
      id v113 = &a1[v112];
      uint64_t v114 = &a2[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)id v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      uint64_t v116 = v156[9];
      uint64_t v117 = &a1[v116];
      uint64_t v118 = &a2[v116];
      uint64_t v119 = type metadata accessor for ActionParaphrase(0);
      swift_bridgeObjectRetain();
      id v120 = v111;
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v119))
      {
        uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        uint64_t v122 = *((void *)v118 + 1);
        *(void *)uint64_t v117 = *(void *)v118;
        *((void *)v117 + 1) = v122;
        uint64_t v123 = *(int *)(v119 + 20);
        uint64_t v124 = &v117[v123];
        uint64_t v125 = &v118[v123];
        uint64_t v126 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v126))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          uint64_t v128 = *((void *)v125 + 1);
          *(void *)uint64_t v124 = *(void *)v125;
          *((void *)v124 + 1) = v128;
          uint64_t v129 = *((void *)v125 + 3);
          *((void *)v124 + 2) = *((void *)v125 + 2);
          *((void *)v124 + 3) = v129;
          uint64_t v130 = *(int *)(v126 + 24);
          int v148 = &v125[v130];
          __dstd = &v124[v130];
          uint64_t v131 = sub_1C9BEB0C8();
          __srcc = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __srcc(__dstd, v148, v131);
          __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v126);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v119);
        long long v109 = v156;
      }
      uint64_t v132 = v109[10];
      Swift::OpaquePointer v133 = &a1[v132];
      uint64_t v134 = &a2[v132];
      if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v132], 1, v155))
      {
        uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
      }
      else
      {
        v154(v133, v134, v155);
        __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v155);
      }
      a1[v109[11]] = a2[v109[11]];
      goto LABEL_47;
    case 7u:
      uint64_t v25 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v25;
      uint64_t v26 = *((void *)a2 + 2);
      uint64_t v27 = *((void *)a2 + 3);
      *((void *)a1 + 2) = v26;
      *((void *)a1 + 3) = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_47:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C9858434(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9611A98((uint64_t)a1, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = a2[3];
        a1[3] = v6;
        a1[4] = a2[4];
        (**(void (***)(void *, const void *))(v6 - 8))(a1, a2);
        goto LABEL_48;
      case 1u:
        uint64_t v7 = a2[3];
        a1[3] = v7;
        a1[4] = a2[4];
        (**(void (***)(void *, const void *))(v7 - 8))(a1, a2);
        a1[5] = a2[5];
        a1[6] = a2[6];
        sub_1C9BEC838();
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *((unsigned char *)a1 + 1) = *((unsigned char *)a2 + 1);
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 3u:
        *a1 = *a2;
        sub_1C9BEC838();
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v135 = (int *)type metadata accessor for PluginAction();
        uint64_t v8 = v135[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C9BEAB08();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v134 = v11;
        v12(v9, v10, v11);
        uint64_t v13 = (int *)type metadata accessor for Input(0);
        uint64_t v14 = v13[5];
        uint64_t v15 = &v9[v14];
        uint64_t v16 = &v10[v14];
        uint64_t v17 = type metadata accessor for Parse(0);
        Swift::OpaquePointer v133 = v12;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v18 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
            goto LABEL_34;
          case 1u:
            uint64_t v19 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v15[*(int *)(v20 + 48)] = *(void *)&v16[*(int *)(v20 + 48)];
            sub_1C9BEC838();
          case 2u:
            *(void *)uint64_t v15 = *(void *)v16;
            *((void *)v15 + 1) = *((void *)v16 + 1);
            *((void *)v15 + 2) = *((void *)v16 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 3u:
            *(void *)uint64_t v15 = *(void *)v16;
            swift_unknownObjectRetain();
            goto LABEL_34;
          case 4u:
            uint64_t v21 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v16, v21);
            goto LABEL_34;
          case 5u:
            uint64_t v22 = *(void **)v16;
            *(void *)uint64_t v15 = *(void *)v16;
            id v23 = v22;
            goto LABEL_34;
          case 6u:
            uint64_t v24 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v15, v16, v24);
            uint64_t v25 = type metadata accessor for USOParse();
            uint64_t v26 = *(int *)(v25 + 20);
            uint64_t v125 = v25;
            __dst = &v15[v26];
            uint64_t v27 = &v16[v26];
            uint64_t v28 = sub_1C9BEAE48();
            __src = v27;
            uint64_t v29 = (uint64_t)v27;
            uint64_t v30 = v28;
            if (__swift_getEnumTagSinglePayload(v29, 1, v28))
            {
              uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, __src, *(void *)(*(void *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(__dst, __src, v30);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v30);
            }
            uint64_t v50 = *(int *)(v125 + 24);
            uint64_t v51 = &v15[v50];
            uint64_t v52 = &v16[v50];
            *(void *)uint64_t v51 = *(void *)v52;
            *((void *)v51 + 1) = *((void *)v52 + 1);
            uint64_t v53 = *(int *)(v125 + 28);
            uint64_t v54 = &v15[v53];
            uint64_t v55 = &v16[v53];
            int v56 = *(_DWORD *)v55;
            v54[4] = v55[4];
            *(_DWORD *)uint64_t v54 = v56;
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 7u:
            uint64_t v32 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v15, v16, v32);
            uint64_t v33 = type metadata accessor for USOParse();
            uint64_t v34 = *(int *)(v33 + 20);
            uint64_t v126 = v33;
            __dsta = &v15[v34];
            uint64_t v35 = &v16[v34];
            uint64_t v36 = sub_1C9BEAE48();
            __srca = v35;
            uint64_t v37 = (uint64_t)v35;
            uint64_t v38 = v36;
            if (__swift_getEnumTagSinglePayload(v37, 1, v36))
            {
              uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, __srca, *(void *)(*(void *)(v39 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(__dsta, __srca, v38);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v38);
            }
            uint64_t v57 = *(int *)(v126 + 24);
            uint64_t v58 = &v15[v57];
            uint64_t v59 = &v16[v57];
            *(void *)uint64_t v58 = *(void *)v59;
            *((void *)v58 + 1) = *((void *)v59 + 1);
            uint64_t v60 = *(int *)(v126 + 28);
            uint64_t v61 = &v15[v60];
            uint64_t v62 = &v16[v60];
            int v63 = *(_DWORD *)v62;
            v61[4] = v62[4];
            *(_DWORD *)uint64_t v61 = v63;
            uint64_t v64 = (int *)type metadata accessor for LinkParse();
            uint64_t v65 = v64[5];
            uint64_t v66 = &v15[v65];
            uint64_t v67 = &v16[v65];
            *(void *)uint64_t v66 = *(void *)v67;
            *((void *)v66 + 1) = *((void *)v67 + 1);
            uint64_t v68 = v64[6];
            uint64_t v69 = &v15[v68];
            uint64_t v70 = &v16[v68];
            *(void *)uint64_t v69 = *(void *)v70;
            *((void *)v69 + 1) = *((void *)v70 + 1);
            uint64_t v71 = v64[7];
            uint64_t v72 = &v15[v71];
            uint64_t v73 = &v16[v71];
            *(void *)uint64_t v72 = *(void *)v73;
            *((void *)v72 + 1) = *((void *)v73 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 8u:
            uint64_t v40 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v15, v16, v40);
            uint64_t v41 = type metadata accessor for NLRouterParse();
            uint64_t v42 = *(int *)(v41 + 20);
            uint64_t v43 = &v15[v42];
            uint64_t v44 = &v16[v42];
            *(void *)uint64_t v43 = *(void *)v44;
            *((void *)v43 + 1) = *((void *)v44 + 1);
            uint64_t v45 = *(int *)(v41 + 24);
            uint64_t v127 = v41;
            __dstb = &v15[v45];
            uint64_t v46 = &v16[v45];
            uint64_t v47 = type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
            {
              uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstb, v46, *(void *)(*(void *)(v48 - 8) + 64));
            }
            else
            {
              uint64_t v74 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(__dstb, v46, v74);
              uint64_t v120 = v47;
              uint64_t v121 = v46;
              uint64_t v75 = *(int *)(v47 + 20);
              uint64_t v119 = &__dstb[v75];
              uint64_t v76 = &v46[v75];
              uint64_t v77 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
              {
                uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v119, v76, *(void *)(*(void *)(v78 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(v119, v76, v77);
                __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v77);
              }
              uint64_t v79 = *(int *)(v120 + 24);
              int v80 = &__dstb[v79];
              uint64_t v81 = &v121[v79];
              *(void *)int v80 = *(void *)v81;
              *((void *)v80 + 1) = *((void *)v81 + 1);
              uint64_t v82 = *(int *)(v120 + 28);
              uint64_t v83 = &__dstb[v82];
              uint64_t v84 = &v121[v82];
              int v85 = *(_DWORD *)v84;
              v83[4] = v84[4];
              *(_DWORD *)uint64_t v83 = v85;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v120);
            }
            uint64_t v86 = *(int *)(v127 + 28);
            uint64_t v87 = *(void **)&v16[v86];
            *(void *)&v15[v86] = v87;
            id v88 = v87;
            goto LABEL_34;
          case 9u:
            uint64_t v49 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v15, v16, v49);
LABEL_34:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
            break;
        }
        *(void *)&v9[v13[6]] = *(void *)&v10[v13[6]];
        uint64_t v89 = v13[7];
        uint64_t v90 = &v9[v89];
        uint64_t v91 = &v10[v89];
        uint64_t v92 = *(void *)&v10[v89 + 24];
        swift_bridgeObjectRetain();
        if (v92)
        {
          *((void *)v90 + 3) = v92;
          *((void *)v90 + 4) = *((void *)v91 + 4);
          (**(void (***)(char *, char *, uint64_t))(v92 - 8))(v90, v91, v92);
        }
        else
        {
          long long v93 = *(_OWORD *)v91;
          long long v94 = *((_OWORD *)v91 + 1);
          *((void *)v90 + 4) = *((void *)v91 + 4);
          *(_OWORD *)uint64_t v90 = v93;
          *((_OWORD *)v90 + 1) = v94;
        }
        v9[v13[8]] = v10[v13[8]];
        uint64_t v95 = v135;
        *(void *)((char *)a1 + v135[6]) = *(void *)((char *)a2 + v135[6]);
        uint64_t v96 = v135[7];
        uint64_t v97 = *(void **)((char *)a2 + v96);
        *(void *)((char *)a1 + v96) = v97;
        uint64_t v98 = v135[8];
        uint64_t v99 = (void *)((char *)a1 + v98);
        uint64_t v100 = (void *)((char *)a2 + v98);
        *uint64_t v99 = *v100;
        v99[1] = v100[1];
        uint64_t v101 = v135[9];
        id v102 = (void *)((char *)a1 + v101);
        uint64_t v103 = (void *)((char *)a2 + v101);
        uint64_t v104 = type metadata accessor for ActionParaphrase(0);
        swift_bridgeObjectRetain();
        id v105 = v97;
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v104))
        {
          uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
          memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
        }
        else
        {
          *id v102 = *v103;
          v102[1] = v103[1];
          uint64_t v107 = *(int *)(v104 + 20);
          long long v108 = (void *)((char *)v102 + v107);
          long long v109 = (void *)((char *)v103 + v107);
          uint64_t v110 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
          {
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
            memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
          }
          else
          {
            *long long v108 = *v109;
            v108[1] = v109[1];
            v108[2] = v109[2];
            void v108[3] = v109[3];
            uint64_t v112 = *(int *)(v110 + 24);
            uint64_t v128 = (char *)v109 + v112;
            __dstc = (char *)v108 + v112;
            uint64_t v113 = sub_1C9BEB0C8();
            __srcb = *(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            __srcb(__dstc, v128, v113);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v104);
          uint64_t v95 = v135;
        }
        uint64_t v114 = v95[10];
        uint64_t v115 = (char *)a1 + v114;
        uint64_t v116 = (char *)a2 + v114;
        if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v114, 1, v134))
        {
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
          memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
        }
        else
        {
          v133(v115, v116, v134);
          __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v134);
        }
        *((unsigned char *)a1 + v95[11]) = *((unsigned char *)a2 + v95[11]);
        goto LABEL_48;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_48:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C98591A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    *a1 = *a2;
    uint64_t v6 = (int *)type metadata accessor for PluginAction();
    uint64_t v7 = v6[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C9BEAB08();
    uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
    v95(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for Input(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &v8[v12];
    uint64_t v14 = &v9[v12];
    uint64_t v96 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v15 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        goto LABEL_25;
      case 1u:
        uint64_t v16 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v13[*(int *)(v17 + 48)] = *(void *)&v14[*(int *)(v17 + 48)];
        goto LABEL_25;
      case 4u:
        uint64_t v18 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
        goto LABEL_25;
      case 6u:
        uint64_t v92 = v10;
        uint64_t v19 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v13, v14, v19);
        uint64_t v20 = type metadata accessor for USOParse();
        uint64_t v21 = *(int *)(v20 + 20);
        uint64_t v86 = v20;
        __dst = &v13[v21];
        uint64_t v22 = &v14[v21];
        uint64_t v23 = sub_1C9BEAE48();
        __src = v22;
        uint64_t v24 = (uint64_t)v22;
        uint64_t v25 = v23;
        if (__swift_getEnumTagSinglePayload(v24, 1, v23))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, __src, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(__dst, __src, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
        }
        *(_OWORD *)&v13[*(int *)(v86 + 24)] = *(_OWORD *)&v14[*(int *)(v86 + 24)];
        uint64_t v40 = *(int *)(v86 + 28);
        uint64_t v41 = &v13[v40];
        uint64_t v42 = &v14[v40];
        v41[4] = v42[4];
        *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
        goto LABEL_19;
      case 7u:
        uint64_t v92 = v10;
        uint64_t v27 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v13, v14, v27);
        uint64_t v28 = type metadata accessor for USOParse();
        uint64_t v29 = *(int *)(v28 + 20);
        uint64_t v87 = v28;
        __dsta = &v13[v29];
        uint64_t v30 = &v14[v29];
        uint64_t v31 = sub_1C9BEAE48();
        __srca = v30;
        uint64_t v32 = (uint64_t)v30;
        uint64_t v33 = v31;
        if (__swift_getEnumTagSinglePayload(v32, 1, v31))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, __srca, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(__dsta, __srca, v33);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v33);
        }
        *(_OWORD *)&v13[*(int *)(v87 + 24)] = *(_OWORD *)&v14[*(int *)(v87 + 24)];
        uint64_t v43 = *(int *)(v87 + 28);
        uint64_t v44 = &v13[v43];
        uint64_t v45 = &v14[v43];
        v44[4] = v45[4];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        uint64_t v46 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v13[v46[5]] = *(_OWORD *)&v14[v46[5]];
        *(_OWORD *)&v13[v46[6]] = *(_OWORD *)&v14[v46[6]];
        *(_OWORD *)&v13[v46[7]] = *(_OWORD *)&v14[v46[7]];
LABEL_19:
        swift_storeEnumTagMultiPayload();
        uint64_t v10 = v92;
        break;
      case 8u:
        uint64_t v35 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v13, v14, v35);
        uint64_t v36 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v13[*(int *)(v36 + 20)] = *(_OWORD *)&v14[*(int *)(v36 + 20)];
        uint64_t v82 = v13;
        __srcb = (int *)v36;
        uint64_t v37 = *(int *)(v36 + 24);
        __dstb = &v13[v37];
        id v88 = &v14[v37];
        uint64_t v81 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, (uint64_t)v81))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(__dstb, v88, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v93 = v10;
          uint64_t v47 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(__dstb, v88, v47);
          uint64_t v48 = v81[5];
          int v80 = &__dstb[v48];
          uint64_t v49 = &v88[v48];
          uint64_t v50 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
          {
            uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v80, v49, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v80, v49, v50);
            __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v50);
          }
          uint64_t v13 = v82;
          *(_OWORD *)&__dstb[v81[6]] = *(_OWORD *)&v88[v81[6]];
          uint64_t v52 = v81[7];
          uint64_t v53 = &__dstb[v52];
          uint64_t v54 = &v88[v52];
          v53[4] = v54[4];
          *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v81);
          uint64_t v10 = v93;
        }
        *(void *)&v13[__srcb[7]] = *(void *)&v14[__srcb[7]];
        goto LABEL_25;
      case 9u:
        uint64_t v39 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v13, v14, v39);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(void *)(*(void *)(v96 - 8) + 64));
        break;
    }
    *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
    uint64_t v55 = v11[7];
    int v56 = &v8[v55];
    uint64_t v57 = &v9[v55];
    long long v58 = *((_OWORD *)v57 + 1);
    *(_OWORD *)int v56 = *(_OWORD *)v57;
    *((_OWORD *)v56 + 1) = v58;
    *((void *)v56 + 4) = *((void *)v57 + 4);
    v8[v11[8]] = v9[v11[8]];
    *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
    uint64_t v59 = v6[9];
    uint64_t v60 = (_OWORD *)((char *)a1 + v59);
    uint64_t v61 = (_OWORD *)((char *)a2 + v59);
    uint64_t v62 = type metadata accessor for ActionParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
      memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      *uint64_t v60 = *v61;
      uint64_t v64 = *(int *)(v62 + 20);
      uint64_t v65 = (_OWORD *)((char *)v60 + v64);
      uint64_t v66 = (_OWORD *)((char *)v61 + v64);
      uint64_t v67 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        long long v69 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v69;
        uint64_t v70 = *(int *)(v67 + 24);
        uint64_t v94 = v10;
        uint64_t v71 = (char *)v65 + v70;
        uint64_t v72 = (char *)v66 + v70;
        uint64_t v73 = sub_1C9BEB0C8();
        uint64_t v74 = v71;
        uint64_t v10 = v94;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v74, v72, v73);
        __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
    }
    uint64_t v75 = v6[10];
    uint64_t v76 = (char *)a1 + v75;
    uint64_t v77 = (char *)a2 + v75;
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v75, 1, v10))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      v95(v76, v77, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v10);
    }
    *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1C9859B68(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9611A98((uint64_t)a1, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.State);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      *a1 = *a2;
      uint64_t v6 = (int *)type metadata accessor for PluginAction();
      uint64_t v7 = v6[5];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C9BEAB08();
      uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
      v95(v8, v9, v10);
      uint64_t v11 = (int *)type metadata accessor for Input(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      uint64_t v96 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v15 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
          goto LABEL_26;
        case 1u:
          uint64_t v16 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v13[*(int *)(v17 + 48)] = *(void *)&v14[*(int *)(v17 + 48)];
          goto LABEL_26;
        case 4u:
          uint64_t v18 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
          goto LABEL_26;
        case 6u:
          uint64_t v92 = v10;
          uint64_t v19 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v13, v14, v19);
          uint64_t v20 = type metadata accessor for USOParse();
          uint64_t v21 = *(int *)(v20 + 20);
          uint64_t v86 = v20;
          __dst = &v13[v21];
          uint64_t v22 = &v14[v21];
          uint64_t v23 = sub_1C9BEAE48();
          __src = v22;
          uint64_t v24 = (uint64_t)v22;
          uint64_t v25 = v23;
          if (__swift_getEnumTagSinglePayload(v24, 1, v23))
          {
            uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(__dst, __src, v25);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
          }
          *(_OWORD *)&v13[*(int *)(v86 + 24)] = *(_OWORD *)&v14[*(int *)(v86 + 24)];
          uint64_t v40 = *(int *)(v86 + 28);
          uint64_t v41 = &v13[v40];
          uint64_t v42 = &v14[v40];
          v41[4] = v42[4];
          *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
          goto LABEL_20;
        case 7u:
          uint64_t v92 = v10;
          uint64_t v27 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v13, v14, v27);
          uint64_t v28 = type metadata accessor for USOParse();
          uint64_t v29 = *(int *)(v28 + 20);
          uint64_t v87 = v28;
          __dsta = &v13[v29];
          uint64_t v30 = &v14[v29];
          uint64_t v31 = sub_1C9BEAE48();
          __srca = v30;
          uint64_t v32 = (uint64_t)v30;
          uint64_t v33 = v31;
          if (__swift_getEnumTagSinglePayload(v32, 1, v31))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(__dsta, __srca, v33);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v33);
          }
          *(_OWORD *)&v13[*(int *)(v87 + 24)] = *(_OWORD *)&v14[*(int *)(v87 + 24)];
          uint64_t v43 = *(int *)(v87 + 28);
          uint64_t v44 = &v13[v43];
          uint64_t v45 = &v14[v43];
          v44[4] = v45[4];
          *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
          uint64_t v46 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v13[v46[5]] = *(_OWORD *)&v14[v46[5]];
          *(_OWORD *)&v13[v46[6]] = *(_OWORD *)&v14[v46[6]];
          *(_OWORD *)&v13[v46[7]] = *(_OWORD *)&v14[v46[7]];
LABEL_20:
          swift_storeEnumTagMultiPayload();
          uint64_t v10 = v92;
          break;
        case 8u:
          uint64_t v35 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v13, v14, v35);
          uint64_t v36 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v13[*(int *)(v36 + 20)] = *(_OWORD *)&v14[*(int *)(v36 + 20)];
          uint64_t v82 = v13;
          __srcb = (int *)v36;
          uint64_t v37 = *(int *)(v36 + 24);
          __dstb = &v13[v37];
          id v88 = &v14[v37];
          uint64_t v81 = (int *)type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, (uint64_t)v81))
          {
            uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v88, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            uint64_t v93 = v10;
            uint64_t v47 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(__dstb, v88, v47);
            uint64_t v48 = v81[5];
            int v80 = &__dstb[v48];
            uint64_t v49 = &v88[v48];
            uint64_t v50 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
            {
              uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v80, v49, *(void *)(*(void *)(v51 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v80, v49, v50);
              __swift_storeEnumTagSinglePayload((uint64_t)v80, 0, 1, v50);
            }
            uint64_t v10 = v93;
            uint64_t v13 = v82;
            *(_OWORD *)&__dstb[v81[6]] = *(_OWORD *)&v88[v81[6]];
            uint64_t v52 = v81[7];
            uint64_t v53 = &__dstb[v52];
            uint64_t v54 = &v88[v52];
            v53[4] = v54[4];
            *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v81);
          }
          *(void *)&v13[__srcb[7]] = *(void *)&v14[__srcb[7]];
          goto LABEL_26;
        case 9u:
          uint64_t v39 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v13, v14, v39);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(void *)(*(void *)(v96 - 8) + 64));
          break;
      }
      *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
      uint64_t v55 = v11[7];
      int v56 = &v8[v55];
      uint64_t v57 = &v9[v55];
      long long v58 = *((_OWORD *)v57 + 1);
      *(_OWORD *)int v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v58;
      *((void *)v56 + 4) = *((void *)v57 + 4);
      v8[v11[8]] = v9[v11[8]];
      *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      *(_OWORD *)((char *)a1 + v6[8]) = *(_OWORD *)((char *)a2 + v6[8]);
      uint64_t v59 = v6[9];
      uint64_t v60 = (_OWORD *)((char *)a1 + v59);
      uint64_t v61 = (_OWORD *)((char *)a2 + v59);
      uint64_t v62 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        *uint64_t v60 = *v61;
        uint64_t v64 = *(int *)(v62 + 20);
        uint64_t v65 = (_OWORD *)((char *)v60 + v64);
        uint64_t v66 = (_OWORD *)((char *)v61 + v64);
        uint64_t v67 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          long long v69 = v66[1];
          *uint64_t v65 = *v66;
          v65[1] = v69;
          uint64_t v70 = *(int *)(v67 + 24);
          uint64_t v94 = v10;
          uint64_t v71 = (char *)v65 + v70;
          uint64_t v72 = (char *)v66 + v70;
          uint64_t v73 = sub_1C9BEB0C8();
          uint64_t v74 = v71;
          uint64_t v10 = v94;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v74, v72, v73);
          __swift_storeEnumTagSinglePayload((uint64_t)v65, 0, 1, v67);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v62);
      }
      uint64_t v75 = v6[10];
      uint64_t v76 = (char *)a1 + v75;
      uint64_t v77 = (char *)a2 + v75;
      if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v75, 1, v10))
      {
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        v95(v76, v77, v10);
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v10);
      }
      *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C985A54C()
{
  uint64_t result = type metadata accessor for PluginAction();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NoopFlow(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 1) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NoopFlow(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C985A77CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NoopFlow()
{
  return &type metadata for NoopFlow;
}

uint64_t type metadata accessor for FlowToActingFlowAdapter.Event(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA58E790);
}

uint64_t sub_1C985A7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_31_7();
  v4(v3);
  OUTLINED_FUNCTION_8_4();
  uint64_t v5 = OUTLINED_FUNCTION_228();
  v6(v5);
  return a2;
}

uint64_t sub_1C985A824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FlowToActingFlowAdapter.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C985A888()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C985A8C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_8_4();
  uint64_t v4 = OUTLINED_FUNCTION_229();
  v5(v4);
  return a2;
}

uint64_t sub_1C985A910()
{
  return sub_1C9854884();
}

unint64_t sub_1C985A92C()
{
  unint64_t result = qword_1EA58E778;
  if (!qword_1EA58E778)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA58E770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58E778);
  }
  return result;
}

uint64_t sub_1C985A988(uint64_t a1)
{
  return sub_1C98547B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_21Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C985A9E8(uint64_t a1)
{
  return sub_1C98563D0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C985A9F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E788);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C985AA80()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E788);

  return sub_1C9856564();
}

uint64_t sub_1C985AAF4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C985AB2C(char *a1)
{
}

void *sub_1C985AB34(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      BOOL v7 = (void *)*a2;
      id v8 = v7;
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      type metadata accessor for ExecuteResponse(0);
      type metadata accessor for PluginAction();
      sub_1C9BEC838();
    case 0:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      sub_1C9BEC838();
    default:
      memcpy(a1, a2, *(void *)(v5 + 64));
      break;
  }
  return a1;
}

void sub_1C985B858(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v3 = *a1;

      break;
    case 1:
      swift_release();
      swift_release();
      uint64_t v4 = type metadata accessor for ExecuteResponse(0);
      uint64_t v5 = (uint64_t)a1 + *(int *)(v4 + 36);
      unsigned int v6 = (int *)type metadata accessor for PluginAction();
      if (!__swift_getEnumTagSinglePayload(v5, 1, (uint64_t)v6))
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = v5 + v6[5];
        uint64_t v8 = sub_1C9BEAB08();
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        v9(v7, v8);
        uint64_t v10 = type metadata accessor for Input(0);
        uint64_t v11 = (id *)(v7 + *(int *)(v10 + 20));
        type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = sub_1C9BEC028();
            goto LABEL_32;
          case 1u:
            uint64_t v13 = sub_1C9BEC028();
            (*(void (**)(id *, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            swift_release();
            break;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 3u:
            swift_unknownObjectRelease();
            break;
          case 4u:
            uint64_t v12 = sub_1C9BEAC48();
            goto LABEL_32;
          case 5u:

            break;
          case 6u:
            uint64_t v38 = v9;
            uint64_t v14 = sub_1C9BEAF18();
            (*(void (**)(id *, uint64_t))(*(void *)(v14 - 8) + 8))(v11, v14);
            uint64_t v15 = (uint64_t)v11 + *(int *)(type metadata accessor for USOParse() + 20);
            uint64_t v16 = sub_1C9BEAE48();
            if (!__swift_getEnumTagSinglePayload(v15, 1, v16)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
            }
            goto LABEL_24;
          case 7u:
            uint64_t v38 = v9;
            uint64_t v17 = sub_1C9BEAF18();
            (*(void (**)(id *, uint64_t))(*(void *)(v17 - 8) + 8))(v11, v17);
            uint64_t v18 = (uint64_t)v11 + *(int *)(type metadata accessor for USOParse() + 20);
            uint64_t v19 = sub_1C9BEAE48();
            if (!__swift_getEnumTagSinglePayload(v18, 1, v19)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
            }
            swift_bridgeObjectRelease();
            type metadata accessor for LinkParse();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_24:
            swift_bridgeObjectRelease();
            goto LABEL_30;
          case 8u:
            uint64_t v38 = v9;
            uint64_t v20 = sub_1C9BEC928();
            (*(void (**)(id *, uint64_t))(*(void *)(v20 - 8) + 8))(v11, v20);
            uint64_t v21 = type metadata accessor for NLRouterParse();
            swift_bridgeObjectRelease();
            uint64_t v22 = (uint64_t)v11 + *(int *)(v21 + 24);
            uint64_t v37 = type metadata accessor for USOParse();
            if (!__swift_getEnumTagSinglePayload(v22, 1, v37))
            {
              uint64_t v23 = sub_1C9BEAF18();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
              uint64_t v24 = v22 + *(int *)(v37 + 20);
              uint64_t v25 = sub_1C9BEAE48();
              uint64_t v36 = v24;
              uint64_t v26 = v24;
              uint64_t v27 = v25;
              if (!__swift_getEnumTagSinglePayload(v26, 1, v25)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v36, v27);
              }
              swift_bridgeObjectRelease();
            }

LABEL_30:
            uint64_t v9 = v38;
            break;
          case 9u:
            uint64_t v12 = sub_1C9BEC8F8();
LABEL_32:
            (*(void (**)(id *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
            break;
          default:
            break;
        }
        swift_bridgeObjectRelease();
        uint64_t v28 = v7 + *(int *)(v10 + 28);
        if (*(void *)(v28 + 24)) {
          __swift_destroy_boxed_opaque_existential_1(v28);
        }
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        uint64_t v29 = v5 + v6[9];
        uint64_t v30 = type metadata accessor for ActionParaphrase(0);
        if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
        {
          swift_bridgeObjectRelease();
          uint64_t v31 = v29 + *(int *)(v30 + 20);
          uint64_t v32 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v33 = v31 + *(int *)(v32 + 24);
            uint64_t v34 = sub_1C9BEB0C8();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
          }
        }
        uint64_t v35 = v5 + v6[10];
        if (!__swift_getEnumTagSinglePayload(v35, 1, v8)) {
          v9(v35, v8);
        }
      }
      if (*(void **)((char *)a1 + *(int *)(v4 + 40) + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 0:
      swift_release();
      swift_release();
      break;
  }
}

void *sub_1C985BF5C(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v7 = (void *)*a2;
      id v8 = v7;
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      type metadata accessor for ExecuteResponse(0);
      type metadata accessor for PluginAction();
      sub_1C9BEC838();
    case 0:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      sub_1C9BEC838();
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1C985CC3C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9611A98((uint64_t)a1, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v7 = (void *)*a2;
        id v8 = v7;
        *a1 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[3] = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        type metadata accessor for ExecuteResponse(0);
        type metadata accessor for PluginAction();
        sub_1C9BEC838();
      case 0:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        a1[3] = a2[3];
        sub_1C9BEC838();
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_1C985D9BC(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    a1[3] = a2[3];
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v6 = type metadata accessor for ExecuteResponse(0);
    uint64_t v7 = *(int *)(v6 + 36);
    id v8 = (_OWORD *)((char *)a1 + v7);
    uint64_t v9 = (_OWORD *)((char *)a2 + v7);
    uint64_t v10 = (int *)type metadata accessor for PluginAction();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *id v8 = *v9;
      uint64_t v12 = v10[5];
      uint64_t v13 = (char *)v8 + v12;
      uint64_t v14 = (char *)v9 + v12;
      uint64_t v100 = sub_1C9BEAB08();
      uint64_t v96 = *(void (**)(char *, char *))(*(void *)(v100 - 8) + 32);
      v96(v13, v14);
      uint64_t v98 = (int *)type metadata accessor for Input(0);
      uint64_t v15 = v98[5];
      id v102 = &v13[v15];
      uint64_t v16 = &v14[v15];
      uint64_t v97 = type metadata accessor for Parse(0);
      uint64_t v101 = v6;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v17 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v102, v16, v17);
          goto LABEL_26;
        case 1u:
          uint64_t v18 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v102, v16, v18);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v102[*(int *)(v19 + 48)] = *(void *)&v16[*(int *)(v19 + 48)];
          goto LABEL_26;
        case 4u:
          uint64_t v20 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v102, v16, v20);
          goto LABEL_26;
        case 6u:
          uint64_t v21 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v102, v16, v21);
          uint64_t v87 = (int *)type metadata accessor for USOParse();
          uint64_t v22 = v87[5];
          uint64_t v93 = &v102[v22];
          uint64_t v23 = &v16[v22];
          uint64_t v24 = sub_1C9BEAE48();
          uint64_t v90 = v23;
          uint64_t v25 = (uint64_t)v23;
          uint64_t v26 = v24;
          if (__swift_getEnumTagSinglePayload(v25, 1, v24))
          {
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v93, v90, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v93, v90, v26);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v26);
          }
          *(_OWORD *)&v102[v87[6]] = *(_OWORD *)&v16[v87[6]];
          uint64_t v40 = v87[7];
          uint64_t v41 = &v102[v40];
          uint64_t v42 = &v16[v40];
          v41[4] = v42[4];
          *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
          goto LABEL_26;
        case 7u:
          uint64_t v28 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v102, v16, v28);
          id v88 = (int *)type metadata accessor for USOParse();
          uint64_t v29 = v88[5];
          uint64_t v94 = &v102[v29];
          uint64_t v30 = &v16[v29];
          uint64_t v31 = sub_1C9BEAE48();
          uint64_t v91 = v30;
          uint64_t v32 = (uint64_t)v30;
          uint64_t v33 = v31;
          if (__swift_getEnumTagSinglePayload(v32, 1, v31))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v94, v91, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v94, v91, v33);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v33);
          }
          *(_OWORD *)&v102[v88[6]] = *(_OWORD *)&v16[v88[6]];
          uint64_t v43 = v88[7];
          uint64_t v44 = &v102[v43];
          uint64_t v45 = &v16[v43];
          v44[4] = v45[4];
          *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
          uint64_t v46 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v102[v46[5]] = *(_OWORD *)&v16[v46[5]];
          *(_OWORD *)&v102[v46[6]] = *(_OWORD *)&v16[v46[6]];
          *(_OWORD *)&v102[v46[7]] = *(_OWORD *)&v16[v46[7]];
          goto LABEL_26;
        case 8u:
          uint64_t v35 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v102, v16, v35);
          uint64_t v36 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v102[*(int *)(v36 + 20)] = *(_OWORD *)&v16[*(int *)(v36 + 20)];
          uint64_t v37 = *(int *)(v36 + 24);
          uint64_t v89 = v36;
          uint64_t v92 = &v102[v37];
          uint64_t v95 = &v16[v37];
          uint64_t v86 = (int *)type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, (uint64_t)v86))
          {
            uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v92, v95, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            uint64_t v47 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v92, v95, v47);
            uint64_t v48 = v86[5];
            int v85 = &v92[v48];
            uint64_t v49 = &v95[v48];
            uint64_t v50 = sub_1C9BEAE48();
            uint64_t v84 = v49;
            uint64_t v51 = (uint64_t)v49;
            uint64_t v52 = v50;
            if (__swift_getEnumTagSinglePayload(v51, 1, v50))
            {
              uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v85, v84, *(void *)(*(void *)(v53 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v85, v84, v52);
              __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v52);
            }
            *(_OWORD *)&v92[v86[6]] = *(_OWORD *)&v95[v86[6]];
            uint64_t v54 = v86[7];
            uint64_t v55 = &v92[v54];
            int v56 = &v95[v54];
            v55[4] = v56[4];
            *(_DWORD *)uint64_t v55 = *(_DWORD *)v56;
            __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, (uint64_t)v86);
          }
          *(void *)&v102[*(int *)(v89 + 28)] = *(void *)&v16[*(int *)(v89 + 28)];
          goto LABEL_26;
        case 9u:
          uint64_t v39 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v102, v16, v39);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v102, v16, *(void *)(*(void *)(v97 - 8) + 64));
          break;
      }
      *(void *)&v13[v98[6]] = *(void *)&v14[v98[6]];
      uint64_t v57 = v98[7];
      long long v58 = &v13[v57];
      uint64_t v59 = &v14[v57];
      long long v60 = *((_OWORD *)v59 + 1);
      *(_OWORD *)long long v58 = *(_OWORD *)v59;
      *((_OWORD *)v58 + 1) = v60;
      *((void *)v58 + 4) = *((void *)v59 + 4);
      v13[v98[8]] = v14[v98[8]];
      *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
      *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
      *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
      uint64_t v61 = v10[9];
      uint64_t v62 = (_OWORD *)((char *)v8 + v61);
      uint64_t v63 = (_OWORD *)((char *)v9 + v61);
      uint64_t v64 = type metadata accessor for ActionParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        uint64_t v66 = v100;
      }
      else
      {
        *uint64_t v62 = *v63;
        uint64_t v67 = *(int *)(v64 + 20);
        uint64_t v103 = (_OWORD *)((char *)v62 + v67);
        uint64_t v68 = (_OWORD *)((char *)v63 + v67);
        uint64_t v69 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
        {
          uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
          memcpy(v103, v68, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          long long v71 = v68[1];
          *uint64_t v103 = *v68;
          v103[1] = v71;
          uint64_t v72 = *(int *)(v69 + 24);
          uint64_t v99 = (char *)v103 + v72;
          uint64_t v73 = (char *)v68 + v72;
          uint64_t v74 = sub_1C9BEB0C8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v99, v73, v74);
          __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v69);
        }
        uint64_t v66 = v100;
        __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v64);
      }
      uint64_t v75 = v10[10];
      uint64_t v76 = (char *)v8 + v75;
      uint64_t v77 = (char *)v9 + v75;
      if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v75, 1, v66))
      {
        uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v96)(v76, v77, v66);
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v66);
      }
      uint64_t v6 = v101;
      *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
    }
    uint64_t v79 = *(int *)(v6 + 40);
    int v80 = (_OWORD *)((char *)a1 + v79);
    uint64_t v81 = (_OWORD *)((char *)a2 + v79);
    long long v82 = v81[1];
    *int v80 = *v81;
    v80[1] = v82;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1C985E438(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9611A98((uint64_t)a1, (void (*)(void))type metadata accessor for FlowToActingFlowAdapter.Event);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v6 = type metadata accessor for ExecuteResponse(0);
      uint64_t v7 = *(int *)(v6 + 36);
      id v8 = (_OWORD *)((char *)a1 + v7);
      uint64_t v9 = (_OWORD *)((char *)a2 + v7);
      uint64_t v10 = (int *)type metadata accessor for PluginAction();
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, (uint64_t)v10))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        *id v8 = *v9;
        uint64_t v12 = v10[5];
        uint64_t v13 = (char *)v8 + v12;
        uint64_t v14 = (char *)v9 + v12;
        uint64_t v102 = sub_1C9BEAB08();
        uint64_t v98 = *(void (**)(char *, char *))(*(void *)(v102 - 8) + 32);
        v98(v13, v14);
        uint64_t v100 = (int *)type metadata accessor for Input(0);
        uint64_t v15 = v100[5];
        uint64_t v104 = &v13[v15];
        uint64_t v16 = &v14[v15];
        uint64_t v99 = type metadata accessor for Parse(0);
        uint64_t v103 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v104, v16, v17);
            goto LABEL_27;
          case 1u:
            uint64_t v18 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v104, v16, v18);
            uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v104[*(int *)(v19 + 48)] = *(void *)&v16[*(int *)(v19 + 48)];
            goto LABEL_27;
          case 4u:
            uint64_t v20 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v104, v16, v20);
            goto LABEL_27;
          case 6u:
            uint64_t v21 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v104, v16, v21);
            uint64_t v22 = type metadata accessor for USOParse();
            uint64_t v23 = *(int *)(v22 + 20);
            uint64_t v92 = v22;
            __dst = &v104[v23];
            uint64_t v24 = &v16[v23];
            uint64_t v25 = sub_1C9BEAE48();
            __src = v24;
            uint64_t v26 = (uint64_t)v24;
            uint64_t v27 = v25;
            if (__swift_getEnumTagSinglePayload(v26, 1, v25))
            {
              uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, __src, *(void *)(*(void *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(__dst, __src, v27);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v27);
            }
            *(_OWORD *)&v104[*(int *)(v92 + 24)] = *(_OWORD *)&v16[*(int *)(v92 + 24)];
            uint64_t v42 = *(int *)(v92 + 28);
            uint64_t v43 = &v104[v42];
            uint64_t v44 = &v16[v42];
            v43[4] = v44[4];
            *(_DWORD *)uint64_t v43 = *(_DWORD *)v44;
            goto LABEL_27;
          case 7u:
            uint64_t v29 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v104, v16, v29);
            uint64_t v30 = type metadata accessor for USOParse();
            uint64_t v31 = *(int *)(v30 + 20);
            uint64_t v93 = v30;
            __dsta = &v104[v31];
            uint64_t v32 = &v16[v31];
            uint64_t v33 = sub_1C9BEAE48();
            __srca = v32;
            uint64_t v34 = (uint64_t)v32;
            uint64_t v35 = v33;
            if (__swift_getEnumTagSinglePayload(v34, 1, v33))
            {
              uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, __srca, *(void *)(*(void *)(v36 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(__dsta, __srca, v35);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v35);
            }
            *(_OWORD *)&v104[*(int *)(v93 + 24)] = *(_OWORD *)&v16[*(int *)(v93 + 24)];
            uint64_t v45 = *(int *)(v93 + 28);
            uint64_t v46 = &v104[v45];
            uint64_t v47 = &v16[v45];
            v46[4] = v47[4];
            *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
            uint64_t v48 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v104[v48[5]] = *(_OWORD *)&v16[v48[5]];
            *(_OWORD *)&v104[v48[6]] = *(_OWORD *)&v16[v48[6]];
            *(_OWORD *)&v104[v48[7]] = *(_OWORD *)&v16[v48[7]];
            goto LABEL_27;
          case 8u:
            uint64_t v37 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v104, v16, v37);
            uint64_t v38 = type metadata accessor for NLRouterParse();
            *(_OWORD *)&v104[*(int *)(v38 + 20)] = *(_OWORD *)&v16[*(int *)(v38 + 20)];
            uint64_t v39 = *(int *)(v38 + 24);
            __srcb = (int *)v38;
            uint64_t v94 = &v104[v39];
            __dstb = &v16[v39];
            id v88 = (int *)type metadata accessor for USOParse();
            if (__swift_getEnumTagSinglePayload((uint64_t)__dstb, 1, (uint64_t)v88))
            {
              uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(v94, __dstb, *(void *)(*(void *)(v40 - 8) + 64));
            }
            else
            {
              uint64_t v49 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v94, __dstb, v49);
              uint64_t v50 = v88[5];
              uint64_t v87 = &v94[v50];
              uint64_t v51 = &__dstb[v50];
              uint64_t v52 = sub_1C9BEAE48();
              uint64_t v86 = v51;
              uint64_t v53 = (uint64_t)v51;
              uint64_t v54 = v52;
              if (__swift_getEnumTagSinglePayload(v53, 1, v52))
              {
                uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v87, v86, *(void *)(*(void *)(v55 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v87, v86, v54);
                __swift_storeEnumTagSinglePayload((uint64_t)v87, 0, 1, v54);
              }
              *(_OWORD *)&v94[v88[6]] = *(_OWORD *)&__dstb[v88[6]];
              uint64_t v56 = v88[7];
              uint64_t v57 = &v94[v56];
              long long v58 = &__dstb[v56];
              v57[4] = v58[4];
              *(_DWORD *)uint64_t v57 = *(_DWORD *)v58;
              __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, (uint64_t)v88);
            }
            *(void *)&v104[__srcb[7]] = *(void *)&v16[__srcb[7]];
            goto LABEL_27;
          case 9u:
            uint64_t v41 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v104, v16, v41);
LABEL_27:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v104, v16, *(void *)(*(void *)(v99 - 8) + 64));
            break;
        }
        *(void *)&v13[v100[6]] = *(void *)&v14[v100[6]];
        uint64_t v59 = v100[7];
        long long v60 = &v13[v59];
        uint64_t v61 = &v14[v59];
        long long v62 = *((_OWORD *)v61 + 1);
        *(_OWORD *)long long v60 = *(_OWORD *)v61;
        *((_OWORD *)v60 + 1) = v62;
        *((void *)v60 + 4) = *((void *)v61 + 4);
        v13[v100[8]] = v14[v100[8]];
        *(void *)((char *)v8 + v10[6]) = *(void *)((char *)v9 + v10[6]);
        *(void *)((char *)v8 + v10[7]) = *(void *)((char *)v9 + v10[7]);
        *(_OWORD *)((char *)v8 + v10[8]) = *(_OWORD *)((char *)v9 + v10[8]);
        uint64_t v63 = v10[9];
        uint64_t v64 = (_OWORD *)((char *)v8 + v63);
        uint64_t v65 = (_OWORD *)((char *)v9 + v63);
        uint64_t v66 = type metadata accessor for ActionParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
          uint64_t v68 = v102;
        }
        else
        {
          *uint64_t v64 = *v65;
          uint64_t v69 = *(int *)(v66 + 20);
          id v105 = (_OWORD *)((char *)v64 + v69);
          uint64_t v70 = (_OWORD *)((char *)v65 + v69);
          uint64_t v71 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
          {
            uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
            memcpy(v105, v70, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            long long v73 = v70[1];
            *id v105 = *v70;
            v105[1] = v73;
            uint64_t v74 = *(int *)(v71 + 24);
            uint64_t v101 = (char *)v105 + v74;
            uint64_t v75 = (char *)v70 + v74;
            uint64_t v76 = sub_1C9BEB0C8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v101, v75, v76);
            __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v71);
          }
          uint64_t v68 = v102;
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
        }
        uint64_t v77 = v10[10];
        uint64_t v78 = (char *)v8 + v77;
        uint64_t v79 = (char *)v9 + v77;
        if (__swift_getEnumTagSinglePayload((uint64_t)v9 + v77, 1, v68))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
          memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v98)(v78, v79, v68);
          __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v68);
        }
        uint64_t v6 = v103;
        *((unsigned char *)v8 + v10[11]) = *((unsigned char *)v9 + v10[11]);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, (uint64_t)v10);
      }
      uint64_t v81 = *(int *)(v6 + 40);
      long long v82 = (_OWORD *)((char *)a1 + v81);
      uint64_t v83 = (_OWORD *)((char *)a2 + v81);
      long long v84 = v83[1];
      *long long v82 = *v83;
      v82[1] = v84;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C985EEE0()
{
  uint64_t result = type metadata accessor for ExecuteResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_43()
{
  return swift_beginAccess();
}

void *OUTLINED_FUNCTION_9_33()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 - 240), *(void *)(v0 - 216));
}

uint64_t OUTLINED_FUNCTION_11_37@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 336) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_12_32()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_16_26()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_18_26()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_20_26()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_22_22()
{
  return type metadata accessor for FlowToActingFlowAdapter.State(0);
}

double OUTLINED_FUNCTION_23_22()
{
  *(void *)(v0 - 128) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_20()
{
  uint64_t v2 = *(void *)(v0 - 176);
  uint64_t v3 = *(void **)(v0 - 256);
  *uint64_t v3 = *(void *)(v0 - 184);
  v3[1] = v2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_25_17()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_26_19()
{
  return v0;
}

void OUTLINED_FUNCTION_27_19()
{
  sub_1C98546F8((unint64_t *)(v2 - 200), v0, v1);
}

uint64_t OUTLINED_FUNCTION_29_17()
{
  return sub_1C9BED6B8();
}

unsigned char *OUTLINED_FUNCTION_30_15()
{
  uint64_t v2 = *(unsigned char **)(v1 - 256);
  *uint64_t v2 = v0;
  return v2;
}

void OUTLINED_FUNCTION_32_21()
{
  *(void *)(v0 - 88) = 0;
  *(void *)(v0 - 80) = 0xE000000000000000;
}

void OUTLINED_FUNCTION_33_15()
{
  *(void *)(v0 - 184) = 0;
  *(void *)(v0 - 176) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_34_16()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_36_16()
{
  return sub_1C985A7D4(v1, v0);
}

void OUTLINED_FUNCTION_45_11()
{
  sub_1C9BEC838();
}

uint64_t OUTLINED_FUNCTION_49_8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_51_11()
{
  return sub_1C9BED6B8();
}

void FlowToFlowFrameAdapter.__allocating_init<A>(_:)()
{
}

uint64_t FlowToFlowFrameAdapter.namespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FlowToFlowFrameAdapter.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C985F2D4()
{
  OUTLINED_FUNCTION_28_17();
  swift_beginAccess();
  type metadata accessor for FlowToFlowFrameAdapter.State();
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = OUTLINED_FUNCTION_52_2();
  return v1(v0);
}

uint64_t sub_1C985F358(uint64_t a1)
{
  OUTLINED_FUNCTION_28_17();
  swift_beginAccess();
  type metadata accessor for FlowToFlowFrameAdapter.State();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v1, a1);
  return swift_endAccess();
}

void FlowToFlowFrameAdapter.init<A>(_:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v3, v1);
  OUTLINED_FUNCTION_21_22();
  MEMORY[0x1F4188790](v4, v5);
  v0[2] = 6841202;
  v0[3] = 0xE300000000000000;
  uint64_t v6 = *(void (**)(void))(v2 + 16);
  OUTLINED_FUNCTION_26_20();
  v6();
  type metadata accessor for AnyFlow();
  if (swift_dynamicCast())
  {
    v0[6] = v7;
    sub_1C9BEC838();
  }
  OUTLINED_FUNCTION_26_20();
  v6();
  v0[6] = sub_1C960F9E0();
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  v0[4] = 0xD000000000000017;
  v0[5] = 0x80000001C9C1E1F0;
  sub_1C9BEC838();
}

#error "1C985FB60: call analysis failed (funcsize=306)"

uint64_t sub_1C985FBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v7[21] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA596060);
  v7[22] = swift_task_alloc();
  uint64_t v8 = sub_1C9BEADA8();
  v7[23] = v8;
  v7[24] = *(void *)(v8 - 8);
  v7[25] = swift_task_alloc();
  uint64_t v9 = sub_1C9BEAB08();
  v7[26] = v9;
  v7[27] = *(void *)(v9 - 8);
  v7[28] = swift_task_alloc();
  type metadata accessor for Parse(0);
  v7[29] = swift_task_alloc();
  v7[30] = type metadata accessor for Input(0);
  v7[31] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C985FD70, 0, 0);
}

uint64_t sub_1C985FD70()
{
  uint64_t v2 = (int *)v0[30];
  uint64_t v1 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[17];
  uint64_t v13 = v0[18];
  sub_1C9862660(v7, v3, (void (*)(void))type metadata accessor for Parse);
  uint64_t v8 = v1 + v2[7];
  *(void *)(v8 + 32) = 0;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  sub_1C9862660(v3, v1 + v2[5], (void (*)(void))type metadata accessor for Parse);
  *(void *)(v1 + v2[6]) = MEMORY[0x1E4FBC860];
  sub_1C9BEAAF8();
  sub_1C98626C0(v3, (void (*)(void))type metadata accessor for Parse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v4, v5);
  *(unsigned char *)(v1 + v2[8]) = 0;
  sub_1C95FF4B0(v8, &qword_1EA58DFE8);
  uint64_t v9 = type metadata accessor for SiriKitFlowFrameInput();
  sub_1C95FD654(v7 + *(int *)(v9 + 28), v8);
  v0[32] = *(void *)(v13 + 48);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[33] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C985FF10;
  uint64_t v11 = v0[31];
  return sub_1C9616978(v11);
}

uint64_t sub_1C985FF10()
{
  OUTLINED_FUNCTION_0_1();
  *(unsigned char *)(v1 + 272) = v0;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C985FFEC, 0, 0);
}

uint64_t sub_1C985FFEC()
{
  uint64_t v15 = v0;
  if (*(unsigned char *)(v0 + 272)) {
    uint64_t v1 = (unsigned int *)MEMORY[0x1E4F62268];
  }
  else {
    uint64_t v1 = (unsigned int *)MEMORY[0x1E4F62260];
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 192) + 104))(*(void *)(v0 + 200), *v1, *(void *)(v0 + 184));
  sub_1C9787E68(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v2 = (long long *)OUTLINED_FUNCTION_52_2();
    sub_1C95FD5D8(v2, v3);
    sub_1C95FD654(v0 + 16, v0 + 96);
    sub_1C985F358(v0 + 96);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_1C95FF4B0(v0 + 56, &qword_1EBC77560);
    memset(v13, 0, sizeof(v13));
    long long v14 = xmmword_1C9BF2260;
    sub_1C985F358((uint64_t)v13);
  }
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 200);
  uint64_t v7 = *(void *)(v0 + 176);
  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v9 = *(void (**)(uint64_t))(v0 + 152);
  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_82_2();
  v10();
  swift_storeEnumTagMultiPayload();
  v9(v7);
  sub_1C95FF4B0(v7, (uint64_t *)&unk_1EA596060);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v8);
  sub_1C98626C0(v4, (void (*)(void))type metadata accessor for Input);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

#error "1C9860818: call analysis failed (funcsize=391)"

uint64_t sub_1C9860888()
{
  (*(void (**)(void *__return_ptr))(*(void *)(v0 + 48) + 112))(v2);
  return swift_dynamicCast();
}

void sub_1C9860904(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_1C985F358((uint64_t)v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C95FD654((uint64_t)a1, (uint64_t)v8);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  sub_1C95FD5D8(v8, (uint64_t)(v7 + 3));
  v7[8] = a2;
  v7[9] = a3;
  sub_1C9BEC838();
}

void sub_1C98609FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v21[1] = a5;
  void v21[2] = a4;
  v21[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  MEMORY[0x1F4188790](v21[0], v7);
  uint64_t v8 = sub_1C9BEAD38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)v21 - v15;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = *(void *)(a1 + 24);
  if (*(unsigned char *)a1)
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))((char *)v21 - v15, *MEMORY[0x1E4F62250], v8);
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    long long v19 = xmmword_1C9BFAC80;
  }
  else
  {
    int v20 = *(unsigned __int8 *)(a1 + 16);
    (*(void (**)(char *, void, uint64_t))(v9 + 104))((char *)v21 - v15, *MEMORY[0x1E4F62248], v8);
    if (v20 != 1)
    {
      sub_1C95FD654(a3, (uint64_t)&v22);
LABEL_7:
      sub_1C985F358((uint64_t)&v22);
      if (v17)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5C8);
        swift_allocObject();
        sub_1C9BEC838();
      }
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v16, v8);
      if (v18)
      {
        sub_1C9BEADB8();
        swift_allocObject();
        sub_1C9BEC838();
      }
      type metadata accessor for SiriKitFlowFrameInput();
      sub_1C9BEC838();
    }
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    long long v19 = xmmword_1C9BF2260;
  }
  long long v25 = v19;
  goto LABEL_7;
}

uint64_t sub_1C9860D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C95FF454(a2, (uint64_t)v5);
  (*(void (**)(unsigned char *))(a3 + 16))(v5);
  return sub_1C95FF4B0((uint64_t)v5, &qword_1EBC78700);
}

void sub_1C9860D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C9BEC838();
}

void sub_1C9860E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v15[0] = a3;
  v15[1] = a2;
  uint64_t v4 = type metadata accessor for ExecuteResponse(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8, v7);
  uint64_t v8 = sub_1C9BEAD38();
  MEMORY[0x1F4188790](v8 - 8, v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  uint64_t v12 = MEMORY[0x1F4188790](v10, v11);
  if (*(void *)(a1 + 8))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E5C8);
    swift_allocObject();
    swift_retain_n();
    sub_1C983F590();
  }
  char v16 = *(unsigned char *)a1;
  sub_1C986111C(v12);
  sub_1C9862660(a1, (uint64_t)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ExecuteResponse);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1C9862580((uint64_t)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, (void (*)(void))type metadata accessor for ExecuteResponse);
  sub_1C9BEADB8();
  swift_allocObject();
  sub_1C9BEC838();
}

#error "1C98614EC: call analysis failed (funcsize=248)"

uint64_t sub_1C986155C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  if (v3)
  {
    sub_1C95FF454(a2, (uint64_t)v5);
    (*(void (**)(unsigned char *))(v3 + 16))(v5);
    return sub_1C95FF4B0((uint64_t)v5, &qword_1EBC78700);
  }
  return result;
}

uint64_t FlowToFlowFrameAdapter.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for FlowToFlowFrameAdapter.State();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_37();
  v1();
  return v0;
}

uint64_t FlowToFlowFrameAdapter.__deallocating_deinit()
{
  FlowToFlowFrameAdapter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9861664()
{
  return FlowToFlowFrameAdapter.debugDescription.getter();
}

uint64_t sub_1C9861688()
{
  return FlowToFlowFrameAdapter.namespace.getter();
}

uint64_t sub_1C98616AC()
{
  return sub_1C985F698();
}

void sub_1C98616D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  sub_1C9BEC838();
}

uint64_t sub_1C9861750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C98601D4(a1, a3, a4);
}

uint64_t sub_1C986177C()
{
  return sub_1C9860888();
}

uint64_t type metadata accessor for FlowToFlowFrameAdapter.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C98617B8()
{
  type metadata accessor for SiriKitFlowFrameInput();
  OUTLINED_FUNCTION_6_2();
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  swift_unknownObjectRelease();
  uint64_t v6 = (void **)(v1 + v5);
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1C9BEC028();
      goto LABEL_22;
    case 1u:
      sub_1C9BEC028();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v7();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      sub_1C9BEAC48();
      goto LABEL_22;
    case 5u:
      uint64_t v8 = *v6;
      goto LABEL_20;
    case 6u:
      sub_1C9BEAF18();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v9();
      type metadata accessor for USOParse();
      uint64_t v10 = OUTLINED_FUNCTION_36_17();
      if (!OUTLINED_FUNCTION_11_38(v10))
      {
        OUTLINED_FUNCTION_112();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v3);
      }
      goto LABEL_14;
    case 7u:
      sub_1C9BEAF18();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v12();
      type metadata accessor for USOParse();
      uint64_t v13 = OUTLINED_FUNCTION_36_17();
      if (!OUTLINED_FUNCTION_11_38(v13))
      {
        OUTLINED_FUNCTION_112();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v3);
      }
      OUTLINED_FUNCTION_20_27();
      type metadata accessor for LinkParse();
      OUTLINED_FUNCTION_20_27();
      OUTLINED_FUNCTION_20_27();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      sub_1C9BEC928();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v15();
      uint64_t v16 = type metadata accessor for NLRouterParse();
      OUTLINED_FUNCTION_20_27();
      uint64_t v17 = (char *)v6 + *(int *)(v16 + 24);
      uint64_t v18 = type metadata accessor for USOParse();
      if (!OUTLINED_FUNCTION_11_38(v18))
      {
        sub_1C9BEAF18();
        OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_37();
        v19();
        uint64_t v20 = (uint64_t)&v17[*(int *)(v3 + 20)];
        uint64_t v21 = sub_1C9BEAE48();
        uint64_t v27 = v20;
        uint64_t v22 = v20;
        uint64_t v23 = v21;
        if (!__swift_getEnumTagSinglePayload(v22, 1, v21))
        {
          OUTLINED_FUNCTION_112();
          (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27, v23);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v8 = *(void **)((char *)v6 + *(int *)(v16 + 28));
LABEL_20:

      break;
    case 9u:
      sub_1C9BEC8F8();
LABEL_22:
      OUTLINED_FUNCTION_8_0();
      (*(void (**)(unint64_t))(v25 + 8))(v1 + v5);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6 + *(int *)(v0 + 28));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9861BB8(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for SiriKitFlowFrameInput();
  OUTLINED_FUNCTION_5_0(v4);
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + v10);
  uint64_t v14 = v1 + v9;
  uint64_t v15 = (uint64_t *)(v1 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v18;
  *uint64_t v18 = v2;
  v18[1] = sub_1C9608754;
  return sub_1C985FBC0(a1, v11, v12, v14, v13, v16, v17);
}

uint64_t sub_1C9861CD8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C9861D14()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FlowToFlowFrameAdapter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FlowToFlowFrameAdapter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlowToFlowFrameAdapter);
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.onInput(controller:input:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.execute(controller:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.action(renderer:args:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of FlowToFlowFrameAdapter.exit(controller:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1C9861E44(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C9861EA0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1C9861EF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9861F30(uint64_t a1, char a2)
{
  return sub_1C9872220(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1C9861F3C()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

void sub_1C9861F84(uint64_t a1)
{
  sub_1C98609FC(a1, v1[2], (uint64_t)(v1 + 3), v1[8], v1[9]);
}

uint64_t sub_1C9861F94(uint64_t a1, uint64_t a2)
{
  return sub_1C9860D48(a1, a2, v2);
}

unint64_t sub_1C9861F9C()
{
  unint64_t result = qword_1EA58E5D0;
  if (!qword_1EA58E5D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA58E5C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E5D0);
  }
  return result;
}

void sub_1C9861FF0(uint64_t a1)
{
  sub_1C9860E20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C9861FF8()
{
  type metadata accessor for ExecuteResponse(0);
  OUTLINED_FUNCTION_6_2();
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_release();
  swift_release();
  uint64_t v4 = v3 + *(int *)(v0 + 36);
  unsigned int v5 = (int *)type metadata accessor for PluginAction();
  if (!__swift_getEnumTagSinglePayload(v4, 1, (uint64_t)v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + v5[5];
    sub_1C9BEAB08();
    OUTLINED_FUNCTION_8_0();
    long long v60 = *(void (**)(uint64_t))(v7 + 8);
    uint64_t v61 = v8;
    v60(v6);
    unint64_t v9 = (int *)type metadata accessor for Input(0);
    unint64_t v10 = (void **)(v6 + v9[5]);
    type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_1C9BEC028();
        goto LABEL_23;
      case 1u:
        sub_1C9BEC028();
        OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_37();
        v11();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        swift_release();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_15;
      case 3u:
        swift_unknownObjectRelease();
        break;
      case 4u:
        sub_1C9BEAC48();
        goto LABEL_23;
      case 5u:
        uint64_t v12 = *v10;
        goto LABEL_21;
      case 6u:
        sub_1C9BEAF18();
        OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_37();
        v13();
        type metadata accessor for USOParse();
        uint64_t v14 = OUTLINED_FUNCTION_32_22();
        if (!OUTLINED_FUNCTION_24_21(v14, v15, v16, v17, v18, v19, v20, v21, v48, v49, v51, v53, v55, v57))
        {
          OUTLINED_FUNCTION_112();
          (*(void (**)(uint64_t))(v22 + 8))(v58);
        }
        goto LABEL_15;
      case 7u:
        sub_1C9BEAF18();
        OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_37();
        v23();
        type metadata accessor for USOParse();
        uint64_t v24 = OUTLINED_FUNCTION_32_22();
        if (!OUTLINED_FUNCTION_24_21(v24, v25, v26, v27, v28, v29, v30, v31, v48, v49, v51, v53, v55, v57))
        {
          OUTLINED_FUNCTION_112();
          (*(void (**)(uint64_t))(v32 + 8))(v59);
        }
        swift_bridgeObjectRelease();
        type metadata accessor for LinkParse();
        OUTLINED_FUNCTION_31_19();
        swift_bridgeObjectRelease();
LABEL_15:
        swift_bridgeObjectRelease();
        break;
      case 8u:
        sub_1C9BEC928();
        OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_37();
        v33();
        type metadata accessor for NLRouterParse();
        OUTLINED_FUNCTION_31_19();
        uint64_t v56 = (uint64_t)v10 + *(int *)(v57 + 24);
        uint64_t v54 = type metadata accessor for USOParse();
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v56, 1, v54);
        uint64_t v35 = v57;
        if (!EnumTagSinglePayload)
        {
          sub_1C9BEAF18();
          OUTLINED_FUNCTION_8_0();
          OUTLINED_FUNCTION_37();
          v36();
          uint64_t v52 = v56 + *(int *)(v54 + 20);
          uint64_t v50 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v52, 1, v50))
          {
            OUTLINED_FUNCTION_112();
            (*(void (**)(void))(v37 + 8))();
          }
          swift_bridgeObjectRelease();
          uint64_t v35 = v57;
        }
        uint64_t v12 = *(void **)((char *)v10 + *(int *)(v35 + 28));
LABEL_21:

        break;
      case 9u:
        sub_1C9BEC8F8();
LABEL_23:
        OUTLINED_FUNCTION_8_0();
        (*(void (**)(void **))(v38 + 8))(v10);
        break;
      default:
        break;
    }
    swift_bridgeObjectRelease();
    uint64_t v39 = v6 + v9[7];
    if (*(void *)(v39 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v39);
    }
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_20_27();
    uint64_t v40 = v4 + v5[9];
    uint64_t v41 = type metadata accessor for ActionParaphrase(0);
    if (!OUTLINED_FUNCTION_4_28(v41))
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = v40 + v9[5];
      uint64_t v43 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (!OUTLINED_FUNCTION_4_28(v43))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v44 = v42 + v9[6];
        sub_1C9BEB0C8();
        OUTLINED_FUNCTION_8_0();
        (*(void (**)(uint64_t))(v45 + 8))(v44);
      }
    }
    uint64_t v46 = v4 + v5[10];
    if (!__swift_getEnumTagSinglePayload(v46, 1, v61)) {
      ((void (*)(uint64_t, uint64_t))v60)(v46, v61);
    }
  }
  if (*(void *)(v3 + *(int *)(v0 + 40) + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t sub_1C9862580(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1C98625E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ExecuteResponse(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1C986155C(a1, a2, v6);
}

uint64_t sub_1C9862660(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C98626C0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_11_38(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_14_34(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return sub_1C9BEDF68();
}

void OUTLINED_FUNCTION_18_27(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0x20u);
}

uint64_t OUTLINED_FUNCTION_19_31(uint64_t a1)
{
  *(void *)(v1 - 160) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_20_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_24_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return __swift_getEnumTagSinglePayload(a14, 1, a1);
}

uint64_t OUTLINED_FUNCTION_27_20()
{
  return sub_1C9BEE398();
}

uint64_t OUTLINED_FUNCTION_28_17()
{
  return v0 + 56;
}

uint64_t OUTLINED_FUNCTION_31_19()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_22()
{
  return sub_1C9BEAE48();
}

uint64_t OUTLINED_FUNCTION_34_17()
{
  return sub_1C9BEE1B8();
}

uint64_t OUTLINED_FUNCTION_36_17()
{
  return sub_1C9BEAE48();
}

Swift::Void __swiftcall FlowTracing.activate()()
{
  uint64_t v3 = v1;
  uint64_t v4 = v0;
  if (qword_1EBC773A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_1C984D8E0();
  uint64_t v5 = *(void *)(qword_1EBC7A478 + 16);
  sub_1C96B02EC(v5);
  uint64_t v6 = qword_1EBC7A478;
  *(void *)(qword_1EBC7A478 + 16) = v5 + 1;
  uint64_t v7 = v6 + 16 * v5;
  *(void *)(v7 + 32) = v2;
  *(void *)(v7 + 40) = v3;
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v3);
}

Swift::Void __swiftcall FlowTracing.deactivate()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  if (qword_1EBC773A0 != -1) {
    uint64_t v0 = swift_once();
  }
  MEMORY[0x1F4188790](v0, v1);
  swift_beginAccess();
  uint64_t v4 = sub_1C9862AEC((uint64_t (*)(long long *))sub_1C9863064);
  if (*(void *)(qword_1EBC7A478 + 16) < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1C98452B0(v4);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
  }
}

void sub_1C9862AD8()
{
  qword_1EBC7A478 = MEMORY[0x1E4FBC860];
}

uint64_t sub_1C9862AEC(uint64_t (*a1)(long long *))
{
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 16);
  if (!v5) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  for (uint64_t i = 32; ; i += 16)
  {
    long long v22 = *(_OWORD *)(v4 + i);
    unint64_t v9 = v22;
    swift_unknownObjectRetain();
    char v10 = a1(&v22);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return v9;
    }
    char v11 = v10;
    swift_unknownObjectRelease();
    if (v11) {
      break;
    }
    if (-v5 == --v7)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v9 = -v7;
  unint64_t v13 = 1 - v7;
  if (!__OFADD__(-v7, 1))
  {
    unint64_t v14 = *(void *)(v4 + 16);
    if (v13 == v14) {
      return v9;
    }
    uint64_t v15 = i + 16;
    while (v13 < v14)
    {
      long long v22 = *(_OWORD *)(v4 + v15);
      swift_unknownObjectRetain();
      char v16 = a1(&v22);
      uint64_t result = swift_unknownObjectRelease();
      if ((v16 & 1) == 0)
      {
        if (v13 != v9)
        {
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_28;
          }
          unint64_t v17 = *(void *)(v4 + 16);
          if (v9 >= v17) {
            goto LABEL_29;
          }
          if (v13 >= v17) {
            goto LABEL_30;
          }
          long long v20 = *(_OWORD *)(v4 + 32 + 16 * v9);
          long long v21 = *(_OWORD *)(v4 + v15);
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C9A4488C();
            uint64_t v4 = v19;
          }
          *(_OWORD *)(v4 + 16 * v9 + 32) = v21;
          uint64_t result = swift_unknownObjectRelease();
          if (v13 >= *(void *)(v4 + 16)) {
            goto LABEL_31;
          }
          *(_OWORD *)(v4 + v15) = v20;
          uint64_t result = swift_unknownObjectRelease();
          *uint64_t v23 = v4;
        }
        if (__OFADD__(v9++, 1)) {
          goto LABEL_27;
        }
      }
      ++v13;
      unint64_t v14 = *(void *)(v4 + 16);
      v15 += 16;
      if (v13 == v14) {
        return v9;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C9862D1C(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for SnippetManager.SnippetRecord(0) - 8;
  uint64_t v7 = MEMORY[0x1F4188790](v5, v6);
  uint64_t v37 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v36 = (uint64_t)&v33 - v11;
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v38 = (uint64_t)&v33 - v14;
  uint64_t v15 = *v1;
  uint64_t v16 = *(void *)(*v1 + 16);
  if (!v16) {
    return 0;
  }
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = *(void *)(v13 + 72);
  swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  unint64_t v34 = v17;
  while (1)
  {
    char v20 = a1(v15 + v17);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v19;
    }
    if (v20) {
      break;
    }
    ++v19;
    v17 += v18;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v15 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v19, 1))
  {
    unint64_t v22 = *(void *)(v15 + 16);
    if (v19 + 1 == v22) {
      return v19;
    }
    uint64_t v23 = v18 + v17;
    unint64_t v24 = v19 + 1;
    uint64_t v33 = v1;
    uint64_t v35 = v18;
    while (v24 < v22)
    {
      uint64_t v25 = v3;
      uint64_t v39 = v23;
      uint64_t v26 = v38;
      sub_1C986CD1C(v15 + v23, v38);
      char v27 = a1(v26);
      uint64_t result = sub_1C986CD80(v26, type metadata accessor for SnippetManager.SnippetRecord);
      if (v27)
      {
        uint64_t v3 = v25;
        uint64_t v28 = v35;
      }
      else
      {
        uint64_t v3 = v25;
        uint64_t v28 = v35;
        if (v24 != v19)
        {
          if ((v19 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(*v3 + 16);
          if (v19 >= v30) {
            goto LABEL_33;
          }
          uint64_t result = sub_1C986CD1C(v29 + v34 + v19 * v35, v36);
          if (v24 >= v30) {
            goto LABEL_34;
          }
          sub_1C986CD1C(v29 + v39, v37);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v33;
          *uint64_t v33 = v29;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_1C9A448C8(v29);
            uint64_t v29 = result;
            *uint64_t v3 = result;
          }
          if (v19 >= *(void *)(v29 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1C986CDE0(v37, v29 + v34 + v19 * v28);
          if (v24 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1C986CDE0(v36, *v3 + v39);
        }
        if (__OFADD__(v19++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v32 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_30;
      }
      uint64_t v15 = *v3;
      unint64_t v22 = *(void *)(*v3 + 16);
      ++v24;
      uint64_t v23 = v39 + v28;
      if (v32 == v22) {
        return v19;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_1C9863064(void *a1)
{
  return *a1 == *(void *)(v1 + 32);
}

uint64_t initializeBufferWithCopyOfBuffer for FlowTraceEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 2u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 3u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_1C9BEC838();
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_1C9BEC838();
    case 6u:
    case 7u:
    case 0xBu:
    case 0xCu:
      long long v21 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v21;
      (**(void (***)(uint64_t, uint64_t))(v21 - 8))(a1, a2);
      break;
    case 8u:
      long long v5 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      uint64_t v6 = *(void *)(a2 + 64);
      *(void *)(a1 + 64) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
      break;
    case 9u:
      long long v7 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v7;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E8B8);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = sub_1C9BEAB08();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      uint64_t v13 = (int *)type metadata accessor for Input(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = (void *)(v10 + v14);
      uint64_t v16 = (void *)(v11 + v14);
      uint64_t v17 = type metadata accessor for Parse(0);
      uint64_t v123 = v8;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v18 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v15, v16, v18);
          goto LABEL_38;
        case 1u:
          uint64_t v24 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v15, v16, v24);
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)((char *)v15 + *(int *)(v25 + 48)) = *(void *)((char *)v16 + *(int *)(v25 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v26 = v16[1];
          *uint64_t v15 = *v16;
          v15[1] = v26;
          void v15[2] = v16[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_38;
        case 3u:
          *uint64_t v15 = *v16;
          swift_unknownObjectRetain();
          goto LABEL_38;
        case 4u:
          uint64_t v27 = sub_1C9BEAC48();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v15, v16, v27);
          goto LABEL_38;
        case 5u:
          uint64_t v28 = (void *)*v16;
          *uint64_t v15 = *v16;
          id v29 = v28;
          goto LABEL_38;
        case 6u:
          uint64_t v30 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v15, v16, v30);
          uint64_t v120 = (int *)type metadata accessor for USOParse();
          uint64_t v31 = v120[5];
          __dst = (char *)v15 + v31;
          unint64_t v32 = (char *)v16 + v31;
          uint64_t v33 = sub_1C9BEAE48();
          uint64_t v113 = v32;
          uint64_t v34 = (uint64_t)v32;
          uint64_t v35 = v33;
          if (__swift_getEnumTagSinglePayload(v34, 1, v33))
          {
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v113, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v35 - 8) + 16))(__dst, v113, v35);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v35);
          }
          uint64_t v55 = v120[6];
          uint64_t v56 = (void *)((char *)v15 + v55);
          uint64_t v57 = (void *)((char *)v16 + v55);
          uint64_t v58 = v57[1];
          *uint64_t v56 = *v57;
          v56[1] = v58;
          uint64_t v59 = v120[7];
          long long v60 = (char *)v15 + v59;
          uint64_t v61 = (char *)v16 + v59;
          v60[4] = v61[4];
          *(_DWORD *)long long v60 = *(_DWORD *)v61;
          swift_bridgeObjectRetain();
          goto LABEL_38;
        case 7u:
          uint64_t v37 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v15, v16, v37);
          uint64_t v121 = (int *)type metadata accessor for USOParse();
          uint64_t v38 = v121[5];
          __dsta = (char *)v15 + v38;
          uint64_t v39 = (char *)v16 + v38;
          uint64_t v40 = sub_1C9BEAE48();
          uint64_t v114 = v39;
          uint64_t v41 = (uint64_t)v39;
          uint64_t v42 = v40;
          if (__swift_getEnumTagSinglePayload(v41, 1, v40))
          {
            uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, v114, *(void *)(*(void *)(v43 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v42 - 8) + 16))(__dsta, v114, v42);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v42);
          }
          uint64_t v62 = v121[6];
          uint64_t v63 = (void *)((char *)v15 + v62);
          uint64_t v64 = (void *)((char *)v16 + v62);
          __dstc = (void *)v64[1];
          *uint64_t v63 = *v64;
          v63[1] = __dstc;
          uint64_t v65 = v121[7];
          uint64_t v66 = (char *)v15 + v65;
          uint64_t v67 = (char *)v16 + v65;
          v66[4] = v67[4];
          *(_DWORD *)uint64_t v66 = *(_DWORD *)v67;
          uint64_t v68 = (int *)type metadata accessor for LinkParse();
          uint64_t v69 = v68[5];
          uint64_t v70 = (void *)((char *)v15 + v69);
          uint64_t v71 = (void *)((char *)v16 + v69);
          uint64_t v72 = v71[1];
          *uint64_t v70 = *v71;
          v70[1] = v72;
          uint64_t v73 = v68[6];
          uint64_t v74 = (void *)((char *)v15 + v73);
          uint64_t v75 = (void *)((char *)v16 + v73);
          uint64_t v76 = v75[1];
          *uint64_t v74 = *v75;
          v74[1] = v76;
          uint64_t v77 = v68[7];
          uint64_t v78 = (void *)((char *)v15 + v77);
          uint64_t v79 = (void *)((char *)v16 + v77);
          uint64_t v80 = v79[1];
          *uint64_t v78 = *v79;
          v78[1] = v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_38;
        case 8u:
          uint64_t v112 = v13;
          uint64_t v44 = sub_1C9BEC928();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v15, v16, v44);
          uint64_t v45 = type metadata accessor for NLRouterParse();
          uint64_t v46 = *(int *)(v45 + 20);
          uint64_t v47 = (void *)((char *)v15 + v46);
          uint64_t v48 = (void *)((char *)v16 + v46);
          uint64_t v49 = v48[1];
          *uint64_t v47 = *v48;
          v47[1] = v49;
          uint64_t v50 = *(int *)(v45 + 24);
          uint64_t v115 = v45;
          __dstb = (char *)v15 + v50;
          uint64_t v122 = (char *)v16 + v50;
          uint64_t v51 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          uint64_t v111 = v51;
          if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v51))
          {
            uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v122, *(void *)(*(void *)(v52 - 8) + 64));
            uint64_t v13 = v112;
            uint64_t v53 = v115;
          }
          else
          {
            uint64_t v81 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(__dstb, v122, v81);
            uint64_t v82 = *(int *)(v51 + 20);
            uint64_t v110 = &__dstb[v82];
            uint64_t v83 = &v122[v82];
            uint64_t v84 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
            {
              uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v110, v83, *(void *)(*(void *)(v85 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(v110, v83, v84);
              __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v84);
            }
            uint64_t v13 = v112;
            uint64_t v86 = *(int *)(v111 + 24);
            uint64_t v87 = &__dstb[v86];
            id v88 = &v122[v86];
            uint64_t v89 = *((void *)v88 + 1);
            *(void *)uint64_t v87 = *(void *)v88;
            *((void *)v87 + 1) = v89;
            uint64_t v90 = *(int *)(v111 + 28);
            uint64_t v91 = &__dstb[v90];
            uint64_t v92 = &v122[v90];
            v91[4] = v92[4];
            *(_DWORD *)uint64_t v91 = *(_DWORD *)v92;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v111);
            uint64_t v53 = v115;
          }
          uint64_t v93 = *(int *)(v53 + 28);
          uint64_t v94 = *(void **)((char *)v16 + v93);
          *(void *)((char *)v15 + v93) = v94;
          id v95 = v94;
          goto LABEL_38;
        case 9u:
          uint64_t v54 = sub_1C9BEC8F8();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v15, v16, v54);
LABEL_38:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
          break;
      }
      *(void *)(v10 + v13[6]) = *(void *)(v11 + v13[6]);
      uint64_t v96 = v13[7];
      uint64_t v97 = v10 + v96;
      uint64_t v98 = v11 + v96;
      uint64_t v99 = *(void *)(v11 + v96 + 24);
      swift_bridgeObjectRetain();
      if (v99)
      {
        uint64_t v100 = *(void *)(v98 + 32);
        *(void *)(v97 + 24) = v99;
        *(void *)(v97 + 32) = v100;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v99 - 8))(v97, v98, v99);
      }
      else
      {
        long long v101 = *(_OWORD *)(v98 + 16);
        *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
        *(_OWORD *)(v97 + 16) = v101;
        *(void *)(v97 + 32) = *(void *)(v98 + 32);
      }
      *(unsigned char *)(v10 + v13[8]) = *(unsigned char *)(v11 + v13[8]);
      uint64_t v102 = *(int *)(v123 + 64);
      uint64_t v103 = a1 + v102;
      uint64_t v104 = (_OWORD *)(a2 + v102);
      int v105 = *(unsigned __int8 *)(a2 + v102 + 40);
      if (v105 == 1)
      {
        long long v107 = *(_OWORD *)((char *)v104 + 24);
        *(_OWORD *)(v103 + 24) = v107;
        (**(void (***)(uint64_t))(v107 - 8))(v103);
        *(unsigned char *)(v103 + 40) = 1;
      }
      else if (v105)
      {
        long long v108 = v104[1];
        *(_OWORD *)uint64_t v103 = *v104;
        *(_OWORD *)(v103 + 16) = v108;
        *(_OWORD *)(v103 + 25) = *(_OWORD *)((char *)v104 + 25);
      }
      else
      {
        long long v106 = *(_OWORD *)((char *)v104 + 24);
        *(_OWORD *)(v103 + 24) = v106;
        (**(void (***)(uint64_t))(v106 - 8))(v103);
        *(unsigned char *)(v103 + 40) = 0;
      }
      break;
    case 0xAu:
      long long v19 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v19;
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1, a2);
      long long v20 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1 + 40, a2 + 40);
      break;
    case 0xDu:
      unint64_t v22 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v23 = v22;
      break;
    default:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t initializeWithCopy for FlowTraceEvent(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 2u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 3u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_1C9BEC838();
    case 5u:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_1C9BEC838();
    case 6u:
    case 7u:
    case 0xBu:
    case 0xCu:
      long long v20 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v20;
      (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1, a2);
      break;
    case 8u:
      long long v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      uint64_t v5 = *(void *)(a2 + 64);
      *(void *)(a1 + 64) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
      break;
    case 9u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E8B8);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_1C9BEAB08();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      uint64_t v12 = (int *)type metadata accessor for Input(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = (void *)(v9 + v13);
      uint64_t v15 = (void *)(v10 + v13);
      uint64_t v16 = type metadata accessor for Parse(0);
      uint64_t v122 = v7;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v17 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
          goto LABEL_36;
        case 1u:
          uint64_t v23 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v14, v15, v23);
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)((char *)v14 + *(int *)(v24 + 48)) = *(void *)((char *)v15 + *(int *)(v24 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v25 = v15[1];
          *uint64_t v14 = *v15;
          v14[1] = v25;
          _OWORD v14[2] = v15[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_36;
        case 3u:
          *uint64_t v14 = *v15;
          swift_unknownObjectRetain();
          goto LABEL_36;
        case 4u:
          uint64_t v26 = sub_1C9BEAC48();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v14, v15, v26);
          goto LABEL_36;
        case 5u:
          uint64_t v27 = (void *)*v15;
          *uint64_t v14 = *v15;
          id v28 = v27;
          goto LABEL_36;
        case 6u:
          uint64_t v29 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v14, v15, v29);
          uint64_t v119 = (int *)type metadata accessor for USOParse();
          uint64_t v30 = v119[5];
          __dst = (char *)v14 + v30;
          uint64_t v31 = (char *)v15 + v30;
          uint64_t v32 = sub_1C9BEAE48();
          uint64_t v112 = v31;
          uint64_t v33 = (uint64_t)v31;
          uint64_t v34 = v32;
          if (__swift_getEnumTagSinglePayload(v33, 1, v32))
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v112, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(__dst, v112, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v34);
          }
          uint64_t v54 = v119[6];
          uint64_t v55 = (void *)((char *)v14 + v54);
          uint64_t v56 = (void *)((char *)v15 + v54);
          uint64_t v57 = v56[1];
          *uint64_t v55 = *v56;
          v55[1] = v57;
          uint64_t v58 = v119[7];
          uint64_t v59 = (char *)v14 + v58;
          long long v60 = (char *)v15 + v58;
          v59[4] = v60[4];
          *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
          swift_bridgeObjectRetain();
          goto LABEL_36;
        case 7u:
          uint64_t v36 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v14, v15, v36);
          uint64_t v120 = (int *)type metadata accessor for USOParse();
          uint64_t v37 = v120[5];
          __dsta = (char *)v14 + v37;
          uint64_t v38 = (char *)v15 + v37;
          uint64_t v39 = sub_1C9BEAE48();
          uint64_t v113 = v38;
          uint64_t v40 = (uint64_t)v38;
          uint64_t v41 = v39;
          if (__swift_getEnumTagSinglePayload(v40, 1, v39))
          {
            uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, v113, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(*(void *)(v41 - 8) + 16))(__dsta, v113, v41);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v41);
          }
          uint64_t v61 = v120[6];
          uint64_t v62 = (void *)((char *)v14 + v61);
          uint64_t v63 = (void *)((char *)v15 + v61);
          __dstc = (void *)v63[1];
          *uint64_t v62 = *v63;
          v62[1] = __dstc;
          uint64_t v64 = v120[7];
          uint64_t v65 = (char *)v14 + v64;
          uint64_t v66 = (char *)v15 + v64;
          v65[4] = v66[4];
          *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
          uint64_t v67 = (int *)type metadata accessor for LinkParse();
          uint64_t v68 = v67[5];
          uint64_t v69 = (void *)((char *)v14 + v68);
          uint64_t v70 = (void *)((char *)v15 + v68);
          uint64_t v71 = v70[1];
          *uint64_t v69 = *v70;
          v69[1] = v71;
          uint64_t v72 = v67[6];
          uint64_t v73 = (void *)((char *)v14 + v72);
          uint64_t v74 = (void *)((char *)v15 + v72);
          uint64_t v75 = v74[1];
          *uint64_t v73 = *v74;
          v73[1] = v75;
          uint64_t v76 = v67[7];
          uint64_t v77 = (void *)((char *)v14 + v76);
          uint64_t v78 = (void *)((char *)v15 + v76);
          uint64_t v79 = v78[1];
          *uint64_t v77 = *v78;
          v77[1] = v79;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_36;
        case 8u:
          uint64_t v111 = v12;
          uint64_t v43 = sub_1C9BEC928();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v14, v15, v43);
          uint64_t v44 = type metadata accessor for NLRouterParse();
          uint64_t v45 = *(int *)(v44 + 20);
          uint64_t v46 = (void *)((char *)v14 + v45);
          uint64_t v47 = (void *)((char *)v15 + v45);
          uint64_t v48 = v47[1];
          *uint64_t v46 = *v47;
          v46[1] = v48;
          uint64_t v49 = *(int *)(v44 + 24);
          uint64_t v114 = v44;
          __dstb = (char *)v14 + v49;
          uint64_t v121 = (char *)v15 + v49;
          uint64_t v50 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          uint64_t v110 = v50;
          if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v50))
          {
            uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v121, *(void *)(*(void *)(v51 - 8) + 64));
            uint64_t v12 = v111;
            uint64_t v52 = v114;
          }
          else
          {
            uint64_t v80 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(__dstb, v121, v80);
            uint64_t v81 = *(int *)(v50 + 20);
            long long v109 = &__dstb[v81];
            uint64_t v82 = &v121[v81];
            uint64_t v83 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
            {
              uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v109, v82, *(void *)(*(void *)(v84 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v109, v82, v83);
              __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v83);
            }
            uint64_t v12 = v111;
            uint64_t v85 = *(int *)(v110 + 24);
            uint64_t v86 = &__dstb[v85];
            uint64_t v87 = &v121[v85];
            uint64_t v88 = *((void *)v87 + 1);
            *(void *)uint64_t v86 = *(void *)v87;
            *((void *)v86 + 1) = v88;
            uint64_t v89 = *(int *)(v110 + 28);
            uint64_t v90 = &__dstb[v89];
            uint64_t v91 = &v121[v89];
            v90[4] = v91[4];
            *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v110);
            uint64_t v52 = v114;
          }
          uint64_t v92 = *(int *)(v52 + 28);
          uint64_t v93 = *(void **)((char *)v15 + v92);
          *(void *)((char *)v14 + v92) = v93;
          id v94 = v93;
          goto LABEL_36;
        case 9u:
          uint64_t v53 = sub_1C9BEC8F8();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v14, v15, v53);
LABEL_36:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
          break;
      }
      *(void *)(v9 + v12[6]) = *(void *)(v10 + v12[6]);
      uint64_t v95 = v12[7];
      uint64_t v96 = v9 + v95;
      uint64_t v97 = v10 + v95;
      uint64_t v98 = *(void *)(v10 + v95 + 24);
      swift_bridgeObjectRetain();
      if (v98)
      {
        uint64_t v99 = *(void *)(v97 + 32);
        *(void *)(v96 + 24) = v98;
        *(void *)(v96 + 32) = v99;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v98 - 8))(v96, v97, v98);
      }
      else
      {
        long long v100 = *(_OWORD *)(v97 + 16);
        *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
        *(_OWORD *)(v96 + 16) = v100;
        *(void *)(v96 + 32) = *(void *)(v97 + 32);
      }
      *(unsigned char *)(v9 + v12[8]) = *(unsigned char *)(v10 + v12[8]);
      uint64_t v101 = *(int *)(v122 + 64);
      uint64_t v102 = a1 + v101;
      uint64_t v103 = (_OWORD *)(a2 + v101);
      int v104 = *(unsigned __int8 *)(a2 + v101 + 40);
      if (v104 == 1)
      {
        long long v106 = *(_OWORD *)((char *)v103 + 24);
        *(_OWORD *)(v102 + 24) = v106;
        (**(void (***)(uint64_t))(v106 - 8))(v102);
        *(unsigned char *)(v102 + 40) = 1;
      }
      else if (v104)
      {
        long long v107 = v103[1];
        *(_OWORD *)uint64_t v102 = *v103;
        *(_OWORD *)(v102 + 16) = v107;
        *(_OWORD *)(v102 + 25) = *(_OWORD *)((char *)v103 + 25);
      }
      else
      {
        long long v105 = *(_OWORD *)((char *)v103 + 24);
        *(_OWORD *)(v102 + 24) = v105;
        (**(void (***)(uint64_t))(v105 - 8))(v102);
        *(unsigned char *)(v102 + 40) = 0;
      }
      break;
    case 0xAu:
      long long v18 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v18;
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1, a2);
      long long v19 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 64) = v19;
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 40, a2 + 40);
      break;
    case 0xDu:
      long long v21 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v22 = v21;
      break;
    default:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FlowTraceEvent(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C986CD80(a1, (uint64_t (*)(void))type metadata accessor for FlowTraceEvent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        sub_1C9BEC838();
      case 2u:
        *(void *)a1 = *(void *)a2;
        sub_1C9BEC838();
      case 3u:
        *(void *)a1 = *(void *)a2;
        sub_1C9BEC838();
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        sub_1C9BEC838();
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        sub_1C9BEC838();
      case 6u:
      case 7u:
      case 0xBu:
      case 0xCu:
        uint64_t v20 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v20;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v20 - 8))(a1, a2);
        break;
      case 8u:
        uint64_t v4 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v4;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
        uint64_t v5 = *(void *)(a2 + 64);
        *(void *)(a1 + 64) = v5;
        (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
        break;
      case 9u:
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E8B8);
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = a1 + v8;
        uint64_t v10 = a2 + v8;
        uint64_t v11 = sub_1C9BEAB08();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        uint64_t v12 = (int *)type metadata accessor for Input(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = (void *)(v9 + v13);
        uint64_t v15 = (void *)(v10 + v13);
        uint64_t v16 = type metadata accessor for Parse(0);
        uint64_t v118 = v7;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
            goto LABEL_37;
          case 1u:
            uint64_t v23 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v14, v15, v23);
            uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)((char *)v14 + *(int *)(v24 + 48)) = *(void *)((char *)v15 + *(int *)(v24 + 48));
            sub_1C9BEC838();
          case 2u:
            *uint64_t v14 = *v15;
            v14[1] = v15[1];
            _OWORD v14[2] = v15[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_37;
          case 3u:
            *uint64_t v14 = *v15;
            swift_unknownObjectRetain();
            goto LABEL_37;
          case 4u:
            uint64_t v25 = sub_1C9BEAC48();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v14, v15, v25);
            goto LABEL_37;
          case 5u:
            uint64_t v26 = (void *)*v15;
            *uint64_t v14 = *v15;
            id v27 = v26;
            goto LABEL_37;
          case 6u:
            uint64_t v28 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v14, v15, v28);
            uint64_t v115 = (int *)type metadata accessor for USOParse();
            uint64_t v29 = v115[5];
            __dst = (char *)v14 + v29;
            uint64_t v30 = (char *)v15 + v29;
            uint64_t v31 = sub_1C9BEAE48();
            long long v109 = v30;
            uint64_t v32 = (uint64_t)v30;
            uint64_t v33 = v31;
            if (__swift_getEnumTagSinglePayload(v32, 1, v31))
            {
              uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, v109, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(void *)(v33 - 8) + 16))(__dst, v109, v33);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v33);
            }
            uint64_t v52 = v115[6];
            uint64_t v53 = (void *)((char *)v14 + v52);
            uint64_t v54 = (void *)((char *)v15 + v52);
            *uint64_t v53 = *v54;
            v53[1] = v54[1];
            uint64_t v55 = v115[7];
            uint64_t v56 = (char *)v14 + v55;
            uint64_t v57 = (char *)v15 + v55;
            int v58 = *(_DWORD *)v57;
            v56[4] = v57[4];
            *(_DWORD *)uint64_t v56 = v58;
            swift_bridgeObjectRetain();
            goto LABEL_37;
          case 7u:
            uint64_t v35 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v14, v15, v35);
            uint64_t v116 = (int *)type metadata accessor for USOParse();
            uint64_t v36 = v116[5];
            __dsta = (char *)v14 + v36;
            uint64_t v37 = (char *)v15 + v36;
            uint64_t v38 = sub_1C9BEAE48();
            uint64_t v110 = v37;
            uint64_t v39 = (uint64_t)v37;
            uint64_t v40 = v38;
            if (__swift_getEnumTagSinglePayload(v39, 1, v38))
            {
              uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, v110, *(void *)(*(void *)(v41 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(__dsta, v110, v40);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v40);
            }
            uint64_t v59 = v116[6];
            long long v60 = (void *)((char *)v14 + v59);
            uint64_t v61 = (void *)((char *)v15 + v59);
            *long long v60 = *v61;
            v60[1] = v61[1];
            uint64_t v62 = v116[7];
            uint64_t v63 = (char *)v14 + v62;
            uint64_t v64 = (char *)v15 + v62;
            int v65 = *(_DWORD *)v64;
            v63[4] = v64[4];
            *(_DWORD *)uint64_t v63 = v65;
            uint64_t v66 = (int *)type metadata accessor for LinkParse();
            uint64_t v67 = v66[5];
            uint64_t v68 = (void *)((char *)v14 + v67);
            uint64_t v69 = (void *)((char *)v15 + v67);
            *uint64_t v68 = *v69;
            v68[1] = v69[1];
            uint64_t v70 = v66[6];
            uint64_t v71 = (void *)((char *)v14 + v70);
            uint64_t v72 = (void *)((char *)v15 + v70);
            *uint64_t v71 = *v72;
            v71[1] = v72[1];
            uint64_t v73 = v66[7];
            uint64_t v74 = (void *)((char *)v14 + v73);
            uint64_t v75 = (void *)((char *)v15 + v73);
            *uint64_t v74 = *v75;
            v74[1] = v75[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_37;
          case 8u:
            long long v108 = v12;
            uint64_t v42 = sub_1C9BEC928();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v14, v15, v42);
            uint64_t v43 = type metadata accessor for NLRouterParse();
            uint64_t v44 = *(int *)(v43 + 20);
            uint64_t v45 = (void *)((char *)v14 + v44);
            uint64_t v46 = (void *)((char *)v15 + v44);
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            uint64_t v47 = *(int *)(v43 + 24);
            uint64_t v111 = v43;
            __dstb = (char *)v14 + v47;
            uint64_t v117 = (char *)v15 + v47;
            uint64_t v48 = type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            uint64_t v107 = v48;
            if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v48))
            {
              uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstb, v117, *(void *)(*(void *)(v49 - 8) + 64));
              uint64_t v12 = v108;
              uint64_t v50 = v111;
            }
            else
            {
              uint64_t v76 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(__dstb, v117, v76);
              uint64_t v77 = *(int *)(v48 + 20);
              long long v106 = &__dstb[v77];
              uint64_t v78 = &v117[v77];
              uint64_t v79 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
              {
                uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v106, v78, *(void *)(*(void *)(v80 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v106, v78, v79);
                __swift_storeEnumTagSinglePayload((uint64_t)v106, 0, 1, v79);
              }
              uint64_t v12 = v108;
              uint64_t v81 = *(int *)(v107 + 24);
              uint64_t v82 = &__dstb[v81];
              uint64_t v83 = &v117[v81];
              *(void *)uint64_t v82 = *(void *)v83;
              *((void *)v82 + 1) = *((void *)v83 + 1);
              uint64_t v84 = *(int *)(v107 + 28);
              uint64_t v85 = &__dstb[v84];
              uint64_t v86 = &v117[v84];
              int v87 = *(_DWORD *)v86;
              v85[4] = v86[4];
              *(_DWORD *)uint64_t v85 = v87;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v107);
              uint64_t v50 = v111;
            }
            uint64_t v88 = *(int *)(v50 + 28);
            uint64_t v89 = *(void **)((char *)v15 + v88);
            *(void *)((char *)v14 + v88) = v89;
            id v90 = v89;
            goto LABEL_37;
          case 9u:
            uint64_t v51 = sub_1C9BEC8F8();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v14, v15, v51);
LABEL_37:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
            break;
        }
        *(void *)(v9 + v12[6]) = *(void *)(v10 + v12[6]);
        uint64_t v91 = v12[7];
        uint64_t v92 = v9 + v91;
        uint64_t v93 = (long long *)(v10 + v91);
        uint64_t v94 = *(void *)(v10 + v91 + 24);
        swift_bridgeObjectRetain();
        if (v94)
        {
          *(void *)(v92 + 24) = v94;
          *(void *)(v92 + 32) = *((void *)v93 + 4);
          (**(void (***)(uint64_t, long long *, uint64_t))(v94 - 8))(v92, v93, v94);
        }
        else
        {
          long long v95 = *v93;
          long long v96 = v93[1];
          *(void *)(v92 + 32) = *((void *)v93 + 4);
          *(_OWORD *)uint64_t v92 = v95;
          *(_OWORD *)(v92 + 16) = v96;
        }
        *(unsigned char *)(v9 + v12[8]) = *(unsigned char *)(v10 + v12[8]);
        uint64_t v97 = *(int *)(v118 + 64);
        uint64_t v98 = a1 + v97;
        uint64_t v99 = (long long *)(a2 + v97);
        int v100 = *(unsigned __int8 *)(a2 + v97 + 40);
        if (v100 == 1)
        {
          uint64_t v102 = *((void *)v99 + 3);
          *(void *)(v98 + 24) = v102;
          *(void *)(v98 + 32) = *((void *)v99 + 4);
          (**(void (***)(uint64_t))(v102 - 8))(v98);
          *(unsigned char *)(v98 + 40) = 1;
        }
        else if (v100)
        {
          long long v103 = *v99;
          long long v104 = v99[1];
          *(_OWORD *)(v98 + 25) = *(long long *)((char *)v99 + 25);
          *(_OWORD *)uint64_t v98 = v103;
          *(_OWORD *)(v98 + 16) = v104;
        }
        else
        {
          uint64_t v101 = *((void *)v99 + 3);
          *(void *)(v98 + 24) = v101;
          *(void *)(v98 + 32) = *((void *)v99 + 4);
          (**(void (***)(uint64_t))(v101 - 8))(v98);
          *(unsigned char *)(v98 + 40) = 0;
        }
        break;
      case 0xAu:
        uint64_t v18 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v18 - 8))(a1, a2);
        uint64_t v19 = *(void *)(a2 + 64);
        *(void *)(a1 + 64) = v19;
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 40, a2 + 40);
        break;
      case 0xDu:
        long long v21 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v22 = v21;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        sub_1C9BEC838();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for FlowTraceEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      long long v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E8B8);
      uint64_t v19 = *(int *)(v18 + 48);
      uint64_t v20 = (char *)a1 + v19;
      long long v21 = (char *)a2 + v19;
      uint64_t v22 = sub_1C9BEAB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      uint64_t v23 = (int *)type metadata accessor for Input(0);
      uint64_t v24 = v23[5];
      uint64_t v25 = &v20[v24];
      uint64_t v26 = &v21[v24];
      uint64_t v27 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v28 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
          goto LABEL_69;
        case 1u:
          uint64_t v68 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v25, v26, v68);
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v25[*(int *)(v69 + 48)] = *(void *)&v26[*(int *)(v69 + 48)];
          goto LABEL_69;
        case 4u:
          uint64_t v70 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v25, v26, v70);
          goto LABEL_69;
        case 6u:
          uint64_t v231 = (void *)v18;
          uint64_t v71 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v25, v26, v71);
          uint64_t v72 = type metadata accessor for USOParse();
          uint64_t v73 = *(int *)(v72 + 20);
          uint64_t v217 = v72;
          __dstd = &v25[v73];
          uint64_t v74 = &v26[v73];
          uint64_t v75 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
          {
            uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dstd, v74, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(__dstd, v74, v75);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v75);
          }
          uint64_t v18 = (uint64_t)v231;
          *(_OWORD *)&v25[*(int *)(v217 + 24)] = *(_OWORD *)&v26[*(int *)(v217 + 24)];
          uint64_t v126 = *(int *)(v217 + 28);
          uint64_t v127 = &v25[v126];
          uint64_t v128 = &v26[v126];
          v127[4] = v128[4];
          *(_DWORD *)uint64_t v127 = *(_DWORD *)v128;
          goto LABEL_69;
        case 7u:
          uint64_t v232 = (void *)v18;
          uint64_t v77 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v25, v26, v77);
          uint64_t v78 = type metadata accessor for USOParse();
          uint64_t v79 = *(int *)(v78 + 20);
          uint64_t v218 = v78;
          __dste = &v25[v79];
          uint64_t v80 = &v26[v79];
          uint64_t v81 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81))
          {
            uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dste, v80, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(__dste, v80, v81);
            __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v81);
          }
          uint64_t v18 = (uint64_t)v232;
          *(_OWORD *)&v25[*(int *)(v218 + 24)] = *(_OWORD *)&v26[*(int *)(v218 + 24)];
          uint64_t v129 = *(int *)(v218 + 28);
          uint64_t v130 = &v25[v129];
          uint64_t v131 = &v26[v129];
          v130[4] = v131[4];
          *(_DWORD *)uint64_t v130 = *(_DWORD *)v131;
          uint64_t v132 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v25[v132[5]] = *(_OWORD *)&v26[v132[5]];
          *(_OWORD *)&v25[v132[6]] = *(_OWORD *)&v26[v132[6]];
          *(_OWORD *)&v25[v132[7]] = *(_OWORD *)&v26[v132[7]];
          goto LABEL_69;
        case 8u:
          uint64_t v83 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v25, v26, v83);
          uint64_t v84 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v25[*(int *)(v84 + 20)] = *(_OWORD *)&v26[*(int *)(v84 + 20)];
          uint64_t v212 = v84;
          uint64_t v85 = *(int *)(v84 + 24);
          __dstf = &v25[v85];
          uint64_t v86 = &v26[v85];
          uint64_t v87 = type metadata accessor for USOParse();
          size_t v219 = v86;
          if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
          {
            uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstf, v86, *(void *)(*(void *)(v88 - 8) + 64));
            uint64_t v89 = v212;
          }
          else
          {
            uint64_t v234 = (void *)v18;
            uint64_t v133 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(__dstf, v86, v133);
            uint64_t v207 = v87;
            uint64_t v134 = *(int *)(v87 + 20);
            uint64_t v135 = &__dstf[v134];
            uint64_t v136 = &v219[v134];
            uint64_t v137 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, v137))
            {
              uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
              __swift_storeEnumTagSinglePayload((uint64_t)v135, 0, 1, v137);
            }
            *(_OWORD *)&__dstf[*(int *)(v207 + 24)] = *(_OWORD *)&v219[*(int *)(v207 + 24)];
            uint64_t v159 = *(int *)(v207 + 28);
            unint64_t v160 = &__dstf[v159];
            unint64_t v161 = &v219[v159];
            v160[4] = v161[4];
            *(_DWORD *)unint64_t v160 = *(_DWORD *)v161;
            __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, v207);
            uint64_t v18 = (uint64_t)v234;
            uint64_t v89 = v212;
          }
          *(void *)&v25[*(int *)(v89 + 28)] = *(void *)&v26[*(int *)(v89 + 28)];
          goto LABEL_69;
        case 9u:
          uint64_t v90 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v25, v26, v90);
LABEL_69:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
          break;
      }
      *(void *)&v20[v23[6]] = *(void *)&v21[v23[6]];
      uint64_t v162 = v23[7];
      uint64_t v163 = &v20[v162];
      uint64_t v164 = &v21[v162];
      long long v165 = *((_OWORD *)v164 + 1);
      *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
      *((_OWORD *)v163 + 1) = v165;
      *((void *)v163 + 4) = *((void *)v164 + 4);
      v20[v23[8]] = v21[v23[8]];
      uint64_t v166 = *(int *)(v18 + 64);
      uint64_t v167 = (_OWORD *)((char *)a1 + v166);
      uint64_t v168 = (_OWORD *)((char *)a2 + v166);
      long long v169 = v168[1];
      *uint64_t v167 = *v168;
      v167[1] = v169;
      *(_OWORD *)((char *)v167 + 25) = *(_OWORD *)((char *)v168 + 25);
      goto LABEL_86;
    case 3:
      *(void *)a1 = *(void *)a2;
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77340) + 48);
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      char *v30 = *((unsigned char *)a2 + v29);
      *((void *)v30 + 1) = *(void *)((char *)a2 + v29 + 8);
      v30[16] = *((unsigned char *)a2 + v29 + 16);
      *((void *)v30 + 3) = *(void *)((char *)a2 + v29 + 24);
      v30[32] = *((unsigned char *)a2 + v29 + 32);
      uint64_t v32 = type metadata accessor for ExecuteResponse(0);
      uint64_t v33 = *(int *)(v32 + 36);
      uint64_t v34 = &v30[v33];
      uint64_t v35 = &v31[v33];
      uint64_t v36 = (int *)type metadata accessor for PluginAction();
      if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, (uint64_t)v36))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v213 = v32;
        *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
        uint64_t v38 = v36[5];
        uint64_t v39 = &v34[v38];
        uint64_t v40 = &v35[v38];
        uint64_t v210 = sub_1C9BEAB08();
        uint64_t v204 = *(void (**)(char *, char *))(*(void *)(v210 - 8) + 32);
        v204(v39, v40);
        uint64_t v205 = v39;
        unsigned int v208 = (int *)type metadata accessor for Input(0);
        uint64_t v41 = v208[5];
        uint64_t v228 = &v39[v41];
        uint64_t v42 = &v40[v41];
        uint64_t v43 = type metadata accessor for Parse(0);
        __dst = v42;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v44 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v228, v42, v44);
            goto LABEL_74;
          case 1u:
            uint64_t v91 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v228, v42, v91);
            uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v228[*(int *)(v92 + 48)] = *(void *)&v42[*(int *)(v92 + 48)];
            goto LABEL_74;
          case 4u:
            uint64_t v93 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v228, v42, v93);
            goto LABEL_74;
          case 6u:
            uint64_t v94 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v228, v42, v94);
            uint64_t v201 = (int *)type metadata accessor for USOParse();
            uint64_t v95 = v201[5];
            long long v96 = &v228[v95];
            uint64_t v97 = &v42[v95];
            uint64_t v98 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98))
            {
              uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v96, v97, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v96, v97, v98);
              __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
            }
            *(_OWORD *)&v228[v201[6]] = *(_OWORD *)&__dst[v201[6]];
            uint64_t v139 = v201[7];
            uint64_t v140 = &v228[v139];
            long long v141 = &__dst[v139];
            v140[4] = v141[4];
            *(_DWORD *)uint64_t v140 = *(_DWORD *)v141;
            goto LABEL_74;
          case 7u:
            uint64_t v100 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v228, v42, v100);
            uint64_t v202 = (int *)type metadata accessor for USOParse();
            uint64_t v101 = v202[5];
            uint64_t v102 = &v228[v101];
            long long v103 = &v42[v101];
            uint64_t v104 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v103, 1, v104))
            {
              uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
              __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v104);
            }
            *(_OWORD *)&v228[v202[6]] = *(_OWORD *)&__dst[v202[6]];
            uint64_t v142 = v202[7];
            uint64_t v143 = &v228[v142];
            size_t v144 = &__dst[v142];
            v143[4] = v144[4];
            *(_DWORD *)uint64_t v143 = *(_DWORD *)v144;
            uint64_t v145 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v228[v145[5]] = *(_OWORD *)&__dst[v145[5]];
            *(_OWORD *)&v228[v145[6]] = *(_OWORD *)&__dst[v145[6]];
            *(_OWORD *)&v228[v145[7]] = *(_OWORD *)&__dst[v145[7]];
            goto LABEL_74;
          case 8u:
            uint64_t v106 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v228, v42, v106);
            uint64_t v107 = type metadata accessor for NLRouterParse();
            *(_OWORD *)&v228[*(int *)(v107 + 20)] = *(_OWORD *)&v42[*(int *)(v107 + 20)];
            uint64_t v108 = *(int *)(v107 + 24);
            uint64_t v200 = v107;
            unsigned int v203 = &v228[v108];
            long long v109 = &v42[v108];
            uint64_t v110 = type metadata accessor for USOParse();
            if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
            {
              uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(v203, v109, *(void *)(*(void *)(v111 - 8) + 64));
            }
            else
            {
              uint64_t v146 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v146 - 8) + 32))(v203, v109, v146);
              unint64_t v198 = v109;
              uint64_t v199 = v110;
              uint64_t v147 = *(int *)(v110 + 20);
              int v148 = &v203[v147];
              int v149 = &v109[v147];
              uint64_t v150 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v149, 1, v150))
              {
                uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v148, v149, v150);
                __swift_storeEnumTagSinglePayload((uint64_t)v148, 0, 1, v150);
              }
              *(_OWORD *)&v203[*(int *)(v199 + 24)] = *(_OWORD *)&v198[*(int *)(v199 + 24)];
              uint64_t v170 = *(int *)(v199 + 28);
              uint64_t v171 = &v203[v170];
              uint64_t v172 = &v198[v170];
              v171[4] = v172[4];
              *(_DWORD *)uint64_t v171 = *(_DWORD *)v172;
              __swift_storeEnumTagSinglePayload((uint64_t)v203, 0, 1, v199);
            }
            *(void *)&v228[*(int *)(v200 + 28)] = *(void *)&__dst[*(int *)(v200 + 28)];
            goto LABEL_74;
          case 9u:
            uint64_t v112 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v228, v42, v112);
LABEL_74:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v228, v42, *(void *)(*(void *)(v43 - 8) + 64));
            break;
        }
        *(void *)&v205[v208[6]] = *(void *)&v40[v208[6]];
        uint64_t v173 = v208[7];
        unint64_t v174 = &v205[v173];
        long long v175 = &v40[v173];
        long long v176 = *((_OWORD *)v175 + 1);
        *(_OWORD *)unint64_t v174 = *(_OWORD *)v175;
        *((_OWORD *)v174 + 1) = v176;
        *((void *)v174 + 4) = *((void *)v175 + 4);
        v205[v208[8]] = v40[v208[8]];
        *(void *)&v34[v36[6]] = *(void *)&v35[v36[6]];
        *(void *)&v34[v36[7]] = *(void *)&v35[v36[7]];
        *(_OWORD *)&v34[v36[8]] = *(_OWORD *)&v35[v36[8]];
        uint64_t v177 = v36[9];
        unint64_t v178 = &v34[v177];
        size_t v179 = &v35[v177];
        uint64_t v180 = type metadata accessor for ActionParaphrase(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v179, 1, v180))
        {
          uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
          memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          *(_OWORD *)unint64_t v178 = *(_OWORD *)v179;
          uint64_t v182 = *(int *)(v180 + 20);
          uint64_t v235 = &v178[v182];
          unint64_t v183 = &v179[v182];
          __dstg = (int *)type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v183, 1, (uint64_t)__dstg))
          {
            uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
            memcpy(v235, v183, *(void *)(*(void *)(v184 - 8) + 64));
          }
          else
          {
            long long v185 = *((_OWORD *)v183 + 1);
            *(_OWORD *)uint64_t v235 = *(_OWORD *)v183;
            *((_OWORD *)v235 + 1) = v185;
            uint64_t v186 = __dstg[6];
            unint64_t v209 = &v235[v186];
            unint64_t v187 = &v183[v186];
            uint64_t v188 = sub_1C9BEB0C8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 32))(v209, v187, v188);
            __swift_storeEnumTagSinglePayload((uint64_t)v235, 0, 1, (uint64_t)__dstg);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v178, 0, 1, v180);
        }
        uint64_t v189 = v36[10];
        unint64_t v190 = &v34[v189];
        uint64_t v191 = &v35[v189];
        if (__swift_getEnumTagSinglePayload((uint64_t)&v35[v189], 1, v210))
        {
          uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
          memcpy(v190, v191, *(void *)(*(void *)(v192 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v204)(v190, v191, v210);
          __swift_storeEnumTagSinglePayload((uint64_t)v190, 0, 1, v210);
        }
        uint64_t v32 = v213;
        v34[v36[11]] = v35[v36[11]];
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, (uint64_t)v36);
      }
      uint64_t v193 = *(int *)(v32 + 40);
      size_t v194 = &v30[v193];
      unsigned int v195 = &v31[v193];
      long long v196 = *((_OWORD *)v195 + 1);
      *(_OWORD *)size_t v194 = *(_OWORD *)v195;
      *((_OWORD *)v194 + 1) = v196;
      goto LABEL_86;
    case 2:
      *(void *)a1 = *(void *)a2;
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77348);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C9BEAB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      uint64_t v11 = (int *)type metadata accessor for Input(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &v8[v12];
      uint64_t v14 = &v9[v12];
      uint64_t v15 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v16 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
          goto LABEL_64;
        case 1u:
          uint64_t v45 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v13, v14, v45);
          uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v13[*(int *)(v46 + 48)] = *(void *)&v14[*(int *)(v46 + 48)];
          goto LABEL_64;
        case 4u:
          uint64_t v47 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v13, v14, v47);
          goto LABEL_64;
        case 6u:
          unint64_t v229 = (void *)v6;
          uint64_t v48 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v13, v14, v48);
          uint64_t v49 = type metadata accessor for USOParse();
          uint64_t v50 = *(int *)(v49 + 20);
          uint64_t v214 = &v13[v50];
          __dsta = (int *)v49;
          uint64_t v51 = &v14[v50];
          uint64_t v52 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
          {
            uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v214, v51, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v214, v51, v52);
            __swift_storeEnumTagSinglePayload((uint64_t)v214, 0, 1, v52);
          }
          uint64_t v6 = (uint64_t)v229;
          *(_OWORD *)&v13[__dsta[6]] = *(_OWORD *)&v14[__dsta[6]];
          uint64_t v113 = __dsta[7];
          uint64_t v114 = &v13[v113];
          uint64_t v115 = &v14[v113];
          v114[4] = v115[4];
          *(_DWORD *)uint64_t v114 = *(_DWORD *)v115;
          goto LABEL_64;
        case 7u:
          uint64_t v230 = (void *)v6;
          uint64_t v54 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v13, v14, v54);
          uint64_t v55 = type metadata accessor for USOParse();
          uint64_t v56 = *(int *)(v55 + 20);
          size_t v215 = &v13[v56];
          __dstb = (int *)v55;
          uint64_t v57 = &v14[v56];
          uint64_t v58 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, v58))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v215, v57, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v215, v57, v58);
            __swift_storeEnumTagSinglePayload((uint64_t)v215, 0, 1, v58);
          }
          uint64_t v6 = (uint64_t)v230;
          *(_OWORD *)&v13[__dstb[6]] = *(_OWORD *)&v14[__dstb[6]];
          uint64_t v116 = __dstb[7];
          uint64_t v117 = &v13[v116];
          uint64_t v118 = &v14[v116];
          v117[4] = v118[4];
          *(_DWORD *)uint64_t v117 = *(_DWORD *)v118;
          uint64_t v119 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v13[v119[5]] = *(_OWORD *)&v14[v119[5]];
          *(_OWORD *)&v13[v119[6]] = *(_OWORD *)&v14[v119[6]];
          *(_OWORD *)&v13[v119[7]] = *(_OWORD *)&v14[v119[7]];
          goto LABEL_64;
        case 8u:
          uint64_t v60 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v13, v14, v60);
          uint64_t v61 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v13[*(int *)(v61 + 20)] = *(_OWORD *)&v14[*(int *)(v61 + 20)];
          uint64_t v211 = v61;
          uint64_t v62 = *(int *)(v61 + 24);
          __dstc = &v13[v62];
          uint64_t v63 = &v14[v62];
          uint64_t v64 = type metadata accessor for USOParse();
          uint64_t v216 = v63;
          if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
          {
            uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstc, v63, *(void *)(*(void *)(v65 - 8) + 64));
            uint64_t v66 = v211;
          }
          else
          {
            uint64_t v233 = (void *)v6;
            uint64_t v120 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(__dstc, v63, v120);
            uint64_t v206 = v64;
            uint64_t v121 = *(int *)(v64 + 20);
            uint64_t v122 = &__dstc[v121];
            uint64_t v123 = &v216[v121];
            uint64_t v124 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v124))
            {
              uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v122, v123, *(void *)(*(void *)(v125 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
              __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v124);
            }
            *(_OWORD *)&__dstc[*(int *)(v206 + 24)] = *(_OWORD *)&v216[*(int *)(v206 + 24)];
            uint64_t v152 = *(int *)(v206 + 28);
            uint64_t v153 = &__dstc[v152];
            uint64_t v154 = &v216[v152];
            v153[4] = v154[4];
            *(_DWORD *)uint64_t v153 = *(_DWORD *)v154;
            __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v206);
            uint64_t v6 = (uint64_t)v233;
            uint64_t v66 = v211;
          }
          *(void *)&v13[*(int *)(v66 + 28)] = *(void *)&v14[*(int *)(v66 + 28)];
          goto LABEL_64;
        case 9u:
          uint64_t v67 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v13, v14, v67);
LABEL_64:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
          break;
      }
      *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
      uint64_t v155 = v11[7];
      uint64_t v156 = &v8[v155];
      unint64_t v157 = &v9[v155];
      long long v158 = *((_OWORD *)v157 + 1);
      *(_OWORD *)uint64_t v156 = *(_OWORD *)v157;
      *((_OWORD *)v156 + 1) = v158;
      *((void *)v156 + 4) = *((void *)v157 + 4);
      v8[v11[8]] = v9[v11[8]];
      *((unsigned char *)a1 + *(int *)(v6 + 64)) = *((unsigned char *)a2 + *(int *)(v6 + 64));
LABEL_86:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FlowTraceEvent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C986CD80((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FlowTraceEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        long long v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        *((void *)a1 + 4) = *((void *)a2 + 4);
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E8B8);
        uint64_t v20 = *(int *)(v19 + 48);
        long long v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_1C9BEAB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        uint64_t v24 = (int *)type metadata accessor for Input(0);
        uint64_t v25 = v24[5];
        uint64_t v26 = &v21[v25];
        uint64_t v27 = &v22[v25];
        uint64_t v28 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v29 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v26, v27, v29);
            goto LABEL_70;
          case 1u:
            uint64_t v71 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v26, v27, v71);
            uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v26[*(int *)(v72 + 48)] = *(void *)&v27[*(int *)(v72 + 48)];
            goto LABEL_70;
          case 4u:
            uint64_t v73 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v26, v27, v73);
            goto LABEL_70;
          case 6u:
            uint64_t v245 = v19;
            uint64_t v74 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v26, v27, v74);
            uint64_t v75 = type metadata accessor for USOParse();
            uint64_t v76 = *(int *)(v75 + 20);
            uint64_t v231 = v75;
            __dstd = &v26[v76];
            uint64_t v77 = &v27[v76];
            uint64_t v78 = sub_1C9BEAE48();
            __srcd = v77;
            uint64_t v79 = (uint64_t)v77;
            uint64_t v80 = v78;
            if (__swift_getEnumTagSinglePayload(v79, 1, v78))
            {
              uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dstd, __srcd, *(void *)(*(void *)(v81 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(__dstd, __srcd, v80);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstd, 0, 1, v80);
            }
            uint64_t v19 = v245;
            *(_OWORD *)&v26[*(int *)(v231 + 24)] = *(_OWORD *)&v27[*(int *)(v231 + 24)];
            uint64_t v130 = *(int *)(v231 + 28);
            uint64_t v131 = &v26[v130];
            uint64_t v132 = &v27[v130];
            v131[4] = v132[4];
            *(_DWORD *)uint64_t v131 = *(_DWORD *)v132;
            goto LABEL_70;
          case 7u:
            uint64_t v246 = v19;
            uint64_t v82 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 32))(v26, v27, v82);
            uint64_t v83 = type metadata accessor for USOParse();
            uint64_t v84 = *(int *)(v83 + 20);
            uint64_t v232 = v83;
            __dste = &v26[v84];
            uint64_t v85 = &v27[v84];
            uint64_t v86 = sub_1C9BEAE48();
            __srce = v85;
            uint64_t v87 = (uint64_t)v85;
            uint64_t v88 = v86;
            if (__swift_getEnumTagSinglePayload(v87, 1, v86))
            {
              uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dste, __srce, *(void *)(*(void *)(v89 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(__dste, __srce, v88);
              __swift_storeEnumTagSinglePayload((uint64_t)__dste, 0, 1, v88);
            }
            uint64_t v19 = v246;
            *(_OWORD *)&v26[*(int *)(v232 + 24)] = *(_OWORD *)&v27[*(int *)(v232 + 24)];
            uint64_t v133 = *(int *)(v232 + 28);
            uint64_t v134 = &v26[v133];
            uint64_t v135 = &v27[v133];
            v134[4] = v135[4];
            *(_DWORD *)uint64_t v134 = *(_DWORD *)v135;
            uint64_t v136 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v26[v136[5]] = *(_OWORD *)&v27[v136[5]];
            *(_OWORD *)&v26[v136[6]] = *(_OWORD *)&v27[v136[6]];
            *(_OWORD *)&v26[v136[7]] = *(_OWORD *)&v27[v136[7]];
            goto LABEL_70;
          case 8u:
            uint64_t v90 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v26, v27, v90);
            uint64_t v91 = type metadata accessor for NLRouterParse();
            *(_OWORD *)&v26[*(int *)(v91 + 20)] = *(_OWORD *)&v27[*(int *)(v91 + 20)];
            __srcf = (int *)v91;
            uint64_t v92 = *(int *)(v91 + 24);
            __dstf = &v26[v92];
            uint64_t v233 = &v27[v92];
            uint64_t v217 = (int *)type metadata accessor for USOParse();
            if (__swift_getEnumTagSinglePayload((uint64_t)v233, 1, (uint64_t)v217))
            {
              uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstf, v233, *(void *)(*(void *)(v93 - 8) + 64));
              uint64_t v94 = __srcf;
            }
            else
            {
              uint64_t v248 = v19;
              uint64_t v137 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(__dstf, v233, v137);
              uint64_t v138 = v217[5];
              uint64_t v213 = &__dstf[v138];
              uint64_t v139 = &v233[v138];
              uint64_t v140 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v140))
              {
                uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v213, v139, *(void *)(*(void *)(v141 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v213, v139, v140);
                __swift_storeEnumTagSinglePayload((uint64_t)v213, 0, 1, v140);
              }
              *(_OWORD *)&__dstf[v217[6]] = *(_OWORD *)&v233[v217[6]];
              uint64_t v164 = v217[7];
              long long v165 = &__dstf[v164];
              uint64_t v166 = &v233[v164];
              v165[4] = v166[4];
              *(_DWORD *)long long v165 = *(_DWORD *)v166;
              __swift_storeEnumTagSinglePayload((uint64_t)__dstf, 0, 1, (uint64_t)v217);
              uint64_t v19 = v248;
              uint64_t v94 = __srcf;
            }
            *(void *)&v26[v94[7]] = *(void *)&v27[v94[7]];
            goto LABEL_70;
          case 9u:
            uint64_t v95 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v26, v27, v95);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
            break;
        }
        *(void *)&v21[v24[6]] = *(void *)&v22[v24[6]];
        uint64_t v167 = v24[7];
        uint64_t v168 = &v21[v167];
        long long v169 = &v22[v167];
        long long v170 = *((_OWORD *)v169 + 1);
        *(_OWORD *)uint64_t v168 = *(_OWORD *)v169;
        *((_OWORD *)v168 + 1) = v170;
        *((void *)v168 + 4) = *((void *)v169 + 4);
        v21[v24[8]] = v22[v24[8]];
        uint64_t v171 = *(int *)(v19 + 64);
        uint64_t v172 = (_OWORD *)((char *)a1 + v171);
        uint64_t v173 = (_OWORD *)((char *)a2 + v171);
        long long v174 = v173[1];
        *uint64_t v172 = *v173;
        v172[1] = v174;
        *(_OWORD *)((char *)v172 + 25) = *(_OWORD *)((char *)v173 + 25);
        goto LABEL_87;
      case 3:
        *(void *)a1 = *(void *)a2;
        uint64_t v30 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77340) + 48);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        *uint64_t v31 = *((unsigned char *)a2 + v30);
        *((void *)v31 + 1) = *(void *)((char *)a2 + v30 + 8);
        v31[16] = *((unsigned char *)a2 + v30 + 16);
        *((void *)v31 + 3) = *(void *)((char *)a2 + v30 + 24);
        v31[32] = *((unsigned char *)a2 + v30 + 32);
        uint64_t v33 = type metadata accessor for ExecuteResponse(0);
        uint64_t v34 = *(int *)(v33 + 36);
        uint64_t v35 = &v31[v34];
        uint64_t v36 = &v32[v34];
        uint64_t v37 = (int *)type metadata accessor for PluginAction();
        if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37))
        {
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BA8);
          memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v227 = v33;
          *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
          uint64_t v39 = v37[5];
          uint64_t v40 = &v35[v39];
          uint64_t v41 = &v36[v39];
          __src = (void *)sub_1C9BEAB08();
          uint64_t v214 = *(void (**)(char *, char *))(*(__src - 1) + 32);
          v214(v40, v41);
          size_t v215 = v40;
          uint64_t v218 = (int *)type metadata accessor for Input(0);
          uint64_t v42 = v218[5];
          unint64_t v242 = &v40[v42];
          uint64_t v43 = &v41[v42];
          uint64_t v44 = type metadata accessor for Parse(0);
          __dst = v43;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v45 = sub_1C9BEC028();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v242, v43, v45);
              goto LABEL_75;
            case 1u:
              uint64_t v96 = sub_1C9BEC028();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v242, v43, v96);
              uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
              *(void *)&v242[*(int *)(v97 + 48)] = *(void *)&v43[*(int *)(v97 + 48)];
              goto LABEL_75;
            case 4u:
              uint64_t v98 = sub_1C9BEAC48();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v242, v43, v98);
              goto LABEL_75;
            case 6u:
              uint64_t v99 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v242, v43, v99);
              uint64_t v100 = type metadata accessor for USOParse();
              uint64_t v101 = *(int *)(v100 + 20);
              uint64_t v206 = v100;
              unint64_t v209 = &v242[v101];
              uint64_t v102 = &v43[v101];
              uint64_t v103 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
              {
                uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v209, v102, *(void *)(*(void *)(v104 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v209, v102, v103);
                __swift_storeEnumTagSinglePayload((uint64_t)v209, 0, 1, v103);
              }
              *(_OWORD *)&v242[*(int *)(v206 + 24)] = *(_OWORD *)&__dst[*(int *)(v206 + 24)];
              uint64_t v142 = *(int *)(v206 + 28);
              uint64_t v143 = &v242[v142];
              size_t v144 = &__dst[v142];
              v143[4] = v144[4];
              *(_DWORD *)uint64_t v143 = *(_DWORD *)v144;
              goto LABEL_75;
            case 7u:
              uint64_t v105 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v242, v43, v105);
              uint64_t v106 = type metadata accessor for USOParse();
              uint64_t v107 = *(int *)(v106 + 20);
              uint64_t v207 = v106;
              uint64_t v210 = &v242[v107];
              uint64_t v108 = &v43[v107];
              uint64_t v109 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v109))
              {
                uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v210, v108, *(void *)(*(void *)(v110 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v210, v108, v109);
                __swift_storeEnumTagSinglePayload((uint64_t)v210, 0, 1, v109);
              }
              *(_OWORD *)&v242[*(int *)(v207 + 24)] = *(_OWORD *)&__dst[*(int *)(v207 + 24)];
              uint64_t v145 = *(int *)(v207 + 28);
              uint64_t v146 = &v242[v145];
              uint64_t v147 = &__dst[v145];
              v146[4] = v147[4];
              *(_DWORD *)uint64_t v146 = *(_DWORD *)v147;
              int v148 = (int *)type metadata accessor for LinkParse();
              *(_OWORD *)&v242[v148[5]] = *(_OWORD *)&__dst[v148[5]];
              *(_OWORD *)&v242[v148[6]] = *(_OWORD *)&__dst[v148[6]];
              *(_OWORD *)&v242[v148[7]] = *(_OWORD *)&__dst[v148[7]];
              goto LABEL_75;
            case 8u:
              uint64_t v111 = sub_1C9BEC928();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v242, v43, v111);
              uint64_t v112 = type metadata accessor for NLRouterParse();
              *(_OWORD *)&v242[*(int *)(v112 + 20)] = *(_OWORD *)&v43[*(int *)(v112 + 20)];
              uint64_t v113 = *(int *)(v112 + 24);
              uint64_t v208 = v112;
              uint64_t v211 = &v242[v113];
              uint64_t v114 = &v43[v113];
              uint64_t v115 = type metadata accessor for USOParse();
              if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v115))
              {
                uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
                memcpy(v211, v114, *(void *)(*(void *)(v116 - 8) + 64));
              }
              else
              {
                uint64_t v149 = sub_1C9BEAF18();
                uint64_t v205 = v114;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v211, v114, v149);
                uint64_t v150 = *(int *)(v115 + 20);
                uint64_t v203 = v115;
                uint64_t v204 = &v211[v150];
                uint64_t v151 = &v114[v150];
                uint64_t v152 = sub_1C9BEAE48();
                uint64_t v153 = v151;
                uint64_t v154 = (uint64_t)v151;
                uint64_t v155 = v152;
                if (__swift_getEnumTagSinglePayload(v154, 1, v152))
                {
                  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                  memcpy(v204, v153, *(void *)(*(void *)(v156 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v204, v153, v155);
                  __swift_storeEnumTagSinglePayload((uint64_t)v204, 0, 1, v155);
                }
                *(_OWORD *)&v211[*(int *)(v203 + 24)] = *(_OWORD *)&v205[*(int *)(v203 + 24)];
                uint64_t v175 = *(int *)(v203 + 28);
                long long v176 = &v211[v175];
                uint64_t v177 = &v205[v175];
                v176[4] = v177[4];
                *(_DWORD *)long long v176 = *(_DWORD *)v177;
                __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v203);
              }
              *(void *)&v242[*(int *)(v208 + 28)] = *(void *)&__dst[*(int *)(v208 + 28)];
              goto LABEL_75;
            case 9u:
              uint64_t v117 = sub_1C9BEC8F8();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v242, v43, v117);
LABEL_75:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v242, v43, *(void *)(*(void *)(v44 - 8) + 64));
              break;
          }
          *(void *)&v215[v218[6]] = *(void *)&v41[v218[6]];
          uint64_t v178 = v218[7];
          size_t v179 = &v215[v178];
          uint64_t v180 = &v41[v178];
          long long v181 = *((_OWORD *)v180 + 1);
          *(_OWORD *)size_t v179 = *(_OWORD *)v180;
          *((_OWORD *)v179 + 1) = v181;
          *((void *)v179 + 4) = *((void *)v180 + 4);
          v215[v218[8]] = v41[v218[8]];
          *(void *)&v35[v37[6]] = *(void *)&v36[v37[6]];
          *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
          *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
          uint64_t v182 = v37[9];
          unint64_t v183 = &v35[v182];
          uint64_t v184 = &v36[v182];
          uint64_t v185 = type metadata accessor for ActionParaphrase(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v184, 1, v185))
          {
            uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
            memcpy(v183, v184, *(void *)(*(void *)(v186 - 8) + 64));
          }
          else
          {
            *(_OWORD *)unint64_t v183 = *(_OWORD *)v184;
            uint64_t v187 = *(int *)(v185 + 20);
            size_t v249 = &v183[v187];
            uint64_t v188 = &v184[v187];
            __dstg = (int *)type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v188, 1, (uint64_t)__dstg))
            {
              uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
              memcpy(v249, v188, *(void *)(*(void *)(v189 - 8) + 64));
            }
            else
            {
              long long v190 = *((_OWORD *)v188 + 1);
              *(_OWORD *)size_t v249 = *(_OWORD *)v188;
              *((_OWORD *)v249 + 1) = v190;
              uint64_t v191 = __dstg[6];
              size_t v219 = &v249[v191];
              uint64_t v192 = &v188[v191];
              uint64_t v193 = sub_1C9BEB0C8();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v219, v192, v193);
              __swift_storeEnumTagSinglePayload((uint64_t)v249, 0, 1, (uint64_t)__dstg);
            }
            __swift_storeEnumTagSinglePayload((uint64_t)v183, 0, 1, v185);
          }
          uint64_t v194 = v37[10];
          unsigned int v195 = &v35[v194];
          long long v196 = &v36[v194];
          if (__swift_getEnumTagSinglePayload((uint64_t)&v36[v194], 1, (uint64_t)__src))
          {
            uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
            memcpy(v195, v196, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, void *))v214)(v195, v196, __src);
            __swift_storeEnumTagSinglePayload((uint64_t)v195, 0, 1, (uint64_t)__src);
          }
          uint64_t v33 = v227;
          v35[v37[11]] = v36[v37[11]];
          __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, (uint64_t)v37);
        }
        uint64_t v198 = *(int *)(v33 + 40);
        uint64_t v199 = &v31[v198];
        uint64_t v200 = &v32[v198];
        long long v201 = *((_OWORD *)v200 + 1);
        *(_OWORD *)uint64_t v199 = *(_OWORD *)v200;
        *((_OWORD *)v199 + 1) = v201;
        goto LABEL_87;
      case 2:
        *(void *)a1 = *(void *)a2;
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77348);
        uint64_t v8 = *(int *)(v7 + 48);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C9BEAB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        uint64_t v12 = (int *)type metadata accessor for Input(0);
        uint64_t v13 = v12[5];
        uint64_t v14 = &v9[v13];
        uint64_t v15 = &v10[v13];
        uint64_t v16 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
            goto LABEL_65;
          case 1u:
            uint64_t v46 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v14, v15, v46);
            uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v14[*(int *)(v47 + 48)] = *(void *)&v15[*(int *)(v47 + 48)];
            goto LABEL_65;
          case 4u:
            uint64_t v48 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v14, v15, v48);
            goto LABEL_65;
          case 6u:
            uint64_t v243 = v7;
            uint64_t v49 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v14, v15, v49);
            uint64_t v50 = type metadata accessor for USOParse();
            uint64_t v51 = *(int *)(v50 + 20);
            uint64_t v228 = v50;
            __dsta = &v14[v51];
            uint64_t v52 = &v15[v51];
            uint64_t v53 = sub_1C9BEAE48();
            __srca = v52;
            uint64_t v54 = (uint64_t)v52;
            uint64_t v55 = v53;
            if (__swift_getEnumTagSinglePayload(v54, 1, v53))
            {
              uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, __srca, *(void *)(*(void *)(v56 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(__dsta, __srca, v55);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v55);
            }
            uint64_t v7 = v243;
            *(_OWORD *)&v14[*(int *)(v228 + 24)] = *(_OWORD *)&v15[*(int *)(v228 + 24)];
            uint64_t v118 = *(int *)(v228 + 28);
            uint64_t v119 = &v14[v118];
            uint64_t v120 = &v15[v118];
            v119[4] = v120[4];
            *(_DWORD *)uint64_t v119 = *(_DWORD *)v120;
            goto LABEL_65;
          case 7u:
            uint64_t v244 = v7;
            uint64_t v57 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v14, v15, v57);
            uint64_t v58 = type metadata accessor for USOParse();
            uint64_t v59 = *(int *)(v58 + 20);
            uint64_t v229 = v58;
            __dstb = &v14[v59];
            uint64_t v60 = &v15[v59];
            uint64_t v61 = sub_1C9BEAE48();
            __srcb = v60;
            uint64_t v62 = (uint64_t)v60;
            uint64_t v63 = v61;
            if (__swift_getEnumTagSinglePayload(v62, 1, v61))
            {
              uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dstb, __srcb, *(void *)(*(void *)(v64 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(__dstb, __srcb, v63);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v63);
            }
            uint64_t v7 = v244;
            *(_OWORD *)&v14[*(int *)(v229 + 24)] = *(_OWORD *)&v15[*(int *)(v229 + 24)];
            uint64_t v121 = *(int *)(v229 + 28);
            uint64_t v122 = &v14[v121];
            uint64_t v123 = &v15[v121];
            v122[4] = v123[4];
            *(_DWORD *)uint64_t v122 = *(_DWORD *)v123;
            uint64_t v124 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v14[v124[5]] = *(_OWORD *)&v15[v124[5]];
            *(_OWORD *)&v14[v124[6]] = *(_OWORD *)&v15[v124[6]];
            *(_OWORD *)&v14[v124[7]] = *(_OWORD *)&v15[v124[7]];
            goto LABEL_65;
          case 8u:
            uint64_t v65 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v14, v15, v65);
            uint64_t v66 = type metadata accessor for NLRouterParse();
            *(_OWORD *)&v14[*(int *)(v66 + 20)] = *(_OWORD *)&v15[*(int *)(v66 + 20)];
            __srcc = (int *)v66;
            uint64_t v67 = *(int *)(v66 + 24);
            __dstc = &v14[v67];
            uint64_t v230 = &v15[v67];
            uint64_t v216 = (int *)type metadata accessor for USOParse();
            if (__swift_getEnumTagSinglePayload((uint64_t)v230, 1, (uint64_t)v216))
            {
              uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstc, v230, *(void *)(*(void *)(v68 - 8) + 64));
              uint64_t v69 = __srcc;
            }
            else
            {
              uint64_t v247 = v7;
              uint64_t v125 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(__dstc, v230, v125);
              uint64_t v126 = v216[5];
              uint64_t v212 = &__dstc[v126];
              uint64_t v127 = &v230[v126];
              uint64_t v128 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v128))
              {
                uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v212, v127, *(void *)(*(void *)(v129 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v212, v127, v128);
                __swift_storeEnumTagSinglePayload((uint64_t)v212, 0, 1, v128);
              }
              *(_OWORD *)&__dstc[v216[6]] = *(_OWORD *)&v230[v216[6]];
              uint64_t v157 = v216[7];
              long long v158 = &__dstc[v157];
              uint64_t v159 = &v230[v157];
              v158[4] = v159[4];
              *(_DWORD *)long long v158 = *(_DWORD *)v159;
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, (uint64_t)v216);
              uint64_t v7 = v247;
              uint64_t v69 = __srcc;
            }
            *(void *)&v14[v69[7]] = *(void *)&v15[v69[7]];
            goto LABEL_65;
          case 9u:
            uint64_t v70 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v14, v15, v70);
LABEL_65:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
            break;
        }
        *(void *)&v9[v12[6]] = *(void *)&v10[v12[6]];
        uint64_t v160 = v12[7];
        unint64_t v161 = &v9[v160];
        uint64_t v162 = &v10[v160];
        long long v163 = *((_OWORD *)v162 + 1);
        *(_OWORD *)unint64_t v161 = *(_OWORD *)v162;
        *((_OWORD *)v161 + 1) = v163;
        *((void *)v161 + 4) = *((void *)v162 + 4);
        v9[v12[8]] = v10[v12[8]];
        *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
LABEL_87:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C986CB6C()
{
  uint64_t v6 = MEMORY[0x1E4FBADB0] + 64;
  uint64_t v7 = MEMORY[0x1E4FBADB0] + 64;
  uint64_t result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    uint64_t v8 = &v5;
    uint64_t result = type metadata accessor for ExecuteResponse(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v9 = &v4;
      uint64_t v10 = &unk_1C9BFAE10;
      uint64_t v11 = &unk_1C9BFAE10;
      uint64_t v12 = &unk_1C9BFAE10;
      uint64_t v13 = &unk_1C9BFAE10;
      uint64_t v14 = &unk_1C9BFAE28;
      swift_getTupleTypeLayout3();
      uint64_t v15 = &v3;
      uint64_t v16 = &unk_1C9BFAE58;
      uint64_t v17 = &unk_1C9BFAE10;
      long long v18 = &unk_1C9BFAE10;
      uint64_t v19 = MEMORY[0x1E4FBAD78] + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t dispatch thunk of FlowTracing.onActivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FlowTracing.onEvent(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FlowTracing.onDeactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for FlowTrace()
{
  return &type metadata for FlowTrace;
}

uint64_t sub_1C986CD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnippetManager.SnippetRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C986CD80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C986CDE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnippetManager.SnippetRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C986CE48()
{
}

uint64_t sub_1C986CF18@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_3_1();
  uint64_t v4 = v1 + *(void *)(v3 + 128);
  swift_beginAccess();
  type metadata accessor for ForEach.State();
  OUTLINED_FUNCTION_8_4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_1C986CFBC(uint64_t a1)
{
  OUTLINED_FUNCTION_3_1();
  uint64_t v4 = v1 + *(void *)(v3 + 128);
  swift_beginAccess();
  type metadata accessor for ForEach.State();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

void sub_1C986D068()
{
}

void ForEach.__allocating_init(_:body:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_4_44(v7, v12);
  OUTLINED_FUNCTION_82_2();
  v8();
  uint64_t v9 = swift_allocObject();
  OUTLINED_FUNCTION_14_35(v9);
  v10[5] = v11;
  v10[6] = a2;
  v10[7] = a3;
  ForEach.__allocating_init(_:body:stride:)();
}

uint64_t sub_1C986D1B4()
{
  swift_release();

  return swift_deallocObject();
}

void ForEach.__allocating_init(_:body:stride:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_82_2();
  v6();
  uint64_t v7 = swift_allocObject();
  OUTLINED_FUNCTION_14_35(v7);
  void v8[5] = v9;
  v8[6] = v3;
  void v8[7] = v1;
  ForEach.__allocating_init(_:body:stride:)();
}

{
  swift_allocObject();
  ForEach.init(_:body:stride:)();
}

uint64_t sub_1C986D300(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = a3(a2);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA58E9D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  *(void *)(inited + 32) = v3;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C965F20C();
  swift_setDeallocating();
  sub_1C95FE440();
  return v6;
}

void ForEach.__allocating_init(_:body:)()
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_4_44(v2, v4);
  OUTLINED_FUNCTION_82_2();
  v3();
  ForEach.__allocating_init(_:body:stride:)();
}

uint64_t sub_1C986D4E0(uint64_t a1, uint64_t a2)
{
  return sub_1C986D300(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 48));
}

void ForEach.init(_:body:stride:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for ForEach.State();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_82_2();
  v8();
  uint64_t v9 = (void *)(v1 + *(void *)(*(void *)v1 + 120));
  *uint64_t v9 = v5;
  v9[1] = v3;
  sub_1C9BEC838();
}

uint64_t type metadata accessor for ForEach.State()
{
  return swift_getGenericMetadata();
}

void sub_1C986D774()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v55 = v2;
  uint64_t v3 = (void *)*v0;
  uint64_t v4 = v3[11];
  uint64_t v5 = v3[10];
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v50 = v7;
  uint64_t v51 = v6;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v46 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v16, v17);
  uint64_t v52 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  long long v21 = (char *)&v46 - v20;
  uint64_t v22 = v3[12];
  uint64_t v23 = v3[13];
  uint64_t v58 = v5;
  uint64_t v59 = v4;
  uint64_t v53 = v23;
  uint64_t v54 = v22;
  uint64_t v60 = v22;
  uint64_t v61 = v23;
  type metadata accessor for ForEach.State();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v46 - v26;
  sub_1C986CF18((uint64_t)&v46 - v26);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v49 = v13;
    v48(v21, v27, AssociatedTypeWitness);
    uint64_t v31 = (uint64_t (**)(char *, char *))((char *)v1 + *(void *)(*v1 + 120));
    uint64_t v32 = *v31;
    uint64_t v46 = v31[1];
    uint64_t v47 = v32;
    uint64_t v33 = (void (*)(uint64_t *, void))sub_1C9BEDC08();
    uint64_t v34 = v50;
    uint64_t v35 = v51;
    OUTLINED_FUNCTION_82_2();
    v36();
    v33(&v58, 0);
    uint64_t v37 = v47(v21, v11);
    (*(void (**)(char *, char *))(v34 + 8))(v11, v35);
    type metadata accessor for LoopBodyFlow();
    swift_allocObject();
    sub_1C98CFA8C(v37);
    uint64_t v38 = v49;
    uint64_t v39 = v52;
    uint64_t v40 = AssociatedTypeWitness;
    OUTLINED_FUNCTION_82_2();
    v41();
    uint64_t v42 = *(unsigned __int8 *)(v38 + 80);
    uint64_t v51 = v21;
    uint64_t v43 = (v42 + 56) & ~v42;
    uint64_t v44 = (char *)swift_allocObject();
    *((void *)v44 + 2) = v5;
    *((void *)v44 + 3) = v4;
    uint64_t v45 = v53;
    *((void *)v44 + 4) = v54;
    *((void *)v44 + 5) = v45;
    *((void *)v44 + 6) = v1;
    v48(&v44[v43], v39, v40);
    sub_1C9BEC838();
  }
  char v57 = *v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(qword_1EA58E8C0);
  uint64_t v29 = v55;
  v55[3] = v28;
  v29[4] = (uint64_t)&protocol witness table for Conclude<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v29);
  uint64_t v58 = v5;
  uint64_t v59 = v4;
  uint64_t v60 = v54;
  uint64_t v61 = v53;
  type metadata accessor for ForEach();
  ActingFlow.conclude(with:)((uint64_t)&v57, (uint64_t)boxed_opaque_existential_0);
  OUTLINED_FUNCTION_10();
}

uint64_t type metadata accessor for ForEach()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C986DC10(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  v18[1] = a3;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v6 = *(void *)(*a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v18[2] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness, v8);
  MEMORY[0x1F4188790](v9, v10);
  v20[0] = v6;
  v20[1] = v5;
  long long v21 = *(_OWORD *)(v4 + 96);
  uint64_t v11 = type metadata accessor for ForEach.State();
  uint64_t v13 = MEMORY[0x1F4188790](v11, v12);
  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (char *)v18 - v15;
  sub_1C95FF454(a1, (uint64_t)v20);
  if (!swift_dynamicCast() || v19 != 1)
  {
    v18[0] = v11;
    sub_1C986D068();
  }
  *uint64_t v16 = 1;
  swift_storeEnumTagMultiPayload();
  return sub_1C986CFBC((uint64_t)v16);
}

void sub_1C986DF64()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_18_28();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (void (**)(uint64_t))(v4 + 8);
  OUTLINED_FUNCTION_50();
  if ((v1 & 0x8000000000000000) == 0)
  {
    sub_1C9BEDBB8();
    uint64_t v6 = sub_1C9BEDBA8();
    uint64_t v7 = OUTLINED_FUNCTION_6_40();
    v8(v7);
    if (v6 <= v1)
    {
      OUTLINED_FUNCTION_50();
      sub_1C9BEDBB8();
    }
    else
    {
      sub_1C9BEDB88();
    }
LABEL_8:
    OUTLINED_FUNCTION_10();
    return;
  }
  sub_1C9BEDB68();
  uint64_t v9 = sub_1C9BEDBA8();
  uint64_t v10 = *v5;
  uint64_t v11 = OUTLINED_FUNCTION_6_40();
  v10(v11);
  BOOL v12 = __OFADD__(v9, v1);
  uint64_t v13 = v9 + v1;
  if (!v12)
  {
    sub_1C9BEDB68();
    if (v13 > 0)
    {
      sub_1C9BEDB88();
      uint64_t v14 = OUTLINED_FUNCTION_6_40();
      v10(v14);
    }
    goto LABEL_8;
  }
  __break(1u);
}

unint64_t sub_1C986E0EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v20 - v9;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xD000000000000017;
    unint64_t v21 = 0x80000001C9C1E8D0;
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
    return v20;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v14, AssociatedTypeWitness);
    unint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    sub_1C9BED6B8();
    OUTLINED_FUNCTION_50();
    sub_1C9BEE5E8();
    sub_1C9BED6B8();
    unint64_t v16 = v20;
    uint64_t v17 = OUTLINED_FUNCTION_50();
    v18(v17);
  }
  return v16;
}

uint64_t sub_1C986E308(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7239026 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736292 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C986E3D8(char a1)
{
  if (a1) {
    return 1701736292;
  }
  else {
    return 7239026;
  }
}

uint64_t sub_1C986E400(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C9C1E8F0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1C986E488()
{
  return 0xD000000000000010;
}

uint64_t sub_1C986E4A4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C986E524()
{
  return 0x7865646E69;
}

uint64_t sub_1C986E538(void *a1, void *a2)
{
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  uint64_t v7 = a2[5];
  OUTLINED_FUNCTION_16_27();
  uint64_t done = type metadata accessor for ForEach.State.DoneCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_17_26();
  uint64_t v51 = done;
  uint64_t v49 = v9;
  sub_1C9BEE578();
  OUTLINED_FUNCTION_0();
  uint64_t v52 = v11;
  uint64_t v53 = v10;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_19_13();
  uint64_t v50 = v14;
  OUTLINED_FUNCTION_16_27();
  uint64_t v15 = type metadata accessor for ForEach.State.RunCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_17_26();
  uint64_t v45 = v15;
  v43[1] = v16;
  sub_1C9BEE578();
  OUTLINED_FUNCTION_0();
  uint64_t v47 = v18;
  uint64_t v48 = v17;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v19, v20);
  OUTLINED_FUNCTION_19_13();
  v43[2] = v21;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v44 = v22;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v23, v24);
  OUTLINED_FUNCTION_19_13();
  v43[0] = v25;
  OUTLINED_FUNCTION_0();
  uint64_t v27 = v26;
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v31 = (char *)v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v4;
  uint64_t v59 = v5;
  uint64_t v60 = v6;
  uint64_t v61 = v7;
  uint64_t v54 = v7;
  type metadata accessor for ForEach.State.CodingKeys();
  swift_getWitnessTable();
  sub_1C9BEE578();
  OUTLINED_FUNCTION_0();
  uint64_t v55 = v33;
  uint64_t v56 = v32;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v34, v35);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9BEE7A8();
  (*(void (**)(char *, uint64_t, void *))(v27 + 16))(v31, v57, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    LOBYTE(v58) = 1;
    sub_1C9BEE4F8();
    sub_1C9BEE538();
    OUTLINED_FUNCTION_37();
    v36();
  }
  else
  {
    uint64_t v37 = v44;
    uint64_t v38 = v43[0];
    uint64_t v39 = AssociatedTypeWitness;
    (*(void (**)(void, char *, uint64_t))(v44 + 32))(v43[0], v31, AssociatedTypeWitness);
    LOBYTE(v58) = 0;
    sub_1C9BEE4F8();
    sub_1C9BEE568();
    OUTLINED_FUNCTION_37();
    v40();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v38, v39);
  }
  OUTLINED_FUNCTION_37();
  return v41();
}

uint64_t sub_1C986E950@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v69 = a6;
  uint64_t done = type metadata accessor for ForEach.State.DoneCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_17_26();
  uint64_t v80 = v12;
  uint64_t v81 = done;
  uint64_t v72 = sub_1C9BEE4E8();
  OUTLINED_FUNCTION_0();
  uint64_t v76 = v13;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_19_13();
  uint64_t v82 = v16;
  OUTLINED_FUNCTION_12_33();
  uint64_t v17 = type metadata accessor for ForEach.State.RunCodingKeys();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_17_26();
  uint64_t v77 = v18;
  uint64_t v78 = v17;
  uint64_t v71 = sub_1C9BEE4E8();
  OUTLINED_FUNCTION_0();
  uint64_t v75 = v19;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v20, v21);
  OUTLINED_FUNCTION_19_13();
  uint64_t v79 = v22;
  OUTLINED_FUNCTION_12_33();
  type metadata accessor for ForEach.State.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  OUTLINED_FUNCTION_18_28();
  uint64_t v85 = sub_1C9BEE4E8();
  OUTLINED_FUNCTION_0();
  uint64_t v83 = v23;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v27 = (char *)&v65 - v26;
  uint64_t v86 = a2;
  *(void *)&long long v90 = a2;
  *((void *)&v90 + 1) = a3;
  uint64_t v73 = a3;
  uint64_t v74 = a4;
  *(void *)&long long v91 = a4;
  *((void *)&v91 + 1) = a5;
  uint64_t v84 = type metadata accessor for ForEach.State();
  OUTLINED_FUNCTION_0();
  uint64_t v70 = v28;
  uint64_t v31 = MEMORY[0x1F4188790](v29, v30);
  uint64_t v33 = (char *)&v65 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x1F4188790](v31, v34);
  uint64_t v37 = (char *)&v65 - v36;
  MEMORY[0x1F4188790](v35, v38);
  uint64_t v40 = (char *)&v65 - v39;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v41 = v92;
  sub_1C9BEE798();
  if (v41) {
    goto LABEL_14;
  }
  uint64_t v66 = v33;
  uint64_t v68 = v37;
  uint64_t v67 = v40;
  uint64_t v42 = v85;
  uint64_t v43 = v84;
  uint64_t WitnessTable = 0;
  uint64_t v92 = a1;
  uint64_t v44 = v27;
  *(void *)&long long v88 = sub_1C9BEE4D8();
  OUTLINED_FUNCTION_18_28();
  sub_1C9BED9A8();
  swift_getWitnessTable();
  *(void *)&long long v90 = sub_1C9BEE018();
  *((void *)&v90 + 1) = v45;
  *(void *)&long long v91 = v46;
  *((void *)&v91 + 1) = v47;
  OUTLINED_FUNCTION_18_28();
  sub_1C9BEE008();
  swift_getWitnessTable();
  sub_1C9BEDBD8();
  char v48 = v88;
  if (v88 == 2 || (long long v65 = v90, v88 = v90, v89 = v91, (sub_1C9BEDBF8() & 1) == 0))
  {
    uint64_t v51 = sub_1C9BEE228();
    swift_allocError();
    uint64_t v53 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D788);
    *uint64_t v53 = v43;
    sub_1C9BEE458();
    sub_1C9BEE208();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v53, *MEMORY[0x1E4FBBA70], v51);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v44, v42);
    goto LABEL_13;
  }
  if (v48)
  {
    LOBYTE(v88) = 1;
    uint64_t v54 = WitnessTable;
    sub_1C9BEE448();
    if (v54)
    {
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v27, v42);
      goto LABEL_13;
    }
    uint64_t v49 = sub_1C9BEE498();
    OUTLINED_FUNCTION_37();
    v63();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v27, v42);
    uint64_t v64 = v66;
    *uint64_t v66 = v49 & 1;
    uint64_t v60 = v43;
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = OUTLINED_FUNCTION_5_44();
    uint64_t v62 = v64;
LABEL_16:
    ((void (*)(uint64_t, unsigned char *, uint64_t))v49)(v61, v62, v43);
    ((void (*)(uint64_t, uint64_t, uint64_t))v49)(v69, v42, v60);
    uint64_t v57 = (uint64_t)v92;
    return __swift_destroy_boxed_opaque_existential_1(v57);
  }
  LOBYTE(v88) = 0;
  uint64_t v49 = (uint64_t)v27;
  uint64_t v50 = WitnessTable;
  sub_1C9BEE448();
  if (!v50)
  {
    swift_getAssociatedTypeWitness();
    uint64_t v55 = v68;
    sub_1C9BEE4C8();
    uint64_t v56 = v83;
    OUTLINED_FUNCTION_37();
    v59();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v27, v42);
    uint64_t v60 = v43;
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = OUTLINED_FUNCTION_5_44();
    uint64_t v62 = v55;
    goto LABEL_16;
  }
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v27, v42);
LABEL_13:
  a1 = v92;
LABEL_14:
  uint64_t v57 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v57);
}

BOOL sub_1C986F074(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C970DB68(*a1, *a2);
}

uint64_t sub_1C986F08C()
{
  return sub_1C970DBA0();
}

uint64_t sub_1C986F0A0()
{
  return sub_1C970DB78();
}

uint64_t sub_1C986F0B4()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C986F100()
{
  return sub_1C986E3D8(*v0);
}

uint64_t sub_1C986F114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C986E308(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C986F148()
{
  return sub_1C97672B0();
}

uint64_t sub_1C986F174@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C97B60EC();
  *a1 = result;
  return result;
}

uint64_t sub_1C986F1A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C986F1FC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C986F250(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1C986F3C4(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void))sub_1C977D554);
}

unint64_t sub_1C986F268()
{
  return sub_1C986E488();
}

uint64_t sub_1C986F278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1C986F43C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1C986E400, a4);
}

uint64_t sub_1C986F290(void *a1, uint64_t a2)
{
  return sub_1C986F494(a1, a2, (uint64_t (*)(void, void, void, void))sub_1C9870E30);
}

uint64_t sub_1C986F2A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1C986F4DC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void))j__OUTLINED_FUNCTION_4_7, a3);
}

uint64_t sub_1C986F2C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C986F314(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C986F368()
{
  return OUTLINED_FUNCTION_4_7();
}

uint64_t sub_1C986F378()
{
  return sub_1C977D50C();
}

uint64_t sub_1C986F39C()
{
  return sub_1C977D4E4();
}

uint64_t sub_1C986F3AC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1C986F3C4(a1, a2, a3, (void (*)(unsigned char *, void, void, void, void))sub_1C977D4E4);
}

uint64_t sub_1C986F3C4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void, void))
{
  sub_1C9BEE738();
  a4(v7, a2[2], a2[3], a2[4], a2[5]);
  return sub_1C9BEE768();
}

uint64_t sub_1C986F414()
{
  return sub_1C986E524();
}

uint64_t sub_1C986F424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1C986F43C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1C986E4A4, a4);
}

uint64_t sub_1C986F43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result & 1;
  return result;
}

uint64_t sub_1C986F47C(void *a1, uint64_t a2)
{
  return sub_1C986F494(a1, a2, (uint64_t (*)(void, void, void, void))sub_1C97672B0);
}

uint64_t sub_1C986F494(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void))
{
  return a3(a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1C986F4C4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_1C986F4DC(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void))OUTLINED_FUNCTION_4_7, a3);
}

uint64_t sub_1C986F4DC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void, void, void)@<X3>, unsigned char *a4@<X8>)
{
  uint64_t result = a3(a1, a2[2], a2[3], a2[4], a2[5]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1C986F51C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C986F570(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C986F5C4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C986E950(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_1C986F5E8(void *a1, void *a2)
{
  return sub_1C986E538(a1, a2);
}

uint64_t ForEach.deinit()
{
  OUTLINED_FUNCTION_37();
  v1();
  swift_release();
  type metadata accessor for ForEach.State();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v6(v2, v3, v4, v5);
  swift_release();
  return v0;
}

uint64_t ForEach.__deallocating_deinit()
{
  ForEach.deinit();

  return swift_deallocClassInstance();
}

void sub_1C986F7B8()
{
}

uint64_t sub_1C986F7DC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1C986F898(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(uint64_t **)(v1 + 48);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1C986DC10(a1, v4, v5);
}

uint64_t sub_1C986F920()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ForEach.State();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for ForEach(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ForEach);
}

uint64_t dispatch thunk of ForEach.__allocating_init(_:body:stride:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of ForEach.action.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t sub_1C986FA68()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C986FB0C(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v5 + 64) <= 1uLL) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (*(_DWORD *)(v5 + 80) > 7u
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || (unint64_t)(v6 + 1) > 0x18)
  {
    *a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  unsigned int v9 = a2[v6];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_22;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_22;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_22;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_22:
        int v13 = (v12 | (v10 << (8 * v6))) + 2;
        unsigned int v9 = v12 + 2;
        if (v6 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
    *(unsigned char *)a1 = *a2;
    *((unsigned char *)a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *((unsigned char *)a1 + v6) = 0;
  }
  return a1;
}

uint64_t sub_1C986FCA8(unsigned __int8 *a1)
{
  uint64_t result = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(void *)(*(void *)(result - 8) + 64);
  if (v3 <= 1) {
    unint64_t v3 = 1;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 2;
        unsigned int v4 = v7 + 2;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 != 1)
  {
    unsigned int v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(*(void *)(result - 8) + 8);
    return v9(a1, result);
  }
  return result;
}

unsigned __int8 *sub_1C986FDF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 1uLL) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    char v11 = 1;
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
    char v11 = 0;
  }
  a1[v5] = v11;
  return a1;
}

unsigned __int8 *sub_1C986FF58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 1uLL) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 2;
    if (v7 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 2;
          unsigned int v7 = v10 + 2;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    if (v7 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_27;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_27:
          int v16 = (v15 | (v13 << (8 * v6))) + 2;
          unsigned int v12 = v15 + 2;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 1)
    {
      *a1 = *a2;
      char v17 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      char v17 = 0;
    }
    a1[v6] = v17;
  }
  return a1;
}

unsigned __int8 *sub_1C987017C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 1uLL) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    char v11 = 1;
  }
  else
  {
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
    char v11 = 0;
  }
  a1[v5] = v11;
  return a1;
}

unsigned __int8 *sub_1C98702DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    if (*(void *)(v5 + 64) <= 1uLL) {
      uint64_t v6 = 1;
    }
    else {
      uint64_t v6 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    }
    unsigned int v7 = a1[v6];
    unsigned int v8 = v7 - 2;
    if (v7 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v9 = v6;
      }
      else {
        uint64_t v9 = 4;
      }
      switch(v9)
      {
        case 1:
          int v10 = *a1;
          goto LABEL_14;
        case 2:
          int v10 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v10 = *(_DWORD *)a1;
LABEL_14:
          int v11 = (v10 | (v8 << (8 * v6))) + 2;
          unsigned int v7 = v10 + 2;
          if (v6 < 4) {
            unsigned int v7 = v11;
          }
          break;
        default:
          break;
      }
    }
    if (v7 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    unsigned int v12 = a2[v6];
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v14 = v6;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *a2;
          goto LABEL_27;
        case 2:
          int v15 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v15 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v15 = *(_DWORD *)a2;
LABEL_27:
          int v16 = (v15 | (v13 << (8 * v6))) + 2;
          unsigned int v12 = v15 + 2;
          if (v6 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 == 1)
    {
      *a1 = *a2;
      char v17 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      char v17 = 0;
    }
    a1[v6] = v17;
  }
  return a1;
}

uint64_t sub_1C9870500(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  uint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    unsigned int v10 = ((a2 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v10 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v10 < 2)
    {
LABEL_23:
      unsigned int v12 = *((unsigned __int8 *)a1 + v5);
      if (v12 >= 2) {
        return (v12 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_23;
  }
LABEL_15:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 255;
}

void sub_1C9870668(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 1) {
    unint64_t v6 = 1;
  }
  size_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if (a3 < 0xFF)
  {
    int v9 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v12 = ((a3 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v10 = a2 - 255;
    if (v7 < 4)
    {
      int v11 = (v10 >> v8) + 1;
      if (v6 != -1)
      {
        int v13 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v7] = v11;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v11;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C9870848);
      case 4:
        *(_DWORD *)&a1[v7] = v11;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v9)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v6] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C9870870(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 1) {
    unint64_t v2 = 1;
  }
  uint64_t result = a1[v2];
  if (result >= 2)
  {
    if (v2 <= 3) {
      uint64_t v4 = v2;
    }
    else {
      uint64_t v4 = 4;
    }
    switch(v4)
    {
      case 1:
        int v5 = *a1;
        goto LABEL_12;
      case 2:
        int v5 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v5 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v5 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v6 = (v5 | ((result - 2) << (8 * v2))) + 2;
        unsigned int v7 = v5 + 2;
        if (v2 >= 4) {
          uint64_t result = v7;
        }
        else {
          uint64_t result = v6;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C9870958(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= 1) {
    size_t v5 = 1;
  }
  else {
    size_t v5 = v4;
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      unsigned int v7 = v6 >> (8 * v5);
      int v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if (v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if (v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for ForEach.State.DoneCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ForEach.State.RunCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ForEach.State.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C9870A90(char *a1, void (*a2)(unsigned char *))
{
  char v2 = *a1;
  size_t v5 = &type metadata for FlowLoopControl;
  v4[0] = v2;
  a2(v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1C9870AE0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9870B18(char *a1)
{
  return sub_1C9870A90(a1, *(void (**)(unsigned char *))(v1 + 16));
}

unint64_t sub_1C9870B20()
{
  unint64_t result = qword_1EA58E9D0;
  if (!qword_1EA58E9D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA58E9C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58E9D0);
  }
  return result;
}

unsigned char *sub_1C9870B74(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9870C40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C9870C6C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9870D08);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C9870D30()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870D4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870D68()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870D84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870DA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870DBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870DD8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870DF4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9870E10()
{
  return swift_getWitnessTable();
}

char *OUTLINED_FUNCTION_4_44@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_5_44()
{
  return *(void *)(v0 - 328);
}

uint64_t OUTLINED_FUNCTION_6_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_34()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_33()
{
  *(void *)(v4 - 128) = v2;
  *(void *)(v4 - 120) = v3;
  *(void *)(v4 - 112) = v1;
  *(void *)(v4 - 104) = v0;
  return 255;
}

__n128 OUTLINED_FUNCTION_14_35(uint64_t a1)
{
  *(void *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_27()
{
  *(void *)(v4 - 120) = v0;
  *(void *)(v4 - 112) = v2;
  *(void *)(v4 - 104) = v1;
  *(void *)(v4 - 96) = v3;
  return 255;
}

uint64_t OUTLINED_FUNCTION_17_26()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_28()
{
  return 0;
}

void *sub_1C9870F10(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  *((_OWORD *)v3 + 1) = xmmword_1C9BF0830;
  uint64_t v3[5] = 0;
  swift_unknownObjectWeakInit();
  void v3[6] = 0;
  uint64_t v7 = v3[2];
  unint64_t v8 = v3[3];
  v3[2] = v5;
  v3[3] = v6;
  sub_1C96EEA84(v7, v8);
  uint64_t v3[5] = a3;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1C9870F98(uint64_t a1)
{
  v2[19] = a1;
  v2[20] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C987103C, 0, 0);
}

uint64_t sub_1C987103C()
{
  uint64_t v66 = v0;
  uint64_t v1 = *(void **)(v0 + 160);
  uint64_t v2 = (void *)v1[6];
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 152);
    id v4 = v2;

LABEL_9:
    static ExecuteResponse.complete()(v3);
    goto LABEL_10;
  }
  unint64_t v5 = v1[3];
  if ((~v5 & 0xF000000000000007) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C9BECF88();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
    uint64_t v7 = sub_1C9BECF78();
    os_log_type_t v8 = sub_1C9BEDC78();
    if (os_log_type_enabled(v7, v8))
    {
      int v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v9 = 0;
      _os_log_impl(&dword_1C95F9000, v7, v8, "No more action groups to run. Action handling frame is complete", v9, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v3 = *(void *)(v0 + 152);

    goto LABEL_9;
  }
  uint64_t v12 = v1[2];
  if (v5 >> 62)
  {
    if (v5 >> 62 == 1 || (v12 & 0x8000000000000000) == 0)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v14 = *(void *)(v0 + 168);
      uint64_t v13 = *(void *)(v0 + 176);
      uint64_t v15 = sub_1C9BECF88();
      uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A520);
      uint64_t v17 = *(void *)(v15 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v13, v16, v15);
      __swift_storeEnumTagSinglePayload(v13, 0, 1, v15);
      sub_1C96C26E8(v13, v14);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15) == 1)
      {
        sub_1C95FE7C0(*(void *)(v0 + 168), &qword_1EBC7A230);
      }
      else
      {
        uint64_t v22 = sub_1C9BECF78();
        os_log_type_t v23 = sub_1C9BEDC88();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = OUTLINED_FUNCTION_35_0();
          *(void *)&long long v65 = swift_slowAlloc();
          *(_DWORD *)uint64_t v24 = 136315650;
          uint64_t v25 = sub_1C9BEE1B8();
          *(void *)(v0 + 88) = sub_1C95FF228(v25, v26, (uint64_t *)&v65);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          *(_WORD *)(v24 + 12) = 2048;
          *(void *)(v0 + 96) = 115;
          sub_1C9BEDF68();
          *(_WORD *)(v24 + 22) = 2080;
          *(void *)(v0 + 104) = sub_1C95FF228(0xD000000000000054, 0x80000001C9C1E940, (uint64_t *)&v65);
          sub_1C9BEDF68();
          _os_log_impl(&dword_1C95F9000, v22, v23, "FatalError at %s:%lu - %s", (uint8_t *)v24, 0x20u);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }

        (*(void (**)(void, uint64_t))(v17 + 8))(*(void *)(v0 + 168), v15);
      }
      if (qword_1EBC78750 != -1) {
        swift_once();
      }
      *(_OWORD *)(v0 + 16) = 0u;
      uint64_t v27 = v0 + 16;
      *(_OWORD *)(v27 + 56) = 0u;
      *(_OWORD *)(v27 + 40) = 0u;
      *(_OWORD *)(v27 + 16) = 0u;
      *(void *)(v27 + 32) = 0;
      sub_1C9BEC838();
    }
    if (MEMORY[0x1CB78C530](v1 + 4))
    {
      uint64_t v28 = *(void *)(*(void *)(v0 + 160) + 40);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 24);
      OUTLINED_FUNCTION_5_45();
      v30(v12 & 0x7FFFFFFFFFFFFFFFLL, ObjectType, v28);
      swift_unknownObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_5_45();
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C9BECF88();
    __swift_project_value_buffer(v55, (uint64_t)qword_1EBC7A520);
    sub_1C96EEA14(v12, v5);
    OUTLINED_FUNCTION_5_45();
    uint64_t v56 = sub_1C9BECF78();
    os_log_type_t v57 = sub_1C9BEDC78();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)OUTLINED_FUNCTION_2_44();
      *(void *)&long long v65 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v58 = 136315138;
      uint64_t v59 = v12 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v60 = sub_1C96F0014();
      *(void *)(v0 + 112) = sub_1C95FF228(v60, v61, (uint64_t *)&v65);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_0_36();
      _os_log_impl(&dword_1C95F9000, v56, v57, "Starting deferred frame type transition: %s", v58, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      OUTLINED_FUNCTION_0_36();

      uint64_t v59 = v12 & 0x7FFFFFFFFFFFFFFFLL;
    }
    uint64_t v62 = *(void *)(v0 + 160);
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = v59;
    *(void *)(v63 + 24) = v62;
    sub_1C96EEA00(v12, v5);
    sub_1C9BEC838();
  }
  uint64_t v18 = v1 + 4;
  if (MEMORY[0x1CB78C530](v1 + 4))
  {
    uint64_t v19 = v1[5];
    uint64_t v20 = swift_getObjectType();
    uint64_t v21 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 8);
    sub_1C96EEA14(v12, v5);
    v21(v12, v5, v20, v19);
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_5_45();
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_1C9BECF88();
  __swift_project_value_buffer(v31, (uint64_t)qword_1EBC7A520);
  uint64_t v32 = OUTLINED_FUNCTION_3_48();
  os_log_type_t v33 = sub_1C9BEDC78();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_2_44();
    *(void *)&long long v65 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v34 = 136315138;
    swift_getObjectType();
    *(void *)(v0 + 136) = v12;
    uint64_t v35 = sub_1C9BEE628();
    *(void *)(v0 + 144) = sub_1C95FF228(v35, v36, (uint64_t *)&v65);
    uint64_t v18 = v1 + 4;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_36();
    _os_log_impl(&dword_1C95F9000, v32, v33, "Transitioning to action group: %s", v34, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_0_36();
  }

  uint64_t v37 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, unint64_t))(v5 + 16))(v37, v5))
  {
    uint64_t v39 = v38;
    uint64_t v40 = *(void *)(v0 + 160);
    uint64_t v41 = MEMORY[0x1CB78C530](v18);
    uint64_t v42 = v1[5];
    type metadata accessor for ActionHandlingFlow();
    swift_allocObject();
    uint64_t v43 = swift_unknownObjectRetain();
    sub_1C96F127C(v43, v39, v41, v42);
    uint64_t v44 = (void *)swift_allocObject();
    v44[2] = v40;
    v44[3] = v12;
    v44[4] = v5;
    sub_1C96EEA00(v12, v5);
    sub_1C9BEC838();
  }
  uint64_t v64 = v18;
  uint64_t v45 = OUTLINED_FUNCTION_3_48();
  os_log_type_t v46 = sub_1C9BEDC78();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)OUTLINED_FUNCTION_2_44();
    *(void *)&long long v65 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v47 = 136315138;
    *(void *)(v0 + 120) = v12;
    uint64_t v48 = sub_1C9BEE628();
    *(void *)(v0 + 128) = sub_1C95FF228(v48, v49, (uint64_t *)&v65);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_36();
    _os_log_impl(&dword_1C95F9000, v45, v46, "Action group had no flows. Moving on (%s)", v47, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_0_36();
  }

  if (MEMORY[0x1CB78C530](v64))
  {
    uint64_t v50 = v1[5];
    uint64_t v51 = swift_getObjectType();
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v50 + 16))(v12, v5, v51, v50);
    swift_unknownObjectRelease();
  }
  uint64_t v52 = *(void *)(v0 + 152);
  (*(void (**)(long long *__return_ptr, uint64_t, unint64_t))(v5 + 24))(&v65, v37, v5);
  sub_1C96EEA84(v12, v5);
  uint64_t v53 = v1[2];
  unint64_t v54 = v1[3];
  *((_OWORD *)v1 + 1) = v65;
  sub_1C96EEA84(v53, v54);
  static ExecuteResponse.ongoing(requireInput:)(0, v52);
LABEL_10:
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

void sub_1C9871BF0(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *a1;
  if (v5)
  {
    uint64_t v6 = (void *)a2[6];
    a2[6] = v5;
    id v7 = v5;
  }
  else
  {
    if (MEMORY[0x1CB78C530](a2 + 4))
    {
      uint64_t v10 = a2[5];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(a3, a4, ObjectType, v10);
      swift_unknownObjectRelease();
    }
    uint64_t v12 = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a4 + 24))(&v15, v12, a4);
    uint64_t v13 = a2[2];
    unint64_t v14 = a2[3];
    *((_OWORD *)a2 + 1) = v15;
    sub_1C96EEA84(v13, v14);
  }
}

uint64_t sub_1C9871CF8(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *a1;
  unint64_t v5 = a1[1];
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C9BECF88();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  os_log_type_t v8 = sub_1C9BECF78();
  os_log_type_t v9 = sub_1C9BEDC78();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v20 = v6;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = v11;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = sub_1C96F0014();
    sub_1C95FF228(v12, v13, &v21);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v8, v9, "Deferred frame transition completed: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v11, -1, -1);
    unint64_t v14 = v10;
    uint64_t v6 = v20;
    MEMORY[0x1CB78C440](v14, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  if (MEMORY[0x1CB78C530](a3 + 4))
  {
    uint64_t v15 = a3[5];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(a2, ObjectType, v15);
    swift_unknownObjectRelease();
  }
  uint64_t v17 = a3[2];
  unint64_t v18 = a3[3];
  a3[2] = v6;
  a3[3] = v5;
  sub_1C96EEA00(v6, v5);
  return sub_1C96EEA84(v17, v18);
}

uint64_t sub_1C9871F18()
{
  sub_1C96EEA84(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1C96F2368(v0 + 32);

  return v0;
}

uint64_t sub_1C9871F48()
{
  sub_1C9871F18();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupHandlingFlow()
{
  return self;
}

uint64_t sub_1C9871FA0()
{
  return sub_1C9870F94();
}

uint64_t sub_1C9871FC4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C969F5FC;
  return sub_1C9870F98(a1);
}

unint64_t sub_1C9872060(uint64_t a1)
{
  unint64_t result = sub_1C9872088();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C9872088()
{
  unint64_t result = qword_1EA58EB70;
  if (!qword_1EA58EB70)
  {
    type metadata accessor for GroupHandlingFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58EB70);
  }
  return result;
}

uint64_t sub_1C98720D4()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C98720F0(uint64_t *a1)
{
  return sub_1C9871CF8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1C98720F8()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8F8]);
}

uint64_t objectdestroyTm_13(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

void sub_1C9872170(void **a1)
{
  sub_1C9871BF0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t OUTLINED_FUNCTION_0_36()
{
  sub_1C96EEA84(v1, v0);
  return sub_1C96EEA84(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_44()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  sub_1C96EEA14(v1, v0);
  sub_1C96EEA14(v1, v0);
  return sub_1C9BECF78();
}

uint64_t OUTLINED_FUNCTION_5_45()
{
  return sub_1C96EEA14(v1, v0);
}

uint64_t sub_1C9872220(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4 = a1;
  char v5 = a2 & 1;
  return a3(&v4);
}

void *sub_1C9872260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD v4[2] = 0xD000000000000029;
  v4[3] = 0x80000001C9C17310;
  *((_OWORD *)v4 + 2) = xmmword_1C9BF0830;
  v4[7] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = v4[4];
  unint64_t v9 = v4[5];
  v4[4] = a1;
  uint64_t v4[5] = a2;
  sub_1C96EEA84(v8, v9);
  v4[7] = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1C9872300(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA596060);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_221();
  uint64_t v7 = *MEMORY[0x1E4F62260];
  sub_1C9BEADA8();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v8 + 104))(v3, v7);
  swift_storeEnumTagMultiPayload();
  a3(v3);
  return sub_1C95FE76C(v3, (uint64_t *)&unk_1EA596060);
}

uint64_t sub_1C98723DC(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v11 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9, v12);
  unint64_t v14 = (char *)v57 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v15, v16);
  unint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = v4[5];
  if ((~v19 & 0xF000000000000007) != 0)
  {
    uint64_t v21 = v4[4];
    if (v19 >> 62)
    {
      if (v19 >> 62 == 1 || (v21 & 0x8000000000000000) == 0)
      {
        sub_1C96EEA14(v4[4], v4[5]);
        sub_1C9872E28(v21);
      }
      sub_1C96EEA14(v4[4], v4[5]);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C9BECF88();
      uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EBC7A520);
      uint64_t v50 = *(void *)(v48 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v14, v49, v48);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v48);
      sub_1C96C26E8((uint64_t)v14, (uint64_t)v11);
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v48) == 1)
      {
        sub_1C95FE76C((uint64_t)v11, &qword_1EBC7A230);
      }
      else
      {
        uint64_t v51 = sub_1C9BECF78();
        os_log_type_t v52 = sub_1C9BEDC88();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(void *)&v65[0] = v54;
          *(_DWORD *)uint64_t v53 = 136315650;
          uint64_t v55 = sub_1C9BEE1B8();
          *(void *)&long long v67 = sub_1C95FF228(v55, v56, (uint64_t *)v65);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          *(_WORD *)(v53 + 12) = 2048;
          *(void *)&long long v67 = 102;
          sub_1C9BEDF68();
          *(_WORD *)(v53 + 22) = 2080;
          *(void *)&long long v67 = sub_1C95FF228(0xD000000000000054, 0x80000001C9C1EAB0, (uint64_t *)v65);
          sub_1C9BEDF68();
          _os_log_impl(&dword_1C95F9000, v51, v52, "FatalError at %s:%lu - %s", (uint8_t *)v53, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1CB78C440](v54, -1, -1);
          MEMORY[0x1CB78C440](v53, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v48);
      }
      if (qword_1EBC78750 != -1) {
        swift_once();
      }
      long long v67 = 0u;
      long long v68 = 0u;
      uint64_t v66 = 0;
      memset(v65, 0, sizeof(v65));
      sub_1C9BEC838();
    }
    uint64_t v63 = a3;
    uint64_t v64 = a2;
    uint64_t v62 = (uint64_t)(v4 + 6);
    if (MEMORY[0x1CB78C530]())
    {
      uint64_t v22 = v4[7];
      swift_getObjectType();
      os_log_type_t v23 = *(void (**)(uint64_t))(v22 + 8);
      sub_1C96EEA14(v21, v19);
      uint64_t v24 = OUTLINED_FUNCTION_3_49();
      v23(v24);
      swift_unknownObjectRelease();
    }
    else
    {
      sub_1C96EEA14(v21, v19);
    }
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    uint64_t v61 = qword_1EBC7A518;
    int v60 = sub_1C9BEDC78();
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v25 = swift_allocObject();
    long long v58 = xmmword_1C9BEF570;
    *(_OWORD *)(v25 + 16) = xmmword_1C9BEF570;
    uint64_t ObjectType = swift_getObjectType();
    *(void *)&v65[0] = v21;
    v57[1] = *(void *)(v19 + 8);
    uint64_t v27 = sub_1C9BEE628();
    uint64_t v29 = v28;
    *(void *)(v25 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v30 = sub_1C9604B38();
    *(void *)(v25 + 64) = v30;
    *(void *)(v25 + 32) = v27;
    *(void *)(v25 + 40) = v29;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    if ((*(uint64_t (**)(uint64_t, unint64_t))(v19 + 16))(ObjectType, v19))
    {
      uint64_t v32 = v31;
      uint64_t v33 = MEMORY[0x1CB78C530](v62);
      uint64_t v34 = v4[7];
      uint64_t v62 = type metadata accessor for ActionHandlingFlowFrame();
      swift_allocObject();
      uint64_t v35 = swift_unknownObjectRetain();
      *(void *)&v65[0] = sub_1C96F2470(v35, v32, v33, v34);
      unint64_t v36 = (void *)swift_allocObject();
      _OWORD v36[2] = v4;
      v36[3] = v21;
      v36[4] = v19;
      uint64_t v37 = OUTLINED_FUNCTION_3_49();
      sub_1C96EEA00(v37, v38);
      type metadata accessor for SiriKitFlowFrameInput();
      sub_1C9BEC838();
    }
    sub_1C9BEDC78();
    uint64_t v39 = swift_allocObject();
    uint64_t v40 = ObjectType;
    uint64_t v41 = (void *)v39;
    *(_OWORD *)(v39 + 16) = v58;
    *(void *)&v65[0] = v21;
    uint64_t v61 = v40;
    uint64_t v42 = sub_1C9BEE628();
    v41[7] = MEMORY[0x1E4FBB1A0];
    v41[8] = v30;
    v41[4] = v42;
    v41[5] = v43;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    if (MEMORY[0x1CB78C530](v62))
    {
      swift_getObjectType();
      uint64_t v44 = OUTLINED_FUNCTION_3_49();
      v45(v44);
      swift_unknownObjectRelease();
    }
    (*(void (**)(_OWORD *__return_ptr, uint64_t, unint64_t))(v19 + 24))(v65, v61, v19);
    uint64_t v46 = v4[4];
    unint64_t v47 = v4[5];
    *((_OWORD *)v4 + 2) = v65[0];
    sub_1C96EEA84(v46, v47);
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C9BEAD68();
    OUTLINED_FUNCTION_2_45();
    v64(v18);
    sub_1C96EEA84(v21, v19);
  }
  else
  {
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC78();
    sub_1C9BECE78();
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C9BEAD88();
    OUTLINED_FUNCTION_2_45();
    a2(v18);
  }
  return sub_1C95FE76C((uint64_t)v18, &qword_1EA596070);
}

uint64_t sub_1C9872D60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (MEMORY[0x1CB78C530](a3 + 6))
  {
    uint64_t v8 = a3[7];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a4, a5, ObjectType, v8);
    swift_unknownObjectRelease();
  }
  uint64_t v10 = swift_getObjectType();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a5 + 24))(&v14, v10, a5);
  uint64_t v11 = a3[4];
  unint64_t v12 = a3[5];
  *((_OWORD *)a3 + 2) = v14;

  return sub_1C96EEA84(v11, v12);
}

void sub_1C9872E28(uint64_t a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_221();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EB78);
  MEMORY[0x1F4188790](v14, v6);
  if (MEMORY[0x1CB78C530](v1 + 48))
  {
    uint64_t v7 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C9BEF570;
  uint64_t v10 = sub_1C96EFC24();
  uint64_t v12 = v11;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1C9604B38();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v2;
  *(void *)(v13 + 24) = a1;
  sub_1C9BEC838();
}

uint64_t sub_1C98730F4(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  sub_1C9BECE78();
  if (MEMORY[0x1CB78C530](a2 + 6))
  {
    uint64_t v7 = a2[7];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a3, ObjectType, v7);
    swift_unknownObjectRelease();
  }
  uint64_t v9 = a2[4];
  unint64_t v10 = a2[5];
  a2[4] = v5;
  a2[5] = v6;
  sub_1C96EEA00(v5, v6);

  return sub_1C96EEA84(v9, v10);
}

uint64_t sub_1C9873204()
{
  swift_bridgeObjectRelease();
  sub_1C96EEA84(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_1C96F2368(v0 + 48);
  return v0;
}

uint64_t sub_1C9873234()
{
  sub_1C9873204();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroupHandlingFlowFrame()
{
  return self;
}

uint64_t sub_1C987328C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_1C9872300(a1, a2, a3);
}

uint64_t sub_1C98732A4(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  return sub_1C98723DC(a1, a3, a4);
}

uint64_t sub_1C98732D0()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C98732EC(uint64_t *a1)
{
  return sub_1C98730F4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C98732F4()
{
  return objectdestroyTm_13(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_1C9873310(uint64_t a1, uint64_t a2)
{
  return sub_1C9872D60(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

unint64_t sub_1C987331C()
{
  unint64_t result = qword_1EA58EB88;
  if (!qword_1EA58EB88)
  {
    type metadata accessor for ActionHandlingFlowFrame();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58EB88);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_45()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_3_49()
{
  return v0;
}

uint64_t GuardFlow.__allocating_init(preconditionFlows:)(unint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  GuardFlow.init(preconditionFlows:)(a1);
  return v2;
}

SiriKitFlow::GuardFlowResult __swiftcall GuardFlowResult.and(_:)(SiriKitFlow::GuardFlowResult a1)
{
  return (v1 | a1) & 1;
}

uint64_t GuardFlowResult.description.getter(char a1)
{
  if (a1) {
    return 1818845542;
  }
  else {
    return 1936941424;
  }
}

uint64_t GuardFlowResult.hash(into:)()
{
  return sub_1C9BEE748();
}

BOOL static GuardFlowResult.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t GuardFlowResult.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C9873480()
{
  return GuardFlowResult.hashValue.getter();
}

uint64_t sub_1C9873488()
{
  return GuardFlowResult.hash(into:)();
}

BOOL sub_1C9873490(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static GuardFlowResult.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C987349C()
{
  return GuardFlowResult.description.getter(*v0);
}

uint64_t sub_1C98734BC(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 48) = v2;
  return result;
}

uint64_t GuardFlow.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1C9873520()
{
  return sub_1C98734FC();
}

unint64_t sub_1C9873548()
{
  unint64_t result = qword_1EA58EB98;
  if (!qword_1EA58EB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58EB98);
  }
  return result;
}

unint64_t sub_1C9873594(uint64_t a1)
{
  unint64_t result = sub_1C98735BC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C98735BC()
{
  unint64_t result = qword_1EA58EBA0;
  if (!qword_1EA58EBA0)
  {
    type metadata accessor for GuardFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58EBA0);
  }
  return result;
}

uint64_t sub_1C9873608@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C961E070();
  *a1 = result;
  return result;
}

uint64_t sub_1C9873634(char *a1)
{
  return sub_1C98734BC(*a1);
}

uint64_t method lookup function for GuardFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GuardFlow);
}

uint64_t dispatch thunk of GuardFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))() & 1;
}

uint64_t dispatch thunk of GuardFlow.__allocating_init(preconditionFlows:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of GuardFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of GuardFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of GuardFlow.execute()(uint64_t a1)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 168) + **(int **)(*(void *)v1 + 168));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1C969F5FC;
  return v6(a1);
}

uint64_t GuidedConversationFlowDelegate.handleInterruption(_:)()
{
  return 0;
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.groupWillTransition(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.groupDidComplete(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.frameWillTransition(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.frameDidComplete(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.actionWillExecute(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.actionDidExecute(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of GuidedConversationFlowDelegate.handleInterruption(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

unint64_t static GuidedConversationFlowConstants.flowNamespace.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_1C9873910()
{
  return sub_1C9873950();
}

uint64_t sub_1C9873950()
{
  OUTLINED_FUNCTION_82();
  swift_beginAccess();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C98739A0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return swift_unknownObjectRelease();
}

uint64_t sub_1C98739B0()
{
  return sub_1C9873A2C();
}

uint64_t sub_1C98739EC()
{
  OUTLINED_FUNCTION_84_1();
  return MEMORY[0x1CB78C530](v0 + 72);
}

uint64_t sub_1C9873A2C()
{
  OUTLINED_FUNCTION_82();
  swift_beginAccess();
  *(void *)(v1 + 80) = v0;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1C9873A8C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v3[5] = v1;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1CB78C530](v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C9873B0C;
}

void sub_1C9873B0C(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 80) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t GuidedConversationFlowFrame.__allocating_init(source:)()
{
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_allocObject();
  GuidedConversationFlowFrame.init(source:)();
  return v0;
}

uint64_t GuidedConversationFlowFrame.init(source:)()
{
  OUTLINED_FUNCTION_82();
  *(void *)(v1 + 16) = 0xD000000000000029;
  *(void *)(v1 + 24) = 0x80000001C9C17310;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v0;
  *(unsigned char *)(v1 + 48) = 0;
  return v1;
}

uint64_t sub_1C9873C40(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA596060);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v7, v8);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + 48) != 1) {
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_84_1();
  if (MEMORY[0x1CB78C530](v4 + 72))
  {
    uint64_t v11 = *(void *)(v4 + 80);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, ObjectType, v11);
    uint64_t v15 = v14;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  sub_1C98739A0(v13, v15);
  if (!*(void *)(v4 + 56)) {
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4F62260];
  }
  else {
LABEL_6:
  }
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4F62268];
  uint64_t v17 = *v16;
  sub_1C9BEADA8();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(char *, uint64_t))(v18 + 104))(v10, v17);
  swift_storeEnumTagMultiPayload();
  a3(v10);
  return sub_1C95FE76C((uint64_t)v10, (uint64_t *)&unk_1EA596060);
}

uint64_t sub_1C9873DDC(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  if (*(unsigned char *)(a2 + 48)) {
    char v4 = 2;
  }
  else {
    char v4 = 1;
  }
  *(unsigned char *)(a2 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 64);
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
  }
  v11[0] = v7;
  v11[1] = v6;
  char v12 = 0;
  swift_unknownObjectRetain();
  a3(v11);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1C9873E9C(uint64_t a1, void (*a2)(uint64_t, uint64_t, void))
{
  if (*(unsigned char *)(v2 + 48)) {
    char v4 = 2;
  }
  else {
    char v4 = 1;
  }
  *(unsigned char *)(v2 + 48) = v4;
  uint64_t v5 = *(void *)(v2 + 56);
  if (v5)
  {
    uint64_t v6 = *(void *)(v2 + 64);
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v8 = *(void *)(v2 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    uint64_t v6 = v10;
  }
  swift_unknownObjectRetain();
  a2(v7, v6, 0);

  return swift_unknownObjectRelease();
}

uint64_t sub_1C9873F5C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v6 + 48) != 2)
  {
    v23[0] = a5;
    v23[1] = a4;
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC78();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C9BEF570;
    swift_getObjectType();
    v23[3] = a2;
    uint64_t v16 = sub_1C9BEE628();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v15 + 64) = sub_1C9604B38();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_84_1();
    uint64_t v19 = MEMORY[0x1CB78C530](v6 + 72);
    uint64_t v20 = *(void *)(v6 + 80);
    type metadata accessor for GroupHandlingFlowFrame();
    swift_allocObject();
    uint64_t v21 = swift_unknownObjectRetain();
    _OWORD v23[2] = sub_1C9872260(v21, a3, v19, v20);
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C9BEC838();
  }
  type metadata accessor for SiriKitFlowFrameInput();
  sub_1C9BEAD88();
  swift_storeEnumTagMultiPayload();
  a4(v14);
  return sub_1C95FE76C((uint64_t)v14, &qword_1EA596070);
}

uint64_t GuidedConversationFlowFrame.deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1C96F2368(v0 + 72);
  return v0;
}

uint64_t GuidedConversationFlowFrame.__deallocating_deinit()
{
  GuidedConversationFlowFrame.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9874274(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  return sub_1C9873C40(a1, a2, a3);
}

void sub_1C9874298()
{
}

uint64_t sub_1C98742F4(uint64_t a1, uint64_t *a2, void (*a3)(char *), uint64_t a4)
{
  return sub_1C9873F5C(a1, *a2, a2[1], a3, a4);
}

void sub_1C9874328()
{
  *(unsigned char *)(v0 + 48) = 2;
}

unint64_t sub_1C9874334()
{
  unint64_t result = qword_1EA58EBB8;
  if (!qword_1EA58EBB8)
  {
    type metadata accessor for GroupHandlingFlowFrame();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58EBB8);
  }
  return result;
}

uint64_t sub_1C9874384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C9794180();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C98743B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C98739EC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for GuidedConversationFlowConstants()
{
  return &type metadata for GuidedConversationFlowConstants;
}

uint64_t type metadata accessor for GuidedConversationFlowFrame()
{
  return self;
}

uint64_t method lookup function for GuidedConversationFlowFrame(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for GuidedConversationFlowFrame);
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.namespace.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.namespace.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.namespace.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.__allocating_init(source:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.onInput(controller:input:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.execute(controller:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.action(renderer:args:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of GuidedConversationFlowFrame.exit(controller:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

unsigned char *storeEnumTagSinglePayload for State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9874678);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t sub_1C98746B4()
{
  unint64_t result = qword_1EA58EBC0;
  if (!qword_1EA58EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58EBC0);
  }
  return result;
}

uint64_t dispatch thunk of GuidedConversationFlowSource.initialGroup.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t HandcraftedPluginManifestEntry.bundlePath.getter()
{
  uint64_t v0 = *(void *)(OUTLINED_FUNCTION_0_37() + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v0;
}

void HandcraftedPluginManifestEntry.pluginBundleId.getter()
{
}

uint64_t sub_1C9874798()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000016;
  *(void *)(result + 24) = 0x80000001C9C1F4D0;
  *(void *)(result + 32) = 0xD00000000000001ELL;
  *(void *)(result + 40) = 0x80000001C9C13CC0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC78ED8 = result;
  return result;
}

uint64_t sub_1C9874808()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000016;
  *(void *)(result + 24) = 0x80000001C9C1F4B0;
  *(void *)(result + 32) = 0xD00000000000001ELL;
  *(void *)(result + 40) = 0x80000001C9C13CE0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79360 = result;
  return result;
}

uint64_t sub_1C9874878()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001ELL;
  *(void *)(result + 24) = 0x80000001C9C1F490;
  *(void *)(result + 32) = 0xD00000000000002CLL;
  *(void *)(result + 40) = 0x80000001C9C13D00;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79230 = result;
  return result;
}

uint64_t sub_1C98748E8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000018;
  *(void *)(result + 24) = 0x80000001C9C1F470;
  *(void *)(result + 32) = 0xD000000000000020;
  *(void *)(result + 40) = 0x80000001C9C13D60;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC791E0 = result;
  return result;
}

uint64_t sub_1C9874958()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000021;
  *(void *)(result + 24) = 0x80000001C9C1F440;
  *(void *)(result + 32) = 0xD000000000000029;
  *(void *)(result + 40) = 0x80000001C9C13D30;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79298 = result;
  return result;
}

uint64_t sub_1C98749C8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000024;
  *(void *)(result + 24) = 0x80000001C9C1F410;
  *(void *)(result + 32) = 0xD00000000000002CLL;
  *(void *)(result + 40) = 0x80000001C9C13D90;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC790D8 = result;
  return result;
}

uint64_t sub_1C9874A38()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000016;
  *(void *)(result + 24) = 0x80000001C9C1F3F0;
  *(void *)(result + 32) = 0xD00000000000001ELL;
  *(void *)(result + 40) = 0x80000001C9C13DC0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79240 = result;
  return result;
}

uint64_t sub_1C9874AA8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000021;
  *(void *)(result + 24) = 0x80000001C9C1F3C0;
  *(void *)(result + 32) = 0xD000000000000029;
  *(void *)(result + 40) = 0x80000001C9C13DE0;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC792B0 = result;
  return result;
}

uint64_t sub_1C9874B18()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001ELL;
  *(void *)(result + 24) = 0x80000001C9C1F370;
  *(void *)(result + 32) = 0xD000000000000026;
  *(void *)(result + 40) = 0x80000001C9C13E40;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79158 = result;
  return result;
}

uint64_t sub_1C9874B88()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001CLL;
  *(void *)(result + 24) = 0x80000001C9C1F350;
  *(void *)(result + 32) = 0xD000000000000024;
  *(void *)(result + 40) = 0x80000001C9C13E70;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC790E8 = result;
  return result;
}

uint64_t sub_1C9874BF8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001ALL;
  *(void *)(result + 24) = 0x80000001C9C1F330;
  *(void *)(result + 32) = 0xD000000000000022;
  *(void *)(result + 40) = 0x80000001C9C13EA0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79378 = result;
  return result;
}

uint64_t sub_1C9874C68()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000017;
  *(void *)(result + 24) = 0x80000001C9C1F310;
  *(void *)(result + 32) = 0xD000000000000026;
  *(void *)(result + 40) = 0x80000001C9C13ED0;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79278 = result;
  return result;
}

uint64_t sub_1C9874CD8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001CLL;
  *(void *)(result + 24) = 0x80000001C9C1F2F0;
  *(void *)(result + 32) = 0xD000000000000024;
  *(void *)(result + 40) = 0x80000001C9C13F00;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC791F8 = result;
  return result;
}

uint64_t sub_1C9874D48()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001FLL;
  *(void *)(result + 24) = 0x80000001C9C1F2D0;
  *(void *)(result + 32) = 0xD000000000000027;
  *(void *)(result + 40) = 0x80000001C9C13F30;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79288 = result;
  return result;
}

uint64_t sub_1C9874DB8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000027;
  *(void *)(result + 24) = 0x80000001C9C1F2A0;
  *(void *)(result + 32) = 0xD00000000000002FLL;
  *(void *)(result + 40) = 0x80000001C9C13F60;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79180 = result;
  return result;
}

uint64_t sub_1C9874E28()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000002ALL;
  *(void *)(result + 24) = 0x80000001C9C1F270;
  *(void *)(result + 32) = 0xD000000000000032;
  *(void *)(result + 40) = 0x80000001C9C13F90;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC791B8 = result;
  return result;
}

uint64_t sub_1C9874E98()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000019;
  *(void *)(result + 24) = 0x80000001C9C1F250;
  *(void *)(result + 32) = 0xD000000000000021;
  *(void *)(result + 40) = 0x80000001C9C13FD0;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC792C8 = result;
  return result;
}

uint64_t sub_1C9874F08()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000013;
  *(void *)(result + 24) = 0x80000001C9C1F230;
  *(void *)(result + 32) = 0xD000000000000016;
  *(void *)(result + 40) = 0x80000001C9C14000;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79D48 = result;
  return result;
}

uint64_t sub_1C9874F78()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001CLL;
  *(void *)(result + 24) = 0x80000001C9C1F210;
  *(void *)(result + 32) = 0xD000000000000024;
  *(void *)(result + 40) = 0x80000001C9C14020;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC790F8 = result;
  return result;
}

uint64_t sub_1C9874FE8()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001DLL;
  *(void *)(result + 24) = 0x80000001C9C1F1F0;
  *(void *)(result + 32) = 0xD000000000000025;
  *(void *)(result + 40) = 0x80000001C9C14050;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79210 = result;
  return result;
}

uint64_t sub_1C9875058()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000021;
  *(void *)(result + 24) = 0x80000001C9C1F1C0;
  *(void *)(result + 32) = 0xD000000000000031;
  *(void *)(result + 40) = 0x80000001C9C14080;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 2;
  qword_1EBC792E0 = result;
  return result;
}

uint64_t sub_1C98750CC()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000019;
  *(void *)(result + 24) = 0x80000001C9C1F1A0;
  *(void *)(result + 32) = 0xD000000000000021;
  *(void *)(result + 40) = 0x80000001C9C140C0;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC792F0 = result;
  return result;
}

uint64_t sub_1C987513C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000026;
  *(void *)(result + 24) = 0x80000001C9C1F170;
  *(void *)(result + 32) = 0xD00000000000002ELL;
  *(void *)(result + 40) = 0x80000001C9C140F0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79170 = result;
  return result;
}

uint64_t sub_1C98751AC()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000021;
  *(void *)(result + 24) = 0x80000001C9C1F140;
  *(void *)(result + 32) = 0xD000000000000029;
  *(void *)(result + 40) = 0x80000001C9C14120;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79308 = result;
  return result;
}

uint64_t sub_1C987521C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000022;
  *(void *)(result + 24) = 0x80000001C9C1F110;
  *(void *)(result + 32) = 0xD00000000000002ALL;
  *(void *)(result + 40) = 0x80000001C9C14150;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79390 = result;
  return result;
}

uint64_t sub_1C987528C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000021;
  *(void *)(result + 24) = 0x80000001C9C1F390;
  *(void *)(result + 32) = 0xD00000000000002FLL;
  *(void *)(result + 40) = 0x80000001C9C13E10;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC791A0 = result;
  return result;
}

uint64_t sub_1C98752FC()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000021;
  *(void *)(result + 24) = 0x80000001C9C1F0E0;
  *(void *)(result + 32) = 0xD000000000000029;
  *(void *)(result + 40) = 0x80000001C9C14180;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79318 = result;
  return result;
}

uint64_t sub_1C987536C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000019;
  *(void *)(result + 24) = 0x80000001C9C1F0C0;
  *(void *)(result + 32) = 0xD000000000000021;
  *(void *)(result + 40) = 0x80000001C9C141B0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79330 = result;
  return result;
}

uint64_t sub_1C98753DC()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000002BLL;
  *(void *)(result + 24) = 0x80000001C9C1F060;
  *(void *)(result + 32) = 0xD000000000000033;
  *(void *)(result + 40) = 0x80000001C9C141E0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC791C8 = result;
  return result;
}

uint64_t sub_1C987544C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000020;
  *(void *)(result + 24) = 0x80000001C9C1F090;
  *(void *)(result + 32) = 0xD000000000000023;
  *(void *)(result + 40) = 0x80000001C9C14220;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79110 = result;
  return result;
}

uint64_t sub_1C98754BC()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000027;
  *(void *)(result + 24) = 0x80000001C9C1F030;
  *(void *)(result + 32) = 0xD00000000000002FLL;
  *(void *)(result + 40) = 0x80000001C9C14250;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79190 = result;
  return result;
}

uint64_t sub_1C987552C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001ELL;
  *(void *)(result + 24) = 0x80000001C9C1F010;
  *(void *)(result + 32) = 0xD000000000000026;
  *(void *)(result + 40) = 0x80000001C9C14280;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79250 = result;
  return result;
}

uint64_t sub_1C987559C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000024;
  *(void *)(result + 24) = 0x80000001C9C1EFE0;
  *(void *)(result + 32) = 0xD00000000000002CLL;
  *(void *)(result + 40) = 0x80000001C9C142B0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79128 = result;
  return result;
}

uint64_t sub_1C987560C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD00000000000001ELL;
  *(void *)(result + 24) = 0x80000001C9C1EFC0;
  *(void *)(result + 32) = 0xD000000000000026;
  *(void *)(result + 40) = 0x80000001C9C142E0;
  *(unsigned char *)(result + 48) = 0;
  *(void *)(result + 56) = 1;
  qword_1EBC79268 = result;
  return result;
}

uint64_t sub_1C987567C()
{
  type metadata accessor for InternalPluginData();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0xD000000000000019;
  *(void *)(result + 24) = 0x80000001C9C1EFA0;
  *(void *)(result + 32) = 0xD000000000000021;
  *(void *)(result + 40) = 0x80000001C9C14310;
  *(unsigned char *)(result + 48) = 1;
  *(void *)(result + 56) = 1;
  qword_1EBC79348 = result;
  return result;
}

void sub_1C98756EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C9BFB7A0;
  if (qword_1EBC79228 != -1) {
    swift_once();
  }
  *(void *)(v0 + 32) = qword_1EBC78ED8;
  sub_1C9BEC838();
}

uint64_t sub_1C9876028()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C9876050()
{
  sub_1C9876028();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9876080()
{
  if (qword_1EBC79150 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EBC79140;
  if ((unint64_t)qword_1EBC79140 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_5:
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v1 = MEMORY[0x1CB78B3A0](0, v6);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79478);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
        uint64_t v3 = *(void *)(v1 + 24);
        *(void *)(inited + 32) = *(void *)(v1 + 16);
        *(void *)(inited + 40) = v3;
        *(void *)(inited + 48) = v1;
        type metadata accessor for InternalPluginData();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C9BEC838();
      }
      sub_1C9BEC838();
    }
  }
  else
  {
    uint64_t v0 = *(void *)((qword_1EBC79140 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v0) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  qword_1EBC766C0 = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9876578()
{
  if (qword_1EBC79150 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1EBC79140;
  if ((unint64_t)qword_1EBC79140 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_5:
      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v1 = MEMORY[0x1CB78B3A0](0, v6);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79478);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
        uint64_t v3 = *(void *)(v1 + 40);
        *(void *)(inited + 32) = *(void *)(v1 + 32);
        *(void *)(inited + 40) = v3;
        *(void *)(inited + 48) = v1;
        type metadata accessor for InternalPluginData();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C9BEC838();
      }
      sub_1C9BEC838();
    }
  }
  else
  {
    uint64_t v0 = *(void *)((qword_1EBC79140 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v0) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
  qword_1EBC79408 = MEMORY[0x1E4FBC868];
  return swift_bridgeObjectRelease();
}

SiriKitFlow::HandcraftedPluginManifestEntry_optional static HandcraftedPluginManifestEntry.fromPluginBundleId(_:)(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = a1;
  uint64_t v5 = a2;

  return HandcraftedPluginManifestEntry.init(rawValue:)(*(Swift::String *)&v4);
}

void HandcraftedPluginManifestEntry.associatedAppBundleId.getter()
{
  switch(*v0)
  {
    case 4:
    case 5:
    case 7:
    case 0xC:
    case 0xE:
    case 0x14:
    case 0x15:
    case 0x18:
    case 0x1B:
    case 0x20:
    case 0x22:
      OUTLINED_FUNCTION_1_17();
      break;
    default:
      return;
  }
}

uint64_t sub_1C9876E38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C990B850(*a1, *a2);
}

unint64_t sub_1C9876E48()
{
  unint64_t result = qword_1EA58EBC8;
  if (!qword_1EA58EBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58EBC8);
  }
  return result;
}

uint64_t sub_1C9876E94()
{
  return sub_1C96A6A3C();
}

uint64_t sub_1C9876E9C(uint64_t a1)
{
  return sub_1C98A4348(a1, *v1);
}

uint64_t sub_1C9876EA4()
{
  return sub_1C96A7300();
}

SiriKitFlow::HandcraftedPluginManifestEntry_optional sub_1C9876EAC(Swift::String *a1)
{
  return HandcraftedPluginManifestEntry.init(rawValue:)(*a1);
}

void sub_1C9876EB8(void *a1@<X8>)
{
  HandcraftedPluginManifestEntry.rawValue.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t type metadata accessor for InternalPluginData()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for HandcraftedPluginManifestEntry(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 34 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 34) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v6 = ((a2 - 222) >> 8) + 1;
    *unint64_t result = a2 + 34;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9876FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  return sub_1C9613EDC();
}

uint64_t OUTLINED_FUNCTION_2_46()
{
  return sub_1C9BEDF88();
}

unint64_t OUTLINED_FUNCTION_3_50()
{
  return sub_1C9604BD0();
}

void sub_1C9877054(uint64_t a1@<X8>)
{
}

void sub_1C987706C()
{
}

void HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_109_2();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = OUTLINED_FUNCTION_2();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  void v5[3] = 0;
  v5[4] = &unk_1EA58EBD0;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C98771E8()
{
}

void HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)()
{
}

void sub_1C9877244()
{
}

void HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_109_2();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = OUTLINED_FUNCTION_2();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  void v5[3] = 0;
  v5[4] = &unk_1EA58EBD8;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C98773C0()
{
}

void HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_109_2();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = OUTLINED_FUNCTION_2();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  void v5[3] = 0;
  v5[4] = &unk_1EA58EBE0;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C987753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v15 = OUTLINED_FUNCTION_22(v14);
  MEMORY[0x1F4188790](v15, v16);
  OUTLINED_FUNCTION_222();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a6;
  uint64_t v17[3] = a7;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = a3;
  uint64_t v18 = sub_1C9BEDA58();
  OUTLINED_FUNCTION_79_3(v18);
  uint64_t v19 = (void *)OUTLINED_FUNCTION_2();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = &unk_1EA58EBF0;
  v19[5] = v17;
  v19[6] = a4;
  v19[7] = a5;
  sub_1C9BEC838();
}

void sub_1C9877694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v9 = OUTLINED_FUNCTION_22(v8);
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_222();
  uint64_t v11 = sub_1C9BEDA58();
  OUTLINED_FUNCTION_79_3(v11);
  uint64_t v12 = (void *)OUTLINED_FUNCTION_2();
  long long v12[2] = 0;
  _OWORD v12[3] = 0;
  v12[4] = &unk_1EA58EC08;
  v12[5] = a1;
  v12[6] = a4;
  v12[7] = a5;
  swift_retain_n();
  sub_1C9BEC838();
}

void sub_1C987779C()
{
}

void HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)()
{
  OUTLINED_FUNCTION_109_2();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = OUTLINED_FUNCTION_2();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  void v5[3] = 0;
  v5[4] = &unk_1EA58EC18;
  OUTLINED_FUNCTION_12_1(v5);
}

uint64_t sub_1C9877918()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C97D57FC();
}

void sub_1C98779B0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = OUTLINED_FUNCTION_2();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  void v5[3] = 0;
  v5[4] = &unk_1EA58F2E0;
  OUTLINED_FUNCTION_12_1(v5);
}

uint64_t sub_1C9877B18()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C99C0CA4();
}

uint64_t sub_1C9877BB0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C99BFCBC();
}

uint64_t sub_1C9877C68()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C99C0D78();
}

uint64_t sub_1C9877D08()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C99C15EC();
}

void HandleIntentFlowStrategyAsync.authenticationPolicy.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 32) = &type metadata for FeatureFlagDefinitions.Core;
  *(void *)(a1 + 40) = &off_1F23DF470;
  *(unsigned char *)(a1 + 8) = 0;
}

uint64_t sub_1C9877DC0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C97D57FC();
}

uint64_t sub_1C9877EE4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(a1);
}

uint64_t HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C97C0B28);
}

uint64_t sub_1C9877F94(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(a1);
}

uint64_t HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C96FF8B8);
}

uint64_t sub_1C9878044()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C99C0CA4();
}

uint64_t sub_1C9878168()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_84_4();
  return sub_1C99BFCBC();
}

uint64_t sub_1C98782AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C99C0D78();
}

uint64_t sub_1C98783E0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)();
}

uint64_t HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C99C15EC();
}

uint64_t sub_1C9878504()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 88) + 24))(*(void *)(*(void *)v0 + 80));
}

uint64_t sub_1C987857C(unint64_t a1, __n128 *a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C987859C);
}

uint64_t sub_1C987859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_19_1(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C969A9D8;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_27_21();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9878660(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v7 = *a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, void))(*(void *)(v7 + 88)
                                                                                               + 32))(a3, v15, v16, sub_1C987CE94, v13, *(void *)(v7 + 80));
  return swift_release();
}

uint64_t sub_1C9878810(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v2;
  *(_OWORD *)(v3 + 200) = *(_OWORD *)a2;
  *(void *)(v3 + 216) = *(void *)(a2 + 16);
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9878838);
}

uint64_t sub_1C9878838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = swift_task_alloc();
  *(void *)(v14 + 224) = v15;
  long long v16 = *(_OWORD *)(v14 + 208);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(v14 + 192);
  *(_OWORD *)(v15 + 32) = v16;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v14 + 232) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB0);
  *uint64_t v17 = v14;
  v17[1] = sub_1C9878930;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v18, v19, v20, 0xD000000000000030, v21, v22, v15, v23, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9878930()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *unsigned int v6 = v5;
  *(void *)(v3 + 240) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9878A14()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void **)(v0 + 184);
  sub_1C95FD654(v0 + 16, v0 + 72);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  *(void *)(v0 + 112) = v2;
  *(void *)(v0 + 120) = v3;
  uint64_t v4 = (long long *)OUTLINED_FUNCTION_94_3();
  sub_1C95FD5D8(v4, v5);
  *(void *)(v0 + 168) = v2;
  *(void *)(v0 + 176) = v3;
  v1[8] = 0;
  v1[9] = 0;
  sub_1C95FD5D8((long long *)(v0 + 72), (uint64_t)v1);
  v1[5] = v2;
  v1[6] = v3;
  v1[7] = 0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  OUTLINED_FUNCTION_90();
  return v6();
}

uint64_t sub_1C9878AC4()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9878B20(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v7 = *a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, void))(*(void *)(v7 + 88) + 40))(a3, v15, v16, sub_1C987CF10, v13, *(void *)(v7 + 80));
  return swift_release();
}

uint64_t sub_1C9878CD0(uint64_t a1)
{
  sub_1C9608D38(a1, (uint64_t)&v2, &qword_1EA58A5C0);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
    return sub_1C9BED9F8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
    return sub_1C9BEDA08();
  }
}

uint64_t sub_1C9878D64(unint64_t a1, __n128 *a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9878D84);
}

uint64_t sub_1C9878D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_19_1(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C969A9D8;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_27_21();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9878E48(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v7 = *a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, void))(*(void *)(v7 + 88)
                                                                                               + 64))(a3, v15, v16, sub_1C987CE94, v13, *(void *)(v7 + 80));
  return swift_release();
}

uint64_t sub_1C9878FF8(unint64_t a1, __n128 *a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9879018);
}

uint64_t sub_1C9879018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_19_1(v16);
  uint64_t v17 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v17);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v18;
  v14[1] = sub_1C969A9D8;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v19, v20, v21, 0xD000000000000022, v22, v23, v15, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C98790EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v7 = *a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, void))(*(void *)(v7 + 88)
                                                                                               + 72))(a3, v15, v16, sub_1C987CE94, v13, *(void *)(v7 + 80));
  return swift_release();
}

uint64_t sub_1C987929C(unint64_t a1, __n128 *a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98792BC);
}

uint64_t sub_1C98792BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_19_1(v16);
  uint64_t v17 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v17);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v18;
  v14[1] = sub_1C979EA20;
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v19, v20, v21, 0xD00000000000002DLL, v22, v23, v15, v24, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9879390(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  uint64_t v7 = *a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, void))(*(void *)(v7 + 88)
                                                                                               + 80))(a3, v15, v16, sub_1C987CE94, v13, *(void *)(v7 + 80));
  return swift_release();
}

uint64_t sub_1C9879540()
{
  return sub_1C9BEDA08();
}

uint64_t sub_1C9879584()
{
  return sub_1C9878504();
}

uint64_t sub_1C98795A8(unint64_t a1, __n128 *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C987857C(a1, a2);
}

uint64_t sub_1C9879654(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9878810(a1, a2);
}

uint64_t sub_1C9879700(unint64_t a1, __n128 *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9878D64(a1, a2);
}

uint64_t sub_1C98797AC(unint64_t a1, __n128 *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9878FF8(a1, a2);
}

uint64_t sub_1C9879858(unint64_t a1, __n128 *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C987929C(a1, a2);
}

uint64_t NoOutputHandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  void v6[3] = type metadata accessor for EmptyOutput();
  v6[4] = &protocol witness table for EmptyOutput;
  v6[0] = swift_allocObject();
  char v7 = 0;
  a4(v6);
  return sub_1C9697900((uint64_t)v6, (uint64_t *)&unk_1EBC764F8);
}

uint64_t NoOutputHandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9879998);
}

uint64_t sub_1C9879998()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(uint64_t **)(v0 + 16);
  uint64_t v2 = type metadata accessor for EmptyOutput();
  uint64_t v3 = swift_allocObject();
  v1[3] = v2;
  v1[4] = (uint64_t)&protocol witness table for EmptyOutput;
  *uint64_t v1 = v3;
  OUTLINED_FUNCTION_90();
  return v4();
}

void sub_1C9879A14(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v5 = v4;
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(a1, a2, v5, WitnessTable);
}

uint64_t sub_1C9879A9C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEDA28();
  uint64_t v6 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v6);
  char v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  id v8 = a1;
  sub_1C96B9288();
  return swift_release();
}

uint64_t sub_1C9879B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
  v4[16] = swift_task_alloc();
  uint64_t v5 = sub_1C9BEAB08();
  v4[17] = v5;
  v4[18] = *(void *)(v5 - 8);
  v4[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9879C6C, 0, 0);
}

uint64_t sub_1C9879C6C()
{
  OUTLINED_FUNCTION_24();
  if (qword_1EBC76690 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EBC77380;
  *(void *)(v0 + 160) = qword_1EBC77380;
  return MEMORY[0x1F4188298](sub_1C9879D00, v1, 0);
}

uint64_t sub_1C9879D00()
{
  OUTLINED_FUNCTION_24();
  sub_1C965CC28(v0 + 56);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v1, v2, v3);
}

uint64_t sub_1C9879D64()
{
  uint64_t v1 = (long long *)(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8(v1, v0 + 16);
    sub_1C9BEC328();
  }
  sub_1C9697900((uint64_t)v1, &qword_1EBC77360);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_34(v2, (uint64_t)qword_1EBC7A520);
  os_log_type_t v4 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v5);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v6, v7, "Failed to intialize Suggestions broker");
    OUTLINED_FUNCTION_11_4();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v8();
}

uint64_t sub_1C987A24C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  uint64_t v7 = OUTLINED_FUNCTION_52_2();
  v8(v7);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C987A380()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C987A3EC()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = *(void **)(v0 + 184);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 184);
    uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_67();
    id v8 = (void *)swift_slowAlloc();
    *uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 96) = v10;
    sub_1C9BEDF68();
    *id v8 = v10;

    OUTLINED_FUNCTION_80_6(&dword_1C95F9000, v4, v11, "Error when submitting engagement for suggestions: %@");
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
    OUTLINED_FUNCTION_106_2();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    unint64_t v12 = *(void **)(v0 + 184);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v13();
}

void sub_1C987A588()
{
}

void sub_1C987A5C8(void *a1, char a2)
{
}

void sub_1C987A5F0(void *a1, char a2)
{
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 144);
  if (*(unsigned char *)(v3 + 24) == 5 && !(*(void *)(v3 + 8) | *(void *)(v3 + 16) | *(void *)v3))
  {
    if (a2)
    {
      id v27 = a1;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1C9BECF88();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EBC7A520);
      id v29 = a1;
      id v30 = a1;
      uint64_t v31 = sub_1C9BECF78();
      os_log_type_t v32 = sub_1C9BEDC88();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = (void *)swift_slowAlloc();
        id v39 = v34;
        *(_DWORD *)uint64_t v33 = 136315138;
        swift_getErrorValue();
        uint64_t v35 = sub_1C9BEE6E8();
        uint64_t v38 = sub_1C95FF228(v35, v36, (uint64_t *)&v39);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C97183F4(a1, 1);
        sub_1C97183F4(a1, 1);
        _os_log_impl(&dword_1C95F9000, v31, v32, "Handoff flow did not exit successfully: %s", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v34, -1, -1);
        MEMORY[0x1CB78C440](v33, -1, -1);
      }
      else
      {
        sub_1C97183F4(a1, 1);
        sub_1C97183F4(a1, 1);
      }

      int64x2_t v40 = 0uLL;
      id v39 = a1;
      char v41 = 4;
      id v37 = a1;
      sub_1C967BDAC((uint64_t)&v39);
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C9BECF88();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBC7A520);
    uint64_t v21 = sub_1C9BECF78();
    os_log_type_t v22 = sub_1C9BEDC78();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_1C95F9000, v21, v22, "Handoff flow completed successfully. Moving to handled error state.", v23, 2u);
      MEMORY[0x1CB78C440](v23, -1, -1);
    }

    type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError();
    swift_getWitnessTable();
    uint64_t v24 = (void *)swift_allocError();
    *(void *)(v25 + 8) = 0;
    *(void *)(v25 + 16) = 0;
    *(void *)uint64_t v25 = 0;
    *(unsigned char *)(v25 + 24) = -64;
    id v39 = v24;
    int64x2_t v40 = vdupq_n_s64(1uLL);
    char v41 = 3;
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C9BECF88();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
    swift_retain_n();
    os_log_type_t v5 = sub_1C9BECF78();
    os_log_type_t v6 = sub_1C9BEDC88();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v38 = v8;
      *(_DWORD *)uint64_t v7 = 136315138;
      id v9 = *(void **)(v3 + 8);
      uint64_t v10 = *(void *)(v3 + 16);
      char v11 = *(unsigned char *)(v3 + 24);
      id v39 = *(id *)v3;
      v40.i64[0] = (uint64_t)v9;
      v40.i64[1] = v10;
      char v41 = v11;
      sub_1C9684114(v39, v9, v10, v11);
      type metadata accessor for SiriKitHandleIntentFlow.State();
      swift_getWitnessTable();
      uint64_t v12 = sub_1C9BED5E8();
      id v39 = (id)sub_1C95FF228(v12, v13, &v38);
      sub_1C9BEDF68();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v5, v6, "HandleIntentFlow called in an unexpected state: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v8, -1, -1);
      MEMORY[0x1CB78C440](v7, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    id v14 = *(id *)v3;
    uint64_t v15 = *(void **)(v3 + 8);
    uint64_t v16 = *(void *)(v3 + 16);
    char v17 = *(unsigned char *)(v3 + 24);
    type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError();
    swift_getWitnessTable();
    uint64_t v18 = (void *)swift_allocError();
    *(void *)uint64_t v19 = v14;
    *(void *)(v19 + 8) = v15;
    *(void *)(v19 + 16) = v16;
    *(unsigned char *)(v19 + 24) = v17;
    int64x2_t v40 = 0uLL;
    id v39 = v18;
    char v41 = 4;
    sub_1C9684114(v14, v15, v16, v17);
  }
  sub_1C967BDAC((uint64_t)&v39);
}

void sub_1C987ABE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v26 = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x1F4188790](a1, a2);
  id v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (uint64_t *)MEMORY[0x1F4188790](v9, v10);
  unint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = v11[1];
  uint64_t v30 = *v11;
  uint64_t v31 = v14;
  uint64_t v32 = v11[2];
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v27 = v3;
  uint64_t v28 = v15;
  v15((char *)&v26 - v12, v3, a2);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = v16 + v8;
  uint64_t v18 = swift_allocObject();
  uint64_t v33 = v18;
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v7 + 32);
  v19(v18 + v16, v13, a2);
  uint64_t v20 = v29;
  v28(v29, v4, a2);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v26;
  *(void *)(v21 + 16) = a2;
  *(void *)(v21 + 24) = v22;
  v19(v21 + v16, v20, a2);
  uint64_t v23 = (void *)(v21 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v24 = v31;
  *uint64_t v23 = v30;
  v23[1] = v24;
  _OWORD v23[2] = v32;
  uint64_t DynamicType = swift_getDynamicType();
  type metadata accessor for AnyUnlockDeviceFlowStrategy();
  swift_allocObject();
  sub_1C9B25ACC((uint64_t)sub_1C987C9B0, v33, (uint64_t)&unk_1EA58EF48, v21, DynamicType);
  sub_1C9BEC838();
}

void sub_1C987AE3C()
{
}

void sub_1C987AE7C(void *a1, char a2)
{
}

void sub_1C987AEA4(void *a1, char a2)
{
  uint64_t v3 = v2 + *(void *)(*(void *)v2 + 144);
  if (*(unsigned char *)(v3 + 24) == 1)
  {
    id v4 = *(id *)v3;
    os_log_type_t v5 = *(void **)(v3 + 8);
    uint64_t v6 = *(void *)(v3 + 16);
    if ((a2 & 1) == 0)
    {
      id v25 = *(id *)v3;
      uint64_t v26 = v5;
      uint64_t v27 = 0;
      char v28 = 2;
      sub_1C9684114(v4, v5, v6, 1);
      sub_1C9BEC838();
    }
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    id v25 = a1;
    char v28 = 4;
    sub_1C9684114(v4, v5, v6, 1);
    sub_1C96E5998(a1, 1);
    sub_1C967BDAC((uint64_t)&v25);
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C9BECF88();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v8 = sub_1C9BECF78();
  os_log_type_t v9 = sub_1C9BEDC88();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v24 = v11;
    uint64_t v12 = *(void **)(v3 + 8);
    uint64_t v13 = *(void *)(v3 + 16);
    char v14 = *(unsigned char *)(v3 + 24);
    id v25 = *(id *)v3;
    uint64_t v26 = v12;
    uint64_t v27 = v13;
    char v28 = v14;
    sub_1C9684114(v25, v12, v13, v14);
    type metadata accessor for SiriKitHandleIntentFlow.State();
    swift_getWitnessTable();
    uint64_t v15 = sub_1C9BED5E8();
    id v25 = (id)sub_1C95FF228(v15, v16, &v24);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v8, v9, "HandleIntentFlow called in an unexpected state: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v11, -1, -1);
    MEMORY[0x1CB78C440](v10, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  id v18 = *(id *)v3;
  uint64_t v19 = *(void **)(v3 + 8);
  uint64_t v20 = *(void *)(v3 + 16);
  char v21 = *(unsigned char *)(v3 + 24);
  type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError();
  swift_getWitnessTable();
  uint64_t v22 = (void *)swift_allocError();
  *(void *)uint64_t v23 = v18;
  *(void *)(v23 + 8) = v19;
  *(void *)(v23 + 16) = v20;
  *(unsigned char *)(v23 + 24) = v21;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  id v25 = v22;
  char v28 = 4;
  sub_1C9684114(v18, v19, v20, v21);
  sub_1C967BDAC((uint64_t)&v25);
}

uint64_t sub_1C987B23C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 56) = v6;
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  *(void *)(v7 + 24) = a1;
  *(void *)(v7 + 64) = type metadata accessor for SiriKitEventPayload(0);
  *(void *)(v7 + 72) = swift_task_alloc();
  *(unsigned char *)(v7 + 96) = *a2;
  *(unsigned char *)(v7 + 97) = *a6;
  return MEMORY[0x1F4188298](sub_1C987B2F8, 0, 0);
}

void sub_1C987B2F8()
{
  __swift_project_boxed_opaque_existential_1(*(void **)(v0 + 24), *(void *)(*(void *)(v0 + 24) + 24));
  OUTLINED_FUNCTION_103_4();
  if (sub_1C9632DB0())
  {
    char v1 = *(unsigned char *)(v0 + 96);
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 32);
    id v4 = *(void **)(v0 + 40);
    uint64_t v6 = (void *)(*(void *)(v0 + 56) + *(void *)(**(void **)(v0 + 56) + 120));
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    type metadata accessor for SiriKitEvent(0);
    *(unsigned char *)uint64_t v2 = v1;
    id v7 = objc_msgSend(v4, sel_typeName);
    uint64_t v8 = sub_1C9BED568();
    uint64_t v10 = v9;

    *(void *)(v2 + 8) = v8;
    *(void *)(v2 + 16) = v10;
    *(void *)(v2 + 24) = v5;
    bzero((void *)(v2 + 32), 0x88uLL);
    *(void *)(v0 + 16) = v3;
    sub_1C9BEC838();
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_94();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C987B538()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1C987B660(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a2;
  _OWORD v5[2] = a3;
  void v5[3] = a4;
  v5[4] = a5;
  uint64_t v8 = *(void *)(v7 + 88);
  uint64_t v9 = *(void *)(v7 + 80);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v8 + 72) + **(int **)(v8 + 72));
  uint64_t v10 = (void *)swift_task_alloc();
  v5[5] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C967BCB4;
  return v12(a1, v5 + 2, v9, v8);
}

uint64_t sub_1C987B7BC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a2;
  _OWORD v5[2] = a3;
  void v5[3] = a4;
  v5[4] = a5;
  uint64_t v8 = *(void *)(v7 + 88);
  uint64_t v9 = *(void *)(v7 + 80);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v8 + 80) + **(int **)(v8 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  v5[5] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C967BCB4;
  return v12(a1, v5 + 2, v9, v8);
}

unint64_t sub_1C987B918()
{
  unint64_t v1 = 0xD000000000000010;
  uint64_t v2 = *(void **)v0;
  uint64_t v3 = *(void **)(v0 + 8);
  id v4 = *(void **)(v0 + 16);
  unsigned int v5 = *(unsigned __int8 *)(v0 + 24);
  switch(v5 >> 6)
  {
    case 1u:
      sub_1C9BEC838();
    case 2u:
      sub_1C9BEE188();
      sub_1C9BED6B8();
      type metadata accessor for INIntentResponseCode(0);
      sub_1C9BEE348();
      unint64_t v1 = 0;
      break;
    case 3u:
      return v1;
    default:
      sub_1C9684114(v2, v3, (char)v4, v5);
      sub_1C9BEE188();
      sub_1C9BED6B8();
      type metadata accessor for SiriKitHandleIntentFlow.State();
      swift_getWitnessTable();
      sub_1C9BEE5F8();
      sub_1C987D0D4(v2, v3, v4, v5);
      unint64_t v1 = 0;
      break;
  }
  return v1;
}

void sub_1C987BB70(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C987BB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a5;
  uint64_t v13 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(a7 + 32) + **(int **)(a7 + 32));
  uint64_t v11 = (void *)swift_task_alloc();
  v7[5] = v11;
  *uint64_t v11 = v7;
  v11[1] = sub_1C97A0464;
  return v13(a1, v7 + 2, a6, a7);
}

void sub_1C987BCB0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (a1[3])
  {
    type metadata accessor for CommandFailure();
    sub_1C97740B8();
    swift_allocError();
    *uint64_t v2 = v1;
    sub_1C9BEC838();
  }
  sub_1C9BEC838();
}

void sub_1C987BD6C()
{
}

uint64_t sub_1C987BDB4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C987BDFC()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C9877BB0();
}

uint64_t sub_1C987BEBC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C9877C68();
}

uint64_t sub_1C987BF54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  uint64_t v6 = (void *)OUTLINED_FUNCTION_94_3();
  sub_1C96841DC(v6, v7, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1C987BF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C96841DC(*(void **)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C9684BC8(v6, v7, v8);
  return a1;
}

uint64_t sub_1C987BFF4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C9684BC8(v4, v5, v6);
  return a1;
}

uint64_t sub_1C987C03C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C987C07C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.authenticationPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makePromptForDeviceUnlock(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeHandoffForAuthenticationResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 40))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makePreHandleIntentOutput(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 48))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeIntentHandledResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeContinueInAppResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeInProgressResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 72))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategy.makeFailureHandlingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.authenticationPolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makePromptForDeviceUnlock(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 32) + **(int **)(v9 + 32);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeHandoffForAuthenticationResponse(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 40) + **(int **)(v9 + 40);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makePreHandleIntentOutput(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 48) + **(int **)(v9 + 48);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeIntentHandledResponse(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 56) + **(int **)(v9 + 56);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeContinueInAppResponse(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 64) + **(int **)(v9 + 64);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeInProgressResponse(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 72) + **(int **)(v9 + 72);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of HandleIntentFlowStrategyAsync.makeFailureHandlingIntentResponse(rchRecord:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 80) + **(int **)(v9 + 80);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615010;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t type metadata accessor for SiriKitHandleIntentFlow.StrategyToHandoffSessionToCompanionStrategyAdapter()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C987C750(uint64_t a1)
{
}

uint64_t sub_1C987C778(uint64_t a1, uint64_t *a2)
{
  return sub_1C987D16C(a1, a2);
}

uint64_t *sub_1C987C790(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C987D1FC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1C9684114, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C967BE14);
}

uint64_t *sub_1C987C7BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C987D294(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C967BE14);
}

uint64_t sub_1C987C7D4(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFB && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 5) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C987C814(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C987C85C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 4u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1C987C874(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 5;
  if (a2 >= 5)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 5;
    *(void *)unint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

uint64_t sub_1C987C890(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SiriKitHandleIntentFlow.HandleIntentFlowError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C987C8E4()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C987C91C(void *a1, char a2)
{
}

void sub_1C987C928(void *a1, char a2)
{
}

uint64_t sub_1C987C934()
{
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v0();
  OUTLINED_FUNCTION_84_4();

  return swift_deallocObject();
}

uint64_t sub_1C987C9B0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 24) + 24))();
}

uint64_t sub_1C987CA1C()
{
  OUTLINED_FUNCTION_112();
  unint64_t v2 = (*(void *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  OUTLINED_FUNCTION_37();
  v3();
  uint64_t v4 = v0 + v2;
  swift_release();

  OUTLINED_FUNCTION_94_3();

  return swift_deallocObject();
}

uint64_t sub_1C987CAC0()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_44();
  return sub_1C987BB94(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C987CBB4()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_128();
  return sub_1C987B7BC(v3, v4, v5, v6, v7);
}

uint64_t sub_1C987CC44()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_128();
  return sub_1C987B660(v3, v4, v5, v6, v7);
}

uint64_t sub_1C987CCD4()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C987CD14()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_0(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C9615010;
  OUTLINED_FUNCTION_72_7();
  return sub_1C9879B7C(v5, v6, v7, v1);
}

uint64_t sub_1C987CDB8(uint64_t a1)
{
  return sub_1C967D180(a1, v1[5], v1[6], v1[7], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C987CDC8()
{
  return objectdestroy_147Tm(&qword_1EA58EFA0);
}

void sub_1C987CDD4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFA0);
  OUTLINED_FUNCTION_2_4(v0);
  uint64_t v1 = (uint64_t *)OUTLINED_FUNCTION_78_2();

  sub_1C987BCB0(v1);
}

uint64_t sub_1C987CE1C(uint64_t a1)
{
  return sub_1C969B34C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C987CE28()
{
  return objectdestroy_147Tm(&qword_1EA58EFA8);
}

uint64_t sub_1C987CE34()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFA8);
  OUTLINED_FUNCTION_2_4(v0);
  OUTLINED_FUNCTION_78_2();

  return sub_1C9879540();
}

uint64_t sub_1C987CE7C(uint64_t a1)
{
  return sub_1C9879390(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CE88()
{
  return objectdestroy_147Tm((uint64_t *)&unk_1EA599CE0);
}

uint64_t sub_1C987CE98(uint64_t a1)
{
  return sub_1C98790EC(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CEA4()
{
  return objectdestroy_147Tm((uint64_t *)&unk_1EA599CE0);
}

uint64_t sub_1C987CEB0(uint64_t a1)
{
  return sub_1C9878E48(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CEBC()
{
  return objectdestroy_147Tm((uint64_t *)&unk_1EA599CE0);
}

uint64_t sub_1C987CEC8(uint64_t a1)
{
  return sub_1C969BC10(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CED4()
{
  return objectdestroy_147Tm((uint64_t *)&unk_1EA599CE0);
}

uint64_t sub_1C987CEE0(uint64_t a1)
{
  return sub_1C969ABBC(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CEEC()
{
  return objectdestroy_147Tm((uint64_t *)&unk_1EA599CE0);
}

uint64_t sub_1C987CEF8(uint64_t a1)
{
  return sub_1C9878B20(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CF04()
{
  return objectdestroy_147Tm(&qword_1EA58EFB8);
}

uint64_t sub_1C987CF10()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
  OUTLINED_FUNCTION_2_4(v0);
  uint64_t v1 = OUTLINED_FUNCTION_78_2();

  return sub_1C9878CD0(v1);
}

uint64_t sub_1C987CF58(uint64_t a1)
{
  return sub_1C9878660(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C987CF64()
{
  return objectdestroy_147Tm((uint64_t *)&unk_1EA599CE0);
}

uint64_t objectdestroy_147Tm(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v1();
  OUTLINED_FUNCTION_84_4();

  return swift_deallocObject();
}

uint64_t sub_1C987CFF0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  OUTLINED_FUNCTION_2_4(v0);
  uint64_t v1 = OUTLINED_FUNCTION_78_2();
  return sub_1C97C140C(v1);
}

id sub_1C987D030(id result, void *a2, char a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 1) {
    sub_1C9BEC838();
  }
  if (!(a4 >> 6))
  {
    return sub_1C9684114(result, a2, a3, a4);
  }
  return result;
}

void sub_1C987D0C0(uint64_t a1)
{
}

void sub_1C987D0D4(void *a1, void *a2, void *a3, unsigned __int8 a4)
{
  if (a4 >> 6 == 1)
  {

    swift_release();
  }
  else if (!(a4 >> 6))
  {
    sub_1C967BE14(a1, a2, a3, a4);
  }
}

uint64_t sub_1C987D154(uint64_t a1, uint64_t *a2)
{
  return sub_1C987D16C(a1, a2);
}

uint64_t sub_1C987D16C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  char v6 = *((unsigned char *)a2 + 24);
  uint64_t v7 = OUTLINED_FUNCTION_94_3();
  v8(v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t *sub_1C987D1D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C987D1FC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_1C987D030, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C987D0D4);
}

uint64_t *sub_1C987D1FC(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  uint64_t v14 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *sub_1C987D27C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C987D294(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C987D0D4);
}

uint64_t *sub_1C987D294(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

uint64_t sub_1C987D2EC(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1D && *(unsigned char *)(a1 + 25))
    {
      unsigned int v2 = *(_DWORD *)a1 + 28;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x1F;
      if (v2 >= 0x1C) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C987D338(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1C)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 29;
    if (a3 >= 0x1D) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1D) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 8 * (((-a2 >> 2) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1C987D394(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1C987D3B0(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1C987D3C0(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    char v2 = *(unsigned char *)(result + 24) & 7 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 3;
    char v2 = -64;
  }
  *(unsigned char *)(result + 24) = v2;
  return result;
}

uint64_t sub_1C987D3EC()
{
  return swift_getWitnessTable();
}

void OUTLINED_FUNCTION_13_42(void *a1@<X8>)
{
}

void OUTLINED_FUNCTION_26_21()
{
}

uint64_t OUTLINED_FUNCTION_40_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_57_11()
{
  return sub_1C9BEDEA8();
}

__n128 OUTLINED_FUNCTION_63_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __n128 a17)
{
  *(void *)(a1 + 16) = v18;
  __n128 result = a17;
  *(__n128 *)(a1 + 24) = a17;
  *(void *)(a1 + 40) = v17;
  return result;
}

id OUTLINED_FUNCTION_71_6()
{
  char v2 = *(void **)(v0 + 336);
  return v2;
}

void OUTLINED_FUNCTION_80_6(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

id OUTLINED_FUNCTION_87_6(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return v13;
}

uint64_t OUTLINED_FUNCTION_92_3(_WORD *a1)
{
  *a1 = 0;
  return sub_1C9BECEC8();
}

uint64_t OUTLINED_FUNCTION_94_3()
{
  return v0;
}

void OUTLINED_FUNCTION_97_3(void *a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4, const char *a5)
{
  _os_signpost_emit_with_name_impl(a1, v7, a3, a4, a5, v5, v6, 2u);
}

void OUTLINED_FUNCTION_101_3()
{
}

uint64_t OUTLINED_FUNCTION_103_4()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_106_2()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_108_2()
{
  return v0;
}

id HandleIntentFlowFrameResult.intent.getter()
{
  return *v0;
}

id HandleIntentFlowFrameResult.intentResponse.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t HandleIntentFlowFrame.namespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C987D6D0()
{
  return *(id *)(v0 + 48);
}

void *sub_1C987D6D8()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

uint64_t sub_1C987D700(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return MEMORY[0x1F41817F8]();
}

void *sub_1C987D70C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = v1;
  return v1;
}

void sub_1C987D738(uint64_t a1)
{
  id v2 = *(void **)(v1 + 64);
  *(void *)(v1 + 64) = a1;
}

void HandleIntentFlowFrame.__allocating_init(delegate:app:intent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void HandleIntentFlowFrame.init(delegate:app:intent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = 0xD000000000000012;
  v3[3] = 0x80000001C9C1F870;
  v3[7] = 0;
  v3[8] = 0;
  v3[4] = a1;
  uint64_t v3[5] = a2;
  void v3[6] = a3;
  swift_unknownObjectRetain();
  sub_1C9BEC838();
}

uint64_t HandleIntentFlowFrame.__allocating_init(delegate:app:intent:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  HandleIntentFlowFrame.init(delegate:app:intent:deviceState:)(a1, a2, a3, a4);
  return v8;
}

void *HandleIntentFlowFrame.init(delegate:app:intent:deviceState:)(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4)
{
  _OWORD v4[2] = 0xD000000000000012;
  v4[3] = 0x80000001C9C1F870;
  v4[7] = 0;
  v4[8] = 0;
  v4[4] = a1;
  uint64_t v4[5] = a2;
  v4[6] = a3;
  sub_1C95FD5D8(a4, (uint64_t)(v4 + 9));
  return v4;
}

uint64_t sub_1C987D964(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA596060);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_222();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC88();
  sub_1C9BECE78();
  uint64_t v7 = *MEMORY[0x1E4F62260];
  sub_1C9BEADA8();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v8 + 104))(v3, v7);
  swift_storeEnumTagMultiPayload();
  a3(v3);
  return sub_1C95FE76C(v3, (uint64_t *)&unk_1EA596060);
}

void sub_1C987DAA8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v35 = a1;
  OUTLINED_FUNCTION_4_0();
  uint64_t v5 = v4;
  sub_1C9BECEE8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v38 = v7;
  uint64_t v39 = v6;
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EBC7A518;
  sub_1C9BECEB8();
  sub_1C9BEDD88();
  sub_1C9BECEA8();
  uint64_t v12 = *(void *)(v3 + 40);
  v26[1] = *(void *)(v3 + 32);
  uint64_t v34 = v10;
  id v13 = sub_1C987D6D0();
  uint64_t v16 = v5 + 80;
  uint64_t v15 = *(void *)(v5 + 80);
  uint64_t v14 = *(void *)(v16 + 8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, id, uint64_t, uint64_t))(v14 + 104))(&v41, v12, v13, v15, v14);

  uint64_t v17 = v41;
  uint64_t v18 = v42;
  uint64_t v31 = v42;
  uint64_t v32 = v41;
  uint64_t v19 = v44;
  uint64_t v27 = v43;
  uint64_t v20 = v46;
  uint64_t v40 = v45;
  uint64_t v29 = v46;
  uint64_t v30 = v44;
  sub_1C9BEDD78();
  sub_1C9BECEA8();
  uint64_t v21 = v35[4];
  uint64_t v33 = v35[3];
  v26[2] = v21;
  uint64_t v35 = __swift_project_boxed_opaque_existential_1(v35, v33);
  id v28 = sub_1C987D6D0();
  id v22 = sub_1C987D6D0();
  (*(void (**)(id, uint64_t, uint64_t))(v14 + 296))(v22, v15, v14);

  uint64_t v41 = v17;
  uint64_t v42 = v18;
  uint64_t v43 = v27;
  uint64_t v44 = v19;
  uint64_t v45 = v40;
  uint64_t v46 = v20;
  uint64_t v23 = (void *)OUTLINED_FUNCTION_7_0();
  uint64_t v25 = v36;
  uint64_t v24 = v37;
  _OWORD v23[2] = v3;
  v23[3] = v24;
  v23[4] = v25;
  swift_getAssociatedTypeWitness();
  sub_1C9BEC838();
}

void sub_1C987DD98(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  id v2 = *(void **)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBC7A518;
  os_log_type_t v5 = sub_1C9BEDC78();
  if (os_log_type_enabled(v4, v5))
  {
    sub_1C9BEDC78();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C9BEF570;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EA58F148);
    sub_1C9BEE348();
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 64) = sub_1C9604B38();
    *(void *)(v6 + 32) = 0;
    *(void *)(v6 + 40) = 0xE000000000000000;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_1C9BEDC68();
    sub_1C9BECE78();
    if ((v3 & 1) == 0)
    {
LABEL_5:
      swift_getAssociatedTypeWitness();
      id v7 = v2;
      id v8 = v1;
      sub_1C9BEC838();
    }
  }
  sub_1C9BEC838();
}

uint64_t sub_1C987E208(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v6 = v4;
  unint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v46 = a1;
  OUTLINED_FUNCTION_4_0();
  uint64_t v9 = v8;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_222();
  uint64_t v49 = sub_1C9BECEE8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v13 = v12;
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v18 = MEMORY[0x1F4188790](v16, v17);
  v42[0] = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v21 = (char *)v42 - v20;
  uint64_t v22 = *a2;
  uint64_t v44 = a2[1];
  uint64_t v45 = v22;
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  id v23 = (id)qword_1EBC7A518;
  sub_1C9BECEB8();
  uint64_t v24 = *(void *)(v6 + 32);
  uint64_t v50 = v21;
  id v25 = sub_1C987D6D0();
  uint64_t v26 = sub_1C987D6D8();
  uint64_t v29 = v9 + 80;
  uint64_t v28 = *(void *)(v9 + 80);
  uint64_t v27 = *(void *)(v29 + 8);
  uint64_t v30 = *(uint64_t (**)(id, void *, uint64_t, uint64_t, uint64_t))(v27 + 288);
  v42[1] = v24;
  char v31 = v30(v25, v26, v6 + 72, v28, v27);

  if ((v31 & 1) == 0)
  {
    sub_1C9BEDD88();
    uint64_t v32 = v50;
    sub_1C9BECEA8();
    uint64_t v43 = *(void *)(v6 + 40);
    uint64_t v33 = v42[0];
    uint64_t v34 = v32;
    uint64_t v35 = v49;
    (*(void (**)(void, char *, uint64_t))(v13 + 16))(v42[0], v34, v49);
    unint64_t v36 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v37 = (v15 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v28;
    *(void *)(v38 + 24) = v27;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v13 + 32))(v38 + v36, v33, v35);
    *(void *)(v38 + v37) = v6;
    uint64_t v39 = (void (**)(uint64_t))(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v40 = v48;
    *uint64_t v39 = v47;
    v39[1] = v40;
    sub_1C9BEC838();
  }
  type metadata accessor for SiriKitFlowFrameInput();
  sub_1C9BEAD88();
  swift_storeEnumTagMultiPayload();
  v47(v5);
  sub_1C95FE76C(v5, &qword_1EA596070);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v50, v49);
}

uint64_t sub_1C987E534(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEDD78();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BECEA8();
  if (a1)
  {
    swift_getErrorValue();
    uint64_t v17[3] = v6;
    id v10 = a1;
    uint64_t v11 = sub_1C9BEE6E8();
    uint64_t v13 = v12;
    type metadata accessor for CommandFailure();
    swift_allocObject();
    uint64_t v14 = CommandFailure.init(errorCode:reason:)(-1, v11, v13);
    sub_1C97740B8();
    swift_allocError();
    *uint64_t v15 = v14;
    sub_1C9BEC838();
  }
  sub_1C9BEDC78();
  sub_1C9BECE78();
  type metadata accessor for SiriKitFlowFrameInput();
  sub_1C9BEAD88();
  swift_storeEnumTagMultiPayload();
  a4(v9);
  return sub_1C95FE76C((uint64_t)v9, &qword_1EA596070);
}

uint64_t sub_1C987E85C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = (uint64_t)sub_1C987D70C();
  if (result)
  {
    char v3 = 0;
  }
  else
  {
    uint64_t v5 = sub_1C987D6D8();
    if (v5)
    {
      char v3 = v5;
      uint64_t result = (uint64_t)sub_1C987D6D0();
      char v4 = 0;
      goto LABEL_6;
    }
    type metadata accessor for CommandFailure();
    swift_allocObject();
    uint64_t v6 = CommandFailure.init(errorCode:reason:)(-1, 0xD000000000000034, 0x80000001C9C1F8E0);
    sub_1C97740B8();
    uint64_t result = swift_allocError();
    char v3 = 0;
    *uint64_t v7 = v6;
  }
  char v4 = 1;
LABEL_6:
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return result;
}

void sub_1C987E914(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v65 = a6;
  uint64_t v66 = a7;
  uint64_t v63 = a2;
  uint64_t v64 = a5;
  uint64_t v62 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v59 = (uint64_t)v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v13);
  long long v58 = (char *)v57 - v14;
  id v15 = objc_msgSend(a4, sel__intentResponseCode);
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v16 = swift_allocObject();
  OUTLINED_FUNCTION_8_34((__n128 *)v16, (__n128)xmmword_1C9BF1640);
  type metadata accessor for INIntentResponseCode(0);
  v57[1] = v17;
  sub_1C9BEE348();
  long long v18 = v67[0];
  *(void *)(v16 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v61 = sub_1C9604B38();
  *(void *)(v16 + 64) = v61;
  *(_OWORD *)(v16 + 32) = v18;
  *(void *)(v16 + 96) = OUTLINED_FUNCTION_10_34();
  *(void *)(v16 + 104) = swift_getWitnessTable();
  *(void *)(v16 + 72) = a3;
  *(void *)(v16 + 136) = OUTLINED_FUNCTION_10_34();
  *(void *)(v16 + 144) = swift_getWitnessTable();
  *(void *)(v16 + 112) = a4;
  id v19 = a3;
  id v20 = a4;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  if (objc_msgSend(v20, sel__requiresAuthentication))
  {
    sub_1C987FF30();
    uint64_t v21 = (void *)sub_1C9BEDEB8();
    sub_1C9BEDCA8();
    sub_1C9BECE78();

    sub_1C987F1C8(v62, v63, (uint64_t)v19, v22, v64, v65, v66);
  }
  switch((unint64_t)v15)
  {
    case 0uLL:
    case 1uLL:
    case 5uLL:
    case 7uLL:
    case 8uLL:
      id v23 = (void *)OUTLINED_FUNCTION_1_43();
      sub_1C987F5F0(v23, v24, v25, v26, v27, v28, v29);
    case 2uLL:
    case 6uLL:
      sub_1C9BEDC78();
      uint64_t v30 = OUTLINED_FUNCTION_7_38();
      *(_OWORD *)(v30 + 16) = xmmword_1C9BEF570;
      unint64_t v31 = 0xD000000000000019;
      if (v15 == (id)2) {
        unint64_t v31 = 0x65756E69746E6F63;
      }
      unint64_t v32 = 0x80000001C9C1F5B0;
      *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v30 + 64) = v61;
      if (v15 == (id)2) {
        unint64_t v32 = 0xED00007070416E49;
      }
      *(void *)(v30 + 32) = v31;
      *(void *)(v30 + 40) = v32;
      sub_1C9BECE78();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void *)OUTLINED_FUNCTION_1_43();
      sub_1C987F3E8(v33, v34, v35, v36, v37, v38, v39);
    case 3uLL:
      sub_1C9BEDC78();
      sub_1C9BECE78();
      uint64_t v40 = (void *)OUTLINED_FUNCTION_1_43();
      sub_1C987F50C(v40);
    case 4uLL:
      sub_1C9BEDC78();
      sub_1C9BECE78();
      uint64_t v41 = (void *)OUTLINED_FUNCTION_1_43();
      sub_1C987F2E0(v41);
    default:
      sub_1C9BEDC88();
      uint64_t v42 = OUTLINED_FUNCTION_7_38();
      OUTLINED_FUNCTION_8_34((__n128 *)v42, (__n128)xmmword_1C9BEF570);
      sub_1C9BEE348();
      long long v43 = v67[0];
      unint64_t v44 = v61;
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 64) = v44;
      *(_OWORD *)(v42 + 32) = v43;
      sub_1C9BECE78();
      swift_bridgeObjectRelease();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C9BECF88();
      uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EBC7A520);
      uint64_t v47 = *(void *)(v45 - 8);
      uint64_t v48 = (uint64_t)v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v58, v46, v45);
      __swift_storeEnumTagSinglePayload(v48, 0, 1, v45);
      uint64_t v49 = v48;
      uint64_t v50 = v59;
      sub_1C96C26E8(v49, v59);
      if (__swift_getEnumTagSinglePayload(v50, 1, v45) == 1)
      {
        sub_1C95FE76C(v59, &qword_1EBC7A230);
      }
      else
      {
        uint64_t v51 = sub_1C9BECF78();
        os_log_type_t v52 = sub_1C9BEDC88();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(void *)&v67[0] = v54;
          *(_DWORD *)uint64_t v53 = 136315650;
          uint64_t v55 = sub_1C9BEE1B8();
          *(void *)&long long v69 = sub_1C95FF228(v55, v56, (uint64_t *)v67);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          *(_WORD *)(v53 + 12) = 2048;
          *(void *)&long long v69 = 177;
          sub_1C9BEDF68();
          *(_WORD *)(v53 + 22) = 2080;
          *(void *)&long long v69 = sub_1C95FF228(0xD000000000000020, 0x80000001C9C1FAB0, (uint64_t *)v67);
          sub_1C9BEDF68();
          _os_log_impl(&dword_1C95F9000, v51, v52, "FatalError at %s:%lu - %s", (uint8_t *)v53, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1CB78C440](v54, -1, -1);
          MEMORY[0x1CB78C440](v53, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v59, v45);
      }
      if (qword_1EBC78750 != -1) {
        swift_once();
      }
      long long v69 = 0u;
      long long v70 = 0u;
      uint64_t v68 = 0;
      memset(v67, 0, sizeof(v67));
      sub_1C9BEC838();
  }
}

void sub_1C987F1C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = (void *)OUTLINED_FUNCTION_7_0();
  _OWORD v10[2] = v7;
  v10[3] = a6;
  v10[4] = a7;
  sub_1C9BEC838();
}

void sub_1C987F2E0(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_11_39(v1);
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_9_35();
  sub_1C9BEC838();
}

void sub_1C987F3C4(void *a1, char a2, uint64_t a3, void (*a4)(void *))
{
}

void sub_1C987F3E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = (void *)OUTLINED_FUNCTION_7_0();
  _OWORD v10[2] = v7;
  v10[3] = a6;
  v10[4] = a7;
  sub_1C9BEC838();
}

void sub_1C987F50C(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v1 = (void *)OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_11_39(v1);
  OUTLINED_FUNCTION_9_35();
  OUTLINED_FUNCTION_9_35();
  sub_1C9BEC838();
}

void sub_1C987F5F0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  OUTLINED_FUNCTION_4_0();
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C9BEF570;
  objc_msgSend(a4, sel__code);
  uint64_t v14 = sub_1C9BEE5A8();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v13 + 64) = sub_1C9604B38();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = (void *)OUTLINED_FUNCTION_7_0();
  v17[2] = v8;
  uint64_t v17[3] = a6;
  void v17[4] = a7;
  sub_1C9BEC838();
}

void sub_1C987F7D4(void *a1, char a2, void (*a3)(void *))
{
  if (a2)
  {
    id v5 = a1;
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC88();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C9BEF570;
    swift_getErrorValue();
    uint64_t v7 = sub_1C9BEE6E8();
    uint64_t v9 = v8;
    *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v6 + 64) = sub_1C9604B38();
    *(void *)(v6 + 32) = v7;
    *(void *)(v6 + 40) = v9;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    id v10 = a1;
    a3(a1);
    sub_1C97183F4(a1, 1);
    sub_1C97183F4(a1, 1);
  }
  else
  {
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC78();
    sub_1C9BECE78();
    a3(0);
  }
}

id *HandleIntentFlowFrame.deinit()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 9));
  return v0;
}

uint64_t HandleIntentFlowFrame.__deallocating_deinit()
{
  HandleIntentFlowFrame.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C987FA28()
{
  return HandleIntentFlowFrame.namespace.getter();
}

uint64_t sub_1C987FA4C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return sub_1C987D964(a1, a2, a3);
}

void sub_1C987FA64(void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C987FA88(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  return sub_1C987E208(a1, a2, a3, a4);
}

uint64_t sub_1C987FAAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C987E85C(a1);
}

void sub_1C987FAD4(uint64_t a1)
{
}

uint64_t sub_1C987FAE0()
{
  sub_1C9BECEE8();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C987FB98(void *a1)
{
  uint64_t v3 = *(void *)(sub_1C9BECEE8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void (**)(char *))(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1C987E534(a1, v1 + v4, v6, v7);
}

uint64_t sub_1C987FC44(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_1C987FC80(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void sub_1C987FCB4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 8);
}

uint64_t sub_1C987FCF0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t sub_1C987FD48(uint64_t a1, _OWORD *a2)
{
  unint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t type metadata accessor for HandleIntentFlowFrameResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C987FDA0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for HandleIntentFlowFrame()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for HandleIntentFlowFrame(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HandleIntentFlowFrame);
}

uint64_t dispatch thunk of HandleIntentFlowFrame.__allocating_init(delegate:app:intent:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.__allocating_init(delegate:app:intent:deviceState:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.onInput(controller:input:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.execute(controller:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.action(renderer:args:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of HandleIntentFlowFrame.exit(controller:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

void sub_1C987FF1C(void *a1, char a2)
{
  sub_1C987F3C4(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void *))(v2 + 24));
}

unint64_t sub_1C987FF30()
{
  unint64_t result = qword_1EBC7A3C0;
  if (!qword_1EBC7A3C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBC7A3C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_43()
{
  return *(void *)(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_4_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return a11;
}

uint64_t OUTLINED_FUNCTION_7_38()
{
  return swift_allocObject();
}

__n128 *OUTLINED_FUNCTION_8_34(__n128 *result, __n128 a2)
{
  result[1] = a2;
  *(void *)(v3 - 176) = 0;
  *(void *)(v3 - 168) = 0xE000000000000000;
  *(void *)(v3 - 128) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_34()
{
  return swift_getAssociatedTypeWitness();
}

void *OUTLINED_FUNCTION_11_39(void *result)
{
  result[2] = v2;
  result[3] = v3;
  result[4] = v1;
  return result;
}

uint64_t dispatch thunk of HandleIntentResponseGenerating.processInterstitialView<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 16))();
}

uint64_t dispatch thunk of HandleIntentResponseGenerating.processIntentHandledResponse<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 24))();
}

uint64_t dispatch thunk of HandleIntentResponseGenerating.processInProgressResponse<A>(delegate:app:intent:intentResponse:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 32))();
}

void sub_1C9880078(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_14();
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v16 = OUTLINED_FUNCTION_3_31();
  v17(v16);
  long long v18 = (void *)swift_allocObject();
  v18[2] = a7;
  void v18[3] = a8;
  v18[4] = a4;
  void v18[5] = a5;
  v18[6] = a6;
  v18[7] = a1;
  v18[8] = a2;
  void v18[9] = a3;
  v18[10] = v22;
  swift_getAssociatedConformanceWitness();
  id v19 = a4;
  sub_1C9BEC838();
}

void sub_1C9880244(uint64_t a1, void *a2, void (*a3)(void *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness, v13);
  uint64_t v14 = *(void **)a1;
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 48);
  unint64_t v18 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  if (*(unsigned char *)(a1 + 72) != 1)
  {
    if (v15)
    {
      if (a2)
      {
        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(a10 + 152);
        uint64_t v29 = *(void *)(a1 + 32);
        uint64_t v30 = *(void *)(a1 + 40);
        uint64_t v31 = *(void *)(a1 + 48);
        uint64_t v38 = *(void *)(a1 + 56);
        sub_1C988153C(v14, v15, v17, v16, v29, v30, v19, v18, v20, 0);
        id v32 = a2;
        v28(a9, a10);
        uint64_t v26 = (void *)swift_allocObject();
        v26[2] = a9;
        void v26[3] = a10;
        v26[4] = v14;
        v26[5] = v15;
        v26[6] = v17;
        v26[7] = v16;
        v26[8] = v29;
        v26[9] = v30;
        v26[10] = v31;
        v26[11] = v38;
        v26[12] = v20;
        v26[13] = a8;
        v26[14] = a5;
        v26[15] = a7;
        v26[16] = a2;
        v26[17] = a6;
        v26[18] = a3;
        v26[19] = a4;
        swift_getAssociatedConformanceWitness();
        id v27 = v32;
        sub_1C9BEC838();
      }
      if (qword_1EBC7A3B0 == -1) {
        goto LABEL_13;
      }
    }
    else if (qword_1EBC7A3B0 == -1)
    {
      goto LABEL_13;
    }
    swift_once();
LABEL_13:
    sub_1C9BEDC78();
    sub_1C9BECE78();
    a3(0, 0);
    return;
  }
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v22 = *(void *)(a1 + 40);
  uint64_t v23 = v19;
  unint64_t v37 = v18;
  id v24 = v14;
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC88();
  sub_1C9BECE78();
  id v25 = v14;
  a3(v14, 1);
  sub_1C9881484(v14, v15, v17, v16, v21, v22, v23, v37, v20, 1);

  sub_1C9881484(v14, v15, v17, v16, v21, v22, v23, v37, v20, 1);
}

void sub_1C988070C(unint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(unint64_t, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v43 = a8;
  uint64_t v47 = a6;
  uint64_t v46 = a5;
  uint64_t v45 = a4;
  uint64_t v44 = a11;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  MEMORY[0x1F4188790](v16 - 8, v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for AceOutput();
  uint64_t v22 = MEMORY[0x1F4188790](v20 - 8, v21);
  MEMORY[0x1F4188790](v22, v23);
  if (a2)
  {
    id v33 = (id)a1;
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC88();
    sub_1C9BECE78();
    id v34 = (id)a1;
    a9(a1, 1);
    sub_1C973235C((id)a1, 1);
    sub_1C973235C((id)a1, 1);
    return;
  }
  if (!(a1 >> 62))
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v41 = a9;
    uint64_t v42 = a10;
    memcpy(__dst, a3, sizeof(__dst));
    uint64_t v24 = v45;
    sub_1C95FD5F0(v45 + 64, (uint64_t)v51);
    unsigned int v38 = *(unsigned __int8 *)(*(void *)(v24 + 16) + 16);
    uint64_t v39 = a3;
    sub_1C9732368((uint64_t)(a3 + 6), (uint64_t)v53);
    sub_1C9732368((uint64_t)v53, (uint64_t)v54);
    uint64_t v25 = a7;
    unint64_t v37 = v55 - 3;
    uint64_t v26 = v47;
    uint64_t v27 = v44;
    char v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a12 + 320))(v47, v44, a12);
    uint64_t v29 = type metadata accessor for NLContextUpdate();
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 1, 1, v29);
    LOBYTE(v48) = 33;
    uint64_t v30 = *(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t))(a12 + 304);
    uint64_t v40 = v25;
    uint64_t v31 = v30(&v48, v26, v25, v27, a12);
    if (v31)
    {
      uint64_t v32 = v31;
      *((void *)&v49 + 1) = type metadata accessor for DefaultFlowActivity();
      unint64_t v50 = sub_1C97A51E8();
      *(void *)&long long v48 = v32;
    }
    else
    {
      unint64_t v50 = 0;
      long long v49 = 0u;
      long long v48 = 0u;
    }
    static AceOutputHelper.makeConfirmedViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)(__dst, v51, v38, a1, v37 < 0xFFFFFFFFFFFFFFFELL, v28 & 1, v19, MEMORY[0x1E4FBC860], &v48);
    sub_1C95FE7C0((uint64_t)v19, &qword_1EBC77C70);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    sub_1C95FE7C0((uint64_t)&v48, (uint64_t *)&unk_1EBC789D0);
    sub_1C992A3B0();
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C9BEE3C8();
  sub_1C973235C((id)a1, 0);
  if (v35) {
    goto LABEL_6;
  }
LABEL_4:
  if (*(void *)(a3[4] + 16) || *(void *)(a3[5] + 16)) {
    goto LABEL_6;
  }
  a9(0, 0);
}

void sub_1C9880C88(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, void (*a9)(void *, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12)
{
  if ((a2 & 1) == 0)
  {
    sub_1C95FD5F0(a3 + 104, (uint64_t)v22);
    HIWORD(v21) = 8477;
    LOWORD(v21) = 0;
    sub_1C9AB1B40((uint64_t)v22, (uint64_t)&v21 + 7, a4, a5, a6, (uint64_t)&v21 + 6, 0, 1, a7, (uint64_t)&v20, *a8, a8[1], a11, a12, v19, 3, v21, v22[0], v22[1],
      v22[2],
      v22[3],
      (uint64_t *)v22[4],
      v22[5],
      v22[6],
      (void *)v22[7],
      v22[8]);
  }
  id v18 = a1;
  a9(a1, 1);

  sub_1C97183F4(a1, 1);
}

#error "1C9880DDC: call analysis failed (funcsize=14)"

void sub_1C9880DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_14();
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v16 = OUTLINED_FUNCTION_3_31();
  v17(v16);
  id v18 = (void *)swift_allocObject();
  v18[2] = a7;
  void v18[3] = a8;
  v18[4] = a5;
  void v18[5] = a6;
  v18[6] = v8;
  v18[7] = a2;
  v18[8] = a1;
  void v18[9] = a3;
  v18[10] = a4;
  swift_getAssociatedConformanceWitness();
  sub_1C9BEC838();
}

void sub_1C9880FB4(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = MEMORY[0x1F4188790](AssociatedTypeWitness, v16);
  uint64_t v19 = *(void **)a1;
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v26 = *(uint64_t **)(a1 + 16);
  uint64_t v27 = *(void *)(a1 + 24);
  uint64_t v28 = *(void *)(a1 + 32);
  uint64_t v29 = *(void **)(a1 + 40);
  unint64_t v20 = *(void *)(a1 + 56);
  uint64_t v30 = *(void *)(a1 + 48);
  uint64_t v25 = *(void *)(a1 + 64);
  if (*(unsigned char *)(a1 + 72) != 1)
  {
    v36[0] = 7;
    char v35 = 76;
    uint64_t v33 = 0;
    LOWORD(v34) = 0;
    sub_1C9AB1B40(a4 + 104, (uint64_t)v36, a5, a6, a7, (uint64_t)&v35, 0, 1, a8, (uint64_t)&v33, (uint64_t)v19, v18, a9, a10, v22, a7, a4, v17, a5,
      a6,
      v25,
      v26,
      v27,
      v28,
      v29,
      v30);
  }
  id v21 = v19;
  a2(v19, 1);

  sub_1C9669B5C(v19, v18, (uint64_t)v26, v27, v28, (uint64_t)v29, v30, v20, v25, 1);
}

void sub_1C98812E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_1C988130C()
{
  return sub_1C9880DB4();
}

void sub_1C9881330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

uint64_t sub_1C9881354()
{
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C98813B4(uint64_t a1)
{
  return sub_1C9881444(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1C9880FB4);
}

uint64_t sub_1C98813CC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C988142C(uint64_t a1)
{
  return sub_1C9881444(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void, void))sub_1C9880244);
}

uint64_t sub_1C9881444(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void, void))
{
  return a2(a1, v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[2], v2[3]);
}

void sub_1C9881484(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10)
{
  if (a10) {

  }
  else {
    sub_1C988149C((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_1C988149C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C9650368(a7, a8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C988153C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, char a10)
{
  if (a10) {
    return a1;
  }
  else {
    return (id)sub_1C9731CBC((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_1C9881554()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1C98815F4(unint64_t a1, char a2)
{
  sub_1C988070C(a1, a2 & 1, (void *)(v2 + 32), *(void *)(v2 + 104), *(void *)(v2 + 112), *(void *)(v2 + 120), *(void *)(v2 + 128), *(void *)(v2 + 136), *(void (**)(unint64_t, uint64_t))(v2 + 144), *(void *)(v2 + 152), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C9881638()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 128) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1C98816D8(void *a1, char a2)
{
  sub_1C9880C88(a1, a2 & 1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), (uint64_t *)(v2 + 72), *(void (**)(void *, uint64_t))(v2 + 144), *(void *)(v2 + 152), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C988171C()
{
  return swift_initClassMetadata2();
}

void *sub_1C988177C@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_0();
  sub_1C9881A44((uint64_t)&v8);
  uint64_t result = v8;
  int v3 = v10 >> 6;
  if (v3 == 2)
  {
    unint64_t v4 = 0;
LABEL_6:
    char v5 = 1;
    goto LABEL_7;
  }
  unint64_t v4 = v9;
  if (v3 != 1)
  {
    sub_1C9882900(v8, v9, v10);
    type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError();
    swift_getWitnessTable();
    uint64_t result = (void *)OUTLINED_FUNCTION_11_3();
    uint64_t v7 = v6;
    unint64_t v4 = 0;
    *uint64_t v7 = 0;
    goto LABEL_6;
  }
  char v5 = v10 & 1;
LABEL_7:
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return result;
}

void sub_1C9881838()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

id sub_1C9881A44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 40);
  int v3 = *(void **)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C9882874(v2, v3, v4);
}

void sub_1C9881A58(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  unsigned __int8 v4 = *(void **)(v1 + 40);
  int v3 = *(void **)(v1 + 48);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)a1;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(v1 + 56) = v2;
  sub_1C9882900(v4, v3, v5);

  sub_1C9881838();
}

uint64_t sub_1C9881A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = a3;
  *(unsigned char *)(result + 56) = -64;
  return result;
}

void sub_1C9881AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HandleIntentThenRespondFlow();
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(a1, a2, v4, WitnessTable);
}

uint64_t sub_1C9881B94(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  OUTLINED_FUNCTION_4_0();
  v2[12] = v3;
  return MEMORY[0x1F4188298](sub_1C9881BC4, 0, 0);
}

uint64_t sub_1C9881BC4()
{
  uint64_t v17 = v0;
  sub_1C9881A44(v0 + 40);
  unint64_t v2 = *(void *)(v0 + 40);
  unint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 112) = v1;
  unsigned int v3 = *(unsigned __int8 *)(v0 + 56);
  if ((v3 >> 6) - 1 >= 2)
  {
    if (v3 >> 6)
    {
      if (!(v1 | v2) && v3 == 192)
      {
        long long v15 = xmmword_1C9BF2260;
        char v16 = -64;
        sub_1C9881A58((uint64_t)&v15);
      }
      type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError();
      swift_getWitnessTable();
      uint64_t v11 = swift_allocError();
      *uint64_t v12 = 1;
      long long v15 = (unint64_t)v11;
      char v16 = 0x80;
      sub_1C9881A58((uint64_t)&v15);
    }
    uint64_t v14 = (uint64_t (*)(unint64_t, unint64_t))(*(void *)(*(void *)(v0 + 88) + 24)
                                                                     + **(int **)(*(void *)(v0 + 88) + 24));
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v9;
    *id v9 = v0;
    v9[1] = sub_1C9881E84;
    return v14(v2, v1);
  }
  else
  {
    sub_1C9882900((void *)v2, (void *)v1, v3);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C9BECF88();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
    unsigned __int8 v5 = sub_1C9BECF78();
    os_log_type_t v6 = sub_1C9BEDC78();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1C95F9000, v5, v6, "Nothing left to do. Flow is complete and will exit.", v7, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v8 = *(void *)(v0 + 80);

    static ExecuteResponse.complete()(v8);
    OUTLINED_FUNCTION_22_0();
    return v13();
  }
}

uint64_t sub_1C9881E84(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = v3;
  *(void *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unsigned __int8 v5 = sub_1C9882038;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    unsigned __int8 v5 = sub_1C9881F88;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

void sub_1C9881F88()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void **)(v0 + 112);
  v4[0] = *(id *)(v0 + 104);
  v4[1] = v1;
  char v5 = 64;
  id v2 = v4[0];
  id v3 = v1;
  sub_1C9881A58((uint64_t)v4);
}

void sub_1C9882038()
{
  uint64_t v15 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 128);
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  char v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 128);
  if (v7)
  {
    id v9 = (uint8_t *)swift_slowAlloc();
    v13[0] = (id)swift_slowAlloc();
    *(_DWORD *)id v9 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1C9BEE6E8();
    *(void *)(v0 + 72) = sub_1C95FF228(v10, v11, (uint64_t *)v13);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "Unexpected error while attempting to create response flow: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  v13[0] = *(id *)(v0 + 128);
  v13[1] = 0;
  char v14 = 0x80;
  id v12 = v13[0];
  sub_1C9881A58((uint64_t)v13);
}

void sub_1C9882278()
{
}

void sub_1C98822B8()
{
}

void sub_1C98822F8()
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_1C9881A44((uint64_t)&v26);
  BOOL v5 = v28 >= 0xC0u && v26 == (void *)1 && v27 == 0;
  if (v5 && v28 == 192)
  {
    if ((v3 & 1) == 0)
    {
      uint64_t v17 = qword_1EBC7A3B8;
      id v18 = v1;
      id v19 = v2;
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1C9BECF88();
      __swift_project_value_buffer(v20, (uint64_t)qword_1EBC7A520);
      id v21 = sub_1C9BECF78();
      os_log_type_t v22 = sub_1C9BEDC78();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl(&dword_1C95F9000, v21, v22, "Received a successful result from HandleIntentFlow.", v23, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v26 = v1;
      uint64_t v27 = v2;
      unsigned __int8 v28 = 0;
      id v24 = v18;
      id v25 = v19;
      sub_1C9881A58((uint64_t)&v26);
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C9BECF88();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBC7A520);
    uint64_t v13 = sub_1C9BECF78();
    os_log_type_t v14 = sub_1C9BEDC88();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1C95F9000, v13, v14, "Received a non-successful result from HandleIntentFlow. Skipping response and returning result.", v15, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v26 = v1;
    uint64_t v27 = v2;
    unsigned __int8 v28 = 65;
    id v16 = v1;
  }
  else
  {
    sub_1C9882900(v26, v27, v28);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C9BECF88();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
    BOOL v7 = sub_1C9BECF78();
    os_log_type_t v8 = sub_1C9BEDC88();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)id v9 = 0;
      _os_log_impl(&dword_1C95F9000, v7, v8, "Called in an unexpected state. Moving to error state.", v9, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError();
    swift_getWitnessTable();
    uint64_t v10 = (void *)OUTLINED_FUNCTION_11_3();
    *unint64_t v11 = 1;
    uint64_t v26 = v10;
    uint64_t v27 = 0;
    unsigned __int8 v28 = 0x80;
  }
  sub_1C9881A58((uint64_t)&v26);
}

uint64_t sub_1C9882608()
{
  unint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t result = 0x6F5479646165722ELL;
  switch(v3 >> 6)
  {
    case 1u:
      uint64_t result = 0x74656C706D6F632ELL;
      break;
    case 2u:
      swift_getErrorValue();
      sub_1C9882874((id)v1, (void *)v2, v3);
      sub_1C9BEE6E8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      sub_1C9882900((void *)v1, (void *)v2, v3);
      uint64_t result = 0x28726F7272652ELL;
      break;
    case 3u:
      if (v3 == 192 && (v2 | v1) == 0) {
        uint64_t result = 0x646574726174732ELL;
      }
      else {
        uint64_t result = 0x676E69746961772ELL;
      }
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1C9882774(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C970DB68(*a1, *a2);
}

uint64_t sub_1C9882788()
{
  return sub_1C970DBA0();
}

uint64_t sub_1C9882798()
{
  return sub_1C970DB78();
}

uint64_t sub_1C98827A8()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C98827F0()
{
  swift_release();
  swift_release();
  sub_1C9882900(*(void **)(v0 + 40), *(void **)(v0 + 48), *(unsigned char *)(v0 + 56));
  return v0;
}

uint64_t sub_1C9882824()
{
  sub_1C98827F0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HandleIntentThenRespondFlow()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1C9882874(id result, void *a2, unsigned __int8 a3)
{
  int v4 = a3 >> 6;
  if (v4 == 2)
  {
    return result;
  }
  if (v4 != 1)
  {
    if (a3 >> 6) {
      return result;
    }
    id v5 = result;
    uint64_t result = a2;
    return result;
  }
  char v6 = a3 & 1;
  return sub_1C96841DC(result, a2, v6);
}

void sub_1C98828F0(uint64_t a1)
{
}

void sub_1C9882900(void *a1, void *a2, unsigned __int8 a3)
{
  int v4 = a3 >> 6;
  if (v4 == 2)
  {
LABEL_6:

    return;
  }
  if (v4 != 1)
  {
    if (a3 >> 6) {
      return;
    }

    a1 = a2;
    goto LABEL_6;
  }
  char v5 = a3 & 1;
  sub_1C9684BC8(a1, a2, v5);
}

uint64_t sub_1C988297C(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C9882874(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1C98829C8(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  int v4 = *(void **)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C9882874(*(id *)a2, v4, v5);
  char v6 = *(void **)a1;
  BOOL v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C9882900(v6, v7, v8);
  return a1;
}

uint64_t sub_1C9882A20(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  int v4 = *(void **)a1;
  unsigned __int8 v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C9882900(v4, v5, v6);
  return a1;
}

uint64_t sub_1C9882A68(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7D && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7C) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C9882AB4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 125;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1C9882B08(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1C9882B24(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1C9882B34(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    char v2 = *(unsigned char *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    char v2 = -64;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

uint64_t type metadata accessor for HandleIntentThenRespondFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C9882B74(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9882B98(uint64_t a1)
{
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_1C966D420;
  return sub_1C9881B94(a1);
}

void *sub_1C9882C34@<X0>(uint64_t a1@<X8>)
{
  return sub_1C988177C(a1);
}

uint64_t sub_1C9882C58(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for HandleIntentThenRespondFlow.HandleIntentThenRespondFlowError()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C9882CAC()
{
}

unsigned char *sub_1C9882CB4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9882D80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C9882DA8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9882DC4()
{
  return swift_getWitnessTable();
}

void static SimpleHandoffSessionToCompanionFlowHelper.makeHandoffFlowAsync(deviceState:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync();
  uint64_t v4 = swift_allocObject();
  sub_1C95FD654(a1, (uint64_t)v6);
  sub_1C95FD654(a2, (uint64_t)v5);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  OUTLINED_FUNCTION_44_14();
  sub_1C9742DFC(v4, (uint64_t)v6, (uint64_t)v5);
}

uint64_t type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync()
{
  return self;
}

uint64_t type metadata accessor for HandoffSessionToCompanionFlowAsync()
{
  return self;
}

uint64_t sub_1C9882EA4()
{
  OUTLINED_FUNCTION_24();
  v0[176] = v1;
  v0[175] = v2;
  v0[174] = v3;
  v0[173] = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v5);
  v0[177] = OUTLINED_FUNCTION_16();
  uint64_t v6 = type metadata accessor for AceOutput();
  v0[178] = v6;
  OUTLINED_FUNCTION_22(v6);
  v0[179] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9882F54()
{
  OUTLINED_FUNCTION_33();
  swift_asyncLet_begin();
  uint64_t v1 = OUTLINED_FUNCTION_50();
  sub_1C95FD654(v1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1440) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C9883038;
  return static ResponseTemplates.continueOnCompanion(deviceState:)(v0 + 696, v0 + 808);
}

uint64_t sub_1C9883038()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 808;
  OUTLINED_FUNCTION_60_11();
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 1448) = v0;
  swift_task_dealloc();
  sub_1C9697900(v4, &qword_1EBC789E0);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void sub_1C9883124()
{
  uint64_t v1 = *(void *)(v0 + 1416);
  uint64_t v2 = *(void **)(v0 + 1392);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v3, v4);
  uint64_t v5 = type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_37_1(v1, v6, v7, v5);
  *(void *)(v0 + 1000) = 0;
  *(_OWORD *)(v0 + 968) = 0u;
  *(_OWORD *)(v0 + 984) = 0u;
  static AceOutputHelper.makeCompletionViewOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:requestEndBehavior:)();
}

uint64_t sub_1C9883408()
{
  *(void *)(v1 + 1456) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883944);
  }
  else {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883434);
  }
}

uint64_t sub_1C9883434()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  sub_1C9630A64(*(void *)(v0 + 1432));
  OUTLINED_FUNCTION_28_18();
  OUTLINED_FUNCTION_15_27();
  OUTLINED_FUNCTION_44();
  return MEMORY[0x1F41881D0](v1);
}

uint64_t sub_1C98834B4()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98896BC);
}

uint64_t sub_1C98834C8()
{
  *(void *)(v1 + 1472) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883A40);
  }
  else {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98834F4);
  }
}

uint64_t sub_1C98834F4()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = *(void *)(v0 + 1464);
  uint64_t v2 = *(void **)(v0 + 1384);
  sub_1C9630A64(*(void *)(v0 + 1432));
  uint64_t v3 = *(void *)(v0 + 1272);
  uint64_t v4 = *(void *)(v0 + 1280);
  v2[8] = 0;
  v2[9] = 0;
  sub_1C95FD5D8((long long *)(v0 + 1128), (uint64_t)v2);
  v2[5] = v3;
  v2[6] = v4;
  v2[7] = v1;
  swift_bridgeObjectRetain();
  uint64_t v5 = OUTLINED_FUNCTION_15_27();
  return MEMORY[0x1F41881D0](v5);
}

uint64_t sub_1C98835AC()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98835C0);
}

uint64_t sub_1C98835C0()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C988362C()
{
  *(void *)(v1 + 1480) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883B48);
  }
  else {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883658);
  }
}

uint64_t sub_1C9883658()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  sub_1C9630A64(*(void *)(v0 + 1432));
  OUTLINED_FUNCTION_28_18();
  OUTLINED_FUNCTION_15_27();
  OUTLINED_FUNCTION_44();
  return MEMORY[0x1F41881D0](v1);
}

uint64_t sub_1C98836D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  id v25 = *(void **)(v22 + 1448);
  uint64_t v26 = sub_1C9BECF88();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
  id v27 = v25;
  id v28 = v25;
  uint64_t v29 = sub_1C9BECF78();
  os_log_type_t v30 = sub_1C9BEDC88();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *(void **)(v22 + 1448);
  if (v31)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    a10 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v33 = 136315138;
    swift_getErrorValue();
    uint64_t v34 = sub_1C9BEE6E8();
    *(void *)(v22 + 1288) = sub_1C95FF228(v34, v35, &a10);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v29, v30, "Unexpected error calling continueOnCompanion: %s", v33, 0xCu);
    OUTLINED_FUNCTION_41_0();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  swift_willThrow();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_10_1();
  return MEMORY[0x1F41881D0](v36);
}

uint64_t sub_1C98838D0()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98838E4);
}

uint64_t sub_1C98838E4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_56_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9883944()
{
  OUTLINED_FUNCTION_33();
  sub_1C9630A64(*(void *)(v0 + 1432));
  __swift_destroy_boxed_opaque_existential_1(v0 + 888);
  return MEMORY[0x1F41881D0](v0 + 16);
}

uint64_t sub_1C98839CC()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98839E0);
}

uint64_t sub_1C98839E0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_56_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9883A40()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void *)(v0 + 1432);

  sub_1C9630A64(v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + 1128);
  uint64_t v2 = OUTLINED_FUNCTION_15_27();
  return MEMORY[0x1F41881D0](v2);
}

uint64_t sub_1C9883AD4()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883AE8);
}

uint64_t sub_1C9883AE8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_56_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9883B48()
{
  OUTLINED_FUNCTION_33();
  sub_1C9630A64(*(void *)(v0 + 1432));
  __swift_destroy_boxed_opaque_existential_1(v0 + 1048);
  uint64_t v1 = OUTLINED_FUNCTION_15_27();
  return MEMORY[0x1F41881D0](v1);
}

uint64_t sub_1C9883BC8()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883BDC);
}

uint64_t sub_1C9883BDC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_56_11();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void HandoffSessionToCompanionFlowStrategy.makeHandoffResponse(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_1EA58F2E0;
  v11[5] = 0;
  v11[6] = a1;
  v11[7] = a2;
  __swift_getEnumTagSinglePayload(v9, 1, v10);
  sub_1C9BEC838();
}

uint64_t HandoffResponse.init(output:companionNotificationText:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  a4[8] = 0;
  a4[9] = 0;
  uint64_t result = sub_1C95FD5D8(a1, (uint64_t)a4);
  a4[5] = a2;
  a4[6] = a3;
  a4[7] = 0;
  return result;
}

uint64_t HandoffSessionToCompanionFlowAsync.__allocating_init<A>(strategy:deviceState:outputPublisher:)()
{
  uint64_t v0 = OUTLINED_FUNCTION_44_14();
  HandoffSessionToCompanionFlowAsync.init<A>(strategy:deviceState:outputPublisher:)();
  return v0;
}

uint64_t sub_1C9883EF8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_0(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C9615888;
  return HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(v1);
}

uint64_t sub_1C9883F84(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9883F9C);
}

void sub_1C9883F9C()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_59_8();
  __swift_destroy_boxed_opaque_existential_1(v0);
  uint64_t v3 = *(void *)(v2 + 1336);
  v1[5] = type metadata accessor for RefreshableDeviceState();
  v1[6] = &protocol witness table for RefreshableDeviceState;
  v1[2] = v3;
  sub_1C9BEC838();
}

uint64_t sub_1C988409C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 16;
  OUTLINED_FUNCTION_60_11();
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 112) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v4);
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
}

uint64_t HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98841B4);
}

void sub_1C98841B4()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_59_8();
  __swift_destroy_boxed_opaque_existential_1(v0);
  uint64_t v3 = *(void *)(v2 + 1336);
  v1[5] = type metadata accessor for RefreshableDeviceState();
  v1[6] = &protocol witness table for RefreshableDeviceState;
  v1[2] = v3;
  sub_1C9BEC838();
}

uint64_t sub_1C98842B4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 16;
  OUTLINED_FUNCTION_60_11();
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 112) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v4);
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
}

uint64_t HandoffResponse.output.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD654(v1, a1);
}

uint64_t HandoffResponse.companionNotificationText.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *HandoffResponse.runSiriKitExecutorCommand.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

uint64_t HandoffResponse.targetDeviceAssistantIdOverride.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HandoffResponse.targetDeviceAssistantIdOverride.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*HandoffResponse.targetDeviceAssistantIdOverride.modify())(void)
{
  return nullsub_1;
}

uint64_t HandoffResponse.init(output:companionNotificationText:runSiriKitExecutorCommand:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  a5[8] = 0;
  a5[9] = 0;
  uint64_t result = sub_1C95FD5D8(a1, (uint64_t)a5);
  a5[5] = a2;
  a5[6] = a3;
  a5[7] = a4;
  return result;
}

void sub_1C98844FC(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9884514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C97BFD98;
  return HandoffSessionToCompanionFlowStrategy.makeHandoffResponse()(a1, a2, a3);
}

uint64_t sub_1C98845C4(uint64_t a1)
{
  *(void *)(v2 + 72) = v1;
  *(void *)(v2 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1C98845E4, 0, 0);
}

uint64_t sub_1C98845E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = swift_task_alloc();
  *(void *)(v14 + 88) = v15;
  *(void *)(v15 + 16) = v14 + 72;
  id v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 96) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB0);
  OUTLINED_FUNCTION_27_22();
  *id v16 = v17;
  v16[1] = sub_1C98846C4;
  uint64_t v18 = OUTLINED_FUNCTION_25_18();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C98846C4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C98847A8()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FD5D8((long long *)(v0 + 16), *(void *)(v0 + 80));
  uint64_t v1 = OUTLINED_FUNCTION_42_11();
  return v2(v1);
}

uint64_t HandoffSessionToCompanionFlowStrategy.makeHandoffResponse()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9884824);
}

uint64_t sub_1C9884824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = *(void *)(v14 + 96);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 104) = v16;
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 80);
  *(void *)(v16 + 32) = v15;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v14 + 112) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB0);
  OUTLINED_FUNCTION_27_22();
  *uint64_t v17 = v18;
  v17[1] = sub_1C988490C;
  uint64_t v19 = OUTLINED_FUNCTION_25_18();
  return MEMORY[0x1F4188160](v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C988490C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C98849F0()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FD5D8((long long *)(v0 + 16), *(void *)(v0 + 72));
  uint64_t v1 = OUTLINED_FUNCTION_42_11();
  return v2(v1);
}

uint64_t sub_1C9884A50()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9884AAC(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9884AC4);
}

void sub_1C9884AC4()
{
  OUTLINED_FUNCTION_26_0();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)(v0 + 17));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
  uint64_t v1 = qword_1EBC74538;
  v0[15] = type metadata accessor for RefreshableDeviceState();
  v0[16] = &protocol witness table for RefreshableDeviceState;
  v0[12] = v1;
  sub_1C9BEC838();
}

uint64_t sub_1C9884BE4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 96;
  OUTLINED_FUNCTION_60_11();
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 192) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9884CC8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = v0[22];
  uint64_t v2 = OUTLINED_FUNCTION_33_1();
  sub_1C95FD654(v2, v3);
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  swift_bridgeObjectRetain();
  sub_1C97C6FDC((uint64_t)(v0 + 2));
  *(void *)(v1 + 40) = v5;
  *(void *)(v1 + 48) = v4;
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C9884D50()
{
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9884D6C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615010;
  return HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()(a1);
}

void *sub_1C9884E04()
{
  return OUTLINED_FUNCTION_62_10();
}

void HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisher:)()
{
}

void sub_1C9884E68(uint64_t a1)
{
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1EA58F430;
  *(void *)(v2 + 24) = a1;
  sub_1C9BEC838();
}

void HandoffSessionToCompanionFlow.init(strategy:deviceState:outputPublisher:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4, v5);
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  OUTLINED_FUNCTION_58_7();
  OUTLINED_FUNCTION_82_2();
  v6();
  uint64_t v7 = sub_1C98850C8();
  sub_1C95FD654(v3, (uint64_t)v10);
  sub_1C95FD654(v1, (uint64_t)v9);
  type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v8 = swift_allocObject();
  sub_1C95FD5D8(v9, v8 + 16);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  OUTLINED_FUNCTION_44_14();
  sub_1C98885FC(v7, (uint64_t)v10, v8);
}

uint64_t sub_1C98850C8()
{
  OUTLINED_FUNCTION_31_20();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  sub_1C9887B24(v1, v2, v3);
  return v0;
}

void HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisherAsync:)()
{
}

void sub_1C9885130(uint64_t a1)
{
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1EA58F430;
  *(void *)(v2 + 24) = a1;
  sub_1C9BEC838();
}

void HandoffSessionToCompanionFlow.init(strategy:deviceState:outputPublisherAsync:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v4, v5);
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  OUTLINED_FUNCTION_82_2();
  v6();
  uint64_t v7 = sub_1C98850C8();
  sub_1C95FD654(v3, (uint64_t)v20);
  sub_1C95FD654(v1, (uint64_t)v17);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  uint64_t v8 = OUTLINED_FUNCTION_44_14();
  uint64_t v9 = v18;
  uint64_t v10 = v19;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_6_0();
  uint64_t v15 = v14 - v13;
  (*(void (**)(uint64_t))(v16 + 16))(v14 - v13);
  sub_1C98886E0(v7, (uint64_t)v20, v15, v8, v9, v10);
}

void sub_1C9885494()
{
  type metadata accessor for HandoffSessionToCompanionFlow();
  uint64_t v0 = OUTLINED_FUNCTION_50();
  Flow.deferToExecuteAsync(_:)(v0, v1, v2, v3);
}

uint64_t sub_1C9885518(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9885530);
}

uint64_t sub_1C9885530()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9618A08;
  return sub_1C9885A0C();
}

uint64_t HandoffSessionToCompanionFlow.deinit()
{
  swift_release();
  return v0;
}

uint64_t HandoffSessionToCompanionFlow.__deallocating_deinit()
{
  HandoffSessionToCompanionFlow.deinit();

  return swift_deallocClassInstance();
}

void sub_1C9885614()
{
}

uint64_t sub_1C9885638(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9885518(a1);
}

void *sub_1C98856D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C9884E04();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void *sub_1C9885708@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C9885784();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1C988573C(uint64_t a1)
{
  id v1 = *(id *)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  sub_1C96E5998(*(id *)a1, v2);
  sub_1C98857B0((uint64_t)v1, v2);
}

void *sub_1C9885784()
{
  return OUTLINED_FUNCTION_62_10();
}

void sub_1C98857B0(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(v2 + 16);
  char v6 = *(unsigned char *)(v2 + 24);
  *(void *)(v2 + 16) = a1;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  sub_1C97183F4(v5, v6);
}

uint64_t (*sub_1C9885810())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C9885860()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void HandoffSessionToCompanionFlowAsync.init<A>(strategy:deviceState:outputPublisher:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_6_0();
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  OUTLINED_FUNCTION_58_7();
  OUTLINED_FUNCTION_82_2();
  v14();
  *(void *)(v0 + 32) = sub_1C98859D4();
  sub_1C95FD654(v7, v0 + 40);
  sub_1C95FD654(v5, v0 + 80);
  sub_1C97438C8();
  uint64_t v15 = swift_allocError();
  *uint64_t v16 = 1;
  __swift_destroy_boxed_opaque_existential_1(v5);
  __swift_destroy_boxed_opaque_existential_1(v7);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v3);
  *(void *)(v1 + 16) = v15;
  *(unsigned char *)(v1 + 24) = 1;
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C98859D4()
{
  OUTLINED_FUNCTION_31_20();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  sub_1C988788C(v1, v2, v3);
  return v0;
}

uint64_t sub_1C9885A0C()
{
  OUTLINED_FUNCTION_24();
  v1[39] = v2;
  v1[40] = v0;
  uint64_t v3 = sub_1C9BEC958();
  v1[41] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v1[42] = v4;
  v1[43] = OUTLINED_FUNCTION_16();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC786C0);
  OUTLINED_FUNCTION_22(v5);
  v1[44] = OUTLINED_FUNCTION_16();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v6);
  v1[45] = OUTLINED_FUNCTION_16();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77F68);
  OUTLINED_FUNCTION_22(v7);
  v1[46] = OUTLINED_FUNCTION_16();
  uint64_t v8 = type metadata accessor for AceOutput();
  v1[47] = v8;
  OUTLINED_FUNCTION_22(v8);
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  uint64_t v9 = sub_1C9BED5C8();
  v1[50] = v9;
  OUTLINED_FUNCTION_5_0(v9);
  v1[51] = v10;
  v1[52] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1C9885B70()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9885C08;
  uint64_t v2 = OUTLINED_FUNCTION_87_4();
  return sub_1C98883C4(v2);
}

uint64_t sub_1C9885C08()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 432) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9885CE4()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(void *)(v0 + 440) = qword_1EBC7A4A0;
  type metadata accessor for SiriKitEvent(0);
  sub_1C9BEC838();
}

uint64_t sub_1C9885E24()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9885F08()
{
  uint64_t v102 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t)(v0 + 2);
  swift_release();
  uint64_t v3 = (void *)v0[9];
  if (v3)
  {
    uint64_t v4 = qword_1EBC7A3B8;
    id v5 = v3;
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1C9BECF88();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
    uint64_t v7 = (void *)sub_1C9BECF78();
    os_log_type_t v8 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v8))
    {
      uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v9 = 0;
      OUTLINED_FUNCTION_57_12();
      _os_log_impl(v10, v11, v12, v13, v9, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28DB0]), sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v14, sel_encodeObject_forKey_, v5, *MEMORY[0x1E4F284E8]);
    id v15 = objc_msgSend(v14, sel_encodedData);
    uint64_t v16 = sub_1C9BEA9E8();
    unint64_t v18 = v17;

    sub_1C96044C4(0, (unint64_t *)&qword_1EBC76490);
    uint64_t v19 = sub_1C9BEDE38();

    goto LABEL_9;
  }
  __swift_project_boxed_opaque_existential_1((void *)(v0[40] + 40), *(void *)(v0[40] + 64));
  uint64_t v20 = OUTLINED_FUNCTION_20_28();
  v21(v20);
  if (v22)
  {
    uint64_t v24 = v0[51];
    uint64_t v23 = v1[52];
    uint64_t v25 = v1[50];
    sub_1C9BED5B8();
    uint64_t v16 = sub_1C9BED578();
    unint64_t v18 = v26;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    sub_1C96044C4(0, (unint64_t *)&qword_1EBC76490);
    uint64_t v19 = sub_1C9BEDE38();
LABEL_9:
    uint64_t v27 = (uint64_t)(v1 + 22);
    uint64_t v96 = v19;
    v1[58] = v19;
    v1[59] = v18;
    uint64_t v98 = v16;
    uint64_t v99 = v2;
    v1[60] = v16;
    unint64_t v28 = v1[11];
    if (!v28)
    {
      __swift_project_boxed_opaque_existential_1((void *)(v1[40] + 40), *(void *)(v1[40] + 64));
      OUTLINED_FUNCTION_33_1();
      sub_1C97D9020();
    }
    uint64_t v29 = v1[10];
    uint64_t v30 = qword_1EBC7A3B8;
    swift_bridgeObjectRetain();
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_1C9BECF88();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = (void *)sub_1C9BECF78();
    os_log_type_t v33 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v101 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v34 = 136315138;
      v1[32] = v29;
      v1[33] = v28;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D58);
      uint64_t v35 = sub_1C9BED5D8();
      v1[38] = sub_1C95FF228(v35, v36, &v101);
      uint64_t v27 = (uint64_t)(v1 + 22);
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_65_6();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_57_12();
      _os_log_impl(v37, v38, v39, v40, v34, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      OUTLINED_FUNCTION_65_6();
    }
    sub_1C96044C4(0, (unint64_t *)&qword_1EA58D410);
    uint64_t v41 = v1[7];
    uint64_t v42 = v1[8];
    swift_bridgeObjectRetain();
    id v43 = sub_1C9A7CCA8(v41, v42, v98, v18, v29, v28);
    v1[61] = v43;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(v43, sel_setIsSiriXRequest_, v96);
    v1[34] = MEMORY[0x1E4FBC860];
    sub_1C95FD654(v99, v27);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
    if (swift_dynamicCast())
    {
      uint64_t v46 = v1[49];
      __swift_storeEnumTagSinglePayload(v1[46], 0, 1, v1[47]);
      uint64_t v47 = OUTLINED_FUNCTION_33_1();
      sub_1C9631FF4(v47, v48);
      swift_bridgeObjectRetain();
      sub_1C965F554();
      sub_1C9630A64(v46);
    }
    else
    {
      uint64_t v49 = v1[46];
      OUTLINED_FUNCTION_37_1(v49, v44, v45, v1[47]);
      sub_1C9697900(v49, &qword_1EBC77F68);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C9BECF88();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EBC7A520);
      uint64_t v51 = (void *)sub_1C9BECF78();
      os_log_type_t v52 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_13(v52))
      {
        uint64_t v53 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v53 = 0;
        OUTLINED_FUNCTION_57_12();
        _os_log_impl(v54, v55, v56, v57, v53, 2u);
        OUTLINED_FUNCTION_11_4();
      }
    }
    id v58 = v43;
    MEMORY[0x1CB78AA10]();
    if (*(void *)((v1[34] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v1[34] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C9BED8D8();
    }
    OUTLINED_FUNCTION_50();
    sub_1C9BED948();
    sub_1C9BED8A8();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v59 = sub_1C9BECF88();
    __swift_project_value_buffer(v59, (uint64_t)qword_1EBC7A520);
    uint64_t v60 = sub_1C9BECF78();
    os_log_type_t v61 = sub_1C9BEDC78();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v62 = 0;
      _os_log_impl(&dword_1C95F9000, v60, v61, "HandoffSession publishing output", v62, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v63 = (int *)v1[47];
    uint64_t v64 = v1[48];
    uint64_t v65 = v1[44];
    uint64_t v66 = v1[45];
    uint64_t v67 = v1[42];
    uint64_t v68 = (void *)v1[40];
    uint64_t v92 = v1[41];
    uint64_t v93 = v1[43];

    uint64_t v100 = v68[13];
    uint64_t v97 = v68[14];
    __swift_project_boxed_opaque_existential_1(v68 + 10, v100);
    uint64_t v94 = v1[34];
    uint64_t v69 = type metadata accessor for NLContextUpdate();
    *(_OWORD *)(v1 + 19) = 0u;
    v1[21] = 0;
    *(_OWORD *)(v1 + 17) = 0u;
    OUTLINED_FUNCTION_37_1(v66, v70, v71, v69);
    uint64_t v72 = sub_1C9BEC908();
    OUTLINED_FUNCTION_37_1(v65, v73, v74, v72);
    (*(void (**)(uint64_t, void, uint64_t))(v67 + 104))(v93, *MEMORY[0x1E4FA24B8], v92);
    v1[15] = v63;
    v1[16] = &protocol witness table for AceOutput;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v1 + 12);
    *(_OWORD *)(v64 + 104) = 0u;
    *(void *)(v64 + 120) = 0;
    *(_OWORD *)(v64 + 88) = 0u;
    sub_1C962F434((uint64_t)(v1 + 17), v64 + 88);
    *(unsigned char *)(v64 + v63[10]) = 0;
    *(void *)uint64_t v64 = v94;
    sub_1C9685268(v66, v64 + v63[7], &qword_1EBC77C70);
    *(_OWORD *)(v64 + 8) = 0u;
    *(_OWORD *)(v64 + 24) = 0u;
    *(_OWORD *)(v64 + 40) = 0u;
    *(_OWORD *)(v64 + 56) = 0u;
    *(void *)(v64 + 72) = 0;
    *(unsigned char *)(v64 + 80) = 3;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v64 + v63[8], v93, v92);
    sub_1C9685268(v65, v64 + v63[9], &qword_1EBC786C0);
    sub_1C9631FF4(v64, (uint64_t)boxed_opaque_existential_0);
    uint64_t v95 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v97 + 8) + **(int **)(v97 + 8));
    uint64_t v76 = (void *)swift_task_alloc();
    v1[62] = v76;
    *uint64_t v76 = v1;
    v76[1] = sub_1C9886AAC;
    return v95(v1 + 12, v100, v97);
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v78 = sub_1C9BECF88();
  __swift_project_value_buffer(v78, (uint64_t)qword_1EBC7A520);
  uint64_t v79 = sub_1C9BECF78();
  os_log_type_t v80 = sub_1C9BEDC88();
  if (os_log_type_enabled(v79, v80))
  {
    uint64_t v81 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v81 = 0;
    _os_log_impl(&dword_1C95F9000, v79, v80, "HandoffSessionToCompanionFlow cannot perform handoff because there is no ContinuityID present on DeviceState. Will redirect this request to the server, which may cause issues in multi-turn requests.", v81, 2u);
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v82 = v0[39];

  sub_1C97438C8();
  uint64_t v83 = swift_allocError();
  *uint64_t v84 = 0;
  sub_1C98857B0(v83, 1);
  sub_1C97C6FDC(v2);
  uint64_t v85 = type metadata accessor for ExecuteResponse(0);
  uint64_t v86 = v82 + *(int *)(v85 + 36);
  uint64_t v87 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_37_1(v86, v88, v89, v87);
  *(unsigned char *)uint64_t v82 = 3;
  *(void *)(v82 + 8) = 0;
  *(void *)(v82 + 24) = 0;
  *(unsigned char *)(v82 + 16) = 0;
  *(unsigned char *)(v82 + 32) = 3;
  long long v90 = (_OWORD *)(v82 + *(int *)(v85 + 40));
  *long long v90 = 0u;
  v90[1] = 0u;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v91 = (uint64_t (*)(void))v1[1];
  return v91();
}

uint64_t sub_1C9886AAC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 504) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 96);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9886B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v11 = v10[60];
  os_log_type_t v12 = (void *)v10[61];
  id v14 = (void *)v10[58];
  unint64_t v13 = v10[59];
  uint64_t v15 = v10[39];
  sub_1C98857B0(0, 0);

  sub_1C963F610(v11, v13);
  sub_1C97C6FDC((uint64_t)(v10 + 2));
  static ExecuteResponse.complete()(v15);
  OUTLINED_FUNCTION_29_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_44();
  return v17(v16, v17, v18, v19, v20, v21, v22, v23, a9, a10);
}

uint64_t sub_1C9886C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  uint64_t v25 = *(void **)(v22 + 432);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C9BECF88();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
  id v27 = v25;
  id v28 = v25;
  uint64_t v29 = sub_1C9BECF78();
  os_log_type_t v30 = sub_1C9BEDC88();
  if (os_log_type_enabled(v29, v30))
  {
    OUTLINED_FUNCTION_26_22();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_30_17(4.8149e-34);
    uint64_t v31 = sub_1C9BEE6E8();
    uint64_t v33 = sub_1C95FF228(v31, v32, &a11);
    OUTLINED_FUNCTION_51_12(v33);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_85(&dword_1C95F9000, v34, v35, "Unexpected error executing handoff: %s");
    OUTLINED_FUNCTION_41_0();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v36 = *(void *)(v22 + 312);
  id v37 = v25;
  sub_1C98857B0((uint64_t)v25, 1);

  static ExecuteResponse.complete()(v36);
  OUTLINED_FUNCTION_29_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_10_1();
  return v39(v38, v39, v40, v41, v42, v43, v44, v45, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9886E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  uint64_t v25 = *(void *)(v22 + 480);
  id v27 = *(void **)(v22 + 464);
  unint64_t v26 = *(void *)(v22 + 472);

  sub_1C963F610(v25, v26);
  sub_1C97C6FDC(v22 + 16);
  __swift_destroy_boxed_opaque_existential_1(v22 + 96);
  id v28 = *(void **)(v22 + 504);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1C9BECF88();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EBC7A520);
  id v30 = v28;
  id v31 = v28;
  unint64_t v32 = sub_1C9BECF78();
  os_log_type_t v33 = sub_1C9BEDC88();
  if (os_log_type_enabled(v32, v33))
  {
    OUTLINED_FUNCTION_26_22();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_30_17(4.8149e-34);
    uint64_t v34 = sub_1C9BEE6E8();
    uint64_t v36 = sub_1C95FF228(v34, v35, &a11);
    OUTLINED_FUNCTION_51_12(v36);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_85(&dword_1C95F9000, v37, v38, "Unexpected error executing handoff: %s");
    OUTLINED_FUNCTION_41_0();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v39 = *(void *)(v22 + 312);
  id v40 = v28;
  sub_1C98857B0((uint64_t)v28, 1);

  static ExecuteResponse.complete()(v39);
  OUTLINED_FUNCTION_29_19();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_10_1();
  return v42(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14);
}

uint64_t HandoffSessionToCompanionFlowAsync.deinit()
{
  sub_1C97183F4(*(id *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  return v0;
}

uint64_t HandoffSessionToCompanionFlowAsync.__deallocating_deinit()
{
  HandoffSessionToCompanionFlowAsync.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C98870A0()
{
  return sub_1C9885A08();
}

uint64_t sub_1C98870C4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_87_4();
  return sub_1C9885A0C();
}

void *sub_1C988714C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C9885784();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t static SimpleHandoffSessionToCompanionFlowHelper.makeHandoffFlow(deviceState:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  return sub_1C98871B0(a1, a2, (uint64_t (*)(uint64_t, unsigned char *, unsigned char *))sub_1C9884E68);
}

uint64_t static SimpleHandoffSessionToCompanionFlowHelper.makeHandoffFlow(deviceState:outputPublisherAsync:)(uint64_t a1, uint64_t a2)
{
  return sub_1C98871B0(a1, a2, (uint64_t (*)(uint64_t, unsigned char *, unsigned char *))sub_1C9885130);
}

uint64_t sub_1C98871B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, unsigned char *, unsigned char *))
{
  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy();
  uint64_t v6 = swift_allocObject();
  sub_1C95FD654(a1, (uint64_t)v9);
  sub_1C95FD654(a2, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F318);
  swift_allocObject();
  return a3(v6, v9, v8);
}

void static SimpleHandoffSessionToCompanionFlowHelper.makeServerOrLocalHandoffFlowAsync(runSiriKitExecutorProvider:deviceState:outputPublisher:)()
{
  OUTLINED_FUNCTION_55_11();
  sub_1C95FD654(v4, (uint64_t)v7);
  type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v2;
  sub_1C95FD5D8(v7, v5 + 32);
  sub_1C95FD654(v1, (uint64_t)v7);
  sub_1C95FD654(v0, (uint64_t)&v6);
  type metadata accessor for HandoffSessionToCompanionFlowAsync();
  OUTLINED_FUNCTION_44_14();
  sub_1C9BEC838();
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.__allocating_init(runSiriKitExecutorProvider:deviceState:)(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C95FD5D8(a3, v6 + 32);
  return v6;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy.deinit()
{
  return v0;
}

void sub_1C9887348()
{
}

uint64_t sub_1C988736C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA58F420 + dword_1EA58F420);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C98896C0;
  return v5(a1);
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync.deinit()
{
  return v0;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C9887438()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32();
  uint64_t v5 = &aLk[*(int *)aLk];
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_87_4();
  return ((uint64_t (*)(uint64_t))v5)(v3);
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.init(runSiriKitExecutorProvider:deviceState:)(uint64_t a1, uint64_t a2, long long *a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  sub_1C95FD5D8(a3, v3 + 32);
  return v3;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.makeHandoffResponse()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9887518);
}

uint64_t sub_1C9887518()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  return sub_1C9882EA4();
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9887628()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_87_4();
  return SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.makeHandoffResponse()(v3);
}

uint64_t sub_1C98876B0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C9887744;
  return static NotificationTemplates.genericHandoffNotification()();
}

uint64_t sub_1C9887744()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v11 = *(uint64_t (**)(void))(v9 + 8);
    return v11();
  }
  else
  {
    *(void *)(v7 + 32) = v3;
    *(void *)(v7 + 40) = v5;
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v13, v14, v15);
  }
}

uint64_t sub_1C9887868()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);
  *uint64_t v2 = *(void *)(v0 + 40);
  v2[1] = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C988788C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C98878F8(a1, a2, a3);
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_37();
  v7();
  *(void *)(v3 + 16) = v4;
  *(void *)(v3 + 24) = v6;
  return v3;
}

void *sub_1C98878F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1, a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return &unk_1EA58F448;
}

uint64_t sub_1C9887A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unint64_t v8 = v4;
  v8[1] = sub_1C9615888;
  return v10(a1, a3, a4);
}

uint64_t sub_1C9887B24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v10 + v9, a1, a2);
  *(void *)(v3 + 16) = &unk_1EA58F458;
  *(void *)(v3 + 24) = v10;
  return v3;
}

uint64_t sub_1C9887BE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 112) = a2;
  *(void *)(v2 + 120) = a1;
  return MEMORY[0x1F4188298](sub_1C9887C00, 0, 0);
}

uint64_t sub_1C9887C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = swift_task_alloc();
  *(void *)(v14 + 128) = v15;
  *(void *)(v15 + 16) = v14 + 112;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 136) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB0);
  OUTLINED_FUNCTION_27_22();
  *uint64_t v16 = v17;
  v16[1] = sub_1C9887CD0;
  uint64_t v18 = OUTLINED_FUNCTION_11_40();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9887CD0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9887DB4()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_16_28((long long *)(v0 + 16));
  return v1();
}

uint64_t sub_1C9887E18()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9887E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  return MEMORY[0x1F4188298](sub_1C9887E98, 0, 0);
}

uint64_t sub_1C9887E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = *(void *)(v14 + 120);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 144) = v16;
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 128);
  *(void *)(v16 + 32) = v15;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v14 + 152) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB0);
  OUTLINED_FUNCTION_27_22();
  *uint64_t v17 = v18;
  v17[1] = sub_1C9887F70;
  uint64_t v19 = OUTLINED_FUNCTION_11_40();
  return MEMORY[0x1F4188160](v19, v20, v21, v22, v23, v24, v25, v26, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9887F70()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  void *v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9888054()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_16_28((long long *)(v0 + 16));
  return v1();
}

uint64_t sub_1C98880B8()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void sub_1C9888114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_11_1();
  a19 = v20;
  a20 = v21;
  OUTLINED_FUNCTION_55_11();
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
  OUTLINED_FUNCTION_0();
  uint64_t v24 = v23;
  uint64_t v26 = *(void *)(v25 + 64);
  MEMORY[0x1F4188790](v27, v28);
  OUTLINED_FUNCTION_82_2();
  v29();
  unint64_t v30 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v31 + v30, (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  sub_1C98779B0();
}

void sub_1C9888210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_11_1();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
  OUTLINED_FUNCTION_0();
  uint64_t v30 = v29;
  uint64_t v32 = *(void *)(v31 + 64);
  MEMORY[0x1F4188790](v33, v34);
  OUTLINED_FUNCTION_82_2();
  v35();
  unint64_t v36 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v37 + v36, (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(v23, v37, v27, v25);
  swift_release();
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9888338(uint64_t a1)
{
  sub_1C988929C(a1, (uint64_t)&v2);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
    return sub_1C9BED9F8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
    return sub_1C9BEDA08();
  }
}

uint64_t sub_1C98883C4(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C98883DC);
}

uint64_t sub_1C98883DC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 24) + 16)
                                       + **(int **)(*(void *)(v0 + 24) + 16));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C9618A08;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4);
}

uint64_t sub_1C98884A4()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C98884DC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_32();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_87_4();
  return sub_1C98883C4(v3);
}

uint64_t sub_1C9888564()
{
  swift_release();

  return swift_deallocObject();
}

#error "1C98885CC: call analysis failed (funcsize=13)"

uint64_t type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync()
{
  return self;
}

void sub_1C98885FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v6 = &protocol witness table for OutputPublisherAsyncAdapter;
  uint64_t v4 = a3;
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  swift_allocObject();
  sub_1C9BEC838();
}

void sub_1C98886E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v9[3] = a5;
  void v9[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_0, a3, a5);
  type metadata accessor for AnyHandoffSessionToCompanionFlowStrategyAsync();
  swift_allocObject();
  sub_1C9BEC838();
}

uint64_t type metadata accessor for HandoffSessionToCompanionFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy()
{
  return self;
}

uint64_t type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync()
{
  return self;
}

uint64_t destroy for HandoffResponse(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HandoffResponse(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = *(void **)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v8 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for HandoffResponse(void *a1, void *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = (void *)a1[7];
  uint64_t v5 = (void *)a2[7];
  a1[7] = v5;
  id v6 = v5;

  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HandoffResponse(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for HandoffResponse()
{
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowStrategy.makeHandoffResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowStrategy.makeHandoffResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C97C66C0;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowStrategyAsync.makeHandoffResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t method lookup function for HandoffSessionToCompanionFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HandoffSessionToCompanionFlow);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.__allocating_init(strategy:deviceState:outputPublisherAsync:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 144) + **(int **)(*(void *)v0 + 144));
  uint64_t v3 = swift_task_alloc();
  long long v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  void *v4 = v5;
  v4[1] = sub_1C9615010;
  return v7(v2);
}

uint64_t method lookup function for HandoffSessionToCompanionFlowAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HandoffSessionToCompanionFlowAsync);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.exitValue.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 120))(a1, a2 & 1);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.exitValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.__allocating_init<A>(strategy:deviceState:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowAsync.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 160) + **(int **)(*(void *)v0 + 160));
  uint64_t v3 = swift_task_alloc();
  long long v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  void *v4 = v5;
  v4[1] = sub_1C9615888;
  return v7(v2);
}

void type metadata accessor for SimpleHandoffSessionToCompanionFlowHelper()
{
}

uint64_t method lookup function for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategy);
}

uint64_t method lookup function for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SimpleHandoffSessionToCompanionFlowHelper.SimpleHandoffSessionToCompanionFlowStrategyAsync);
}

uint64_t method lookup function for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync);
}

uint64_t dispatch thunk of SimpleHandoffSessionToCompanionFlowHelper.PeerToPeerHandoffToCompanionFlowStrategyAsync.__allocating_init(runSiriKitExecutorProvider:deviceState:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *sub_1C988902C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C98890F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for HandoffSessionToCompanionFlowAsync.HandoffErrors()
{
}

unint64_t sub_1C9889130()
{
  unint64_t result = qword_1EA58F400;
  if (!qword_1EA58F400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F400);
  }
  return result;
}

uint64_t sub_1C988917C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9887BE0(a1, v4);
}

#error "1C9889248: call analysis failed (funcsize=12)"

#error "1C9889280: call analysis failed (funcsize=12)"

uint64_t sub_1C988928C(uint64_t a1)
{
  return sub_1C9889254(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C988929C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A5C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9889304()
{
  OUTLINED_FUNCTION_33();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C96EC604;
  uint64_t v3 = OUTLINED_FUNCTION_46_13();
  return v4(v3);
}

uint64_t sub_1C98893B0(uint64_t a1)
{
  return sub_1C988921C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C98893BC(uint64_t a1)
{
  return sub_1C9888338(a1);
}

uint64_t sub_1C9889428()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_12_34();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_47_13();
  return sub_1C9887A18(v3, v4, v5, v6);
}

uint64_t objectdestroy_82Tm()
{
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C988954C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_12_34();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_47_13();
  return sub_1C9887E74(v3, v4, v5, v6);
}

#error "1C988961C: call analysis failed (funcsize=13)"

uint64_t objectdestroy_67Tm()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58EFB8);
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_11_40()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_36()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_27()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_28(long long *a1)
{
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = *(void *)(v3 + 64);
  sub_1C95FD5D8(a1, (uint64_t)v2);
  sub_1C95FD5D8(v2, (uint64_t)v1);
  v1[8] = 0;
  v1[9] = 0;
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = 0;
  return v3 + 8;
}

uint64_t OUTLINED_FUNCTION_20_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_18()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_22()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_28_18()
{
  uint64_t v3 = *(void *)(v1 + 1272);
  uint64_t v4 = *(void *)(v1 + 1280);
  v2[8] = 0;
  v2[9] = 0;
  sub_1C95FD5D8(v0, (uint64_t)v2);
  v2[5] = v3;
  v2[6] = v4;
  v2[7] = 0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_29_19()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_17(float a1)
{
  *uint64_t v1 = a1;
  return swift_getErrorValue();
}

uint64_t OUTLINED_FUNCTION_31_20()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_32_23()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_46_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_47_13()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_12(uint64_t a1)
{
  *(void *)(v1 + 280) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_56_11()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_58_7()
{
  return v0;
}

void OUTLINED_FUNCTION_59_8()
{
  sub_1C960E058(v0 + 56);
}

uint64_t OUTLINED_FUNCTION_63_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_65_6()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t HandoffSessionToCompanionFlowFrame.namespace.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C9889A20(uint64_t a1)
{
  *(void *)(v1 + 280) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t HandoffSessionToCompanionFlowFrame.__allocating_init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, long long *a6)
{
  uint64_t v12 = swift_allocObject();
  HandoffSessionToCompanionFlowFrame.init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t HandoffSessionToCompanionFlowFrame.init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, long long *a6)
{
  uint64_t v7 = v6;
  uint64_t v10 = *a1;
  uint64_t v11 = a1[5];
  uint64_t v12 = a1[8];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[5];
  *(void *)(v6 + 16) = 0xD00000000000001DLL;
  *(void *)(v6 + 24) = 0x80000001C9C19D90;
  uint64_t v15 = a2[8];
  *(void *)(v6 + 280) = MEMORY[0x1E4FBC860];
  *(void *)(v6 + 40) = a4;
  *(void *)(v6 + 48) = v10;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(a1 + 3);
  *(void *)(v6 + 88) = v11;
  *(_OWORD *)(v6 + 96) = *((_OWORD *)a1 + 3);
  *(void *)(v6 + 112) = v12;
  *(void *)(v6 + 120) = v13;
  long long v16 = *(_OWORD *)(a2 + 3);
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(v6 + 144) = v16;
  *(void *)(v6 + 160) = v14;
  *(_OWORD *)(v6 + 168) = *((_OWORD *)a2 + 3);
  *(void *)(v6 + 184) = v15;
  *(void *)(v6 + 32) = a3;
  uint64_t v17 = a5[3];
  uint64_t v18 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v17);
  char v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 96))(v17, v18);
  type metadata accessor for ViewFactory();
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = v19 & 1;
  *(void *)(v7 + 192) = v20;
  sub_1C95FD5F0((uint64_t)a5, v7 + 200);
  sub_1C95FD5D8(a6, v7 + 240);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a5);
  return v7;
}

uint64_t sub_1C9889BE4(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA596060);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *MEMORY[0x1E4F62260];
  sub_1C9BEADA8();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(char *, uint64_t))(v9 + 104))(v7, v8);
  swift_storeEnumTagMultiPayload();
  a3(v7);
  return sub_1C95FE76C((uint64_t)v7, (uint64_t *)&unk_1EA596060);
}

void sub_1C9889CD0(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[24];
  uint64_t v3 = a2[7];
  uint64_t v4 = a2[8];
  uint64_t v5 = a2[9];
  uint64_t v6 = a2[10];
  uint64_t v7 = a2[11];
  uint64_t v9 = a2[12];
  unint64_t v8 = a2[13];
  v24[0] = a2[6];
  v24[1] = v3;
  uint64_t v22 = v2;
  _OWORD v24[2] = v4;
  v24[3] = v5;
  v24[4] = v6;
  v24[5] = v7;
  v24[6] = v9;
  v24[7] = v8;
  uint64_t v10 = a2[15];
  v24[8] = a2[14];
  uint64_t v13 = a2[16];
  uint64_t v14 = a2[17];
  uint64_t v11 = a2[19];
  uint64_t v12 = a2[20];
  uint64_t v15 = a2[18];
  unint64_t v16 = a2[22];
  uint64_t v17 = a2[21];
  uint64_t v18 = a2[23];
  v23[0] = v10;
  v23[1] = v13;
  _OWORD v23[2] = v14;
  v23[3] = v15;
  v23[4] = v11;
  v23[5] = v12;
  void v23[6] = v17;
  v23[7] = v16;
  v23[8] = v18;
  uint64_t v19 = a2[4];
  uint64_t v20 = a2[5];
  uint64_t v21 = a2 + 25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C96500DC(v9, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C96500DC(v17, v16);
  swift_bridgeObjectRetain();
  static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(v22, v24, (uint64_t)v23, v19, v20, v21);
}

void sub_1C9889EF0()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[12];
  unint64_t v7 = v0[13];
  v22[0] = v0[6];
  v22[1] = v2;
  uint64_t v20 = v1;
  v22[2] = v3;
  v22[3] = v4;
  v22[4] = v5;
  v22[5] = v6;
  v22[6] = v8;
  v22[7] = v7;
  uint64_t v9 = v0[15];
  void v22[8] = v0[14];
  uint64_t v12 = v0[16];
  uint64_t v13 = v0[17];
  uint64_t v10 = v0[19];
  uint64_t v11 = v0[20];
  uint64_t v14 = v0[18];
  unint64_t v15 = v0[22];
  uint64_t v16 = v0[21];
  uint64_t v17 = v0[23];
  v21[0] = v9;
  v21[1] = v12;
  void v21[2] = v13;
  void v21[3] = v14;
  uint64_t v21[4] = v10;
  v21[5] = v11;
  void v21[6] = v16;
  v21[7] = v15;
  v21[8] = v17;
  uint64_t v18 = v0[4];
  uint64_t v19 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C96500DC(v8, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C96500DC(v16, v15);
  swift_bridgeObjectRetain();
  static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(v20, v22, (uint64_t)v21, v18, v19, v0 + 25);
}

void static HandoffToCompanionAceCommands.buildAceCommands(viewFactory:handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = a2[5];
  uint64_t v8 = a2[8];
  uint64_t v9 = *(void *)(a3 + 40);
  uint64_t v11 = *a2;
  long long v10 = *(_OWORD *)(a2 + 3);
  long long v12 = *(_OWORD *)(a2 + 1);
  long long v13 = v10;
  uint64_t v14 = v7;
  long long v15 = *((_OWORD *)a2 + 3);
  uint64_t v16 = v8;
  (*(void (**)(uint64_t *, void, void, void, void, void))(*(void *)a1 + 120))(&v11, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC860], 0, 0, 0);
  if (*(void *)(v9 + 16)) {
    swift_bridgeObjectRetain();
  }
  sub_1C988A980();
  __swift_project_boxed_opaque_existential_1(a6, a6[3]);
  sub_1C97D9020();
}

void sub_1C988A29C(uint64_t a1, uint64_t a2)
{
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C9BEF570;
  uint64_t v7 = v2[4];
  uint64_t v6 = v2[5];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 64) = sub_1C9604B38();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v6;
  swift_bridgeObjectRetain();
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v2 + 30, v2[33]);
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = a1;
  v8[3] = a2;
  v8[4] = v2;
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

uint64_t sub_1C988A444(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA596070);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (void *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v12 = *(unsigned __int8 *)(a1 + 8);
  if (v12 == 255)
  {
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC78();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1C9BEF570;
    uint64_t v22 = *(void *)(a4 + 32);
    uint64_t v21 = *(void *)(a4 + 40);
    *(void *)(v20 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v20 + 64) = sub_1C9604B38();
    *(void *)(v20 + 32) = v22;
    *(void *)(v20 + 40) = v21;
    swift_bridgeObjectRetain();
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    type metadata accessor for SiriKitFlowFrameInput();
    sub_1C9BEAD88();
    swift_storeEnumTagMultiPayload();
    a2(v11);
  }
  else
  {
    v24[1] = v8;
    _OWORD v24[2] = a3;
    uint64_t v25 = a2;
    long long v13 = *(void **)a1;
    sub_1C96BD36C(v13, v12);
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC78();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1C9BEF570;
    uint64_t v26 = v13;
    char v27 = v12;
    sub_1C96A2DA8();
    uint64_t v15 = sub_1C9BEE6E8();
    uint64_t v17 = v16;
    *(void *)(v14 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v14 + 64) = sub_1C9604B38();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_allocError();
    *(void *)uint64_t v19 = v13;
    *(unsigned char *)(v19 + 8) = v12;
    *uint64_t v11 = v18;
    swift_storeEnumTagMultiPayload();
    sub_1C96BD36C(v13, v12);
    v25(v11);
    sub_1C97320EC(v13, v12);
  }
  return sub_1C95FE76C((uint64_t)v11, &qword_1EA596070);
}

void *HandoffSessionToCompanionFlowFrame.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[12];
  unint64_t v2 = v0[13];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C9650368(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0[21];
  unint64_t v4 = v0[22];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C9650368(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 25));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 30));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HandoffSessionToCompanionFlowFrame.__deallocating_deinit()
{
  HandoffSessionToCompanionFlowFrame.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C988A870()
{
  return HandoffSessionToCompanionFlowFrame.namespace.getter();
}

uint64_t sub_1C988A894(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  return sub_1C9889BE4(a1, a2, a3);
}

void sub_1C988A8AC()
{
}

void sub_1C988A908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1C988A934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for HandoffSessionToCompanionFlowFrame();

  return MEMORY[0x1F4119B28](a1, v5, a3);
}

unint64_t sub_1C988A980()
{
  unint64_t result = qword_1EA58D410;
  if (!qword_1EA58D410)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA58D410);
  }
  return result;
}

uint64_t sub_1C988A9C0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C988AA00(uint64_t a1)
{
  return sub_1C988A444(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_1C988AA0C(uint64_t a1)
{
  unint64_t result = sub_1C988AA34();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C988AA34()
{
  unint64_t result = qword_1EA58F468;
  if (!qword_1EA58F468)
  {
    type metadata accessor for HandoffSessionToCompanionFlowFrame();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58F468);
  }
  return result;
}

uint64_t type metadata accessor for HandoffSessionToCompanionFlowFrame()
{
  return self;
}

uint64_t method lookup function for HandoffSessionToCompanionFlowFrame(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HandoffSessionToCompanionFlowFrame);
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.__allocating_init(handoffDialog:notificationText:sessionHandOffContinuityID:deviceState:aceServiceInvoker:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.onInput(controller:input:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.execute(controller:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of HandoffSessionToCompanionFlowFrame.action(renderer:args:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

ValueMetadata *type metadata accessor for HandoffToCompanionAceCommands()
{
  return &type metadata for HandoffToCompanionAceCommands;
}

void sub_1C988AB4C()
{
  *(unsigned char *)(v0 + 16) = 0;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F488);
  swift_allocObject();
  sub_1C9BEC388();
}

void sub_1C988AD28()
{
}

uint64_t sub_1C988ADD4()
{
  OUTLINED_FUNCTION_24();
  v1[35] = v2;
  v1[36] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  OUTLINED_FUNCTION_22(v3);
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v4);
  v1[39] = OUTLINED_FUNCTION_16();
  uint64_t v5 = type metadata accessor for AceOutput();
  v1[40] = v5;
  OUTLINED_FUNCTION_22(v5);
  v1[41] = OUTLINED_FUNCTION_16();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77BB8);
  OUTLINED_FUNCTION_22(v6);
  v1[42] = OUTLINED_FUNCTION_16();
  uint64_t v7 = type metadata accessor for IdentifiedUser();
  v1[43] = v7;
  OUTLINED_FUNCTION_22(v7);
  v1[44] = OUTLINED_FUNCTION_16();
  return MEMORY[0x1F4188298](sub_1C988AF00, 0, 0);
}

void sub_1C988AF00()
{
  uint64_t v1 = *(void *)(v0 + 288);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F488);
  swift_getKeyPath();
  swift_getKeyPath();
  *(void *)(v0 + 240) = v1;
  sub_1C9BEC838();
}

uint64_t sub_1C988B4F0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  *(void *)(v4 + 400) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1C988BA48;
  }
  else {
    uint64_t v5 = sub_1C988B5F0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

void sub_1C988B5F0()
{
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void **)(v0 + 288);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[12];
  __swift_project_boxed_opaque_existential_1(v2 + 8, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v3, v4);
  uint64_t v5 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v5);
  *(void *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_1C988B874()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  if (v0)
  {

    uint64_t v6 = sub_1C988BE9C;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 88);
    uint64_t v6 = sub_1C988B964;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

void sub_1C988B964()
{
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 328);

  sub_1C988C250(v3, (void (*)(void))type metadata accessor for AceOutput);
  sub_1C988C250(v2, (void (*)(void))type metadata accessor for IdentifiedUser);
  OUTLINED_FUNCTION_1_44();
  *(unsigned char *)(v1 + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_44();
  __asm { BRAA            X1, X16 }
}

void sub_1C988BA48()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 296);
  uint64_t v5 = *(void *)(v0 + 304);
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  uint64_t v15 = 0xD00000000000001CLL;
  unint64_t v16 = 0x80000001C9C20310;
  *(void *)(v0 + 264) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  unint64_t v6 = v16;
  uint64_t v14 = v15;
  uint64_t v7 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v3, v2);
  __swift_storeEnumTagSinglePayload(v5, 0, 1, v2);
  sub_1C95FE5B0(v5, v4, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload(v4, 1, v2) == 1)
  {
    sub_1C95FE76C(*(void *)(v0 + 296), &qword_1EBC7A230);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1C9BECF78();
    os_log_type_t v9 = sub_1C9BEDC88();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315650;
      uint64_t v11 = sub_1C9BEE1B8();
      *(void *)(v0 + 272) = sub_1C95FF228(v11, v12, &v15);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2048;
      *(void *)(v0 + 248) = 89;
      sub_1C9BEDF68();
      *(_WORD *)(v10 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 256) = sub_1C95FF228(v14, v6, &v15);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v8, v9, "FatalError at %s:%lu - %s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void, void))(v7 + 8))(*(void *)(v0 + 296), *(void *)(v0 + 368));
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  uint64_t v13 = v0 + 208;
  *(_OWORD *)(v13 - 24) = 0u;
  *(void *)(v13 - 8) = 0;
  *(_OWORD *)(v13 - 40) = 0u;
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

void sub_1C988BE9C()
{
  uint64_t v2 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 328);

  sub_1C988C250(v3, (void (*)(void))type metadata accessor for AceOutput);
  sub_1C988C250(v2, (void (*)(void))type metadata accessor for IdentifiedUser);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  OUTLINED_FUNCTION_1_44();
  *(unsigned char *)(v1 + 16) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_44();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C988BF8C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_release();
  return v0;
}

uint64_t sub_1C988BFBC()
{
  sub_1C988BF8C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HomePodSpeechProfileCheckFlow()
{
  return self;
}

uint64_t sub_1C988C014()
{
  return sub_1C988ADD0();
}

uint64_t sub_1C988C038()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C988ADD4();
}

unint64_t sub_1C988C0D0(uint64_t a1)
{
  unint64_t result = sub_1C988C0F8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C988C0F8()
{
  unint64_t result = qword_1EA58F480;
  if (!qword_1EA58F480)
  {
    type metadata accessor for HomePodSpeechProfileCheckFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F480);
  }
  return result;
}

void sub_1C988C144()
{
}

uint64_t sub_1C988C1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IdentifiedUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C988C250(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

double OUTLINED_FUNCTION_1_44()
{
  uint64_t v2 = *(void *)(v0 + 280);
  return static ExecuteResponse.complete()(v2);
}

uint64_t sub_1C988C2DC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FlowActionType(0);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = v5 - v4;
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588EE8);
  uint64_t v8 = a1 + *(int *)(v7 + 32);
  sub_1C96C3D08((uint64_t)v10, v8);
  *(unsigned char *)(a1 + *(int *)(v7 + 36)) = 0;
  *(void *)(v6 + 24) = MEMORY[0x1E4FBC848] + 8;
  sub_1C96C3D70((uint64_t)v10);
  sub_1C96C3D08(v8, v6 + 32);
  *(unsigned char *)(v6 + 72) = 0;
  swift_storeEnumTagMultiPayload();
  return sub_1C96C3DD0(v6, a1);
}

uint64_t sub_1C988C3D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FlowActionType(0);
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588EE8);
  uint64_t v7 = a1 + *(int *)(v6 + 32);
  sub_1C96C3D08((uint64_t)v9, v7);
  *(unsigned char *)(a1 + *(int *)(v6 + 36)) = 0;
  *((void *)v5 + 3) = MEMORY[0x1E4FBC848] + 8;
  sub_1C96C3D70((uint64_t)v9);
  sub_1C96C3D08(v7, (uint64_t)(v5 + 32));
  v5[72] = 0;
  swift_storeEnumTagMultiPayload();
  return sub_1C96C3DD0((uint64_t)v5, a1);
}

void ActingFlow.BOOL(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_13_43();
  uint64_t v8 = (void *)swift_allocObject();
  long long v8[2] = v4;
  v8[3] = a4;
  v8[4] = v6;
  void v8[5] = v5;
  sub_1C9BEC838();
}

uint64_t sub_1C988C584()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C988C5BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result & 1;
  return result;
}

void ActingFlow.negate<>()()
{
}

unsigned char *sub_1C988C61C@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_1C988C630(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 80);
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return sub_1C9629FFC(v3);
}

double sub_1C988C644@<D0>(uint64_t a1@<X8>)
{
  if (*(void *)(v1 + 80)) {
    sub_1C9BEC838();
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t If.__allocating_init<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  If.init<A>(_:_:)(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1C988C7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  *(void *)(v3 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F498);
  uint64_t v7 = sub_1C96EB270(&qword_1EA58F5E8, &qword_1EA58F498);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 48) = v7;
  *(void *)(v3 + 56) = a2;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 64) = a3;
  *(void *)(v3 + 72) = v8;
  *(void *)(v3 + 80) = 0;
  *(void *)(v3 + 88) = 0;
  sub_1C9629FFC(0);
  *(void *)(v3 + 96) = 0;
  *(unsigned char *)(v3 + 104) = 2;
  return v3;
}

uint64_t If.init<A>(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_13_43();
  *(void *)(v4 + 80) = 0;
  *(void *)(v4 + 88) = 0;
  *(void *)(v4 + 40) = v9;
  *(void *)(v4 + 48) = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 + 16));
  uint64_t v12 = *(void *)(a4 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(boxed_opaque_existential_0, v7, a4);
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = v5;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v7, a4);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v4 + 80);
  *(void *)(v4 + 80) = 0;
  *(void *)(v4 + 88) = 0;
  *(void *)(v4 + 72) = v13;
  sub_1C9629FFC(v14);
  *(void *)(v4 + 96) = 0;
  *(unsigned char *)(v4 + 104) = 2;
  return v4;
}

uint64_t If.__allocating_init(_:_:)(char a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F498);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a1;
  type metadata accessor for If();
  swift_allocObject();
  return sub_1C988C7A8(v6, a2, a3);
}

uint64_t type metadata accessor for If()
{
  return self;
}

void sub_1C988C9BC()
{
}

void sub_1C988CAB0()
{
  OUTLINED_FUNCTION_13_43();
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  __swift_allocate_boxed_opaque_existential_0(v5);
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v4 + 16))();
  uint64_t v8 = v1;
  uint64_t v9 = v0;
  swift_beginAccess();
  sub_1C9BEC838();
}

void sub_1C988CBA0(char a1)
{
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_1C988C9BC();
}

void sub_1C988CC14()
{
}

uint64_t sub_1C988CC80@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 96);
  if (!*(unsigned char *)(v1 + 104))
  {
    OUTLINED_FUNCTION_16_29();
    if ((v3 & 0x8000000000000000) == 0)
    {
      uint64_t v5 = *(void *)(v1 + 72);
      if (v3 < *(void *)(v5 + 16))
      {
        sub_1C95FD654(v5 + 56 * v3 + 32, (uint64_t)v18);
        __swift_project_boxed_opaque_existential_1(v18, v19);
        uint64_t v6 = swift_allocObject();
        *(void *)(v6 + 16) = v3;
        *(void *)(v6 + 24) = v1;
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F4A0);
        uint64_t v17 = (_UNKNOWN **)sub_1C96EB270(qword_1EA58F4A8, &qword_1EA58F4A0);
        sub_1C9BEC838();
      }
LABEL_23:
      __break(1u);
      JUMPOUT(0x1C988D2BCLL);
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(unsigned char *)(v1 + 104) == 1)
  {
    OUTLINED_FUNCTION_16_29();
    if ((v3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = *(void *)(v1 + 72);
      if (v3 < *(void *)(v4 + 16)) {
        sub_1C988EE00(v4 + 56 * v3 + 32, (uint64_t)&v15);
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  switch(v3)
  {
    case 1uLL:
      uint64_t v7 = (*(uint64_t (**)(void))(v1 + 56))();
      uint64_t v8 = v7;
      if (*(void *)(v7 + 16) == 1)
      {
        sub_1C95FD654(v7 + 32, (uint64_t)v18);
        swift_bridgeObjectRelease();
        uint64_t v9 = v19;
      }
      else
      {
        uint64_t v9 = type metadata accessor for Linearly();
        uint64_t v12 = swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v13 = sub_1C98B3E90(v12, v8);
        *(unsigned char *)(v13 + 33) = 0;
        uint64_t v19 = v9;
        uint64_t v20 = &protocol witness table for Linearly;
        swift_bridgeObjectRelease();
        v18[0] = v13;
      }
      __swift_project_boxed_opaque_existential_1(v18, v9);
      sub_1C9BEC838();
    case 2uLL:
      sub_1C988C644((uint64_t)&v15);
      if (v16)
      {
        sub_1C95FD5D8(&v15, (uint64_t)v18);
        __swift_project_boxed_opaque_existential_1(v18, v19);
        sub_1C9BEC838();
      }
      sub_1C96C3D70((uint64_t)&v15);
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588EE8);
      uint64_t v17 = &protocol witness table for Conclude<A>;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v15);
      sub_1C988C3D4((uint64_t)boxed_opaque_existential_0);
      uint64_t result = sub_1C95FD5D8(&v15, (uint64_t)a1);
      break;
    case 3uLL:
      a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588EE8);
      a1[4] = (uint64_t)&protocol witness table for Conclude<A>;
      uint64_t v10 = __swift_allocate_boxed_opaque_existential_0(a1);
      uint64_t result = sub_1C988C3D4((uint64_t)v10);
      break;
    default:
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F4A0);
      uint64_t v17 = (_UNKNOWN **)sub_1C96EB270(qword_1EA58F4A8, &qword_1EA58F4A0);
      sub_1C9BEC838();
  }
  return result;
}

void sub_1C988D2CC(char *a1, uint64_t a2)
{
  char v3 = *a1;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C9BECF88();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
  uint64_t v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC78();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109120;
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v5, v6, "if condition: %{BOOL}d", v7, 8u);
    MEMORY[0x1CB78C440](v7, -1, -1);
  }

  if (v3)
  {
    char v8 = 2;
    uint64_t v9 = 1;
  }
  else
  {
    swift_beginAccess();
    uint64_t v9 = 2 * (*(void *)(*(void *)(a2 + 72) + 16) == 0);
    char v8 = 2 * (*(void *)(*(void *)(a2 + 72) + 16) == 0);
  }
  *(void *)(a2 + 96) = v9;
  *(unsigned char *)(a2 + 104) = v8;
}

void sub_1C988D428(char *a1, uint64_t a2, uint64_t a3)
{
  char v5 = *a1;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C9BECF88();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
  uint64_t v7 = sub_1C9BECF78();
  os_log_type_t v8 = sub_1C9BEDC78();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218240;
    sub_1C9BEDF68();
    *(_WORD *)(v9 + 12) = 1024;
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v7, v8, "elseIf[%ld] condition: %{BOOL}d", (uint8_t *)v9, 0x12u);
    MEMORY[0x1CB78C440](v9, -1, -1);
  }

  uint64_t v10 = a2 + 1;
  if (__OFADD__(a2, 1))
  {
    __break(1u);
  }
  else
  {
    if (v5)
    {
      char v11 = 1;
    }
    else
    {
      swift_beginAccess();
      uint64_t v12 = *(void *)(*(void *)(a3 + 72) + 16);
      BOOL v13 = v10 < v12;
      BOOL v14 = v10 >= v12;
      if (v13) {
        ++a2;
      }
      else {
        a2 = 2;
      }
      char v11 = 2 * v14;
    }
    *(void *)(a3 + 96) = a2;
    *(unsigned char *)(a3 + 104) = v11;
  }
}

void sub_1C988D5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C9BECF88();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
  char v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC78();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134217984;
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v5, v6, "run elseIf[%ld] body", v7, 0xCu);
    MEMORY[0x1CB78C440](v7, -1, -1);
  }

  *(void *)(a3 + 96) = 3;
  *(unsigned char *)(a3 + 104) = 2;
}

void sub_1C988D6E0(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  os_log_type_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl(&dword_1C95F9000, v6, v7, a3, v8, 2u);
    MEMORY[0x1CB78C440](v8, -1, -1);
  }

  *(void *)(a2 + 96) = 3;
  *(unsigned char *)(a2 + 104) = 2;
}

uint64_t sub_1C988D7D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x66496B63656863 && a2 == 0xE700000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x646F4266496E7572 && a2 == 0xE900000000000079;
    if (v6 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x736C456B63656863 && a2 == 0xEB00000000664965;
      if (v7 || (sub_1C9BEE618() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x4965736C456E7572 && a2 == 0xED000079646F4266;
        if (v8 || (sub_1C9BEE618() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x4265736C456E7572 && a2 == 0xEB0000000079646FLL;
          if (v9 || (sub_1C9BEE618() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 1701736292 && a2 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = sub_1C9BEE618();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C988DA94()
{
  return 6;
}

uint64_t sub_1C988DA9C(char a1)
{
  uint64_t result = 0x66496B63656863;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x646F4266496E7572;
      break;
    case 2:
      uint64_t result = 0x736C456B63656863;
      break;
    case 3:
      uint64_t result = 0x4965736C456E7572;
      break;
    case 4:
      uint64_t result = 0x4265736C456E7572;
      break;
    case 5:
      uint64_t result = 1701736292;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C988DB80(void *a1, uint64_t a2, char a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5B0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5B8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5C0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5C8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5D0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5D8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F5E0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_221();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C988F2C0();
  sub_1C9BEE7A8();
  if (a3)
  {
    if (a3 != 1)
    {
      switch(a2)
      {
        case 1:
          sub_1C988F43C();
          OUTLINED_FUNCTION_5_46();
          goto LABEL_10;
        case 2:
          sub_1C988F358();
          OUTLINED_FUNCTION_5_46();
          goto LABEL_10;
        case 3:
          sub_1C988F30C();
          OUTLINED_FUNCTION_5_46();
LABEL_10:
          OUTLINED_FUNCTION_12_35();
          goto LABEL_11;
        default:
          sub_1C988F488();
          sub_1C9BEE4F8();
          OUTLINED_FUNCTION_37();
          v19(v18);
          goto LABEL_12;
      }
    }
    sub_1C988F3A4();
    sub_1C9BEE4F8();
    sub_1C9BEE558();
  }
  else
  {
    sub_1C988F3F0();
    OUTLINED_FUNCTION_5_46();
    sub_1C9BEE558();
    OUTLINED_FUNCTION_12_35();
  }
LABEL_11:
  OUTLINED_FUNCTION_37();
  v21(v20);
LABEL_12:
  OUTLINED_FUNCTION_37();
  return v23(v22);
}

uint64_t sub_1C988DFE8(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F540);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F548);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F550);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F558);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_33_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F560);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_221();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F568);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_1();
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F570);
  OUTLINED_FUNCTION_0_2();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v20 - v19;
  uint64_t v52 = (uint64_t)a1;
  uint64_t v22 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C988F2C0();
  sub_1C9BEE798();
  if (!v53)
  {
    uint64_t v54 = v16;
    uint64_t v23 = sub_1C9BEE4D8();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24
      && (uint64_t v25 = *(unsigned __int8 *)(v23 + 32),
          sub_1C960BC18(1, v24, v23, v23 + 32, 0, (2 * v24) | 1),
          uint64_t v27 = v26,
          unint64_t v29 = v28,
          swift_bridgeObjectRelease(),
          v27 == v29 >> 1))
    {
      switch(v25)
      {
        case 1:
          sub_1C988F43C();
          OUTLINED_FUNCTION_3_51();
          OUTLINED_FUNCTION_37();
          v37();
          swift_unknownObjectRelease();
          uint64_t v38 = OUTLINED_FUNCTION_2_47();
          v39(v38);
          uint64_t v22 = 1;
          break;
        case 2:
          sub_1C988F3F0();
          OUTLINED_FUNCTION_3_51();
          uint64_t v22 = sub_1C9BEE4B8();
          OUTLINED_FUNCTION_37();
          v46();
          swift_unknownObjectRelease();
          uint64_t v47 = OUTLINED_FUNCTION_6_41();
          v48(v47);
          break;
        case 3:
          sub_1C988F3A4();
          OUTLINED_FUNCTION_3_51();
          uint64_t v22 = sub_1C9BEE4B8();
          OUTLINED_FUNCTION_12_35();
          OUTLINED_FUNCTION_37();
          v49();
          swift_unknownObjectRelease();
          uint64_t v50 = OUTLINED_FUNCTION_6_41();
          v51(v50);
          break;
        case 4:
          sub_1C988F358();
          OUTLINED_FUNCTION_3_51();
          OUTLINED_FUNCTION_12_35();
          OUTLINED_FUNCTION_37();
          v40();
          swift_unknownObjectRelease();
          uint64_t v41 = OUTLINED_FUNCTION_2_47();
          v42(v41);
          uint64_t v22 = 2;
          break;
        case 5:
          sub_1C988F30C();
          OUTLINED_FUNCTION_3_51();
          OUTLINED_FUNCTION_37();
          v43();
          swift_unknownObjectRelease();
          uint64_t v44 = OUTLINED_FUNCTION_2_47();
          v45(v44);
          uint64_t v22 = 3;
          break;
        default:
          sub_1C988F488();
          OUTLINED_FUNCTION_3_51();
          OUTLINED_FUNCTION_37();
          v30();
          swift_unknownObjectRelease();
          uint64_t v31 = OUTLINED_FUNCTION_2_47();
          v32(v31);
          uint64_t v22 = 0;
          break;
      }
    }
    else
    {
      sub_1C9BEE228();
      swift_allocError();
      uint64_t v34 = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D788);
      *uint64_t v34 = &type metadata for If.State;
      uint64_t v22 = v21;
      sub_1C9BEE458();
      sub_1C9BEE208();
      OUTLINED_FUNCTION_112();
      (*(void (**)(void *))(v35 + 104))(v34);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v21, v14);
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v52);
  return v22;
}

uint64_t sub_1C988E6D8()
{
  return sub_1C977D50C();
}

uint64_t sub_1C988E6F8(uint64_t a1)
{
  unint64_t v2 = sub_1C988F3F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988E734(uint64_t a1)
{
  unint64_t v2 = sub_1C988F3F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988E770(uint64_t a1)
{
  unint64_t v2 = sub_1C988F488();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988E7AC(uint64_t a1)
{
  unint64_t v2 = sub_1C988F488();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988E7E8()
{
  return sub_1C988DA9C(*v0);
}

uint64_t sub_1C988E7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C988D7D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C988E818@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C988DA94();
  *a1 = result;
  return result;
}

uint64_t sub_1C988E840(uint64_t a1)
{
  unint64_t v2 = sub_1C988F2C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988E87C(uint64_t a1)
{
  unint64_t v2 = sub_1C988F2C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988E8B8(uint64_t a1)
{
  unint64_t v2 = sub_1C988F30C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988E8F4(uint64_t a1)
{
  unint64_t v2 = sub_1C988F30C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988E930(uint64_t a1)
{
  unint64_t v2 = sub_1C988F358();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988E96C(uint64_t a1)
{
  unint64_t v2 = sub_1C988F358();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988E9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C986E4A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C988E9D4(uint64_t a1)
{
  unint64_t v2 = sub_1C988F3A4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988EA10(uint64_t a1)
{
  unint64_t v2 = sub_1C988F3A4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988EA4C(uint64_t a1)
{
  unint64_t v2 = sub_1C988F43C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988EA88(uint64_t a1)
{
  unint64_t v2 = sub_1C988F43C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C988EAC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C988DFE8(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C988EAF4(void *a1)
{
  return sub_1C988DB80(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t If.deinit()
{
  sub_1C988EE38(v0 + 16);
  swift_bridgeObjectRelease();
  sub_1C9629FFC(*(void *)(v0 + 80));
  return v0;
}

uint64_t If.__deallocating_deinit()
{
  If.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C988EB78@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C988CC80(a1);
}

uint64_t sub_1C988EB9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 88);
  a1[3] = type metadata accessor for Conclude();
  a1[4] = (uint64_t)&protocol witness table for Conclude<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
  type metadata accessor for ConcludeWithValueFlow();
  swift_getWitnessTable();
  return ActingFlow.conclude(with:)(v3, (uint64_t)boxed_opaque_existential_0);
}

uint64_t sub_1C988EC64()
{
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v1 + 8))();
  return v0;
}

uint64_t sub_1C988ECD0()
{
  sub_1C988EC64();

  return swift_deallocClassInstance();
}

uint64_t sub_1C988ED28@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C988EB9C(a1);
}

uint64_t sub_1C988ED4C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA58E9D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  *(void *)(inited + 32) = a1;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain_n();
  sub_1C965F20C();
  swift_setDeallocating();
  sub_1C95FE440();
  return v4;
}

void sub_1C988EDDC(uint64_t a1)
{
  sub_1C988D6E0(a1, v1, "run else body");
}

void sub_1C988EE00(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C988EE38(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C988EE68()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C988EEA0(uint64_t a1)
{
  sub_1C988D5B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C988EEA8(char *a1)
{
  sub_1C988D428(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C988EEB0(uint64_t a1)
{
  sub_1C988D6E0(a1, v1, "run if body");
}

void sub_1C988EED4(char *a1)
{
  sub_1C988D2CC(a1, v1);
}

uint64_t method lookup function for If(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for If);
}

uint64_t dispatch thunk of If.__allocating_init<A>(_:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of If.elseIf<A>(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of If.elseIf(_:_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of If.else(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of If.action.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t sub_1C988EF98()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ConcludeWithValueFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C988F044()
{
  return sub_1C96EB270(&qword_1EA58F530, &qword_1EA58F538);
}

uint64_t sub_1C988F080()
{
  return sub_1C96EB270(&qword_1EA58F530, &qword_1EA58F538);
}

uint64_t getEnumTagSinglePayload for If.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for If.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C988F140(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1C988F158(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for If.State()
{
  return &type metadata for If.State;
}

uint64_t destroy for If.ConditionBodyPair(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_release();
}

void initializeWithCopy for If.ConditionBodyPair(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  sub_1C9BEC838();
}

void assignWithCopy for If.ConditionBodyPair(void *a1, void *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  sub_1C9BEC838();
}

uint64_t assignWithTake for If.ConditionBodyPair(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for If.ConditionBodyPair()
{
  return &type metadata for If.ConditionBodyPair;
}

unint64_t sub_1C988F2C0()
{
  unint64_t result = qword_1EA58F578;
  if (!qword_1EA58F578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F578);
  }
  return result;
}

unint64_t sub_1C988F30C()
{
  unint64_t result = qword_1EA58F580;
  if (!qword_1EA58F580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F580);
  }
  return result;
}

unint64_t sub_1C988F358()
{
  unint64_t result = qword_1EA58F588;
  if (!qword_1EA58F588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F588);
  }
  return result;
}

unint64_t sub_1C988F3A4()
{
  unint64_t result = qword_1EA58F590;
  if (!qword_1EA58F590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F590);
  }
  return result;
}

unint64_t sub_1C988F3F0()
{
  unint64_t result = qword_1EA58F598;
  if (!qword_1EA58F598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F598);
  }
  return result;
}

unint64_t sub_1C988F43C()
{
  unint64_t result = qword_1EA58F5A0;
  if (!qword_1EA58F5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F5A0);
  }
  return result;
}

unint64_t sub_1C988F488()
{
  unint64_t result = qword_1EA58F5A8;
  if (!qword_1EA58F5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F5A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for If.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C988F5A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for If.State.CodingKeys()
{
  return &type metadata for If.State.CodingKeys;
}

ValueMetadata *type metadata accessor for If.State.CheckIfCodingKeys()
{
  return &type metadata for If.State.CheckIfCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.RunIfBodyCodingKeys()
{
  return &type metadata for If.State.RunIfBodyCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.CheckElseIfCodingKeys()
{
  return &type metadata for If.State.CheckElseIfCodingKeys;
}

unsigned char *_s11SiriKitFlow2IfC5StateO21CheckElseIfCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C988F6A8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for If.State.RunElseIfBodyCodingKeys()
{
  return &type metadata for If.State.RunElseIfBodyCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.RunElseBodyCodingKeys()
{
  return &type metadata for If.State.RunElseBodyCodingKeys;
}

ValueMetadata *type metadata accessor for If.State.DoneCodingKeys()
{
  return &type metadata for If.State.DoneCodingKeys;
}

unint64_t sub_1C988F704()
{
  unint64_t result = qword_1EA58F5F0;
  if (!qword_1EA58F5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F5F0);
  }
  return result;
}

unint64_t sub_1C988F754()
{
  unint64_t result = qword_1EA58F5F8;
  if (!qword_1EA58F5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F5F8);
  }
  return result;
}

unint64_t sub_1C988F7A4()
{
  unint64_t result = qword_1EA58F600;
  if (!qword_1EA58F600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F600);
  }
  return result;
}

unint64_t sub_1C988F7F4()
{
  unint64_t result = qword_1EA58F608;
  if (!qword_1EA58F608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F608);
  }
  return result;
}

unint64_t sub_1C988F844()
{
  unint64_t result = qword_1EA58F610;
  if (!qword_1EA58F610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F610);
  }
  return result;
}

unint64_t sub_1C988F894()
{
  unint64_t result = qword_1EA58F618;
  if (!qword_1EA58F618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F618);
  }
  return result;
}

unint64_t sub_1C988F8E4()
{
  unint64_t result = qword_1EA58F620;
  if (!qword_1EA58F620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F620);
  }
  return result;
}

unint64_t sub_1C988F934()
{
  unint64_t result = qword_1EA58F628;
  if (!qword_1EA58F628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F628);
  }
  return result;
}

unint64_t sub_1C988F984()
{
  unint64_t result = qword_1EA58F630;
  if (!qword_1EA58F630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F630);
  }
  return result;
}

unint64_t sub_1C988F9D4()
{
  unint64_t result = qword_1EA58F638;
  if (!qword_1EA58F638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F638);
  }
  return result;
}

unint64_t sub_1C988FA24()
{
  unint64_t result = qword_1EA58F640;
  if (!qword_1EA58F640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F640);
  }
  return result;
}

unint64_t sub_1C988FA74()
{
  unint64_t result = qword_1EA58F648;
  if (!qword_1EA58F648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F648);
  }
  return result;
}

unint64_t sub_1C988FAC4()
{
  unint64_t result = qword_1EA58F650;
  if (!qword_1EA58F650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F650);
  }
  return result;
}

unint64_t sub_1C988FB14()
{
  unint64_t result = qword_1EA58F658;
  if (!qword_1EA58F658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F658);
  }
  return result;
}

unint64_t sub_1C988FB64()
{
  unint64_t result = qword_1EA58F660;
  if (!qword_1EA58F660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F660);
  }
  return result;
}

unint64_t sub_1C988FBB4()
{
  unint64_t result = qword_1EA58F668;
  if (!qword_1EA58F668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F668);
  }
  return result;
}

unint64_t sub_1C988FC04()
{
  unint64_t result = qword_1EA58F670;
  if (!qword_1EA58F670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F670);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_51()
{
  return sub_1C9BEE448();
}

uint64_t OUTLINED_FUNCTION_5_46()
{
  return sub_1C9BEE4F8();
}

uint64_t OUTLINED_FUNCTION_6_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_35()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_12_35()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_29()
{
  return swift_beginAccess();
}

uint64_t IFClientActionParse.clientAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C9BEC8F8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t IFClientActionParse.init(clientAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C9BEC8F8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_1C988FE28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6341746E65696C63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1C988FEC8()
{
  return 0x6341746E65696C63;
}

uint64_t sub_1C988FEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C988FE28(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C988FF18(uint64_t a1)
{
  unint64_t v2 = sub_1C98900C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C988FF54(uint64_t a1)
{
  unint64_t v2 = sub_1C98900C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IFClientActionParse.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F678);
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C98900C0();
  sub_1C9BEE7A8();
  sub_1C9BEC8F8();
  sub_1C9890358(&qword_1EA58F688);
  sub_1C9BEE568();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v9, v2);
}

unint64_t sub_1C98900C0()
{
  unint64_t result = qword_1EA58F680;
  if (!qword_1EA58F680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F680);
  }
  return result;
}

uint64_t IFClientActionParse.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C9BEC8F8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v23 = v5;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v26 = v9 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F690);
  OUTLINED_FUNCTION_0_2();
  uint64_t v25 = v11;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_6_0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for IFClientActionParse();
  MEMORY[0x1F4188790](v17 - 8, v18);
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v20 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C98900C0();
  sub_1C9BEE798();
  if (!v2)
  {
    sub_1C9890358(&qword_1EA58F698);
    sub_1C9BEE4C8();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v16, v10);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v21, v26, v4);
    sub_1C989039C(v21, a2);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for IFClientActionParse()
{
  uint64_t result = qword_1EBC79E08;
  if (!qword_1EBC79E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C9890358(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C9BEC8F8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C989039C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IFClientActionParse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9890400@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IFClientActionParse.init(from:)(a1, a2);
}

uint64_t sub_1C9890418(void *a1)
{
  return IFClientActionParse.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for IFClientActionParse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for IFClientActionParse(uint64_t a1)
{
  uint64_t v2 = sub_1C9BEC8F8();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for IFClientActionParse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for IFClientActionParse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for IFClientActionParse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for IFClientActionParse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for IFClientActionParse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C98906A8);
}

uint64_t sub_1C98906A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for IFClientActionParse(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9890704);
}

uint64_t sub_1C9890704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEC8F8();

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1C9890750()
{
  uint64_t result = sub_1C9BEC8F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IFClientActionParse.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9890878);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IFClientActionParse.CodingKeys()
{
  return &type metadata for IFClientActionParse.CodingKeys;
}

unint64_t sub_1C98908B4()
{
  unint64_t result = qword_1EA58F6A0;
  if (!qword_1EA58F6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F6A0);
  }
  return result;
}

unint64_t sub_1C9890904()
{
  unint64_t result = qword_1EA58F6A8;
  if (!qword_1EA58F6A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F6A8);
  }
  return result;
}

unint64_t sub_1C9890954()
{
  unint64_t result = qword_1EA58F6B0;
  if (!qword_1EA58F6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA58F6B0);
  }
  return result;
}

void OUTLINED_FUNCTION_20_29(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 512;
}

uint64_t ImmediateContinuationFlow.__allocating_init(flowProducer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t ImmediateContinuationFlow.init(flowProducer:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1C98909FC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C9890A1C, 0, 0);
}

void sub_1C9890A1C()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  (*(void (**)(void))(*(void *)(v0 + 24) + 16))();
  static ExecuteResponse.complete(next:)(v1);
}

uint64_t ImmediateContinuationFlow.deinit()
{
  swift_release();
  return v0;
}

uint64_t ImmediateContinuationFlow.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9890AF4()
{
  return sub_1C9890A98();
}

uint64_t sub_1C9890B18(uint64_t a1)
{
  int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *int v3 = v1;
  v3[1] = sub_1C961A658;
  return sub_1C98909FC(a1);
}

void sub_1C9890BB4(uint64_t a1@<X8>)
{
}

uint64_t type metadata accessor for ImmediateContinuationFlow()
{
  return self;
}

uint64_t method lookup function for ImmediateContinuationFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImmediateContinuationFlow);
}

uint64_t dispatch thunk of ImmediateContinuationFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.__allocating_init(flowProducer:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ImmediateContinuationFlow.execute()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 112) + **(int **)(*(void *)v1 + 112));
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_1C969F5FC;
  return v6(a1);
}

uint64_t dispatch thunk of ImmediateContinuationFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1C9890D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C96C3A20();
  uint64_t v6 = swift_allocError();
  *uint64_t v7 = a1;
  v7[1] = a2;
  *a3 = v6;
  type metadata accessor for FlowActionType(0);
  swift_storeEnumTagMultiPayload();

  return swift_bridgeObjectRetain();
}

uint64_t Inform.__allocating_init(_:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  Inform.init(_:)(a1);
  return v2;
}

uint64_t sub_1C9890E50@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return sub_1C9890E78(a1, a2, a3, a4, qword_1EA58F710, &qword_1EA588F28, (void (*)(uint64_t, uint64_t))sub_1C96E5998, a5);
}

uint64_t sub_1C9890E78@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, void (*a7)(uint64_t, uint64_t)@<X6>, uint64_t a8@<X8>)
{
  uint64_t v25 = a7;
  type metadata accessor for FlowActionType(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v20 = a8 + v19[7];
  *(void *)uint64_t v20 = a1;
  uint64_t v21 = a2 & 1;
  *(unsigned char *)(v20 + 8) = v21;
  uint64_t v22 = a8 + v19[8];
  sub_1C96C3D08(a3, v22);
  *(unsigned char *)(a8 + v19[9]) = a4;
  *((void *)v18 + 3) = __swift_instantiateConcreteTypeFromMangledName(a6);
  *(void *)uint64_t v18 = a1;
  v18[8] = v21;
  v25(a1, v21);
  sub_1C95FE76C(a3, &qword_1EBC77350);
  sub_1C96C3D08(v22, (uint64_t)(v18 + 32));
  v18[72] = a4;
  swift_storeEnumTagMultiPayload();
  return sub_1C96C3DD0((uint64_t)v18, a8);
}

uint64_t sub_1C9890FC4(uint64_t a1)
{
  unsigned int v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C97CD5F4(a1, v4);
}

BOOL static Inform.Status.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Inform.Status.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t Inform.Status.hashValue.getter()
{
  return sub_1C9BEE768();
}

id sub_1C9891108@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 56);
  *(void *)a1 = v2;
  unsigned __int8 v3 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_1C98923E0(v2, v3);
}

void sub_1C989111C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  unsigned int v4 = *(void **)(v1 + 56);
  *(void *)(v1 + 56) = v2;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(v1 + 64) = v3;
  sub_1C978EF64(v4, v5);
}

uint64_t sub_1C9891138(uint64_t a1, uint64_t a2)
{
  *(_WORD *)(v2 + 64) = 255;
  *(void *)(v2 + 40) = &type metadata for ClosureOutputGenerator;
  *(void *)(v2 + 48) = &off_1F23E2670;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t Inform.init(_:)(long long *a1)
{
  *(void *)(v1 + 56) = 0;
  *(_WORD *)(v1 + 64) = 255;
  sub_1C95FD5D8(a1, v1 + 16);
  return v1;
}

uint64_t Inform.action.getter@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for FlowActionType(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F6D0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v10 = MEMORY[0x1F4188790](v8, v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v28 - v14;
  sub_1C9891108((uint64_t)&v32);
  if (BYTE8(v32) == 255)
  {
    a1[3] = type metadata accessor for Abort(0);
    a1[4] = (uint64_t)&protocol witness table for Abort;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
    return sub_1C9890D90(0xD000000000000020, 0x80000001C9C20440, boxed_opaque_existential_0);
  }
  else
  {
    uint64_t v16 = v32;
    if (BYTE8(v32) & 1) == 0 && *(unsigned char *)(v1 + 65) && (v32)
    {
      uint64_t v34 = 0;
      long long v32 = 0u;
      long long v33 = 0u;
      uint64_t v17 = &v12[v7[7]];
      *(void *)uint64_t v17 = v16;
      v17[8] = 0;
      uint64_t v18 = (uint64_t)&v12[v7[8]];
      sub_1C96C3D08((uint64_t)&v32, v18);
      v12[v7[9]] = 0;
      unint64_t v29 = a1;
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F6D8);
      *((void *)v6 + 3) = v19;
      *(void *)uint64_t v6 = v16;
      v6[8] = 0;
      sub_1C95FE76C((uint64_t)&v32, &qword_1EBC77350);
      sub_1C96C3D08(v18, (uint64_t)(v6 + 32));
      v6[72] = 0;
      swift_storeEnumTagMultiPayload();
      sub_1C96C3DD0((uint64_t)v6, (uint64_t)v12);
      uint64_t v20 = *(void **)v17;
      LOBYTE(v17) = v17[8];
      sub_1C96C3D08(v18, (uint64_t)&v32);
      uint64_t v21 = &v15[v7[7]];
      *(void *)uint64_t v21 = v20;
      v21[8] = (char)v17;
      uint64_t v22 = (uint64_t)&v15[v7[8]];
      sub_1C96C3D08((uint64_t)&v32, v22);
      v15[v7[9]] = 1;
      *((void *)v6 + 3) = v19;
      *(void *)uint64_t v6 = v20;
      v6[8] = (char)v17;
      sub_1C96E5998(v20, (char)v17);
      sub_1C96E5998(v20, (char)v17);
      sub_1C95FE76C((uint64_t)&v32, &qword_1EBC77350);
      a1 = v29;
      sub_1C96C3D08(v22, (uint64_t)(v6 + 32));
      v6[72] = 1;
      swift_storeEnumTagMultiPayload();
      sub_1C96C3DD0((uint64_t)v6, (uint64_t)v15);
      sub_1C95FE76C((uint64_t)v12, &qword_1EA58F6D0);
      *((void *)&v33 + 1) = v7;
      uint64_t v34 = &protocol witness table for Conclude<A>;
      uint64_t v23 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v32);
      sub_1C98914D0((uint64_t)v15, (uint64_t)v23);
    }
    else
    {
      char v26 = BYTE8(v32) & 1;
      uint64_t v31 = 0;
      memset(v30, 0, sizeof(v30));
      *((void *)&v33 + 1) = v7;
      uint64_t v34 = &protocol witness table for Conclude<A>;
      uint64_t v27 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v32);
      sub_1C9890E78(v16, v26, (uint64_t)v30, 0, &qword_1EA58F6D0, &qword_1EA58F6D8, (void (*)(uint64_t, uint64_t))sub_1C96E5998, (uint64_t)v27);
    }
    return sub_1C95FD5D8(&v32, (uint64_t)a1);
  }
}

uint64_t sub_1C98914D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Inform.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1C978EF64(*(void **)(v0 + 56), *(unsigned char *)(v0 + 64));
  return v0;
}

uint64_t Inform.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1C978EF64(*(void **)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocClassInstance();
}

uint64_t sub_1C98915A8@<X0>(uint64_t *a1@<X8>)
{
  return Inform.action.getter(a1);
}

void Inform.onSuccess(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58BB38);
  swift_allocObject();
  sub_1C9BEC838();
}

uint64_t sub_1C989168C()
{
  swift_release();

  return swift_deallocObject();
}

void Inform.yieldOnInterruption()()
{
  *(unsigned char *)(v0 + 65) = 1;
  sub_1C9BEC838();
}

void ActingFlow<>.onSuccess(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C9BEC838();
}

uint64_t sub_1C9891784(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void Inform.interruptionPolicy.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t Inform.withSideEffect.getter()
{
  return 1;
}

uint64_t Inform.execute(with:)(uint64_t a1)
{
  *(void *)(v2 + 152) = a1;
  *(void *)(v2 + 160) = v1;
  return MEMORY[0x1F4188298](sub_1C98917E0, 0, 0);
}

uint64_t sub_1C98917E0()
{
  uint64_t v1 = *(void **)(v0 + 160);
  sub_1C95FD5F0(*(void *)(v0 + 152), v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v0 + 168) = v2;
  *(void *)(v0 + 184) = __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v2);
  uint64_t v3 = v1 + 2;
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C9891920;
  return v8(v0 + 56, v4, v5);
}

uint64_t sub_1C9891920()
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  v3[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C9891C28, 0, 0);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v3[22] + 8) + **(int **)(v3[22] + 8));
    uint64_t v6 = (void *)swift_task_alloc();
    v3[26] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_1C9891AC8;
    uint64_t v7 = v3[22];
    uint64_t v8 = v3[21];
    return v10(v3 + 7, v8, v7);
  }
}

uint64_t sub_1C9891AC8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2 + 56;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v3);
  if (v0) {
    uint64_t v7 = sub_1C9891DA8;
  }
  else {
    uint64_t v7 = sub_1C9891BB8;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1C9891BB8()
{
  uint64_t v5 = v0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v3 = 0;
  char v4 = 0;
  sub_1C989111C(&v3);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9891C28()
{
  uint64_t v21 = v1;
  uint64_t v2 = *(void **)(v1 + 200);
  __swift_destroy_boxed_opaque_existential_1(v1 + 16);
  OUTLINED_FUNCTION_6_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  if (OUTLINED_FUNCTION_8_36())
  {
    OUTLINED_FUNCTION_7_39();

    uint64_t v19 = 1;
    char v20 = 0;
    sub_1C989111C(&v19);
    uint64_t v3 = *(void **)(v1 + 128);
    goto LABEL_11;
  }

  *(v0 - 1) = v2;
  id v4 = v2;
  if (OUTLINED_FUNCTION_8_36())
  {
    uint64_t v5 = *(void **)(v1 + 96);
    unsigned __int8 v6 = *(unsigned char *)(v1 + 104);
    if (v6)
    {
      uint64_t v7 = *(void **)(v1 + 96);
    }
    else
    {
      OUTLINED_FUNCTION_5_47();
      if (OUTLINED_FUNCTION_9_36())
      {
        OUTLINED_FUNCTION_7_39();

        uint64_t v19 = 1;
        char v20 = 0;
        sub_1C989111C(&v19);
        sub_1C96B11CC(v5, 0);
        uint64_t v3 = *(void **)(v1 + 120);
        goto LABEL_11;
      }
      uint64_t v7 = v5;
      unsigned __int8 v6 = 0;
    }
    sub_1C96B11CC(v7, v6);
  }

  OUTLINED_FUNCTION_10_35(v8, v9, v10, v11, v12, v13, v14, v15, v18, v19, v20);
  sub_1C989111C(&v19);
  uint64_t v3 = v2;
LABEL_11:

  OUTLINED_FUNCTION_22_0();
  return v16();
}

uint64_t sub_1C9891DA8()
{
  uint64_t v21 = v1;
  uint64_t v2 = *(void **)(v1 + 216);
  __swift_destroy_boxed_opaque_existential_1(v1 + 16);
  OUTLINED_FUNCTION_6_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  if (OUTLINED_FUNCTION_8_36())
  {
    OUTLINED_FUNCTION_7_39();

    uint64_t v19 = 1;
    char v20 = 0;
    sub_1C989111C(&v19);
    uint64_t v3 = *(void **)(v1 + 128);
    goto LABEL_11;
  }

  *(v0 - 1) = v2;
  id v4 = v2;
  if (OUTLINED_FUNCTION_8_36())
  {
    uint64_t v5 = *(void **)(v1 + 96);
    unsigned __int8 v6 = *(unsigned char *)(v1 + 104);
    if (v6)
    {
      uint64_t v7 = *(void **)(v1 + 96);
    }
    else
    {
      OUTLINED_FUNCTION_5_47();
      if (OUTLINED_FUNCTION_9_36())
      {
        OUTLINED_FUNCTION_7_39();

        uint64_t v19 = 1;
        char v20 = 0;
        sub_1C989111C(&v19);
        sub_1C96B11CC(v5, 0);
        uint64_t v3 = *(void **)(v1 + 120);
        goto LABEL_11;
      }
      uint64_t v7 = v5;
      unsigned __int8 v6 = 0;
    }
    sub_1C96B11CC(v7, v6);
  }

  OUTLINED_FUNCTION_10_35(v8, v9, v10, v11, v12, v13, v14, v15, v18, v19, v20);
  sub_1C989111C(&v19);
  uint64_t v3 = v2;
LABEL_11:

  OUTLINED_FUNCTION_22_0();
  return v16();
}

void Inform.cancel(error:)(void *a1)
{
  uint64_t v1 = a1;
  unsigned __int8 v6 = a1;
  id v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  if (swift_dynamicCast())
  {

    sub_1C9891108((uint64_t)&v6);
    uint64_t v3 = (uint64_t)v6;
    if (v7 == 255) {
      uint64_t v3 = 1;
    }
    unsigned __int8 v6 = (void *)v3;
    v7 &= v7 != 255;
  }
  else
  {
    sub_1C9891108((uint64_t)&v6);
    if (v7 == 255)
    {
      id v4 = v1;
      char v5 = 1;
    }
    else
    {
      uint64_t v1 = v6;
      char v5 = v7 & 1;
    }
    unsigned __int8 v6 = v1;
    unsigned __int8 v7 = v5;
  }
  sub_1C989111C((uint64_t *)&v6);
}

void sub_1C9891FF4(unsigned char *a1@<X8>)
{
}

uint64_t sub_1C989200C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615010;
  return Inform.execute(with:)(a1);
}

void sub_1C98920A4(void *a1)
{
}

unint64_t sub_1C98920CC()
{
  unint64_t result = qword_1EA58F6E8;
  if (!qword_1EA58F6E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA58F6E8);
  }
  return result;
}