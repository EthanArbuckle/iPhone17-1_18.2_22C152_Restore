void sub_1C992CABC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t vars8;

  v6 = *(void *)(a4 + 16);
  v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  v8 = ((((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v7 >= a3)
  {
    v12 = 0;
  }
  else
  {
    v9 = a3 - v7;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      v10 = v9 + 1;
    }
    else {
      v10 = 2;
    }
    if (v10 >= 0x10000) {
      v11 = 4;
    }
    else {
      v11 = 2;
    }
    if (v10 < 0x100) {
      v11 = 1;
    }
    if (v10 >= 2) {
      v12 = v11;
    }
    else {
      v12 = 0;
    }
  }
  if (a2 > v7)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      v13 = a2 - v7;
    }
    else {
      v13 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFE8)
    {
      v14 = ~v7 + a2;
      bzero(a1, v8);
      *(_DWORD *)a1 = v14;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_29;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C992CC5CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_28;
    default:
LABEL_28:
      if (a2)
      {
LABEL_29:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t getEnumTagSinglePayload for Page(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Page(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Page()
{
  return &type metadata for Page;
}

uint64_t dispatch thunk of PaginatedConversationDelegate.pageSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PaginatedConversationDelegate.pageSizePadding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PaginatedConversationDelegate.makeAction(introducingItems:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PaginatedConversationDelegate.makeAction(forItem:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PaginatedConversationDelegate.makeGroup(withActions:nextPage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t type metadata accessor for PaginatedConversationFlowSource()
{
  return self;
}

uint64_t method lookup function for PaginatedConversationFlowSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PaginatedConversationFlowSource);
}

uint64_t dispatch thunk of PaginatedConversationFlowSource.__allocating_init<A>(items:delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C992CD94(uint64_t a1, uint64_t a2)
{
  return sub_1C992C28C(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C992CDA4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C992C478(a1, *(uint64_t (**)(uint64_t, char *))(v2 + 32), a2);
}

void static PaginationStyle.noPagination()(void *a1@<X8>)
{
  *a1 = 0;
  OUTLINED_FUNCTION_3_69((uint64_t)a1);
}

uint64_t PaginatedItemContainer.page.getter()
{
  uint64_t result = *(void *)(v0 + 8);
  if (*(void *)(v0 + 16) < result)
  {
    __break(1u);
  }
  else
  {
    sub_1C9BED9C8();
    sub_1C9BEE008();
    swift_getWitnessTable();
    return sub_1C9BED9B8();
  }
  return result;
}

BOOL static PaginationStyle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 8) == 1) {
    return (*(unsigned char *)(a2 + 8) & 1) != 0;
  }
  if (*(unsigned char *)(a2 + 8)) {
    return 0;
  }
  return *(void *)a1 == *(void *)a2;
}

uint64_t static PaginationRequest.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8))
  {
    if (!*((unsigned char *)a2 + 8)) {
      return v2 == v3;
    }
    return 0;
  }
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v4 == 1) {
      return v2 == v3;
    }
    return 0;
  }
  switch(v2)
  {
    case 1:
      if (v4 != 2 || v3 != 1) {
        return 0;
      }
      break;
    case 2:
      if (v4 != 2 || v3 != 2) {
        return 0;
      }
      break;
    case 3:
      if (v4 != 2 || v3 != 3) {
        return 0;
      }
      break;
    default:
      if (v4 != 2 || v3 != 0) {
        return 0;
      }
      break;
  }
  return 1;
}

void static PaginationRequest.firstPage()(void *a1@<X8>)
{
  *a1 = 0;
  OUTLINED_FUNCTION_0_49((uint64_t)a1);
}

void static PaginationRequest.lastPage()(void *a1@<X8>)
{
  *a1 = 1;
  OUTLINED_FUNCTION_0_49((uint64_t)a1);
}

void static PaginationRequest.previousPage()(uint64_t a1@<X8>)
{
  *(void *)a1 = 2;
  *(unsigned char *)(a1 + 8) = 2;
}

void static PaginationRequest.nextPage()(void *a1@<X8>)
{
  *a1 = 3;
  OUTLINED_FUNCTION_0_49((uint64_t)a1);
}

void static PaginationRequest.nextItems(_:)(void *a1@<X8>, uint64_t a2@<X0>)
{
  *a1 = a2;
  OUTLINED_FUNCTION_3_69((uint64_t)a1);
}

uint64_t sub_1C992CF94(uint64_t a1, char a2)
{
  if (!a2)
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0x756F69766572702ELL;
    goto LABEL_5;
  }
  if (a2 == 1)
  {
    uint64_t v3 = 0x6574497478656E2ELL;
LABEL_5:
    uint64_t v6 = v3;
    sub_1C9BEE5A8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
    return v6;
  }
  uint64_t result = 0x615074737269662ELL;
  switch(a1)
  {
    case 1:
      unsigned int v5 = 1935764526;
      goto LABEL_10;
    case 2:
      uint64_t result = 0x756F69766572702ELL;
      break;
    case 3:
      unsigned int v5 = 2019913262;
LABEL_10:
      uint64_t result = v5 | 0x6761507400000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C992D108()
{
  return sub_1C992CF94(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t PaginationOutOfBounds.description.getter()
{
  if (*v0) {
    return 0x68747275466F6E2ELL;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t PaginationOutOfBounds.debugDescription.getter()
{
  if (*v0) {
    return 0x68747275466F6E2ELL;
  }
  else {
    return 0xD000000000000010;
  }
}

BOOL static PaginationOutOfBounds.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PaginationOutOfBounds.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t PaginationOutOfBounds.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t PaginatedItemContainer.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PaginatedItemContainer.pageSize.getter()
{
  if (*(unsigned char *)(v0 + 40) == 1) {
    JUMPOUT(0x1CB78AB10);
  }
  return *(void *)(v0 + 32);
}

void PaginatedItemContainer.paginationOutOfBoundsError.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t PaginatedItemContainer.init(items:paginationStyle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)a2;
  int v8 = *(unsigned __int8 *)(a2 + 8);
  swift_bridgeObjectRetain();
  uint64_t v9 = v7;
  if (v8 == 1) {
    uint64_t v9 = MEMORY[0x1CB78AB10](a1, a3);
  }
  uint64_t v10 = MEMORY[0x1CB78AB10](a1, a3);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    if (v10 >= v9) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = v10;
    }
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = 0;
    if (v12 == v10 - 1) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = v12;
    }
    *(void *)(a4 + 16) = v13;
    *(unsigned char *)(a4 + 24) = 2;
    *(void *)(a4 + 32) = v7;
    *(unsigned char *)(a4 + 40) = v8;
  }
  return result;
}

Swift::Int __swiftcall PaginatedItemContainer.getCurrentPageIndex()()
{
  long long v3 = *(_OWORD *)(v0 + 8);
  Swift::Int result = PaginatedItemContainer.pageSize.getter();
  if (result)
  {
    if ((void)v3 != 0x8000000000000000 || result != -1) {
      return (uint64_t)v3 / result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1C992D3B4()
{
  unint64_t result = qword_1EA592368[0];
  if (!qword_1EA592368[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA592368);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PaginationStyle(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

void type metadata accessor for PaginationStyle()
{
}

void type metadata accessor for PaginationRequest()
{
}

unsigned char *storeEnumTagSinglePayload for PaginationOutOfBounds(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C992D518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void type metadata accessor for PaginationOutOfBounds()
{
}

uint64_t sub_1C992D54C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C992D554(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C992D5A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  return a1;
}

uint64_t sub_1C992D614(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t sub_1C992D66C(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 41))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C992D6AC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for PaginatedItemContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C992D710(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
        int v3 = 2;
      }
      else {
        int v3 = *(unsigned __int8 *)(a1 + 16);
      }
      int v4 = v3 - 3;
      if (*(unsigned __int8 *)(a1 + 16) < 2u) {
        int v2 = -1;
      }
      else {
        int v2 = v4;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C992D75C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

uint64_t type metadata accessor for PaginatedItemContainer.PageBounds()
{
  return __swift_instantiateGenericMetadata();
}

void type metadata accessor for PaginationRequest.PaginationRequestType()
{
}

void type metadata accessor for PaginationStyle.PaginationStyleType()
{
}

void sub_1C992D7D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  char v5 = *(unsigned char *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  char v7 = *(unsigned char *)(v2 + 40);
  uint64_t v21 = *(void *)v2;
  long long v22 = *(_OWORD *)(v2 + 8);
  char v23 = v5;
  uint64_t v24 = v6;
  char v25 = v7;
  uint64_t v19 = v3;
  char v20 = v4;
  sub_1C992D9F0((uint64_t)&v19, a2, (uint64_t)v26);
  uint64_t v8 = v26[0];
  uint64_t v9 = v26[1];
  char v10 = v27;
  *(void *)(v2 + 8) = v26[0];
  *(void *)(v2 + 16) = v9;
  *(unsigned char *)(v2 + 24) = v10;
  uint64_t v21 = v8;
  *(void *)&long long v22 = v9;
  BYTE8(v22) = v10;
  type metadata accessor for PaginatedItemContainer.PageBounds();
  uint64_t v11 = sub_1C992DCA0();
  unint64_t v13 = v12;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C9BECF88();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  v15 = sub_1C9BECF78();
  os_log_type_t v16 = sub_1C9BEDC78();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v21 = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    v26[0] = sub_1C95FF228(v11, v13, &v21);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v15, v16, "Pagination boundaries adjusted: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v18, -1, -1);
    MEMORY[0x1CB78C440](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1C992D9F0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)result;
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  uint64_t v9 = v3[2];
  if (!*(unsigned char *)(result + 8))
  {
    if (!v8)
    {
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = v9;
      *(unsigned char *)(a3 + 16) = 0;
      return result;
    }
    if (v8 >= v6)
    {
      if (__OFSUB__(v8, v6))
      {
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      uint64_t v15 = (v8 - v6) & ~((v8 - v6) >> 63);
      BOOL v16 = __OFADD__(v15, v6);
      uint64_t v17 = v15 + v6;
      if (v16)
      {
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        JUMPOUT(0x1C992DC90);
      }
      unint64_t result = MEMORY[0x1CB78AB10](v7, *(void *)(a2 + 16));
      if (result >= v17) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = result;
      }
      *(void *)a3 = v15;
      *(void *)(a3 + 8) = v18;
    }
    else
    {
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = v8;
    }
LABEL_22:
    char v14 = 2;
    goto LABEL_23;
  }
  char v10 = *((unsigned char *)v3 + 24);
  uint64_t v11 = v3[4];
  char v12 = *((unsigned char *)v3 + 40);
  if (*(unsigned char *)(result + 8) != 1)
  {
    switch(v6)
    {
      case 1:
        uint64_t v19 = sub_1C992DF0C(a2);
        uint64_t v28 = v7;
        uint64_t v29 = v8;
        uint64_t v30 = v9;
        char v31 = v10;
        uint64_t v32 = v11;
        char v33 = v12;
        uint64_t v22 = v7;
        uint64_t v23 = v8;
        uint64_t v24 = v9;
        char v25 = v10;
        uint64_t v26 = v11;
        char v27 = v12;
        uint64_t v20 = PaginatedItemContainer.pageSize.getter();
        BOOL v16 = __OFADD__(v19, v20);
        uint64_t v21 = v19 + v20;
        if (v16) {
          goto LABEL_31;
        }
        unint64_t result = sub_1C992DEC4(v21, a2);
        *(void *)a3 = v19;
        goto LABEL_21;
      case 2:
        uint64_t v28 = *v3;
        uint64_t v29 = v8;
        uint64_t v30 = v9;
        char v31 = v10;
        uint64_t v32 = v11;
        char v33 = v12;
        uint64_t v23 = v8;
        uint64_t v24 = v9;
        char v25 = v10;
        uint64_t v26 = v11;
        char v27 = v12;
        uint64_t v22 = PaginatedItemContainer.pageSize.getter();
        LOBYTE(v23) = 0;
        return sub_1C992D9F0(&v22, a2);
      case 3:
        uint64_t v28 = *v3;
        uint64_t v29 = v8;
        uint64_t v30 = v9;
        char v31 = v10;
        uint64_t v32 = v11;
        char v33 = v12;
        uint64_t v23 = v8;
        uint64_t v24 = v9;
        char v25 = v10;
        uint64_t v26 = v11;
        char v27 = v12;
        uint64_t v22 = PaginatedItemContainer.pageSize.getter();
        LOBYTE(v23) = 1;
        return sub_1C992D9F0(&v22, a2);
      default:
        uint64_t v28 = *v3;
        uint64_t v29 = v8;
        uint64_t v30 = v9;
        char v31 = v10;
        uint64_t v32 = v11;
        char v33 = v12;
        uint64_t v22 = v7;
        uint64_t v23 = v8;
        uint64_t v24 = v9;
        char v25 = v10;
        uint64_t v26 = v11;
        char v27 = v12;
        uint64_t v13 = PaginatedItemContainer.pageSize.getter();
        unint64_t result = sub_1C992DEC4(v13, a2);
        *(void *)a3 = 0;
        goto LABEL_21;
    }
  }
  unint64_t result = MEMORY[0x1CB78AB10](*v3, *(void *)(a2 + 16));
  if (v9 < result)
  {
    uint64_t v28 = v7;
    uint64_t v29 = v8;
    uint64_t v30 = v9;
    char v31 = v10;
    uint64_t v32 = v11;
    char v33 = v12;
    if (!__OFADD__(v9, v6))
    {
      unint64_t result = sub_1C992DEC4(v9 + v6, a2);
      *(void *)a3 = v9;
LABEL_21:
      *(void *)(a3 + 8) = result;
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_29;
  }
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v9;
  char v14 = 1;
LABEL_23:
  *(unsigned char *)(a3 + 16) = v14;
  return result;
}

uint64_t sub_1C992DCA0()
{
  if (*(unsigned char *)(v0 + 16) == 2)
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "[startIndex=");
    BYTE5(v2[1]) = 0;
    HIWORD(v2[1]) = -5120;
    sub_1C9BEE5A8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
    sub_1C9BEE5A8();
  }
  else
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    strcpy((char *)v2, "[startIndex=");
    BYTE5(v2[1]) = 0;
    HIWORD(v2[1]) = -5120;
    sub_1C9BEE5A8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
    sub_1C9BEE5A8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
  }
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  return v2[0];
}

uint64_t sub_1C992DEC4(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1CB78AB10](*v2, *(void *)(a2 + 16));
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    if (result >= a1) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = result;
    }
    if (v5 != result - 1) {
      return v5;
    }
  }
  return result;
}

uint64_t sub_1C992DF0C(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1CB78AB10](*v1, *(void *)(a1 + 16));
  uint64_t result = PaginatedItemContainer.pageSize.getter();
  if (!result)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v2 == 0x8000000000000000 && result == -1) {
    goto LABEL_27;
  }
  if (v2 % result == 1) {
    goto LABEL_16;
  }
  if (v2 % result)
  {
    uint64_t result = PaginatedItemContainer.pageSize.getter();
    if (!result)
    {
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    if (v2 == 0x8000000000000000 && result == -1) {
      goto LABEL_35;
    }
    BOOL v6 = __OFSUB__(v2, v2 % result);
    uint64_t result = v2 - v2 % result;
    if (v6) {
      goto LABEL_33;
    }
    return result;
  }
  uint64_t result = PaginatedItemContainer.pageSize.getter();
  if (!result)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v2 == 0x8000000000000000 && result == -1) {
    goto LABEL_34;
  }
  BOOL v6 = __OFSUB__(v2 / result, 1);
  uint64_t v2 = v2 / result - 1;
  if (v6) {
    goto LABEL_31;
  }
  uint64_t v7 = PaginatedItemContainer.pageSize.getter();
  uint64_t result = v2 * v7;
  if ((unsigned __int128)(v2 * (__int128)v7) >> 64 != (v2 * v7) >> 63)
  {
    __break(1u);
LABEL_16:
    uint64_t result = PaginatedItemContainer.pageSize.getter();
    uint64_t v8 = result + 1;
    if (!__OFADD__(result, 1))
    {
      BOOL v6 = __OFSUB__(v2, v8);
      uint64_t v9 = v2 - v8;
      if (!v6) {
        return v9 & ~(v9 >> 63);
      }
      goto LABEL_32;
    }
    goto LABEL_29;
  }
  return result;
}

void OUTLINED_FUNCTION_0_49(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 8) = 2;
}

uint64_t OUTLINED_FUNCTION_2_65@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void OUTLINED_FUNCTION_3_69(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 8) = 1;
}

void *initializeBufferWithCopyOfBuffer for ParameterClause(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  BOOL v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v6, v8);
      goto LABEL_27;
    case 1u:
      uint64_t v9 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v5, v6, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)v5 + *(int *)(v10 + 48)) = *(void *)((char *)v6 + *(int *)(v10 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v11 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v11;
      v5[2] = v6[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      *uint64_t v5 = *v6;
      swift_unknownObjectRetain();
      goto LABEL_27;
    case 4u:
      uint64_t v12 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
      goto LABEL_27;
    case 5u:
      uint64_t v13 = (void *)*v6;
      *uint64_t v5 = *v6;
      id v14 = v13;
      goto LABEL_27;
    case 6u:
      uint64_t v15 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v5, v6, v15);
      BOOL v16 = (int *)type metadata accessor for USOParse();
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v5 + v17;
      uint64_t v19 = (char *)v6 + v17;
      uint64_t v20 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v41 = v16[6];
      v42 = (void *)((char *)v5 + v41);
      v43 = (void *)((char *)v6 + v41);
      uint64_t v44 = v43[1];
      void *v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v16[7];
      v46 = (char *)v5 + v45;
      v47 = (char *)v6 + v45;
      v46[4] = v47[4];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      uint64_t v22 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v5, v6, v22);
      uint64_t v23 = (int *)type metadata accessor for USOParse();
      uint64_t v24 = v23[5];
      char v25 = (char *)v5 + v24;
      uint64_t v26 = (char *)v6 + v24;
      uint64_t v27 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      }
      uint64_t v48 = v23[6];
      v49 = (void *)((char *)v5 + v48);
      v50 = (void *)((char *)v6 + v48);
      uint64_t v51 = v50[1];
      void *v49 = *v50;
      v49[1] = v51;
      uint64_t v52 = v23[7];
      v53 = (char *)v5 + v52;
      v54 = (char *)v6 + v52;
      v53[4] = v54[4];
      *(_DWORD *)v53 = *(_DWORD *)v54;
      v55 = (int *)type metadata accessor for LinkParse();
      uint64_t v56 = v55[5];
      v57 = (void *)((char *)v5 + v56);
      v58 = (void *)((char *)v6 + v56);
      uint64_t v59 = v58[1];
      void *v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v55[6];
      v61 = (void *)((char *)v5 + v60);
      v62 = (void *)((char *)v6 + v60);
      uint64_t v63 = v62[1];
      void *v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v55[7];
      v65 = (void *)((char *)v5 + v64);
      v66 = (void *)((char *)v6 + v64);
      uint64_t v67 = v66[1];
      void *v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 8u:
      uint64_t v29 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v5, v6, v29);
      uint64_t v30 = (int *)type metadata accessor for NLRouterParse();
      uint64_t v31 = v30[5];
      uint64_t v32 = (void *)((char *)v5 + v31);
      char v33 = (void *)((char *)v6 + v31);
      uint64_t v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = v30[6];
      v36 = (char *)v5 + v35;
      v37 = (char *)v6 + v35;
      v38 = (int *)type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, (uint64_t)v38))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v36, v37, v68);
        uint64_t v69 = v38[5];
        __dst = &v36[v69];
        v70 = &v37[v69];
        uint64_t v71 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(__dst, v70, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v71);
        }
        uint64_t v73 = v38[6];
        v74 = &v36[v73];
        v75 = &v37[v73];
        uint64_t v76 = *((void *)v75 + 1);
        *(void *)v74 = *(void *)v75;
        *((void *)v74 + 1) = v76;
        uint64_t v77 = v38[7];
        v78 = &v36[v77];
        v79 = &v37[v77];
        v78[4] = v79[4];
        *(_DWORD *)v78 = *(_DWORD *)v79;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, (uint64_t)v38);
      }
      uint64_t v80 = v30[7];
      v81 = *(void **)((char *)v6 + v80);
      *(void *)((char *)v5 + v80) = v81;
      id v82 = v81;
      goto LABEL_27;
    case 9u:
      uint64_t v40 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v5, v6, v40);
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void destroy for ParameterClause(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void **)(a1 + *(int *)(a2 + 20));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v3 = sub_1C9BEC028();
      goto LABEL_30;
    case 1u:
      uint64_t v4 = sub_1C9BEC028();
      (*(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      return;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 3u:
      swift_unknownObjectRelease();
      return;
    case 4u:
      uint64_t v3 = sub_1C9BEAC48();
      goto LABEL_30;
    case 5u:
      uint64_t v5 = *v2;
      goto LABEL_26;
    case 6u:
      uint64_t v6 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v6 - 8) + 8))(v2, v6);
      uint64_t v7 = (uint64_t)v2 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v8 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
      goto LABEL_18;
    case 7u:
      uint64_t v9 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v9 - 8) + 8))(v2, v9);
      uint64_t v10 = (uint64_t)v2 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v11 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      uint64_t v12 = sub_1C9BEC928();
      (*(void (**)(void **, uint64_t))(*(void *)(v12 - 8) + 8))(v2, v12);
      uint64_t v13 = type metadata accessor for NLRouterParse();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t)v2 + *(int *)(v13 + 24);
      uint64_t v15 = type metadata accessor for USOParse();
      if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
      {
        uint64_t v16 = sub_1C9BEAF18();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
        uint64_t v17 = v14 + *(int *)(v15 + 20);
        uint64_t v18 = sub_1C9BEAE48();
        if (!__swift_getEnumTagSinglePayload(v17, 1, v18)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v5 = *(void **)((char *)v2 + *(int *)(v13 + 28));
LABEL_26:

      break;
    case 9u:
      uint64_t v3 = sub_1C9BEC8F8();
LABEL_30:
      uint64_t v19 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
      v19(v2, v3);
      break;
    default:
      return;
  }
}

void *initializeWithCopy for ParameterClause(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)((char *)a1 + v4);
  uint64_t v6 = (void *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v6, v8);
      goto LABEL_25;
    case 1u:
      uint64_t v9 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v5, v6, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)v5 + *(int *)(v10 + 48)) = *(void *)((char *)v6 + *(int *)(v10 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v11 = v6[1];
      *uint64_t v5 = *v6;
      v5[1] = v11;
      v5[2] = v6[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 3u:
      *uint64_t v5 = *v6;
      swift_unknownObjectRetain();
      goto LABEL_25;
    case 4u:
      uint64_t v12 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
      goto LABEL_25;
    case 5u:
      uint64_t v13 = (void *)*v6;
      *uint64_t v5 = *v6;
      id v14 = v13;
      goto LABEL_25;
    case 6u:
      uint64_t v15 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v5, v6, v15);
      uint64_t v16 = (int *)type metadata accessor for USOParse();
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v5 + v17;
      uint64_t v19 = (char *)v6 + v17;
      uint64_t v20 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v41 = v16[6];
      v42 = (void *)((char *)v5 + v41);
      v43 = (void *)((char *)v6 + v41);
      uint64_t v44 = v43[1];
      void *v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v16[7];
      v46 = (char *)v5 + v45;
      v47 = (char *)v6 + v45;
      v46[4] = v47[4];
      *(_DWORD *)v46 = *(_DWORD *)v47;
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 7u:
      uint64_t v22 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v5, v6, v22);
      uint64_t v23 = (int *)type metadata accessor for USOParse();
      uint64_t v24 = v23[5];
      char v25 = (char *)v5 + v24;
      uint64_t v26 = (char *)v6 + v24;
      uint64_t v27 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      }
      uint64_t v48 = v23[6];
      v49 = (void *)((char *)v5 + v48);
      v50 = (void *)((char *)v6 + v48);
      uint64_t v51 = v50[1];
      void *v49 = *v50;
      v49[1] = v51;
      uint64_t v52 = v23[7];
      v53 = (char *)v5 + v52;
      v54 = (char *)v6 + v52;
      v53[4] = v54[4];
      *(_DWORD *)v53 = *(_DWORD *)v54;
      v55 = (int *)type metadata accessor for LinkParse();
      uint64_t v56 = v55[5];
      v57 = (void *)((char *)v5 + v56);
      v58 = (void *)((char *)v6 + v56);
      uint64_t v59 = v58[1];
      void *v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v55[6];
      v61 = (void *)((char *)v5 + v60);
      v62 = (void *)((char *)v6 + v60);
      uint64_t v63 = v62[1];
      void *v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v55[7];
      v65 = (void *)((char *)v5 + v64);
      v66 = (void *)((char *)v6 + v64);
      uint64_t v67 = v66[1];
      void *v65 = *v66;
      v65[1] = v67;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 8u:
      uint64_t v29 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v5, v6, v29);
      uint64_t v30 = (int *)type metadata accessor for NLRouterParse();
      uint64_t v31 = v30[5];
      uint64_t v32 = (void *)((char *)v5 + v31);
      char v33 = (void *)((char *)v6 + v31);
      uint64_t v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = v30[6];
      v36 = (char *)v5 + v35;
      v37 = (char *)v6 + v35;
      v38 = (int *)type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, (uint64_t)v38))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v36, v37, v68);
        uint64_t v69 = v38[5];
        __dst = &v36[v69];
        v70 = &v37[v69];
        uint64_t v71 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v70, 1, v71))
        {
          uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v70, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(__dst, v70, v71);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v71);
        }
        uint64_t v73 = v38[6];
        v74 = &v36[v73];
        v75 = &v37[v73];
        uint64_t v76 = *((void *)v75 + 1);
        *(void *)v74 = *(void *)v75;
        *((void *)v74 + 1) = v76;
        uint64_t v77 = v38[7];
        v78 = &v36[v77];
        v79 = &v37[v77];
        v78[4] = v79[4];
        *(_DWORD *)v78 = *(_DWORD *)v79;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, (uint64_t)v38);
      }
      uint64_t v80 = v30[7];
      v81 = *(void **)((char *)v6 + v80);
      *(void *)((char *)v5 + v80) = v81;
      id v82 = v81;
      goto LABEL_25;
    case 9u:
      uint64_t v40 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v5, v6, v40);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for ParameterClause(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    sub_1C97F25EC((uint64_t)a1 + v4);
    uint64_t v7 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v6, v8);
        goto LABEL_26;
      case 1u:
        uint64_t v9 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v5, v6, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)((char *)v5 + *(int *)(v10 + 48)) = *(void *)((char *)v6 + *(int *)(v10 + 48));
        sub_1C9BEC838();
      case 2u:
        *uint64_t v5 = *v6;
        v5[1] = v6[1];
        v5[2] = v6[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *uint64_t v5 = *v6;
        swift_unknownObjectRetain();
        goto LABEL_26;
      case 4u:
        uint64_t v11 = sub_1C9BEAC48();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v5, v6, v11);
        goto LABEL_26;
      case 5u:
        uint64_t v12 = (void *)*v6;
        *uint64_t v5 = *v6;
        id v13 = v12;
        goto LABEL_26;
      case 6u:
        uint64_t v14 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v5, v6, v14);
        uint64_t v15 = (int *)type metadata accessor for USOParse();
        uint64_t v16 = v15[5];
        uint64_t v17 = (char *)v5 + v16;
        uint64_t v18 = (char *)v6 + v16;
        uint64_t v19 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
        }
        uint64_t v39 = v15[6];
        uint64_t v40 = (void *)((char *)v5 + v39);
        uint64_t v41 = (void *)((char *)v6 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        uint64_t v42 = v15[7];
        v43 = (char *)v5 + v42;
        uint64_t v44 = (char *)v6 + v42;
        int v45 = *(_DWORD *)v44;
        v43[4] = v44[4];
        *(_DWORD *)v43 = v45;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 7u:
        uint64_t v21 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v5, v6, v21);
        uint64_t v22 = (int *)type metadata accessor for USOParse();
        uint64_t v23 = v22[5];
        uint64_t v24 = (char *)v5 + v23;
        char v25 = (char *)v6 + v23;
        uint64_t v26 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
        }
        uint64_t v46 = v22[6];
        v47 = (void *)((char *)v5 + v46);
        uint64_t v48 = (void *)((char *)v6 + v46);
        void *v47 = *v48;
        v47[1] = v48[1];
        uint64_t v49 = v22[7];
        v50 = (char *)v5 + v49;
        uint64_t v51 = (char *)v6 + v49;
        int v52 = *(_DWORD *)v51;
        v50[4] = v51[4];
        *(_DWORD *)v50 = v52;
        v53 = (int *)type metadata accessor for LinkParse();
        uint64_t v54 = v53[5];
        v55 = (void *)((char *)v5 + v54);
        uint64_t v56 = (void *)((char *)v6 + v54);
        void *v55 = *v56;
        v55[1] = v56[1];
        uint64_t v57 = v53[6];
        v58 = (void *)((char *)v5 + v57);
        uint64_t v59 = (void *)((char *)v6 + v57);
        void *v58 = *v59;
        v58[1] = v59[1];
        uint64_t v60 = v53[7];
        v61 = (void *)((char *)v5 + v60);
        v62 = (void *)((char *)v6 + v60);
        void *v61 = *v62;
        v61[1] = v62[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 8u:
        uint64_t v28 = sub_1C9BEC928();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v5, v6, v28);
        uint64_t v29 = (int *)type metadata accessor for NLRouterParse();
        uint64_t v30 = v29[5];
        uint64_t v31 = (void *)((char *)v5 + v30);
        uint64_t v32 = (void *)((char *)v6 + v30);
        *uint64_t v31 = *v32;
        v31[1] = v32[1];
        uint64_t v33 = v29[6];
        uint64_t v34 = (char *)v5 + v33;
        uint64_t v35 = (char *)v6 + v33;
        v36 = (int *)type metadata accessor for USOParse();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, (uint64_t)v36))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          uint64_t v63 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v34, v35, v63);
          uint64_t v64 = v36[5];
          __dst = &v34[v64];
          v65 = &v35[v64];
          uint64_t v66 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
          {
            uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v65, *(void *)(*(void *)(v67 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(__dst, v65, v66);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v66);
          }
          uint64_t v68 = v36[6];
          uint64_t v69 = &v34[v68];
          v70 = &v35[v68];
          *(void *)uint64_t v69 = *(void *)v70;
          *((void *)v69 + 1) = *((void *)v70 + 1);
          uint64_t v71 = v36[7];
          uint64_t v72 = &v34[v71];
          uint64_t v73 = &v35[v71];
          int v74 = *(_DWORD *)v73;
          v72[4] = v73[4];
          *(_DWORD *)uint64_t v72 = v74;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, (uint64_t)v36);
        }
        uint64_t v75 = v29[7];
        uint64_t v76 = *(void **)((char *)v6 + v75);
        *(void *)((char *)v5 + v75) = v76;
        id v77 = v76;
        goto LABEL_26;
      case 9u:
        uint64_t v38 = sub_1C9BEC8F8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v5, v6, v38);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *initializeWithTake for ParameterClause(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
      goto LABEL_22;
    case 1u:
      uint64_t v9 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v5[*(int *)(v10 + 48)] = *(void *)&v6[*(int *)(v10 + 48)];
      goto LABEL_22;
    case 4u:
      uint64_t v11 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v5, v6, v11);
      goto LABEL_22;
    case 6u:
      uint64_t v12 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
      id v13 = (int *)type metadata accessor for USOParse();
      uint64_t v14 = v13[5];
      uint64_t v15 = &v5[v14];
      uint64_t v16 = &v6[v14];
      uint64_t v17 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      }
      *(_OWORD *)&v5[v13[6]] = *(_OWORD *)&v6[v13[6]];
      uint64_t v34 = v13[7];
      uint64_t v35 = &v5[v34];
      v36 = &v6[v34];
      v35[4] = v36[4];
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      goto LABEL_22;
    case 7u:
      uint64_t v19 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v5, v6, v19);
      uint64_t v20 = (int *)type metadata accessor for USOParse();
      uint64_t v21 = v20[5];
      uint64_t v22 = &v5[v21];
      uint64_t v23 = &v6[v21];
      uint64_t v24 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      *(_OWORD *)&v5[v20[6]] = *(_OWORD *)&v6[v20[6]];
      uint64_t v37 = v20[7];
      uint64_t v38 = &v5[v37];
      uint64_t v39 = &v6[v37];
      v38[4] = v39[4];
      *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
      uint64_t v40 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v5[v40[5]] = *(_OWORD *)&v6[v40[5]];
      *(_OWORD *)&v5[v40[6]] = *(_OWORD *)&v6[v40[6]];
      *(_OWORD *)&v5[v40[7]] = *(_OWORD *)&v6[v40[7]];
      goto LABEL_22;
    case 8u:
      uint64_t v26 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v5, v6, v26);
      uint64_t v27 = (int *)type metadata accessor for NLRouterParse();
      *(_OWORD *)&v5[v27[5]] = *(_OWORD *)&v6[v27[5]];
      uint64_t v28 = v27[6];
      uint64_t v29 = &v5[v28];
      uint64_t v30 = &v6[v28];
      uint64_t v31 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, (uint64_t)v31))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v41 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v29, v30, v41);
        uint64_t v42 = v31[5];
        __dst = &v29[v42];
        v43 = &v30[v42];
        uint64_t v44 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
        {
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(__dst, v43, v44);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v44);
        }
        *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
        uint64_t v46 = v31[7];
        v47 = &v29[v46];
        uint64_t v48 = &v30[v46];
        v47[4] = v48[4];
        *(_DWORD *)v47 = *(_DWORD *)v48;
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, (uint64_t)v31);
      }
      *(void *)&v5[v27[7]] = *(void *)&v6[v27[7]];
      goto LABEL_22;
    case 9u:
      uint64_t v33 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v5, v6, v33);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for ParameterClause(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    uint64_t v6 = (char *)a2 + v4;
    sub_1C97F25EC((uint64_t)a1 + v4);
    uint64_t v7 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
        goto LABEL_23;
      case 1u:
        uint64_t v9 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v5[*(int *)(v10 + 48)] = *(void *)&v6[*(int *)(v10 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v11 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v5, v6, v11);
        goto LABEL_23;
      case 6u:
        uint64_t v12 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
        id v13 = (int *)type metadata accessor for USOParse();
        uint64_t v14 = v13[5];
        uint64_t v15 = &v5[v14];
        uint64_t v16 = &v6[v14];
        uint64_t v17 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
        }
        *(_OWORD *)&v5[v13[6]] = *(_OWORD *)&v6[v13[6]];
        uint64_t v34 = v13[7];
        uint64_t v35 = &v5[v34];
        v36 = &v6[v34];
        v35[4] = v36[4];
        *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
        goto LABEL_23;
      case 7u:
        uint64_t v19 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v5, v6, v19);
        uint64_t v20 = (int *)type metadata accessor for USOParse();
        uint64_t v21 = v20[5];
        uint64_t v22 = &v5[v21];
        uint64_t v23 = &v6[v21];
        uint64_t v24 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        }
        *(_OWORD *)&v5[v20[6]] = *(_OWORD *)&v6[v20[6]];
        uint64_t v37 = v20[7];
        uint64_t v38 = &v5[v37];
        uint64_t v39 = &v6[v37];
        v38[4] = v39[4];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        uint64_t v40 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v5[v40[5]] = *(_OWORD *)&v6[v40[5]];
        *(_OWORD *)&v5[v40[6]] = *(_OWORD *)&v6[v40[6]];
        *(_OWORD *)&v5[v40[7]] = *(_OWORD *)&v6[v40[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v26 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v5, v6, v26);
        uint64_t v27 = (int *)type metadata accessor for NLRouterParse();
        *(_OWORD *)&v5[v27[5]] = *(_OWORD *)&v6[v27[5]];
        uint64_t v28 = v27[6];
        uint64_t v29 = &v5[v28];
        uint64_t v30 = &v6[v28];
        uint64_t v31 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, (uint64_t)v31))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v29, v30, v41);
          uint64_t v42 = v31[5];
          __dst = &v29[v42];
          v43 = &v30[v42];
          uint64_t v44 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
          {
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v43, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(__dst, v43, v44);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v44);
          }
          *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
          uint64_t v46 = v31[7];
          v47 = &v29[v46];
          uint64_t v48 = &v30[v46];
          v47[4] = v48[4];
          *(_DWORD *)v47 = *(_DWORD *)v48;
          __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, (uint64_t)v31);
        }
        *(void *)&v5[v27[7]] = *(void *)&v6[v27[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v33 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v5, v6, v33);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C99309D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for Parse(0);

  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_1C9930A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for Parse(0);

  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t sub_1C9930A74()
{
  uint64_t result = type metadata accessor for Parse(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C9930B10(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 > 1u)
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    unint64_t v3 = 0xD000000000000020;
  }
  else
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    unint64_t v3 = 0xD00000000000001ALL;
  }
  unint64_t v5 = v3;
  sub_1C9BED6B8();
  sub_1C9BED6B8();
  return v5;
}

unint64_t sub_1C9930C14()
{
  return sub_1C9930B10(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t type metadata accessor for ParameterWrapper()
{
  return self;
}

uint64_t sub_1C9930C48(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for ParameterError(uint64_t a1)
{
  return sub_1C9930C70(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1C9930C70(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s11SiriKitFlow14ParameterErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C9930C48(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ParameterError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C9930C48(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C9930C70(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ParameterError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C9930C70(v4, v5, v6);
  return a1;
}

uint64_t sub_1C9930D74(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ParameterError()
{
  return &type metadata for ParameterError;
}

uint64_t ParameterHints.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  type metadata accessor for ParameterClause();
  *(void *)(v0 + 16) = sub_1C9BED458();
  return v0;
}

uint64_t ParameterHints.init()()
{
  type metadata accessor for ParameterClause();
  *(void *)(v0 + 16) = sub_1C9BED458();
  return v0;
}

uint64_t ParameterHints.__allocating_init(hints:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t ParameterHints.init(hints:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t ParameterHints.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C9930E94(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC75460);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for ParameterHints(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParameterHints);
}

uint64_t dispatch thunk of ParameterHints.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ParameterHints.__allocating_init(hints:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ParameterHints.hasHintFor(parameter:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of ParameterHints.hintFor(parameter:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t OUTLINED_FUNCTION_0_50()
{
  return v0;
}

void ParameterNeedsConfirmationConcept.app.getter()
{
}

uint64_t ParameterNeedsConfirmationConcept.parameterName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

id ParameterNeedsConfirmationConcept.intentResolutionResult.getter()
{
  return *(id *)(v0 + 40);
}

id ParameterNeedsConfirmationConcept.intent.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t ParameterNeedsConfirmationConcept.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ParameterNeedsConfirmationConcept.typeNamesByValueType.getter()
{
  return swift_bridgeObjectRetain();
}

void *ParameterNeedsConfirmationConcept.__allocating_init(app:parameterName:intentResolutionResult:intent:typeNamesByValueType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = 0xD000000000000021;
  result[8] = 0x80000001C9C02AE0;
  result[9] = a6;
  return result;
}

void *ParameterNeedsConfirmationConcept.init(app:parameterName:intentResolutionResult:intent:typeNamesByValueType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = 0xD000000000000021;
  v6[8] = 0x80000001C9C02AE0;
  v6[9] = a6;
  return v6;
}

uint64_t ParameterNeedsConfirmationConcept.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ParameterNeedsConfirmationConcept.__deallocating_deinit()
{
  ParameterNeedsConfirmationConcept.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9931140()
{
  return ParameterNeedsConfirmationConcept.conceptType.getter();
}

uint64_t type metadata accessor for ParameterNeedsConfirmationConcept()
{
  return self;
}

uint64_t method lookup function for ParameterNeedsConfirmationConcept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParameterNeedsConfirmationConcept);
}

uint64_t dispatch thunk of ParameterNeedsConfirmationConcept.__allocating_init(app:parameterName:intentResolutionResult:intent:typeNamesByValueType:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ParameterNeedsConfirmationConcept.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void ParameterNeedsDisambiguationConcept.app.getter()
{
}

uint64_t ParameterNeedsDisambiguationConcept.parameterName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

id ParameterNeedsDisambiguationConcept.intentResolutionResult.getter()
{
  return *(id *)(v0 + 40);
}

id ParameterNeedsDisambiguationConcept.intent.getter()
{
  return *(id *)(v0 + 48);
}

uint64_t ParameterNeedsDisambiguationConcept.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ParameterNeedsDisambiguationConcept.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ParameterNeedsDisambiguationConcept.__deallocating_deinit()
{
  ParameterNeedsDisambiguationConcept.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C99312CC()
{
  return ParameterNeedsDisambiguationConcept.conceptType.getter();
}

uint64_t type metadata accessor for ParameterNeedsDisambiguationConcept()
{
  return self;
}

uint64_t method lookup function for ParameterNeedsDisambiguationConcept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParameterNeedsDisambiguationConcept);
}

uint64_t dispatch thunk of ParameterNeedsDisambiguationConcept.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void ParameterNeedsValueConcept.app.getter()
{
}

uint64_t ParameterNeedsValueConcept.parameterName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

id ParameterNeedsValueConcept.intent.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t ParameterNeedsValueConcept.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void *ParameterNeedsValueConcept.__allocating_init(app:parameterName:intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[6] = 0xD00000000000001ALL;
  result[7] = 0x80000001C9C02C10;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *ParameterNeedsValueConcept.init(app:parameterName:intent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = 0xD00000000000001ALL;
  v4[7] = 0x80000001C9C02C10;
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t ParameterNeedsValueConcept.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ParameterNeedsValueConcept.__deallocating_deinit()
{
  ParameterNeedsValueConcept.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C99314C8()
{
  return ParameterNeedsValueConcept.conceptType.getter();
}

uint64_t type metadata accessor for ParameterNeedsValueConcept()
{
  return self;
}

uint64_t method lookup function for ParameterNeedsValueConcept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParameterNeedsValueConcept);
}

uint64_t dispatch thunk of ParameterNeedsValueConcept.__allocating_init(app:parameterName:intent:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ParameterNeedsValueConcept.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_1C9931560()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_19_38(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C973D55C;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)();
}

uint64_t ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_246();
  return sub_1C99BF738();
}

uint64_t sub_1C993167C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14_48();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_19_38(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)();
}

uint64_t ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6734();
}

void sub_1C9931794()
{
}

void ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v2);
  char v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = &unk_1EA592480;
  OUTLINED_FUNCTION_12_1(v3);
}

void sub_1C9931964()
{
}

void ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v2 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v2);
  char v3 = (void *)swift_allocObject();
  v3[2] = 0;
  v3[3] = 0;
  v3[4] = &unk_1EA592488;
  OUTLINED_FUNCTION_12_1(v3);
}

uint64_t sub_1C9931B3C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)();
}

uint64_t ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_246();
  return sub_1C99BF738();
}

uint64_t sub_1C9931C5C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)();
}

uint64_t ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6734();
}

uint64_t sub_1C9931D7C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return sub_1C99BF738();
}

uint64_t sub_1C9931E18()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return sub_1C97D6734();
}

uint64_t sub_1C9931EB0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)();
}

uint64_t sub_1C9931F48()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)();
}

uint64_t sub_1C9931FE0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14_48();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_17_37(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)();
}

uint64_t sub_1C9932070()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_17_37(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)();
}

uint64_t sub_1C9932104()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14_48();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_20_42(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)();
}

uint64_t sub_1C9932194()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_20_42(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)();
}

uint64_t sub_1C9932228()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_14_48();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_18_37(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)();
}

uint64_t sub_1C99322B8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = swift_task_alloc();
  OUTLINED_FUNCTION_18_37(v1);
  OUTLINED_FUNCTION_6_56();
  *uint64_t v0 = v2;
  v0[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_61();
  return ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)();
}

uint64_t sub_1C9932350()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9932388()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  uint64_t v3 = OUTLINED_FUNCTION_102();
  return v4(v3);
}

uint64_t dispatch thunk of ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 16))();
}

uint64_t dispatch thunk of ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 24))();
}

uint64_t dispatch thunk of ParameterResolutionHandling.makeFlowCancelledResponse(app:intent:parameterName:)()
{
  OUTLINED_FUNCTION_7_51();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C973D55C;
  uint64_t v3 = OUTLINED_FUNCTION_19_21();
  return v4(v3);
}

uint64_t dispatch thunk of ParameterResolutionHandling.makeErrorResponse(app:intent:parameterName:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 40) + **(int **)(a8 + 40));
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_17_0(v16);
  void *v17 = v18;
  v17[1] = sub_1C965CED0;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of ParameterResolutionHandlingAsync.makeFlowCancelledResponse(app:intent:parameter:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16)
                                                                                     + **(int **)(a6 + 16));
  uint64_t v12 = swift_task_alloc();
  id v13 = (void *)OUTLINED_FUNCTION_17_0(v12);
  *id v13 = v14;
  v13[1] = sub_1C965CED0;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of ParameterResolutionHandlingAsync.makeErrorResponse(error:app:intent:parameter:)()
{
  OUTLINED_FUNCTION_7_51();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  uint64_t v3 = OUTLINED_FUNCTION_19_21();
  return v4(v3);
}

uint64_t OUTLINED_FUNCTION_4_61()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_37(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return type metadata accessor for RCHDelegateToNeedsConfirmationFlowStrategyAdapter();
}

uint64_t OUTLINED_FUNCTION_18_37(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return type metadata accessor for RCHDelegateToNeedsValueFlowStrategyAdapter();
}

uint64_t OUTLINED_FUNCTION_19_38(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return type metadata accessor for NeedsDisambiguationFlowStrategyAsyncAdapter();
}

uint64_t OUTLINED_FUNCTION_20_42(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return type metadata accessor for RCHDelegateToNeedsDisambiguationFlowStrategyAdapter();
}

uint64_t ParameterResolutionRecord.init(app:intent:parameterName:result:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = 0;
  *(unsigned char *)(a6 + 40) = 1;
  *(void *)(a6 + 48) = a5;
  return result;
}

SiriKitFlow::ParameterIdentifier __swiftcall ParameterIdentifier.init(_:)(Swift::String a1)
{
  *(Swift::String *)uint64_t v1 = a1;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  result.name = a1;
  return result;
}

SiriKitFlow::ParameterIdentifier __swiftcall ParameterIdentifier.init(name:multicardinalIndex:)(Swift::String name, Swift::Int_optional multicardinalIndex)
{
  *(Swift::String *)uint64_t v2 = name;
  *(void *)(v2 + 16) = multicardinalIndex.value;
  *(unsigned char *)(v2 + 24) = multicardinalIndex.is_nil;
  result.name = name;
  result.multicardinalIndex = multicardinalIndex;
  return result;
}

void sub_1C99329A0(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1C9BEC838();
}

uint64_t sub_1C9932A40(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

uint64_t sub_1C9932AB0(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C9932AF0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)SiriKitFlow::ParameterIdentifier result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)SiriKitFlow::ParameterIdentifier result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t assignWithCopy for ParameterIdentifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for ParameterIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ParameterIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)SiriKitFlow::ParameterIdentifier result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t ParameterUnsupportedConcept.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ParameterUnsupportedConcept.__allocating_init(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:typeNamesByValueType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 72) = 0xD00000000000001BLL;
  *(void *)(result + 80) = 0x80000001C9C02D70;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = a3;
  *(void *)(result + 40) = a4;
  *(void *)(result + 48) = a5;
  *(void *)(result + 56) = a6;
  *(unsigned char *)(result + 64) = a7 & 1;
  *(void *)(result + 88) = a8;
  return result;
}

uint64_t ParameterUnsupportedConcept.init(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:typeNamesByValueType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 72) = 0xD00000000000001BLL;
  *(void *)(v8 + 80) = 0x80000001C9C02D70;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(unsigned char *)(v8 + 64) = a7 & 1;
  *(void *)(v8 + 88) = a8;
  return v8;
}

uint64_t ParameterUnsupportedConcept.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ParameterUnsupportedConcept.__deallocating_deinit()
{
  ParameterUnsupportedConcept.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9932DB0()
{
  return ParameterUnsupportedConcept.conceptType.getter();
}

uint64_t type metadata accessor for ParameterUnsupportedConcept()
{
  return self;
}

uint64_t method lookup function for ParameterUnsupportedConcept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ParameterUnsupportedConcept);
}

uint64_t dispatch thunk of ParameterUnsupportedConcept.__allocating_init(app:parameterName:intentResolutionResult:intent:multicardinalValueIndex:typeNamesByValueType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7 + 136))(a1, a2, a3, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of ParameterUnsupportedConcept.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t ActionParaphrase.VerbEntityParaphrase.dialog.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t ActionParaphrase.VerbEntityParaphrase.label.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t ActionParaphrase.VerbEntityParaphrase.userStatedTask.getter()
{
  OUTLINED_FUNCTION_2_66();
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = OUTLINED_FUNCTION_134_0();

  return v1(v0);
}

uint64_t type metadata accessor for ActionParaphrase.VerbEntityParaphrase(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EBC790B8);
}

uint64_t ActionParaphrase.VerbEntityParaphrase.init(dialog:label:userStatedTask:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  OUTLINED_FUNCTION_2_66();
  OUTLINED_FUNCTION_8_4();
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 32);

  return v10(a6, a5, v8);
}

uint64_t ActionParaphrase.VerbEntityParaphrase.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5925A8);
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9933154();
  OUTLINED_FUNCTION_14_49();
  LOBYTE(v17) = 0;
  OUTLINED_FUNCTION_12_46();
  if (v1) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v3);
  }
  LOBYTE(v17) = 1;
  OUTLINED_FUNCTION_12_46();
  type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  sub_1C9BEB0C8();
  sub_1C9933880(&qword_1EA5925B8, MEMORY[0x1E4FA28C0]);
  uint64_t v10 = sub_1C9BECD58();
  unint64_t v12 = v11;
  uint64_t v17 = v10;
  unint64_t v18 = v11;
  v16[15] = 2;
  sub_1C9683B14();
  sub_1C9BEE568();
  uint64_t v13 = OUTLINED_FUNCTION_10_52();
  v14(v13);
  return sub_1C960B0D8(v10, v12);
}

unint64_t sub_1C9933154()
{
  unint64_t result = qword_1EA5925B0;
  if (!qword_1EA5925B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5925B0);
  }
  return result;
}

uint64_t ActionParaphrase.VerbEntityParaphrase.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v5 = sub_1C9BECD38();
  MEMORY[0x1F4188790](v5 - 8, v6);
  OUTLINED_FUNCTION_34_0();
  uint64_t v7 = sub_1C9BEB0C8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v28 = v8;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_20_0();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5925C0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v30 = v11;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_21_4();
  uint64_t v14 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v15, v16);
  unint64_t v18 = (uint64_t *)((char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = a1[3];
  uint64_t v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1C9933154();
  uint64_t v31 = v3;
  uint64_t v20 = v34;
  sub_1C9BEE798();
  if (v20) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  LOBYTE(v35) = 0;
  *unint64_t v18 = sub_1C9BEE488();
  v18[1] = v21;
  LOBYTE(v35) = 1;
  v18[2] = sub_1C9BEE488();
  v18[3] = v22;
  char v38 = 2;
  sub_1C9683BAC();
  uint64_t v34 = 0;
  sub_1C9BEE4C8();
  uint64_t v27 = v35;
  uint64_t v37 = 0;
  long long v35 = 0u;
  long long v36 = 0u;
  sub_1C9BECD28();
  sub_1C9933880(&qword_1EA5925B8, MEMORY[0x1E4FA28C0]);
  sub_1C9BECD48();
  uint64_t v23 = OUTLINED_FUNCTION_3_70();
  v24(v23);
  uint64_t v25 = (uint64_t)v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))((char *)v18 + *(int *)(v14 + 24), v2, v7);
  sub_1C9933DFC((uint64_t)v18, v29, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
  __swift_destroy_boxed_opaque_existential_1(v25);
  return sub_1C9933E58((uint64_t)v18, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
}

uint64_t sub_1C9933518()
{
  unint64_t v0 = sub_1C9BEE428();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C9933568(char a1)
{
  if (!a1) {
    return OUTLINED_FUNCTION_5_63();
  }
  if (a1 == 1) {
    return 0x6C6562616CLL;
  }
  return 0xD000000000000019;
}

uint64_t sub_1C99335AC(char *a1, char *a2)
{
  return sub_1C990C420(*a1, *a2);
}

uint64_t sub_1C99335B8()
{
  return sub_1C96A6ADC();
}

uint64_t sub_1C99335C0()
{
  return sub_1C98A4ABC();
}

uint64_t sub_1C99335C8()
{
  return sub_1C96A6E40();
}

uint64_t sub_1C99335D0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C9933518();
  *a1 = result;
  return result;
}

uint64_t sub_1C9933600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C9933568(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C993362C()
{
  return sub_1C9933568(*v0);
}

uint64_t sub_1C9933634@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C9933564();
  *a1 = result;
  return result;
}

void sub_1C993365C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C9933668(uint64_t a1)
{
  unint64_t v2 = sub_1C9933154();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C99336A4(uint64_t a1)
{
  unint64_t v2 = sub_1C9933154();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t ActionParaphrase.VerbEntityParaphrase.description.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t ActionParaphrase.VerbEntityParaphrase.hash(into:)()
{
  return sub_1C9BED4D8();
}

uint64_t sub_1C9933880(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static ActionParaphrase.VerbEntityParaphrase.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1C9BEE618() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (sub_1C9BEE618() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0) + 24);

  return MEMORY[0x1F41551E8]((char *)a1 + v6, (char *)a2 + v6);
}

uint64_t ActionParaphrase.VerbEntityParaphrase.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C9933A38@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionParaphrase.VerbEntityParaphrase.init(from:)(a1, a2);
}

uint64_t sub_1C9933A50(void *a1)
{
  return ActionParaphrase.VerbEntityParaphrase.encode(to:)(a1);
}

uint64_t sub_1C9933A74()
{
  return sub_1C9BEE768();
}

uint64_t ActionParaphrase.appBundleId.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t ActionParaphrase.verbEntityParaphrase.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_4_62();

  return sub_1C9933BE0(v1 + v3, a1);
}

uint64_t type metadata accessor for ActionParaphrase(uint64_t a1)
{
  return sub_1C95FCC2C(a1, qword_1EBC78E10);
}

uint64_t sub_1C9933BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ActionParaphrase.isEmpty.getter()
{
  uint64_t v3 = type metadata accessor for ActionParaphrase(0);
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3, v5);
  OUTLINED_FUNCTION_34_0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
  MEMORY[0x1F4188790](v6 - 8, v7);
  OUTLINED_FUNCTION_222();
  sub_1C9933BE0(v1 + *(int *)(v4 + 28), v2);
  uint64_t v8 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  LODWORD(v4) = __swift_getEnumTagSinglePayload(v2, 1, v8);
  sub_1C9933D9C(v2);
  sub_1C9933DFC(v1, v0, (void (*)(void))type metadata accessor for ActionParaphrase);
  if (v4 != 1)
  {
    sub_1C9933E58(v0, (void (*)(void))type metadata accessor for ActionParaphrase);
    return 0;
  }
  uint64_t v9 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_1C9933E58(v0, (void (*)(void))type metadata accessor for ActionParaphrase);
  if (v9)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t sub_1C9933D9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C9933DFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v4 = OUTLINED_FUNCTION_134_0();
  v5(v4);
  return a2;
}

uint64_t sub_1C9933E58(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t ActionParaphrase.init(appBundleId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  OUTLINED_FUNCTION_4_62();
  uint64_t v5 = (uint64_t)a3 + v4;
  uint64_t v6 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);

  return __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
}

uint64_t ActionParaphrase.init(appBundleId:verbEntityParaphrase:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  OUTLINED_FUNCTION_4_62();

  return sub_1C9933F48(a3, (uint64_t)a4 + v6);
}

uint64_t sub_1C9933F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static ActionParaphrase.noParaphrase()@<X0>(void *a1@<X8>)
{
  OUTLINED_FUNCTION_4_62();
  uint64_t v3 = (uint64_t)a1 + v2;
  uint64_t v4 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  uint64_t result = __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  *a1 = 0;
  a1[1] = 0;
  return result;
}

uint64_t ActionParaphrase.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_222();
  sub_1C9BEE188();
  sub_1C9BED6B8();
  swift_bridgeObjectRetain();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  OUTLINED_FUNCTION_4_62();
  sub_1C9933BE0(v0 + v4, v1);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C9934128(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C9C22DF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C9934230(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x6C646E7542707061;
  }
}

uint64_t sub_1C9934274()
{
  return sub_1C9934230(*v0);
}

uint64_t sub_1C993427C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9934128(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C99342A4(uint64_t a1)
{
  unint64_t v2 = sub_1C993448C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C99342E0(uint64_t a1)
{
  unint64_t v2 = sub_1C993448C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ActionParaphrase.encode(to:)(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5925D0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3, v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C993448C();
  OUTLINED_FUNCTION_14_49();
  sub_1C9BEE508();
  if (!v1)
  {
    type metadata accessor for ActionParaphrase(0);
    type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    sub_1C9933880(&qword_1EA5925E0, (void (*)(uint64_t))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
    sub_1C9BEE518();
  }
  uint64_t v5 = OUTLINED_FUNCTION_10_52();
  return v6(v5);
}

unint64_t sub_1C993448C()
{
  unint64_t result = qword_1EA5925D8;
  if (!qword_1EA5925D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5925D8);
  }
  return result;
}

uint64_t ActionParaphrase.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
  MEMORY[0x1F4188790](v6 - 8, v7);
  OUTLINED_FUNCTION_21_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5925E8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v10 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_20_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C993448C();
  sub_1C9BEE798();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  *uint64_t v3 = sub_1C9BEE468();
  v3[1] = v13;
  type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  sub_1C9933880(&qword_1EA5925F0, (void (*)(uint64_t))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
  sub_1C9BEE478();
  uint64_t v14 = OUTLINED_FUNCTION_13_55();
  v15(v14);
  sub_1C9933F48(v4, (uint64_t)v3 + *(int *)(v10 + 20));
  sub_1C9933DFC((uint64_t)v3, a2, (void (*)(void))type metadata accessor for ActionParaphrase);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1C9933E58((uint64_t)v3, (void (*)(void))type metadata accessor for ActionParaphrase);
}

uint64_t sub_1C9934754()
{
  return sub_1C9933880(&qword_1EA5925F8, (void (*)(uint64_t))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
}

uint64_t sub_1C993479C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionParaphrase.init(from:)(a1, a2);
}

uint64_t sub_1C99347B4(void *a1)
{
  return ActionParaphrase.encode(to:)(a1);
}

uint64_t dispatch thunk of ParaphrasableFlow.paraphrase()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C969F5FC;
  return v9(a1, a2, a3);
}

void *initializeBufferWithCopyOfBuffer for ActionParaphrase(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v10;
    uint64_t v11 = v7[3];
    v6[2] = v7[2];
    v6[3] = v11;
    uint64_t v12 = *(int *)(v8 + 24);
    uint64_t v13 = (char *)v6 + v12;
    uint64_t v14 = (char *)v7 + v12;
    uint64_t v15 = sub_1C9BEB0C8();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t destroy for ActionParaphrase(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + *(int *)(v5 + 24);
    uint64_t v8 = sub_1C9BEB0C8();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  return result;
}

void *initializeWithCopy for ActionParaphrase(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v10;
    uint64_t v11 = v7[3];
    v6[2] = v7[2];
    v6[3] = v11;
    uint64_t v12 = *(int *)(v8 + 24);
    uint64_t v13 = (char *)v6 + v12;
    uint64_t v14 = (char *)v7 + v12;
    uint64_t v15 = sub_1C9BEB0C8();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for ActionParaphrase(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v19 = *(int *)(v9 + 24);
      uint64_t v20 = (char *)v7 + v19;
      uint64_t v21 = (char *)v8 + v19;
      uint64_t v22 = sub_1C9BEB0C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
      return a1;
    }
    sub_1C9933E58((uint64_t)v7, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  uint64_t v12 = *(int *)(v9 + 24);
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_1C9BEB0C8();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for ActionParaphrase(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v9;
    uint64_t v10 = *(int *)(v7 + 24);
    int v11 = (char *)v5 + v10;
    uint64_t v12 = (char *)v6 + v10;
    uint64_t v13 = sub_1C9BEB0C8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for ActionParaphrase(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  long long v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      uint64_t v20 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = v9[3];
      v8[2] = v9[2];
      v8[3] = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = *(int *)(v10 + 24);
      uint64_t v23 = (char *)v8 + v22;
      uint64_t v24 = (char *)v9 + v22;
      uint64_t v25 = sub_1C9BEB0C8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
      return a1;
    }
    sub_1C9933E58((uint64_t)v8, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    memcpy(v8, v9, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  long long v13 = *((_OWORD *)v9 + 1);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *((_OWORD *)v8 + 1) = v13;
  uint64_t v14 = *(int *)(v10 + 24);
  uint64_t v15 = (char *)v8 + v14;
  uint64_t v16 = (char *)v9 + v14;
  uint64_t v17 = sub_1C9BEB0C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionParaphrase(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9935120);
}

uint64_t sub_1C9935120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    OUTLINED_FUNCTION_15_41();
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v10, a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for ActionParaphrase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C99351C0);
}

uint64_t sub_1C99351C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_1C9935244()
{
  sub_1C99352DC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C99352DC()
{
  if (!qword_1EBC790C8)
  {
    type metadata accessor for ActionParaphrase.VerbEntityParaphrase(255);
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBC790C8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ActionParaphrase.VerbEntityParaphrase(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C9BEB0C8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t destroy for ActionParaphrase.VerbEntityParaphrase(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C9BEB0C8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ActionParaphrase.VerbEntityParaphrase(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C9BEB0C8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

void *assignWithCopy for ActionParaphrase.VerbEntityParaphrase(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C9BEB0C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for ActionParaphrase.VerbEntityParaphrase(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C9BEB0C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *assignWithTake for ActionParaphrase.VerbEntityParaphrase(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C9BEB0C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionParaphrase.VerbEntityParaphrase(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C993573C);
}

uint64_t sub_1C993573C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_15_41();
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C9BEB0C8();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ActionParaphrase.VerbEntityParaphrase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C99357CC);
}

uint64_t sub_1C99357CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C9BEB0C8();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1C993584C()
{
  uint64_t result = sub_1C9BEB0C8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionParaphrase.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C99359B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionParaphrase.CodingKeys()
{
  return &type metadata for ActionParaphrase.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ActionParaphrase.VerbEntityParaphrase.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9935AB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionParaphrase.VerbEntityParaphrase.CodingKeys()
{
  return &type metadata for ActionParaphrase.VerbEntityParaphrase.CodingKeys;
}

unint64_t sub_1C9935AF0()
{
  unint64_t result = qword_1EA592608;
  if (!qword_1EA592608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592608);
  }
  return result;
}

unint64_t sub_1C9935B40()
{
  unint64_t result = qword_1EA592610;
  if (!qword_1EA592610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592610);
  }
  return result;
}

unint64_t sub_1C9935B90()
{
  unint64_t result = qword_1EA592618;
  if (!qword_1EA592618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592618);
  }
  return result;
}

unint64_t sub_1C9935BE0()
{
  unint64_t result = qword_1EA592620;
  if (!qword_1EA592620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592620);
  }
  return result;
}

unint64_t sub_1C9935C30()
{
  unint64_t result = qword_1EA592628;
  if (!qword_1EA592628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592628);
  }
  return result;
}

unint64_t sub_1C9935C80()
{
  unint64_t result = qword_1EA592630;
  if (!qword_1EA592630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592630);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_66()
{
  type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  return sub_1C9BEB0C8();
}

uint64_t OUTLINED_FUNCTION_3_70()
{
  return *(void *)(v0 - 160);
}

uint64_t OUTLINED_FUNCTION_4_62()
{
  return type metadata accessor for ActionParaphrase(0);
}

uint64_t OUTLINED_FUNCTION_5_63()
{
  return 0x676F6C616964;
}

uint64_t OUTLINED_FUNCTION_10_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_46()
{
  return sub_1C9BEE528();
}

uint64_t OUTLINED_FUNCTION_13_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_49()
{
  return sub_1C9BEE7A8();
}

uint64_t sub_1C9935DC4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592638);
  MEMORY[0x1F4188790](v6 - 8, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA592640);
  MEMORY[0x1F4188790](v11 - 8, v12);
  OUTLINED_FUNCTION_6_0();
  uint64_t v15 = v14 - v13;
  char v32 = 0;
  sub_1C95FD5F0(a1, (uint64_t)v29);
  type metadata accessor for Parse.ServerConversion();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v30;
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x1F4188790](v18, v18);
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v20 - v19;
  (*(void (**)(uint64_t))(v22 + 16))(v20 - v19);
  uint64_t v23 = sub_1C993F0B0((uint64_t)a2, (uint64_t)&v32, MEMORY[0x1E4FBC860], v21, v16, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650) + 48);
  uint64_t v30 = sub_1C9BEB698();
  uint64_t v31 = MEMORY[0x1E4FA3010];
  __swift_allocate_boxed_opaque_existential_0(v29);
  id v25 = a2;
  sub_1C9BEB688();
  uint64_t v26 = sub_1C9BEBF98();
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v26);
  uint64_t v27 = sub_1C9BEB768();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v27);
  sub_1C9BEC018();
  *(void *)(a3 + v24) = v23;
  type metadata accessor for Parse(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C9936084(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x746E65746E496C6ELL && a2 == 0xE800000000000000;
  if (v3 || (OUTLINED_FUNCTION_56_15(), (OUTLINED_FUNCTION_6_53() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v2 == 0xD000000000000010 && (OUTLINED_FUNCTION_36_23((uint64_t)"serverConversion"), v3))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    OUTLINED_FUNCTION_67_12();
    OUTLINED_FUNCTION_6_53();
    OUTLINED_FUNCTION_8_1();
    if (v2) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C993613C(char a1)
{
  if (a1) {
    return 0xD000000000000010;
  }
  else {
    return 0x746E65746E496C6ELL;
  }
}

uint64_t sub_1C9936178()
{
  return sub_1C993613C(*v0);
}

uint64_t sub_1C9936180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9936084(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C99361A8(uint64_t a1)
{
  unint64_t v2 = sub_1C9939498();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C99361E4(uint64_t a1)
{
  unint64_t v2 = sub_1C9939498();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1C9936220()
{
  OUTLINED_FUNCTION_8_3();
  unsigned int v4 = v3;
  uint64_t v18 = v5;
  uint64_t v19 = sub_1C9BEC028();
  OUTLINED_FUNCTION_0_2();
  uint64_t v20 = v6;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_21_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592858);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_20_0();
  uint64_t v11 = type metadata accessor for NLv3ServerParse();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C9939498();
  sub_1C9BEE798();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_1C9683BAC();
    sub_1C9BEE4C8();
    uint64_t v14 = OUTLINED_FUNCTION_72_13();
    sub_1C960B020(v14, v15);
    OUTLINED_FUNCTION_72_13();
    sub_1C9BEC008();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v1, v2, v19);
    type metadata accessor for Parse.ServerConversion();
    sub_1C960A838(&qword_1EA592860, (void (*)(uint64_t))type metadata accessor for Parse.ServerConversion);
    OUTLINED_FUNCTION_73_8();
    sub_1C9BEE4C8();
    uint64_t v16 = OUTLINED_FUNCTION_16_40();
    v17(v16);
    sub_1C960B0D8(v21, v22);
    *(void *)(v1 + *(int *)(v11 + 20)) = v21;
    sub_1C99394E4(v1, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    sub_1C99368AC(v1, (void (*)(void))type metadata accessor for NLv3ServerParse);
  }
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9936528()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592840);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_39_25();
  sub_1C9939498();
  OUTLINED_FUNCTION_42_14();
  uint64_t v3 = sub_1C9BEBFF8();
  unint64_t v5 = v4;
  sub_1C9683B14();
  sub_1C9BEE568();
  sub_1C960B0D8(v3, v5);
  if (!v0)
  {
    type metadata accessor for NLv3ServerParse();
    type metadata accessor for Parse.ServerConversion();
    sub_1C960A838(&qword_1EA592850, (void (*)(uint64_t))type metadata accessor for Parse.ServerConversion);
    sub_1C9BEE568();
  }
  uint64_t v6 = OUTLINED_FUNCTION_10_52();
  return v7(v6);
}

uint64_t sub_1C99366C0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x65756C6156776172 && a2 == 0xE800000000000000;
  if (v4 || (OUTLINED_FUNCTION_56_15(), (OUTLINED_FUNCTION_6_53() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0x746169636F737361 && v2 == 0xEF65756C61566465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    OUTLINED_FUNCTION_6_53();
    OUTLINED_FUNCTION_8_1();
    if (v3) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C99367B0()
{
}

uint64_t sub_1C99367C8()
{
  return sub_1C9936528();
}

uint64_t sub_1C99367E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C99366C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9936808(uint64_t a1)
{
  unint64_t v2 = sub_1C960A7A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9936844(uint64_t a1)
{
  unint64_t v2 = sub_1C960A7A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C99368AC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C9936904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_31_7();
  v5(v4);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a2, v2);
  return a2;
}

uint64_t sub_1C9936960(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x4974694B69726973 && a2 == 0xED0000746E65746ELL;
  if (v4 || (OUTLINED_FUNCTION_56_15(), (OUTLINED_FUNCTION_6_53() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0xD000000000000011 && (OUTLINED_FUNCTION_36_23((uint64_t)"confirmationState"), v4) {
         || (OUTLINED_FUNCTION_6_53() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v3 == 0xD000000000000011 && (OUTLINED_FUNCTION_36_23((uint64_t)"parameterMetadata"), v4) {
         || (OUTLINED_FUNCTION_6_53() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (v3 == 0xD000000000000018 && v2 == 0x80000001C9C22FC0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    OUTLINED_FUNCTION_6_53();
    OUTLINED_FUNCTION_8_1();
    if (v3) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1C9936AD8(char a1)
{
  unint64_t result = 0x4974694B69726973;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C9936B78()
{
  return sub_1C9936AD8(*v0);
}

uint64_t sub_1C9936B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9936960(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9936BA8(uint64_t a1)
{
  unint64_t v2 = sub_1C9937230();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9936BE4(uint64_t a1)
{
  unint64_t v2 = sub_1C9937230();

  return MEMORY[0x1F41862B0](a1, v2);
}

void Parse.ServerConversion.__allocating_init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_31_7();
  uint64_t v3 = sub_1C9BECA58();
  OUTLINED_FUNCTION_0_2();
  uint64_t v31 = v4;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_34_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592740);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_20_0();
  char v32 = v1;
  OUTLINED_FUNCTION_60_14(v1);
  unint64_t v9 = sub_1C9937230();
  sub_1C9BEE798();
  if (v2) {
    goto LABEL_5;
  }
  unint64_t v30 = v9;
  uint64_t v33 = v0;
  sub_1C9683BAC();
  OUTLINED_FUNCTION_37_22();
  sub_1C9BEE4C8();
  sub_1C96044C4(0, (unint64_t *)&qword_1EBC77FF8);
  sub_1C96044C4(0, (unint64_t *)&qword_1EBC76470);
  uint64_t v29 = (void *)sub_1C9BEDCB8();
  uint64_t v28 = v34;
  if (!v29)
  {
    sub_1C9915C5C();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_7_52(v11, 0xD00000000000001DLL);
    sub_1C960B0D8(v34, v35);
    uint64_t v12 = OUTLINED_FUNCTION_58_14();
    v13(v12);
LABEL_5:
    uint64_t v14 = (uint64_t)v1;
    goto LABEL_6;
  }
  LOBYTE(v34) = 1;
  v10._countAndFlagsBits = sub_1C9BEE488();
  SiriKitConfirmationState.init(rawValue:)(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592758);
  sub_1C993877C(&qword_1EA592760, &qword_1EA592768);
  OUTLINED_FUNCTION_73_8();
  sub_1C9BEE4C8();
  OUTLINED_FUNCTION_37_22();
  sub_1C9BEE478();
  if (v35 >> 60 == 15)
  {
    uint64_t v14 = (uint64_t)v1;
LABEL_10:
    sub_1C9BECA48();
    sub_1C960B0D8(v28, v35);
    uint64_t v15 = OUTLINED_FUNCTION_15_42();
    v16(v15);
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = MEMORY[0x1E4F9F9E0];
    *(void *)(v17 + 64) = v3;
    *(void *)(v17 + 72) = v18;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v17 + 40));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v31 + 16))(boxed_opaque_existential_0, v33, v3);
    *(void *)(v17 + 16) = v29;
    *(unsigned char *)(v17 + 24) = 1;
    *(void *)(v17 + 32) = v34;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v3);
    __swift_destroy_boxed_opaque_existential_1(v14);
    goto LABEL_7;
  }
  objc_allocWithZone(MEMORY[0x1E4F28DC0]);
  sub_1C960B020(v34, v35);
  id v20 = sub_1C993869C(v34, v35);
  sub_1C96044C4(0, &qword_1EA592770);
  sub_1C9BED568();
  uint64_t v21 = sub_1C9BEDE08();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)v32;
  if (v21)
  {
    sub_1C963F610(v34, v35);

    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = sub_1C9BEE228();
  OUTLINED_FUNCTION_12_3();
  uint64_t v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592778);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C9BEF570;
  *(void *)(v25 + 56) = &unk_1F23E8DD0;
  *(void *)(v25 + 64) = v30;
  *(unsigned char *)(v25 + 32) = 3;
  sub_1C9BEE208();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FBBA78], v22);
  swift_willThrow();
  sub_1C960B0D8(v28, v35);

  sub_1C963F610(v34, v35);
  uint64_t v26 = OUTLINED_FUNCTION_45_16();
  v27(v26);
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(v14);
LABEL_7:
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9937230()
{
  unint64_t result = qword_1EA592748;
  if (!qword_1EA592748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592748);
  }
  return result;
}

void Parse.ServerConversion.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592780);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C9937230();
  sub_1C9BEE7A8();
  uint64_t v7 = self;
  uint64_t v8 = v2[2];
  id v27 = 0;
  id v9 = objc_msgSend(v7, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, &v27);
  id v10 = v27;
  if (!v9)
  {
    uint64_t v16 = v10;
    sub_1C9BEA8C8();

    swift_willThrow();
LABEL_5:
    uint64_t v17 = OUTLINED_FUNCTION_10_52();
    v18(v17);
    goto LABEL_7;
  }
  uint64_t v11 = (void *)sub_1C9BEA9E8();
  unint64_t v13 = v12;

  id v27 = v11;
  unint64_t v28 = v13;
  sub_1C9683B14();
  OUTLINED_FUNCTION_44_22();
  OUTLINED_FUNCTION_49_14();
  if (!v1)
  {
    LOBYTE(v27) = 1;
    sub_1C9BEE528();
    swift_bridgeObjectRelease();
    id v27 = (id)v2[4];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592758);
    sub_1C993877C(&qword_1EA592788, &qword_1EA592790);
    OUTLINED_FUNCTION_44_22();
    OUTLINED_FUNCTION_49_14();
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_1(v2 + 5, v2[8]);
    uint64_t v19 = sub_1C9BECA88();
    if (v19)
    {
      id v20 = (void *)v19;
      id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28DB0]), sel_initRequiringSecureCoding_, 1);
      objc_msgSend(v26, sel_encodeObject_forKey_, v20, *MEMORY[0x1E4F284E8]);
      id v21 = objc_msgSend(v26, sel_encodedData);
      uint64_t v25 = v20;
      uint64_t v22 = (void *)sub_1C9BEA9E8();
      unint64_t v24 = v23;

      id v27 = v22;
      unint64_t v28 = v24;
      OUTLINED_FUNCTION_44_22();
      OUTLINED_FUNCTION_49_14();
      sub_1C960B0D8((uint64_t)v11, v13);

      sub_1C960B0D8((uint64_t)v22, v24);
      goto LABEL_5;
    }
  }
  uint64_t v14 = OUTLINED_FUNCTION_10_52();
  v15(v14);
  sub_1C960B0D8((uint64_t)v11, v13);
LABEL_7:
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9937674()
{
  OUTLINED_FUNCTION_56_15();
  if (v2 == 0xD000000000000012 && (OUTLINED_FUNCTION_36_23((uint64_t)"confirmationStates"), v4)
    || (OUTLINED_FUNCTION_6_53() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v4 = v1 == 0x6552646C756F6873 && v0 == 0xED000065766C6F73;
    if (v4 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (v1 == 0x6574656D61726170 && v0 == 0xED0000656D614E72)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      OUTLINED_FUNCTION_6_53();
      OUTLINED_FUNCTION_8_1();
      if (v1) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C99377D0(char a1)
{
  if (!a1) {
    return 0xD000000000000012;
  }
  if (a1 == 1) {
    return 0x6552646C756F6873;
  }
  return 0x6574656D61726170;
}

void sub_1C9937844(void *a1@<X8>)
{
  Parse.ServerConversion.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1C9937870()
{
}

uint64_t sub_1C9937894()
{
  return sub_1C99377D0(*v0);
}

uint64_t sub_1C993789C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C9937674();
  *a1 = result;
  return result;
}

uint64_t sub_1C99378C4(uint64_t a1)
{
  unint64_t v2 = sub_1C9938810();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9937900(uint64_t a1)
{
  unint64_t v2 = sub_1C9938810();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SiriKitParameterMetadata.__allocating_init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592798);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_60_14(v2);
  sub_1C9938810();
  OUTLINED_FUNCTION_50_16();
  if (!v0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = sub_1C9BEE488();
    uint64_t v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786E0);
    sub_1C9851648(&qword_1EA5927B0);
    OUTLINED_FUNCTION_62_14();
    sub_1C9BEE4C8();
    uint64_t v22 = v6;
    uint64_t v9 = *(void *)(v23 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = v23 + 40;
      uint64_t v11 = MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v5 = *(void *)(v10 - 8);
        swift_bridgeObjectRetain();
        unint64_t v12 = sub_1C9BEE428();
        swift_bridgeObjectRelease();
        if (v12 <= 3)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C96550EC();
            uint64_t v11 = v14;
          }
          unint64_t v13 = *(void *)(v11 + 16);
          if (v13 >= *(void *)(v11 + 24) >> 1)
          {
            sub_1C96550EC();
            uint64_t v11 = v15;
          }
          *(void *)(v11 + 16) = v13 + 1;
          *(unsigned char *)(v11 + v13 + 32) = v12;
        }
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_62_14();
    char v16 = sub_1C9BEE498();
    if (!v5)
    {
      char v19 = v16;
      uint64_t v20 = OUTLINED_FUNCTION_12_47();
      v21(v20);
      swift_allocObject();
      SiriKitParameterMetadata.init(parameterName:shouldResolve:confirmationStates:)(v22, v8, v19 & 1, v11);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
      goto LABEL_16;
    }
    uint64_t v17 = OUTLINED_FUNCTION_12_47();
    v18(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
LABEL_16:
  OUTLINED_FUNCTION_6_31();
}

void SiriKitParameterMetadata.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v23 = v1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5927B8);
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_39_25();
  sub_1C9938810();
  OUTLINED_FUNCTION_42_14();
  uint64_t v22 = v0;
  uint64_t v9 = *(void *)(v0 + 16);
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    v21[0] = v8;
    v21[1] = v4;
    v21[2] = v2;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C963C340();
    uint64_t v11 = 0;
    do
    {
      unint64_t v12 = 0xE500000000000000;
      uint64_t v13 = 0x5445534E55;
      switch(*(unsigned char *)(v9 + v11 + 32))
      {
        case 1:
          uint64_t v13 = 0x454C4C45434E4143;
          goto LABEL_6;
        case 2:
          uint64_t v13 = 0x454D5249464E4F43;
LABEL_6:
          unint64_t v12 = 0xE900000000000044;
          break;
        case 3:
          unint64_t v12 = 0xE800000000000000;
          uint64_t v13 = 0x44455443454A4552;
          break;
        default:
          break;
      }
      unint64_t v14 = *(void *)(v25 + 16);
      if (v14 >= *(void *)(v25 + 24) >> 1) {
        sub_1C963C340();
      }
      ++v11;
      *(void *)(v25 + 16) = v14 + 1;
      uint64_t v15 = v25 + 16 * v14;
      *(void *)(v15 + 32) = v13;
      *(void *)(v15 + 40) = v12;
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
  }
  char v24 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786E0);
  sub_1C9851648(&qword_1EBC78680);
  uint64_t v16 = v23;
  sub_1C9BEE568();
  if (v16)
  {
    uint64_t v17 = OUTLINED_FUNCTION_69_14();
    v18(v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C9BEE538();
    sub_1C9BEE528();
    uint64_t v19 = OUTLINED_FUNCTION_69_14();
    v20(v19);
  }
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9937F10(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v4 || (OUTLINED_FUNCTION_56_15(), (OUTLINED_FUNCTION_6_53() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0x6174614472657375 && v2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    OUTLINED_FUNCTION_6_53();
    OUTLINED_FUNCTION_8_1();
    if (v3) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C9937FE8(void *a1@<X8>)
{
  SiriKitParameterMetadata.__allocating_init(from:)();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1C9938014()
{
}

uint64_t sub_1C9938038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9937F10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9938060(uint64_t a1)
{
  unint64_t v2 = sub_1C9683A38();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C993809C(uint64_t a1)
{
  unint64_t v2 = sub_1C9683A38();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1C99380D8()
{
  uint64_t v0 = sub_1C9BEE428();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_1C9938130@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C99380D8();
  *a1 = result;
  return result;
}

void sub_1C9938168(void *a1@<X8>)
{
  *a1 = 0x65736E6F70736572;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1C9938184()
{
  return 0x65736E6F70736572;
}

uint64_t sub_1C993819C@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = sub_1C9938120();
  *a1 = result != 0;
  return result;
}

void sub_1C99381CC(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C99381D8(uint64_t a1)
{
  unint64_t v2 = sub_1C993885C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9938214(uint64_t a1)
{
  unint64_t v2 = sub_1C993885C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Parse.PegasusResult.encode(to:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5927C8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_39_25();
  sub_1C993885C();
  OUTLINED_FUNCTION_42_14();
  sub_1C9BEAC48();
  sub_1C960A838(&qword_1EA5927D8, MEMORY[0x1E4F88740]);
  uint64_t v3 = sub_1C9BECD58();
  if (v0)
  {
    uint64_t v5 = OUTLINED_FUNCTION_10_52();
    return v6(v5);
  }
  else
  {
    uint64_t v8 = v3;
    unint64_t v9 = v4;
    sub_1C9683B14();
    OUTLINED_FUNCTION_49_14();
    uint64_t v10 = OUTLINED_FUNCTION_10_52();
    v11(v10);
    return sub_1C960B0D8(v8, v9);
  }
}

void Parse.PegasusResult.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v4 = v3;
  uint64_t v17 = v5;
  uint64_t v6 = sub_1C9BECD38();
  MEMORY[0x1F4188790](v6 - 8, v7);
  OUTLINED_FUNCTION_33_0();
  uint64_t v8 = sub_1C9BEAC48();
  OUTLINED_FUNCTION_0_2();
  uint64_t v18 = v9;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_21_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5927E0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_5_1();
  uint64_t v14 = type metadata accessor for Parse.PegasusResult(0);
  MEMORY[0x1F4188790](v14 - 8, v15);
  OUTLINED_FUNCTION_34_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1C993885C();
  sub_1C9BEE798();
  if (!v1)
  {
    sub_1C9683BAC();
    sub_1C9BEE4C8();
    sub_1C9BECD28();
    sub_1C960A838(&qword_1EA5927D8, MEMORY[0x1E4F88740]);
    OUTLINED_FUNCTION_62_14();
    sub_1C9BECD48();
    OUTLINED_FUNCTION_10_25();
    v16();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v0, v2, v8);
    sub_1C9936904(v0, v17);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  OUTLINED_FUNCTION_6_31();
}

void sub_1C993866C()
{
}

uint64_t sub_1C9938684()
{
  return Parse.PegasusResult.encode(to:)();
}

id sub_1C993869C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  v11[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = (void *)sub_1C9BEA9B8();
  v11[0] = 0;
  id v7 = objc_msgSend(v3, sel_initForReadingFromData_error_, v6, v11);

  if (v7)
  {
    id v8 = v11[0];
  }
  else
  {
    id v9 = v11[0];
    sub_1C9BEA8C8();

    swift_willThrow();
  }
  sub_1C960B0D8(a1, a2);
  return v7;
}

uint64_t sub_1C993877C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA592758);
    sub_1C960A838(a2, (void (*)(uint64_t))type metadata accessor for SiriKitParameterMetadata);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C9938810()
{
  unint64_t result = qword_1EA5927A0;
  if (!qword_1EA5927A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5927A0);
  }
  return result;
}

unint64_t sub_1C993885C()
{
  unint64_t result = qword_1EA5927D0;
  if (!qword_1EA5927D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5927D0);
  }
  return result;
}

unsigned char *sub_1C99388A8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9938944);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void _s14descr1F23CD2A1O10CodingKeysOMa()
{
}

unsigned char *sub_1C9938978(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9938A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void _s10CodingKeysOMa_0()
{
}

unsigned char *sub_1C9938A78(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9938B44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void _s10CodingKeysOMa_1()
{
}

void sub_1C9938B78(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
  }
  else
  {
    uint64_t v6 = sub_1C9BEC028();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  }
  sub_1C9BEC838();
}

uint64_t sub_1C9938C44(uint64_t a1)
{
  uint64_t v2 = sub_1C9BEC028();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

void sub_1C9938CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEC028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_1C9BEC838();
}

void sub_1C9938D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEC028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_1C9BEC838();
}

uint64_t sub_1C9938DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEC028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C9938E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEC028();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1C9938EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9938ED8);
}

uint64_t sub_1C9938ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C9BEC028();
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1C9938F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9938F78);
}

void sub_1C9938F78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_31_7();
  sub_1C9BEC028();
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1C9938FFC()
{
  uint64_t result = sub_1C9BEC028();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_9_48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C99390A0()
{
  return sub_1C99390B0();
}

uint64_t sub_1C99390B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C99390B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_9_48();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1C9939104(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  OUTLINED_FUNCTION_9_48();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C99390B0();
  return a1;
}

uint64_t sub_1C993915C(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C99390B0();
  return a1;
}

void type metadata accessor for ParseCodingErrors()
{
}

unint64_t sub_1C99391B8()
{
  unint64_t result = qword_1EA5927F0;
  if (!qword_1EA5927F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5927F0);
  }
  return result;
}

unint64_t sub_1C9939208()
{
  unint64_t result = qword_1EA5927F8;
  if (!qword_1EA5927F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5927F8);
  }
  return result;
}

unint64_t sub_1C993925C()
{
  unint64_t result = qword_1EA592808;
  if (!qword_1EA592808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592808);
  }
  return result;
}

unint64_t sub_1C99392AC()
{
  unint64_t result = qword_1EA592810;
  if (!qword_1EA592810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592810);
  }
  return result;
}

unint64_t sub_1C99392FC()
{
  unint64_t result = qword_1EA592818;
  if (!qword_1EA592818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592818);
  }
  return result;
}

unint64_t sub_1C9939354()
{
  unint64_t result = qword_1EA592820;
  if (!qword_1EA592820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592820);
  }
  return result;
}

unint64_t sub_1C99393A4()
{
  unint64_t result = qword_1EA592828;
  if (!qword_1EA592828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592828);
  }
  return result;
}

unint64_t sub_1C99393F4()
{
  unint64_t result = qword_1EA592830;
  if (!qword_1EA592830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592830);
  }
  return result;
}

unint64_t sub_1C9939444()
{
  unint64_t result = qword_1EA592838;
  if (!qword_1EA592838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592838);
  }
  return result;
}

unint64_t sub_1C9939498()
{
  unint64_t result = qword_1EA592848;
  if (!qword_1EA592848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592848);
  }
  return result;
}

uint64_t sub_1C99394E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_31_7();
  v5(v4);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

void type metadata accessor for NLv3ServerParse.CodingKeys()
{
}

unint64_t sub_1C9939578()
{
  unint64_t result = qword_1EA592868;
  if (!qword_1EA592868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592868);
  }
  return result;
}

unint64_t sub_1C99395C8()
{
  unint64_t result = qword_1EA592870;
  if (!qword_1EA592870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592870);
  }
  return result;
}

unint64_t sub_1C9939618()
{
  unint64_t result = qword_1EA592878;
  if (!qword_1EA592878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592878);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_52@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = (v2 - 32) | 0x8000000000000000;
  *(unsigned char *)(a1 + 16) = 1;
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_8_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_53(unsigned int a1)
{
  return a1 | 0x65746E4900000000;
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  return sub_1C9BEE4C8();
}

uint64_t OUTLINED_FUNCTION_14_50()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_15_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_40()
{
  return v0;
}

void OUTLINED_FUNCTION_18_38()
{
  *(unsigned char *)(v0 - 120) = 1;
}

uint64_t OUTLINED_FUNCTION_20_43()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_27()
{
  return sub_1C9BEE528();
}

uint64_t OUTLINED_FUNCTION_25_30(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 - 264);
  return sub_1C9936904(a1, v3);
}

uint64_t OUTLINED_FUNCTION_28_23()
{
  return 0x746E65696C436669;
}

uint64_t OUTLINED_FUNCTION_29_25()
{
  return 0x655273656D6D6F70;
}

uint64_t OUTLINED_FUNCTION_30_23()
{
  return 0x5273757361676570;
}

uint64_t OUTLINED_FUNCTION_33_19@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 232) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_34_22@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 216) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

unint64_t OUTLINED_FUNCTION_36_23@<X0>(uint64_t a1@<X8>)
{
  return (a1 - 32) | 0x8000000000000000;
}

void *OUTLINED_FUNCTION_39_25()
{
  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

void OUTLINED_FUNCTION_40_20()
{
  *(unsigned char *)(v0 - 120) = 0;
}

uint64_t OUTLINED_FUNCTION_41_17()
{
  return sub_1C9BEE4C8();
}

uint64_t OUTLINED_FUNCTION_45_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_14()
{
  return sub_1C9BEE568();
}

uint64_t OUTLINED_FUNCTION_50_16()
{
  return sub_1C9BEE798();
}

uint64_t OUTLINED_FUNCTION_51_16()
{
  *(unsigned char *)(v0 - 120) = 0;
  return 27758;
}

uint64_t OUTLINED_FUNCTION_54_16()
{
  return *(void *)(v0 - 264);
}

uint64_t OUTLINED_FUNCTION_55_16()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_58_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_59_12()
{
  return v0;
}

void *OUTLINED_FUNCTION_60_14(void *a1)
{
  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_61_15()
{
  return sub_1C9BEE568();
}

uint64_t OUTLINED_FUNCTION_63_15()
{
  return sub_1C9BEE618();
}

id OUTLINED_FUNCTION_64_9(id a1, SEL a2)
{
  return objc_msgSend(a1, a2, v2, 1, v3 - 120);
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  return 0x7974706D65;
}

unint64_t OUTLINED_FUNCTION_67_12()
{
  return 0xD000000000000010;
}

unint64_t OUTLINED_FUNCTION_71_11()
{
  return 0xEE00796C6E4F746ELL;
}

uint64_t OUTLINED_FUNCTION_73_8()
{
  return v0;
}

uint64_t sub_1C9939A54()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79450);
  MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_33_0();
  uint64_t v83 = v10;
  OUTLINED_FUNCTION_47();
  uint64_t v85 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_2_0();
  v86 = (_DWORD *)v13;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_48_5();
  uint64_t v84 = v16;
  OUTLINED_FUNCTION_3();
  uint64_t v19 = MEMORY[0x1F4188790](v17, v18);
  id v21 = (char *)&v79 - v20;
  MEMORY[0x1F4188790](v19, v22);
  char v24 = (char *)&v79 - v23;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v25, v26);
  OUTLINED_FUNCTION_68_0();
  uint64_t v29 = v27 - v28;
  uint64_t v32 = MEMORY[0x1F4188790](v30, v31);
  uint64_t v34 = (char *)&v79 - v33;
  MEMORY[0x1F4188790](v32, v35);
  uint64_t v37 = (uint64_t *)((char *)&v79 - v36);
  sub_1C97662DC(v0, (uint64_t)&v79 - v36, (void (*)(void))type metadata accessor for Parse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v48 = *v37;
    unint64_t v47 = v37[1];
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v49 = sub_1C9BECF88();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = sub_1C9BECF78();
    os_log_type_t v51 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v51))
    {
      int v52 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v87 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)int v52 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v53 = sub_1C95FF228(v48, v47, &v87);
      OUTLINED_FUNCTION_62_3(v53);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v50, (os_log_type_t)v5, "[Parse.isUserCancelled] Received DirectInvocation: %s", v52, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (qword_1EA588098 != -1) {
      swift_once();
    }
    id v71 = objc_msgSend((id)qword_1EA58FD70, sel_identifier);
    uint64_t v72 = sub_1C9BED568();
    uint64_t v74 = v73;

    if (v48 == v72 && v47 == v74)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      char v76 = 1;
    }
    else
    {
      char v76 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 6)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v54 = sub_1C9BECF88();
      __swift_project_value_buffer(v54, (uint64_t)qword_1EBC7A520);
      sub_1C97662DC(v0, (uint64_t)v34, (void (*)(void))type metadata accessor for Parse);
      v55 = sub_1C9BECF78();
      os_log_type_t v56 = sub_1C9BEDC88();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = (_DWORD *)OUTLINED_FUNCTION_67();
        uint64_t v87 = OUTLINED_FUNCTION_35_0();
        _DWORD *v57 = 136315138;
        v86 = v57 + 1;
        sub_1C97662DC((uint64_t)v34, v29, (void (*)(void))type metadata accessor for Parse);
        uint64_t v58 = sub_1C9BED5D8();
        uint64_t v60 = sub_1C95FF228(v58, v59, &v87);
        OUTLINED_FUNCTION_62_3(v60);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C97D1FA4((uint64_t)v34, (void (*)(void))type metadata accessor for Parse);
        OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v55, v56, "[Parse.isUserCancelled] Unsupported parse: %s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        sub_1C97D1FA4((uint64_t)v34, (void (*)(void))type metadata accessor for Parse);
      }

      v70 = (void (*)(void))type metadata accessor for Parse;
      uint64_t v69 = (uint64_t)v37;
      goto LABEL_33;
    }
    sub_1C9612BD8((uint64_t)v37, (uint64_t)v24);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1C9BECF88();
    uint64_t v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1EBC7A520);
    sub_1C97662DC((uint64_t)v24, (uint64_t)v21, (void (*)(void))type metadata accessor for USOParse);
    uint64_t v41 = sub_1C9BECF78();
    os_log_type_t v42 = sub_1C9BEDC68();
    if (OUTLINED_FUNCTION_62_5(v42))
    {
      v43 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v80 = OUTLINED_FUNCTION_35_0();
      uint64_t v87 = v80;
      uint64_t v81 = v40;
      uint64_t v82 = v7;
      *(_DWORD *)v43 = 136315138;
      v79 = v43 + 4;
      sub_1C97662DC((uint64_t)v21, v84, (void (*)(void))type metadata accessor for USOParse);
      uint64_t v44 = sub_1C9BED5D8();
      uint64_t v46 = sub_1C95FF228(v44, v45, &v87);
      OUTLINED_FUNCTION_62_3(v46);
      sub_1C9BEDF68();
      uint64_t v7 = v82;
      swift_bridgeObjectRelease();
      sub_1C97D1FA4((uint64_t)v21, (void (*)(void))type metadata accessor for USOParse);
      _os_log_impl(&dword_1C95F9000, v41, (os_log_type_t)v34, "[Parse.isUserCancelled] Checking if parse contains cancellation: %s", v43, 0xCu);
      LOBYTE(v34) = v80;
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C97D1FA4((uint64_t)v21, (void (*)(void))type metadata accessor for USOParse);
    }

    uint64_t v61 = sub_1C9BEAEC8();
    sub_1C9612ECC(v61);
    swift_bridgeObjectRelease();
    if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
    {
      sub_1C95FE81C((uint64_t)v4, &qword_1EBC79450);
      sub_1C97662DC((uint64_t)v24, (uint64_t)v86, (void (*)(void))type metadata accessor for USOParse);
      v62 = sub_1C9BECF78();
      os_log_type_t v63 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_62_5(v63))
      {
        uint64_t v64 = (_DWORD *)OUTLINED_FUNCTION_67();
        uint64_t v87 = OUTLINED_FUNCTION_35_0();
        *uint64_t v64 = 136315138;
        uint64_t v65 = (uint64_t)v86;
        sub_1C97662DC((uint64_t)v86, v84, (void (*)(void))type metadata accessor for USOParse);
        uint64_t v66 = sub_1C9BED5D8();
        uint64_t v68 = sub_1C95FF228(v66, v67, &v87);
        OUTLINED_FUNCTION_12_48(v68);
        swift_bridgeObjectRelease();
        sub_1C97D1FA4(v65, (void (*)(void))type metadata accessor for USOParse);
        OUTLINED_FUNCTION_26_32(&dword_1C95F9000, v62, (os_log_type_t)v34, "[Parse.isUserCancelled] Cannot extract task: parse has no UDAs: %s");
        OUTLINED_FUNCTION_11();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {

        sub_1C97D1FA4((uint64_t)v86, (void (*)(void))type metadata accessor for USOParse);
      }
      uint64_t v69 = (uint64_t)v24;
      v70 = (void (*)(void))type metadata accessor for USOParse;
LABEL_33:
      sub_1C97D1FA4(v69, v70);
      char v76 = 0;
      return v76 & 1;
    }
    uint64_t v77 = v83;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v83, v4, v5);
    char v76 = sub_1C9BEAFA8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v77, v5);
    sub_1C97D1FA4((uint64_t)v24, (void (*)(void))type metadata accessor for USOParse);
  }
  return v76 & 1;
}

uint64_t sub_1C993A3B0()
{
  v205 = 0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79450);
  MEMORY[0x1F4188790](v1 - 8, v2);
  OUTLINED_FUNCTION_33_0();
  uint64_t v200 = v3;
  OUTLINED_FUNCTION_47();
  uint64_t v202 = sub_1C9BEAEA8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v198 = v4;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_2_0();
  *(void *)&long long v193 = v7;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v8, v9);
  v204 = (char *)&v189 - v10;
  OUTLINED_FUNCTION_47();
  uint64_t v203 = sub_1C9BEB0C8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v206 = v11;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_68_0();
  uint64_t v16 = (_DWORD *)(v14 - v15);
  MEMORY[0x1F4188790](v17, v18);
  v201 = (char *)&v189 - v19;
  OUTLINED_FUNCTION_47();
  sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v207 = v21;
  uint64_t v208 = v20;
  MEMORY[0x1F4188790](v20, v22);
  OUTLINED_FUNCTION_68_0();
  uint64_t v25 = (uint8_t *)(v23 - v24);
  MEMORY[0x1F4188790](v26, v27);
  OUTLINED_FUNCTION_48_5();
  uint64_t v199 = v28;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v29, v30);
  OUTLINED_FUNCTION_48_5();
  v209 = v31;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v32, v33);
  uint64_t v35 = (char *)&v189 - v34;
  uint64_t v196 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v36, v37);
  OUTLINED_FUNCTION_2_0();
  uint64_t v194 = v38;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v39, v40);
  OUTLINED_FUNCTION_48_5();
  uint64_t v195 = v41;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v42, v43);
  OUTLINED_FUNCTION_48_5();
  uint64_t v197 = v44;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v45, v46);
  uint64_t v48 = (_DWORD *)((char *)&v189 - v47);
  uint64_t v49 = OUTLINED_FUNCTION_47();
  os_log_type_t v50 = type metadata accessor for Parse(v49);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v51, v52);
  OUTLINED_FUNCTION_68_0();
  uint64_t v55 = v53 - v54;
  uint64_t v58 = MEMORY[0x1F4188790](v56, v57);
  uint64_t v60 = (char *)&v189 - v59;
  MEMORY[0x1F4188790](v58, v61);
  os_log_type_t v63 = (uint64_t *)((char *)&v189 - v62);
  sub_1C97662DC(v0, (uint64_t)&v189 - v62, (void (*)(void))type metadata accessor for Parse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v209 = v16;
    v192 = v25;
    uint64_t v77 = *v63;
    unint64_t v78 = v63[1];
    uint64_t v79 = v63[2];
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v80 = sub_1C9BECF88();
    uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v82 = sub_1C9BECF78();
    os_log_type_t v83 = sub_1C9BEDC68();
    BOOL v84 = os_log_type_enabled(v82, v83);
    uint64_t v85 = v206;
    if (v84)
    {
      v204 = (char *)v81;
      v86 = (_DWORD *)OUTLINED_FUNCTION_67();
      uint64_t v87 = OUTLINED_FUNCTION_35_0();
      _DWORD *v86 = 136315138;
      uint64_t v212 = v87;
      *(void *)&long long v210 = v77;
      *((void *)&v210 + 1) = v78;
      *(void *)&long long v211 = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_1C9BED5D8();
      *(void *)&long long v210 = sub_1C95FF228(v88, v89, &v212);
      uint64_t v85 = v206;
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_22_33();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26_32(&dword_1C95F9000, v82, v83, "[Parse.ontologyGraph] Processing .directInvocation: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      OUTLINED_FUNCTION_22_33();
      swift_bridgeObjectRelease_n();
    }
    uint64_t v144 = v208;
    v143 = v209;
    v145 = v205;
    uint64_t v146 = v200;
    if ((v77 != 0xD000000000000028 || v78 != 0x80000001C9C20D30) && (sub_1C9BEE618() & 1) == 0)
    {
      uint64_t v163 = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v160 = sub_1C9BECF78();
      os_log_type_t v164 = sub_1C9BEDC88();
      if (!os_log_type_enabled(v160, v164))
      {

        OUTLINED_FUNCTION_22_33();
        swift_bridgeObjectRelease_n();
        return 0;
      }
      v165 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
      _DWORD *v165 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v212 = sub_1C95FF228(v163, v78, (uint64_t *)&v210);
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_22_33();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v160, v164, "[Parse.ontologyGraph] received DirectInvocation with unexpected identifier: %s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      goto LABEL_60;
    }
    if (v79)
    {
      sub_1C9606B08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v211 + 1))
      {
        int v147 = swift_dynamicCast();
        __swift_storeEnumTagSinglePayload(v146, v147 ^ 1u, 1, v144);
        if (__swift_getEnumTagSinglePayload(v146, 1, v144) != 1)
        {
          uint64_t v148 = v207;
          (*(void (**)(uint8_t *, uint64_t, uint64_t))(v207 + 32))(v192, v146, v144);
          if (sub_1C9BEAF78())
          {
            sub_1C9BEAFC8();
            sub_1C9BEB098();
            (*(void (**)(_DWORD *, uint64_t))(v85 + 8))(v143, v203);
            uint64_t v149 = sub_1C9BEB248();
            if (!v145)
            {
              uint64_t v154 = v149;
              OUTLINED_FUNCTION_37();
              v179();
              swift_retain_n();
              v180 = (void *)sub_1C9BECF78();
              os_log_type_t v181 = sub_1C9BEDC68();
              if (OUTLINED_FUNCTION_22_3(v181))
              {
                v182 = (_DWORD *)OUTLINED_FUNCTION_67();
                *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
                _DWORD *v182 = 136315138;
                uint64_t v212 = v154;
                sub_1C9BEBEB8();
                sub_1C993B824();
                uint64_t v183 = sub_1C9BEE5A8();
                uint64_t v185 = sub_1C95FF228(v183, v184, (uint64_t *)&v210);
                OUTLINED_FUNCTION_12_48(v185);
                OUTLINED_FUNCTION_27_27();
                swift_bridgeObjectRelease();
                OUTLINED_FUNCTION_11_57(&dword_1C95F9000, v186, v187, "[Parse.ontologyGraph] Graph constructed: %s");
                OUTLINED_FUNCTION_11();
                OUTLINED_FUNCTION_11_4();
                OUTLINED_FUNCTION_11_4();

                (*(void (**)(uint8_t *, uint64_t))(v148 + 8))(v192, v208);
              }
              else
              {
                OUTLINED_FUNCTION_27_27();

                OUTLINED_FUNCTION_15_43();
                v188();
              }
              return v154;
            }

            OUTLINED_FUNCTION_37();
            v150();
          }
          OUTLINED_FUNCTION_15_43();
          v151();
          goto LABEL_56;
        }
LABEL_55:
        sub_1C95FE81C(v146, &qword_1EBC79450);
LABEL_56:
        v160 = sub_1C9BECF78();
        os_log_type_t v161 = sub_1C9BEDC88();
        if (!os_log_type_enabled(v160, v161))
        {
LABEL_61:

          return 0;
        }
        v162 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v162 = 0;
        _os_log_impl(&dword_1C95F9000, v160, v161, "[Parse.ontologyGraph] Could not extract USO graph from DirectInvocation payload", v162, 2u);
LABEL_60:
        OUTLINED_FUNCTION_11_4();
        goto LABEL_61;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v210 = 0u;
      long long v211 = 0u;
    }
    sub_1C95FE81C((uint64_t)&v210, &qword_1EBC78700);
    __swift_storeEnumTagSinglePayload(v146, 1, 1, v144);
    goto LABEL_55;
  }
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v90 = *v63;
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v91 = sub_1C9BECF88();
    __swift_project_value_buffer(v91, (uint64_t)qword_1EBC7A520);
    swift_unknownObjectRetain_n();
    v92 = (void *)sub_1C9BECF78();
    os_log_type_t v93 = sub_1C9BEDC68();
    if (OUTLINED_FUNCTION_22_3(v93))
    {
      uint64_t v48 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
      *uint64_t v48 = 136315138;
      uint64_t v212 = v90;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592730);
      uint64_t v94 = sub_1C9BED5D8();
      uint64_t v212 = sub_1C95FF228(v94, v95, (uint64_t *)&v210);
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_24_28();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_11_57(&dword_1C95F9000, v96, v97, "[Parse.ontologyGraph] Processing .NLv4IntentOnly(act): %s");
      OUTLINED_FUNCTION_11();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      OUTLINED_FUNCTION_24_28();
    }
    self;
    v152 = (void *)swift_dynamicCastObjCClass();
    swift_unknownObjectRetain();
    if (v152)
    {
      id v153 = objc_msgSend(v152, sel_task);
      uint64_t v154 = sub_1C9BEDD58();
      OUTLINED_FUNCTION_24_28();

      return v154;
    }
    swift_unknownObjectRetain();
    v155 = sub_1C9BECF78();
    os_log_type_t v156 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_62_5(v156))
    {
      v157 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
      _DWORD *v157 = 136315138;
      uint64_t v212 = v90;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592730);
      uint64_t v158 = sub_1C9BED5D8();
      uint64_t v212 = sub_1C95FF228(v158, v159, (uint64_t *)&v210);
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_24_28();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_26_32(&dword_1C95F9000, v155, (os_log_type_t)v48, "[Parse.ontologyGraph] Cannot parse NLv4IntentOnly: %s");
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return 0;
  }
  if (EnumCaseMultiPayload != 6)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v98 = sub_1C9BECF88();
    __swift_project_value_buffer(v98, (uint64_t)qword_1EBC7A520);
    sub_1C97662DC(v0, (uint64_t)v60, (void (*)(void))type metadata accessor for Parse);
    v99 = sub_1C9BECF78();
    os_log_type_t v100 = sub_1C9BEDC88();
    if (os_log_type_enabled(v99, v100))
    {
      v101 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
      _DWORD *v101 = 136315138;
      v209 = v101 + 1;
      sub_1C97662DC((uint64_t)v60, v55, (void (*)(void))type metadata accessor for Parse);
      uint64_t v102 = sub_1C9BED5D8();
      uint64_t v104 = sub_1C95FF228(v102, v103, (uint64_t *)&v210);
      OUTLINED_FUNCTION_13_57(v104);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C97D1FA4((uint64_t)v60, (void (*)(void))type metadata accessor for Parse);
      OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v99, v100, "[Parse.ontologyGraph] Unsupported parse: %s");
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C97D1FA4((uint64_t)v60, (void (*)(void))type metadata accessor for Parse);
    }

    v142 = (void (*)(void))type metadata accessor for Parse;
    uint64_t v141 = (uint64_t)v63;
    goto LABEL_50;
  }
  sub_1C9612BD8((uint64_t)v63, (uint64_t)v48);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v65 = sub_1C9BECF88();
  uint64_t v66 = __swift_project_value_buffer(v65, (uint64_t)qword_1EBC7A520);
  uint64_t v67 = v197;
  sub_1C97662DC((uint64_t)v48, v197, (void (*)(void))type metadata accessor for USOParse);
  uint64_t v200 = v66;
  uint64_t v68 = sub_1C9BECF78();
  os_log_type_t v69 = sub_1C9BEDC68();
  BOOL v70 = OUTLINED_FUNCTION_96(v69);
  uint64_t v71 = v198;
  if (v70)
  {
    uint64_t v72 = v198;
    uint64_t v73 = (uint8_t *)OUTLINED_FUNCTION_67();
    *(void *)&long long v193 = OUTLINED_FUNCTION_35_0();
    *(void *)&long long v210 = v193;
    *(_DWORD *)uint64_t v73 = 136315138;
    uint64_t v71 = v72;
    v192 = v73 + 4;
    sub_1C97662DC(v67, v195, (void (*)(void))type metadata accessor for USOParse);
    uint64_t v74 = sub_1C9BED5D8();
    uint64_t v76 = sub_1C95FF228(v74, v75, (uint64_t *)&v210);
    OUTLINED_FUNCTION_62_3(v76);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C97D1FA4(v67, (void (*)(void))type metadata accessor for USOParse);
    _os_log_impl(&dword_1C95F9000, v68, v50, "[Parse.ontologyGraph] Processing .uso(usoParse): %s", v73, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C97D1FA4(v67, (void (*)(void))type metadata accessor for USOParse);
  }

  uint64_t v105 = v207;
  uint64_t v106 = v208;
  v107 = v205;
  v108 = v209;
  v190 = v48;
  uint64_t v109 = sub_1C9BEAEC8();
  uint64_t v111 = *(void *)(v109 + 16);
  if (!v111)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v133 = (uint64_t)v190;
    uint64_t v134 = v194;
    sub_1C97662DC((uint64_t)v190, v194, (void (*)(void))type metadata accessor for USOParse);
    v135 = sub_1C9BECF78();
    os_log_type_t v136 = sub_1C9BEDC88();
    if (os_log_type_enabled(v135, v136))
    {
      v137 = (_DWORD *)OUTLINED_FUNCTION_67();
      *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
      _DWORD *v137 = 136315138;
      sub_1C97662DC(v134, v195, (void (*)(void))type metadata accessor for USOParse);
      uint64_t v138 = sub_1C9BED5D8();
      uint64_t v140 = sub_1C95FF228(v138, v139, (uint64_t *)&v210);
      OUTLINED_FUNCTION_62_3(v140);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C97D1FA4(v134, (void (*)(void))type metadata accessor for USOParse);
      OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v135, v136, "[Parse.ontologyGraph] Cannot extract task: parse has no UDAs: %s");
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      sub_1C97D1FA4(v134, (void (*)(void))type metadata accessor for USOParse);
    }
    uint64_t v141 = v133;
    v142 = (void (*)(void))type metadata accessor for USOParse;
LABEL_50:
    sub_1C97D1FA4(v141, v142);
    return 0;
  }
  v114 = *(uint8_t **)(v105 + 16);
  uint64_t v113 = v105 + 16;
  v112 = v114;
  unint64_t v115 = (*(unsigned __int8 *)(v113 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 64);
  uint64_t v189 = v109;
  unint64_t v116 = v109 + v115;
  uint64_t v197 = v206 + 8;
  uint64_t v198 = v71 + 8;
  uint64_t v206 = *(void *)(v113 + 56);
  uint64_t v207 = v113 - 8;
  *(void *)&long long v110 = 136315138;
  long long v193 = v110;
  uint64_t v191 = MEMORY[0x1E4FBC840] + 8;
  v192 = v114;
  while (1)
  {
    ((void (*)(char *, unint64_t, uint64_t))v112)(v35, v116, v106);
    if ((sub_1C9BEAF78() & 1) == 0)
    {
      ((void (*)(_DWORD *, char *, uint64_t))v112)(v108, v35, v106);
      v124 = sub_1C9BECF78();
      os_log_type_t v125 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_96(v125))
      {
        uint64_t v126 = OUTLINED_FUNCTION_67();
        v205 = v107;
        uint64_t v127 = v126;
        *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)uint64_t v127 = v193;
        ((void (*)(uint64_t, _DWORD *, uint64_t))v112)(v199, v209, v208);
        uint64_t v128 = sub_1C9BED5D8();
        *(void *)(v127 + 4) = sub_1C95FF228(v128, v129, (uint64_t *)&v210);
        swift_bridgeObjectRelease();
        v130 = *(void (**)(uint64_t))v207;
        (*(void (**)(_DWORD *, uint64_t))v207)(v209, v208);
        OUTLINED_FUNCTION_26_32(&dword_1C95F9000, v124, (os_log_type_t)v113, "[Parse.ontologyGraph] Cannot extract task: UDA is not StatedTask. %s");
        swift_arrayDestroy();
        uint64_t v106 = v208;
        OUTLINED_FUNCTION_11_4();
        v107 = v205;
        OUTLINED_FUNCTION_11_4();

        ((void (*)(char *, uint64_t))v130)(v35, v106);
        v112 = v192;
        v108 = v209;
      }
      else
      {

        v131 = *(void (**)(uint64_t))v207;
        OUTLINED_FUNCTION_15_43();
        v131(v132);
        ((void (*)(char *, uint64_t))v131)(v35, v106);
      }
      goto LABEL_29;
    }
    sub_1C9BEAFC8();
    sub_1C9BEB098();
    OUTLINED_FUNCTION_37();
    v118(v117);
    uint64_t v119 = sub_1C9BEB248();
    if (!v107) {
      break;
    }

    OUTLINED_FUNCTION_37();
    v121(v120);
    OUTLINED_FUNCTION_25_31();
    OUTLINED_FUNCTION_37();
    v123(v122);
    v107 = 0;
    v108 = v209;
LABEL_29:
    v116 += v206;
    if (!--v111) {
      goto LABEL_30;
    }
  }
  uint64_t v154 = v119;
  OUTLINED_FUNCTION_37();
  v168(v167);
  swift_bridgeObjectRelease();
  swift_retain_n();
  v169 = (void *)sub_1C9BECF78();
  os_log_type_t v170 = sub_1C9BEDC68();
  if (OUTLINED_FUNCTION_22_3(v170))
  {
    v171 = (_DWORD *)OUTLINED_FUNCTION_67();
    *(void *)&long long v210 = OUTLINED_FUNCTION_35_0();
    _DWORD *v171 = v193;
    v209 = v171 + 1;
    uint64_t v212 = v154;
    sub_1C9BEBEB8();
    sub_1C993B824();
    uint64_t v172 = sub_1C9BEE5A8();
    uint64_t v174 = sub_1C95FF228(v172, v173, (uint64_t *)&v210);
    OUTLINED_FUNCTION_13_57(v174);
    sub_1C9BEDF68();
    OUTLINED_FUNCTION_27_27();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_57(&dword_1C95F9000, v175, v176, "[Parse.ontologyGraph] Graph constructed: %s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_27_27();

    OUTLINED_FUNCTION_25_31();
  }
  OUTLINED_FUNCTION_37();
  v178(v177);
  sub_1C97D1FA4((uint64_t)v190, (void (*)(void))type metadata accessor for USOParse);
  return v154;
}

unint64_t sub_1C993B824()
{
  unint64_t result = qword_1EA592880;
  if (!qword_1EA592880)
  {
    sub_1C9BEBEB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592880);
  }
  return result;
}

void OUTLINED_FUNCTION_11_57(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_12_48(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_13_57(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

void OUTLINED_FUNCTION_21_28(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_22_33()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_24_28()
{
  return swift_unknownObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_25_31()
{
  return v0;
}

void OUTLINED_FUNCTION_26_32(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_27_27()
{
  return swift_release_n();
}

void UsoTask.hasDirectDismissal.getter()
{
}

uint64_t sub_1C993B97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C993B9E4()
{
  unint64_t result = qword_1EA592898;
  if (!qword_1EA592898)
  {
    sub_1C9BEBA18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592898);
  }
  return result;
}

void UsoTask.hasThankYou.getter()
{
}

void sub_1C993BA40()
{
  OUTLINED_FUNCTION_11_1();
  sub_1C9BEBA18();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592888);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_3_59();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592890);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_68_0();
  uint64_t v9 = MEMORY[0x1F4188790](v7, v8);
  MEMORY[0x1F4188790](v9, v10);
  sub_1C9BEB7E8();
  if (v11[3])
  {
    sub_1C9BEBC78();
    if (swift_dynamicCast()) {
      sub_1C9BEC838();
    }
  }
  else
  {
    sub_1C95FE81C((uint64_t)v11, &qword_1EBC78700);
  }
  OUTLINED_FUNCTION_10();
}

uint64_t Array<A>.hasDirectDismissal.getter(unint64_t a1)
{
  return sub_1C993BE18(a1, (uint64_t (*)(void))UsoTask.hasDirectDismissal.getter);
}

uint64_t Array<A>.hasThankYou.getter(unint64_t a1)
{
  return sub_1C993BE18(a1, (uint64_t (*)(void))UsoTask.hasThankYou.getter);
}

uint64_t sub_1C993BE18(unint64_t a1, uint64_t (*a2)(void))
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      MEMORY[0x1CB78B3A0](0, a1);
      char v5 = a2();
      swift_release();
      if (v5) {
        break;
      }
      if (v4 != 1)
      {
        uint64_t v8 = 5;
        while (1)
        {
          if ((a1 & 0xC000000000000001) == 0) {
            sub_1C9BEC838();
          }
          MEMORY[0x1CB78B3A0](v8 - 4, a1);
          uint64_t v9 = v8 - 3;
          if (__OFADD__(v8 - 4, 1)) {
            break;
          }
          char v6 = a2();
          swift_release();
          if ((v6 & 1) == 0)
          {
            ++v8;
            if (v9 != v4) {
              continue;
            }
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_1C9BEE3C8();
        if (v4) {
          continue;
        }
      }
      goto LABEL_8;
    }
    char v6 = 1;
  }
  else
  {
LABEL_8:
    char v6 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t Siri_Nlu_External_UserDialogAct.hasDirectDismissal.getter()
{
  return sub_1C993BF8C((uint64_t (*)(void))Array<A>.hasDirectDismissal.getter);
}

uint64_t Siri_Nlu_External_UserDialogAct.hasThankYou.getter()
{
  return sub_1C993BF8C((uint64_t (*)(void))Array<A>.hasThankYou.getter);
}

uint64_t sub_1C993BF8C(uint64_t (*a1)(void))
{
  LOBYTE(a1) = a1();
  swift_bridgeObjectRelease();
  return a1 & 1;
}

void Array<A>.hasWantedToPause.getter()
{
}

{
  sub_1C993C9B4();
}

void Array<A>.hasCancelled.getter()
{
}

{
  sub_1C993C9B4();
}

void Array<A>.hasRejected.getter()
{
}

{
  sub_1C993C9B4();
}

void Array<A>.hasDirectDismissal.getter()
{
}

{
  sub_1C993CE08();
}

void Array<A>.hasThankYou.getter()
{
}

{
  sub_1C993CE08();
}

void sub_1C993C070()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v35 = v0;
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 16);
  if (!v10)
  {
LABEL_27:
    OUTLINED_FUNCTION_20_2();
    OUTLINED_FUNCTION_10();
    return;
  }
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v12 = v5 + 16;
  uint64_t v11 = v13;
  OUTLINED_FUNCTION_13_58();
  uint64_t v34 = v2 + v14;
  uint64_t v15 = (void (**)(char *, uint64_t))(v12 - 8);
  uint64_t v33 = *(void *)(v12 + 56);
  uint64_t v27 = v2;
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
  uint64_t v31 = v3;
  uint64_t v28 = v10;
  uint64_t v29 = v12;
  uint64_t v32 = v13;
  while (1)
  {
    v11(v9, v34 + v33 * v16, v3);
    unint64_t v17 = sub_1C9BEB238();
    unint64_t v18 = v17;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v19 = sub_1C9BEE3C8();
      swift_bridgeObjectRelease();
      if (!v19)
      {
LABEL_20:
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v19) {
        goto LABEL_20;
      }
    }
    if ((v18 & 0xC000000000000001) == 0) {
      sub_1C9BEC838();
    }
    MEMORY[0x1CB78B3A0](0, v18);
    char v20 = v35();
    swift_release();
    if (v20)
    {
LABEL_25:
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_37();
      v26();
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    if (v19 != 1)
    {
      if ((v18 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      uint64_t v21 = MEMORY[0x1CB78B3A0](1, v18);
      char v22 = ((uint64_t (*)(uint64_t))v35)(v21);
      swift_release();
      if (v22) {
        goto LABEL_25;
      }
      if (v19 != 2) {
        break;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease_n();
    uint64_t v15 = v30;
    uint64_t v3 = v31;
    uint64_t v10 = v28;
LABEL_21:
    uint64_t v11 = v32;
    ++v16;
    (*v15)(v9, v3);
    if (v16 == v10) {
      goto LABEL_26;
    }
  }
  uint64_t v23 = 6;
  while (1)
  {
    MEMORY[0x1CB78B3A0](v23 - 4, v18);
    uint64_t v24 = v23 - 3;
    if (__OFADD__(v23 - 4, 1)) {
      break;
    }
    char v25 = v35();
    swift_release();
    if (v25) {
      goto LABEL_25;
    }
    ++v23;
    if (v24 == v19) {
      goto LABEL_18;
    }
  }
  __break(1u);
}

void Array<A>.hasWantedToUndo.getter()
{
}

void sub_1C993C370()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_22_2();
  uint64_t v10 = *(void *)(v4 + 16);
  if (v10)
  {
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v11 = v7 + 16;
    uint64_t v12 = v13;
    OUTLINED_FUNCTION_13_58();
    uint64_t v15 = v4 + v14;
    uint64_t v16 = *(void *)(v11 + 56);
    swift_bridgeObjectRetain();
    uint64_t v17 = v10 - 1;
    do
    {
      uint64_t v18 = v17;
      uint64_t v19 = v12(v0, v15, v5);
      char v20 = v2(v19);
      (*(void (**)(uint64_t, uint64_t))(v11 - 8))(v0, v5);
      if (v20) {
        break;
      }
      uint64_t v17 = v18 - 1;
      v15 += v16;
    }
    while (v18);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_10();
}

void Parse.hasWantedToPause.getter()
{
}

uint64_t Parse.interpretableAsUniversalAction.getter()
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_10_54();
  uint64_t v4 = type metadata accessor for USOParse();
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_22_2();
  sub_1C98C83FC(v1, v0, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_1C9612BD8(v0, v1);
    char v7 = sub_1C9BEAEF8();
    sub_1C993D328(v1, (void (*)(void))type metadata accessor for USOParse);
    if (v7) {
      return 1;
    }
  }
  else
  {
    sub_1C993D328(v0, (void (*)(void))type metadata accessor for Parse);
  }
  return 0;
}

void Parse.hasCancelled.getter()
{
}

void sub_1C993C5CC()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v30 = v3;
  uint64_t v4 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v9 = OUTLINED_FUNCTION_15_21();
  type metadata accessor for Parse(v9);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v12 = OUTLINED_FUNCTION_9_49();
  uint64_t v13 = OUTLINED_FUNCTION_22(v12);
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_6_0();
  uint64_t v17 = v16 - v15;
  sub_1C98C83FC(v0, v2, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    uint64_t v28 = (void (*)(void))type metadata accessor for Parse;
    uint64_t v29 = v2;
    goto LABEL_10;
  }
  sub_1C9612BD8(v2, v17);
  if ((Parse.interpretableAsUniversalAction.getter() & 1) == 0)
  {
LABEL_8:
    uint64_t v28 = (void (*)(void))type metadata accessor for USOParse;
    uint64_t v29 = v17;
LABEL_10:
    sub_1C993D328(v29, v28);
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(sub_1C9BEAEC8() + 16);
  if (!v18)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v19 = v6 + 16;
  char v20 = v21;
  OUTLINED_FUNCTION_13_58();
  uint64_t v24 = v22 + v23;
  uint64_t v25 = *(void *)(v19 + 56);
  while (1)
  {
    uint64_t v26 = v20(v1, v24, v4);
    char v27 = v30(v26);
    (*(void (**)(uint64_t, uint64_t))(v19 - 8))(v1, v4);
    if (v27) {
      break;
    }
    v24 += v25;
    if (!--v18) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C993D328(v17, (void (*)(void))type metadata accessor for USOParse);
LABEL_11:
  OUTLINED_FUNCTION_10();
}

void Parse.hasRejected.getter()
{
}

BOOL Parse.hasDirectDismissal.getter()
{
  return sub_1C993C824((uint64_t (*)(void))Array<A>.hasDirectDismissal.getter);
}

BOOL Parse.hasThankYou.getter()
{
  return sub_1C993C824((uint64_t (*)(void))Array<A>.hasThankYou.getter);
}

BOOL sub_1C993C824(uint64_t (*a1)(void))
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_15_21();
  uint64_t v7 = type metadata accessor for USOParse();
  uint64_t v8 = OUTLINED_FUNCTION_22(v7);
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_3_59();
  sub_1C98C83FC(v1, v3, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    uint64_t v12 = (void (*)(void))type metadata accessor for Parse;
    uint64_t v13 = v3;
LABEL_7:
    sub_1C993D328(v13, v12);
    return 0;
  }
  sub_1C9612BD8(v3, v2);
  if ((Parse.interpretableAsUniversalAction.getter() & 1) == 0)
  {
    uint64_t v12 = (void (*)(void))type metadata accessor for USOParse;
    uint64_t v13 = v2;
    goto LABEL_7;
  }
  sub_1C9BEAEC8();
  char v10 = a1();
  swift_bridgeObjectRelease();
  sub_1C993D328(v2, (void (*)(void))type metadata accessor for USOParse);
  return (v10 & 1) != 0;
}

void sub_1C993C9B4()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v60 = v1;
  uint64_t v3 = v2;
  uint64_t v59 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v8 = OUTLINED_FUNCTION_9_49();
  uint64_t v9 = OUTLINED_FUNCTION_22(v8);
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_68_0();
  uint64_t v13 = v11 - v12;
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_2_67();
  MEMORY[0x1F4188790](v19, v20);
  OUTLINED_FUNCTION_16_41();
  uint64_t v53 = v21 - v22;
  uint64_t v25 = MEMORY[0x1F4188790](v23, v24);
  char v27 = (char *)&v47 - v26;
  MEMORY[0x1F4188790](v25, v28);
  uint64_t v30 = (char *)&v47 - v29;
  uint64_t v56 = *(void *)(v3 + 16);
  if (!v56) {
    goto LABEL_22;
  }
  OUTLINED_FUNCTION_17_38();
  uint64_t v55 = v3 + v31;
  uint64_t v57 = v5 + 8;
  uint64_t v58 = v5 + 16;
  uint64_t v54 = *(void *)(v32 + 72);
  uint64_t v49 = v3;
  swift_bridgeObjectRetain();
  uint64_t v33 = 0;
  uint64_t v34 = v53;
  uint64_t v47 = v13;
  uint64_t v48 = v5;
  os_log_type_t v50 = v17;
  uint64_t v52 = v18;
  while (1)
  {
    sub_1C98C83FC(v55 + v54 * v33, (uint64_t)v30, (void (*)(void))type metadata accessor for Parse);
    sub_1C98C83FC((uint64_t)v30, (uint64_t)v27, (void (*)(void))type metadata accessor for Parse);
    if (swift_getEnumCaseMultiPayload() == 6) {
      break;
    }
    uint64_t v45 = (void (*)(void))type metadata accessor for Parse;
    uint64_t v46 = (uint64_t)v27;
LABEL_14:
    sub_1C993D328(v46, v45);
LABEL_15:
    ++v33;
    sub_1C993D328((uint64_t)v30, (void (*)(void))type metadata accessor for Parse);
    if (v33 == v56) {
      goto LABEL_21;
    }
  }
  sub_1C9612BD8((uint64_t)v27, (uint64_t)v17);
  sub_1C98C83FC((uint64_t)v30, v34, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_1C993D328(v34, (void (*)(void))type metadata accessor for Parse);
    goto LABEL_13;
  }
  sub_1C9612BD8(v34, v13);
  char v35 = sub_1C9BEAEF8();
  sub_1C993D328(v13, (void (*)(void))type metadata accessor for USOParse);
  if ((v35 & 1) == 0)
  {
LABEL_13:
    uint64_t v45 = (void (*)(void))type metadata accessor for USOParse;
    uint64_t v46 = (uint64_t)v17;
    goto LABEL_14;
  }
  uint64_t v36 = *(void *)(sub_1C9BEAEC8() + 16);
  if (!v36)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    sub_1C993D328((uint64_t)v17, (void (*)(void))type metadata accessor for USOParse);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_13_58();
  uint64_t v51 = v37;
  uint64_t v39 = v37 + v38;
  uint64_t v40 = *(void *)(v5 + 72);
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  while (1)
  {
    uint64_t v42 = v41(v0, v39, v59);
    char v43 = v60(v42);
    OUTLINED_FUNCTION_37();
    v44();
    if (v43) {
      break;
    }
    v39 += v40;
    if (!--v36)
    {
      swift_bridgeObjectRelease();
      uint64_t v13 = v47;
      uint64_t v5 = v48;
      uint64_t v17 = v50;
      uint64_t v34 = v53;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C993D328((uint64_t)v50, (void (*)(void))type metadata accessor for USOParse);
  sub_1C993D328((uint64_t)v30, (void (*)(void))type metadata accessor for Parse);
LABEL_21:
  swift_bridgeObjectRelease();
LABEL_22:
  OUTLINED_FUNCTION_10();
}

void sub_1C993CE08()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v36 = v0;
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for USOParse();
  uint64_t v4 = OUTLINED_FUNCTION_22(v3);
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_68_0();
  uint64_t v37 = v6 - v7;
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)v35 - v10;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_2_67();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_16_41();
  uint64_t v16 = v14 - v15;
  uint64_t v19 = MEMORY[0x1F4188790](v17, v18);
  uint64_t v21 = (char *)v35 - v20;
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)v35 - v23;
  uint64_t v25 = *(void *)(v2 + 16);
  if (!v25) {
    goto LABEL_14;
  }
  OUTLINED_FUNCTION_17_38();
  uint64_t v27 = v2 + v26;
  uint64_t v29 = *(void *)(v28 + 72);
  v35[1] = v2;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C98C83FC(v27, (uint64_t)v24, (void (*)(void))type metadata accessor for Parse);
    sub_1C98C83FC((uint64_t)v24, (uint64_t)v21, (void (*)(void))type metadata accessor for Parse);
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      uint64_t v33 = (void (*)(void))type metadata accessor for Parse;
      uint64_t v34 = (uint64_t)v21;
      goto LABEL_11;
    }
    sub_1C9612BD8((uint64_t)v21, (uint64_t)v11);
    sub_1C98C83FC((uint64_t)v24, v16, (void (*)(void))type metadata accessor for Parse);
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      sub_1C993D328(v16, (void (*)(void))type metadata accessor for Parse);
LABEL_10:
      uint64_t v33 = (void (*)(void))type metadata accessor for USOParse;
      uint64_t v34 = (uint64_t)v11;
LABEL_11:
      sub_1C993D328(v34, v33);
      goto LABEL_12;
    }
    uint64_t v30 = v37;
    sub_1C9612BD8(v16, v37);
    char v31 = sub_1C9BEAEF8();
    sub_1C993D328(v30, (void (*)(void))type metadata accessor for USOParse);
    if ((v31 & 1) == 0) {
      goto LABEL_10;
    }
    sub_1C9BEAEC8();
    char v32 = v36();
    swift_bridgeObjectRelease();
    sub_1C993D328((uint64_t)v11, (void (*)(void))type metadata accessor for USOParse);
    if (v32) {
      break;
    }
LABEL_12:
    sub_1C993D328((uint64_t)v24, (void (*)(void))type metadata accessor for Parse);
    v27 += v29;
    if (!--v25) {
      goto LABEL_13;
    }
  }
  sub_1C993D328((uint64_t)v24, (void (*)(void))type metadata accessor for Parse);
LABEL_13:
  swift_bridgeObjectRelease();
LABEL_14:
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_10();
}

void Array<A>.interpretableAsUniversalAction.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_11_1();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v24 = type metadata accessor for USOParse();
  uint64_t v25 = OUTLINED_FUNCTION_22(v24);
  MEMORY[0x1F4188790](v25, v26);
  uint64_t v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_2_67();
  MEMORY[0x1F4188790](v29, v30);
  OUTLINED_FUNCTION_16_41();
  uint64_t v33 = v31 - v32;
  MEMORY[0x1F4188790](v34, v35);
  uint64_t v37 = (char *)&a9 - v36;
  uint64_t v38 = *(void *)(v23 + 16);
  if (!v38) {
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_17_38();
  uint64_t v40 = v23 + v39;
  uint64_t v42 = *(void *)(v41 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1C98C83FC(v40, (uint64_t)v37, (void (*)(void))type metadata accessor for Parse);
    sub_1C98C83FC((uint64_t)v37, v33, (void (*)(void))type metadata accessor for Parse);
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      sub_1C993D328(v33, (void (*)(void))type metadata accessor for Parse);
      goto LABEL_7;
    }
    sub_1C9612BD8(v33, (uint64_t)v28);
    char v43 = sub_1C9BEAEF8();
    sub_1C993D328((uint64_t)v28, (void (*)(void))type metadata accessor for USOParse);
    if (v43) {
      break;
    }
LABEL_7:
    sub_1C993D328((uint64_t)v37, (void (*)(void))type metadata accessor for Parse);
    v40 += v42;
    if (!--v38) {
      goto LABEL_10;
    }
  }
  sub_1C993D328((uint64_t)v37, (void (*)(void))type metadata accessor for Parse);
LABEL_10:
  swift_bridgeObjectRelease();
LABEL_11:
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_10();
}

void Input.inputOrAlternativesHasWantedToPause.getter()
{
}

uint64_t sub_1C993D328(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

void Input.inputOrAlternativesCancelled.getter()
{
}

void Input.inputOrAlternativesRejected.getter()
{
}

void sub_1C993D3D4()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v2;
  uint64_t v40 = v4;
  uint64_t v5 = v1;
  uint64_t v6 = type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_10_54();
  uint64_t v9 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_6_0();
  uint64_t v16 = v15 - v14;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v19 = OUTLINED_FUNCTION_8_58();
  uint64_t v20 = OUTLINED_FUNCTION_22(v19);
  MEMORY[0x1F4188790](v20, v21);
  OUTLINED_FUNCTION_6_0();
  uint64_t v24 = v23 - v22;
  uint64_t v39 = v6;
  sub_1C98C83FC(v1 + *(int *)(v6 + 20), v1, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    uint64_t v35 = (void (*)(void))type metadata accessor for Parse;
    uint64_t v36 = v1;
LABEL_11:
    sub_1C993D328(v36, v35);
    sub_1C98C83FC(v5, v0, (void (*)(void))type metadata accessor for Input);
    v3(*(void *)(v0 + *(int *)(v39 + 24)));
    goto LABEL_12;
  }
  sub_1C9612BD8(v1, v24);
  if ((Parse.interpretableAsUniversalAction.getter() & 1) == 0)
  {
LABEL_10:
    uint64_t v35 = (void (*)(void))type metadata accessor for USOParse;
    uint64_t v36 = v24;
    goto LABEL_11;
  }
  uint64_t v25 = *(void *)(sub_1C9BEAEC8() + 16);
  if (!v25)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v37 = v1;
  uint64_t v38 = v0;
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  uint64_t v26 = v11 + 16;
  uint64_t v27 = v28;
  OUTLINED_FUNCTION_13_58();
  uint64_t v31 = v29 + v30;
  uint64_t v32 = *(void *)(v26 + 56);
  while (1)
  {
    uint64_t v33 = v27(v16, v31, v9);
    char v34 = v40(v33);
    (*(void (**)(uint64_t, uint64_t))(v26 - 8))(v16, v9);
    if (v34) {
      break;
    }
    v31 += v32;
    if (!--v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v5 = v37;
      uint64_t v0 = v38;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C993D328(v24, (void (*)(void))type metadata accessor for USOParse);
  uint64_t v0 = v38;
  sub_1C98C83FC(v37, v38, (void (*)(void))type metadata accessor for Input);
LABEL_12:
  sub_1C993D328(v0, (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_10();
}

void Input.inputOrAlternativesDirectDismissal.getter()
{
}

void Input.inputOrAlternativesThankYou.getter()
{
}

void sub_1C993D718()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_11_58();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v11 = OUTLINED_FUNCTION_8_58();
  uint64_t v12 = OUTLINED_FUNCTION_22(v11);
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_6_0();
  uint64_t v16 = v15 - v14;
  sub_1C98C83FC(v1 + *(int *)(v6 + 20), v1, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    uint64_t v18 = (void (*)(void))type metadata accessor for Parse;
    uint64_t v19 = v1;
LABEL_7:
    sub_1C993D328(v19, v18);
    goto LABEL_8;
  }
  sub_1C9612BD8(v1, v16);
  if ((Parse.interpretableAsUniversalAction.getter() & 1) == 0)
  {
    uint64_t v18 = (void (*)(void))type metadata accessor for USOParse;
    uint64_t v19 = v16;
    goto LABEL_7;
  }
  sub_1C9BEAEC8();
  char v17 = v5();
  swift_bridgeObjectRelease();
  sub_1C993D328(v16, (void (*)(void))type metadata accessor for USOParse);
  if ((v17 & 1) == 0)
  {
LABEL_8:
    sub_1C98C83FC(v1, v0, (void (*)(void))type metadata accessor for Input);
    v3(*(void *)(v0 + *(int *)(v6 + 24)));
    goto LABEL_9;
  }
  sub_1C98C83FC(v1, v0, (void (*)(void))type metadata accessor for Input);
LABEL_9:
  sub_1C993D328(v0, (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_10();
}

void Input.inputOrAlternativesInterpretableAsUniversalAction.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_11_1();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = v21;
  uint64_t v25 = type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v26, v27);
  OUTLINED_FUNCTION_11_58();
  OUTLINED_FUNCTION_0_2();
  uint64_t v29 = v28;
  MEMORY[0x1F4188790](v30, v31);
  OUTLINED_FUNCTION_68_0();
  uint64_t v34 = v32 - v33;
  uint64_t v37 = MEMORY[0x1F4188790](v35, v36);
  uint64_t v39 = (char *)&a9 - v38;
  MEMORY[0x1F4188790](v37, v40);
  uint64_t v42 = (char *)&a9 - v41;
  uint64_t v43 = type metadata accessor for USOParse();
  uint64_t v44 = OUTLINED_FUNCTION_22(v43);
  MEMORY[0x1F4188790](v44, v45);
  OUTLINED_FUNCTION_68_0();
  uint64_t v48 = v46 - v47;
  MEMORY[0x1F4188790](v49, v50);
  uint64_t v52 = (char *)&a9 - v51;
  sub_1C98C83FC(v24 + *(int *)(v25 + 20), (uint64_t)v42, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    sub_1C9612BD8((uint64_t)v42, (uint64_t)v52);
    char v53 = sub_1C9BEAEF8();
    sub_1C993D328((uint64_t)v52, (void (*)(void))type metadata accessor for USOParse);
    if (v53)
    {
      sub_1C98C83FC(v24, v20, (void (*)(void))type metadata accessor for Input);
      goto LABEL_13;
    }
  }
  else
  {
    sub_1C993D328((uint64_t)v42, (void (*)(void))type metadata accessor for Parse);
  }
  sub_1C98C83FC(v24, v20, (void (*)(void))type metadata accessor for Input);
  uint64_t v54 = *(void *)(v20 + *(int *)(v25 + 24));
  uint64_t v55 = *(void *)(v54 + 16);
  if (v55)
  {
    OUTLINED_FUNCTION_13_58();
    uint64_t v57 = v54 + v56;
    uint64_t v58 = *(void *)(v29 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C98C83FC(v57, (uint64_t)v39, (void (*)(void))type metadata accessor for Parse);
      sub_1C98C83FC((uint64_t)v39, v34, (void (*)(void))type metadata accessor for Parse);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        sub_1C9612BD8(v34, v48);
        char v59 = sub_1C9BEAEF8();
        sub_1C993D328(v48, (void (*)(void))type metadata accessor for USOParse);
        if (v59)
        {
          sub_1C993D328((uint64_t)v39, (void (*)(void))type metadata accessor for Parse);
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
      }
      else
      {
        sub_1C993D328(v34, (void (*)(void))type metadata accessor for Parse);
      }
      sub_1C993D328((uint64_t)v39, (void (*)(void))type metadata accessor for Parse);
      v57 += v58;
      --v55;
    }
    while (v55);
    swift_bridgeObjectRelease();
  }
LABEL_13:
  sub_1C993D328(v20, (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_20_2();
  OUTLINED_FUNCTION_10();
}

uint64_t OUTLINED_FUNCTION_8_58()
{
  return type metadata accessor for USOParse();
}

uint64_t OUTLINED_FUNCTION_9_49()
{
  return type metadata accessor for USOParse();
}

uint64_t OUTLINED_FUNCTION_10_54()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_11_58()
{
  return type metadata accessor for Parse(0);
}

uint64_t sub_1C993DD5C()
{
  unint64_t v0 = sub_1C9BEB6A8();
  uint64_t v1 = sub_1C9613030(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C993DF60()
{
  unint64_t v0 = sub_1C9BEB238();
  uint64_t v1 = sub_1C9613030(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1C993E164()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_5_23();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77468);
  uint64_t v6 = OUTLINED_FUNCTION_22(v5);
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  sub_1C961346C();
}

uint64_t OUTLINED_FUNCTION_1_64()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_71()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_4_63(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return sub_1C9BEB5B8();
}

uint64_t OUTLINED_FUNCTION_8_59()
{
  return sub_1C9BEAE08();
}

uint64_t OUTLINED_FUNCTION_12_49()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_14_51()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_17_39()
{
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v1);
  return sub_1C96C26E8(v2, v0);
}

uint64_t OUTLINED_FUNCTION_18_39()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_19_39()
{
  return 0x6E6F6D6D6F63;
}

unint64_t OUTLINED_FUNCTION_20_44()
{
  return 0xD000000000000013;
}

double OUTLINED_FUNCTION_22_34()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 112) = 0u;
  *(_OWORD *)(v0 - 96) = 0u;
  *(void *)(v0 - 128) = 0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_29()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_33()
{
  return sub_1C9BEE618();
}

uint64_t Parse.PegasusResult.clientComponent.getter()
{
  OUTLINED_FUNCTION_21_15();
  uint64_t v1 = sub_1C9BEACA8();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_222();
  uint64_t v6 = sub_1C9BEAC28();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEAC38();
  sub_1C9BEAC08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
  uint64_t v13 = sub_1C9BEAC98();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
  sub_1C9612EE4(v13);
  return swift_bridgeObjectRelease();
}

uint64_t Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C993E900(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1C993EF78);
}

id Parse.ServerConversion.siriKitIntent.getter()
{
  return *(id *)(v0 + 16);
}

void Parse.ServerConversion.confirmationState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t Parse.ServerConversion.parameterMetadata.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Parse.ServerConversion.appResolutionStateProviding.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD5F0(v1 + 40, a1);
}

uint64_t Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:appResolutionStateProviding:)(uint64_t a1, char *a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  Parse.ServerConversion.init(siriKitIntent:confirmationState:appResolutionStateProviding:)(a1, a2, a3);
  return v6;
}

uint64_t Parse.ServerConversion.init(siriKitIntent:confirmationState:appResolutionStateProviding:)(uint64_t a1, char *a2, long long *a3)
{
  char v4 = *a2;
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = v4;
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC860];
  sub_1C95FD5D8(a3, v3 + 40);
  return v3;
}

uint64_t Parse.ServerConversion.init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C993E900(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1C993F0B0);
}

uint64_t sub_1C993E900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_5();
  uint64_t v12 = *(void *)(v11 + 24);
  uint64_t v13 = *(void *)(v11 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v11, v12);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v14, v15);
  char v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  uint64_t v19 = a5(v9, v8, v7, v17, v5, v12, v13);
  __swift_destroy_boxed_opaque_existential_1(v6);
  return v19;
}

uint64_t Parse.ServerConversion.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t Parse.ServerConversion.__deallocating_deinit()
{
  Parse.ServerConversion.deinit();

  return swift_deallocClassInstance();
}

uint64_t Parse.DirectInvocation.userData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Parse.PegasusResult.serverDrivenExperience.getter()
{
  OUTLINED_FUNCTION_21_15();
  uint64_t v1 = sub_1C9BEAC28();
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_222();
  sub_1C9BEAC38();
  sub_1C9BEAC18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

uint64_t Parse.PegasusResult.response.getter()
{
  OUTLINED_FUNCTION_21_15();
  sub_1C9BEAC48();
  OUTLINED_FUNCTION_8_4();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);

  return v4(v0, v1, v2);
}

uint64_t Parse.PegasusResult.init(pegasusResponse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C9BEAC48();
  OUTLINED_FUNCTION_8_4();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);

  return v6(a2, a1, v4);
}

void Parse.nlLocation.getter()
{
  uint64_t v1 = OUTLINED_FUNCTION_21_15();
  type metadata accessor for Parse(v1);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_22_2();
  sub_1C97D1F40(v0, v0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      sub_1C9BEC028();
      OUTLINED_FUNCTION_8_4();
      (*(void (**)(uint64_t))(v4 + 8))(v0);
      goto LABEL_5;
    case 2u:
      sub_1C97F25EC(v0);
      goto LABEL_7;
    case 3u:
    case 6u:
    case 7u:
    case 8u:
    case 9u:
      sub_1C97F25EC(v0);
      sub_1C9BEC728();
    case 0xAu:
LABEL_7:
      sub_1C9BEC718();
    default:
      sub_1C97F25EC(v0);
LABEL_5:
      sub_1C9BEC738();
  }
}

uint64_t Parse.parseType.getter()
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_22_2();
  sub_1C97D1F40(v0, v0);
  uint64_t v3 = 0x7974706D65;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      sub_1C9BEC028();
      OUTLINED_FUNCTION_8_4();
      (*(void (**)(uint64_t))(v5 + 8))(v0);
      uint64_t v3 = 0xD00000000000001ELL;
      break;
    case 2u:
      uint64_t v3 = 0xD000000000000010;
      sub_1C97F25EC(v0);
      break;
    case 3u:
      sub_1C97F25EC(v0);
      unsigned int v4 = 880168014;
      goto LABEL_7;
    case 4u:
      sub_1C97F25EC(v0);
      uint64_t v3 = 0x5273757361676570;
      break;
    case 5u:
      sub_1C97F25EC(v0);
      uint64_t v3 = 0x655273656D6D6F70;
      break;
    case 6u:
      sub_1C97F25EC(v0);
      uint64_t v3 = 7304053;
      break;
    case 7u:
      sub_1C97F25EC(v0);
      uint64_t v3 = 1802398060;
      break;
    case 8u:
      sub_1C97F25EC(v0);
      uint64_t v3 = 0x726574756F526C6ELL;
      break;
    case 9u:
      sub_1C97F25EC(v0);
      uint64_t v3 = 0x746E65696C436669;
      break;
    case 0xAu:
      return v3;
    default:
      sub_1C97F25EC(v0);
      unsigned int v4 = 863390798;
LABEL_7:
      uint64_t v3 = v4 | 0x65746E4900000000;
      break;
  }
  return v3;
}

uint64_t sub_1C993EF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1, a2);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, a6);
  uint64_t v15 = sub_1C993F0B0(a1, a2, a3, (uint64_t)v13, v14, a6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, a6);
  return v15;
}

uint64_t sub_1C993F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_5();
  v12[8] = v13;
  v12[9] = v14;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, v6, a6);
  char v16 = *v8;
  *(void *)(a5 + 16) = v9;
  *(unsigned char *)(a5 + 24) = v16;
  *(void *)(a5 + 32) = v7;
  return a5;
}

void *assignWithCopy for Parse(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C97F25EC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_26;
      case 1u:
        uint64_t v7 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)((char *)a1 + *(int *)(v8 + 48)) = *(void *)((char *)a2 + *(int *)(v8 + 48));
        sub_1C9BEC838();
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_26;
      case 4u:
        uint64_t v9 = sub_1C9BEAC48();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_26;
      case 5u:
        uint64_t v10 = (void *)*a2;
        *a1 = *a2;
        id v11 = v10;
        goto LABEL_26;
      case 6u:
        uint64_t v12 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = (int *)type metadata accessor for USOParse();
        uint64_t v14 = v13[5];
        uint64_t v15 = (char *)a1 + v14;
        char v16 = (char *)a2 + v14;
        uint64_t v17 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
        {
          uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
          __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
        }
        uint64_t v37 = v13[6];
        uint64_t v38 = (void *)((char *)a1 + v37);
        uint64_t v39 = (void *)((char *)a2 + v37);
        void *v38 = *v39;
        v38[1] = v39[1];
        uint64_t v40 = v13[7];
        uint64_t v41 = (char *)a1 + v40;
        uint64_t v42 = (char *)a2 + v40;
        int v43 = *(_DWORD *)v42;
        v41[4] = v42[4];
        *(_DWORD *)uint64_t v41 = v43;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 7u:
        uint64_t v19 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = (int *)type metadata accessor for USOParse();
        uint64_t v21 = v20[5];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        }
        uint64_t v44 = v20[6];
        uint64_t v45 = (void *)((char *)a1 + v44);
        uint64_t v46 = (void *)((char *)a2 + v44);
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        uint64_t v47 = v20[7];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        int v50 = *(_DWORD *)v49;
        v48[4] = v49[4];
        *(_DWORD *)uint64_t v48 = v50;
        uint64_t v51 = (int *)type metadata accessor for LinkParse();
        uint64_t v52 = v51[5];
        char v53 = (void *)((char *)a1 + v52);
        uint64_t v54 = (void *)((char *)a2 + v52);
        void *v53 = *v54;
        v53[1] = v54[1];
        uint64_t v55 = v51[6];
        uint64_t v56 = (void *)((char *)a1 + v55);
        uint64_t v57 = (void *)((char *)a2 + v55);
        *uint64_t v56 = *v57;
        v56[1] = v57[1];
        uint64_t v58 = v51[7];
        char v59 = (void *)((char *)a1 + v58);
        uint64_t v60 = (void *)((char *)a2 + v58);
        *char v59 = *v60;
        v59[1] = v60[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 8u:
        uint64_t v26 = sub_1C9BEC928();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = (int *)type metadata accessor for NLRouterParse();
        uint64_t v28 = v27[5];
        uint64_t v29 = (void *)((char *)a1 + v28);
        uint64_t v30 = (void *)((char *)a2 + v28);
        *uint64_t v29 = *v30;
        v29[1] = v30[1];
        uint64_t v31 = v27[6];
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = (int *)type metadata accessor for USOParse();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, (uint64_t)v34))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v61 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v32, v33, v61);
          uint64_t v62 = v34[5];
          os_log_type_t v63 = &v32[v62];
          uint64_t v64 = &v33[v62];
          uint64_t v65 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
          {
            uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
            __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v65);
          }
          uint64_t v67 = v34[6];
          uint64_t v68 = &v32[v67];
          os_log_type_t v69 = &v33[v67];
          *(void *)uint64_t v68 = *(void *)v69;
          *((void *)v68 + 1) = *((void *)v69 + 1);
          uint64_t v70 = v34[7];
          uint64_t v71 = &v32[v70];
          uint64_t v72 = &v33[v70];
          int v73 = *(_DWORD *)v72;
          v71[4] = v72[4];
          *(_DWORD *)uint64_t v71 = v73;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, (uint64_t)v34);
        }
        uint64_t v74 = v27[7];
        unint64_t v75 = *(void **)((char *)a2 + v74);
        *(void *)((char *)a1 + v74) = v75;
        id v76 = v75;
        goto LABEL_26;
      case 9u:
        uint64_t v36 = sub_1C9BEC8F8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for Parse(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_22;
    case 1u:
      uint64_t v7 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
      goto LABEL_22;
    case 4u:
      uint64_t v9 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_22;
    case 6u:
      uint64_t v10 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      id v11 = (int *)type metadata accessor for USOParse();
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      }
      *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
      uint64_t v32 = v11[7];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      v33[4] = v34[4];
      *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
      goto LABEL_22;
    case 7u:
      uint64_t v17 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      uint64_t v18 = (int *)type metadata accessor for USOParse();
      uint64_t v19 = v18[5];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
      }
      *(_OWORD *)&a1[v18[6]] = *(_OWORD *)&a2[v18[6]];
      uint64_t v35 = v18[7];
      uint64_t v36 = &a1[v35];
      uint64_t v37 = &a2[v35];
      v36[4] = v37[4];
      *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
      uint64_t v38 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&a1[v38[5]] = *(_OWORD *)&a2[v38[5]];
      *(_OWORD *)&a1[v38[6]] = *(_OWORD *)&a2[v38[6]];
      *(_OWORD *)&a1[v38[7]] = *(_OWORD *)&a2[v38[7]];
      goto LABEL_22;
    case 8u:
      uint64_t v24 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
      uint64_t v25 = (int *)type metadata accessor for NLRouterParse();
      *(_OWORD *)&a1[v25[5]] = *(_OWORD *)&a2[v25[5]];
      uint64_t v26 = v25[6];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, (uint64_t)v29))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        uint64_t v39 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v27, v28, v39);
        uint64_t v40 = v29[5];
        uint64_t v41 = &v27[v40];
        uint64_t v42 = &v28[v40];
        uint64_t v43 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
        }
        *(_OWORD *)&v27[v29[6]] = *(_OWORD *)&v28[v29[6]];
        uint64_t v45 = v29[7];
        uint64_t v46 = &v27[v45];
        uint64_t v47 = &v28[v45];
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, (uint64_t)v29);
      }
      *(void *)&a1[v25[7]] = *(void *)&a2[v25[7]];
      goto LABEL_22;
    case 9u:
      uint64_t v31 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(a1, a2, v31);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for Parse(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C97F25EC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_23;
      case 1u:
        uint64_t v7 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&a1[*(int *)(v8 + 48)] = *(void *)&a2[*(int *)(v8 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v9 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        goto LABEL_23;
      case 6u:
        uint64_t v10 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        id v11 = (int *)type metadata accessor for USOParse();
        uint64_t v12 = v11[5];
        uint64_t v13 = &a1[v12];
        uint64_t v14 = &a2[v12];
        uint64_t v15 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
          __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
        }
        *(_OWORD *)&a1[v11[6]] = *(_OWORD *)&a2[v11[6]];
        uint64_t v32 = v11[7];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        v33[4] = v34[4];
        *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
        goto LABEL_23;
      case 7u:
        uint64_t v17 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
        uint64_t v18 = (int *)type metadata accessor for USOParse();
        uint64_t v19 = v18[5];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        uint64_t v22 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
        }
        *(_OWORD *)&a1[v18[6]] = *(_OWORD *)&a2[v18[6]];
        uint64_t v35 = v18[7];
        uint64_t v36 = &a1[v35];
        uint64_t v37 = &a2[v35];
        v36[4] = v37[4];
        *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
        uint64_t v38 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&a1[v38[5]] = *(_OWORD *)&a2[v38[5]];
        *(_OWORD *)&a1[v38[6]] = *(_OWORD *)&a2[v38[6]];
        *(_OWORD *)&a1[v38[7]] = *(_OWORD *)&a2[v38[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v24 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        uint64_t v25 = (int *)type metadata accessor for NLRouterParse();
        *(_OWORD *)&a1[v25[5]] = *(_OWORD *)&a2[v25[5]];
        uint64_t v26 = v25[6];
        uint64_t v27 = &a1[v26];
        uint64_t v28 = &a2[v26];
        uint64_t v29 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, (uint64_t)v29))
        {
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          uint64_t v39 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v27, v28, v39);
          uint64_t v40 = v29[5];
          uint64_t v41 = &v27[v40];
          uint64_t v42 = &v28[v40];
          uint64_t v43 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
          }
          *(_OWORD *)&v27[v29[6]] = *(_OWORD *)&v28[v29[6]];
          uint64_t v45 = v29[7];
          uint64_t v46 = &v27[v45];
          uint64_t v47 = &v28[v45];
          v46[4] = v47[4];
          *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
          __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, (uint64_t)v29);
        }
        *(void *)&a1[v25[7]] = *(void *)&a2[v25[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v31 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(a1, a2, v31);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C9940640()
{
  uint64_t result = sub_1C9BEC028();
  if (v1 <= 0x3F)
  {
    v7[4] = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v7[5] = v7;
    v7[6] = &unk_1C9C03B98;
    v7[7] = &unk_1C9C03BB0;
    uint64_t result = sub_1C9BEAC48();
    if (v2 <= 0x3F)
    {
      v7[8] = *(void *)(result - 8) + 64;
      v7[9] = MEMORY[0x1E4FBAD78] + 64;
      uint64_t result = type metadata accessor for USOParse();
      if (v3 <= 0x3F)
      {
        v7[10] = *(void *)(result - 8) + 64;
        uint64_t result = type metadata accessor for LinkParse();
        if (v4 <= 0x3F)
        {
          v7[11] = *(void *)(result - 8) + 64;
          uint64_t result = type metadata accessor for NLRouterParse();
          if (v5 <= 0x3F)
          {
            v7[12] = *(void *)(result - 8) + 64;
            uint64_t result = sub_1C9BEC8F8();
            if (v6 <= 0x3F)
            {
              v7[13] = *(void *)(result - 8) + 64;
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for Parse.ServerConversion()
{
  return self;
}

uint64_t method lookup function for Parse.ServerConversion(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Parse.ServerConversion);
}

uint64_t dispatch thunk of Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:appResolutionStateProviding:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Parse.ServerConversion.__allocating_init(siriKitIntent:confirmationState:parameterMetadata:appResolutionStateProviding:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void *assignWithCopy for Parse.DirectInvocation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for Parse.PegasusResult(uint64_t a1)
{
  uint64_t v2 = sub_1C9BEAC48();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for Parse.PegasusResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Parse.PegasusResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9940B70);
}

uint64_t sub_1C9940B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Parse.PegasusResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9940BCC);
}

uint64_t sub_1C9940BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAC48();

  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1C9940C18()
{
  uint64_t result = sub_1C9BEAC48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C9940CA4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v7 = *a1;
  id v8 = OUTLINED_FUNCTION_0_51();
  sub_1C9BED568();

  sub_1C9606A84();
  swift_bridgeObjectRelease();
  if (*((void *)&v55 + 1))
  {
    long long v57 = v54;
    long long v58 = v55;
    long long v59 = v56;
    swift_bridgeObjectRetain();
    id v9 = objc_msgSend(v7, sel_parameters);
    uint64_t v10 = sub_1C9BED428();

    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v54 = *((void *)&v56 + 1);
    sub_1C991A06C(v10, a4, a5, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v12 = OUTLINED_FUNCTION_0_51();
    sub_1C9BED568();

    uint64_t v13 = sub_1C970D64C((uint64_t)&v57, (uint64_t)&v54);
    OUTLINED_FUNCTION_1_65(v13, v14, v15, v16, v17, v18, v19, v20, v43, v44, v45, v47, v49, v50, v51, v52);
    sub_1C9757D80((uint64_t)&v57);
  }
  else
  {
    sub_1C95FE7C0((uint64_t)&v54, &qword_1EA58DD68);
    id v21 = OUTLINED_FUNCTION_0_51();
    sub_1C9BED568();

    sub_1C9606670();
    swift_bridgeObjectRelease();
    if (*((void *)&v58 + 1))
    {
      sub_1C95FD5D8(&v57, (uint64_t)v53);
      sub_1C95FD5F0((uint64_t)v53, (uint64_t)&v57);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DF20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
      *(void *)(inited + 32) = a4;
      *(void *)(inited + 40) = a5;
      swift_bridgeObjectRetain();
      id v23 = objc_msgSend(v7, sel_parameters);
      uint64_t v24 = sub_1C9BED428();

      *(void *)(inited + 48) = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76378);
      *((void *)&v59 + 1) = sub_1C9BED458();
      id v25 = OUTLINED_FUNCTION_0_51();
      sub_1C9BED568();

      uint64_t v26 = sub_1C970D64C((uint64_t)&v57, (uint64_t)&v54);
      OUTLINED_FUNCTION_1_65(v26, v27, v28, v29, v30, v31, v32, v33, v43, v44, v45, v47, v49, v50, v51, v52);
      sub_1C9757D80((uint64_t)&v57);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    }
    else
    {
      sub_1C95FE7C0((uint64_t)&v57, &qword_1EA58B360);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v34 = sub_1C9BECF88();
      __swift_project_value_buffer(v34, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain_n();
      id v35 = v7;
      uint64_t v36 = sub_1C9BECF78();
      os_log_type_t v37 = sub_1C9BEDC88();
      if (os_log_type_enabled(v36, v37))
      {
        os_log_type_t type = v37;
        uint64_t v38 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(void *)&long long v57 = v48;
        *(_DWORD *)uint64_t v38 = 136315394;
        id v39 = objc_msgSend(v35, sel_name);
        uint64_t v40 = sub_1C9BED568();
        unint64_t v42 = v41;

        *(void *)&long long v54 = sub_1C95FF228(v40, v42, (uint64_t *)&v57);
        sub_1C9BEDF68();

        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v54 = sub_1C95FF228(a4, a5, (uint64_t *)&v57);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C95F9000, v36, type, "Cannot find parser matching name '%s' for eventId '%s'. Skipping.", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v48, -1, -1);
        MEMORY[0x1CB78C440](v38, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
}

ValueMetadata *type metadata accessor for ParsingHelper()
{
  return &type metadata for ParsingHelper;
}

ValueMetadata *type metadata accessor for ParsingHelper.UserInputParsingItems()
{
  return &type metadata for ParsingHelper.UserInputParsingItems;
}

id OUTLINED_FUNCTION_0_51()
{
  unint64_t v3 = *(const char **)(v0 + 2192);
  return [v1 v3];
}

uint64_t OUTLINED_FUNCTION_1_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  return sub_1C9804248((uint64_t)va, v16, v17);
}

id sub_1C99411CC(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v70 = a2;
  int v71 = a1;
  uint64_t v8 = sub_1C9BEAB08();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v72 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AD0]), sel_init);
  id v11 = objc_msgSend(v4, sel_fullSpeak);
  sub_1C9BED568();

  id v12 = objc_msgSend(v4, sel_supportingSpeak);
  sub_1C9BED568();

  OUTLINED_FUNCTION_2_68();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = (void *)sub_1C9BED538();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = 0;
  }
  id v16 = v72;
  objc_msgSend(v72, sel_setSpeakableText_, v15);

  id v17 = objc_msgSend(v5, sel_fullPrint);
  sub_1C9BED568();

  id v18 = objc_msgSend(v5, sel_supportingPrint);
  sub_1C9BED568();

  OUTLINED_FUNCTION_2_68();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v20)
  {
    id v21 = (void *)sub_1C9BED538();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v21 = 0;
  }
  objc_msgSend(v72, sel_setText_, v21);

  sub_1C9925E3C();
  id v22 = objc_msgSend(v5, sel_printOnly);
  id v23 = (void *)sub_1C9BEDE48();
  char v24 = sub_1C9BEDE68();

  if (v24)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C9BECF88();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
    uint64_t v26 = sub_1C9BECF78();
    os_log_type_t v27 = sub_1C9BEDC78();
    if (os_log_type_enabled(v26, v27))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v28, v29, "ResponseFactory: The printOnly flag is set to 1. Removing speakable text.");
      OUTLINED_FUNCTION_21_8();
    }

    objc_msgSend(v72, sel_setSpeakableText_, 0);
  }
  id v30 = objc_msgSend(v5, sel_spokenOnly);
  uint64_t v31 = (void *)sub_1C9BEDE48();
  char v32 = sub_1C9BEDE68();

  if (v32)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1C9BECF88();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
    uint64_t v34 = sub_1C9BECF78();
    os_log_type_t v35 = sub_1C9BEDC78();
    if (os_log_type_enabled(v34, v35))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v36, v37, "ResponseFactory: The spokenOnly flag is set to 1. Removing printed text.");
      OUTLINED_FUNCTION_21_8();
    }

    objc_msgSend(v72, sel_setText_, 0);
  }
  uint64_t v38 = &off_1E65A0000;
  if (sub_1C965EF54())
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1C9BECF88();
    __swift_project_value_buffer(v39, (uint64_t)qword_1EBC7A520);
    id v40 = v5;
    unint64_t v41 = sub_1C9BECF78();
    os_log_type_t v42 = sub_1C9BEDC78();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v74 = v65;
      uint64_t v64 = v43;
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v44 = a4;
      id v45 = objc_msgSend(v40, sel_dialogId, v43 + 4);
      uint64_t v46 = sub_1C9BED568();
      uint64_t v66 = a3;
      unint64_t v48 = v47;

      a4 = v44;
      uint64_t v38 = &off_1E65A0000;
      uint64_t v73 = sub_1C95FF228(v46, v48, &v74);
      sub_1C9BEDF68();

      swift_bridgeObjectRelease();
      uint64_t v49 = v64;
      _os_log_impl(&dword_1C95F9000, v41, v42, "ResponseFactory: .text and .speakableText are empty for dialog '%s'. Sending downstream anyway for logging, testing, etc.", v64, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_21_8();
      MEMORY[0x1CB78C440](v49, -1, -1);
    }
    else
    {
    }
  }
  id v50 = v72;
  uint64_t v51 = v67;
  sub_1C9BEAAF8();
  uint64_t v52 = sub_1C9BEAAB8();
  uint64_t v54 = v53;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v51, v69);
  sub_1C97BA8E8(v52, v54, v50);

  id v55 = v50;
  long long v56 = (void *)sub_1C9BEDE48();
  objc_msgSend(v55, sel_setListenAfterSpeaking_, v56);

  id v57 = [v5 (SEL)v38[429]];
  uint64_t v58 = sub_1C9BED568();
  uint64_t v60 = v59;

  sub_1C965EFFC(v58, v60, v55);
  objc_msgSend(v55, sel_setCanUseServerTTS_, v71 & 1);
  if (a4) {
    uint64_t v61 = (void *)sub_1C9BED538();
  }
  else {
    uint64_t v61 = 0;
  }
  objc_msgSend(v55, sel_setDialogCategory_, v61);

  return v55;
}

uint64_t OUTLINED_FUNCTION_2_68()
{
  return sub_1C965EEE4(v0, v1, v2, v3);
}

id sub_1C99418E8(id a1, int a2, uint64_t *a3, uint64_t a4, unint64_t a5, int a6, int a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  id v164 = a8;
  int v163 = a7;
  unint64_t v171 = a5;
  uint64_t v161 = a4;
  int v162 = a2;
  uint64_t v17 = sub_1C9BEAB08();
  uint64_t v169 = *(void *)(v17 - 8);
  uint64_t v170 = v17;
  MEMORY[0x1F4188790](v17, v18);
  v168 = (char *)&v157 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = *a3;
  uint64_t v165 = a3[1];
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1C9BECF88();
  uint64_t v172 = __swift_project_value_buffer(v20, (uint64_t)qword_1EBC7A520);
  id v21 = v13;
  id v22 = sub_1C9BECF78();
  os_log_type_t v23 = sub_1C9BEDC78();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 134218240;
    uint64_t v25 = sub_1C965EE80(v21);
    if (v26 >> 60 != 15)
    {
      uint64_t v27 = v25;
      unint64_t v28 = v26;
      sub_1C9BEA9F8();
      sub_1C963F610(v27, v28);
    }

    OUTLINED_FUNCTION_5_65();
    *(_WORD *)(v24 + 12) = 2048;
    id v29 = objc_msgSend(v21, sel_dialog);
    sub_1C96044C4(0, &qword_1EA58B290);
    unint64_t v30 = sub_1C9BED878();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1C9BEE3C8();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v175[0] = v31;
    sub_1C9BEDF68();

    _os_log_impl(&dword_1C95F9000, v22, v23, "ResponseFactory: Building AddViews with %ld visual bytes and %ld dialogs", (uint8_t *)v24, 0x16u);
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v32 = MEMORY[0x1E4FBC860];
  unint64_t v176 = MEMORY[0x1E4FBC860];
  id v33 = objc_msgSend(v21, sel_dialog);
  sub_1C96044C4(0, &qword_1EA58B290);
  unint64_t v34 = sub_1C9BED878();

  v175[0] = v32;
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C9BEE3C8();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  int v167 = a6;
  if (v35)
  {
    if (v35 < 1)
    {
      __break(1u);
      goto LABEL_80;
    }
    uint64_t v36 = 0;
    uint64_t v173 = v34 & 0xC000000000000001;
    int v37 = a1 & 1;
    unint64_t v38 = v34;
    do
    {
      uint64_t v39 = v35;
      if (v173) {
        id v40 = (id)MEMORY[0x1CB78B3A0](v36, v34);
      }
      else {
        id v40 = *(id *)(v34 + 8 * v36 + 32);
      }
      unint64_t v41 = v40;
      id v42 = v21;
      id v43 = objc_msgSend(v21, sel_meta);
      uint64_t v44 = sub_1C9BED428();

      uint64_t v45 = sub_1C9606628(0x79726F6765746163, 0xE800000000000000, v44);
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      id v48 = sub_1C99411CC(v37, 0, v45, v47);

      uint64_t v49 = swift_bridgeObjectRelease();
      if (v48)
      {
        MEMORY[0x1CB78AA10](v49);
        if (*(void *)((v175[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v175[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C9BED8D8();
        }
        sub_1C9BED948();
        sub_1C9BED8A8();
      }
      ++v36;
      uint64_t v35 = v39;
      id v21 = v42;
      unint64_t v34 = v38;
    }
    while (v39 != v36);
    swift_bridgeObjectRelease();
    unint64_t v50 = v175[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v50 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = sub_1C965EE80(v21);
  uint64_t v53 = &off_1E65A0000;
  if (v52 >> 60 == 15) {
    goto LABEL_29;
  }
  uint64_t v54 = v51;
  unint64_t v55 = v52;
  if (sub_1C968366C(v51, v52))
  {
    sub_1C963F610(v54, v55);
LABEL_29:
    long long v56 = (void *)sub_1C9BECF78();
    os_log_type_t v57 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_4(v57))
    {
      uint64_t v58 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v58);
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v59, v60, "ResponseFactory: Visual data is empty. No snippet will be provided.");
      OUTLINED_FUNCTION_11_4();
    }

    a1 = 0;
    unint64_t v34 = v171;
    goto LABEL_41;
  }
  uint64_t v160 = a10;
  uint64_t v159 = a9;
  uint64_t v61 = (void *)sub_1C9BECF78();
  os_log_type_t v62 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_4(v62))
  {
    uint64_t v63 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v63);
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v64, v65, "ResponseFactory: Building snippet for Response");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v158 = a12;

  id v66 = objc_msgSend(v21, sel_visualInfo);
  objc_msgSend(v66, sel_visualLocation);

  uint64_t v173 = sub_1C96836C0();
  unint64_t v68 = v67;
  swift_bridgeObjectRetain_n();
  uint64_t v69 = sub_1C9BECF78();
  os_log_type_t v70 = sub_1C9BEDC78();
  if (os_log_type_enabled(v69, v70))
  {
    int v71 = (uint8_t *)swift_slowAlloc();
    v175[0] = swift_slowAlloc();
    id v157 = v21;
    *(_DWORD *)int v71 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_1C95FF228(v173, v68, v175);
    OUTLINED_FUNCTION_6_57(v72);
    id v21 = v157;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v69, v70, "ResponseFactory: VisualLocation is set to %s", v71, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v53 = &off_1E65A0000;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v73 = [objc_allocWithZone(MEMORY[0x1E4F96BA0]) (SEL)v53[228]];
  uint64_t v74 = v53;
  unint64_t v75 = v168;
  sub_1C9BEAAF8();
  uint64_t v76 = sub_1C9BEAAB8();
  uint64_t v78 = v77;
  (*(void (**)(char *, uint64_t))(v169 + 8))(v75, v170);
  sub_1C97BA8E8(v76, v78, v73);
  a1 = v73;
  sub_1C9942B0C(v159, v160, a1);

  sub_1C965FD40(v173, v68, a1, (SEL *)&selRef_setItemType_);
  sub_1C96836F0(v54, v55, a1);
  if (v158)
  {
    id v79 = [objc_allocWithZone(MEMORY[0x1E4F96B60]) (SEL)v74 + 1560];
    uint64_t v80 = (void *)sub_1C9BED538();
    objc_msgSend(v79, sel_setApplicationBundleIdentifier_, v80);

    id v81 = a1;
    id v82 = v79;
    objc_msgSend(v81, sel_setSash_, v82);
    sub_1C963F610(v54, v55);
  }
  else
  {
    sub_1C963F610(v54, v55);
  }
  unint64_t v34 = v171;
LABEL_41:
  unint64_t v83 = v50 >> 62;
  if ((v162 & 1) == 0) {
    goto LABEL_56;
  }
  BOOL v84 = (void *)sub_1C9BECF78();
  os_log_type_t v85 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_4(v85))
  {
    v86 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v86);
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v87, v88, "ResponseFactory: Setting listenAfterSpeaking to true on the last utterance view");
    unint64_t v34 = v171;
    OUTLINED_FUNCTION_11_4();
  }

  if (v83)
  {
    swift_bridgeObjectRetain();
    uint64_t v89 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v89 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v89)
  {
    unint64_t v90 = swift_bridgeObjectRetain();
    id v91 = sub_1C965F0C0(v90);
    swift_bridgeObjectRelease();
    if (!v91) {
      goto LABEL_56;
    }
    sub_1C96044C4(0, (unint64_t *)&qword_1EBC76490);
    v92 = (void *)sub_1C9BEDE48();
    objc_msgSend(v91, sel_setListenAfterSpeaking_, v92);
  }
  else
  {
    os_log_type_t v93 = (void *)sub_1C9BECF78();
    os_log_type_t v94 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_4(v94))
    {
      unint64_t v95 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v95);
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v96, v97, "ResponseFactory: UtteranceViews are empty but listenAfterSpeaking is true. Attempting to set listenAfterSpeaking on snippet.");
      unint64_t v34 = v171;
      OUTLINED_FUNCTION_11_4();
    }

    if (a1)
    {
      sub_1C96044C4(0, (unint64_t *)&qword_1EBC76490);
      id v98 = a1;
      v92 = (void *)sub_1C9BEDE48();
      objc_msgSend(v98, sel_setListenAfterSpeaking_, v92);

      unint64_t v34 = v171;
    }
    else
    {
      v92 = (void *)sub_1C9BECF78();
      os_log_type_t v99 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_4(v99))
      {
        os_log_type_t v100 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v100);
        OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v101, v102, "ResponseFactory: No AceViews found on Snippet. Unable to set listenAfterSpeaking");
        unint64_t v34 = v171;
        OUTLINED_FUNCTION_11_4();
      }
    }
  }

LABEL_56:
  swift_bridgeObjectRetain_n();
  unint64_t v103 = sub_1C9BECF78();
  os_log_type_t v104 = sub_1C9BEDC78();
  if (os_log_type_enabled(v103, v104))
  {
    uint64_t v105 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v105 = 134217984;
    if (v83)
    {
      swift_bridgeObjectRetain();
      unint64_t v34 = v171;
      sub_1C9BEE3C8();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_65();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v103, v104, "ResponseFactory: Adding %ld UtteranceViews to Response", v105, 0xCu);
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v83)
  {
    sub_1C96044C4(0, (unint64_t *)&qword_1EA588D70);
    swift_bridgeObjectRetain();
    sub_1C9BEE3A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C9BEE638();
    sub_1C96044C4(0, (unint64_t *)&qword_1EA588D70);
  }
  swift_bridgeObjectRelease();
  sub_1C965F824();
  LOBYTE(a6) = v167;
  if (a1)
  {
    id v106 = a1;
    MEMORY[0x1CB78AA10]();
    if (*(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_65:
      sub_1C9BED948();
      sub_1C9BED8A8();
      goto LABEL_66;
    }
LABEL_80:
    sub_1C9BED8D8();
    goto LABEL_65;
  }
LABEL_66:
  if (v34)
  {
    swift_bridgeObjectRetain_n();
    v107 = sub_1C9BECF78();
    os_log_type_t v108 = sub_1C9BEDC78();
    if (!os_log_type_enabled(v107, v108))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_86;
    }
    uint64_t v109 = swift_slowAlloc();
    v175[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v109 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_1C95FF228(v161, v34, v175);
    OUTLINED_FUNCTION_6_57(v110);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v109 + 12) = 2080;
    swift_beginAccess();
    unint64_t v111 = v176;
    if (v176 >> 62)
    {
      swift_bridgeObjectRetain();
      if (sub_1C9BEE3C8()) {
        goto LABEL_70;
      }
    }
    else
    {
      uint64_t v112 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v112)
      {
LABEL_70:
        OUTLINED_FUNCTION_7_53();
        if ((v111 & 0xC000000000000001) != 0) {
          id v113 = (id)MEMORY[0x1CB78B3A0](0, v111);
        }
        else {
          id v113 = *(id *)(v111 + 32);
        }
        v114 = v113;
        swift_bridgeObjectRelease();
        id v115 = objc_msgSend(v114, sel_description);

        uint64_t v116 = sub_1C9BED568();
        unint64_t v118 = v117;

        goto LABEL_85;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v118 = 0xE500000000000000;
    uint64_t v116 = 0x3E6C696E3CLL;
LABEL_85:
    uint64_t v174 = sub_1C95FF228(v116, v118, v175);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v107, v108, "ResponseFactory: Setting correspondingSessionID to %s on view %s", (uint8_t *)v109, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();

    unint64_t v34 = v171;
LABEL_86:
    swift_beginAccess();
    unint64_t v124 = v176;
    if (v176 >> 62)
    {
      OUTLINED_FUNCTION_8_60();
      if (sub_1C9BEE3C8()) {
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t v125 = *(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v125)
      {
LABEL_88:
        OUTLINED_FUNCTION_7_53();
        if ((v124 & 0xC000000000000001) != 0) {
          id v126 = (id)MEMORY[0x1CB78B3A0](0, v124);
        }
        else {
          id v126 = *(id *)(v124 + 32);
        }
        uint64_t v127 = v126;
        swift_bridgeObjectRelease();
        sub_1C9A7FA04(v161, v34, v127);

        goto LABEL_93;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_93;
  }
  uint64_t v119 = (void *)sub_1C9BECF78();
  os_log_type_t v120 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_4(v120))
  {
    v121 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v121);
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v122, v123, "ResponseFactory: applicationSessionID is nil, not setting correspondingSessionID on ace view");
    OUTLINED_FUNCTION_11_4();
  }

LABEL_93:
  swift_beginAccess();
  unint64_t v128 = v176;
  if (v176 >> 62)
  {
    OUTLINED_FUNCTION_8_60();
    unint64_t v129 = (void *)sub_1C9BEE3C8();
    if (!v129) {
      goto LABEL_98;
    }
  }
  else
  {
    unint64_t v129 = *(void **)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v129) {
      goto LABEL_98;
    }
  }
  OUTLINED_FUNCTION_7_53();
  if ((v128 & 0xC000000000000001) != 0) {
    id v130 = (id)MEMORY[0x1CB78B3A0](0, v128);
  }
  else {
    id v130 = *(id *)(v128 + 32);
  }
  unint64_t v129 = v130;
LABEL_98:
  swift_bridgeObjectRelease();
  objc_msgSend(v129, sel_setPreserveResultSpaceIfPossible_, v163 & 1);

  if (v164)
  {
    id v131 = v164;
    uint64_t v132 = sub_1C9BECF78();
    os_log_type_t v133 = sub_1C9BEDC78();
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v134);
      _os_log_impl(&dword_1C95F9000, v132, v133, "ResponseFactory v1.0: Adding a suggestion Space Snippet to Response.", (uint8_t *)v34, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    swift_beginAccess();
    id v135 = v131;
    MEMORY[0x1CB78AA10]();
    sub_1C96B0244(*(void *)((v176 & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_1C9BED948();
    sub_1C9BED8A8();
    swift_endAccess();
  }
  id v136 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AC0]), sel_init);
  v137 = v168;
  sub_1C9BEAAF8();
  uint64_t v138 = sub_1C9BEAAB8();
  uint64_t v140 = v139;
  (*(void (**)(char *, uint64_t))(v169 + 8))(v137, v170);
  sub_1C97BA8E8(v138, v140, v136);

  sub_1C965FCE8(v166, v165, v136);
  id v141 = objc_msgSend(v21, sel_patternId);
  uint64_t v142 = sub_1C9BED568();
  uint64_t v144 = v143;

  sub_1C965FD40(v142, v144, v136, (SEL *)&selRef_setPatternId_);
  id v145 = objc_msgSend(self, sel_patternNameFromType_, objc_msgSend(v21, sel_patternType));
  uint64_t v146 = sub_1C9BED568();
  uint64_t v148 = v147;

  sub_1C965FD40(v146, v148, v136, (SEL *)&selRef_setPatternType_);
  id v149 = objc_msgSend(v21, sel_responseMode);
  uint64_t v150 = sub_1C9BED568();
  uint64_t v152 = v151;

  sub_1C965FDAC(v150, v152, v136);
  uint64_t v153 = swift_bridgeObjectRetain();
  sub_1C965FE10(v153, v136);
  objc_msgSend(v136, sel_setImmersiveExperience_, a6 & 1);
  uint64_t v154 = sub_1C972A5E8(MEMORY[0x1E4FBC860]);
  sub_1C9A7F994(v154, v136);
  if (a13)
  {
    id v155 = a13;
    objc_msgSend(v136, sel_setRequestEndBehavior_, v155);
  }
  swift_bridgeObjectRelease();
  return v136;
}

void sub_1C9942B0C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setViewId_, v4);
}

uint64_t OUTLINED_FUNCTION_5_65()
{
  *(void *)(v1 - 120) = v0;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_6_57(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_7_53()
{
  if (v0) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 0;
  }
  return sub_1C9705CC8(0, v3, v1);
}

uint64_t OUTLINED_FUNCTION_8_60()
{
  return swift_bridgeObjectRetain();
}

uint64_t PatternFlowProvider.__allocating_init(outputPublisher:responseGenerator:)(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v3, v4);
  unint64_t v6 = OUTLINED_FUNCTION_40_21(v5, v10);
  v7(v6);
  uint64_t v8 = OUTLINED_FUNCTION_73_9();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

void PatternFlowProviding.makeResponseFlowWithListPrompt<A>(items:paginationParameters:strategy:)()
{
  void (*v20)(long long *__return_ptr, uint64_t, uint64_t);
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  long long v26[2];
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  OUTLINED_FUNCTION_11_1();
  uint64_t v25 = v0;
  os_log_type_t v23 = v1;
  uint64_t v24 = v2;
  uint64_t v4 = v3;
  id v22 = v5;
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_6_0();
  uint64_t v12 = v11 - v10;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  char v16 = *(unsigned char *)(v13 + 9);
  uint64_t v17 = *(void *)(v13 + 16);
  char v18 = *(unsigned char *)(v13 + 24);
  char v19 = *(unsigned char *)(v13 + 25);
  id v21 = *(unsigned char *)(v13 + 26);
  type metadata accessor for ListPromptFlow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v12, v22, v4);
  uint64_t v27 = v14;
  unint64_t v28 = v15;
  id v29 = v16;
  unint64_t v30 = v17;
  uint64_t v31 = v18;
  uint64_t v32 = v19;
  id v33 = v21;
  uint64_t v20 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v24 + 8);
  swift_bridgeObjectRetain();
  v20(v26, v25, v24);
  *(void *)&v26[0] = sub_1C98B8DC0(v12, v23, &v27, v26);
  swift_getWitnessTable();
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_62_15();
  OUTLINED_FUNCTION_10();
}

uint64_t PromptType.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C9942E34()
{
  uint64_t result = sub_1C9BED5F8();
  qword_1EA5928A8 = result;
  unk_1EA5928B0 = v1;
  return result;
}

uint64_t static PromptType.action.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EA5880E0, &qword_1EA5928A8, &qword_1EA5928B0, a1);
}

uint64_t sub_1C9942E90()
{
  uint64_t result = sub_1C9BED5F8();
  qword_1EA5928B8 = result;
  unk_1EA5928C0 = v1;
  return result;
}

uint64_t static PromptType.continuation.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EA5880E8, &qword_1EA5928B8, &qword_1EA5928C0, a1);
}

uint64_t sub_1C9942EF8()
{
  uint64_t result = sub_1C9BED5F8();
  qword_1EA5928C8 = result;
  unk_1EA5928D0 = v1;
  return result;
}

uint64_t static PromptType.menu.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EA5880F0, &qword_1EA5928C8, &qword_1EA5928D0, a1);
}

uint64_t sub_1C9942F50()
{
  uint64_t result = sub_1C9BED5F8();
  qword_1EA5928D8 = result;
  unk_1EA5928E0 = v1;
  return result;
}

uint64_t static PromptType.selection.getter@<X0>(void *a1@<X8>)
{
  return sub_1C97E9FC8(&qword_1EA5880F8, &qword_1EA5928D8, &qword_1EA5928E0, a1);
}

uint64_t sub_1C9942FB4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5929B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BF1630;
  if (qword_1EA5880E0 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1EA5928B0;
  *(void *)(inited + 32) = qword_1EA5928A8;
  *(void *)(inited + 40) = v1;
  uint64_t v2 = qword_1EA5880E8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EA5928C0;
  *(void *)(inited + 48) = qword_1EA5928B8;
  *(void *)(inited + 56) = v3;
  uint64_t v4 = qword_1EA5880F0;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EA5928D0;
  *(void *)(inited + 64) = qword_1EA5928C8;
  *(void *)(inited + 72) = v5;
  uint64_t v6 = qword_1EA5880F8;
  swift_bridgeObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1EA5928E0;
  *(void *)(inited + 80) = qword_1EA5928D8;
  *(void *)(inited + 88) = v7;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C97E912C(inited);
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C98A5224(v8);
  qword_1EA5928E8 = result;
  return result;
}

SiriKitFlow::PromptType_optional __swiftcall PromptType.init(settingValue:)(Swift::String_optional settingValue)
{
  object = settingValue.value._object;
  uint64_t countAndFlagsBits = settingValue.value._countAndFlagsBits;
  uint64_t v4 = v1;
  if (settingValue.value._object)
  {
    uint64_t v5 = sub_1C9BED5F8();
    uint64_t v7 = v6;
    if (qword_1EA588100 != -1) {
      swift_once();
    }
    sub_1C97E9330(v5, v7, qword_1EA5928E8);
    if (v8)
    {
      uint64_t v9 = swift_bridgeObjectRelease();
      *uint64_t v4 = v5;
      v4[1] = v7;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C9BECF88();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C9BECF78();
  os_log_type_t v13 = sub_1C9BEDC88();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (_DWORD *)OUTLINED_FUNCTION_67();
    uint64_t v19 = swift_slowAlloc();
    *uint64_t v14 = 136315138;
    if (object)
    {
      unint64_t v15 = (unint64_t)object;
    }
    else
    {
      uint64_t countAndFlagsBits = 0x3E4C494E3CLL;
      unint64_t v15 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    sub_1C95FF228(countAndFlagsBits, v15, &v19);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_25(&dword_1C95F9000, v16, v17, "Provided value '%s' is not recognized. Unable to create PromptType");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    uint64_t v9 = swift_bridgeObjectRelease_n();
  }
  *uint64_t v4 = 0;
  v4[1] = 0;
LABEL_16:
  result.value.rawValue._object = v10;
  result.value.rawValue._uint64_t countAndFlagsBits = v9;
  return result;
}

uint64_t static PromptType.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C9BEE618();
  }
}

uint64_t PromptType.hash(into:)()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_52_2();
  sub_1C9BED4E8();

  return swift_bridgeObjectRelease();
}

uint64_t PromptType.hashValue.getter()
{
  return sub_1C9BEE768();
}

void sub_1C994345C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8, v9);
  swift_beginAccess();
  sub_1C95FD654(v3 + 16, (uint64_t)v13);
  sub_1C965D8AC(a2, (uint64_t)&v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  *(void *)(v11 + 24) = a1;
  sub_1C965C7D4((uint64_t)&v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v13, (uint64_t)&unk_1EA5929A0, v11);
  type metadata accessor for AnyFlow();
  swift_allocObject();
  sub_1C9BEC838();
}

void PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v28 = v7;
  uint64_t v8 = type metadata accessor for OutputGenerationManifest();
  uint64_t v9 = OUTLINED_FUNCTION_5_0(v8);
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v9, v14);
  OUTLINED_FUNCTION_0();
  uint64_t v16 = v15;
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v19, v20);
  id v21 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v2 + 8))(v29, v4, v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v21, v0, v4);
  sub_1C965D8AC(v6, (uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v23 = (v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + v23 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v4;
  *(void *)(v25 + 24) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v22, v21, v4);
  unint64_t v26 = v28;
  *(void *)(v25 + v23) = v28;
  sub_1C965C7D4((uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24);
  type metadata accessor for SimpleOutputFlowAsync();
  swift_allocObject();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v29, (uint64_t)&unk_1EA5928F8, v25);
  type metadata accessor for AnyFlow();
  swift_allocObject();
  id v27 = v26;
  sub_1C96C56B4();
  OUTLINED_FUNCTION_10();
}

long long *sub_1C99437EC()
{
  return PatternFlowProviding.makeResponseFlowWithOpenEndedPrompt<A>(strategy:)();
}

long long *PatternFlowProviding.makeResponseFlowWithOpenEndedPrompt<A>(strategy:)()
{
  OUTLINED_FUNCTION_9();
  swift_getAssociatedTypeWitness();
  type metadata accessor for PromptForValueFlowAsync();
  OUTLINED_FUNCTION_84_6();
  uint64_t v2 = OUTLINED_FUNCTION_80_9();
  v1(v2);
  *(void *)&v4[0] = PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)(v0, v4);
  swift_getWitnessTable();
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_62_15();
  return v4;
}

void sub_1C99438D4()
{
}

void PatternFlowProviding.makeResponseFlowWithYesNoPrompt<A>(strategy:)()
{
  OUTLINED_FUNCTION_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589550);
  OUTLINED_FUNCTION_84_6();
  uint64_t v1 = OUTLINED_FUNCTION_80_9();
  v0(v1);
  PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592900);
  swift_allocObject();
  sub_1C9742708();
}

void sub_1C994398C()
{
}

void PatternFlowProviding.makeResponseFlowWithConfirmationPrompt<A>(strategy:itemToConfirm:)()
{
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_11_1();
  uint64_t v15 = v1;
  uint64_t v16 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)&v14 - v11;
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_52_2();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for PromptForConfirmationFlowAsync();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v12, v5, AssociatedTypeWitness);
  uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 8);
  swift_unknownObjectRetain();
  v13(&v17, v15, v3);
  uint64_t v17 = PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)();
  swift_getWitnessTable();
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_62_15();
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9943B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)(a1, a4, a2, a5, a3);
}

uint64_t PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v6 = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 64))(a1, &v6, a3, a5, a2, a4);
}

long long *sub_1C9943BA8()
{
  return PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:shouldContinueForResponse:)();
}

long long *PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:shouldContinueForResponse:)()
{
  uint64_t v0 = type metadata accessor for ContinuationPromptFlow();
  OUTLINED_FUNCTION_87_9(v0, v1, v2, v3, v4, v5, v6, v7, v18, *((uint64_t *)&v18 + 1), v19, v20, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_75_10();
  uint64_t v9 = v8();
  *(void *)&long long v18 = OUTLINED_FUNCTION_89_5(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21, v22, v23, v24, v25);
  swift_unknownObjectRetain();
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_62_15();
  return &v18;
}

void sub_1C9943C70(uint64_t a1, uint64_t a2)
{
}

uint64_t PatternFlowProviding.makeResponseFlowWithContinuationPrompt(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 80))(&v5, a1, a2, a3);
}

void sub_1C9943CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v11[7] = a2;
  uint64_t v4 = sub_1C9BEAB08();
  v11[3] = *(void *)(v4 - 8);
  void v11[4] = v4;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  uint64_t v8 = MEMORY[0x1F4188790](v6, v7);
  MEMORY[0x1F4188790](v8, v9);
  v11[5] = (char *)v11 - v10;
  v11[8] = a3;
  sub_1C9BEC838();
}

void PatternFlowProviding.makeResponseFlowWithContinuationPrompt(shouldContinueForResponse:_:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v27 = v0;
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  uint64_t v4 = v3;
  uint64_t v23 = v5;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_0();
  uint64_t v26 = v8;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_6_0();
  uint64_t v25 = v12 - v11;
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_0();
  void v21[3] = v14;
  v21[4] = v13;
  MEMORY[0x1F4188790](v13, v15);
  OUTLINED_FUNCTION_6_0();
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_112();
  uint64_t v18 = MEMORY[0x1F4188790](v16, v17);
  MEMORY[0x1F4188790](v18, v19);
  v21[5] = (char *)v21 - v20;
  int v22 = *v7;
  uint64_t v24 = v4;
  sub_1C9BEC838();
}

long long *sub_1C994459C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return PatternFlowProviding.makeResponseFlowWithSimpleDisambiguationPrompt<A>(items:strategy:)(a1, a2, a5, a3, a6);
}

long long *PatternFlowProviding.makeResponseFlowWithSimpleDisambiguationPrompt<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(long long *__return_ptr, uint64_t, uint64_t);
  long long v11[2];

  type metadata accessor for SimpleDisambiguationPromptFlow();
  uint64_t v9 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a5 + 8);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v9(v11, a3, a5);
  *(void *)&v11[0] = sub_1C9A8966C(a1, a2, v11);
  swift_getWitnessTable();
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_62_15();
  return v11;
}

uint64_t sub_1C9944694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return PatternFlowProviding.makeSimpleDisambiguationClarificationFlow<A>(items:strategy:)(a1, a2, a5, a3, a6, a4);
}

uint64_t PatternFlowProviding.makeSimpleDisambiguationClarificationFlow<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 88))(a1, a2, a4, a6, a3, a5);
}

void sub_1C99446D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973CDC4;
  PatternFlowProviding.makeDetailedDisambiguationClarificationFlow<A>(provider:)();
}

void PatternFlowProviding.makeDetailedDisambiguationClarificationFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_24();
  v0[35] = v1;
  v0[36] = v2;
  v0[33] = v3;
  v0[34] = v4;
  v0[32] = v5;
  sub_1C9BEC4F8();
}

uint64_t sub_1C9944830()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_51_17();
  uint64_t v2 = OUTLINED_FUNCTION_39_26();
  v0[40] = v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_39_26();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_39_26();
  v0[41] = v7(v6);
  self;
  v0[42] = sub_1C9BED538();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_7();
  v0[2] = v8;
  v0[7] = v0 + 27;
  v0[3] = sub_1C99449A0;
  OUTLINED_FUNCTION_96_6();
  v0[10] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_94_6(COERCE_DOUBLE(0x40000000));
  v0[12] = sub_1C994C500;
  v0[13] = &block_descriptor_4;
  v0[14] = v9;
  OUTLINED_FUNCTION_86_9(v9, sel_load_patternId_completion_);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_1C99449A0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_16_42();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 344) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C9944A88()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = (void *)v0[42];
  v0[44] = v0[27];

  sub_1C994C504();
}

uint64_t sub_1C9944D00()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9944DE8()
{
  if ((~*(void *)(v0 + 176) & 0xF000000000000007) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1C9BECF88();
    uint64_t v2 = (void *)OUTLINED_FUNCTION_34(v1, (uint64_t)qword_1EBC7A520);
    os_log_type_t v3 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_13(v3))
    {
      uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v4);
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Disambiguating items in a single step.");
      OUTLINED_FUNCTION_21_8();
    }
    uint64_t v25 = *(void *)(v0 + 288);

    OUTLINED_FUNCTION_48_20(v7, v25);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C99452D8;
    OUTLINED_FUNCTION_136(*(void *)(v0 + 272));
    OUTLINED_FUNCTION_38_5();
    __asm { BRAA            X3, X16 }
  }
  uint64_t v23 = *(void *)(v0 + 152);
  uint64_t v24 = *(void *)(v0 + 176);
  uint64_t v11 = *(void *)(v0 + 160);
  uint64_t v26 = *(void *)(v0 + 168);
  id v12 = objc_msgSend(*(id *)(v0 + 352), sel_settings);
  sub_1C9BED428();

  OUTLINED_FUNCTION_30_24();
  sub_1C9606B08();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 208))
  {
    int v13 = swift_dynamicCast();
    uint64_t v14 = *(void *)(v0 + 248);
    if (!v13) {
      uint64_t v14 = 0;
    }
  }
  else
  {
    sub_1C95FD924(v0 + 184, &qword_1EBC78700);
    uint64_t v14 = 0;
    LOBYTE(v13) = 0;
  }
  if (v26) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = v11;
  }
  if ((v26 & 1) != 0 && (v13 & 1) == 0)
  {
    uint64_t v16 = *(void *)(v0 + 320);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v15 = MEMORY[0x1CB78AB10](v16, AssociatedTypeWitness);
  }
  uint64_t v22 = v11;
  id v18 = objc_msgSend(*(id *)(v0 + 352), sel_settings);
  sub_1C9BED428();

  sub_1C9606B08();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 144))
  {
    if (swift_dynamicCast()) {
      uint64_t v19 = *(void *)(v0 + 240);
    }
    else {
      uint64_t v19 = 0;
    }
  }
  else
  {
    sub_1C95FD924(v0 + 120, &qword_1EBC78700);
    uint64_t v19 = 0;
  }
  uint64_t v20 = *(void *)(v0 + 320);
  OUTLINED_FUNCTION_100_3();
  type metadata accessor for ListWindowedContentSource();
  uint64_t v21 = sub_1C9BCE55C(v20, v15, v19);
  OUTLINED_FUNCTION_100_3();
  swift_getWitnessTable();
  OUTLINED_FUNCTION_52_18();
  uint64_t v27 = v24;
  *(void *)(v0 + 224) = v21;
  *(void *)(v0 + 232) = sub_1C9BD2FA4(&v27, v0 + 224);
  sub_1C994D5A8(v23, v22, v26, v24);
  sub_1C9BEC838();
}

uint64_t sub_1C99452D8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 384) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 392) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C99453C8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_33_20();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994543C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 408) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 416) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994552C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_33_20();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C99455A0()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 336);
  uint64_t v2 = *(void **)(v0 + 328);
  swift_willThrow();

  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9945618()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_33_20();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994568C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_33_20();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9945700()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_33_20();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

void sub_1C9945774()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973CDC4;
  PatternFlowProviding.makeResultSetFlow<A>(provider:)();
}

void PatternFlowProviding.makeResultSetFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_97_5(v0, v1, v2, v3, v4);
}

uint64_t sub_1C99458D4()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_51_17();
  uint64_t v2 = OUTLINED_FUNCTION_39_26();
  v0[57] = v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_39_26();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_39_26();
  v0[58] = v7(v6);
  self;
  v0[59] = sub_1C9BED538();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_7();
  v0[2] = v8;
  v0[7] = v0 + 44;
  v0[3] = sub_1C9945A44;
  OUTLINED_FUNCTION_96_6();
  v0[10] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_94_6(COERCE_DOUBLE(0x40000000));
  v0[12] = sub_1C994C500;
  v0[13] = &block_descriptor_6;
  v0[14] = v9;
  OUTLINED_FUNCTION_86_9(v9, sel_load_patternId_completion_);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_1C9945A44()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_16_42();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 480) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C9945B2C()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = v0[57];
  v0[61] = v0[44];

  v0[43] = v2;
  v0[62] = swift_getAssociatedTypeWitness();
  sub_1C9BED9A8();
  swift_getWitnessTable();
  if (sub_1C9BEDBF8())
  {
    swift_bridgeObjectRelease();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C9BECF88();
    OUTLINED_FUNCTION_34(v3, (uint64_t)qword_1EBC7A520);
    os_log_type_t v4 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v4))
    {
      uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v5);
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v6, v7, "Result items are empty. Making flow for empty results.");
      OUTLINED_FUNCTION_21_8();
    }
    OUTLINED_FUNCTION_92_7();
    OUTLINED_FUNCTION_45_17(v8, v12);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[91] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1C9948228;
    OUTLINED_FUNCTION_25_32();
    OUTLINED_FUNCTION_38_5();
    __asm { BRAA            X3, X16 }
  }
  sub_1C994C504();
}

uint64_t sub_1C99469F8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v4 = v3;
  *os_log_type_t v4 = *v1;
  *(void *)(v3 + 544) = v5;
  *(void *)(v3 + 552) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9946AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_25_1();
  a25 = v28;
  a26 = v29;
  OUTLINED_FUNCTION_46();
  a24 = v26;
  if (*(void *)(v26 + 544))
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_70_12();
    if (!v30) {
      swift_once();
    }
    uint64_t v31 = sub_1C9BECF88();
    uint64_t v32 = OUTLINED_FUNCTION_34(v31, (uint64_t)qword_1EBC7A520);
    os_log_type_t v33 = sub_1C9BEDC78();
    if (os_log_type_enabled(v32, v33))
    {
      unint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)unint64_t v34 = 0;
      _os_log_impl(&dword_1C95F9000, v32, v33, "Pattern settings include a narrowing prompt and the provider returned one. Will issue Narrowing Prompt.", v34, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    type metadata accessor for AnyFlow();
    swift_allocObject();
    sub_1C9BEC838();
  }
  OUTLINED_FUNCTION_70_12();
  if (!v30) {
    swift_once();
  }
  uint64_t v35 = (_DWORD *)sub_1C9BECF88();
  uint64_t v36 = OUTLINED_FUNCTION_34((uint64_t)v35, (uint64_t)qword_1EBC7A520);
  os_log_type_t v37 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_65_0(v37))
  {
    unint64_t v38 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)unint64_t v38 = 0;
    _os_log_impl(&dword_1C95F9000, v36, v27, "Pattern settings include a narrowing prompt but the provider elected to not provide one. Assuming we are not in the narrowing case and continuing.", v38, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  id v39 = objc_msgSend(*(id *)(v26 + 488), sel_settings);
  sub_1C9BED428();

  OUTLINED_FUNCTION_63_16();
  swift_bridgeObjectRelease();
  if (!*(void *)(v26 + 208))
  {
    swift_bridgeObjectRelease();
    sub_1C95FD924(v26 + 184, &qword_1EBC78700);
    goto LABEL_22;
  }
  if (!swift_dynamicCast() || (*(unsigned char *)(v26 + 752) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_22:
    OUTLINED_FUNCTION_70_12();
    if (!v30) {
      swift_once();
    }
    OUTLINED_FUNCTION_34((uint64_t)v35, (uint64_t)qword_1EBC7A520);
    os_log_type_t v55 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v55))
    {
      long long v56 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v56);
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v57, v58, "Pattern settings indicated we should not window. Showing all results.");
      OUTLINED_FUNCTION_21_8();
    }
    OUTLINED_FUNCTION_93_5();
    OUTLINED_FUNCTION_43_20(v59, a13);
    uint64_t v102 = (char *)v61 + *v61;
    uint64_t v104 = v60;
    os_log_type_t v62 = (void *)swift_task_alloc();
    *(void *)(v26 + 656) = v62;
    void *v62 = v26;
    uint64_t v63 = sub_1C9947DE4;
    goto LABEL_27;
  }
  id v40 = objc_msgSend(*(id *)(v26 + 488), sel_settings);
  sub_1C9BED428();

  OUTLINED_FUNCTION_46_19();
  swift_bridgeObjectRelease();
  if (!*(void *)(v26 + 240))
  {
    swift_bridgeObjectRelease();
    sub_1C95FD924(v26 + 216, &qword_1EBC78700);
LABEL_32:
    OUTLINED_FUNCTION_70_12();
    if (!v30) {
      swift_once();
    }
    id v72 = OUTLINED_FUNCTION_85_5((uint64_t)v35, (uint64_t)qword_1EBC7A520);
    id v73 = (void *)sub_1C9BECF78();
    os_log_type_t v74 = sub_1C9BEDC88();
    BOOL v75 = OUTLINED_FUNCTION_65_0(v74);
    uint64_t v76 = *(void **)(v26 + 488);
    if (v75)
    {
      OUTLINED_FUNCTION_67();
      a14 = OUTLINED_FUNCTION_13_12();
      *uint64_t v35 = 136315138;
      id v77 = objc_msgSend(v76, sel_patternId);
      uint64_t v78 = sub_1C9BED568();
      unint64_t v80 = v79;

      *(void *)(v26 + 328) = sub_1C95FF228(v78, v80, &a14);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();

      OUTLINED_FUNCTION_12(&dword_1C95F9000, v81, v82, "Pattern %s has no defined promptType. Will show all results.");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_21_8();
    }
    else
    {
    }
    OUTLINED_FUNCTION_43_20(v83, *(void *)(v26 + 416));
    uint64_t v102 = (char *)v85 + *v85;
    uint64_t v104 = v84;
    os_log_type_t v62 = (void *)swift_task_alloc();
    *(void *)(v26 + 632) = v62;
    void *v62 = v26;
    uint64_t v63 = sub_1C9947C78;
    goto LABEL_27;
  }
  if ((OUTLINED_FUNCTION_49_15() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v42 = *(void *)(v26 + 296);
  unint64_t v41 = *(void **)(v26 + 304);
  swift_bridgeObjectRetain();
  v43.value._uint64_t countAndFlagsBits = v42;
  v43.value._object = v41;
  PromptType.init(settingValue:)(v43);
  uint64_t v44 = a15;
  *(void *)(v26 + 560) = a15;
  if (v44)
  {
    OUTLINED_FUNCTION_60_15();
    *(void *)(v26 + 280) = v42;
    *(void *)(v26 + 288) = v44;
    uint64_t v101 = *(void *)(a13 + 80) + **(int **)(a13 + 80);
    uint64_t v103 = a13 + 80;
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v26 + 568) = v45;
    *uint64_t v45 = v26;
    v45[1] = sub_1C9947410;
    OUTLINED_FUNCTION_47_19();
    OUTLINED_FUNCTION_6_11();
    return v51(v46, v47, v48, v49, v50, v51, v52, v53, a9, a10, a11, v101, v103, a14, a15, a16, a17, a18);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_70_12();
  if (!v30) {
    swift_once();
  }
  uint64_t v86 = *(void *)(v26 + 488);
  id v87 = OUTLINED_FUNCTION_85_5((uint64_t)v35, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  id v88 = v87;
  uint64_t v89 = sub_1C9BECF78();
  os_log_type_t v90 = sub_1C9BEDC88();
  BOOL v91 = OUTLINED_FUNCTION_13(v90);
  v92 = *(void **)(v26 + 488);
  if (v91)
  {
    uint64_t v93 = OUTLINED_FUNCTION_74_11();
    a14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v93 = 136315394;
    a9 = v93 + 4;
    id v94 = objc_msgSend(v92, sel_patternId);
    uint64_t v95 = sub_1C9BED568();
    unint64_t v97 = v96;

    *a10 = sub_1C95FF228(v95, v97, &a14);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    *(_WORD *)(v93 + 12) = 2080;
    swift_bridgeObjectRetain();
    *a11 = sub_1C95FF228(v42, (unint64_t)v41, &a14);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v89, (os_log_type_t)v86, "Pattern %s specifies an unknown prompt type of %s. Will show all results.", (uint8_t *)v93, 0x16u);
    OUTLINED_FUNCTION_82_7();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  OUTLINED_FUNCTION_43_20(v98, *(void *)(v26 + 416));
  uint64_t v102 = (char *)v100 + *v100;
  uint64_t v104 = v99;
  os_log_type_t v62 = (void *)swift_task_alloc();
  *(void *)(v26 + 608) = v62;
  void *v62 = v26;
  uint64_t v63 = sub_1C9947B0C;
LABEL_27:
  v62[1] = v63;
  OUTLINED_FUNCTION_36_24();
  OUTLINED_FUNCTION_6_11();
  return v67(v64, v65, v66, v67, v68, v69, v70, v71, a9, a10, a11, v102, v104, a14, a15, a16, a17, a18);
}

uint64_t sub_1C9947410()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 576) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9947500()
{
  uint64_t v28 = v0;
  if ((~*(void *)(v0 + 272) & 0xF000000000000007) != 0)
  {
    uint64_t v25 = *(void *)(v0 + 272);
    uint64_t v12 = *(void *)(v0 + 264);
    uint64_t v23 = *(void *)(v0 + 256);
    id v13 = objc_msgSend(*(id *)(v0 + 488), sel_settings);
    sub_1C9BED428();

    OUTLINED_FUNCTION_30_24();
    sub_1C9606B08();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 176))
    {
      uint64_t v14 = *(void *)(v0 + 504);
      if (swift_dynamicCast()) {
        uint64_t v14 = *(void *)(v0 + 336);
      }
    }
    else
    {
      sub_1C95FD924(v0 + 152, &qword_1EBC78700);
      uint64_t v14 = *(void *)(v0 + 504);
    }
    id v15 = objc_msgSend(*(id *)(v0 + 488), sel_settings);
    sub_1C9BED428();

    OUTLINED_FUNCTION_41_18();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 144))
    {
      if (OUTLINED_FUNCTION_49_15()) {
        uint64_t v16 = *(void *)(v0 + 376);
      }
      else {
        uint64_t v16 = 0;
      }
    }
    else
    {
      sub_1C95FD924(v0 + 120, &qword_1EBC78700);
      uint64_t v16 = 0;
    }
    if ((v12 & 1) == 0) {
      uint64_t v14 = v23;
    }
    uint64_t v17 = *(void *)(v0 + 456);
    type metadata accessor for ListWindowedContentSource();
    uint64_t v18 = sub_1C9BCE55C(v17, v14, v16);
    swift_getAssociatedTypeWitness();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_52_18();
    uint64_t v27 = v25;
    *(void *)(v0 + 360) = v18;
    *(void *)(v0 + 368) = sub_1C9BD2FA4(&v27, v0 + 360);
    uint64_t v19 = OUTLINED_FUNCTION_105_2();
    sub_1C994D5A8(v19, v20, v21, v22);
    sub_1C9BEC838();
  }
  swift_bridgeObjectRelease();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_34(v1, (uint64_t)qword_1EBC7A520);
  os_log_type_t v3 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_13(v3))
  {
    os_log_type_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Showing all results.");
    OUTLINED_FUNCTION_21_8();
  }
  uint64_t v26 = *(void *)(v0 + 416);

  OUTLINED_FUNCTION_43_20(v7, v26);
  uint64_t v24 = (uint64_t (*)(uint64_t))((char *)v8 + *v8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C99479A0;
  uint64_t v10 = OUTLINED_FUNCTION_136(*(void *)(v0 + 400));
  return v24(v10);
}

uint64_t sub_1C99479A0()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 592) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 600) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9947A90()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_128();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9947B0C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 616) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 624) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9947BFC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_128();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9947C78()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 640) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 648) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9947D68()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_128();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9947DE4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 664) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 672) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9947ED4()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_128();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9947F50()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 688) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 696) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9948040()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_128();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C99480BC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 712) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 720) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C99481AC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_56_16();

  uint64_t v2 = OUTLINED_FUNCTION_33_1();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_31_3();
  OUTLINED_FUNCTION_128();
  return v5(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9948228()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 736) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 744) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9948318()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(void **)(v0 + 464);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = OUTLINED_FUNCTION_31_3();
  return v3(v2);
}

uint64_t sub_1C994838C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 472);
  uint64_t v2 = *(void **)(v0 + 464);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994840C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(void **)(v0 + 464);

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t sub_1C9948480()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_56_16();

  uint64_t v2 = OUTLINED_FUNCTION_33_1();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C99484FC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9948578()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C99485F4()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9948670()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C99486EC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9948768()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_9_50();

  uint64_t v2 = OUTLINED_FUNCTION_8_61();
  v0(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C99487E4()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 528);
  uint64_t v2 = *(void **)(v0 + 488);

  uint64_t v3 = OUTLINED_FUNCTION_52_2();
  v1(v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v4();
}

void sub_1C9948894()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973CDC4;
  PatternFlowProviding.makeDetailedResultFlow<A>(provider:)();
}

void PatternFlowProviding.makeDetailedResultFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_24();
  v0[23] = v1;
  v0[24] = v2;
  v0[21] = v3;
  v0[22] = v4;
  v0[20] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[25] = AssociatedTypeWitness;
  uint64_t v7 = sub_1C9BEDEE8();
  v0[26] = v7;
  OUTLINED_FUNCTION_5_0(v7);
  v0[27] = v8;
  v0[28] = OUTLINED_FUNCTION_16();
  v0[29] = *(void *)(AssociatedTypeWitness - 8);
  v0[30] = OUTLINED_FUNCTION_16();
  sub_1C9BEC4F8();
}

uint64_t sub_1C9948A90()
{
  OUTLINED_FUNCTION_51_17();
  uint64_t v2 = OUTLINED_FUNCTION_37_23();
  v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_37_23();
  v0[34] = v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_37_23();
  v0[35] = v7(v6);
  v0[36] = v8;
  self;
  v0[37] = sub_1C9BED538();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_7();
  v0[2] = v9;
  v0[7] = v0 + 19;
  v0[3] = sub_1C9948C0C;
  OUTLINED_FUNCTION_96_6();
  v0[10] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_94_6(COERCE_DOUBLE(0x40000000));
  v0[12] = sub_1C994C500;
  v0[13] = &block_descriptor_17;
  v0[14] = v10;
  OUTLINED_FUNCTION_107_2(v10, sel_load_patternId_completion_);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_1C9948C0C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_16_42();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 304) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C9948CF4()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = (void *)v0[37];
  v0[39] = v0[19];

  sub_1C994C504();
}

uint64_t sub_1C9949128()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9949210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_25_1();
  a25 = v27;
  a26 = v28;
  OUTLINED_FUNCTION_46();
  a24 = v26;
  uint64_t v29 = v26[28];
  uint64_t v30 = v26[25];
  if (__swift_getEnumTagSinglePayload(v29, 1, v30) != 1)
  {
    uint64_t v52 = (void *)v26[39];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26[29] + 32))(v26[30], v29, v30);
    id v53 = objc_msgSend(v52, sel_settings);
    sub_1C9BED428();

    type metadata accessor for LexicalWindowedContentSource();
    swift_allocObject();
    uint64_t v54 = sub_1C9BCF6D4();
    swift_getAssociatedConformanceWitness();
    static PromptFlowProviderType.continuation<A>(_:)(v30, &a15);
    uint64_t v55 = a15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5898F0);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 32) = 0u;
    *(_OWORD *)(v56 + 48) = 0u;
    *(_OWORD *)(v56 + 64) = 0u;
    *(_OWORD *)(v56 + 80) = 0u;
    *(_OWORD *)(v56 + 96) = 0u;
    *(unsigned char *)(v56 + 112) = 6;
    *(void *)(v56 + 16) = v54;
    *(void *)(v56 + 24) = v55;
    type metadata accessor for AnyFlow();
    swift_allocObject();
    sub_1C9BEC838();
  }
  uint64_t v32 = v26[26];
  uint64_t v31 = v26[27];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v32);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_1C9BECF88();
  unint64_t v34 = (void *)OUTLINED_FUNCTION_34(v33, (uint64_t)qword_1EBC7A520);
  os_log_type_t v35 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_13(v35))
  {
    uint64_t v36 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v36);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v37, v38, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Showing all results.");
    OUTLINED_FUNCTION_21_8();
  }
  uint64_t v58 = v26[24];

  OUTLINED_FUNCTION_48_20(v39, v58);
  uint64_t v57 = (char *)v41 + *v41;
  uint64_t v59 = v40;
  uint64_t v42 = (void *)swift_task_alloc();
  v26[42] = (uint64_t)v42;
  void *v42 = v26;
  v42[1] = sub_1C99495BC;
  OUTLINED_FUNCTION_136(v26[22]);
  OUTLINED_FUNCTION_6_11();
  return v46(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, v57, v59, a15, a16, a17, a18);
}

uint64_t sub_1C99495BC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 344) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 352) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C99496AC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994972C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 368) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 376) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994981C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994989C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 392) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 400) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994998C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C9949A0C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 296);
  uint64_t v2 = *(void **)(v0 + 272);
  swift_willThrow();

  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9949A90()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9949B10()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9949B90()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9949C10()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_32_30();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  OUTLINED_FUNCTION_24_30();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

void sub_1C9949C90()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973CDC4;
  PatternFlowProviding.makeTableSetFlow<A>(provider:)();
}

void PatternFlowProviding.makeTableSetFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_97_5(v0, v1, v2, v3, v4);
}

uint64_t sub_1C9949DD8()
{
  OUTLINED_FUNCTION_51_17();
  uint64_t v2 = OUTLINED_FUNCTION_37_23();
  v3(v2);
  uint64_t v4 = OUTLINED_FUNCTION_37_23();
  v0[56] = v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_37_23();
  v0[57] = v7(v6);
  self;
  v0[58] = sub_1C9BED538();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_95_7();
  v0[2] = v8;
  v0[7] = v0 + 44;
  v0[3] = sub_1C9949F54;
  OUTLINED_FUNCTION_96_6();
  v0[10] = MEMORY[0x1E4F143A8];
  OUTLINED_FUNCTION_94_6(COERCE_DOUBLE(0x40000000));
  v0[12] = sub_1C994C500;
  v0[13] = &block_descriptor_23_0;
  v0[14] = v9;
  OUTLINED_FUNCTION_107_2(v9, sel_load_patternId_completion_);
  return MEMORY[0x1F41881E8](v1);
}

uint64_t sub_1C9949F54()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_16_42();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  uint64_t v4 = *(void *)(v3 + 48);
  *(void *)(v1 + 472) = v4;
  if (v4) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C994A03C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, os_log_type_t type, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_46();
  uint64_t v27 = (void *)v26[58];
  v26[60] = v26[44];

  sub_1C994C504();
}

uint64_t sub_1C994AAB0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 512) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C994ABA0()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 272);
  if ((~v1 & 0xF000000000000007) != 0)
  {
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v21 = *(void *)(v0 + 248);
    uint64_t v23 = *(void *)(v0 + 264);
    id v13 = objc_msgSend(*(id *)(v0 + 480), sel_settings);
    sub_1C9BED428();

    OUTLINED_FUNCTION_30_24();
    sub_1C9606B08();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 176))
    {
      int v14 = swift_dynamicCast();
      uint64_t v15 = *(void *)(v0 + 336);
      if (!v14) {
        uint64_t v15 = 0;
      }
    }
    else
    {
      sub_1C95FD924(v0 + 152, &qword_1EBC78700);
      uint64_t v15 = 0;
      LOBYTE(v14) = 0;
    }
    if (v23)
    {
      if ((v14 & 1) == 0) {
        uint64_t v15 = MEMORY[0x1CB78AB10](*(void *)(v0 + 456), *(void *)(v0 + 488));
      }
    }
    else
    {
      uint64_t v15 = v25;
    }
    uint64_t v20 = v15;
    id v16 = objc_msgSend(*(id *)(v0 + 480), sel_settings);
    sub_1C9BED428();

    OUTLINED_FUNCTION_41_18();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 144))
    {
      if (OUTLINED_FUNCTION_49_15()) {
        uint64_t v17 = *(void *)(v0 + 376);
      }
      else {
        uint64_t v17 = 0;
      }
    }
    else
    {
      sub_1C95FD924(v0 + 120, &qword_1EBC78700);
      uint64_t v17 = 0;
    }
    uint64_t v18 = *(void *)(v0 + 456);
    type metadata accessor for ListWindowedContentSource();
    uint64_t v19 = sub_1C9BCE55C(v18, v20, v17);
    swift_getAssociatedTypeWitness();
    swift_getWitnessTable();
    OUTLINED_FUNCTION_52_18();
    uint64_t v26 = v1;
    *(void *)(v0 + 360) = v19;
    *(void *)(v0 + 368) = sub_1C9BD2FA4(&v26, v0 + 360);
    sub_1C994D5A8(v21, v25, v23, v1);
    sub_1C9BEC838();
  }
  swift_bridgeObjectRelease();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_34(v2, (uint64_t)qword_1EBC7A520);
  os_log_type_t v4 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_13(v4))
  {
    uint64_t v5 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v5);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v6, v7, "Pattern settings indicate windowing but strategy did not provide windowing configuration. Showing all rows.");
    OUTLINED_FUNCTION_21_8();
  }
  uint64_t v24 = *(void *)(v0 + 416);

  OUTLINED_FUNCTION_45_17(v8, v24);
  uint64_t v22 = (uint64_t (*)(uint64_t))((char *)v9 + *v9);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 520) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C994B050;
  uint64_t v11 = OUTLINED_FUNCTION_136(*(void *)(v0 + 400));
  return v22(v11);
}

uint64_t sub_1C994B050()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 528) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 536) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994B140()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994B1B4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 552) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 560) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994B2A4()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994B318()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 576) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 584) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994B408()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994B47C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 600) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 608) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994B56C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994B5E0()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 624) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 632) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994B6D0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994B744()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  *(void *)(v5 + 648) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v5 + 656) = v3;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C994B834()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  uint64_t v3 = OUTLINED_FUNCTION_31_3();
  return v4(v3);
}

uint64_t sub_1C994B8A8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 464);
  uint64_t v2 = *(void **)(v0 + 448);
  swift_willThrow();

  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994B920()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994B994()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994BA08()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994BA7C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994BAF0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994BB64()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_18_40();

  uint64_t v1 = OUTLINED_FUNCTION_1_66();
  v2(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994BBD8()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void **)(v0 + 480);

  uint64_t v2 = OUTLINED_FUNCTION_52_2();
  v3(v2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v5(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1C994BC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[13] = a3;
  v4[14] = a4;
  v4[11] = a1;
  v4[12] = a2;
  return MEMORY[0x1F4188298](sub_1C994BC94, 0, 0);
}

uint64_t sub_1C994BC94()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = v0[12] + 56;
  swift_beginAccess();
  sub_1C95FD654(v1, (uint64_t)(v0 + 2));
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = (void *)OUTLINED_FUNCTION_33_1();
  __swift_project_boxed_opaque_existential_1(v4, v5);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[15] = v6;
  *uint64_t v6 = v7;
  v6[1] = sub_1C994BDC0;
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[11];
  return v12(v10, v8, v9, v2, v3);
}

uint64_t sub_1C994BDC0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

#error "1C994BF8C: call analysis failed (funcsize=106)"

uint64_t sub_1C994C060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[10] = a3;
  v6[11] = a4;
  v6[8] = a1;
  v6[9] = a2;
  return MEMORY[0x1F4188298](sub_1C994C088, 0, 0);
}

uint64_t sub_1C994C088()
{
  OUTLINED_FUNCTION_26_0();
  (*(void (**)(void))(v0[13] + 16))(v0[12]);
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)OUTLINED_FUNCTION_52_2();
  __swift_project_boxed_opaque_existential_1(v3, v4);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 8) + **(int **)(v2 + 8));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[14] = v5;
  *uint64_t v5 = v6;
  v5[1] = sub_1C994C1B4;
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[8];
  return v11(v9, v7, v8, v1, v2);
}

uint64_t sub_1C994C1B4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

#error "1C994C380: call analysis failed (funcsize=106)"

long long *PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(shouldContinueForResponse:strategy:_:)()
{
  uint64_t v0 = type metadata accessor for ContinuationPromptFlow();
  OUTLINED_FUNCTION_87_9(v0, v1, v2, v3, v4, v5, v6, v7, v18, *((uint64_t *)&v18 + 1), v19, v20, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_75_10();
  uint64_t v9 = v8();
  *(void *)&long long v18 = OUTLINED_FUNCTION_89_5(v9, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v21, v22, v23, v24, v25);
  swift_unknownObjectRetain();
  Flow.eraseToAnyValueFlow()();
  OUTLINED_FUNCTION_62_15();
  return &v18;
}

void sub_1C994C504()
{
}

void sub_1C994CA5C()
{
}

uint64_t sub_1C994CBE8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    id v4 = a3;
    return sub_1C9690D24(v3, v4);
  }
  else
  {
    id v6 = a2;
    return sub_1C9683D2C(v3, v6);
  }
}

uint64_t PatternFlowProvider.outputPublisher.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_98_4();
  return sub_1C95FD654(v1 + 16, a1);
}

uint64_t PatternFlowProvider.responseGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_98_4();
  return sub_1C95FD654(v1 + 56, a1);
}

uint64_t PatternFlowProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t sub_1C994CCF0@<X0>(uint64_t a1@<X8>)
{
  return PatternFlowProvider.outputPublisher.getter(a1);
}

uint64_t sub_1C994CD14@<X0>(uint64_t a1@<X8>)
{
  return PatternFlowProvider.responseGenerator.getter(a1);
}

void sub_1C994CD38(uint64_t a1, uint64_t a2)
{
}

void sub_1C994CD5C(uint64_t a1, uint64_t a2)
{
}

void sub_1C994CD80(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C994CDA8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973C354;
  PatternFlowProviding.makeTableSetFlow<A>(provider:)();
}

void sub_1C994CE6C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_6_2();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();
  sub_1C9BEC4F8();
}

uint64_t sub_1C994D1A0()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  OUTLINED_FUNCTION_0();
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v8 = (*(void *)(v7 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_2_4(v9);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v8 + v11 + 8;
  uint64_t v13 = v0 + v6;
  uint64_t v14 = *(void *)(v0 + v8);
  uint64_t v15 = v0 + (v12 & ~v11);
  uint64_t v16 = swift_task_alloc();
  uint64_t v17 = (void *)OUTLINED_FUNCTION_17_5(v16);
  void *v17 = v18;
  v17[1] = sub_1C994DE48;
  return sub_1C994C060(v2, v13, v14, v15, v4, v3);
}

uint64_t sub_1C994D2B4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C994D36C;
  return sub_1C994BC70(a1, v8, a3, a4);
}

uint64_t sub_1C994D36C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994D430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_responseGenerator);
  v17[3] = type metadata accessor for ResponseFactory();
  v17[4] = &protocol witness table for ResponseFactory;
  void *v17 = a2;
  sub_1C965C7D4(a1, a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_baseManifest);
  uint64_t v18 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_rejectionOutputProducer);
  *uint64_t v18 = a3;
  v18[1] = a4;
  uint64_t v19 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_cancellationOutputProducer);
  *uint64_t v19 = a5;
  v19[1] = a6;
  uint64_t v20 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_promptPatternExecutionProducer);
  *uint64_t v20 = a7;
  v20[1] = a8;
  return a9;
}

uint64_t sub_1C994D4FC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7 = a2 & 1;
  uint64_t v10 = type metadata accessor for PatternFlowProvider();
  uint64_t v11 = &protocol witness table for PatternFlowProvider;
  *(void *)&long long v9 = a3;
  *(unsigned char *)(a4 + 16) = v7;
  *(void *)(a4 + 24) = a1;
  sub_1C95FD5D8(&v9, a4 + 32);
  *(unsigned char *)(a4 + 72) = 0;
  return a4;
}

unint64_t sub_1C994D568()
{
  unint64_t result = qword_1EA592918;
  if (!qword_1EA592918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA592918);
  }
  return result;
}

void sub_1C994D5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((~a4 & 0xF000000000000007) != 0) {
    sub_1C9BEC838();
  }
}

uint64_t sub_1C994D5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((~a4 & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1C994D5DC()
{
  unint64_t result = qword_1EA592930;
  if (!qword_1EA592930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592930);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptType()
{
  return &type metadata for PromptType;
}

uint64_t dispatch thunk of PatternFlowProviding.outputPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PatternFlowProviding.responseGenerator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlow(patternExecutionResult:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithOpenEndedPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithYesNoPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithConfirmationPrompt<A>(strategy:itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt<A>(strategy:shouldContinueForResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithContinuationPrompt(shouldContinueForResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeResponseFlowWithSimpleDisambiguationPrompt<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeSimpleDisambiguationClarificationFlow<A>(items:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

uint64_t dispatch thunk of PatternFlowProviding.makeDetailedDisambiguationClarificationFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72_0();
  uint64_t v13 = *(void *)(v0 + 104) + **(int **)(v0 + 104);
  uint64_t v14 = v0 + 104;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C973CDC8;
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of PatternFlowProviding.makeResultSetFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72_0();
  uint64_t v13 = *(void *)(v0 + 112) + **(int **)(v0 + 112);
  uint64_t v14 = v0 + 112;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C973CDC8;
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of PatternFlowProviding.makeDetailedResultFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72_0();
  uint64_t v13 = *(void *)(v0 + 120) + **(int **)(v0 + 120);
  uint64_t v14 = v0 + 120;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C973CDC8;
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of PatternFlowProviding.makeTableSetFlow<A>(provider:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72_0();
  uint64_t v13 = *(void *)(v0 + 128) + **(int **)(v0 + 128);
  uint64_t v14 = v0 + 128;
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C973C830;
  OUTLINED_FUNCTION_68_2();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t method lookup function for PatternFlowProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PatternFlowProvider);
}

uint64_t dispatch thunk of PatternFlowProvider.__allocating_init(outputPublisher:responseGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1C994DAB4()
{
  OUTLINED_FUNCTION_11_1();
  type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_6_2();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1C9BEC4F8();
}

uint64_t sub_1C994DD74()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v0 = type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_2_4(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C994D36C;
  OUTLINED_FUNCTION_128();
  return v8(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t OUTLINED_FUNCTION_1_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_61()
{
  return v0;
}

void OUTLINED_FUNCTION_9_50()
{
  uint64_t v2 = *(void **)(v0 + 464);
}

void OUTLINED_FUNCTION_18_40()
{
  uint64_t v2 = *(void **)(v0 + 448);
}

uint64_t OUTLINED_FUNCTION_24_30()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_25_32()
{
  return *(void *)(v0 + 400);
}

uint64_t OUTLINED_FUNCTION_30_24()
{
  return 0x6953776F646E6977;
}

void OUTLINED_FUNCTION_32_30()
{
  uint64_t v2 = *(void **)(v0 + 312);
}

void OUTLINED_FUNCTION_33_20()
{
  uint64_t v2 = *(void **)(v0 + 352);
}

uint64_t OUTLINED_FUNCTION_36_24()
{
  return *(void *)(v0 + 400);
}

uint64_t OUTLINED_FUNCTION_39_26()
{
  return v0;
}

char *OUTLINED_FUNCTION_40_21@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

double OUTLINED_FUNCTION_41_18()
{
  return sub_1C9606B08();
}

uint64_t OUTLINED_FUNCTION_45_17(uint64_t a1, uint64_t a2)
{
  return a2 + 56;
}

double OUTLINED_FUNCTION_46_19()
{
  return sub_1C9606B08();
}

uint64_t OUTLINED_FUNCTION_47_19()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_49_15()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_54_17()
{
  return v0;
}

void OUTLINED_FUNCTION_56_16()
{
  uint64_t v2 = *(void **)(v0 + 464);
}

uint64_t OUTLINED_FUNCTION_60_15()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_63_16()
{
  return sub_1C9606B08();
}

double OUTLINED_FUNCTION_64_10()
{
  return sub_1C9606B08();
}

uint64_t OUTLINED_FUNCTION_73_9()
{
  return sub_1C966A928(v1, v4, v0, v2, v3);
}

uint64_t OUTLINED_FUNCTION_74_11()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_80_9()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_83_7()
{
  return 0x795474706D6F7270;
}

uint64_t OUTLINED_FUNCTION_84_6()
{
  return swift_unknownObjectRetain();
}

id OUTLINED_FUNCTION_85_5(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return v2;
}

id OUTLINED_FUNCTION_86_9(uint64_t a1, const char *a2)
{
  return objc_msgSend(v4, a2, v3, v5, v2);
}

uint64_t *OUTLINED_FUNCTION_87_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  a17 = v19;
  a12 = v18;
  a13 = v17;
  return __swift_allocate_boxed_opaque_existential_0(&a9);
}

uint64_t OUTLINED_FUNCTION_89_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  return sub_1C97BEB3C(v16, &a16, &a9);
}

void OUTLINED_FUNCTION_92_7()
{
}

void OUTLINED_FUNCTION_94_6(double a1)
{
  *(double *)(v1 + 88) = a1;
}

uint64_t OUTLINED_FUNCTION_96_6()
{
  return swift_continuation_init();
}

void OUTLINED_FUNCTION_97_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[51] = a4;
  v5[52] = a5;
  v5[49] = a2;
  v5[50] = a3;
  v5[48] = a1;
  sub_1C9BEC4F8();
}

uint64_t OUTLINED_FUNCTION_98_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_100_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_102_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  return sub_1C95FF228(v7, v6, (uint64_t *)va);
}

void OUTLINED_FUNCTION_103_5(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_104_3()
{
  return v0;
}

id OUTLINED_FUNCTION_107_2(uint64_t a1, const char *a2)
{
  return objc_msgSend(v3, a2, v4, v5, v2);
}

void OUTLINED_FUNCTION_109_3(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, os_log_type_t type)
{
  _os_log_impl(a1, v13, type, a4, v14, 0xCu);
}

uint64_t sub_1C994E38C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C994E3B0, 0, 0);
}

uint64_t sub_1C994E3B0()
{
  uint64_t v1 = *(void **)(v0[3] + 16);
  v0[6] = v1;
  if (v1)
  {
    uint64_t v2 = qword_1EBC7A3B8;
    id v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C9BECF88();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
    uint64_t v5 = sub_1C9BECF78();
    os_log_type_t v6 = sub_1C9BEDC78();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1C95F9000, v5, v6, "Using PatternExecutionResult to build Output", v7, 2u);
      MEMORY[0x1CB78C440](v7, -1, -1);
    }
    uint64_t v8 = (void *)v0[5];

    uint64_t v9 = v8 + 2;
    uint64_t v10 = v8[5];
    uint64_t v11 = v8[6];
    __swift_project_boxed_opaque_existential_1(v9, v10);
    uint64_t v18 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8) + **(int **)(v11 + 8));
    uint64_t v12 = (void *)swift_task_alloc();
    v0[7] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1C994E5E4;
    uint64_t v13 = v0[4];
    uint64_t v14 = v0[2];
    return v18(v14, v3, v13, v10, v11);
  }
  else
  {
    uint64_t v16 = v0[2];
    *(void *)(v16 + 32) = 0;
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1C994E5E4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  *(void *)(v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C994E730;
  }
  else {
    uint64_t v2 = sub_1C994E6D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C994E6D0()
{
  OUTLINED_FUNCTION_24();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C994E730()
{
  OUTLINED_FUNCTION_24();

  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for PatternOutputElementConverter()
{
  return self;
}

uint64_t sub_1C994E7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C96EE41C;
  return sub_1C994E38C(a1, a2, a3);
}

void sub_1C994E868()
{
}

void PeerInfoProviding.getDeviceIdiom()()
{
}

Swift::String_optional __swiftcall PeerInfoProviding.getPeerName()()
{
  uint64_t v0 = 0;
  uint64_t v1 = 0;
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t Perform.__allocating_init(interruptionPolicy:operateWithSideEffect:operation:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_19_40();
  Perform.init(interruptionPolicy:operateWithSideEffect:operation:)(v4, a2, a3, a4);
  return v8;
}

uint64_t OperationContext.aceService.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD5F0(v1, a1);
}

uint64_t OperationContext.init(aceService:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C95FD5D8(a1, a2);
}

void Perform.interruptionPolicy.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t Perform.withSideEffect.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1C994E984@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_62();
  uint64_t v4 = v1 + *(void *)(v3 + 112);
  swift_beginAccess();
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_15_44();
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_112();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_1C994EA48(uint64_t a1)
{
  OUTLINED_FUNCTION_62();
  uint64_t v4 = v1 + *(void *)(v3 + 112);
  swift_beginAccess();
  OUTLINED_FUNCTION_62();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_15_44();
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_112();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t sub_1C994EB14()
{
  OUTLINED_FUNCTION_74();
  return *(unsigned __int8 *)(v0 + *(void *)(v1 + 120));
}

uint64_t sub_1C994EB34(uint64_t result)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 120)) = result;
  return result;
}

uint64_t Perform.init(interruptionPolicy:operateWithSideEffect:operation:)(char *a1, char a2, uint64_t a3, uint64_t a4)
{
  char v8 = *a1;
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 112);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v10 = sub_1C9BEE788();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  OUTLINED_FUNCTION_74();
  *(unsigned char *)(v4 + *(void *)(v11 + 120)) = 0;
  *(unsigned char *)(v4 + 16) = v8;
  *(unsigned char *)(v4 + 17) = a2;
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = a4;
  return v4;
}

uint64_t Perform.__allocating_init<A>(interruptionPolicy:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_19_40();
  Perform.init<A>(interruptionPolicy:operation:)(v4, a2, a3, a4);
  return v8;
}

uint64_t Perform.init<A>(interruptionPolicy:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_42();
  uint64_t v10 = v9;
  uint64_t v12 = *(void *)(v11 + 64);
  char v15 = *(unsigned char *)MEMORY[0x1F4188790](v13, v14);
  uint64_t v17 = v5 + *(void *)(v16 + 112);
  uint64_t v18 = *(void *)(v16 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v19 = sub_1C9BEE788();
  __swift_storeEnumTagSinglePayload(v17, 1, 1, v19);
  *(unsigned char *)(v5 + *(void *)(*(void *)v5 + 120)) = 0;
  *(unsigned char *)(v5 + 16) = v15;
  *(unsigned char *)(v5 + 17) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4) & 1;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  v20((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  unint64_t v21 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = v18;
  *((void *)v22 + 3) = a3;
  *((void *)v22 + 4) = a4;
  v20(&v22[v21], (uint64_t)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(void *)(v5 + 24) = &unk_1EA5929D0;
  *(void *)(v5 + 32) = v22;
  return v5;
}

uint64_t sub_1C994EE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24) + **(int **)(a6 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_1C9615010;
  return v13(a1, a2, a5, a6);
}

uint64_t sub_1C994EF4C()
{
  OUTLINED_FUNCTION_112();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C994EFD0()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  uint64_t v9 = (uint64_t)v0
     + ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_1C9615888;
  return sub_1C994EE38(v5, v3, v9, v6, v7, v8);
}

uint64_t Perform.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = (uint64_t *)a1;
  OUTLINED_FUNCTION_74();
  uint64_t v47 = *(void *)(v2 + 80);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v3 = sub_1C9BEE788();
  uint64_t v46 = type metadata accessor for Conclude();
  OUTLINED_FUNCTION_0_42();
  uint64_t v44 = v4;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_68_0();
  uint64_t v9 = v7 - v8;
  MEMORY[0x1F4188790](v10, v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_1C9BEDEE8();
  OUTLINED_FUNCTION_0_42();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v20 = (char *)&v43 - v19;
  OUTLINED_FUNCTION_0_42();
  uint64_t v22 = v21;
  MEMORY[0x1F4188790](v23, v24);
  OUTLINED_FUNCTION_68_0();
  uint64_t v27 = (void *)(v25 - v26);
  MEMORY[0x1F4188790](v28, v29);
  uint64_t v31 = (char *)&v43 - v30;
  sub_1C994E984((uint64_t)v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v14);
    uint64_t v32 = type metadata accessor for Abort(0);
    uint64_t v33 = v48;
    v48[3] = v32;
    v33[4] = (uint64_t)&protocol witness table for Abort;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
    type metadata accessor for Perform();
    swift_getWitnessTable();
    return ActingFlow.abort(reason:)(0xD000000000000020, 0x80000001C9C20440, boxed_opaque_existential_0);
  }
  uint64_t v43 = v9;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v20, v3);
  uint64_t v36 = v46;
  uint64_t v37 = v44;
  if (*(unsigned char *)(v1 + *(void *)(*(void *)v1 + 120)) != 1) {
    goto LABEL_9;
  }
  (*(void (**)(void *, char *, uint64_t))(v22 + 16))(v27, v31, v3);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(void *, uint64_t))(v22 + 8))(v27, v3);
LABEL_9:
    type metadata accessor for Perform();
    swift_getWitnessTable();
    ActingFlow.conclude(with:)((uint64_t)v31, (uint64_t)v13);
    uint64_t v50 = v36;
    uint64_t v51 = &protocol witness table for Conclude<A>;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v49);
    OUTLINED_FUNCTION_21_29();
    v42();
    goto LABEL_10;
  }
  *(void *)&v52[0] = *v27;
  uint64_t v38 = *(void **)&v52[0];
  id v39 = *(id *)&v52[0];
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_9;
  }

  type metadata accessor for Perform();
  swift_getWitnessTable();
  uint64_t v40 = v43;
  ActingFlow.conclude(with:)((uint64_t)v31, v43);
  sub_1C982572C(v36, (uint64_t)v13);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v36);
  uint64_t v50 = v36;
  uint64_t v51 = &protocol witness table for Conclude<A>;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v49);
  OUTLINED_FUNCTION_21_29();
  v41();

LABEL_10:
  (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v3);
  sub_1C95FD5D8(&v49, (uint64_t)v52);
  return sub_1C95FD5D8(v52, (uint64_t)v48);
}

uint64_t type metadata accessor for Perform()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Perform.deinit()
{
  swift_release();
  OUTLINED_FUNCTION_74();
  uint64_t v2 = v0 + *(void *)(v1 + 112);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEE788();
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_112();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  return v0;
}

uint64_t Perform.__deallocating_deinit()
{
  Perform.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C994F680@<X0>(uint64_t a1@<X8>)
{
  return Perform.action.getter(a1);
}

void Perform.yieldOnInterruption()()
{
  *(unsigned char *)(v0 + *(void *)(*(void *)v0 + 120)) = 1;
  sub_1C9BEC838();
}

uint64_t Perform.execute(with:)()
{
  OUTLINED_FUNCTION_24();
  v1[12] = v2;
  v1[13] = v0;
  OUTLINED_FUNCTION_74();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  v1[14] = OUTLINED_FUNCTION_15_44();
  uint64_t v3 = sub_1C9BEDEE8();
  v1[15] = v3;
  v1[16] = *(void *)(v3 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C994F7D4, 0, 0);
}

uint64_t sub_1C994F7D4()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(int **)(*(void *)(v0 + 104) + 24);
  sub_1C95FD5F0(*(void *)(v0 + 96) + 40, v0 + 56);
  uint64_t v2 = type metadata accessor for NoUserInteractionAceServiceInvoker();
  uint64_t v3 = swift_allocObject();
  sub_1C95FD5D8((long long *)(v0 + 56), v3 + 16);
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = &off_1F23E93B0;
  *(void *)(v0 + 16) = v3;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C994F904;
  uint64_t v5 = *(void *)(v0 + 152);
  return v7(v5, v0 + 16);
}

uint64_t sub_1C994F904()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2 + 16;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  sub_1C98B5164(v3);
  if (v0) {
    uint64_t v7 = sub_1C994FAA0;
  }
  else {
    uint64_t v7 = sub_1C994F9F4;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1C994F9F4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 112);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
  sub_1C994EA48(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C994FAA0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  sub_1C994E984(v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    uint64_t v3 = (void *)v0[21];
    uint64_t v4 = v0[17];
    uint64_t v5 = v0[15];
    uint64_t v6 = v0[16];
    *(void *)v0[18] = v3;
    swift_storeEnumTagMultiPayload();
    id v7 = v3;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    OUTLINED_FUNCTION_112();
    (*(void (**)(void))(v8 + 32))();
  }
  uint64_t v9 = (void *)v0[21];
  uint64_t v10 = v0[18];
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v0[14]);
  sub_1C994EA48(v10);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v11();
}

uint64_t type metadata accessor for NoUserInteractionAceServiceInvoker()
{
  return self;
}

uint64_t Perform.cancel(error:)(void *a1)
{
  OUTLINED_FUNCTION_74();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = OUTLINED_FUNCTION_15_44();
  uint64_t v3 = sub_1C9BEDEE8();
  OUTLINED_FUNCTION_0_42();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_68_0();
  uint64_t v10 = (void *)(v8 - v9);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v22 - v13;
  sub_1C994E984((uint64_t)&v22 - v13);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v3);
  if (EnumTagSinglePayload == 1)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C9BECF88();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
    uint64_t v18 = sub_1C9BECF78();
    os_log_type_t v19 = sub_1C9BEDC78();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_1C95F9000, v18, v19, "Perform was canceled before its operation completes.", v20, 2u);
      MEMORY[0x1CB78C440](v20, -1, -1);
    }

    *uint64_t v10 = a1;
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v2);
    id v21 = a1;
    return sub_1C994EA48((uint64_t)v10);
  }
  return result;
}

void sub_1C994FE10(unsigned char *a1@<X8>)
{
}

uint64_t sub_1C994FE34()
{
  return Perform.withSideEffect.getter() & 1;
}

uint64_t sub_1C994FE5C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return Perform.execute(with:)();
}

uint64_t sub_1C994FEF4(void *a1)
{
  return Perform.cancel(error:)(a1);
}

BOOL sub_1C994FF18()
{
  if (OUTLINED_FUNCTION_20_45()) {
    return 1;
  }
  self;
  if (OUTLINED_FUNCTION_20_45()) {
    return 1;
  }
  self;
  if (OUTLINED_FUNCTION_20_45()) {
    return 1;
  }
  self;
  return OUTLINED_FUNCTION_20_45() != 0;
}

uint64_t sub_1C994FF88()
{
  OUTLINED_FUNCTION_10_6();
  uint64_t v0 = OUTLINED_FUNCTION_91_0();
  return v1(v0) & 1;
}

uint64_t sub_1C994FFC4()
{
  uint64_t result = sub_1C994FF18();
  if (result)
  {
    sub_1C9951358();
    swift_allocError();
    *uint64_t v1 = 0xD000000000000083;
    v1[1] = 0x80000001C9C23310;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C9950038(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 48) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9950058);
}

uint64_t sub_1C9950058()
{
  OUTLINED_FUNCTION_26_0();
  sub_1C994FFC4();
  OUTLINED_FUNCTION_4_64(*(void **)(v0 + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C99513A4;
  uint64_t v2 = OUTLINED_FUNCTION_6_58();
  return v3(v2);
}

uint64_t sub_1C9950178(uint64_t a1, char a2)
{
  sub_1C994FFC4();
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 48))(a1, a2 & 1, v5, v6);
}

uint64_t sub_1C99503C8(unint64_t a1, char a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C9BEE3C8();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_9;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  char v7 = a2 & 1;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1CB78B3A0](v6, a1);
    }
    else {
      id v8 = *(id *)(a1 + 8 * v6 + 32);
    }
    uint64_t v9 = v8;
    ++v6;
    sub_1C9950178((uint64_t)v8, v7);
  }
  while (v4 != v6);
LABEL_9:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C99504B0(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 48) = a2;
  *(void *)(v4 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99504D0);
}

uint64_t sub_1C99504D0()
{
  OUTLINED_FUNCTION_26_0();
  sub_1C994FFC4();
  OUTLINED_FUNCTION_4_64(*(void **)(v0 + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C99505F0;
  uint64_t v2 = OUTLINED_FUNCTION_6_58();
  return v3(v2);
}

uint64_t sub_1C99505F0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  char v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1C99506C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(unsigned char *)(v6 + 64) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99506E4);
}

uint64_t sub_1C99506E4()
{
  OUTLINED_FUNCTION_26_0();
  sub_1C994FFC4();
  uint64_t v10 = (void *)(OUTLINED_FUNCTION_4_64(*(void **)(v1 + 48)) + 24);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(*v10 + *(int *)*v10);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 56) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C9950820;
  uint64_t v3 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 16);
  return v9(v7, v6, v4, v3, v5, v0, 0);
}

uint64_t sub_1C9950820()
{
  OUTLINED_FUNCTION_24();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1C99508F0()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = OUTLINED_FUNCTION_113_0();
  return v2(v1);
}

uint64_t sub_1C995093C()
{
  OUTLINED_FUNCTION_10_6();
  uint64_t v0 = OUTLINED_FUNCTION_91_0();
  return v1(v0);
}

uint64_t sub_1C9950974()
{
  OUTLINED_FUNCTION_10_6();
  uint64_t v0 = OUTLINED_FUNCTION_91_0();
  return v1(v0);
}

uint64_t sub_1C99509AC()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v1 = OUTLINED_FUNCTION_113_0();
  return v2(v1);
}

uint64_t sub_1C99509F8()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9950A10);
}

uint64_t sub_1C9950A10()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_4_64(*(void **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9950AF0;
  uint64_t v2 = OUTLINED_FUNCTION_137();
  return v3(v2);
}

uint64_t sub_1C9950AF0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v3 + 8);
  return v5(v2);
}

uint64_t sub_1C9950BBC()
{
  *(void *)(v1 + 16) = v0;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9950BD4);
}

uint64_t sub_1C9950BD4()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_4_64(*(void **)(v0 + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96EC604;
  uint64_t v2 = OUTLINED_FUNCTION_137();
  return v3(v2);
}

uint64_t sub_1C9950CB4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C96A1BF0;
  return sub_1C9950038(a1, a2, a3);
}

uint64_t sub_1C9950D64(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C96A1BF0;
  return sub_1C99504B0(a1, a2, a3);
}

uint64_t sub_1C9950E14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1C969EA2C;
  return sub_1C99506C0(a1, a2, a3, a4, a5);
}

uint64_t sub_1C9950EDC(uint64_t a1, char a2)
{
  return sub_1C9950178(a1, a2);
}

uint64_t sub_1C9950F00(unint64_t a1, char a2)
{
  return sub_1C99503C8(a1, a2);
}

uint64_t sub_1C9950F24()
{
  return sub_1C9950974();
}

uint64_t sub_1C9950F48()
{
  return sub_1C995093C();
}

uint64_t sub_1C9950F6C()
{
  return sub_1C99508F0();
}

uint64_t sub_1C9950F90()
{
  return sub_1C99509AC();
}

uint64_t sub_1C9950FB4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96981BC;
  return sub_1C99509F8();
}

uint64_t sub_1C9951044()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C9950BBC();
}

uint64_t sub_1C99510D4()
{
  return sub_1C994FF88() & 1;
}

ValueMetadata *type metadata accessor for OperationContext()
{
  return &type metadata for OperationContext;
}

uint64_t dispatch thunk of PerformOperation.hasSideEffect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerformOperation.run(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C9615010;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1C9951230()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEE788();
  uint64_t result = sub_1C9BEDEE8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Perform(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Perform);
}

uint64_t dispatch thunk of Perform.__allocating_init(interruptionPolicy:operateWithSideEffect:operation:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of Perform.__allocating_init<A>(interruptionPolicy:operation:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unint64_t sub_1C9951358()
{
  unint64_t result = qword_1EA592AC0;
  if (!qword_1EA592AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592AC0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_64@<X0>(void *a1@<X8>)
{
  uint64_t v1 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, a1[5]);
  return v1;
}

uint64_t OUTLINED_FUNCTION_6_58()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_11_59()
{
  return v0 + 8;
}

uint64_t OUTLINED_FUNCTION_15_44()
{
  return sub_1C9BEE788();
}

uint64_t OUTLINED_FUNCTION_19_40()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_20_45()
{
  return swift_dynamicCastObjCClass();
}

uint64_t dispatch thunk of PersistenceHandler.save(flowDescriptor:variables:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9608754;
  uint64_t v2 = OUTLINED_FUNCTION_1_67();
  return v3(v2);
}

uint64_t dispatch thunk of PersistenceHandler.restore(flowDescriptor:variableNames:)()
{
  OUTLINED_FUNCTION_78();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9951634;
  uint64_t v2 = OUTLINED_FUNCTION_1_67();
  return v3(v2);
}

uint64_t sub_1C9951634(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t OUTLINED_FUNCTION_1_67()
{
  return v0;
}

uint64_t PersonalDomainCheckFlow.__allocating_init(strategy:)(uint64_t a1)
{
  return sub_1C9953CF8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C99560DC);
}

void PersonalDomainCheckFlow.__allocating_init(strategy:)()
{
}

void sub_1C9951780(uint64_t a1, uint64_t a2)
{
}

void sub_1C9951798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EA592AD8;
  v9[5] = 0;
  v9[6] = a1;
  v9[7] = a2;
  __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  sub_1C9BEC838();
}

void PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v7 = sub_1C9BEDA58();
  uint64_t v8 = OUTLINED_FUNCTION_39_27();
  __swift_storeEnumTagSinglePayload(v8, v9, 1, v7);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = &unk_1EA592AD8;
  v10[5] = 0;
  v10[6] = a1;
  v10[7] = a2;
  uint64_t v11 = OUTLINED_FUNCTION_39_27();
  __swift_getEnumTagSinglePayload(v11, v12, v7);
  sub_1C9BEC838();
}

uint64_t sub_1C9951BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9615888;
  return PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse()(a1, a2, a3);
}

uint64_t sub_1C9951C74(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F4188298](sub_1C9951C94, 0, 0);
}

uint64_t sub_1C9951C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  *(void *)(v14 + 24) = swift_task_alloc();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 32) = v15;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  void *v15 = v14;
  v15[1] = sub_1C9951D6C;
  OUTLINED_FUNCTION_20_46();
  return MEMORY[0x1F4188160](v16, v17, v18, v19, v20, v21, v22, v23, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9951D6C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9951E6C()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9951EE8);
}

uint64_t sub_1C9951EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = *(void *)(v14 + 40);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 48) = v16;
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 24);
  *(void *)(v16 + 32) = v15;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v14 + 56) = v17;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  void *v17 = v14;
  v17[1] = sub_1C9701158;
  OUTLINED_FUNCTION_20_46();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9951FD0(uint64_t a1)
{
  v1[36] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  v1[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  v1[38] = swift_task_alloc();
  uint64_t v2 = sub_1C9BEAB08();
  v1[39] = v2;
  v1[40] = *(void *)(v2 - 8);
  v1[41] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C99520F0, 0, 0);
}

void sub_1C99520F0()
{
  OUTLINED_FUNCTION_26_0();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  uint64_t v1 = qword_1EBC74538;
  v0[14] = type metadata accessor for RefreshableDeviceState();
  v0[15] = &protocol witness table for RefreshableDeviceState;
  v0[11] = v1;
  sub_1C9BEC328();
}

uint64_t sub_1C9952244()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 168;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 352) = v0;
  swift_task_dealloc();
  sub_1C9697900(v4, &qword_1EBC789E0);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void sub_1C9952334()
{
  uint64_t v1 = v0[41];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  OUTLINED_FUNCTION_34_23();
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F968F0]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v5 = sub_1C9BEAAB8();
  uint64_t v7 = v6;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1C97BA8E8(v5, v7, v4);

  sub_1C9BECBB8();
}

uint64_t sub_1C99526A0()
{
  OUTLINED_FUNCTION_33();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

void sub_1C995272C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v7 + v6, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1C9951798((uint64_t)sub_1C97C7160, v7);
}

uint64_t sub_1C9952860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a4 + 8))(sub_1C97C7160, v12, a3, a4);
  return swift_release();
}

uint64_t sub_1C99529C8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PersonalDomainCheckFlowStrategyAsync.makeUnsupportedAuthenticationSettingResponse()();
}

uint64_t sub_1C9952A60(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9951FD0(a1);
}

uint64_t PersonalDomainCheckFlowStrategyAsync.makeUnsupportedAuthenticationSettingResponse()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_246();
  return sub_1C9951FD0(v3);
}

uint64_t sub_1C9952B80()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()();
}

uint64_t sub_1C9952C18(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9952D38(a1);
}

uint64_t PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_246();
  return sub_1C9952D38(v3);
}

uint64_t sub_1C9952D38(uint64_t a1)
{
  v1[43] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  v1[44] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  v1[47] = swift_task_alloc();
  uint64_t v2 = sub_1C9BEAB08();
  v1[48] = v2;
  v1[49] = *(void *)(v2 - 8);
  v1[50] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9952E98, 0, 0);
}

void sub_1C9952E98()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 408) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9952FC4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {

  }
  swift_release();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

void sub_1C9953114()
{
  OUTLINED_FUNCTION_34_23();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)(v0 + 26));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 26));
  uint64_t v1 = qword_1EBC74538;
  v0[34] = type metadata accessor for RefreshableDeviceState();
  v0[35] = &protocol witness table for RefreshableDeviceState;
  v0[31] = v1;
  sub_1C9BEC328();
}

void sub_1C9953538()
{
  uint64_t v13 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v1 = *(void *)(v0 + 368);
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  OUTLINED_FUNCTION_11_60();
  uint64_t v5 = v4;
  (*(void (**)(uint64_t))(v4 + 16))(v1);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v3);
  sub_1C9608D38(v1, v2, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    sub_1C9697900(*(void *)(v0 + 360), &qword_1EBC7A230);
  }
  else
  {
    uint64_t v6 = sub_1C9BECF78();
    os_log_type_t v7 = sub_1C9BEDC88();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315650;
      uint64_t v9 = sub_1C9BEE1B8();
      *(void *)(v0 + 328) = sub_1C95FF228(v9, v10, &v12);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      *(void *)(v0 + 320) = 125;
      sub_1C9BEDF68();
      *(_WORD *)(v8 + 22) = 2080;
      *(void *)(v0 + 336) = sub_1C95FF228(0xD000000000000034, 0x80000001C9C1D820, &v12);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v6, v7, "FatalError at %s:%lu - %s", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    (*(void (**)(void, uint64_t))(v5 + 8))(*(void *)(v0 + 360), v3);
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(_OWORD *)(v0 + 128) = 0u;
  uint64_t v11 = v0 + 128;
  *(_OWORD *)(v11 + 160) = 0u;
  *(_OWORD *)(v11 + 176) = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(void *)(v11 + 32) = 0;
  sub_1C9BEC838();
}

uint64_t sub_1C99538CC(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA592BA8 + dword_1EA592BA8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return v5(a1);
}

uint64_t sub_1C9953978(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA592BB8 + dword_1EA592BB8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return v5(a1);
}

uint64_t sub_1C9953A24(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA592BB0 + dword_1EA592BB0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return v5(a1);
}

BOOL sub_1C9953AD0()
{
  return (*(unsigned char *)(v0 + 16) & 1) == 0;
}

void sub_1C9953AE0()
{
}

void PersonalDomainCheckFlow.init(strategy:)()
{
}

uint64_t PersonalDomainCheckFlow.init(strategy:)(uint64_t a1)
{
  return sub_1C9953CF8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9956238);
}

uint64_t sub_1C9953CF8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t))(v12 + 16))(v10 - v9);
  uint64_t v13 = a2(v11, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void sub_1C9953DC4()
{
  OUTLINED_FUNCTION_24();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = type metadata accessor for IdentifiedUser();
  v1[4] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[5] = swift_task_alloc();
  sub_1C9BEC878();
}

uint64_t sub_1C9953F20()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1 + 8;
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v3);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1C9BECF88();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
    uint64_t v18 = (void *)sub_1C9BECF78();
    os_log_type_t v19 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v19))
    {
      uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v20);
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v21, v22, "Device is not supported. Personal domains check is not applicable, so flow will exit and continue");
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v41 = v0[3];
    static ExecuteResponse.complete()(v0[2]);
    *(unsigned char *)(v41 + 16) = 1;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_25_0();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v7 = v0[10];
  uint64_t v44 = v0[9];
  uint64_t v8 = v0[6];
  uint64_t v9 = v0[7];
  uint64_t v10 = v1[11];
  uint64_t v11 = v1[12];
  __swift_project_boxed_opaque_existential_1(v2, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 184))(v10, v11);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v6, *(unsigned int *)off_1E659B150, v8);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v8);
  uint64_t v12 = v7 + *(int *)(v44 + 48);
  sub_1C9608D38(v5, v7, &qword_1EBC78D40);
  sub_1C9608D38(v6, v12, &qword_1EBC78D40);
  if (__swift_getEnumTagSinglePayload(v7, 1, v8) == 1)
  {
    uint64_t v13 = v0[13];
    uint64_t v14 = v0[6];
    sub_1C9697900(v0[12], &qword_1EBC78D40);
    sub_1C9697900(v13, &qword_1EBC78D40);
    uint64_t v15 = OUTLINED_FUNCTION_39_27();
    if (__swift_getEnumTagSinglePayload(v15, v16, v14) == 1)
    {
      sub_1C9697900(v0[10], &qword_1EBC78D40);
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  uint64_t v23 = v0[6];
  sub_1C9608D38(v0[10], v0[11], &qword_1EBC78D40);
  uint64_t v24 = OUTLINED_FUNCTION_39_27();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v24, v25, v23);
  uint64_t v28 = v0[12];
  uint64_t v27 = v0[13];
  uint64_t v29 = v0[11];
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v30 = v0[6];
    uint64_t v31 = v0[7];
    sub_1C9697900(v0[12], &qword_1EBC78D40);
    sub_1C9697900(v27, &qword_1EBC78D40);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
LABEL_12:
    sub_1C9697900(v0[10], &qword_1EA592B08);
    goto LABEL_13;
  }
  uint64_t v32 = v0[10];
  uint64_t v34 = v0[7];
  uint64_t v33 = v0[8];
  uint64_t v35 = v0[6];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v33, v12, v35);
  sub_1C99563F0(&qword_1EA592B20, 255, (void (*)(uint64_t))off_1E659B158);
  char v36 = sub_1C9BED528();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  v37(v33, v35);
  sub_1C9697900(v28, &qword_1EBC78D40);
  sub_1C9697900(v27, &qword_1EBC78D40);
  v37(v29, v35);
  sub_1C9697900(v32, &qword_1EBC78D40);
  if ((v36 & 1) == 0) {
LABEL_13:
  }
    sub_1C9953AE0();
LABEL_15:
  uint64_t v38 = (void *)swift_task_alloc();
  v0[14] = (uint64_t)v38;
  void *v38 = v0;
  v38[1] = sub_1C99545C8;
  OUTLINED_FUNCTION_25_0();
  return sub_1C9954888();
}

uint64_t sub_1C99545C8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9954690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_31_27();
  *(unsigned char *)(v10 + 16) = 2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_44();
  return v12(v11, v12, v13, v14, v15, v16, v17, v18, a9, a10);
}

uint64_t sub_1C9954724()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99547EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();

  OUTLINED_FUNCTION_31_27();
  *(unsigned char *)(v11 + 16) = 4;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_44();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_1C9954888()
{
  *(void *)(v1 + 96) = v0;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99548A0);
}

uint64_t sub_1C99548A0()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  v0[13] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C95F9000, v2, v3, "Device is a homepod and authentication mode is for secured requests. This setting is no longer supported, so this flow will exit with validation failure and a notification will be issued to the personal device.", v4, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v5 = (void *)sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v6))
  {
    uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v7);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v8, v9, "Attempting to publish personal domain restricted setting (user has deprecated secureRequests toggled) response");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v10 = (void *)v0[12];

  uint64_t v11 = v10 + 13;
  uint64_t v12 = v10[16];
  uint64_t v13 = v10[17];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[14] = v14;
  *uint64_t v14 = v15;
  v14[1] = sub_1C9954A58;
  uint64_t v16 = v0[12];
  return sub_1C962F1B0((uint64_t)(v0 + 2), (uint64_t)&unk_1EA592BC8, v16, v12, v13);
}

uint64_t sub_1C9954A58()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9954B3C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC78();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v6 = *(void **)(v0 + 120);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_getErrorValue();
    uint64_t v8 = sub_1C9BEE6E8();
    *(void *)(v0 + 88) = sub_1C95FF228(v8, v9, &v13);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v4, v5, "Unable to make response for unsupported personal domain authentication mode. Will ignore and Flow should exit. %s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + 120);
  }
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C9954CFC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C9954D1C, 0, 0);
}

uint64_t sub_1C9954D1C()
{
  OUTLINED_FUNCTION_26_0();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 24) + 24), *(void *)(*(void *)(v0 + 24) + 48));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C9618A08;
  OUTLINED_FUNCTION_35_23();
  return v3();
}

uint64_t sub_1C9954E14()
{
  *(void *)(v1 + 56) = v0;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9954E2C);
}

uint64_t sub_1C9954E2C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 56);
  uint64_t v2 = v1[16];
  uint64_t v3 = v1[17];
  __swift_project_boxed_opaque_existential_1(v1 + 13, v2);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 64) = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_1C9954EFC;
  uint64_t v6 = OUTLINED_FUNCTION_246();
  return sub_1C962F1B0(v6, v7, v8, v2, v3);
}

uint64_t sub_1C9954EFC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0) {

  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C9954FE0()
{
  OUTLINED_FUNCTION_24();
  sub_1C9697900(v0 + 16, &qword_1EA588550);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9955040()
{
  OUTLINED_FUNCTION_24();
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  sub_1C9697900(v0 + 16, &qword_1EA588550);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99550B0(uint64_t a1, uint64_t a2)
{
  v2[32] = a1;
  v2[33] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9955154, 0, 0);
}

uint64_t sub_1C9955154()
{
  OUTLINED_FUNCTION_26_0();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 264) + 24), *(void *)(*(void *)(v0 + 264) + 48));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 288) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C995524C;
  OUTLINED_FUNCTION_35_23();
  return v3();
}

uint64_t sub_1C995524C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    return v10();
  }
}

uint64_t sub_1C9955354()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  if (v0) {

  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

void sub_1C9955438()
{
  uint64_t v14 = v0;
  *(_OWORD *)(v0 + 56) = 0u;
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 280);
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  sub_1C9697900(v0 + 56, &qword_1EA588550);
  OUTLINED_FUNCTION_11_60();
  uint64_t v6 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v1);
  __swift_storeEnumTagSinglePayload(v3, 0, 1, v1);
  sub_1C9608D38(v3, v4, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload(v4, 1, v1) == 1)
  {
    sub_1C9697900(*(void *)(v0 + 272), &qword_1EBC7A230);
  }
  else
  {
    uint64_t v7 = sub_1C9BECF78();
    os_log_type_t v8 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_13(v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315650;
      uint64_t v10 = sub_1C9BEE1B8();
      *(void *)(v0 + 224) = sub_1C95FF228(v10, v11, &v13);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      *(void *)(v0 + 208) = 306;
      sub_1C9BEDF68();
      *(_WORD *)(v9 + 22) = 2080;
      *(void *)(v0 + 216) = sub_1C95FF228(0xD00000000000002ELL, 0x80000001C9C23470, &v13);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v7, (os_log_type_t)v1, "FatalError at %s:%lu - %s", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    (*(void (**)(void, void))(v6 + 8))(*(void *)(v0 + 272), *(void *)(v0 + 312));
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  uint64_t v12 = v0 + 176;
  *(_OWORD *)(v12 - 64) = 0u;
  *(void *)(v12 - 48) = 0;
  *(_OWORD *)(v12 - 80) = 0u;
  sub_1C9BEC838();
}

uint64_t sub_1C9955798()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 256);

  sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
  sub_1C95FD5D8((long long *)(v0 + 16), v1);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v2();
}

void sub_1C995582C()
{
  uint64_t v4 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = sub_1C9BECF88();
  v0[39] = v2;
  v0[40] = __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  sub_1C9BEC838();
}

uint64_t PersonalDomainCheckFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  swift_release();
  return v0;
}

uint64_t PersonalDomainCheckFlow.__deallocating_deinit()
{
  PersonalDomainCheckFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9955B68()
{
  return sub_1C9953DC0();
}

void sub_1C9955B8C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  sub_1C9953DC4();
}

BOOL sub_1C9955C1C@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C9953AD0();
  *a1 = result;
  return result;
}

uint64_t sub_1C9955C48(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C9955C68, 0, 0);
}

uint64_t sub_1C9955C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = (void *)swift_task_alloc();
  v14[4] = v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  void *v15 = v14;
  v15[1] = sub_1C9955D40;
  uint64_t v17 = v14[2];
  uint64_t v18 = v14[3];
  return MEMORY[0x1F4188160](v17, 0, 0, 0xD00000000000002ELL, 0x80000001C9C233A0, sub_1C9956A54, v18, v16, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9955D40()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9955E38(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 2;
  uint64_t v11 = a2[5];
  uint64_t v10 = a2[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1C97C7160, v13, v11, v10);
  return swift_release();
}

uint64_t sub_1C9955FA8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9955C48(a1);
}

uint64_t sub_1C9956044()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()();
}

void sub_1C99560DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_6_0();
  uint64_t v13 = v12 - v11;
  type metadata accessor for PersonalDomainCheckFlow();
  uint64_t v14 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v13, a1, a3);
  sub_1C9956238(v13, v14, a3, a4);
}

uint64_t sub_1C99561C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C99561FC(uint64_t a1)
{
  return sub_1C9952860(a1, v1[4], v1[2], v1[3]);
}

uint64_t type metadata accessor for PersonalDomainCheckFlowStrategyAsyncAdapter()
{
  return self;
}

void sub_1C9956238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v7[3] = a3;
  v7[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58B6A8);
  swift_allocObject();
  sub_1C9BEC388();
}

uint64_t sub_1C9956398(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C99563F0(&qword_1EA592B28, a2, (void (*)(uint64_t))type metadata accessor for PersonalDomainCheckFlow);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C99563F0(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for PersonalDomainCheckFlow()
{
  return self;
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategy.makeUnsupportedAuthenticationSettingResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_35(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  uint64_t v6 = OUTLINED_FUNCTION_52_12();
  return v7(v6);
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategyAsync.makeUnsupportedAuthenticationSettingResponse()()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of PersonalDomainCheckFlowStrategyAsync.makePersonalDomainsDisabledResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_35(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  uint64_t v6 = OUTLINED_FUNCTION_52_12();
  return v7(v6);
}

uint64_t method lookup function for PersonalDomainCheckFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PersonalDomainCheckFlow);
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))() & 1;
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.__allocating_init(strategy:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PersonalDomainCheckFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 200) + **(int **)(*(void *)v0 + 200));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615010;
  return v7(v2);
}

unsigned char *storeEnumTagSinglePayload for PersonalDomainCheckFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C99569A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersonalDomainCheckFlow.State()
{
  return &type metadata for PersonalDomainCheckFlow.State;
}

ValueMetadata *type metadata accessor for DefaultPersonalDomainCheckFlowStrategy()
{
  return &type metadata for DefaultPersonalDomainCheckFlowStrategy;
}

ValueMetadata *type metadata accessor for DefaultPersonalDomainCheckFlowStrategySync()
{
  return &type metadata for DefaultPersonalDomainCheckFlowStrategySync;
}

unint64_t sub_1C99569FC()
{
  unint64_t result = qword_1EA592B78;
  if (!qword_1EA592B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592B78);
  }
  return result;
}

uint64_t sub_1C9956A54(uint64_t a1)
{
  return sub_1C9955E38(a1, v1);
}

uint64_t sub_1C9956A60()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  unsigned int v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *unsigned int v4 = v5;
  v4[1] = sub_1C9615010;
  return sub_1C9954CFC(v2, v0);
}

uint64_t sub_1C9956AF0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  unsigned int v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *unsigned int v4 = v5;
  v4[1] = sub_1C9615888;
  return sub_1C99550B0(v2, v0);
}

void sub_1C9956B80()
{
}

uint64_t OUTLINED_FUNCTION_22_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 + 16;
}

double OUTLINED_FUNCTION_31_27()
{
  uint64_t v2 = *(void *)(v0 + 16);
  return static ExecuteResponse.complete()(v2);
}

uint64_t OUTLINED_FUNCTION_33_21()
{
  return sub_1C9BEE398();
}

uint64_t OUTLINED_FUNCTION_39_27()
{
  return v0;
}

uint64_t dispatch thunk of PlanModifier.body(modifying:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t PlatformErrorFlow.__allocating_init(outputPublisher:deviceState:)(uint64_t a1, uint64_t a2)
{
  sub_1C95FE60C(a1, (uint64_t)&v8, &qword_1EA58F490);
  if (!v9) {
    sub_1C992A3B0();
  }
  sub_1C95FD5D8(&v8, (uint64_t)&v11);
  sub_1C95FE60C(a2, (uint64_t)&v6, &qword_1EBC789E0);
  if (!v7)
  {
    if (qword_1EBC760D8 != -1) {
      swift_once();
    }
    sub_1C960E058((uint64_t)&v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    uint64_t v4 = qword_1EBC74538;
    uint64_t v9 = type metadata accessor for RefreshableDeviceState();
    uint64_t v10 = &protocol witness table for RefreshableDeviceState;
    *(void *)&long long v8 = v4;
    sub_1C9BEC838();
  }
  sub_1C95FE7C0(a2, &qword_1EBC789E0);
  sub_1C95FE7C0(a1, &qword_1EA58F490);
  sub_1C95FD5D8(&v6, (uint64_t)&v8);
  type metadata accessor for PlatformErrorFlow();
  swift_allocObject();
  return sub_1C9956E70(&v11, &v8);
}

uint64_t type metadata accessor for PlatformErrorFlow()
{
  return self;
}

uint64_t sub_1C9956E70(long long *a1, long long *a2)
{
  *(unsigned char *)(v2 + 16) = 3;
  sub_1C95FD5D8(a1, v2 + 24);
  sub_1C95FD5D8(a2, v2 + 64);
  return v2;
}

BOOL sub_1C9956EB0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Input(0);
  static SiriKitPlatformErrorCase.fromParse(_:)(a1 + *(int *)(v3 + 20), (char *)&v10);
  int v4 = v10;
  if (v10 == 3)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
    long long v6 = sub_1C9BECF78();
    os_log_type_t v7 = sub_1C9BEDC68();
    if (os_log_type_enabled(v6, v7))
    {
      long long v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v8 = 0;
      _os_log_impl(&dword_1C95F9000, v6, v7, "PlatformErrorFlow: Unknown input, returning false", v8, 2u);
      OUTLINED_FUNCTION_11_4();
    }
  }
  else
  {
    *(unsigned char *)(v1 + 16) = v10;
  }
  return v4 != 3;
}

uint64_t sub_1C9956FC4()
{
  OUTLINED_FUNCTION_24();
  v1[39] = v2;
  v1[40] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  v1[43] = swift_task_alloc();
  v1[44] = type metadata accessor for AceOutput();
  v1[45] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99570C0()
{
  if (*(unsigned char *)(v0[40] + 16) != 3)
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_1EA5C2788;
    v0[14] = type metadata accessor for CATTemplateExecutor();
    v0[15] = &off_1F23D6490;
    v0[11] = v8;
    sub_1C9BEC838();
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC88();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C95F9000, v2, v3, "PlatformErrorFlow: execute() called with no error case. Was on(input:) called?", v4, 2u);
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v5 = v0[39];

  static ExecuteResponse.complete()(v5);
  OUTLINED_FUNCTION_6_59();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v6();
}

uint64_t sub_1C99573BC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *long long v6 = v5;
  swift_task_dealloc();
  if (v0) {
    *(void *)(v3 + 400) = v0;
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v3 + 88);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99574AC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *long long v6 = v5;
  swift_task_dealloc();
  if (v0) {
    *(void *)(v3 + 400) = v0;
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v3 + 88);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C995759C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *long long v6 = v5;
  swift_task_dealloc();
  if (v0) {
    *(void *)(v3 + 400) = v0;
  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v3 + 88);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C995768C()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void **)(v0 + 320);
  uint64_t v3 = v2[11];
  uint64_t v4 = v2[12];
  __swift_project_boxed_opaque_existential_1(v2 + 8, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 96))(v3, v4);
  uint64_t v5 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v5);
  *(void *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 144) = 0u;
  *(_OWORD *)(v0 + 128) = 0u;
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_1C9957910()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *long long v6 = v5;
  swift_task_dealloc();
  if (v0) {

  }
  else {
    __swift_destroy_boxed_opaque_existential_1(v3 + 208);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C99579F8()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 400);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  uint64_t v15 = 0xD00000000000001CLL;
  unint64_t v16 = 0x80000001C9C20310;
  *(void *)(v0 + 296) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  uint64_t v2 = v15;
  unint64_t v3 = v16;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = *(void *)(v0 + 328);
  uint64_t v4 = *(void *)(v0 + 336);
  uint64_t v6 = sub_1C9BECF88();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
  uint64_t v8 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v4, v7, v6);
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v6);
  sub_1C95FE60C(v4, v5, &qword_1EBC7A230);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
  {
    sub_1C95FE7C0(*(void *)(v0 + 328), &qword_1EBC7A230);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1C9BECF78();
    os_log_type_t v10 = sub_1C9BEDC88();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315650;
      uint64_t v12 = sub_1C9BEE1B8();
      *(void *)(v0 + 304) = sub_1C95FF228(v12, v13, &v15);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v11 + 12) = 2048;
      *(void *)(v0 + 280) = 53;
      sub_1C9BEDF68();
      *(_WORD *)(v11 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 288) = sub_1C95FF228(v2, v3, &v15);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v9, v10, "FatalError at %s:%lu - %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(void, uint64_t))(v8 + 8))(*(void *)(v0 + 328), v6);
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(_OWORD *)(v0 + 248) = 0u;
  uint64_t v14 = v0 + 248;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_OWORD *)(v14 - 64) = 0u;
  *(void *)(v14 - 48) = 0;
  *(_OWORD *)(v14 - 80) = 0u;
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

uint64_t sub_1C9957E94()
{
  OUTLINED_FUNCTION_33();
  sub_1C9630A64(*(void *)(v0 + 360));
  static ExecuteResponse.complete()(*(void *)(v0 + 312));
  OUTLINED_FUNCTION_6_59();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9957F18()
{
  OUTLINED_FUNCTION_33();
  sub_1C9630A64(*(void *)(v0 + 360));
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  static ExecuteResponse.complete()(*(void *)(v0 + 312));
  OUTLINED_FUNCTION_6_59();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t PlatformErrorFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t PlatformErrorFlow.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

BOOL sub_1C9958010(uint64_t a1)
{
  return sub_1C9956EB0(a1);
}

uint64_t sub_1C9958038()
{
  return sub_1C9956FC0();
}

uint64_t sub_1C995805C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C9956FC4();
}

unint64_t sub_1C99580F4(uint64_t a1)
{
  unint64_t result = sub_1C995811C();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C995811C()
{
  unint64_t result = qword_1EA592BF8;
  if (!qword_1EA592BF8)
  {
    type metadata accessor for PlatformErrorFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592BF8);
  }
  return result;
}

uint64_t method lookup function for PlatformErrorFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PlatformErrorFlow);
}

uint64_t dispatch thunk of PlatformErrorFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of PlatformErrorFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of PlatformErrorFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 152) + **(int **)(*(void *)v0 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1C9615010;
  return v6(v3);
}

uint64_t getEnumTagSinglePayload for PlatformErrorFlow.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C9958378);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for PlatformErrorFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1C9958460);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1C9958488(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for PlatformErrorFlow.State()
{
  return &type metadata for PlatformErrorFlow.State;
}

uint64_t OUTLINED_FUNCTION_6_59()
{
  return swift_task_dealloc();
}

uint64_t PluginAction.flowHandlerId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginAction.input.getter()
{
  uint64_t v2 = v1 + *(int *)(OUTLINED_FUNCTION_24_31() + 20);

  return sub_1C962C9D4(v2, v0);
}

uint64_t PluginAction.userData.getter()
{
  type metadata accessor for PluginAction();

  return swift_bridgeObjectRetain();
}

void *PluginAction.speechPackage.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for PluginAction() + 28));
  id v2 = v1;
  return v1;
}

uint64_t PluginAction.utterance.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PluginAction() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginAction.actionParaphrase.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_24_31();
  return sub_1C95FE5B0(v1 + *(int *)(v2 + 36), v0, &qword_1EBC78110);
}

uint64_t PluginAction.loggingId.getter()
{
  uint64_t v2 = OUTLINED_FUNCTION_24_31();
  return sub_1C95FE5B0(v1 + *(int *)(v2 + 40), v0, &qword_1EBC79488);
}

uint64_t PluginAction.preventCircularRedirect.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PluginAction() + 44));
}

uint64_t PluginAction.init(flowHandlerId:input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  BOOL v8 = (int *)type metadata accessor for PluginAction();
  uint64_t v9 = (uint64_t)a4 + v8[10];
  uint64_t v10 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_37_1(v9, v11, v12, v10);
  uint64_t v13 = (uint64_t)a4 + v8[9];
  uint64_t v14 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_37_1(v13, v15, v16, v14);
  *a4 = a1;
  a4[1] = a2;
  uint64_t result = sub_1C9729480(a3, (uint64_t)a4 + v8[5]);
  *(void *)((char *)a4 + v8[6]) = 0;
  *(void *)((char *)a4 + v8[7]) = 0;
  uint64_t v18 = (void *)((char *)a4 + v8[8]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  *((unsigned char *)a4 + v8[11]) = 1;
  return result;
}

void PluginAction.init(flowHandlerId:input:speechPackage:userData:loggingId:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_5();
  uint64_t v9 = v8;
  uint64_t v10 = (int *)type metadata accessor for PluginAction();
  uint64_t v11 = (uint64_t)v9 + v10[9];
  uint64_t v12 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_37_1(v11, v13, v14, v12);
  *uint64_t v9 = v3;
  v9[1] = v2;
  sub_1C9729480(v1, (uint64_t)v9 + v10[5]);
  *(void *)((char *)v9 + v10[6]) = v7;
  *(void *)((char *)v9 + v10[7]) = v0;
  uint64_t v15 = (void *)((char *)v9 + v10[8]);
  void *v15 = 0;
  v15[1] = 0;
  sub_1C9757DD4(v5, (uint64_t)v9 + v10[10], &qword_1EBC79488);
  *((unsigned char *)v9 + v10[11]) = 1;
  OUTLINED_FUNCTION_10();
}

void PluginAction.init(flowHandlerId:input:preventCircularRedirect:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6 = OUTLINED_FUNCTION_18_41();
  uint64_t v7 = v4 + *(int *)(v6 + 36);
  uint64_t v8 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_37_1(v7, v9, v10, v8);
  uint64_t v11 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_11_61(v11);
  *(void *)(v4 + *(int *)(v6 + 24)) = 0;
  OUTLINED_FUNCTION_12_50();
  *(unsigned char *)(v4 + v12) = a4;
}

void PluginAction.init(flowHandlerId:input:speechPackage:utterance:actionParaphrase:userData:loggingId:preventCircularRedirect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_8_62();
  *uint64_t v27 = v25;
  v27[1] = v26;
  uint64_t v28 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_21_30(v28);
  OUTLINED_FUNCTION_4_65();
  sub_1C9757DD4(v22, v29, &qword_1EBC78110);
  sub_1C9757DD4(a21, v23 + *(int *)(v24 + 40), &qword_1EBC79488);
  *(unsigned char *)(v23 + *(int *)(v24 + 44)) = a22;
  OUTLINED_FUNCTION_10();
}

void PluginAction.init(flowHandlerId:input:loggingId:)()
{
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_5();
  uint64_t v5 = (int *)OUTLINED_FUNCTION_24_31();
  uint64_t v6 = (uint64_t)v0 + v5[10];
  uint64_t v7 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v1, v7);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v7);
  uint64_t v9 = (uint64_t)v0 + v5[9];
  uint64_t v10 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_37_1(v9, v11, v12, v10);
  *uint64_t v0 = v4;
  v0[1] = v3;
  sub_1C9729480(v2, (uint64_t)v0 + v5[5]);
  *(void *)((char *)v0 + v5[6]) = 0;
  *(void *)((char *)v0 + v5[7]) = 0;
  uint64_t v13 = (void *)((char *)v0 + v5[8]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  *((unsigned char *)v0 + v5[11]) = 1;
  OUTLINED_FUNCTION_10();
}

void PluginAction.init(flowHandlerId:input:loggingId:preventCircularRedirect:)()
{
  OUTLINED_FUNCTION_11_1();
  char v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = (int *)type metadata accessor for PluginAction();
  uint64_t v13 = (uint64_t)v11 + v12[9];
  uint64_t v14 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_37_1(v13, v15, v16, v14);
  uint64_t v17 = (uint64_t)v11 + v12[10];
  uint64_t v18 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v17, v3, v18);
  __swift_storeEnumTagSinglePayload(v17, 0, 1, v18);
  *uint64_t v11 = v9;
  v11[1] = v7;
  sub_1C9729480(v5, (uint64_t)v11 + v12[5]);
  *(void *)((char *)v11 + v12[6]) = 0;
  *(void *)((char *)v11 + v12[7]) = 0;
  uint64_t v20 = (void *)((char *)v11 + v12[8]);
  *uint64_t v20 = 0;
  v20[1] = 0;
  *((unsigned char *)v11 + v12[11]) = v1;
  OUTLINED_FUNCTION_10();
}

void PluginAction.init(flowHandlerId:input:userData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = OUTLINED_FUNCTION_18_41();
  uint64_t v7 = v4 + *(int *)(v6 + 40);
  uint64_t v8 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_37_1(v7, v9, v10, v8);
  uint64_t v11 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_11_61(v11);
  *(void *)(v4 + *(int *)(v6 + 24)) = a4;
  OUTLINED_FUNCTION_12_50();
  *(unsigned char *)(v4 + v12) = 1;
}

void PluginAction.init(flowHandlerId:input:speechPackage:utterance:actionParaphrase:userData:loggingId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_8_62();
  *uint64_t v26 = v24;
  v26[1] = v25;
  uint64_t v27 = type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_21_30(v27);
  OUTLINED_FUNCTION_4_65();
  sub_1C9757DD4(v21, v28, &qword_1EBC78110);
  sub_1C9757DD4(a21, v22 + *(int *)(v23 + 40), &qword_1EBC79488);
  *(unsigned char *)(v22 + *(int *)(v23 + 44)) = 1;
  OUTLINED_FUNCTION_10();
}

void PluginAction.init(flowHandlerId:input:speechPackage:userData:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = (int *)type metadata accessor for PluginAction();
  uint64_t v13 = (uint64_t)v11 + v12[10];
  uint64_t v14 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_37_1(v13, v15, v16, v14);
  uint64_t v17 = (uint64_t)v11 + v12[9];
  uint64_t v18 = type metadata accessor for ActionParaphrase(0);
  OUTLINED_FUNCTION_37_1(v17, v19, v20, v18);
  *uint64_t v11 = v9;
  v11[1] = v7;
  sub_1C9729480(v5, (uint64_t)v11 + v12[5]);
  *(void *)((char *)v11 + v12[6]) = v1;
  *(void *)((char *)v11 + v12[7]) = v3;
  uint64_t v21 = (void *)((char *)v11 + v12[8]);
  *uint64_t v21 = 0;
  v21[1] = 0;
  *((unsigned char *)v11 + v12[11]) = 1;
  OUTLINED_FUNCTION_10();
}

uint64_t PluginAction.init(flowHandlerId:input:speechPackage:actionParaphrase:loggingId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  uint64_t v12 = (int *)type metadata accessor for PluginAction();
  sub_1C9729480(a3, (uint64_t)a7 + v12[5]);
  *(void *)((char *)a7 + v12[6]) = 0;
  *(void *)((char *)a7 + v12[7]) = a4;
  uint64_t v13 = (void *)((char *)a7 + v12[8]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  sub_1C9757DD4(a5, (uint64_t)a7 + v12[9], &qword_1EBC78110);
  uint64_t result = sub_1C9757DD4(a6, (uint64_t)a7 + v12[10], &qword_1EBC79488);
  *((unsigned char *)a7 + v12[11]) = 1;
  return result;
}

uint64_t PluginAction.description.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_221();
  sub_1C9BEE188();
  sub_1C9BED6B8();
  swift_bridgeObjectRetain();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  uint64_t v4 = type metadata accessor for PluginAction();
  Input.description.getter();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  id v5 = *(id *)(v0 + *(int *)(v4 + 28));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78310);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  sub_1C95FE5B0(v0 + *(int *)(v4 + 36), v1, &qword_1EBC78110);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C9958F58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E6148776F6C66 && a2 == 0xED0000644972656CLL;
  if (v2 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x7475706E69 && a2 == 0xE500000000000000;
    if (v6 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6174614472657375 && a2 == 0xE800000000000000;
      if (v7 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x80000001C9C23640 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001C9C23660 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x49676E6967676F6CLL && a2 == 0xE900000000000064;
        if (v8 || (OUTLINED_FUNCTION_23_33(), (OUTLINED_FUNCTION_6_53() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x636E617265747475 && a2 == 0xE900000000000065;
          if (v9 || (OUTLINED_FUNCTION_6_53() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000017 && a2 == 0x80000001C9C23680)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            char v10 = OUTLINED_FUNCTION_6_53();
            swift_bridgeObjectRelease();
            if (v10) {
              return 7;
            }
            else {
              return 8;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1C9959228(char a1)
{
  uint64_t result = 0x646E6148776F6C66;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7475706E69;
      break;
    case 2:
      uint64_t result = 0x6174614472657375;
      break;
    case 3:
      uint64_t result = 0xD000000000000011;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = OUTLINED_FUNCTION_23_33();
      break;
    case 6:
      uint64_t result = 0x636E617265747475;
      break;
    case 7:
      uint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C9959340()
{
  return sub_1C9959228(*v0);
}

uint64_t sub_1C9959348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9958F58(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C9959370(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1C995937C(uint64_t a1)
{
  unint64_t v2 = sub_1C9959BE8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C99593B8(uint64_t a1)
{
  unint64_t v2 = sub_1C9959BE8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PluginAction.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
  uint64_t v7 = OUTLINED_FUNCTION_22(v6);
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_33_0();
  uint64_t v59 = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
  uint64_t v11 = OUTLINED_FUNCTION_22(v10);
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_222();
  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_221();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592C10);
  OUTLINED_FUNCTION_0_14();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v20 - v19;
  uint64_t v60 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9959BE8();
  sub_1C9BEE798();
  if (!v61)
  {
    uint64_t v62 = v3;
    uint64_t v22 = v16;
    uint64_t v23 = sub_1C9BEE488();
    uint64_t v25 = v24;
    uint64_t v57 = v23;
    sub_1C995A400(&qword_1EA58DF60, (void (*)(uint64_t))type metadata accessor for Input);
    sub_1C9BEE4C8();
    uint64_t v26 = v22;
    uint64_t v27 = v4;
    uint64_t v56 = v25;
    type metadata accessor for ActionParaphrase(0);
    sub_1C995A400(&qword_1EA592C20, (void (*)(uint64_t))type metadata accessor for ActionParaphrase);
    OUTLINED_FUNCTION_19_41();
    sub_1C9BEAB08();
    LOBYTE(v64) = 5;
    sub_1C995A400(&qword_1EBC77548, MEMORY[0x1E4F27990]);
    OUTLINED_FUNCTION_19_41();
    LOBYTE(v63) = 2;
    sub_1C9683BAC();
    sub_1C9BEE478();
    uint64_t v28 = v2;
    unint64_t v54 = v65;
    if (v65 >> 60 == 15)
    {
      uint64_t v55 = 0;
    }
    else
    {
      uint64_t v29 = v27;
      uint64_t v30 = (uint64_t)v64;
      uint64_t v31 = self;
      uint64_t v32 = (void *)sub_1C9BEA9B8();
      id v64 = 0;
      id v33 = objc_msgSend(v31, sel_propertyListWithData_options_format_error_, v32, 0, 0, &v64);

      if (!v33)
      {
        id v40 = v64;
        swift_bridgeObjectRelease();
        sub_1C9BEA8C8();

        swift_willThrow();
        sub_1C963F610(v30, v54);
        sub_1C95FE76C(v59, &qword_1EBC79488);
        sub_1C95FE76C(v62, &qword_1EBC78110);
        sub_1C995CE84(v29, (void (*)(void))type metadata accessor for Input);
        (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v21, v28);
        return __swift_destroy_boxed_opaque_existential_1(v60);
      }
      id v34 = v64;
      sub_1C9BEDFE8();
      sub_1C963F610(v30, v54);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76378);
      int v35 = swift_dynamicCast();
      uint64_t v36 = v63;
      if (!v35) {
        uint64_t v36 = 0;
      }
      uint64_t v55 = v36;
      uint64_t v27 = v29;
    }
    sub_1C9BEE478();
    uint64_t v53 = v27;
    unint64_t v38 = v65;
    if (v65 >> 60 == 15)
    {
      uint64_t v39 = 0;
    }
    else
    {
      uint64_t v41 = (uint64_t)v64;
      id v42 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
      sub_1C960B020(v41, v38);
      id v43 = sub_1C993869C(v41, v38);
      sub_1C995A3C0();
      uint64_t v44 = v41;
      sub_1C9BED568();
      uint64_t v45 = sub_1C9BEDE08();
      sub_1C963F610(v44, v38);
      uint64_t v26 = v22;
      uint64_t v39 = v45;
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_17_40(6);
    uint64_t v46 = sub_1C9BEE468();
    uint64_t v48 = v47;
    uint64_t v52 = v46;
    OUTLINED_FUNCTION_17_40(7);
    char v49 = sub_1C9BEE498();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v21, v28);
    uint64_t v50 = (int *)type metadata accessor for PluginAction();
    sub_1C9729480(v53, (uint64_t)a2 + v50[5]);
    sub_1C9757DD4(v62, (uint64_t)a2 + v50[9], &qword_1EBC78110);
    sub_1C9757DD4(v59, (uint64_t)a2 + v50[10], &qword_1EBC79488);
    *a2 = v57;
    a2[1] = v56;
    *(uint64_t *)((char *)a2 + v50[6]) = v55;
    *(uint64_t *)((char *)a2 + v50[7]) = v39;
    uint64_t v51 = (uint64_t *)((char *)a2 + v50[8]);
    *uint64_t v51 = v52;
    v51[1] = v48;
    *((unsigned char *)a2 + v50[11]) = v49 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1(v60);
}

unint64_t sub_1C9959BE8()
{
  unint64_t result = qword_1EA592C18;
  if (!qword_1EA592C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592C18);
  }
  return result;
}

uint64_t PluginAction.encode(to:)(void *a1)
{
  uint64_t v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592C30);
  OUTLINED_FUNCTION_0_14();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9959BE8();
  sub_1C9BEE7A8();
  OUTLINED_FUNCTION_22_36();
  sub_1C9BEE528();
  if (!v3)
  {
    uint64_t v11 = type metadata accessor for PluginAction();
    type metadata accessor for Input(0);
    sub_1C995A400(&qword_1EA58DF38, (void (*)(uint64_t))type metadata accessor for Input);
    sub_1C9BEE568();
    sub_1C9BEAB08();
    sub_1C995A400(&qword_1EBC781A8, MEMORY[0x1E4F27990]);
    OUTLINED_FUNCTION_9_52();
    type metadata accessor for ActionParaphrase(0);
    sub_1C995A400(&qword_1EA592C38, (void (*)(uint64_t))type metadata accessor for ActionParaphrase);
    OUTLINED_FUNCTION_9_52();
    uint64_t v13 = *(void **)(v5 + *(int *)(v11 + 28));
    if (v13)
    {
      id v14 = objc_allocWithZone(MEMORY[0x1E4F28DB0]);
      id v15 = v13;
      id v16 = objc_msgSend(v14, sel_initRequiringSecureCoding_, 1);
      uint64_t v22 = v15;
      objc_msgSend(v16, sel_encodeObject_forKey_, v15, *MEMORY[0x1E4F284E8]);
      uint64_t v21 = v16;
      id v17 = objc_msgSend(v16, sel_encodedData);
      uint64_t v18 = sub_1C9BEA9E8();
      unint64_t v20 = v19;

      sub_1C9683B14();
      sub_1C9BEE568();
      sub_1C960B0D8(v18, v20);
    }
    OUTLINED_FUNCTION_22_36();
    sub_1C9BEE508();
    sub_1C9BEE538();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v1);
}

uint64_t PluginAction.init(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
  uint64_t v8 = OUTLINED_FUNCTION_22(v7);
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_33_0();
  uint64_t v39 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
  uint64_t v12 = OUTLINED_FUNCTION_22(v11);
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_33_0();
  uint64_t v38 = v14;
  uint64_t v15 = type metadata accessor for Input(0);
  uint64_t v16 = OUTLINED_FUNCTION_22(v15);
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_6_0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = (int *)type metadata accessor for PluginAction();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v22, v23);
  OUTLINED_FUNCTION_6_0();
  uint64_t v26 = (void *)(v25 - v24);
  sub_1C9BEA758();
  swift_allocObject();
  sub_1C9BEA748();
  sub_1C995A400(&qword_1EA592C40, (void (*)(uint64_t))type metadata accessor for PluginAction);
  sub_1C9BEA738();
  if (v3)
  {
    sub_1C960B0D8(a1, a2);
    return swift_release();
  }
  else
  {
    swift_release();
    sub_1C960B0D8(a1, a2);
    uint64_t v28 = v26[1];
    uint64_t v36 = *v26;
    sub_1C962C9D4((uint64_t)v26 + v21[5], v20);
    uint64_t v29 = *(void **)((char *)v26 + v21[7]);
    uint64_t v30 = (void *)((char *)v26 + v21[8]);
    uint64_t v31 = v30[1];
    uint64_t v37 = *v30;
    sub_1C95FE5B0((uint64_t)v26 + v21[9], v38, &qword_1EBC78110);
    uint64_t v32 = *(void *)((char *)v26 + v21[6]);
    sub_1C95FE5B0((uint64_t)v26 + v21[10], v39, &qword_1EBC79488);
    char v35 = *((unsigned char *)v26 + v21[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v33 = v29;
    swift_bridgeObjectRetain();
    sub_1C995CE84((uint64_t)v26, (void (*)(void))type metadata accessor for PluginAction);
    *a3 = v36;
    a3[1] = v28;
    sub_1C9729480(v20, (uint64_t)a3 + v21[5]);
    *(void *)((char *)a3 + v21[6]) = v32;
    *(void *)((char *)a3 + v21[7]) = v29;
    id v34 = (void *)((char *)a3 + v21[8]);
    *id v34 = v37;
    v34[1] = v31;
    sub_1C9757DD4(v38, (uint64_t)a3 + v21[9], &qword_1EBC78110);
    uint64_t result = sub_1C9757DD4(v39, (uint64_t)a3 + v21[10], &qword_1EBC79488);
    *((unsigned char *)a3 + v21[11]) = v35;
  }
  return result;
}

uint64_t PluginAction.serialize()()
{
  sub_1C9BEA798();
  swift_allocObject();
  sub_1C9BEA788();
  sub_1C9BEA768();
  type metadata accessor for PluginAction();
  sub_1C995A400(&qword_1EA592C48, (void (*)(uint64_t))type metadata accessor for PluginAction);
  uint64_t v0 = sub_1C9BEA778();
  swift_release();
  return v0;
}

uint64_t sub_1C995A390@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return PluginAction.init(from:)(a1, a2);
}

uint64_t sub_1C995A3A8(void *a1)
{
  return PluginAction.encode(to:)(a1);
}

unint64_t sub_1C995A3C0()
{
  unint64_t result = qword_1EA592C28;
  if (!qword_1EA592C28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA592C28);
  }
  return result;
}

uint64_t sub_1C995A400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PluginAction(void *a1, void *a2, int *a3)
{
  if ((*(_DWORD *)(*((void *)a3 - 1) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C9BEAB08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  id v141 = v11;
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for Input(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = type metadata accessor for Parse(0);
  uint64_t v142 = v10;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v17 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
      goto LABEL_27;
    case 1u:
      uint64_t v18 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v14, v15, v18);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v14[*(int *)(v19 + 48)] = *(void *)&v15[*(int *)(v19 + 48)];
      sub_1C9BEC838();
    case 2u:
      uint64_t v20 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v20;
      *((void *)v14 + 2) = *((void *)v15 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      *(void *)uint64_t v14 = *(void *)v15;
      swift_unknownObjectRetain();
      goto LABEL_27;
    case 4u:
      uint64_t v21 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
      goto LABEL_27;
    case 5u:
      uint64_t v22 = *(void **)v15;
      *(void *)uint64_t v14 = *(void *)v15;
      id v23 = v22;
      goto LABEL_27;
    case 6u:
      uint64_t v24 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
      uint64_t v25 = type metadata accessor for USOParse();
      uint64_t v26 = *(int *)(v25 + 20);
      id v131 = &v14[v26];
      __dst = (int *)v25;
      uint64_t v27 = &v15[v26];
      uint64_t v28 = sub_1C9BEAE48();
      unint64_t v128 = v27;
      uint64_t v29 = (uint64_t)v27;
      uint64_t v30 = v28;
      if (__swift_getEnumTagSinglePayload(v29, 1, v28))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v131, v128, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v131, v128, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v30);
      }
      uint64_t v51 = __dst[6];
      uint64_t v52 = &v14[v51];
      uint64_t v53 = &v15[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      uint64_t v55 = __dst[7];
      uint64_t v56 = &v14[v55];
      uint64_t v57 = &v15[v55];
      v56[4] = v57[4];
      *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      uint64_t v32 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v14, v15, v32);
      uint64_t v33 = type metadata accessor for USOParse();
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v132 = &v14[v34];
      __dsta = (int *)v33;
      char v35 = &v15[v34];
      uint64_t v36 = sub_1C9BEAE48();
      unint64_t v129 = v35;
      uint64_t v37 = (uint64_t)v35;
      uint64_t v38 = v36;
      if (__swift_getEnumTagSinglePayload(v37, 1, v36))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v132, v129, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v132, v129, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v38);
      }
      uint64_t v58 = __dsta[6];
      uint64_t v59 = &v14[v58];
      uint64_t v60 = &v15[v58];
      uint64_t v134 = *((void *)v60 + 1);
      *(void *)uint64_t v59 = *(void *)v60;
      *((void *)v59 + 1) = v134;
      uint64_t v61 = __dsta[7];
      uint64_t v62 = &v14[v61];
      uint64_t v63 = &v15[v61];
      v62[4] = v63[4];
      *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
      id v64 = (int *)type metadata accessor for LinkParse();
      uint64_t v65 = v64[5];
      uint64_t v66 = &v14[v65];
      unint64_t v67 = &v15[v65];
      uint64_t v68 = *((void *)v67 + 1);
      *(void *)uint64_t v66 = *(void *)v67;
      *((void *)v66 + 1) = v68;
      uint64_t v69 = v64[6];
      uint64_t v70 = &v14[v69];
      uint64_t v71 = &v15[v69];
      uint64_t v72 = *((void *)v71 + 1);
      *(void *)uint64_t v70 = *(void *)v71;
      *((void *)v70 + 1) = v72;
      uint64_t v73 = v64[7];
      os_log_type_t v74 = &v14[v73];
      BOOL v75 = &v15[v73];
      uint64_t v76 = *((void *)v75 + 1);
      *(void *)os_log_type_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 8u:
      uint64_t v40 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v14, v15, v40);
      uint64_t v41 = type metadata accessor for NLRouterParse();
      uint64_t v42 = *(int *)(v41 + 20);
      id v43 = &v14[v42];
      uint64_t v44 = &v15[v42];
      uint64_t v45 = *((void *)v44 + 1);
      *(void *)id v43 = *(void *)v44;
      *((void *)v43 + 1) = v45;
      uint64_t v127 = v14;
      uint64_t v130 = v41;
      uint64_t v46 = *(int *)(v41 + 24);
      os_log_type_t v133 = &v15[v46];
      __dstb = &v14[v46];
      uint64_t v47 = type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      uint64_t v126 = v47;
      if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v47))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(__dstb, v133, *(void *)(*(void *)(v48 - 8) + 64));
        char v49 = v127;
      }
      else
      {
        uint64_t v77 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(__dstb, v133, v77);
        uint64_t v78 = *(int *)(v47 + 20);
        uint64_t v125 = &__dstb[v78];
        unint64_t v79 = &v133[v78];
        uint64_t v80 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v125, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v125, v79, v80);
          __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v80);
        }
        char v49 = v127;
        uint64_t v82 = *(int *)(v126 + 24);
        uint64_t v83 = &__dstb[v82];
        uint64_t v84 = &v133[v82];
        uint64_t v85 = *((void *)v84 + 1);
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = v85;
        uint64_t v86 = *(int *)(v126 + 28);
        id v87 = &__dstb[v86];
        id v88 = &v133[v86];
        v87[4] = v88[4];
        *(_DWORD *)id v87 = *(_DWORD *)v88;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v126);
      }
      uint64_t v89 = *(int *)(v130 + 28);
      os_log_type_t v90 = *(void **)&v15[v89];
      *(void *)((char *)v49 + v89) = v90;
      id v91 = v90;
      goto LABEL_27;
    case 9u:
      uint64_t v50 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v14, v15, v50);
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      break;
  }
  *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
  uint64_t v92 = v12[7];
  uint64_t v93 = &v8[v92];
  id v94 = &v9[v92];
  uint64_t v95 = *(void *)&v9[v92 + 24];
  swift_bridgeObjectRetain();
  if (v95)
  {
    uint64_t v96 = *((void *)v94 + 4);
    *((void *)v93 + 3) = v95;
    *((void *)v93 + 4) = v96;
    (**(void (***)(char *, char *, uint64_t))(v95 - 8))(v93, v94, v95);
  }
  else
  {
    long long v97 = *((_OWORD *)v94 + 1);
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    *((_OWORD *)v93 + 1) = v97;
    *((void *)v93 + 4) = *((void *)v94 + 4);
  }
  v8[v12[8]] = v9[v12[8]];
  uint64_t v98 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v99 = *(void **)((char *)a2 + v98);
  *(void *)((char *)a1 + v98) = v99;
  uint64_t v100 = a3[8];
  uint64_t v101 = a3[9];
  uint64_t v102 = (void *)((char *)a1 + v100);
  uint64_t v103 = (void *)((char *)a2 + v100);
  uint64_t v104 = v103[1];
  *uint64_t v102 = *v103;
  v102[1] = v104;
  uint64_t v105 = (void *)((char *)a1 + v101);
  id v106 = (void *)((char *)a2 + v101);
  uint64_t v107 = type metadata accessor for ActionParaphrase(0);
  swift_bridgeObjectRetain();
  id v108 = v99;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v107))
  {
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    uint64_t v110 = v106[1];
    *uint64_t v105 = *v106;
    v105[1] = v110;
    uint64_t v111 = *(int *)(v107 + 20);
    uint64_t v112 = (void *)((char *)v105 + v111);
    id v113 = (void *)((char *)v106 + v111);
    uint64_t v114 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v114))
    {
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
      memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      uint64_t v116 = v113[1];
      void *v112 = *v113;
      v112[1] = v116;
      uint64_t v117 = v113[3];
      v112[2] = v113[2];
      v112[3] = v117;
      uint64_t v118 = *(int *)(v114 + 24);
      __dstc = (char *)v113 + v118;
      uint64_t v140 = (char *)v112 + v118;
      uint64_t v119 = sub_1C9BEB0C8();
      id v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v135(v140, __dstc, v119);
      __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v114);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v107);
  }
  uint64_t v120 = a3[10];
  v121 = (char *)a1 + v120;
  uint64_t v122 = (char *)a2 + v120;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v120, 1, v142))
  {
    uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
    memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
  }
  else
  {
    v141(v121, v122, v142);
    __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v142);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t destroy for PluginAction(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C9BEAB08();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v36(v4, v5);
  uint64_t v6 = type metadata accessor for Input(0);
  uint64_t v7 = (void **)(v4 + *(int *)(v6 + 20));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v8 = sub_1C9BEC028();
      goto LABEL_22;
    case 1u:
      uint64_t v9 = sub_1C9BEC028();
      (*(void (**)(void **, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      uint64_t v8 = sub_1C9BEAC48();
      goto LABEL_22;
    case 5u:
      uint64_t v10 = *v7;
      goto LABEL_20;
    case 6u:
      uint64_t v11 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
      uint64_t v12 = (uint64_t)v7 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v13 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      goto LABEL_14;
    case 7u:
      uint64_t v14 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v14 - 8) + 8))(v7, v14);
      uint64_t v15 = (uint64_t)v7 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v16 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      uint64_t v17 = sub_1C9BEC928();
      (*(void (**)(void **, uint64_t))(*(void *)(v17 - 8) + 8))(v7, v17);
      uint64_t v18 = type metadata accessor for NLRouterParse();
      swift_bridgeObjectRelease();
      uint64_t v19 = (uint64_t)v7 + *(int *)(v18 + 24);
      uint64_t v20 = type metadata accessor for USOParse();
      if (!__swift_getEnumTagSinglePayload(v19, 1, v20))
      {
        uint64_t v21 = sub_1C9BEAF18();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v19, v21);
        uint64_t v22 = v19 + *(int *)(v20 + 20);
        uint64_t v23 = sub_1C9BEAE48();
        uint64_t v35 = v22;
        uint64_t v24 = v22;
        uint64_t v25 = v23;
        if (!__swift_getEnumTagSinglePayload(v24, 1, v23)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v35, v25);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v10 = *(void **)((char *)v7 + *(int *)(v18 + 28));
LABEL_20:

      break;
    case 9u:
      uint64_t v8 = sub_1C9BEC8F8();
LABEL_22:
      (*(void (**)(void **, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v4 + *(int *)(v6 + 28);
  if (*(void *)(v26 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v26);
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v27 = a1 + a2[9];
  uint64_t v28 = type metadata accessor for ActionParaphrase(0);
  if (!__swift_getEnumTagSinglePayload(v27, 1, v28))
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v27 + *(int *)(v28 + 20);
    uint64_t v30 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    if (!__swift_getEnumTagSinglePayload(v29, 1, v30))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v29 + *(int *)(v30 + 24);
      uint64_t v32 = sub_1C9BEB0C8();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
    }
  }
  uint64_t v33 = a1 + a2[10];
  uint64_t result = __swift_getEnumTagSinglePayload(v33, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v36)(v33, v5);
  }
  return result;
}

void *initializeWithCopy for PluginAction(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C9BEAB08();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  id v141 = v11;
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for Input(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  uint64_t v16 = type metadata accessor for Parse(0);
  uint64_t v142 = v10;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v17 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
      goto LABEL_25;
    case 1u:
      uint64_t v18 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v14, v15, v18);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v14[*(int *)(v19 + 48)] = *(void *)&v15[*(int *)(v19 + 48)];
      sub_1C9BEC838();
    case 2u:
      uint64_t v20 = *((void *)v15 + 1);
      *(void *)uint64_t v14 = *(void *)v15;
      *((void *)v14 + 1) = v20;
      *((void *)v14 + 2) = *((void *)v15 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 3u:
      *(void *)uint64_t v14 = *(void *)v15;
      swift_unknownObjectRetain();
      goto LABEL_25;
    case 4u:
      uint64_t v21 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v14, v15, v21);
      goto LABEL_25;
    case 5u:
      uint64_t v22 = *(void **)v15;
      *(void *)uint64_t v14 = *(void *)v15;
      id v23 = v22;
      goto LABEL_25;
    case 6u:
      uint64_t v24 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
      uint64_t v25 = type metadata accessor for USOParse();
      uint64_t v26 = *(int *)(v25 + 20);
      id v131 = &v14[v26];
      __dst = (int *)v25;
      uint64_t v27 = &v15[v26];
      uint64_t v28 = sub_1C9BEAE48();
      unint64_t v128 = v27;
      uint64_t v29 = (uint64_t)v27;
      uint64_t v30 = v28;
      if (__swift_getEnumTagSinglePayload(v29, 1, v28))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v131, v128, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(v131, v128, v30);
        __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v30);
      }
      uint64_t v51 = __dst[6];
      uint64_t v52 = &v14[v51];
      uint64_t v53 = &v15[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      uint64_t v55 = __dst[7];
      uint64_t v56 = &v14[v55];
      uint64_t v57 = &v15[v55];
      v56[4] = v57[4];
      *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 7u:
      uint64_t v32 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v14, v15, v32);
      uint64_t v33 = type metadata accessor for USOParse();
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v132 = &v14[v34];
      __dsta = (int *)v33;
      uint64_t v35 = &v15[v34];
      uint64_t v36 = sub_1C9BEAE48();
      unint64_t v129 = v35;
      uint64_t v37 = (uint64_t)v35;
      uint64_t v38 = v36;
      if (__swift_getEnumTagSinglePayload(v37, 1, v36))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v132, v129, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v132, v129, v38);
        __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v38);
      }
      uint64_t v58 = __dsta[6];
      uint64_t v59 = &v14[v58];
      uint64_t v60 = &v15[v58];
      uint64_t v134 = *((void *)v60 + 1);
      *(void *)uint64_t v59 = *(void *)v60;
      *((void *)v59 + 1) = v134;
      uint64_t v61 = __dsta[7];
      uint64_t v62 = &v14[v61];
      uint64_t v63 = &v15[v61];
      v62[4] = v63[4];
      *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
      id v64 = (int *)type metadata accessor for LinkParse();
      uint64_t v65 = v64[5];
      uint64_t v66 = &v14[v65];
      unint64_t v67 = &v15[v65];
      uint64_t v68 = *((void *)v67 + 1);
      *(void *)uint64_t v66 = *(void *)v67;
      *((void *)v66 + 1) = v68;
      uint64_t v69 = v64[6];
      uint64_t v70 = &v14[v69];
      uint64_t v71 = &v15[v69];
      uint64_t v72 = *((void *)v71 + 1);
      *(void *)uint64_t v70 = *(void *)v71;
      *((void *)v70 + 1) = v72;
      uint64_t v73 = v64[7];
      os_log_type_t v74 = &v14[v73];
      BOOL v75 = &v15[v73];
      uint64_t v76 = *((void *)v75 + 1);
      *(void *)os_log_type_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v76;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 8u:
      uint64_t v40 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v14, v15, v40);
      uint64_t v41 = type metadata accessor for NLRouterParse();
      uint64_t v42 = *(int *)(v41 + 20);
      id v43 = &v14[v42];
      uint64_t v44 = &v15[v42];
      uint64_t v45 = *((void *)v44 + 1);
      *(void *)id v43 = *(void *)v44;
      *((void *)v43 + 1) = v45;
      uint64_t v127 = v14;
      uint64_t v130 = v41;
      uint64_t v46 = *(int *)(v41 + 24);
      os_log_type_t v133 = &v15[v46];
      __dstb = &v14[v46];
      uint64_t v47 = type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      uint64_t v126 = v47;
      if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v47))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(__dstb, v133, *(void *)(*(void *)(v48 - 8) + 64));
        char v49 = v127;
      }
      else
      {
        uint64_t v77 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(__dstb, v133, v77);
        uint64_t v78 = *(int *)(v47 + 20);
        uint64_t v125 = &__dstb[v78];
        unint64_t v79 = &v133[v78];
        uint64_t v80 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v125, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v125, v79, v80);
          __swift_storeEnumTagSinglePayload((uint64_t)v125, 0, 1, v80);
        }
        char v49 = v127;
        uint64_t v82 = *(int *)(v126 + 24);
        uint64_t v83 = &__dstb[v82];
        uint64_t v84 = &v133[v82];
        uint64_t v85 = *((void *)v84 + 1);
        *(void *)uint64_t v83 = *(void *)v84;
        *((void *)v83 + 1) = v85;
        uint64_t v86 = *(int *)(v126 + 28);
        id v87 = &__dstb[v86];
        id v88 = &v133[v86];
        v87[4] = v88[4];
        *(_DWORD *)id v87 = *(_DWORD *)v88;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v126);
      }
      uint64_t v89 = *(int *)(v130 + 28);
      os_log_type_t v90 = *(void **)&v15[v89];
      *(void *)((char *)v49 + v89) = v90;
      id v91 = v90;
      goto LABEL_25;
    case 9u:
      uint64_t v50 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v14, v15, v50);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      break;
  }
  *(void *)&v8[v12[6]] = *(void *)&v9[v12[6]];
  uint64_t v92 = v12[7];
  uint64_t v93 = &v8[v92];
  id v94 = &v9[v92];
  uint64_t v95 = *(void *)&v9[v92 + 24];
  swift_bridgeObjectRetain();
  if (v95)
  {
    uint64_t v96 = *((void *)v94 + 4);
    *((void *)v93 + 3) = v95;
    *((void *)v93 + 4) = v96;
    (**(void (***)(char *, char *, uint64_t))(v95 - 8))(v93, v94, v95);
  }
  else
  {
    long long v97 = *((_OWORD *)v94 + 1);
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    *((_OWORD *)v93 + 1) = v97;
    *((void *)v93 + 4) = *((void *)v94 + 4);
  }
  v8[v12[8]] = v9[v12[8]];
  uint64_t v98 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v99 = *(void **)((char *)a2 + v98);
  *(void *)((char *)a1 + v98) = v99;
  uint64_t v100 = a3[8];
  uint64_t v101 = a3[9];
  uint64_t v102 = (void *)((char *)a1 + v100);
  uint64_t v103 = (void *)((char *)a2 + v100);
  uint64_t v104 = v103[1];
  *uint64_t v102 = *v103;
  v102[1] = v104;
  uint64_t v105 = (void *)((char *)a1 + v101);
  id v106 = (void *)((char *)a2 + v101);
  uint64_t v107 = type metadata accessor for ActionParaphrase(0);
  swift_bridgeObjectRetain();
  id v108 = v99;
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v107))
  {
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    uint64_t v110 = v106[1];
    *uint64_t v105 = *v106;
    v105[1] = v110;
    uint64_t v111 = *(int *)(v107 + 20);
    uint64_t v112 = (void *)((char *)v105 + v111);
    id v113 = (void *)((char *)v106 + v111);
    uint64_t v114 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v114))
    {
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
      memcpy(v112, v113, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      uint64_t v116 = v113[1];
      void *v112 = *v113;
      v112[1] = v116;
      uint64_t v117 = v113[3];
      v112[2] = v113[2];
      v112[3] = v117;
      uint64_t v118 = *(int *)(v114 + 24);
      __dstc = (char *)v113 + v118;
      uint64_t v140 = (char *)v112 + v118;
      uint64_t v119 = sub_1C9BEB0C8();
      id v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v135(v140, __dstc, v119);
      __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v114);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v107);
  }
  uint64_t v120 = a3[10];
  v121 = (char *)a1 + v120;
  uint64_t v122 = (char *)a2 + v120;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v120, 1, v142))
  {
    uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
    memcpy(v121, v122, *(void *)(*(void *)(v123 - 8) + 64));
  }
  else
  {
    v141(v121, v122, v142);
    __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v142);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *assignWithCopy for PluginAction(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C9BEAB08();
  uint64_t v146 = *(void *)(v9 - 8);
  id v145 = *(void (**)(char *, char *, uint64_t))(v146 + 24);
  v145(v7, v8, v9);
  uint64_t v10 = type metadata accessor for Input(0);
  uint64_t v11 = (int *)v10;
  if (a1 != a2)
  {
    uint64_t v147 = v9;
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    sub_1C995CE84((uint64_t)&v7[v12], (void (*)(void))type metadata accessor for Parse);
    uint64_t v15 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v16 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
        goto LABEL_26;
      case 1u:
        uint64_t v17 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v13[*(int *)(v18 + 48)] = *(void *)&v14[*(int *)(v18 + 48)];
        sub_1C9BEC838();
      case 2u:
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = *((void *)v14 + 1);
        *((void *)v13 + 2) = *((void *)v14 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *(void *)uint64_t v13 = *(void *)v14;
        swift_unknownObjectRetain();
        goto LABEL_26;
      case 4u:
        uint64_t v19 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
        goto LABEL_26;
      case 5u:
        uint64_t v20 = *(void **)v14;
        *(void *)uint64_t v13 = *(void *)v14;
        id v21 = v20;
        goto LABEL_26;
      case 6u:
        uint64_t v22 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v13, v14, v22);
        os_log_type_t v133 = (int *)type metadata accessor for USOParse();
        uint64_t v23 = v133[5];
        __dst = &v13[v23];
        uint64_t v24 = &v14[v23];
        uint64_t v25 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(__dst, v24, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
        }
        uint64_t v42 = v133[6];
        id v43 = &v13[v42];
        uint64_t v44 = &v14[v42];
        *(void *)id v43 = *(void *)v44;
        *((void *)v43 + 1) = *((void *)v44 + 1);
        uint64_t v45 = v133[7];
        uint64_t v46 = &v13[v45];
        uint64_t v47 = &v14[v45];
        int v48 = *(_DWORD *)v47;
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = v48;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 7u:
        uint64_t v27 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v13, v14, v27);
        uint64_t v134 = (int *)type metadata accessor for USOParse();
        uint64_t v28 = v134[5];
        __dsta = &v13[v28];
        uint64_t v29 = &v14[v28];
        uint64_t v30 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(__dsta, v29, v30);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v30);
        }
        uint64_t v49 = v134[6];
        uint64_t v50 = &v13[v49];
        uint64_t v51 = &v14[v49];
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = *((void *)v51 + 1);
        uint64_t v52 = v134[7];
        uint64_t v53 = &v13[v52];
        uint64_t v54 = &v14[v52];
        int v55 = *(_DWORD *)v54;
        v53[4] = v54[4];
        *(_DWORD *)uint64_t v53 = v55;
        uint64_t v56 = (int *)type metadata accessor for LinkParse();
        uint64_t v57 = v56[5];
        uint64_t v58 = &v13[v57];
        uint64_t v59 = &v14[v57];
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = *((void *)v59 + 1);
        uint64_t v60 = v56[6];
        uint64_t v61 = &v13[v60];
        uint64_t v62 = &v14[v60];
        *(void *)uint64_t v61 = *(void *)v62;
        *((void *)v61 + 1) = *((void *)v62 + 1);
        uint64_t v63 = v56[7];
        id v64 = &v13[v63];
        uint64_t v65 = &v14[v63];
        *(void *)id v64 = *(void *)v65;
        *((void *)v64 + 1) = *((void *)v65 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 8u:
        uint64_t v32 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v13, v14, v32);
        uint64_t v33 = type metadata accessor for NLRouterParse();
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = &v13[v34];
        uint64_t v36 = &v14[v34];
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = *((void *)v36 + 1);
        uint64_t v135 = v33;
        uint64_t v37 = *(int *)(v33 + 24);
        __dstb = &v13[v37];
        uint64_t v38 = &v14[v37];
        uint64_t v39 = type metadata accessor for USOParse();
        swift_bridgeObjectRetain();
        uint64_t v136 = v39;
        if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(__dstb, v38, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v66 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(__dstb, v38, v66);
          uint64_t v67 = *(int *)(v39 + 20);
          id v131 = &__dstb[v67];
          uint64_t v132 = v38;
          uint64_t v68 = &v38[v67];
          uint64_t v69 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v68, 1, v69))
          {
            uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v131, v68, *(void *)(*(void *)(v70 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v131, v68, v69);
            __swift_storeEnumTagSinglePayload((uint64_t)v131, 0, 1, v69);
          }
          uint64_t v71 = *(int *)(v136 + 24);
          uint64_t v72 = &__dstb[v71];
          uint64_t v73 = &v132[v71];
          *(void *)uint64_t v72 = *(void *)v73;
          *((void *)v72 + 1) = *((void *)v73 + 1);
          uint64_t v74 = *(int *)(v136 + 28);
          BOOL v75 = &__dstb[v74];
          uint64_t v76 = &v132[v74];
          int v77 = *(_DWORD *)v76;
          v75[4] = v76[4];
          *(_DWORD *)BOOL v75 = v77;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v136);
        }
        uint64_t v78 = *(int *)(v135 + 28);
        unint64_t v79 = *(void **)&v14[v78];
        *(void *)&v13[v78] = v79;
        id v80 = v79;
        goto LABEL_26;
      case 9u:
        uint64_t v41 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v13, v14, v41);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        break;
    }
    uint64_t v9 = v147;
  }
  *(void *)&v7[v11[6]] = *(void *)&v8[v11[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = v11[7];
  uint64_t v82 = (uint64_t)&v7[v81];
  uint64_t v83 = &v8[v81];
  uint64_t v84 = *(void *)&v8[v81 + 24];
  if (*(void *)&v7[v81 + 24])
  {
    if (v84)
    {
      __swift_assign_boxed_opaque_existential_1((void *)v82, v83);
      goto LABEL_35;
    }
    __swift_destroy_boxed_opaque_existential_1(v82);
  }
  else if (v84)
  {
    *(void *)(v82 + 24) = v84;
    *(void *)(v82 + 32) = *((void *)v83 + 4);
    (**(void (***)(uint64_t, char *))(v84 - 8))(v82, v83);
    goto LABEL_35;
  }
  long long v85 = *(_OWORD *)v83;
  long long v86 = *((_OWORD *)v83 + 1);
  *(void *)(v82 + 32) = *((void *)v83 + 4);
  *(_OWORD *)uint64_t v82 = v85;
  *(_OWORD *)(v82 + 16) = v86;
LABEL_35:
  v7[v11[8]] = v8[v11[8]];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = a3[7];
  id v88 = *(void **)((char *)a1 + v87);
  uint64_t v89 = *(void **)((char *)a2 + v87);
  *(void *)((char *)a1 + v87) = v89;
  id v90 = v89;

  uint64_t v91 = a3[8];
  uint64_t v92 = (void *)((char *)a1 + v91);
  uint64_t v93 = (void *)((char *)a2 + v91);
  void *v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[9];
  uint64_t v95 = (void *)((char *)a1 + v94);
  uint64_t v96 = (void *)((char *)a2 + v94);
  uint64_t v97 = type metadata accessor for ActionParaphrase(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v95, 1, v97);
  int v99 = __swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97);
  if (EnumTagSinglePayload)
  {
    if (!v99)
    {
      *uint64_t v95 = *v96;
      v95[1] = v96[1];
      uint64_t v100 = *(int *)(v97 + 20);
      uint64_t v101 = (void *)((char *)v95 + v100);
      uint64_t v102 = (void *)((char *)v96 + v100);
      uint64_t v103 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v103))
      {
        uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
        memcpy(v101, v102, *(void *)(*(void *)(v104 - 8) + 64));
      }
      else
      {
        void *v101 = *v102;
        v101[1] = v102[1];
        v101[2] = v102[2];
        v101[3] = v102[3];
        uint64_t v118 = *(int *)(v103 + 24);
        __dstd = (char *)v102 + v118;
        uint64_t v144 = (char *)v101 + v118;
        uint64_t v119 = sub_1C9BEB0C8();
        v137 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v137(v144, __dstd, v119);
        __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v103);
      }
      uint64_t v116 = (uint64_t)v95;
      uint64_t v117 = v97;
      goto LABEL_48;
    }
    goto LABEL_41;
  }
  if (v99)
  {
    sub_1C995CE84((uint64_t)v95, (void (*)(void))type metadata accessor for ActionParaphrase);
LABEL_41:
    size_t v105 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110) - 8) + 64);
    id v106 = v95;
    uint64_t v107 = v96;
LABEL_42:
    memcpy(v106, v107, v105);
    goto LABEL_49;
  }
  *uint64_t v95 = *v96;
  v95[1] = v96[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v108 = *(int *)(v97 + 20);
  uint64_t v109 = (void *)((char *)v95 + v108);
  uint64_t v110 = (void *)((char *)v96 + v108);
  uint64_t v111 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  int v112 = __swift_getEnumTagSinglePayload((uint64_t)v109, 1, v111);
  int v113 = __swift_getEnumTagSinglePayload((uint64_t)v110, 1, v111);
  if (v112)
  {
    if (!v113)
    {
      *uint64_t v109 = *v110;
      v109[1] = v110[1];
      v109[2] = v110[2];
      v109[3] = v110[3];
      uint64_t v114 = *(int *)(v111 + 24);
      uint64_t v148 = (char *)v109 + v114;
      uint64_t v143 = (char *)v110 + v114;
      uint64_t v115 = sub_1C9BEB0C8();
      __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dstc(v148, v143, v115);
      uint64_t v116 = (uint64_t)v109;
      uint64_t v117 = v111;
LABEL_48:
      __swift_storeEnumTagSinglePayload(v116, 0, 1, v117);
      goto LABEL_49;
    }
    goto LABEL_59;
  }
  if (v113)
  {
    sub_1C995CE84((uint64_t)v109, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
LABEL_59:
    size_t v105 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0) - 8) + 64);
    id v106 = v109;
    uint64_t v107 = v110;
    goto LABEL_42;
  }
  *uint64_t v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v109[2] = v110[2];
  v109[3] = v110[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v127 = *(int *)(v111 + 24);
  unint64_t v128 = (char *)v109 + v127;
  unint64_t v129 = (char *)v110 + v127;
  uint64_t v130 = sub_1C9BEB0C8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 24))(v128, v129, v130);
LABEL_49:
  uint64_t v120 = a3[10];
  v121 = (char *)a1 + v120;
  uint64_t v122 = (char *)a2 + v120;
  int v123 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v120, 1, v9);
  int v124 = __swift_getEnumTagSinglePayload((uint64_t)v122, 1, v9);
  if (!v123)
  {
    if (!v124)
    {
      v145(v121, v122, v9);
      goto LABEL_55;
    }
    (*(void (**)(char *, uint64_t))(v146 + 8))(v121, v9);
    goto LABEL_54;
  }
  if (v124)
  {
LABEL_54:
    uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
    memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v121, v122, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v9);
LABEL_55:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1C995CE84(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

_OWORD *initializeWithTake for PluginAction(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C9BEAB08();
  uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v95(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for Input(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v15 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      goto LABEL_23;
    case 1u:
      uint64_t v16 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v12, v13, v16);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&v12[*(int *)(v17 + 48)] = *(void *)&v13[*(int *)(v17 + 48)];
      goto LABEL_23;
    case 4u:
      uint64_t v18 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
      goto LABEL_23;
    case 6u:
      uint64_t v93 = v9;
      uint64_t v19 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v12, v13, v19);
      uint64_t v20 = type metadata accessor for USOParse();
      uint64_t v21 = *(int *)(v20 + 20);
      uint64_t v87 = v20;
      __dst = &v12[v21];
      uint64_t v22 = &v13[v21];
      uint64_t v23 = sub_1C9BEAE48();
      __src = v22;
      uint64_t v24 = (uint64_t)v22;
      uint64_t v25 = v23;
      if (__swift_getEnumTagSinglePayload(v24, 1, v23))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(__dst, __src, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(__dst, __src, v25);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
      }
      *(_OWORD *)&v12[*(int *)(v87 + 24)] = *(_OWORD *)&v13[*(int *)(v87 + 24)];
      uint64_t v40 = *(int *)(v87 + 28);
      uint64_t v41 = &v12[v40];
      uint64_t v42 = &v13[v40];
      v41[4] = v42[4];
      *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
      goto LABEL_17;
    case 7u:
      uint64_t v93 = v9;
      uint64_t v27 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v12, v13, v27);
      uint64_t v28 = type metadata accessor for USOParse();
      uint64_t v29 = *(int *)(v28 + 20);
      uint64_t v88 = v28;
      __dsta = &v12[v29];
      uint64_t v30 = &v13[v29];
      uint64_t v31 = sub_1C9BEAE48();
      __srca = v30;
      uint64_t v32 = (uint64_t)v30;
      uint64_t v33 = v31;
      if (__swift_getEnumTagSinglePayload(v32, 1, v31))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(__dsta, __srca, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(__dsta, __srca, v33);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v33);
      }
      *(_OWORD *)&v12[*(int *)(v88 + 24)] = *(_OWORD *)&v13[*(int *)(v88 + 24)];
      uint64_t v43 = *(int *)(v88 + 28);
      uint64_t v44 = &v12[v43];
      uint64_t v45 = &v13[v43];
      v44[4] = v45[4];
      *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
      uint64_t v46 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&v12[v46[5]] = *(_OWORD *)&v13[v46[5]];
      *(_OWORD *)&v12[v46[6]] = *(_OWORD *)&v13[v46[6]];
      *(_OWORD *)&v12[v46[7]] = *(_OWORD *)&v13[v46[7]];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      uint64_t v9 = v93;
      break;
    case 8u:
      uint64_t v35 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v12, v13, v35);
      uint64_t v36 = type metadata accessor for NLRouterParse();
      *(_OWORD *)&v12[*(int *)(v36 + 20)] = *(_OWORD *)&v13[*(int *)(v36 + 20)];
      __srcb = (int *)v36;
      uint64_t v37 = *(int *)(v36 + 24);
      __dstb = &v12[v37];
      uint64_t v89 = &v13[v37];
      uint64_t v83 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v89, 1, (uint64_t)v83))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(__dstb, v89, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v94 = v9;
        uint64_t v47 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(__dstb, v89, v47);
        uint64_t v48 = v83[5];
        uint64_t v82 = &__dstb[v48];
        uint64_t v49 = &v89[v48];
        uint64_t v50 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
        {
          uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v82, v49, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v82, v49, v50);
          __swift_storeEnumTagSinglePayload((uint64_t)v82, 0, 1, v50);
        }
        *(_OWORD *)&__dstb[v83[6]] = *(_OWORD *)&v89[v83[6]];
        uint64_t v52 = v83[7];
        uint64_t v53 = &__dstb[v52];
        uint64_t v54 = &v89[v52];
        v53[4] = v54[4];
        *(_DWORD *)uint64_t v53 = *(_DWORD *)v54;
        __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v83);
        uint64_t v9 = v94;
      }
      *(void *)&v12[__srcb[7]] = *(void *)&v13[__srcb[7]];
      goto LABEL_23;
    case 9u:
      uint64_t v39 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v12, v13, v39);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      break;
  }
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  uint64_t v55 = v10[7];
  uint64_t v56 = &v7[v55];
  uint64_t v57 = &v8[v55];
  long long v58 = *((_OWORD *)v57 + 1);
  *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  *((_OWORD *)v56 + 1) = v58;
  *((void *)v56 + 4) = *((void *)v57 + 4);
  v7[v10[8]] = v8[v10[8]];
  uint64_t v59 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v59) = *(void *)((char *)a2 + v59);
  uint64_t v60 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v61 = (_OWORD *)((char *)a1 + v60);
  uint64_t v62 = (_OWORD *)((char *)a2 + v60);
  uint64_t v63 = type metadata accessor for ActionParaphrase(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
    memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    _OWORD *v61 = *v62;
    uint64_t v65 = *(int *)(v63 + 20);
    uint64_t v66 = (_OWORD *)((char *)v61 + v65);
    uint64_t v67 = (_OWORD *)((char *)v62 + v65);
    uint64_t v68 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v67, 1, v68))
    {
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
      memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      long long v70 = v67[1];
      _OWORD *v66 = *v67;
      v66[1] = v70;
      uint64_t v71 = *(int *)(v68 + 24);
      uint64_t v72 = v9;
      uint64_t v73 = (char *)v66 + v71;
      uint64_t v74 = (char *)v67 + v71;
      uint64_t v75 = sub_1C9BEB0C8();
      uint64_t v76 = v73;
      uint64_t v9 = v72;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v76, v74, v75);
      __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, v68);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
  }
  uint64_t v77 = a3[10];
  uint64_t v78 = (char *)a1 + v77;
  unint64_t v79 = (char *)a2 + v77;
  if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v77, 1, v9))
  {
    uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    v95(v78, v79, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v78, 0, 1, v9);
  }
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

void *assignWithTake for PluginAction(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C9BEAB08();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v128 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v128(v8, v9, v10);
  uint64_t v12 = type metadata accessor for Input(0);
  uint64_t v13 = (int *)v12;
  if (a1 != a2)
  {
    uint64_t v129 = v11;
    uint64_t v14 = *(int *)(v12 + 20);
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    sub_1C995CE84((uint64_t)&v8[v14], (void (*)(void))type metadata accessor for Parse);
    uint64_t v17 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v18 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
        goto LABEL_23;
      case 1u:
        uint64_t v19 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v15, v16, v19);
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v15[*(int *)(v20 + 48)] = *(void *)&v16[*(int *)(v20 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v21 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v15, v16, v21);
        goto LABEL_23;
      case 6u:
        uint64_t v22 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v15, v16, v22);
        uint64_t v23 = type metadata accessor for USOParse();
        uint64_t v24 = *(int *)(v23 + 20);
        uint64_t v122 = v23;
        __dst = &v15[v24];
        uint64_t v25 = &v16[v24];
        uint64_t v26 = sub_1C9BEAE48();
        __src = v25;
        uint64_t v27 = (uint64_t)v25;
        uint64_t v28 = v26;
        if (__swift_getEnumTagSinglePayload(v27, 1, v26))
        {
          uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, __src, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(__dst, __src, v28);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        *(_OWORD *)&v15[*(int *)(v122 + 24)] = *(_OWORD *)&v16[*(int *)(v122 + 24)];
        uint64_t v43 = *(int *)(v122 + 28);
        uint64_t v44 = &v15[v43];
        uint64_t v45 = &v16[v43];
        v44[4] = v45[4];
        *(_DWORD *)uint64_t v44 = *(_DWORD *)v45;
        goto LABEL_23;
      case 7u:
        uint64_t v30 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v15, v16, v30);
        uint64_t v31 = type metadata accessor for USOParse();
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v123 = v31;
        __dsta = &v15[v32];
        uint64_t v33 = &v16[v32];
        uint64_t v34 = sub_1C9BEAE48();
        __srca = v33;
        uint64_t v35 = (uint64_t)v33;
        uint64_t v36 = v34;
        if (__swift_getEnumTagSinglePayload(v35, 1, v34))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, __srca, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(__dsta, __srca, v36);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v36);
        }
        *(_OWORD *)&v15[*(int *)(v123 + 24)] = *(_OWORD *)&v16[*(int *)(v123 + 24)];
        uint64_t v46 = *(int *)(v123 + 28);
        uint64_t v47 = &v15[v46];
        uint64_t v48 = &v16[v46];
        v47[4] = v48[4];
        *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
        uint64_t v49 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v15[v49[5]] = *(_OWORD *)&v16[v49[5]];
        *(_OWORD *)&v15[v49[6]] = *(_OWORD *)&v16[v49[6]];
        *(_OWORD *)&v15[v49[7]] = *(_OWORD *)&v16[v49[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v118 = v10;
        uint64_t v38 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v15, v16, v38);
        uint64_t v39 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v15[*(int *)(v39 + 20)] = *(_OWORD *)&v16[*(int *)(v39 + 20)];
        __srcb = (int *)v39;
        uint64_t v40 = *(int *)(v39 + 24);
        __dstb = &v15[v40];
        int v124 = &v16[v40];
        uint64_t v117 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, (uint64_t)v117))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(__dstb, v124, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v50 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(__dstb, v124, v50);
          uint64_t v51 = v117[5];
          uint64_t v116 = &__dstb[v51];
          uint64_t v52 = &v124[v51];
          uint64_t v53 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v52, 1, v53))
          {
            uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v116, v52, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v116, v52, v53);
            __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v53);
          }
          uint64_t v10 = v118;
          *(_OWORD *)&__dstb[v117[6]] = *(_OWORD *)&v124[v117[6]];
          uint64_t v55 = v117[7];
          uint64_t v56 = &__dstb[v55];
          uint64_t v57 = &v124[v55];
          v56[4] = v57[4];
          *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v117);
        }
        *(void *)&v15[__srcb[7]] = *(void *)&v16[__srcb[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v42 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v15, v16, v42);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        break;
    }
    uint64_t v11 = v129;
  }
  *(void *)&v8[v13[6]] = *(void *)&v9[v13[6]];
  swift_bridgeObjectRelease();
  uint64_t v58 = v13[7];
  uint64_t v59 = (uint64_t)&v8[v58];
  uint64_t v60 = &v9[v58];
  if (*(void *)&v8[v58 + 24]) {
    __swift_destroy_boxed_opaque_existential_1(v59);
  }
  long long v61 = *((_OWORD *)v60 + 1);
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  *(_OWORD *)(v59 + 16) = v61;
  *(void *)(v59 + 32) = *((void *)v60 + 4);
  v8[v13[8]] = v9[v13[8]];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[7];
  uint64_t v63 = *(void **)((char *)a1 + v62);
  *(void *)((char *)a1 + v62) = *(void *)((char *)a2 + v62);

  uint64_t v64 = a3[8];
  uint64_t v65 = (void *)((char *)a1 + v64);
  uint64_t v66 = (void *)((char *)a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  void *v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[9];
  uint64_t v70 = (uint64_t)a1 + v69;
  uint64_t v71 = (uint64_t)a2 + v69;
  uint64_t v72 = type metadata accessor for ActionParaphrase(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v70, 1, v72);
  int v74 = __swift_getEnumTagSinglePayload(v71, 1, v72);
  if (EnumTagSinglePayload)
  {
    if (!v74)
    {
      *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
      uint64_t v75 = *(int *)(v72 + 20);
      uint64_t v76 = (_OWORD *)(v70 + v75);
      uint64_t v77 = (_OWORD *)(v71 + v75);
      uint64_t v78 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0);
        memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        long long v97 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v97;
        uint64_t v98 = *(int *)(v78 + 24);
        uint64_t v130 = v11;
        int v99 = (char *)v76 + v98;
        uint64_t v100 = (char *)v77 + v98;
        uint64_t v101 = sub_1C9BEB0C8();
        uint64_t v102 = v99;
        uint64_t v11 = v130;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v102, v100, v101);
        __swift_storeEnumTagSinglePayload((uint64_t)v76, 0, 1, v78);
      }
      uint64_t v95 = v70;
      uint64_t v96 = v72;
      goto LABEL_40;
    }
    goto LABEL_33;
  }
  if (v74)
  {
    sub_1C995CE84(v70, (void (*)(void))type metadata accessor for ActionParaphrase);
LABEL_33:
    size_t v80 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110) - 8) + 64);
    uint64_t v81 = (void *)v70;
    uint64_t v82 = (const void *)v71;
LABEL_34:
    memcpy(v81, v82, v80);
    goto LABEL_41;
  }
  uint64_t v83 = *(void *)(v71 + 8);
  *(void *)uint64_t v70 = *(void *)v71;
  *(void *)(v70 + 8) = v83;
  swift_bridgeObjectRelease();
  uint64_t v84 = *(int *)(v72 + 20);
  uint64_t v85 = v70 + v84;
  uint64_t v86 = v71 + v84;
  uint64_t v87 = type metadata accessor for ActionParaphrase.VerbEntityParaphrase(0);
  int v88 = __swift_getEnumTagSinglePayload(v85, 1, v87);
  int v89 = __swift_getEnumTagSinglePayload(v86, 1, v87);
  if (v88)
  {
    if (!v89)
    {
      long long v90 = *(_OWORD *)(v86 + 16);
      *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
      *(_OWORD *)(v85 + 16) = v90;
      uint64_t v91 = *(int *)(v87 + 24);
      uint64_t v92 = v85 + v91;
      uint64_t v93 = v86 + v91;
      uint64_t v94 = sub_1C9BEB0C8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
      uint64_t v95 = v85;
      uint64_t v96 = v87;
LABEL_40:
      __swift_storeEnumTagSinglePayload(v95, 0, 1, v96);
      goto LABEL_41;
    }
    goto LABEL_51;
  }
  if (v89)
  {
    sub_1C995CE84(v85, (void (*)(void))type metadata accessor for ActionParaphrase.VerbEntityParaphrase);
LABEL_51:
    size_t v80 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E0A0) - 8) + 64);
    uint64_t v81 = (void *)v85;
    uint64_t v82 = (const void *)v86;
    goto LABEL_34;
  }
  uint64_t v110 = *(void *)(v86 + 8);
  *(void *)uint64_t v85 = *(void *)v86;
  *(void *)(v85 + 8) = v110;
  swift_bridgeObjectRelease();
  uint64_t v111 = *(void *)(v86 + 24);
  *(void *)(v85 + 16) = *(void *)(v86 + 16);
  *(void *)(v85 + 24) = v111;
  swift_bridgeObjectRelease();
  uint64_t v112 = *(int *)(v87 + 24);
  uint64_t v113 = v85 + v112;
  uint64_t v114 = v86 + v112;
  uint64_t v115 = sub_1C9BEB0C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 40))(v113, v114, v115);
LABEL_41:
  uint64_t v103 = a3[10];
  uint64_t v104 = (char *)a1 + v103;
  size_t v105 = (char *)a2 + v103;
  int v106 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v103, 1, v10);
  int v107 = __swift_getEnumTagSinglePayload((uint64_t)v105, 1, v10);
  if (!v106)
  {
    if (!v107)
    {
      v128(v104, v105, v10);
      goto LABEL_47;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v104, v10);
    goto LABEL_46;
  }
  if (v107)
  {
LABEL_46:
    uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
    memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v104, v105, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v10);
LABEL_47:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  return a1;
}

uint64_t sub_1C995E420(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Input(0);
    OUTLINED_FUNCTION_1_2();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
      OUTLINED_FUNCTION_1_2();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[9];
      }
      else
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        uint64_t v11 = a3[10];
      }
    }
    return __swift_getEnumTagSinglePayload(a1 + v11, a2, v10);
  }
}

uint64_t sub_1C995E4F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Input(0);
    OUTLINED_FUNCTION_1_2();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78110);
      OUTLINED_FUNCTION_1_2();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[9];
      }
      else
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
        uint64_t v11 = a4[10];
      }
    }
    return __swift_storeEnumTagSinglePayload(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C995E5CC()
{
  type metadata accessor for Input(319);
  if (v0 <= 0x3F)
  {
    sub_1C995E730(319, &qword_1EBC790D0, (void (*)(uint64_t))type metadata accessor for ActionParaphrase);
    if (v1 <= 0x3F)
    {
      sub_1C995E730(319, (unint64_t *)&qword_1EBC78ED0, MEMORY[0x1E4F27990]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1C995E730(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C9BEDEE8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PluginAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C995E850);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginAction.CodingKeys()
{
  return &type metadata for PluginAction.CodingKeys;
}

unint64_t sub_1C995E88C()
{
  unint64_t result = qword_1EA592C50;
  if (!qword_1EA592C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592C50);
  }
  return result;
}

unint64_t sub_1C995E8DC()
{
  unint64_t result = qword_1EA592C58;
  if (!qword_1EA592C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592C58);
  }
  return result;
}

unint64_t sub_1C995E92C()
{
  unint64_t result = qword_1EA592C60;
  if (!qword_1EA592C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592C60);
  }
  return result;
}

void OUTLINED_FUNCTION_4_65()
{
  *(void *)(v4 + v5[6]) = v0;
  *(void *)(v4 + v5[7]) = v3;
  unsigned int v6 = (void *)(v4 + v5[8]);
  *unsigned int v6 = v2;
  v6[1] = v1;
}

uint64_t OUTLINED_FUNCTION_9_52()
{
  return sub_1C9BEE518();
}

uint64_t OUTLINED_FUNCTION_11_61(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v6, 1, 1, a1);
  *uint64_t v4 = v3;
  v4[1] = v2;
  uint64_t v7 = (uint64_t)v4 + *(int *)(v5 + 20);
  return sub_1C9729480(v1, v7);
}

void OUTLINED_FUNCTION_12_50()
{
  *(void *)(v0 + *(int *)(v1 + 28)) = 0;
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 32));
  *uint64_t v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_17_40@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t OUTLINED_FUNCTION_18_41()
{
  return type metadata accessor for PluginAction();
}

uint64_t OUTLINED_FUNCTION_19_41()
{
  return sub_1C9BEE478();
}

uint64_t OUTLINED_FUNCTION_21_30(uint64_t a1)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  return sub_1C9729480(v1, v4);
}

uint64_t OUTLINED_FUNCTION_23_33()
{
  return 0x49676E6967676F6CLL;
}

uint64_t OUTLINED_FUNCTION_24_31()
{
  return type metadata accessor for PluginAction();
}

uint64_t sub_1C995EB14(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C97BFD98;
  return PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(a1, a2);
}

uint64_t PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C995EBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = *(void *)(v14 + 48);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 56) = v16;
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 32);
  *(void *)(v16 + 32) = v15;
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v14 + 64) = v17;
  void *v17 = v14;
  v17[1] = sub_1C995ECDC;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v18, v19, v20, 0xD000000000000016, v21, v22, v16, v23, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C995ECDC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 72) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C995EDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592D78);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a4 + 8))(sub_1C9960BD8, v12, a3, a4);
  return swift_release();
}

uint64_t sub_1C995EF28(uint64_t a1)
{
  return sub_1C995EDC0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C995EF34()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  __swift_project_boxed_opaque_existential_1(v0 + 4, v1);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1) == 0) {
    return 0;
  }
  uint64_t v3 = *(void *)((char *)v0
                 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag
                 + 24);
  uint64_t v4 = *(void *)((char *)v0
                 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag
                 + 32);
  __swift_project_boxed_opaque_existential_1((void *)((char *)v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1;
}

uint64_t PostPersonalDomainActivityNotificationFlow.__allocating_init(strategy:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  PostPersonalDomainActivityNotificationFlow.init(strategy:)(a1);
  return v2;
}

uint64_t PostPersonalDomainActivityNotificationFlow.init(strategy:)(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_3_59();
  sub_1C95FD654(a1, (uint64_t)v10);
  uint64_t v7 = swift_allocObject();
  sub_1C95FD5D8(v10, v7 + 16);
  *(void *)(v1 + 16) = &unk_1EA592D08;
  *(void *)(v1 + 24) = v7;
  if (qword_1EA588108 != -1) {
    swift_once();
  }
  sub_1C95FD654((uint64_t)&qword_1EA592C68, (uint64_t)v10);
  sub_1C95FD5D8(v10, v1 + 32);
  if (qword_1EA588110 != -1) {
    swift_once();
  }
  uint64_t v8 = __swift_project_value_buffer(v4, (uint64_t)qword_1EA592C90);
  sub_1C99603C4(v8, v2);
  sub_1C996042C(v2, v1 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo);
  if (qword_1EA588118 != -1) {
    swift_once();
  }
  sub_1C95FD654((uint64_t)&qword_1EA592CA8, (uint64_t)v10);
  sub_1C95FD5D8(v10, v1 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService);
  if (qword_1EA588120 != -1) {
    swift_once();
  }
  sub_1C95FD654((uint64_t)&byte_1EA592CD0, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1C95FD5D8(v10, v1 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag);
  return v1;
}

uint64_t sub_1C995F228(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
  return MEMORY[0x1F4188298](sub_1C995F248, 0, 0);
}

uint64_t sub_1C995F248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = v14[4];
  uint64_t v16 = swift_task_alloc();
  v14[5] = v16;
  *(void *)(v16 + 16) = v15;
  uint64_t v17 = (void *)swift_task_alloc();
  v14[6] = v17;
  void *v17 = v14;
  v17[1] = sub_1C995F344;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v18, v19, v20, 0x7274732874696E69, 0xEF293A7967657461, v21, v16, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C995F344()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 56) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C995F428()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C995F444()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C995F47C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_5(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C97C66C0;
  return sub_1C995F228(v0 + 16);
}

uint64_t sub_1C995F508(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592D78);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v8 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, v8, v4);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1C9960BD8, v12, v9, v10);
  return swift_release();
}

uint64_t sub_1C995F678(void *a1, uint64_t a2, char a3)
{
  if (a3)
  {
    id v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592D78);
    return sub_1C9BED9F8();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592D78);
    return sub_1C9BEDA08();
  }
}

void PostPersonalDomainActivityNotificationFlow.__allocating_init(notificationBodyProvider:)()
{
  swift_allocObject();
  uint64_t v0 = OUTLINED_FUNCTION_50();
  PostPersonalDomainActivityNotificationFlow.init(notificationBodyProvider:)(v0, v1);
}

void PostPersonalDomainActivityNotificationFlow.init(notificationBodyProvider:)(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  OUTLINED_FUNCTION_112();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_3_59();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  sub_1C9BEC838();
}

uint64_t sub_1C995F91C()
{
  OUTLINED_FUNCTION_24();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1C995F9A8;
  return sub_1C995FD08();
}

uint64_t sub_1C995F9A8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 48) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C995FA84()
{
  OUTLINED_FUNCTION_24();
  static ExecuteResponse.complete()(*(void *)(v0 + 32));
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C995FADC()
{
  uint64_t v17 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[6];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    v0[2] = v8;
    id v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v12 = sub_1C9BED5D8();
    v0[3] = sub_1C95FF228(v12, v13, &v16);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "Got error generating body for personal request activity notification. Will ignore... %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v10, -1, -1);
    MEMORY[0x1CB78C440](v9, -1, -1);
  }
  else
  {
  }
  static ExecuteResponse.complete()(v0[4]);
  OUTLINED_FUNCTION_22_0();
  return v14();
}

uint64_t sub_1C995FD08()
{
  OUTLINED_FUNCTION_24();
  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  v1[3] = swift_task_alloc();
  uint64_t v2 = sub_1C9BEAB08();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C995FDF0()
{
  OUTLINED_FUNCTION_24();
  if (sub_1C995EF34())
  {
    uint64_t v4 = (uint64_t (*)(void))(*(void *)(v0[2] + 16) + **(int **)(v0[2] + 16));
    uint64_t v1 = (void *)swift_task_alloc();
    v0[7] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1C995FF0C;
    return v4();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1C995FF0C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v10 = v9;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
  else
  {
    *(void *)(v7 + 64) = v3;
    *(void *)(v7 + 72) = v5;
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v13, v14, v15);
  }
}

void sub_1C996002C()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = (void *)v0[2];
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F968E8]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v8 = sub_1C9BEAAB8();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_1C97BA8E8(v8, v10, v7);
  sub_1C9960B68(v1, v2, v7);
  uint64_t v11 = v6[7];
  uint64_t v12 = v6[8];
  __swift_project_boxed_opaque_existential_1(v6 + 4, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 200))(v11, v12);
  if (v13)
  {
    uint64_t v14 = (void *)sub_1C9BED538();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v0[2];
  uint64_t v16 = v0[3];
  objc_msgSend(v7, sel_setOriginatingDeviceName_, v14);

  sub_1C99603C4(v15 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo, v16);
  sub_1C9BEC898();
}

void sub_1C9960294()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  uint64_t v0 = qword_1EBC74538;
  qword_1EA592C80 = type metadata accessor for RefreshableDeviceState();
  unk_1EA592C88 = &protocol witness table for RefreshableDeviceState;
  qword_1EA592C68 = v0;
  sub_1C9BEC838();
}

void sub_1C996032C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  __swift_allocate_value_buffer(v0, qword_1EA592C90);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA592C90);
  sub_1C9BEC328();
}

uint64_t sub_1C99603C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C996042C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C9960494()
{
  if (qword_1EBC74530 != -1) {
    swift_once();
  }
  sub_1C960E188();
}

void sub_1C996052C()
{
  qword_1EA592CE8 = (uint64_t)&type metadata for FeatureFlagDefinitions.PersonalDomains;
  unk_1EA592CF0 = &off_1F23DF460;
  byte_1EA592CD0 = 0;
}

uint64_t PostPersonalDomainActivityNotificationFlow.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1C99606B8(v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_homeInfo);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_aceService);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow42PostPersonalDomainActivityNotificationFlow_featureFlag);
  return v0;
}

uint64_t PostPersonalDomainActivityNotificationFlow.__deallocating_deinit()
{
  PostPersonalDomainActivityNotificationFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9960600()
{
  return sub_1C995F918();
}

uint64_t sub_1C9960624()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C995F91C();
}

uint64_t sub_1C99606B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592BE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C9960718(uint64_t a1)
{
  unint64_t result = sub_1C9960740();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C9960740()
{
  unint64_t result = qword_1EA592D38;
  if (!qword_1EA592D38)
  {
    type metadata accessor for PostPersonalDomainActivityNotificationFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592D38);
  }
  return result;
}

uint64_t type metadata accessor for PostPersonalDomainActivityNotificationFlow()
{
  uint64_t result = qword_1EA592D58;
  if (!qword_1EA592D58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlowStrategy.makeNotificationBody()(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_5(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C9960CF0;
  uint64_t v5 = OUTLINED_FUNCTION_50();
  return v7(v5);
}

uint64_t sub_1C99608D4()
{
  return type metadata accessor for PostPersonalDomainActivityNotificationFlow();
}

uint64_t sub_1C99608DC()
{
  uint64_t result = sub_1C9960B10();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PostPersonalDomainActivityNotificationFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PostPersonalDomainActivityNotificationFlow);
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.__allocating_init(strategy:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.__allocating_init(notificationBodyProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of PostPersonalDomainActivityNotificationFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  id v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 168) + **(int **)(*(void *)v0 + 168));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_5(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615010;
  return v7(v2);
}

uint64_t sub_1C9960B10()
{
  uint64_t result = qword_1EA592D70;
  if (!qword_1EA592D70) {
    sub_1C9BEC898();
  }
  return result;
}

void sub_1C9960B68(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setNotificationBody_, v4);
}

uint64_t sub_1C9960BCC(uint64_t a1)
{
  return sub_1C995F508(a1, *(void **)(v1 + 16));
}

uint64_t objectdestroy_17Tm()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592D78);
  OUTLINED_FUNCTION_112();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C9960C70(uint64_t a1, uint64_t a2, char a3)
{
  char v3 = a3 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592D78);
  id v4 = (void *)OUTLINED_FUNCTION_50();
  return sub_1C995F678(v4, v5, v3);
}

BOOL static PrepareResponseType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PrepareResponseType.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t PrepareResponseType.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t static PrepareResponse.ongoing<A>(next:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9960E68(0, a1);
}

void static PrepareResponse.ongoing<A>(next:childCompletion:)()
{
}

void static PrepareResponse.complete()(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
}

uint64_t static PrepareResponse.complete<A>(next:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9960E68(1, a1);
}

uint64_t sub_1C9960E68@<X0>(char a1@<W3>, uint64_t a2@<X8>)
{
  uint64_t result = Flow.eraseToAnyFlow()();
  *(unsigned char *)a2 = a1;
  *(void *)(a2 + 8) = result;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  return result;
}

unint64_t sub_1C9960EB8()
{
  unint64_t result = qword_1EA592D80;
  if (!qword_1EA592D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592D80);
  }
  return result;
}

uint64_t dispatch thunk of PreparableFlow.prepare(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

unsigned char *storeEnumTagSinglePayload for PrepareResponseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9960FE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

void assignWithCopy for PrepareResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_1C9BEC838();
}

uint64_t assignWithTake for PrepareResponse(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrepareResponse(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrepareResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t ResponseComponents.init(dialog:_:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a3 + 104) = 0u;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 72) = 0u;
  *(_OWORD *)(a3 + 56) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 8) = 0u;
  *(void *)a3 = a1;
  return a2(a3);
}

id static PresentationElements.responseFrameworkPattern(patternExecutionResult:)@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(unsigned char *)(a2 + 120) = 1;
  return a1;
}

uint64_t ResponseComponents.dialog.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResponseComponents.dialog.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*ResponseComponents.dialog.modify())(void)
{
  return nullsub_1;
}

uint64_t ResponseComponents.resultModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C996123C(v1 + 8, a1);
}

uint64_t sub_1C996123C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ResponseComponents.resultModel.setter(uint64_t a1)
{
  return sub_1C99612AC(a1, v1 + 8);
}

uint64_t sub_1C99612AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ResponseComponents.resultModel.modify())(void)
{
  return nullsub_1;
}

uint64_t ResponseComponents.conversationModel.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C996123C(v1 + 48, a1);
}

uint64_t ResponseComponents.conversationModel.setter(uint64_t a1)
{
  return sub_1C99612AC(a1, v1 + 48);
}

uint64_t (*ResponseComponents.conversationModel.modify())(void)
{
  return nullsub_1;
}

uint64_t ResponseComponents.viewId.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseComponents.viewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  return result;
}

uint64_t (*ResponseComponents.viewId.modify())(void)
{
  return nullsub_1;
}

uint64_t ResponseComponents.responseViewId.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseComponents.responseViewId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*ResponseComponents.responseViewId.modify())(void)
{
  return nullsub_1;
}

uint64_t ResponseComponents.init(resultModel:_:)@<X0>(uint64_t a1@<X8>)
{
  *(double *)&long long v4 = OUTLINED_FUNCTION_7_54(a1);
  uint64_t v6 = (uint64_t)v5 + 8;
  v5[3] = v4;
  v5[4] = v4;
  v5[1] = v4;
  v5[2] = v4;
  *uint64_t v5 = v4;
  sub_1C95FE7C0((uint64_t)v5 + 8, &qword_1EA588570);
  sub_1C95FD5F0(v2, v6);
  v1(v3);

  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t ResponseComponents.init(conversationModel:_:)@<X0>(uint64_t a1@<X8>)
{
  *(double *)&long long v4 = OUTLINED_FUNCTION_7_54(a1);
  v5[4] = v4;
  v5[1] = v4;
  v5[2] = v4;
  *uint64_t v5 = v4;
  v5[3] = v4;
  uint64_t v6 = (uint64_t)(v5 + 3);
  sub_1C95FE7C0((uint64_t)(v5 + 3), &qword_1EA588570);
  sub_1C95FD5F0(v2, v6);
  v1(v3);

  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t ResponseUpdateComponents.viewId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseUpdateComponents.update.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD5F0(v1 + 16, a1);
}

uint64_t ResponseUpdateComponents.init(viewId:update:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1C95FD5D8(a3, (uint64_t)(a4 + 2));
}

uint64_t static PresentationElements.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C96A8934(a1, (uint64_t)v65);
  uint64_t v3 = sub_1C96A8934(a2, (uint64_t)v66);
  switch(v65[120])
  {
    case 1:
      OUTLINED_FUNCTION_14_52(v3, v4, v5, v6, v7, v8, v9, v10, v53, v55, v57, v58, *(uint64_t *)v60, *(uint64_t *)&v60[8], *(uint64_t *)&v60[16], *(uint64_t *)&v60[24], *(uint64_t *)&v60[32], *(uint64_t *)&v60[40], *(uint64_t *)&v60[48],
        *(uint64_t *)&v60[56],
        *(uint64_t *)&v60[64],
        *(uint64_t *)&v60[72],
        *(uint64_t *)&v60[80],
        *(uint64_t *)&v60[88],
        *(uint64_t *)&v60[96],
        *(uint64_t *)&v60[104],
        *(uint64_t *)&v60[112],
        v61,
        *(uint64_t *)__dst,
        *(uint64_t *)&__dst[8],
        *(uint64_t *)&__dst[16],
        *(uint64_t *)&__dst[24],
        *(uint64_t *)&__dst[32],
        *(uint64_t *)&__dst[40],
        *(uint64_t *)&__dst[48],
        *(uint64_t *)&__dst[56],
        *(uint64_t *)&__dst[64],
        *(uint64_t *)&__dst[72],
        *(uint64_t *)&__dst[80],
        *(uint64_t *)&__dst[88],
        *(uint64_t *)&__dst[96],
        *(uint64_t *)&__dst[104],
        *(uint64_t *)&__dst[112],
        (char)__src[0],
        (uint64_t)__src[1],
        (uint64_t)__src[2],
        (uint64_t)__src[3],
        (uint64_t)__src[4],
        (uint64_t)__src[5],
        (uint64_t)__src[6],
        (uint64_t)__src[7],
        (uint64_t)__src[8],
        (uint64_t)__src[9],
        (uint64_t)__src[10],
        (uint64_t)__src[11],
        (uint64_t)__src[12],
        (uint64_t)__src[13],
        (uint64_t)__src[14],
        v64,
        v65[0]);
      if (v67 != 1)
      {

        goto LABEL_21;
      }
      uint64_t v12 = *(void **)v66;
      id v13 = objc_msgSend(__src[0], sel_patternId);
      uint64_t v14 = sub_1C9BED568();
      uint64_t v16 = v15;

      id v17 = objc_msgSend(v12, sel_patternId);
      uint64_t v18 = sub_1C9BED568();
      uint64_t v20 = v19;

      if (v14 == v18 && v16 == v20) {
        char v22 = 1;
      }
      else {
        char v22 = sub_1C9BEE618();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_33;
    case 2:
      OUTLINED_FUNCTION_14_52(v3, v4, v5, v6, v7, v8, v9, v10, v53, v55, v57, v58, *(uint64_t *)v60, *(uint64_t *)&v60[8], *(uint64_t *)&v60[16], *(uint64_t *)&v60[24], *(uint64_t *)&v60[32], *(uint64_t *)&v60[40], *(uint64_t *)&v60[48],
        *(uint64_t *)&v60[56],
        *(uint64_t *)&v60[64],
        *(uint64_t *)&v60[72],
        *(uint64_t *)&v60[80],
        *(uint64_t *)&v60[88],
        *(uint64_t *)&v60[96],
        *(uint64_t *)&v60[104],
        *(uint64_t *)&v60[112],
        v61,
        *(uint64_t *)__dst,
        *(uint64_t *)&__dst[8],
        *(uint64_t *)&__dst[16],
        *(uint64_t *)&__dst[24],
        *(uint64_t *)&__dst[32],
        *(uint64_t *)&__dst[40],
        *(uint64_t *)&__dst[48],
        *(uint64_t *)&__dst[56],
        *(uint64_t *)&__dst[64],
        *(uint64_t *)&__dst[72],
        *(uint64_t *)&__dst[80],
        *(uint64_t *)&__dst[88],
        *(uint64_t *)&__dst[96],
        *(uint64_t *)&__dst[104],
        *(uint64_t *)&__dst[112],
        (char)__src[0],
        (uint64_t)__src[1],
        (uint64_t)__src[2],
        (uint64_t)__src[3],
        (uint64_t)__src[4],
        (uint64_t)__src[5],
        (uint64_t)__src[6],
        (uint64_t)__src[7],
        (uint64_t)__src[8],
        (uint64_t)__src[9],
        (uint64_t)__src[10],
        (uint64_t)__src[11],
        (uint64_t)__src[12],
        (uint64_t)__src[13],
        (uint64_t)__src[14],
        v64,
        v65[0]);
      if (v67 == 2)
      {
        memcpy(__dst, __src, sizeof(__dst));
        memcpy(v60, v66, sizeof(v60));
        char v22 = sub_1C9961B80((unint64_t *)__dst, (unint64_t *)v60);
        sub_1C96A8A30((uint64_t)v60);
        sub_1C96A8A30((uint64_t)__dst);
        goto LABEL_33;
      }
      sub_1C96A8A30((uint64_t)__src);
      goto LABEL_21;
    case 3:
      OUTLINED_FUNCTION_14_52(v3, v4, v5, v6, v7, v8, v9, v10, v53, v55, v57, v58, *(uint64_t *)v60, *(uint64_t *)&v60[8], *(uint64_t *)&v60[16], *(uint64_t *)&v60[24], *(uint64_t *)&v60[32], *(uint64_t *)&v60[40], *(uint64_t *)&v60[48],
        *(uint64_t *)&v60[56],
        *(uint64_t *)&v60[64],
        *(uint64_t *)&v60[72],
        *(uint64_t *)&v60[80],
        *(uint64_t *)&v60[88],
        *(uint64_t *)&v60[96],
        *(uint64_t *)&v60[104],
        *(uint64_t *)&v60[112],
        v61,
        *(uint64_t *)__dst,
        *(uint64_t *)&__dst[8],
        *(uint64_t *)&__dst[16],
        *(uint64_t *)&__dst[24],
        *(uint64_t *)&__dst[32],
        *(uint64_t *)&__dst[40],
        *(uint64_t *)&__dst[48],
        *(uint64_t *)&__dst[56],
        *(uint64_t *)&__dst[64],
        *(uint64_t *)&__dst[72],
        *(uint64_t *)&__dst[80],
        *(uint64_t *)&__dst[88],
        *(uint64_t *)&__dst[96],
        *(uint64_t *)&__dst[104],
        *(uint64_t *)&__dst[112],
        (char)__src[0],
        (uint64_t)__src[1],
        (uint64_t)__src[2],
        (uint64_t)__src[3],
        (uint64_t)__src[4],
        (uint64_t)__src[5],
        (uint64_t)__src[6],
        (uint64_t)__src[7],
        (uint64_t)__src[8],
        (uint64_t)__src[9],
        (uint64_t)__src[10],
        (uint64_t)__src[11],
        (uint64_t)__src[12],
        (uint64_t)__src[13],
        (uint64_t)__src[14],
        v64,
        v65[0]);
      if (v67 != 3)
      {
        sub_1C96A89DC((uint64_t)__src);
        goto LABEL_21;
      }
      *(_OWORD *)__dst = *(_OWORD *)__src;
      *(_OWORD *)&__dst[16] = *(_OWORD *)&__src[2];
      *(_OWORD *)&__dst[32] = *(_OWORD *)&__src[4];
      *(id *)&__dst[48] = __src[6];
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v66;
      *(_OWORD *)&v60[16] = *(_OWORD *)&v66[16];
      *(_OWORD *)&v60[32] = *(_OWORD *)&v66[32];
      *(void *)&v60[48] = *(void *)&v66[48];
      if (__src[0] == *(id *)v66 && __src[1] == *(id *)&v60[8]) {
        char v22 = 1;
      }
      else {
        char v22 = sub_1C9BEE618();
      }
      sub_1C96A89DC((uint64_t)v60);
      sub_1C96A89DC((uint64_t)__dst);
LABEL_33:
      sub_1C9962EEC((uint64_t)v65);
      return v22 & 1;
    default:
      OUTLINED_FUNCTION_14_52(v3, v4, v5, v6, v7, v8, v9, v10, v53, v55, v57, v58, *(uint64_t *)v60, *(uint64_t *)&v60[8], *(uint64_t *)&v60[16], *(uint64_t *)&v60[24], *(uint64_t *)&v60[32], *(uint64_t *)&v60[40], *(uint64_t *)&v60[48],
        *(uint64_t *)&v60[56],
        *(uint64_t *)&v60[64],
        *(uint64_t *)&v60[72],
        *(uint64_t *)&v60[80],
        *(uint64_t *)&v60[88],
        *(uint64_t *)&v60[96],
        *(uint64_t *)&v60[104],
        *(uint64_t *)&v60[112],
        v61,
        *(uint64_t *)__dst,
        *(uint64_t *)&__dst[8],
        *(uint64_t *)&__dst[16],
        *(uint64_t *)&__dst[24],
        *(uint64_t *)&__dst[32],
        *(uint64_t *)&__dst[40],
        *(uint64_t *)&__dst[48],
        *(uint64_t *)&__dst[56],
        *(uint64_t *)&__dst[64],
        *(uint64_t *)&__dst[72],
        *(uint64_t *)&__dst[80],
        *(uint64_t *)&__dst[88],
        *(uint64_t *)&__dst[96],
        *(uint64_t *)&__dst[104],
        *(uint64_t *)&__dst[112],
        (char)__src[0],
        (uint64_t)__src[1],
        (uint64_t)__src[2],
        (uint64_t)__src[3],
        (uint64_t)__src[4],
        (uint64_t)__src[5],
        (uint64_t)__src[6],
        (uint64_t)__src[7],
        (uint64_t)__src[8],
        (uint64_t)__src[9],
        (uint64_t)__src[10],
        (uint64_t)__src[11],
        (uint64_t)__src[12],
        (uint64_t)__src[13],
        (uint64_t)__src[14],
        v64,
        v65[0]);
      id v11 = __src[0];
      if (v67)
      {

        swift_bridgeObjectRelease();
LABEL_21:
        sub_1C95FE7C0((uint64_t)v65, &qword_1EA592D90);
        goto LABEL_22;
      }
      uint64_t v24 = *(void **)v66;
      unint64_t v25 = *(void *)&v66[8];
      id v26 = objc_msgSend(__src[0], sel_catId);
      uint64_t v27 = sub_1C9BED568();
      uint64_t v29 = v28;

      id v30 = objc_msgSend(v24, sel_catId);
      uint64_t v31 = sub_1C9BED568();
      uint64_t v33 = v32;

      if (v27 == v31 && v29 == v33)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v35 = sub_1C9BEE618();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v35 & 1) == 0)
        {
LABEL_43:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
      }
      unint64_t v37 = (unint64_t)__src[1] >> 62;
      if ((unint64_t)__src[1] >> 62) {
        goto LABEL_73;
      }
      uint64_t v38 = *(void *)(((unint64_t)__src[1] & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (1)
      {
        if (v25 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v39 = sub_1C9BEE3C8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v39 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v38 != v39) {
          goto LABEL_43;
        }
        unint64_t v59 = v25;
        uint64_t v54 = v24;
        uint64_t v56 = v11;
        if (v37)
        {
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_1C9BEE3C8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v40 = *(void *)(((unint64_t)__src[1] & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (!v40) {
          break;
        }
        uint64_t v24 = (void *)((unint64_t)__src[1] & 0xC000000000000001);
        v25 &= 0xC000000000000001;
        unint64_t v37 = 4;
        while (1)
        {
          unint64_t v41 = v37 - 4;
          id v42 = v24 ? (id)MEMORY[0x1CB78B3A0](v37 - 4, __src[1]) : *((id *)__src[1] + v37);
          id v11 = (id)(v37 - 3);
          if (__OFADD__(v41, 1)) {
            break;
          }
          id v43 = v42;
          uint64_t v44 = sub_1C9962F1C(v43);
          uint64_t v46 = v45;
          if (v25)
          {
            id v47 = (id)MEMORY[0x1CB78B3A0](v37 - 4, v59);
          }
          else
          {
            if (v41 >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_72;
            }
            id v47 = *(id *)(v59 + 8 * v37);
          }
          uint64_t v48 = sub_1C9962F1C(v47);
          uint64_t v50 = v49;
          if (v46)
          {
            if (!v49)
            {

              swift_bridgeObjectRelease();
LABEL_70:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

LABEL_44:
              sub_1C9962EEC((uint64_t)v65);
LABEL_22:
              char v22 = 0;
              return v22 & 1;
            }
            if (v44 == v48 && v46 == v49)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              char v52 = sub_1C9BEE618();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if ((v52 & 1) == 0)
              {

                goto LABEL_70;
              }
            }
          }
          else
          {

            if (v50)
            {

              swift_bridgeObjectRelease();
              goto LABEL_70;
            }
          }
          ++v37;
          if (v11 == (id)v40) {
            goto LABEL_68;
          }
        }
        __break(1u);
LABEL_72:
        __break(1u);
LABEL_73:
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1C9BEE3C8();
        swift_bridgeObjectRelease();
      }
LABEL_68:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1C9962EEC((uint64_t)v65);
      char v22 = 1;
      return v22 & 1;
  }
}

uint64_t sub_1C9961B80(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = a1[12];
  unint64_t v5 = a2[12];
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = a1[11] == a2[11] && v4 == v5;
  if (v6 || (v7 = sub_1C9BEE618(), uint64_t result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    unint64_t v9 = a1[14];
    unint64_t v10 = a2[14];
    if (v9)
    {
      if (!v10) {
        return 0;
      }
      if (a1[13] != a2[13] || v9 != v10)
      {
        char v12 = sub_1C9BEE618();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v10)
    {
      return 0;
    }
    sub_1C996123C((uint64_t)(a1 + 1), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      uint64_t v13 = sub_1C9BEACE8();
      unint64_t v15 = v14;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    }
    else
    {
      sub_1C95FE7C0((uint64_t)v53, &qword_1EA588570);
      uint64_t v13 = 0;
      unint64_t v15 = 0xF000000000000000;
    }
    sub_1C996123C((uint64_t)(a2 + 1), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      uint64_t v16 = sub_1C9BEACE8();
      unint64_t v18 = v17;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      if (v15 >> 60 == 15)
      {
        if (v18 >> 60 != 15) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v18 >> 60 == 15) {
          goto LABEL_39;
        }
        sub_1C960B020(v13, v15);
        char v19 = MEMORY[0x1CB787B90](v13, v15, v16, v18);
        sub_1C963F610(v16, v18);
        sub_1C963F610(v13, v15);
        sub_1C963F610(v13, v15);
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
    }
    else
    {
      sub_1C95FE7C0((uint64_t)v53, &qword_1EA588570);
      if (v15 >> 60 != 15) {
        goto LABEL_38;
      }
    }
    sub_1C996123C((uint64_t)(a1 + 6), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      uint64_t v13 = sub_1C9BEACE8();
      unint64_t v15 = v20;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    }
    else
    {
      sub_1C95FE7C0((uint64_t)v53, &qword_1EA588570);
      uint64_t v13 = 0;
      unint64_t v15 = 0xF000000000000000;
    }
    sub_1C996123C((uint64_t)(a2 + 6), (uint64_t)v53);
    if (v54)
    {
      __swift_project_boxed_opaque_existential_1(v53, v54);
      uint64_t v16 = sub_1C9BEACE8();
      unint64_t v18 = v21;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
      if (v15 >> 60 == 15)
      {
        if (v18 >> 60 == 15)
        {
LABEL_43:
          unint64_t v23 = *a1;
          if (v23)
          {
            unint64_t v52 = *a2;
            if (*a2)
            {
              uint64_t v24 = v23 >> 62;
              if (v23 >> 62) {
                goto LABEL_86;
              }
              uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
              while (1)
              {
                if (v52 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v26 = sub_1C9BEE3C8();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v26 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                if (v25 != v26) {
                  break;
                }
                if (v24)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v27 = sub_1C9BEE3C8();
                }
                else
                {
                  uint64_t v27 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                }
                if (!v27)
                {
LABEL_82:
                  swift_bridgeObjectRelease();
                  return 1;
                }
                uint64_t v29 = 4;
                uint64_t v51 = v27;
                while (1)
                {
                  unint64_t v30 = v29 - 4;
                  id v31 = (v23 & 0xC000000000000001) != 0
                      ? (id)MEMORY[0x1CB78B3A0](v29 - 4, v23)
                      : *(id *)(v23 + 8 * v29);
                  uint64_t v32 = v31;
                  uint64_t v24 = v29 - 3;
                  if (__OFADD__(v30, 1)) {
                    break;
                  }
                  if ((v52 & 0xC000000000000001) != 0)
                  {
                    id v33 = (id)MEMORY[0x1CB78B3A0](v29 - 4, v52);
                  }
                  else
                  {
                    if (v30 >= *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_85;
                    }
                    id v33 = *(id *)(v52 + 8 * v29);
                  }
                  uint64_t v34 = v33;
                  id v35 = objc_msgSend(v32, sel_catId);
                  uint64_t v36 = sub_1C9BED568();
                  uint64_t v38 = v37;

                  id v39 = objc_msgSend(v34, sel_catId);
                  uint64_t v40 = sub_1C9BED568();
                  uint64_t v42 = v41;

                  if (v36 == v40 && v38 == v42)
                  {
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    char v44 = sub_1C9BEE618();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v44 & 1) == 0)
                    {

                      goto LABEL_53;
                    }
                  }
                  id v45 = objc_msgSend(v32, sel_dialog);
                  sub_1C9964724();
                  unint64_t v46 = sub_1C9BED878();

                  if (v46 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v47 = sub_1C9BEE3C8();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  }
                  swift_bridgeObjectRelease();
                  id v48 = objc_msgSend(v34, sel_dialog);
                  unint64_t v49 = sub_1C9BED878();

                  if (v49 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v50 = sub_1C9BEE3C8();

                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  }
                  swift_bridgeObjectRelease();
                  if (v47 != v50) {
                    goto LABEL_53;
                  }
                  ++v29;
                  if (v24 == v51) {
                    goto LABEL_82;
                  }
                }
                __break(1u);
LABEL_85:
                __break(1u);
LABEL_86:
                swift_bridgeObjectRetain();
                uint64_t v25 = sub_1C9BEE3C8();
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_1C96A8A84((uint64_t)a2, (uint64_t)v53);
              sub_1C96A8A30((uint64_t)v53);
            }
          }
          else
          {
            sub_1C96A8A84((uint64_t)a2, (uint64_t)v53);
            uint64_t v28 = v53[0];
            swift_bridgeObjectRetain();
            sub_1C96A8A30((uint64_t)v53);
            if (!v28) {
              return 1;
            }
LABEL_53:
            swift_bridgeObjectRelease();
          }
          return 0;
        }
      }
      else if (v18 >> 60 != 15)
      {
        sub_1C960B020(v13, v15);
        char v22 = MEMORY[0x1CB787B90](v13, v15, v16, v18);
        sub_1C963F610(v16, v18);
        sub_1C963F610(v13, v15);
        sub_1C963F610(v13, v15);
        if ((v22 & 1) == 0) {
          return 0;
        }
        goto LABEL_43;
      }
LABEL_39:
      sub_1C963F610(v13, v15);
      sub_1C963F610(v16, v18);
      return 0;
    }
    sub_1C95FE7C0((uint64_t)v53, &qword_1EA588570);
    if (v15 >> 60 == 15) {
      goto LABEL_43;
    }
LABEL_38:
    uint64_t v16 = 0;
    unint64_t v18 = 0xF000000000000000;
    goto LABEL_39;
  }
  return result;
}

uint64_t static PresentationElements.legacy(catResult:snippets:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C9767910();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = a1;
  *(unsigned char *)(a2 + 120) = 0;

  return swift_bridgeObjectRetain();
}

uint64_t static PresentationElements.legacy(dialogExecutionResult:snippets:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(unsigned char *)(a3 + 120) = 0;
  id v3 = a1;

  return swift_bridgeObjectRetain();
}

uint64_t static PresentationElements.responseFramework(responseComponents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C96A8A84(a1, a2);
  *(unsigned char *)(a2 + 120) = 2;
  return result;
}

uint64_t static PresentationElements.responseFrameworkUpdate(updateComponents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1C9962F8C(a1, a2);
  *(unsigned char *)(a2 + 120) = 3;
  return result;
}

unint64_t sub_1C9962340()
{
  sub_1C96A8934(v0, (uint64_t)v3);
  switch(v3[120])
  {
    case 1:
      sub_1C9962EEC((uint64_t)v3);
      unint64_t v1 = 0xD000000000000019;
      break;
    case 2:
      unint64_t v1 = 0xD000000000000012;
      sub_1C96A8A30((uint64_t)v3);
      break;
    case 3:
      sub_1C96A89DC((uint64_t)v3);
      unint64_t v1 = 0xD000000000000018;
      break;
    default:
      sub_1C9962EEC((uint64_t)v3);
      unint64_t v1 = 0x79636167656C2ELL;
      break;
  }
  return v1;
}

uint64_t sub_1C9962430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v10;
  *unint64_t v10 = v8;
  v10[1] = sub_1C9615888;
  long long v10[2] = a8;
  return MEMORY[0x1F4188298](sub_1C9962500, 0, 0);
}

uint64_t PresentationElementsProviding.makePresentationElements(responseId:catId:catParameters:visualParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a8;
  return MEMORY[0x1F4188298](sub_1C9962500, 0, 0);
}

uint64_t sub_1C9962500()
{
  OUTLINED_FUNCTION_13_59();
  sub_1C9BEE188();
  OUTLINED_FUNCTION_12_51();
  OUTLINED_FUNCTION_2_69();
  sub_1C9BEE808();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_69();
  OUTLINED_FUNCTION_2_69();
  OUTLINED_FUNCTION_10_55();
  sub_1C9962FC4();
  swift_allocError();
  *uint64_t v0 = v3;
  v0[1] = v4;
  swift_willThrow();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99625F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v9;
  *unint64_t v9 = v7;
  v9[1] = sub_1C9615888;
  v9[2] = a7;
  return MEMORY[0x1F4188298](sub_1C99626B8, 0, 0);
}

uint64_t PresentationElementsProviding.makePresentationElements(responseId:patternId:patternParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a7;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99626B8);
}

uint64_t sub_1C99626B8()
{
  OUTLINED_FUNCTION_13_59();
  sub_1C9BEE188();
  OUTLINED_FUNCTION_12_51();
  OUTLINED_FUNCTION_2_69();
  sub_1C9BEE808();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_69();
  OUTLINED_FUNCTION_2_69();
  OUTLINED_FUNCTION_10_55();
  sub_1C9962FC4();
  swift_allocError();
  *uint64_t v0 = v3;
  v0[1] = v4;
  swift_willThrow();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99627B0()
{
  return 0x6D656C706D696E55;
}

uint64_t sub_1C9962838()
{
  return sub_1C99627B0();
}

uint64_t sub_1C9962840()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  strcpy((char *)(inited + 32), "responseMode");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  uint64_t result = sub_1C9BED458();
  qword_1EA592D88 = result;
  return result;
}

uint64_t sub_1C99628D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7[5] = a6;
  v7[6] = v6;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99628F0);
}

uint64_t sub_1C99628F0()
{
  unint64_t v1 = (void *)v0[6];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  uint64_t v2 = v1[2];
  if (qword_1EA588128 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1EA592D88;
  v0[7] = qword_1EA592D88;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C99629FC;
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[3];
  return sub_1C9768F18(v2, v7, v5, v6, 0, v3);
}

uint64_t sub_1C99629FC(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v7 = v6;
  *(void *)(v5 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v8 = sub_1C96B8BFC;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v5 + 80) = a1;
    uint64_t v8 = sub_1C9962B00;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1C9962B00()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  *(void *)uint64_t v1 = *(void *)(v0 + 80);
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 120) = 0;
  return OUTLINED_FUNCTION_117_0();
}

uint64_t sub_1C9962B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7[5] = a6;
  v7[6] = v6;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9962B3C);
}

uint64_t sub_1C9962B3C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)v0[6];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  uint64_t v2 = v1[2];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C9962BE8;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  return sub_1C976996C(v2, v6, v4, v5);
}

uint64_t sub_1C9962BE8(uint64_t a1)
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v6 + 8);
    return v8();
  }
  else
  {
    *(void *)(v5 + 64) = a1;
    return MEMORY[0x1F4188298](sub_1C9962D08, 0, 0);
  }
}

uint64_t sub_1C9962D08()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)uint64_t v1 = *(void *)(v0 + 64);
  *(unsigned char *)(v1 + 120) = 1;
  return OUTLINED_FUNCTION_117_0();
}

uint64_t sub_1C9962D20()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9962D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C9615010;
  return sub_1C99628D0(a1, v11, v12, a4, a5, a6);
}

uint64_t sub_1C9962E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C9615888;
  return sub_1C9962B1C(a1, v11, v12, a4, a5, a6);
}

uint64_t sub_1C9962EEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C9962F1C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_aceId);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

uint64_t sub_1C9962F8C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C9962FC4()
{
  unint64_t result = qword_1EA592DA0;
  if (!qword_1EA592DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA592DA0);
  }
  return result;
}

uint64_t destroy for ResponseComponents(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ResponseComponents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = a2 + 8;
  uint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = *(void *)(v5 + 32);
  }
  uint64_t v9 = (_OWORD *)(a1 + 48);
  uint64_t v10 = (_OWORD *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 72);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v12;
    (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v9, v10);
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 64);
    *uint64_t v9 = *v10;
    *(_OWORD *)(a1 + 64) = v13;
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
  }
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ResponseComponents(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((void *)(a1 + 8), (void *)(a2 + 8));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  else if (v4)
  {
    *(void *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
    goto LABEL_8;
  }
  long long v5 = *(_OWORD *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 24) = v6;
LABEL_8:
  uint64_t v7 = *(void *)(a2 + 72);
  if (!*(void *)(a1 + 72))
  {
    if (v7)
    {
      *(void *)(a1 + 72) = v7;
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 48, a2 + 48);
      goto LABEL_15;
    }
LABEL_14:
    long long v8 = *(_OWORD *)(a2 + 48);
    long long v9 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = v9;
    goto LABEL_15;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 48), (void *)(a2 + 48));
LABEL_15:
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ResponseComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 8;
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  }
  long long v5 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)(a1 + 40) = *(void *)(v4 + 32);
  if (*(void *)(a1 + 72)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  }
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseComponents(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 120))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseComponents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for ResponseComponents()
{
}

uint64_t destroy for ResponseUpdateComponents(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
}

uint64_t initializeWithCopy for ResponseUpdateComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2 + 16;
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  v7(a1 + 16, v4, v6);
  return a1;
}

void *assignWithCopy for ResponseUpdateComponents(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for ResponseUpdateComponents(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseUpdateComponents(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResponseUpdateComponents(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ResponseUpdateComponents()
{
}

void destroy for PresentationElements(uint64_t a1)
{
  switch(*(unsigned char *)(a1 + 120))
  {
    case 0:

      goto LABEL_11;
    case 1:
      id v2 = *(id *)a1;

      break;
    case 2:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 32)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
      }
      if (*(void *)(a1 + 72)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 48);
      }
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      break;
    case 3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for PresentationElements(uint64_t a1, uint64_t a2)
{
  switch(*(unsigned char *)(a2 + 120))
  {
    case 1:
      uint64_t v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 120) = 1;
      id v8 = v7;
      break;
    case 2:
      *(void *)a1 = *(void *)a2;
      uint64_t v9 = (_OWORD *)(a2 + 8);
      uint64_t v10 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v10)
      {
        uint64_t v11 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v10;
        *(void *)(a1 + 40) = v11;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 8, a2 + 8, v10);
      }
      else
      {
        long long v17 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *v9;
        *(_OWORD *)(a1 + 24) = v17;
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
      }
      unint64_t v18 = (_OWORD *)(a1 + 48);
      char v19 = (_OWORD *)(a2 + 48);
      uint64_t v20 = *(void *)(a2 + 72);
      if (v20)
      {
        uint64_t v21 = *(void *)(a2 + 80);
        *(void *)(a1 + 72) = v20;
        *(void *)(a1 + 80) = v21;
        (**(void (***)(_OWORD *, _OWORD *))(v20 - 8))(v18, v19);
      }
      else
      {
        long long v22 = *(_OWORD *)(a2 + 64);
        *unint64_t v18 = *v19;
        *(_OWORD *)(a1 + 64) = v22;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
      }
      uint64_t v23 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v23;
      uint64_t v24 = *(void *)(a2 + 104);
      uint64_t v25 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v24;
      *(void *)(a1 + 112) = v25;
      *(unsigned char *)(a1 + 120) = 2;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 3:
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      uint64_t v13 = a2 + 16;
      long long v14 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v14;
      uint64_t v15 = v14;
      uint64_t v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
      swift_bridgeObjectRetain();
      v16(a1 + 16, v13, v15);
      *(unsigned char *)(a1 + 120) = 3;
      break;
    default:
      uint64_t v4 = *(void **)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(unsigned char *)(a1 + 120) = 0;
      id v6 = v4;
LABEL_12:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t assignWithCopy for PresentationElements(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C9962EEC(a1);
    switch(*(unsigned char *)(a2 + 120))
    {
      case 1:
        id v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 120) = 1;
        id v7 = v6;
        break;
      case 2:
        *(void *)a1 = *(void *)a2;
        uint64_t v8 = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        if (v8)
        {
          *(void *)(a1 + 32) = v8;
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 8, a2 + 8, v8);
        }
        else
        {
          long long v12 = *(_OWORD *)(a2 + 8);
          long long v13 = *(_OWORD *)(a2 + 24);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(_OWORD *)(a1 + 8) = v12;
          *(_OWORD *)(a1 + 24) = v13;
        }
        long long v14 = (_OWORD *)(a1 + 48);
        uint64_t v15 = (long long *)(a2 + 48);
        uint64_t v16 = *(void *)(a2 + 72);
        if (v16)
        {
          *(void *)(a1 + 72) = v16;
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          (**(void (***)(_OWORD *, long long *))(v16 - 8))(v14, v15);
        }
        else
        {
          long long v17 = *v15;
          long long v18 = *(_OWORD *)(a2 + 64);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *long long v14 = v17;
          *(_OWORD *)(a1 + 64) = v18;
        }
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = 2;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 3:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v9 = a2 + 16;
        uint64_t v10 = *(void *)(a2 + 40);
        *(void *)(a1 + 40) = v10;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
        swift_bridgeObjectRetain();
        v11(a1 + 16, v9, v10);
        *(unsigned char *)(a1 + 120) = 3;
        break;
      default:
        uint64_t v4 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 120) = 0;
        id v5 = v4;
LABEL_13:
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

void *__swift_memcpy121_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x79uLL);
}

void *assignWithTake for PresentationElements(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1C9962EEC((uint64_t)a1);
    memcpy(a1, a2, 0x79uLL);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PresentationElements(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 121))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 120);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PresentationElements(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 120) = -(char)a2;
    }
  }
  return result;
}

void type metadata accessor for PresentationElements()
{
}

uint64_t dispatch thunk of PresentationElementsProviding.makePresentationElements(responseId:catId:catParameters:visualParameters:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_6_60();
  long long v13 = (uint64_t (*)(uint64_t))(*(void *)(a9 + 8) + **(int **)(a9 + 8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v10;
  *uint64_t v10 = v9;
  v10[1] = sub_1C9615010;
  uint64_t v11 = OUTLINED_FUNCTION_4_66();
  return v13(v11);
}

uint64_t dispatch thunk of PresentationElementsProviding.makePresentationElements(responseId:patternId:patternParameters:)()
{
  OUTLINED_FUNCTION_6_60();
  id v5 = (uint64_t (*)(uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  int v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v2;
  *int v2 = v0;
  v2[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_4_66();
  return v5(v3);
}

uint64_t type metadata accessor for SiriKitDefaultPresentationElementsProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for PresentationError()
{
  return &type metadata for PresentationError;
}

void sub_1C9963EE8(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 120);
  if (v2 >= 4) {
    unsigned int v2 = *(_DWORD *)a1 + 4;
  }
  switch(v2)
  {
    case 1u:
      uint64_t v3 = *(void **)a1;

      break;
    case 2u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 32)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 8);
      }
      if (*(void *)(a1 + 72)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 48);
      }
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 3u:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      break;
    default:

LABEL_13:
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t sub_1C9963FEC(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 120);
  if (v4 >= 4) {
    unsigned int v4 = *(_DWORD *)a2 + 4;
  }
  switch(v4)
  {
    case 1u:
      uint64_t v8 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 120) = 1;
      id v9 = v8;
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      uint64_t v10 = (_OWORD *)(a2 + 8);
      uint64_t v11 = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v11)
      {
        uint64_t v12 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = v11;
        *(void *)(a1 + 40) = v12;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 8, a2 + 8, v11);
      }
      else
      {
        long long v18 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *v10;
        *(_OWORD *)(a1 + 24) = v18;
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
      }
      char v19 = (_OWORD *)(a1 + 48);
      uint64_t v20 = (_OWORD *)(a2 + 48);
      uint64_t v21 = *(void *)(a2 + 72);
      if (v21)
      {
        uint64_t v22 = *(void *)(a2 + 80);
        *(void *)(a1 + 72) = v21;
        *(void *)(a1 + 80) = v22;
        (**(void (***)(_OWORD *, _OWORD *))(v21 - 8))(v19, v20);
      }
      else
      {
        long long v23 = *(_OWORD *)(a2 + 64);
        *char v19 = *v20;
        *(_OWORD *)(a1 + 64) = v23;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
      }
      uint64_t v24 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v24;
      uint64_t v25 = *(void *)(a2 + 104);
      uint64_t v26 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = v25;
      *(void *)(a1 + 112) = v26;
      *(unsigned char *)(a1 + 120) = 2;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 3u:
      uint64_t v13 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v13;
      uint64_t v14 = a2 + 16;
      long long v15 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 40) = v15;
      uint64_t v16 = v15;
      long long v17 = **(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8);
      swift_bridgeObjectRetain();
      v17(a1 + 16, v14, v16);
      *(unsigned char *)(a1 + 120) = 3;
      break;
    default:
      id v5 = *(void **)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      *(unsigned char *)(a1 + 120) = 0;
      id v7 = v5;
LABEL_14:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t sub_1C99641DC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 120);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:

        break;
      case 2u:
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 32)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        }
        if (*(void *)(a1 + 72)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 48);
        }
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
        break;
      default:

LABEL_12:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 120);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        uint64_t v8 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 120) = 1;
        id v9 = v8;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        uint64_t v10 = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        if (v10)
        {
          *(void *)(a1 + 32) = v10;
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 8, a2 + 8, v10);
        }
        else
        {
          long long v14 = *(_OWORD *)(a2 + 8);
          long long v15 = *(_OWORD *)(a2 + 24);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(_OWORD *)(a1 + 8) = v14;
          *(_OWORD *)(a1 + 24) = v15;
        }
        uint64_t v16 = (_OWORD *)(a1 + 48);
        long long v17 = (long long *)(a2 + 48);
        uint64_t v18 = *(void *)(a2 + 72);
        if (v18)
        {
          *(void *)(a1 + 72) = v18;
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          (**(void (***)(_OWORD *, long long *))(v18 - 8))(v16, v17);
        }
        else
        {
          long long v19 = *v17;
          long long v20 = *(_OWORD *)(a2 + 64);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *uint64_t v16 = v19;
          *(_OWORD *)(a1 + 64) = v20;
        }
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = 2;
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v11 = a2 + 16;
        uint64_t v12 = *(void *)(a2 + 40);
        *(void *)(a1 + 40) = v12;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
        swift_bridgeObjectRetain();
        v13(a1 + 16, v11, v12);
        *(unsigned char *)(a1 + 120) = 3;
        break;
      default:
        uint64_t v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 120) = 0;
        id v7 = v6;
LABEL_27:
        swift_bridgeObjectRetain();
        break;
    }
  }
  return a1;
}

uint64_t sub_1C99644B0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 120);
    if (v4 >= 4) {
      unsigned int v4 = *(_DWORD *)a1 + 4;
    }
    switch(v4)
    {
      case 1u:

        break;
      case 2u:
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 32)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 8);
        }
        if (*(void *)(a1 + 72)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 48);
        }
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 3u:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(a1 + 16);
        break;
      default:

LABEL_12:
        swift_bridgeObjectRelease();
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 120);
    if (v5 >= 4) {
      unsigned int v5 = *(_DWORD *)a2 + 4;
    }
    switch(v5)
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        char v6 = 1;
        break;
      case 2u:
        memcpy((void *)a1, (const void *)a2, 0x78uLL);
        char v6 = 2;
        break;
      case 3u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        char v6 = 3;
        break;
      default:
        char v6 = 0;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        break;
    }
    *(unsigned char *)(a1 + 120) = v6;
  }
  return a1;
}

uint64_t sub_1C9964630(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 121)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 120);
  if (v3 >= 4) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C996466C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 105) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 121) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 120) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C99646C4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 120);
  if (result >= 4) {
    return (*(_DWORD *)a1 + 4);
  }
  return result;
}

uint64_t sub_1C99646E0(uint64_t result, unsigned int a2)
{
  if (a2 > 3)
  {
    unsigned int v2 = a2 - 4;
    *(void *)(result + 112) = 0;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 4;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 120) = a2;
  return result;
}

void type metadata accessor for PresentationElements.PresentationElementsBase()
{
}

unint64_t sub_1C9964724()
{
  unint64_t result = qword_1EA58B518;
  if (!qword_1EA58B518)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1EA58B518);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_69()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_4_66()
{
  return v0;
}

double OUTLINED_FUNCTION_7_54@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_55()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_14_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  return sub_1C96A8934((uint64_t)&a60, (uint64_t)&a44);
}

uint64_t Prompt.__allocating_init(for:interpreter:)(uint64_t a1, long long *a2)
{
  swift_allocObject();
  uint64_t v4 = OUTLINED_FUNCTION_12_52();
  Prompt.init(for:interpreter:)(v4, a2);
  return v2;
}

void sub_1C9964894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C9BEC838();
}

unint64_t sub_1C9964924(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 72);
  *(void *)(v1 + 72) = a1;
  return sub_1C98B2AB0(v3);
}

uint64_t sub_1C996496C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return swift_release();
}

uint64_t sub_1C996497C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return PromptProviding.segue()();
}

uint64_t PromptProviding.segue()()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_8_63(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v10(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C9964AFC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973D55C;
  return PromptProviding.repromptOnEmptyParse()();
}

uint64_t PromptProviding.repromptOnEmptyParse()()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_8_63(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v10(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C9964C7C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return PromptProviding.repromptOnLowConfidence()();
}

uint64_t PromptProviding.repromptOnLowConfidence()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  return sub_1C97D5F14();
}

uint64_t sub_1C9964DA0@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_62();
  uint64_t v4 = v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  OUTLINED_FUNCTION_62();
  type metadata accessor for Prompt.State();
  OUTLINED_FUNCTION_8_4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

uint64_t sub_1C9964E40(uint64_t a1)
{
  OUTLINED_FUNCTION_62();
  uint64_t v4 = v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  OUTLINED_FUNCTION_62();
  type metadata accessor for Prompt.State();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v4, a1);
  return swift_endAccess();
}

void sub_1C9964EE8()
{
}

uint64_t sub_1C9964F30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
  *uint64_t v3 = a1;
  v3[1] = a2;
  return swift_release();
}

uint64_t Prompt.init(for:interpreter:)(uint64_t a1, long long *a2)
{
  OUTLINED_FUNCTION_62();
  uint64_t v5 = (void *)(v2 + *(void *)(v4 + 112));
  *uint64_t v5 = nullsub_1;
  v5[1] = 0;
  sub_1C95FD5D8(v6, v2 + 16);
  sub_1C95FD5D8(a2, v2 + 56);
  uint64_t v7 = v2 + *(void *)(*(void *)v2 + 104);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v8 = sub_1C9BEE788();
  __swift_storeEnumTagSinglePayload(v7, 1, 3, v8);
  return v2;
}

uint64_t Prompt.accept(input:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v67 = a1;
  uint64_t v7 = *v2;
  uint64_t v63 = type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v62 = (uint64_t)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v7 + 80);
  OUTLINED_FUNCTION_35_24();
  type metadata accessor for Prompt.Event();
  OUTLINED_FUNCTION_0();
  uint64_t v65 = v13;
  uint64_t v66 = v12;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v64 = (uint64_t *)((char *)v60 - v16);
  OUTLINED_FUNCTION_35_24();
  type metadata accessor for Interpretable();
  OUTLINED_FUNCTION_0();
  v60[1] = v17;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v18, v19);
  OUTLINED_FUNCTION_21_31();
  OUTLINED_FUNCTION_0();
  uint64_t v61 = v20;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v24 = (char *)v60 - v23;
  OUTLINED_FUNCTION_35_24();
  type metadata accessor for Prompt.State();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v25, v26);
  OUTLINED_FUNCTION_33_22(v27, v60[0]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_35_24();
  uint64_t v28 = sub_1C9BEE788();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 3, v28);
  uint64_t v30 = OUTLINED_FUNCTION_27_28();
  uint64_t result = v31(v30);
  if (EnumTagSinglePayload == 3)
  {
    uint64_t v33 = v5[10];
    uint64_t v34 = v5[11];
    __swift_project_boxed_opaque_existential_1(v5 + 7, v33);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v67, v33, v34);
    if (__swift_getEnumTagSinglePayload(v3, 1, v11) != 1)
    {
      uint64_t v45 = v61;
      OUTLINED_FUNCTION_49_4();
      v46();
      uint64_t v47 = (uint64_t)v64;
      (*(void (**)(uint64_t *, char *, uint64_t))(v45 + 16))(v64, v24, v11);
      swift_storeEnumTagMultiPayload();
      sub_1C99667FC(v47);
    }
    uint64_t v35 = OUTLINED_FUNCTION_10_56();
    v36(v35);
    uint64_t v37 = type metadata accessor for Input(0);
    uint64_t v38 = v62;
    sub_1C97D1F40(v67 + *(int *)(v37 + 20), v62);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1C9967504(v38, (void (*)(void))type metadata accessor for Parse);
    if (EnumCaseMultiPayload == 10)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C9BECF88();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EBC7A520);
      uint64_t v41 = (void *)sub_1C9BECF78();
      os_log_type_t v42 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_4(v42))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_13_0(&dword_1C95F9000, v43, v44, "Prompt received empty parse. Will re-prompt.");
        OUTLINED_FUNCTION_18_42();
      }

      type metadata accessor for Inform();
      OUTLINED_FUNCTION_28_24();
      sub_1C9891138((uint64_t)&unk_1EA592E20, (uint64_t)v5);
      swift_retain_n();
      Inform.onSuccess(_:)((uint64_t)sub_1C9967364, (uint64_t)v5);
    }
    if (sub_1C99A6FAC(v67))
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C9BECF88();
      __swift_project_value_buffer(v48, (uint64_t)qword_1EBC7A520);
      unint64_t v49 = (void *)sub_1C9BECF78();
      os_log_type_t v50 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_4(v50))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_13_0(&dword_1C95F9000, v51, v52, "Prompt received received low confidence input. Treating as misunderstood and will re-prompt.");
        OUTLINED_FUNCTION_18_42();
      }

      type metadata accessor for Inform();
      OUTLINED_FUNCTION_28_24();
      sub_1C9891138((uint64_t)&unk_1EA592E10, (uint64_t)v5);
      swift_retain_n();
      Inform.onSuccess(_:)((uint64_t)sub_1C9967364, (uint64_t)v5);
    }
    uint64_t result = sub_1C9939A54();
    if (result)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1C9BECF88();
      __swift_project_value_buffer(v53, (uint64_t)qword_1EBC7A520);
      uint64_t v54 = (void *)sub_1C9BECF78();
      os_log_type_t v55 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_4(v55))
      {
        *(_WORD *)swift_slowAlloc() = 0;
        OUTLINED_FUNCTION_13_0(&dword_1C95F9000, v56, v57, "Prompt received user cancellation.");
        OUTLINED_FUNCTION_18_42();
      }

      sub_1C97962E8();
      uint64_t v58 = swift_allocError();
      uint64_t v59 = (uint64_t)v64;
      *uint64_t v64 = v58;
      swift_storeEnumTagMultiPayload();
      sub_1C99667FC(v59);
    }
  }
  *(void *)a2 = 1;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(unsigned char *)(a2 + 40) = 2;
  return result;
}

uint64_t type metadata accessor for Prompt.Event()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for Interpretable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for Prompt.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9965778(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C9965798, 0, 0);
}

uint64_t sub_1C9965798()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_80_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C996A324;
  uint64_t v3 = OUTLINED_FUNCTION_5_66();
  return v4(v3);
}

uint64_t sub_1C9965870(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C9965890, 0, 0);
}

uint64_t sub_1C9965890()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_80_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9965968;
  uint64_t v3 = OUTLINED_FUNCTION_5_66();
  return v4(v3);
}

uint64_t sub_1C9965968()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

void sub_1C9965A2C()
{
  type metadata accessor for Prompt.Event();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v0, v1);
  sub_1C9966F88();
}

uint64_t Prompt.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v3 = sub_1C9BEE788();
  type metadata accessor for Conclude();
  OUTLINED_FUNCTION_0();
  uint64_t v32 = v5;
  uint64_t v33 = v4;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v31 - v8;
  OUTLINED_FUNCTION_0();
  uint64_t v31 = v10;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v31 - v13;
  type metadata accessor for Yield(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v17 = MEMORY[0x1F4188790](v15, v16);
  uint64_t v19 = (uint64_t *)((char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v17, v20);
  uint64_t v22 = (void (**)())((char *)&v31 - v21);
  type metadata accessor for Prompt.State();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v23, v24);
  OUTLINED_FUNCTION_33_22(v25, v31);
  switch(__swift_getEnumTagSinglePayload(v2, 3, v3))
  {
    case 1u:
      type metadata accessor for Inform();
      OUTLINED_FUNCTION_28_24();
      sub_1C9891138((uint64_t)&unk_1EA592E40, v1);
      OUTLINED_FUNCTION_12_52();
      swift_retain_n();
      Inform.onSuccess(_:)((uint64_t)sub_1C99674C4, v1);
    case 2u:
      type metadata accessor for Prompt();
      swift_getWitnessTable();
      sub_1C96C3AC0(v19);
      *uint64_t v22 = sub_1C99674E4;
      v22[1] = (void (*)())v1;
      type metadata accessor for FlowActionType(0);
      swift_storeEnumTagMultiPayload();
      sub_1C9BEC838();
    case 3u:
      type metadata accessor for Inform();
      OUTLINED_FUNCTION_28_24();
      sub_1C9891138((uint64_t)&unk_1EA592E30, v1);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58BB38);
      swift_allocObject();
      OUTLINED_FUNCTION_12_52();
      sub_1C9BEC838();
    default:
      uint64_t v26 = v31;
      OUTLINED_FUNCTION_49_4();
      v27();
      type metadata accessor for Prompt();
      swift_getWitnessTable();
      ActingFlow.conclude(with:)((uint64_t)v14, (uint64_t)v9);
      uint64_t v28 = v33;
      uint64_t v36 = v33;
      uint64_t v37 = &protocol witness table for Conclude<A>;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
      (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(boxed_opaque_existential_0, v9, v28);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v3);
      return sub_1C95FD5D8(&v35, v34);
  }
}

uint64_t sub_1C9966084(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C99660A4, 0, 0);
}

uint64_t sub_1C99660A4()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_80_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C996A324;
  uint64_t v3 = OUTLINED_FUNCTION_5_66();
  return v4(v3);
}

uint64_t sub_1C996617C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C996619C, 0, 0);
}

uint64_t sub_1C996619C()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_80_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C996A324;
  uint64_t v3 = OUTLINED_FUNCTION_5_66();
  return v4(v3);
}

void sub_1C9966274()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  oslog = sub_1C9BECF78();
  os_log_type_t v1 = sub_1C9BEDC78();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1C95F9000, oslog, v1, "Prompt segue.", v2, 2u);
    MEMORY[0x1CB78C440](v2, -1, -1);
  }
}

void sub_1C996635C()
{
  type metadata accessor for Prompt.Event();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_21_31();
  swift_storeEnumTagMultiPayload();
  sub_1C99667FC(v0);
}

void sub_1C996640C(void *a1)
{
  type metadata accessor for Prompt.Event();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_21_31();
  *uint64_t v1 = a1;
  swift_storeEnumTagMultiPayload();
  id v5 = a1;
  sub_1C99667FC((uint64_t)v1);
}

void sub_1C99664C8()
{
}

uint64_t sub_1C996651C()
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_22_2();
  uint64_t v3 = OUTLINED_FUNCTION_25_33();
  v4(v3);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v5 = sub_1C9BEE788();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v0, 3, v5);
  uint64_t result = 0x6B61657073;
  switch(EnumTagSinglePayload)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x6E656B6F7073;
      break;
    case 3:
      uint64_t result = 0x46676E6974696177;
      break;
    default:
      uint64_t v8 = OUTLINED_FUNCTION_33_1();
      v9(v8);
      uint64_t result = 1701736292;
      break;
  }
  return result;
}

uint64_t sub_1C996666C()
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_22_2();
  uint64_t v3 = OUTLINED_FUNCTION_25_33();
  v4(v3);
  OUTLINED_FUNCTION_33_1();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x646574706D6F7270;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v9 = *v0;
      sub_1C9BED6B8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
      sub_1C9BEE348();
      sub_1C9BED6B8();

      uint64_t result = 0;
      break;
    case 2:
      return result;
    case 3:
      uint64_t result = 0x49726F4674696177;
      break;
    default:
      uint64_t v7 = OUTLINED_FUNCTION_33_1();
      v8(v7);
      uint64_t result = 0x6572707265746E69;
      break;
  }
  return result;
}

void sub_1C99667FC(uint64_t a1)
{
  OUTLINED_FUNCTION_0();
  v27[9] = v2;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v3, v4);
  v27[7] = (char *)v27 - v5;
  type metadata accessor for Prompt.State();
  type metadata accessor for Prompt.Event();
  v27[16] = swift_getTupleTypeMetadata2();
  OUTLINED_FUNCTION_0();
  v27[10] = v6;
  OUTLINED_FUNCTION_12_4();
  uint64_t v9 = MEMORY[0x1F4188790](v7, v8);
  v27[17] = (char *)v27 - v10;
  MEMORY[0x1F4188790](v9, v11);
  OUTLINED_FUNCTION_2_0();
  v27[14] = v12;
  MEMORY[0x1F4188790](v13, v14);
  v27[18] = (char *)v27 - v15;
  OUTLINED_FUNCTION_0();
  uint64_t v28 = v16;
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_2_0();
  v27[8] = v19;
  uint64_t v22 = MEMORY[0x1F4188790](v20, v21);
  v27[12] = (char *)v27 - v23;
  MEMORY[0x1F4188790](v22, v24);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1C9BECF88();
  __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
  uint64_t v26 = *(void (**)(void))(v28 + 16);
  v27[15] = a1;
  OUTLINED_FUNCTION_19_42();
  v26();
  sub_1C9BEC838();
}

void sub_1C9966F88()
{
}

uint64_t Prompt.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  type metadata accessor for Prompt.State();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  swift_release();
  return v0;
}

uint64_t Prompt.__deallocating_deinit()
{
  Prompt.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C99670D0@<X0>(uint64_t a1@<X8>)
{
  return Prompt.action.getter(a1);
}

uint64_t sub_1C99670F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Prompt.accept(input:)(a1, a2);
}

uint64_t sub_1C9967118()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_29_26();
  return PromptProviding.segue()();
}

uint64_t sub_1C99671B4()
{
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_29_26();
  return PromptProviding.repromptOnEmptyParse()();
}

uint64_t sub_1C9967250()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  return PromptProviding.repromptOnLowConfidence()();
}

uint64_t sub_1C99672DC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9965870(v3, v4);
}

void sub_1C9967364()
{
}

void sub_1C9967380(void *a1)
{
}

uint64_t sub_1C996739C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9965778(v3, v4);
}

uint64_t type metadata accessor for Prompt()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C996743C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C996617C(v3, v4);
}

void sub_1C99674C4()
{
}

void sub_1C99674E4()
{
}

uint64_t sub_1C9967504(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C996755C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Yield(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C99675C0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9966084(v3, v4);
}

uint64_t sub_1C9967648(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_23;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_23;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 > 3) {
            LODWORD(v7) = 4;
          }
          switch((int)v7)
          {
            case 2:
              LODWORD(v7) = *a1;
              break;
            case 3:
              LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              LODWORD(v7) = *(_DWORD *)a1;
              break;
            default:
              LODWORD(v7) = *(unsigned __int8 *)a1;
              break;
          }
        }
        return v6 + (v7 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_23:
  if (v5 < 2) {
    return 0;
  }
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  if (EnumTagSinglePayload >= 2) {
    return EnumTagSinglePayload - 1;
  }
  else {
    return 0;
  }
}

void sub_1C99677CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v9) {
    size_t v11 = *(void *)(v8 + 64);
  }
  else {
    size_t v11 = *(void *)(v8 + 64) + 1;
  }
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v10;
  unsigned int v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v15 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v15))
      {
        int v6 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v6 = 2;
      }
      else
      {
        int v6 = v15 > 1;
      }
    }
    else
    {
      int v6 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v18 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v6)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_28;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C99679ECLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_27;
    default:
LABEL_27:
      if (a2)
      {
LABEL_28:
        if (v9 >= 2)
        {
          uint64_t v19 = a2 + 1;
          __swift_storeEnumTagSinglePayload((uint64_t)a1, v19, v9, v7);
        }
      }
      return;
  }
}

uint64_t dispatch thunk of InputInterpreting.interpret(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PromptProviding.prompt()()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_8_63(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v10(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t dispatch thunk of PromptProviding.segue()()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of PromptProviding.repromptOnEmptyParse()()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C973D55C;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of PromptProviding.repromptOnLowConfidence()()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9967D80()
{
  uint64_t result = type metadata accessor for Prompt.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for Prompt(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Prompt);
}

uint64_t dispatch thunk of Prompt.__allocating_init(for:interpreter:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of Prompt.onReprompt(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t sub_1C9967E7C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t result = sub_1C9BEE788();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1C9967F14(void *__dst, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if ((*(_DWORD *)(v4 + 80) & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    char *__dst = *a2;
    sub_1C9BEC838();
  }
  unsigned int v7 = *((unsigned __int8 *)a2 + v5);
  if (v7 > 1)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else if (v7 == 1)
  {
    uint64_t v8 = *a2;
    id v9 = (id)*a2;
    char *__dst = v8;
    *((unsigned char *)__dst + v5) = 1;
  }
  else
  {
    (*(void (**)(void *))(v4 + 16))(__dst);
    *((unsigned char *)__dst + v5) = 0;
  }
  return __dst;
}

void sub_1C9968028(id *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = *((unsigned __int8 *)a1 + v2);
  if (v3 <= 1)
  {
    if (v3 == 1) {

    }
    else {
      (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
    }
  }
}

void *sub_1C99680A8(void *__dst, id *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = *((unsigned __int8 *)a2 + v4);
  if (v5 > 1)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else if (v5 == 1)
  {
    id v6 = *a2;
    id v7 = *a2;
    char *__dst = v6;
    *((unsigned char *)__dst + v4) = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    *((unsigned char *)__dst + v4) = 0;
  }
  return __dst;
}

id *sub_1C996817C(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = *((unsigned __int8 *)__dst + v7);
  unsigned int v9 = *((unsigned __int8 *)__src + v7);
  if (v8 > 1)
  {
    if (v9 <= 1)
    {
      if (v9 != 1)
      {
LABEL_29:
        (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
        *((unsigned char *)__dst + v7) = 0;
        return __dst;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(__dst, __src, v7 + 1);
    return __dst;
  }
  if (v9 > 1)
  {
    if (v8 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    goto LABEL_15;
  }
  if (__dst != __src)
  {
    if (v8 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v12 = *((unsigned __int8 *)__src + v7);
    unsigned int v13 = v12 - 2;
    if (v12 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v14 = v7;
      }
      else {
        uint64_t v14 = 4;
      }
      switch(v14)
      {
        case 1:
          int v15 = *(unsigned __int8 *)__src;
          goto LABEL_26;
        case 2:
          int v15 = *(unsigned __int16 *)__src;
          goto LABEL_26;
        case 3:
          int v15 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_26;
        case 4:
          int v15 = *(_DWORD *)__src;
LABEL_26:
          int v16 = (v15 | (v13 << (8 * v7))) + 2;
          unsigned int v12 = v15 + 2;
          if (v7 < 4) {
            unsigned int v12 = v16;
          }
          break;
        default:
          break;
      }
    }
    if (v12 != 1) {
      goto LABEL_29;
    }
LABEL_11:
    id v10 = *__src;
    id v11 = v10;
    char *__dst = v10;
    *((unsigned char *)__dst + v7) = 1;
  }
  return __dst;
}

void *sub_1C9968378(void *__dst, void *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = *((unsigned __int8 *)a2 + v4);
  if (v5 > 1)
  {
    memcpy(__dst, a2, v4 + 1);
  }
  else if (v5 == 1)
  {
    char *__dst = *a2;
    *((unsigned char *)__dst + v4) = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    *((unsigned char *)__dst + v4) = 0;
  }
  return __dst;
}

id *sub_1C996843C(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  unsigned int v8 = *((unsigned __int8 *)__dst + v7);
  unsigned int v9 = *((unsigned __int8 *)__src + v7);
  if (v8 > 1)
  {
    if (v9 <= 1)
    {
      if (v9 != 1)
      {
LABEL_29:
        (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
        *((unsigned char *)__dst + v7) = 0;
        return __dst;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(__dst, __src, v7 + 1);
    return __dst;
  }
  if (v9 > 1)
  {
    if (v8 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    goto LABEL_15;
  }
  if (__dst != __src)
  {
    if (v8 == 1) {

    }
    else {
      (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v10 = *((unsigned __int8 *)__src + v7);
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v12 = v7;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *(unsigned __int8 *)__src;
          goto LABEL_26;
        case 2:
          int v13 = *(unsigned __int16 *)__src;
          goto LABEL_26;
        case 3:
          int v13 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
          goto LABEL_26;
        case 4:
          int v13 = *(_DWORD *)__src;
LABEL_26:
          int v14 = (v13 | (v11 << (8 * v7))) + 2;
          unsigned int v10 = v13 + 2;
          if (v7 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 != 1) {
      goto LABEL_29;
    }
LABEL_11:
    char *__dst = *__src;
    *((unsigned char *)__dst + v7) = 1;
  }
  return __dst;
}

uint64_t sub_1C9968630(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) > 3) {
    goto LABEL_6;
  }
  unsigned int v9 = ((a2 + ~(-1 << v6) - 251) >> v6) + 1;
  if (HIWORD(v9))
  {
    int v7 = *(_DWORD *)((char *)a1 + v5);
    if (v7) {
      goto LABEL_14;
    }
LABEL_22:
    unsigned int v11 = *((unsigned __int8 *)a1 + v4);
    if (v11 >= 2) {
      unsigned int v12 = (v11 ^ 0xFF) + 1;
    }
    else {
      unsigned int v12 = 0;
    }
    if (v12 >= 4) {
      return v12 - 3;
    }
    else {
      return 0;
    }
  }
  if (v9 > 0xFF)
  {
    int v7 = *(unsigned __int16 *)((char *)a1 + v5);
    if (*(unsigned __int16 *)((char *)a1 + v5)) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  if (v9 < 2) {
    goto LABEL_22;
  }
LABEL_6:
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 252;
}

void sub_1C9968770(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFC)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 251) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFB)
  {
    unsigned int v9 = a2 - 252;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C9968938);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -3 - a2;
        break;
    }
  }
}

uint64_t sub_1C9968960(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + v2);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_1C9968998(_WORD *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v4 <= 8) {
    unint64_t v4 = 8;
  }
  if (a2 > 0xFE)
  {
    size_t v5 = (v4 + 1);
    if (v5 <= 3) {
      int v6 = ~(-1 << (8 * v5));
    }
    else {
      int v6 = -1;
    }
    if (v5)
    {
      int v7 = v6 & (a2 - 255);
      if (v5 <= 3) {
        int v8 = v5;
      }
      else {
        int v8 = 4;
      }
      bzero(a1, v5);
      switch(v8)
      {
        case 2:
          *a1 = v7;
          break;
        case 3:
          *a1 = v7;
          *((unsigned char *)a1 + 2) = BYTE2(v7);
          break;
        case 4:
          *(_DWORD *)a1 = v7;
          break;
        default:
          *(unsigned char *)a1 = v7;
          break;
      }
    }
  }
  else if (a2)
  {
    *((unsigned char *)a1 + v4) = -(char)a2;
  }
}

uint64_t sub_1C9968A90()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1C9968B24(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  char v6 = 8 * v5;
  if (v5 > 3) {
    goto LABEL_8;
  }
  unsigned int v7 = ((1 << v6) + 1) >> v6;
  uint64_t v8 = 2;
  if (v7 > 0xFFFD) {
    uint64_t v8 = 4;
  }
  if (v7 <= 0xFD) {
LABEL_8:
  }
    uint64_t v8 = 1;
  if ((unint64_t)(v8 + v5) > 0x18 || (*(_DWORD *)(v4 + 80) & 0x1000F8) != 0)
  {
    *(void *)__dst = *(void *)a2;
    sub_1C9BEC838();
  }
  if (v5 > 3) {
    goto LABEL_15;
  }
  unsigned int v11 = ((1 << v6) + 1) >> v6;
  if (v11 > 0xFFFD)
  {
    unsigned int v10 = *(_DWORD *)&a2[v5];
  }
  else
  {
    if (v11 <= 0xFD)
    {
LABEL_15:
      unsigned int v10 = a2[v5];
      goto LABEL_20;
    }
    unsigned int v10 = *(unsigned __int16 *)&a2[v5];
  }
LABEL_20:
  unsigned int v12 = v10 - 2;
  if (v10 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v13 = v5;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a2;
        goto LABEL_29;
      case 2:
        int v14 = *(unsigned __int16 *)a2;
        goto LABEL_29;
      case 3:
        int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_29;
      case 4:
        int v14 = *(_DWORD *)a2;
LABEL_29:
        if (v5 < 4) {
          v14 |= v12 << v6;
        }
        unsigned int v10 = v14 + 2;
        break;
      default:
        break;
    }
  }
  if (v10 == 1)
  {
    uint64_t v16 = *(void *)a2;
    id v17 = *(id *)a2;
    *(void *)__dst = v16;
    if (v5 > 3) {
      goto LABEL_39;
    }
    unsigned int v20 = ((1 << v6) + 1) >> v6;
    if (v20 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v5] = 1;
      return __dst;
    }
    if (v20 <= 0xFD) {
LABEL_39:
    }
      __dst[v5] = 1;
    else {
      *(_WORD *)&__dst[v5] = 1;
    }
  }
  else if (v10)
  {
    if (v5 > 3) {
      goto LABEL_44;
    }
    unsigned int v18 = ((1 << v6) + 1) >> v6;
    uint64_t v19 = 2;
    if (v18 > 0xFFFD) {
      uint64_t v19 = 4;
    }
    if (v18 <= 0xFD) {
LABEL_44:
    }
      uint64_t v19 = 1;
    memcpy(__dst, a2, v19 + v5);
  }
  else
  {
    (*(void (**)(char *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      unsigned int v15 = ((1 << v6) + 1) >> v6;
      if (v15 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v5] = 0;
        return __dst;
      }
      if (v15 > 0xFD)
      {
        *(_WORD *)&__dst[v5] = 0;
        return __dst;
      }
    }
    __dst[v5] = 0;
  }
  return __dst;
}

void sub_1C9968DE0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  char v3 = 8 * v2;
  if (v2 > 3) {
    goto LABEL_4;
  }
  unsigned int v5 = ((1 << v3) + 1) >> v3;
  if (v5 > 0xFFFD)
  {
    unsigned int v4 = *(_DWORD *)&a1[v2];
  }
  else
  {
    if (v5 <= 0xFD)
    {
LABEL_4:
      unsigned int v4 = a1[v2];
      goto LABEL_9;
    }
    unsigned int v4 = *(unsigned __int16 *)&a1[v2];
  }
LABEL_9:
  unsigned int v6 = v4 - 2;
  if (v4 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_18;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_18:
        int v9 = (v8 | (v6 << v3)) + 2;
        unsigned int v4 = v8 + 2;
        if (v2 < 4) {
          unsigned int v4 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 1)
  {
  }
  else if (!v4)
  {
    (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

char *sub_1C9968F24(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  char v5 = 8 * v4;
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v7 = ((1 << v5) + 1) >> v5;
  if (v7 > 0xFFFD)
  {
    unsigned int v6 = *(_DWORD *)&a2[v4];
  }
  else
  {
    if (v7 <= 0xFD)
    {
LABEL_5:
      unsigned int v6 = a2[v4];
      goto LABEL_10;
    }
    unsigned int v6 = *(unsigned __int16 *)&a2[v4];
  }
LABEL_10:
  unsigned int v8 = v6 - 2;
  if (v6 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_19;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_19:
        int v11 = (v10 | (v8 << v5)) + 2;
        unsigned int v6 = v10 + 2;
        if (v4 < 4) {
          unsigned int v6 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    uint64_t v13 = *(void *)a2;
    id v14 = *(id *)a2;
    *(void *)__dst = v13;
    if (v4 > 3) {
      goto LABEL_28;
    }
    unsigned int v17 = ((1 << v5) + 1) >> v5;
    if (v17 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v4] = 1;
      return __dst;
    }
    if (v17 <= 0xFD) {
LABEL_28:
    }
      __dst[v4] = 1;
    else {
      *(_WORD *)&__dst[v4] = 1;
    }
  }
  else if (v6)
  {
    if (v4 > 3) {
      goto LABEL_33;
    }
    unsigned int v15 = ((1 << v5) + 1) >> v5;
    uint64_t v16 = 2;
    if (v15 > 0xFFFD) {
      uint64_t v16 = 4;
    }
    if (v15 <= 0xFD) {
LABEL_33:
    }
      uint64_t v16 = 1;
    memcpy(__dst, a2, v16 + v4);
  }
  else
  {
    (*(void (**)(char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst);
    if (v4 <= 3)
    {
      unsigned int v12 = ((1 << v5) + 1) >> v5;
      if (v12 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v4] = 0;
        return __dst;
      }
      if (v12 > 0xFD)
      {
        *(_WORD *)&__dst[v4] = 0;
        return __dst;
      }
    }
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1C996916C(id *__dst, id *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    unsigned int v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      unsigned int v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    unsigned int v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  unsigned int v11 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)__dst;
        goto LABEL_20;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        goto LABEL_20;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_20:
        if (v7 < 4) {
          v13 |= v11 << v8;
        }
        unsigned int v9 = v13 + 2;
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
  }
  else if (!v9)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
  }
  if (v7 > 3) {
    goto LABEL_28;
  }
  unsigned int v15 = ((1 << v8) + 1) >> v8;
  if (v15 > 0xFFFD)
  {
    unsigned int v14 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v15 <= 0xFD)
    {
LABEL_28:
      unsigned int v14 = *((unsigned __int8 *)__src + v7);
      goto LABEL_33;
    }
    unsigned int v14 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_33:
  unsigned int v16 = v14 - 2;
  if (v14 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v17 = v7;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *(unsigned __int8 *)__src;
        goto LABEL_42;
      case 2:
        int v18 = *(unsigned __int16 *)__src;
        goto LABEL_42;
      case 3:
        int v18 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_42;
      case 4:
        int v18 = *(_DWORD *)__src;
LABEL_42:
        if (v7 < 4) {
          v18 |= v16 << v8;
        }
        unsigned int v14 = v18 + 2;
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    id v20 = *__src;
    id v21 = v20;
    char *__dst = v20;
    if (v7 > 3) {
      goto LABEL_52;
    }
    unsigned int v24 = ((1 << v8) + 1) >> v8;
    if (v24 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v24 <= 0xFD) {
LABEL_52:
    }
      *((unsigned char *)__dst + v7) = 1;
    else {
      *(_WORD *)((char *)__dst + v7) = 1;
    }
  }
  else if (v14)
  {
    if (v7 > 3) {
      goto LABEL_57;
    }
    unsigned int v22 = ((1 << v8) + 1) >> v8;
    uint64_t v23 = 2;
    if (v22 > 0xFFFD) {
      uint64_t v23 = 4;
    }
    if (v22 <= 0xFD) {
LABEL_57:
    }
      uint64_t v23 = 1;
    memcpy(__dst, __src, v23 + v7);
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v19 = ((1 << v8) + 1) >> v8;
      if (v19 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v19 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((unsigned char *)__dst + v7) = 0;
  }
  return __dst;
}

char *sub_1C99694C4(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  char v5 = 8 * v4;
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v7 = ((1 << v5) + 1) >> v5;
  if (v7 > 0xFFFD)
  {
    unsigned int v6 = *(_DWORD *)&a2[v4];
  }
  else
  {
    if (v7 <= 0xFD)
    {
LABEL_5:
      unsigned int v6 = a2[v4];
      goto LABEL_10;
    }
    unsigned int v6 = *(unsigned __int16 *)&a2[v4];
  }
LABEL_10:
  unsigned int v8 = v6 - 2;
  if (v6 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_19;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_19:
        int v11 = (v10 | (v8 << v5)) + 2;
        unsigned int v6 = v10 + 2;
        if (v4 < 4) {
          unsigned int v6 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *(void *)__dst = *(void *)a2;
    if (v4 > 3) {
      goto LABEL_28;
    }
    unsigned int v15 = ((1 << v5) + 1) >> v5;
    if (v15 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v4] = 1;
      return __dst;
    }
    if (v15 <= 0xFD) {
LABEL_28:
    }
      __dst[v4] = 1;
    else {
      *(_WORD *)&__dst[v4] = 1;
    }
  }
  else if (v6)
  {
    if (v4 > 3) {
      goto LABEL_33;
    }
    unsigned int v13 = ((1 << v5) + 1) >> v5;
    uint64_t v14 = 2;
    if (v13 > 0xFFFD) {
      uint64_t v14 = 4;
    }
    if (v13 <= 0xFD) {
LABEL_33:
    }
      uint64_t v14 = 1;
    memcpy(__dst, a2, v14 + v4);
  }
  else
  {
    (*(void (**)(char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    if (v4 <= 3)
    {
      unsigned int v12 = ((1 << v5) + 1) >> v5;
      if (v12 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v4] = 0;
        return __dst;
      }
      if (v12 > 0xFD)
      {
        *(_WORD *)&__dst[v4] = 0;
        return __dst;
      }
    }
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1C9969704(id *__dst, id *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    unsigned int v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      unsigned int v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    unsigned int v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  unsigned int v11 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)__dst;
        goto LABEL_20;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        goto LABEL_20;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_20:
        int v14 = (v13 | (v11 << v8)) + 2;
        unsigned int v9 = v13 + 2;
        if (v7 < 4) {
          unsigned int v9 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
  }
  else if (!v9)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
  }
  if (v7 > 3) {
    goto LABEL_27;
  }
  unsigned int v16 = ((1 << v8) + 1) >> v8;
  if (v16 > 0xFFFD)
  {
    unsigned int v15 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v16 <= 0xFD)
    {
LABEL_27:
      unsigned int v15 = *((unsigned __int8 *)__src + v7);
      goto LABEL_32;
    }
    unsigned int v15 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_32:
  unsigned int v17 = v15 - 2;
  if (v15 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v18 = v7;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *(unsigned __int8 *)__src;
        goto LABEL_41;
      case 2:
        int v19 = *(unsigned __int16 *)__src;
        goto LABEL_41;
      case 3:
        int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_41;
      case 4:
        int v19 = *(_DWORD *)__src;
LABEL_41:
        int v20 = (v19 | (v17 << v8)) + 2;
        unsigned int v15 = v19 + 2;
        if (v7 < 4) {
          unsigned int v15 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    char *__dst = *__src;
    if (v7 > 3) {
      goto LABEL_50;
    }
    unsigned int v24 = ((1 << v8) + 1) >> v8;
    if (v24 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v24 <= 0xFD) {
LABEL_50:
    }
      *((unsigned char *)__dst + v7) = 1;
    else {
      *(_WORD *)((char *)__dst + v7) = 1;
    }
  }
  else if (v15)
  {
    if (v7 > 3) {
      goto LABEL_55;
    }
    unsigned int v22 = ((1 << v8) + 1) >> v8;
    uint64_t v23 = 2;
    if (v22 > 0xFFFD) {
      uint64_t v23 = 4;
    }
    if (v22 <= 0xFD) {
LABEL_55:
    }
      uint64_t v23 = 1;
    memcpy(__dst, __src, v23 + v7);
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v21 = ((1 << v8) + 1) >> v8;
      if (v21 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v21 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((unsigned char *)__dst + v7) = 0;
  }
  return __dst;
}

uint64_t sub_1C9969A5C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  char v4 = 8;
  if (*(void *)(v3 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(v3 + 64);
  }
  char v6 = 8 * v5;
  if (v5 > 3)
  {
    int v7 = 3;
    goto LABEL_14;
  }
  unsigned int v8 = ((1 << v6) + 1) >> v6;
  if (v8 >= 0xFFFE) {
    char v9 = 32;
  }
  else {
    char v9 = 16;
  }
  if (v8 >= 0xFE) {
    char v4 = v9;
  }
  else {
    char v4 = 8;
  }
  if (v8 <= 0xFFFD)
  {
    int v7 = v8 + 2;
LABEL_14:
    unsigned int v10 = (1 << v4) - v7;
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_16;
    }
  }
  unsigned int v10 = 0x7FFFFFFF;
LABEL_16:
  if (v5 > 3) {
    goto LABEL_20;
  }
  unsigned int v11 = ((1 << v6) + 1) >> v6;
  uint64_t v12 = 2;
  if (v11 > 0xFFFD) {
    uint64_t v12 = 4;
  }
  if (v11 <= 0xFD) {
LABEL_20:
  }
    uint64_t v12 = 1;
  if (!a2) {
    return 0;
  }
  if (a2 <= v10) {
    goto LABEL_41;
  }
  uint64_t v13 = v12 + v5;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_41;
      }
      goto LABEL_31;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_41;
      }
      goto LABEL_31;
    }
    if (v16 < 2)
    {
LABEL_41:
      if (v10)
      {
        if (v5 > 3) {
          goto LABEL_45;
        }
        unsigned int v20 = ((1 << v6) + 1) >> v6;
        if (v20 > 0xFFFD)
        {
          unsigned int v22 = *(_DWORD *)((char *)a1 + v5);
          unsigned int v23 = ~v22;
          goto LABEL_59;
        }
        if (v20 >= 0xFE)
        {
          int v26 = *(unsigned __int16 *)((char *)a1 + v5);
          unsigned int v22 = v26 | 0xFFFF0000;
          unsigned int v23 = v26 ^ 0xFFFF;
        }
        else
        {
LABEL_45:
          int v21 = *((unsigned __int8 *)a1 + v5);
          unsigned int v22 = v21 | 0xFFFFFF00;
          unsigned int v23 = v21 ^ 0xFF;
          if (v5 > 3)
          {
            int v24 = 3;
            goto LABEL_52;
          }
        }
        unsigned int v27 = ((1 << v6) + 1) >> v6;
        if (v27 <= 0xFFFD)
        {
          int v24 = v27 + 2;
          if (v27 > 0xFD)
          {
            char v28 = 16;
LABEL_58:
            unsigned int v29 = (1 << v28) - v24;
            if ((v29 & 0x80000000) == 0) {
              goto LABEL_60;
            }
            goto LABEL_59;
          }
LABEL_52:
          char v28 = 8;
          goto LABEL_58;
        }
LABEL_59:
        unsigned int v29 = 0x7FFFFFFF;
LABEL_60:
        if (v29 > v23) {
          return -v22;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_41;
  }
LABEL_31:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1C9969CD8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  char v6 = 8;
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  char v7 = 8 * v5;
  if (v5 <= 3)
  {
    unsigned int v9 = ((1 << v7) + 1) >> v7;
    if (v9 >= 0xFFFE) {
      char v10 = 32;
    }
    else {
      char v10 = 16;
    }
    if (v9 >= 0xFE) {
      char v6 = v10;
    }
    else {
      char v6 = 8;
    }
    if (v9 > 0xFFFD) {
      goto LABEL_14;
    }
    int v8 = v9 + 2;
  }
  else
  {
    int v8 = 3;
  }
  unsigned int v11 = (1 << v6) - v8;
  if ((v11 & 0x80000000) != 0) {
LABEL_14:
  }
    unsigned int v11 = 0x7FFFFFFF;
  if (v5 > 3) {
    goto LABEL_19;
  }
  unsigned int v12 = ((1 << v7) + 1) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFD) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFD) {
LABEL_19:
  }
    uint64_t v13 = 1;
  size_t v14 = v13 + v5;
  char v15 = 8 * (v13 + v5);
  if (a3 <= v11)
  {
    int v16 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v19 = ((a3 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v11 < a2)
  {
    unsigned int v17 = ~v11 + a2;
    if (v14 < 4)
    {
      int v18 = (v17 >> v15) + 1;
      if (v14)
      {
        int v20 = v17 & ~(-1 << v15);
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v14] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v18;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v14] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1C9969F74);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (!a2) {
        return;
      }
LABEL_40:
      int v21 = -a2;
      if (v5 > 3) {
        goto LABEL_41;
      }
      unsigned int v22 = ((1 << v7) + 1) >> v7;
      if (v22 > 0xFFFD)
      {
        *(_DWORD *)&a1[v5] = v21;
      }
      else if (v22 <= 0xFD)
      {
LABEL_41:
        a1[v5] = v21;
      }
      else
      {
        *(_WORD *)&a1[v5] = v21;
      }
      return;
  }
}

uint64_t sub_1C9969F9C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  char v4 = 8 * v3;
  if (v3 > 3) {
    goto LABEL_4;
  }
  unsigned int v6 = ((1 << v4) + 1) >> v4;
  if (v6 > 0xFFFD)
  {
    uint64_t v5 = *(unsigned int *)&a1[v3];
  }
  else
  {
    if (v6 <= 0xFD)
    {
LABEL_4:
      uint64_t v5 = a1[v3];
      goto LABEL_9;
    }
    uint64_t v5 = *(unsigned __int16 *)&a1[v3];
  }
LABEL_9:
  int v7 = v5 - 2;
  if (v5 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v8 = v3;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_18;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v10 = (v9 | (v7 << v4)) + 2;
        LODWORD(v5) = v9 + 2;
        if (v3 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v10;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_1C996A090(char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v5 = 8;
  }
  else {
    size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      int v8 = (v6 >> (8 * v5)) + 2;
      v6 &= ~(-1 << (8 * v5));
      int v7 = (int *)&a1[v5];
      unsigned int v10 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v10 > 0xFFFD)
      {
        *int v7 = v8;
        goto LABEL_18;
      }
      if (v10 > 0xFD)
      {
        *(_WORD *)int v7 = v8;
        goto LABEL_18;
      }
    }
    else
    {
      int v7 = (int *)&a1[v5];
      LOBYTE(v8) = 2;
    }
    *(unsigned char *)int v7 = v8;
LABEL_18:
    if (v5 <= 3) {
      int v11 = v5;
    }
    else {
      int v11 = 4;
    }
    bzero(a1, v5);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v6;
        break;
      case 3:
        *(_WORD *)a1 = v6;
        a1[2] = BYTE2(v6);
        break;
      case 4:
        *(_DWORD *)a1 = v6;
        break;
      default:
        *a1 = v6;
        break;
    }
    return;
  }
  if (v5 > 3)
  {
LABEL_6:
    a1[v5] = a2;
    return;
  }
  unsigned int v9 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v9 > 0xFFFD)
  {
    *(_DWORD *)&a1[v5] = a2;
  }
  else
  {
    if (v9 <= 0xFD) {
      goto LABEL_6;
    }
    *(_WORD *)&a1[v5] = a2;
  }
}

uint64_t sub_1C996A204()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C996A23C(uint64_t a1)
{
  return sub_1C9891784(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C996A244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a3 + 40) = a4;
  *(void *)(a3 + 48) = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a3 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a1, a4);
  *(void *)(a3 + 80) = a5;
  *(void *)(a3 + 88) = a7;
  size_t v14 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a3 + 56));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v14, a2, a5);
  *(void *)(a3 + 112) = nullsub_1;
  *(void *)(a3 + 120) = 0;
  *(void *)(a3 + 96) = 0;
  *(_WORD *)(a3 + 104) = -256;
  return a3;
}

uint64_t OUTLINED_FUNCTION_5_66()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_8_63(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 + 8;
}

uint64_t OUTLINED_FUNCTION_10_56()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_52()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_41()
{
  return v0;
}

void OUTLINED_FUNCTION_18_42()
{
  JUMPOUT(0x1CB78C440);
}

uint64_t OUTLINED_FUNCTION_24_32()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_25_33()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_27_28()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_28_24()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_29_26()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_33_22@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v3 = (char *)&a2 - a1;
  return sub_1C9964DA0((uint64_t)v3);
}

uint64_t OUTLINED_FUNCTION_34_24()
{
  return sub_1C9BEE788();
}

uint64_t static PromptFlowProviderType.selection<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = OUTLINED_FUNCTION_0_52(a1, a2, a3, a4);
  *char v4 = result | 0xC000000000000000;
  return result;
}

uint64_t static PromptFlowProviderType.continuation<A>(_:)@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C9BD0680(a1);
  *a2 = result | 0x4000000000000000;
  return result;
}

BOOL static PromptFlowProviderType.== infix(_:_:)(void *a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  switch(*a1 >> 62)
  {
    case 1:
      return v2 >> 62 == 1;
    case 2:
      return v2 >> 62 == 2;
    case 3:
      return v2 >> 62 == 3;
    default:
      return v2 >> 62 == 0;
  }
}

uint64_t static PromptFlowProviderType.action<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = OUTLINED_FUNCTION_0_52(a1, a2, a3, a4);
  *char v4 = result;
  return result;
}

uint64_t static PromptFlowProviderType.menu<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = OUTLINED_FUNCTION_0_52(a1, a2, a3, a4);
  *char v4 = result | 0x8000000000000000;
  return result;
}

uint64_t type metadata accessor for PromptFlowProviderType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C996A5D0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7D && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      unsigned int v2 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7C) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C996A624(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1C996A674(void *a1)
{
  return *a1 >> 62;
}

uint64_t *sub_1C996A680(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

uint64_t type metadata accessor for PromptFlowProviderType.ProviderType()
{
  return swift_getGenericMetadata();
}

uint64_t OUTLINED_FUNCTION_0_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9BD059C(a4);
}

uint64_t PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)()
{
  uint64_t v0 = swift_allocObject();
  PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)();
  return v0;
}

BOOL static ConfirmationResponse.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

__n128 sub_1C996A754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  *(void *)(v20 + 48) = a5;
  *(void *)(v20 + 56) = a6;
  *(void *)(v20 + 64) = a7;
  *(void *)(v20 + 72) = a8;
  *(_OWORD *)(v20 + 80) = a9;
  *(_OWORD *)(v20 + 96) = a10;
  __n128 result = a11;
  *(__n128 *)(v20 + 112) = a11;
  *(void *)(v20 + 128) = a12;
  *(void *)(v20 + 136) = a13;
  return result;
}

SiriKitFlow::SimpleConfirmationResponseProvider __swiftcall SimpleConfirmationResponseProvider.init(_:)(SiriKitFlow::SimpleConfirmationResponseProvider result)
{
  *uint64_t v1 = *(unsigned char *)result.confirmationResponse.value;
  return result;
}

void PromptForConfirmationFlow.__allocating_init(itemToConfirm:strategy:outputPublisher:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v6 = v5;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_82_2();
  v9();
  sub_1C95FD654(v1, (uint64_t)&v12);
  uint64_t v10 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v11 = OUTLINED_FUNCTION_11_14();
  sub_1C95FD5D8(&v12, v11 + 16);
  uint64_t v13 = v10;
  size_t v14 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(void *)&long long v12 = v11;
  sub_1C996BB64();
  __swift_destroy_boxed_opaque_existential_1(v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, AssociatedTypeWitness);
  OUTLINED_FUNCTION_10();
}

uint64_t ConfirmationResponse.description.getter()
{
  if (*v0) {
    return 0x657463656A65722ELL;
  }
  else {
    return 0x6D7269666E6F632ELL;
  }
}

uint64_t ConfirmationResponse.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t ConfirmationResponse.hashValue.getter()
{
  return sub_1C9BEE768();
}

void SimpleConfirmationResponseProvider.confirmationResponse.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SimpleConfirmationResponseProvider.confirmationResponse.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*SimpleConfirmationResponseProvider.confirmationResponse.modify())(void)
{
  return nullsub_1;
}

void ServerProvidedSiriKitConfirmationResponseParser.parseConfirmationResponse(input:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Input(0);
  sub_1C98C83FC(a1 + *(int *)(v8 + 20), (uint64_t)v7, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *(void *)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650) + 48)];
    sub_1C9BEC028();
    OUTLINED_FUNCTION_8_4();
    OUTLINED_FUNCTION_37();
    v10();
    switch(*(unsigned char *)(v9 + 24))
    {
      case 1:
      case 3:
        swift_release();
        char v11 = 1;
        break;
      case 2:
        swift_release();
        char v11 = 0;
        break;
      default:
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v16 = sub_1C9BECF88();
        uint64_t v13 = OUTLINED_FUNCTION_34(v16, (uint64_t)qword_1EBC7A520);
        os_log_type_t v17 = sub_1C9BEDC88();
        if (os_log_type_enabled(v13, v17))
        {
          *(_WORD *)OUTLINED_FUNCTION_19() = 0;
          OUTLINED_FUNCTION_12_2(&dword_1C95F9000, v18, v19, "Could not parse confirmation response from input: Input has missing confirmation state");
          OUTLINED_FUNCTION_11_4();
        }
        swift_release();
        goto LABEL_13;
    }
  }
  else
  {
    sub_1C9973380((uint64_t)v7, (void (*)(void))type metadata accessor for Parse);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C9BECF88();
    uint64_t v13 = OUTLINED_FUNCTION_34(v12, (uint64_t)qword_1EBC7A520);
    os_log_type_t v14 = sub_1C9BEDC88();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)char v15 = 0;
      _os_log_impl(&dword_1C95F9000, v13, v14, "Could not parse confirmation response from input: Input is not a NLv3 Intent with a server conversion", v15, 2u);
      OUTLINED_FUNCTION_11_4();
    }
LABEL_13:

    char v11 = 2;
  }
  *a2 = v11;
}

void sub_1C996ACF8(uint64_t a1@<X0>, char *a2@<X8>)
{
}

void sub_1C996AD14()
{
}

void PromptForConfirmationFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA593198;
  OUTLINED_FUNCTION_12_1(v5);
}

uint64_t sub_1C996AEC0(void (*a1)(void *))
{
  return PromptForConfirmationFlowStrategy.makeConfirmationRejectedResponse(_:)(a1);
}

uint64_t PromptForConfirmationFlowStrategy.makeConfirmationRejectedResponse(_:)(void (*a1)(void *))
{
  v3[3] = type metadata accessor for EmptyOutput();
  v3[4] = &protocol witness table for EmptyOutput;
  v3[0] = swift_allocObject();
  char v4 = 0;
  a1(v3);
  return sub_1C95FE81C((uint64_t)v3, (uint64_t *)&unk_1EBC764F8);
}

void sub_1C996AF54()
{
}

void PromptForConfirmationFlowStrategy.makeFlowCancelledResponse(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA5931A0;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C996B100()
{
}

void PromptForConfirmationFlowStrategy.makeErrorResponse(_:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA5931A8;
  OUTLINED_FUNCTION_12_1(v5);
}

uint64_t sub_1C996B2AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C97D6D18();
}

uint64_t sub_1C996B344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v9 + 16) = v18;
  *uint64_t v18 = v9;
  v18[1] = sub_1C9615888;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(a1, a2, a3, a4, v14, v15, v16, v17, a9);
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_68_10(v9, v10, v11, v12);
  int v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_17_0(v14);
  void *v15 = v16;
  v15[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t sub_1C996B4D4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D5F14();
}

uint64_t sub_1C996B5F4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(a1);
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9879998);
}

uint64_t sub_1C996B6A4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6D18();
}

uint64_t sub_1C996B7C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6734();
}

uint64_t PromptForConfirmationFlowStrategyAsync.actionForInputWrapper(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C996B904);
}

uint64_t sub_1C996B904()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void, void))(v0[5] + 32))(v0[3], v0[4]);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t PromptForConfirmationFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  return PromptForConfirmationFlowAsync.exitValue.getter(a1);
}

uint64_t PromptForConfirmationFlowAsync.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_100_4();
  OUTLINED_FUNCTION_100_4();
  OUTLINED_FUNCTION_100_4();
  uint64_t v2 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v14 - v7;
  OUTLINED_FUNCTION_100_4();
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_82_2();
  v9();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      OUTLINED_FUNCTION_103();
      return swift_storeEnumTagMultiPayload();
    case 6:
      char v13 = v8[8];
      *(void *)a1 = *(void *)v8;
      *(unsigned char *)(a1 + 8) = v13;
      OUTLINED_FUNCTION_103();
      return swift_storeEnumTagMultiPayload();
    case 5:
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_8_4();
      return (*(uint64_t (**)(uint64_t, char *))(v11 + 32))(a1, v8);
    default:
      *(void *)a1 = sub_1C996DB70();
      *(unsigned char *)(a1 + 8) = 0;
      OUTLINED_FUNCTION_103();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v2);
  }
}

uint64_t sub_1C996BB64()
{
  swift_allocObject();
  OUTLINED_FUNCTION_14_36();
  sub_1C996BBB0();
  return v0;
}

void sub_1C996BBB0()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v12 = v2;
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v8, v9);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_101_4();
  type metadata accessor for PromptForConfirmationFlowAsync();
  OUTLINED_FUNCTION_82_2();
  v10();
  OUTLINED_FUNCTION_101_4();
  type metadata accessor for AnyPromptForConfirmationFlowStrategy();
  swift_unknownObjectRetain();
  sub_1C996BD6C();
  sub_1C95FD654(v12, (uint64_t)&v13);
  uint64_t v11 = sub_1C996BDA0();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, AssociatedTypeWitness);
  *(void *)(v1 + 16) = v11;
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C996BD6C()
{
  OUTLINED_FUNCTION_70_13();
  OUTLINED_FUNCTION_14_36();
  sub_1C9971054();
  return v0;
}

uint64_t sub_1C996BDA0()
{
  swift_allocObject();
  OUTLINED_FUNCTION_14_36();
  sub_1C996E394();
  return v0;
}

uint64_t PromptForConfirmationFlow.on(input:)()
{
  PromptForConfirmationFlowAsync.on(input:)();
  return v0 & 1;
}

void PromptForConfirmationFlowAsync.on(input:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v63 = v2;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_96_7();
  uint64_t v8 = *(void *)(v7 + 80);
  OUTLINED_FUNCTION_96_7();
  OUTLINED_FUNCTION_96_7();
  uint64_t v9 = (uint8_t *)type metadata accessor for PromptForConfirmationFlowAsync.State();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  uint64_t v62 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)&v62 - v17;
  OUTLINED_FUNCTION_0();
  uint64_t v20 = v19;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v24 = (char *)&v62 - v23;
  OUTLINED_FUNCTION_96_7();
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_82_2();
  v25();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v24, v18, v8);
    uint64_t v26 = type metadata accessor for Input(0);
    uint64_t v27 = v63;
    sub_1C98C83FC(v63 + *(int *)(v26 + 20), (uint64_t)v6, (void (*)(void))type metadata accessor for Parse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1C9973380((uint64_t)v6, (void (*)(void))type metadata accessor for Parse);
    if (EnumCaseMultiPayload == 10)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C9BECF88();
      uint64_t v30 = (void *)OUTLINED_FUNCTION_34(v29, (uint64_t)qword_1EBC7A520);
      os_log_type_t v31 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_123_0(v31))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_163(&dword_1C95F9000, v32, v33, "PromptForConfirmationFlow received empty parse. Will handle and reprompt.");
        OUTLINED_FUNCTION_11_4();
      }
LABEL_7:

      uint64_t v34 = v62;
      OUTLINED_FUNCTION_82_2();
      v35();
      OUTLINED_FUNCTION_94_3();
LABEL_31:
      swift_storeEnumTagMultiPayload();
      sub_1C996E080(v34);
      uint64_t v53 = OUTLINED_FUNCTION_92_8();
      v54(v53);
      goto LABEL_32;
    }
    if ((sub_1C966630C(v27) & 1) == 0)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v44 = sub_1C9BECF88();
      uint64_t v30 = (void *)OUTLINED_FUNCTION_34(v44, (uint64_t)qword_1EBC7A520);
      os_log_type_t v45 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_123_0(v45))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_163(&dword_1C95F9000, v46, v47, "PromptForConfirmationFlow received low confidence input. Treating as misunderstood and will reprompt.");
        OUTLINED_FUNCTION_11_4();
      }
      goto LABEL_7;
    }
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(v1 + 56) + 16))(&v64, v27);
    if (!(_BYTE)v64)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_1C9BECF88();
      unint64_t v49 = (void *)OUTLINED_FUNCTION_34(v48, (uint64_t)qword_1EBC7A520);
      os_log_type_t v50 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_123_0(v50))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_163(&dword_1C95F9000, v51, v52, "PromptForConfirmationFlow received cancel action from delegate. Transitioning to cancelled state.");
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v34 = v62;
      OUTLINED_FUNCTION_94_3();
      goto LABEL_31;
    }
    if (v64 == 1)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C9BECF88();
      uint64_t v41 = OUTLINED_FUNCTION_34(v40, (uint64_t)qword_1EBC7A520);
      os_log_type_t v42 = sub_1C9BEDC78();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl(&dword_1C95F9000, v41, v42, "PromptForConfirmationFlow received handle action from delegate. Transitioning to responseReceived state.", v43, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v34 = v62;
      sub_1C98C83FC(v27, v62, (void (*)(void))type metadata accessor for Input);
      OUTLINED_FUNCTION_94_3();
      goto LABEL_31;
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C9BECF88();
    uint64_t v56 = OUTLINED_FUNCTION_34(v55, (uint64_t)qword_1EBC7A520);
    os_log_type_t v57 = sub_1C9BEDC78();
    if (os_log_type_enabled(v56, v57))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_12_2(&dword_1C95F9000, v58, v59, "PromptForConfirmationFlow received ignore action from delegate. Ignoring.");
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v60 = OUTLINED_FUNCTION_92_8();
    v61(v60);
  }
  else
  {
    (*(void (**)(char *, uint8_t *))(v11 + 8))(v18, v9);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1C9BECF88();
    uint64_t v37 = OUTLINED_FUNCTION_34(v36, (uint64_t)qword_1EBC7A520);
    os_log_type_t v38 = sub_1C9BEDC78();
    if (os_log_type_enabled(v37, v38))
    {
      id v39 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v39);
      _os_log_impl(&dword_1C95F9000, v37, v38, "PromptForConfirmationFlow received input but is not in the promptSent state. Ignoring.", v9, 2u);
      OUTLINED_FUNCTION_11_4();
    }
  }
LABEL_32:
  OUTLINED_FUNCTION_10();
}

void PromptForConfirmationFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
}

uint64_t PromptForConfirmationFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C996C4D4);
}

uint64_t sub_1C996C4D4()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9618A08;
  return PromptForConfirmationFlowAsync.execute()();
}

uint64_t PromptForConfirmationFlowAsync.execute()()
{
  OUTLINED_FUNCTION_33();
  v1[6] = v2;
  v1[7] = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = type metadata accessor for Input(0);
  OUTLINED_FUNCTION_22(v4);
  v1[8] = OUTLINED_FUNCTION_16();
  v1[9] = *(void *)(v3 + 80);
  OUTLINED_FUNCTION_0();
  v1[10] = v5;
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  OUTLINED_FUNCTION_111_3();
  OUTLINED_FUNCTION_111_3();
  uint64_t v6 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  v1[14] = v6;
  v1[15] = *(void *)(v6 - 8);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996C6E0()
{
  uint64_t v67 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[7] + *(void *)(*(void *)v0[7] + 128);
  OUTLINED_FUNCTION_84_1();
  uint64_t v3 = *(void (**)(uint64_t))(v1 + 16);
  uint64_t v4 = OUTLINED_FUNCTION_94_3();
  v3(v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 5u:
      OUTLINED_FUNCTION_22_1();
      v5();
      goto LABEL_32;
    case 2u:
      sub_1C9729480(v0[17], v0[8]);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C9BECF88();
      uint64_t v18 = (void *)OUTLINED_FUNCTION_34(v17, (uint64_t)qword_1EBC7A520);
      os_log_type_t v19 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v19))
      {
        uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v20);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v21, v22, "PromptForConfirmationFlow parsing response from user");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[22] = v23;
      *uint64_t v23 = v24;
      v23[1] = sub_1C996D194;
      OUTLINED_FUNCTION_94();
      return sub_1C996EB7C();
    case 3u:
      OUTLINED_FUNCTION_79_9();
      v26();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1C9BECF88();
      char v28 = (void *)OUTLINED_FUNCTION_34(v27, (uint64_t)qword_1EBC7A520);
      os_log_type_t v29 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v29))
      {
        uint64_t v30 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v30);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v31, v32, "PromptForConfirmationFlow sending reprompt for misunderstood input");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[24] = v33;
      *uint64_t v33 = v34;
      v33[1] = sub_1C996D310;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_94();
      return sub_1C996F808();
    case 4u:
      OUTLINED_FUNCTION_79_9();
      v36();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v37 = sub_1C9BECF88();
      os_log_type_t v38 = (void *)OUTLINED_FUNCTION_34(v37, (uint64_t)qword_1EBC7A520);
      os_log_type_t v39 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v39))
      {
        uint64_t v40 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v40);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v41, v42, "PromptForConfirmationFlow sending reprompt for empty parse");
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v43 = (void *)swift_task_alloc();
      v0[26] = v43;
      void *v43 = v0;
      v43[1] = sub_1C996D480;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_94();
      return sub_1C996FA4C();
    case 6u:

LABEL_32:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C9BECF88();
      __swift_project_value_buffer(v45, (uint64_t)qword_1EBC7A520);
      swift_retain_n();
      uint64_t v46 = sub_1C9BECF78();
      os_log_type_t v47 = sub_1C9BEDC88();
      if (os_log_type_enabled(v46, v47))
      {
        uint64_t v48 = v0[16];
        uint64_t v49 = v0[14];
        os_log_type_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v50 = 136315138;
        ((void (*)(uint64_t, uint64_t, uint64_t))v3)(v48, v2, v49);
        uint64_t v51 = sub_1C9BED608();
        v0[5] = sub_1C95FF228(v51, v52, &v66);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1C95F9000, v46, v47, "PromptForConfirmationFlow is being executed in an unexpected state %s. Transitioning to error", v50, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v53 = v0[16];
      uint64_t v54 = v0[6];
      *(void *)uint64_t v53 = sub_1C996DB70();
      *(unsigned char *)(v53 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1C996E080(v53);
      static ExecuteResponse.complete()(v54);
      OUTLINED_FUNCTION_12_53();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_94();
      __asm { BRAA            X1, X16 }
      return result;
    case 7u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C9BECF88();
      uint64_t v58 = (void *)OUTLINED_FUNCTION_34(v57, (uint64_t)qword_1EBC7A520);
      os_log_type_t v59 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v59))
      {
        uint64_t v60 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v60);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v61, v62, "PromptForConfirmationFlow sending cancellation response");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[20] = v63;
      *uint64_t v63 = v64;
      v63[1] = sub_1C996D034;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_94();
      uint64_t result = sub_1C996E878();
      break;
    default:
      OUTLINED_FUNCTION_79_9();
      v6();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_1C9BECF88();
      uint64_t v8 = (void *)OUTLINED_FUNCTION_34(v7, (uint64_t)qword_1EBC7A520);
      os_log_type_t v9 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v9))
      {
        uint64_t v10 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v10);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v11, v12, "PromptForConfirmationFlow sending prompt for confirmation");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[18] = v13;
      *uint64_t v13 = v14;
      v13[1] = sub_1C996CEC4;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_94();
      uint64_t result = sub_1C996E518();
      break;
  }
  return result;
}

uint64_t sub_1C996CEC4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996CFA0()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_1();
  v0();
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C996D034()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996D110()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v1(v0, v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_1C996D194()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996D270()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  sub_1C9973380(*(void *)(v0 + 64), (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C996D310()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996D3EC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_1();
  v0();
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C996D480()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996D55C()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_1();
  v0();
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v2(v1, v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C996D5F0()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_1();
  v3();
  uint64_t v4 = *(void **)(v1 + 152);
  OUTLINED_FUNCTION_16_43();
  id v5 = v4;
  sub_1C996E080(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v7(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C996D6AC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v3 = *(void **)(v1 + 168);
  OUTLINED_FUNCTION_16_43();
  id v4 = v3;
  sub_1C996E080(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1C996D758()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  sub_1C9973380(*(void *)(v1 + 64), (void (*)(void))type metadata accessor for Input);
  uint64_t v3 = *(void **)(v1 + 184);
  OUTLINED_FUNCTION_16_43();
  id v4 = v3;
  sub_1C996E080(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1C996D820()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_1();
  v3();
  id v4 = *(void **)(v1 + 200);
  OUTLINED_FUNCTION_16_43();
  id v5 = v4;
  sub_1C996E080(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v7(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1C996D8DC()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_22_1();
  v3();
  id v4 = *(void **)(v1 + 216);
  OUTLINED_FUNCTION_16_43();
  id v5 = v4;
  sub_1C996E080(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_12_53();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v7(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t PromptForConfirmationFlow.deinit()
{
  swift_release();
  return v0;
}

uint64_t PromptForConfirmationFlow.__deallocating_deinit()
{
  PromptForConfirmationFlow.deinit();

  return swift_deallocClassInstance();
}

void sub_1C996D9EC(void **a1)
{
  *a1 = malloc(0x28uLL);
  sub_1C9BEC3B8();
}

uint64_t sub_1C996DA64()
{
  return PromptForConfirmationFlow.on(input:)() & 1;
}

void sub_1C996DA8C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C996DAB0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615010;
  return PromptForConfirmationFlow.execute()(a1);
}

uint64_t sub_1C996DB4C@<X0>(uint64_t a1@<X8>)
{
  return PromptForConfirmationFlow.exitValue.getter(a1);
}

uint64_t sub_1C996DB70()
{
  uint64_t v1 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C9BEE188();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_1C9BED6B8();
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  swift_getWitnessTable();
  sub_1C9BEE5F8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  type metadata accessor for CommandFailure();
  swift_allocObject();
  uint64_t v9 = CommandFailure.init(errorCode:reason:)(-1, v7, v8);
  sub_1C97740B8();
  uint64_t result = swift_allocError();
  *uint64_t v11 = v9;
  return result;
}

void sub_1C996DD80()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v2 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  OUTLINED_FUNCTION_0();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v27 - v7;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1C9BECF88();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v10 = sub_1C9BECF78();
  os_log_type_t v11 = sub_1C9BEDC78();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    int v28 = v12;
    uint64_t v14 = v13;
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v14 = 136315394;
    os_log_t v27 = v10;
    uint64_t v15 = v1[8];
    uint64_t v16 = v1[9];
    uint64_t v18 = v1[10];
    uint64_t v17 = v1[11];
    swift_bridgeObjectRetain();
    uint64_t v19 = MEMORY[0x1CB78A7E0](v15, v16, v18, v17);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1C95FF228(v19, v21, &v32);
    sub_1C9BEDF68();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    OUTLINED_FUNCTION_84_1();
    OUTLINED_FUNCTION_82_2();
    v22();
    swift_release();
    uint64_t v23 = sub_1C996FFB8(v2);
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v2);
    uint64_t v30 = sub_1C95FF228(v23, v25, &v32);
    sub_1C9BEDF68();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_t v26 = v27;
    _os_log_impl(&dword_1C95F9000, v27, (os_log_type_t)v28, "PromptForConfirmationFlow [%s] transitioned to state %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_release_n();
  }
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C996E080(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess();
  sub_1C996DD80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void PromptForConfirmationFlowAsync.init<A>(itemToConfirm:strategy:outputPublisher:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v19 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_72_14();
  sub_1C9BEAAB8();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v0, v6);
  uint64_t v11 = sub_1C9658304(8);
  OUTLINED_FUNCTION_112_3(v11, v12, v13, v14);
  uint64_t v15 = *(void *)(v5 + 80);
  uint64_t v16 = *(void *)(v15 - 8);
  OUTLINED_FUNCTION_82_2();
  v17();
  OUTLINED_FUNCTION_102_2();
  type metadata accessor for PromptForConfirmationFlowAsync.State();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_102_2();
  type metadata accessor for AnyPromptForConfirmationFlowStrategy();
  uint64_t v18 = sub_1C996E360();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v4, v15);
  v1[7] = v18;
  sub_1C95FD5D8(v19, (uint64_t)(v1 + 2));
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C996E360()
{
  OUTLINED_FUNCTION_70_13();
  OUTLINED_FUNCTION_14_36();
  sub_1C99703C8();
  return v0;
}

void sub_1C996E394()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = *v0;
  uint64_t v9 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_72_14();
  sub_1C9BEAAB8();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v0, v9);
  uint64_t v14 = sub_1C9658304(8);
  OUTLINED_FUNCTION_112_3(v14, v15, v16, v17);
  uint64_t v19 = (char *)v0 + *(void *)(v18 + 128);
  uint64_t v20 = *(void *)(v8 + 80);
  OUTLINED_FUNCTION_112();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v19, v7, v20);
  type metadata accessor for PromptForConfirmationFlowAsync.State();
  swift_storeEnumTagMultiPayload();
  v1[7] = v5;
  sub_1C95FD5D8(v3, (uint64_t)(v1 + 2));
  OUTLINED_FUNCTION_10();
}

void PromptForConfirmationFlowAsync.execute(completion:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C996E518()
{
  OUTLINED_FUNCTION_24();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  OUTLINED_FUNCTION_8();
  v1[10] = *(void *)(v4 + 80);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  v1[11] = v5;
  OUTLINED_FUNCTION_22(v5);
  v1[12] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C996E5D4()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v0 = OUTLINED_FUNCTION_36_26();
  OUTLINED_FUNCTION_95_8(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_218(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C996E67C;
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v4, v5, v6, v7, v8);
}

uint64_t sub_1C996E67C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    OUTLINED_FUNCTION_85_6();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996E75C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 56);
  OUTLINED_FUNCTION_112();
  (*(void (**)(uint64_t))(v3 + 16))(v1);
  swift_storeEnumTagMultiPayload();
  sub_1C996E080(v1);
  static ExecuteResponse.ongoing(requireInput:)(1, v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v4();
}

uint64_t sub_1C996E814()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C996E878()
{
  OUTLINED_FUNCTION_24();
  v1[7] = v2;
  v1[8] = v0;
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  v1[9] = *(void *)(v3 + 88);
  OUTLINED_FUNCTION_8();
  uint64_t v4 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  v1[10] = v4;
  OUTLINED_FUNCTION_22(v4);
  v1[11] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C996E930()
{
  OUTLINED_FUNCTION_33();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 64) + 16), *(void *)(*(void *)(v0 + 64) + 40));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C996E9F4;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C996E9F4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996EAD8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 56);
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1C996E080(v1);
  static ExecuteResponse.complete()(v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v3();
}

uint64_t sub_1C996EB7C()
{
  OUTLINED_FUNCTION_24();
  v1[18] = v2;
  v1[19] = v0;
  v1[17] = v3;
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = *(void *)(v4 + 88);
  v1[20] = v5;
  OUTLINED_FUNCTION_8();
  v1[21] = *(void *)(v6 + 96);
  uint64_t v7 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  v1[22] = v7;
  OUTLINED_FUNCTION_22(v7);
  v1[23] = OUTLINED_FUNCTION_16();
  v1[24] = *(void *)(v5 - 8);
  v1[25] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C996EC88()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[26] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C996ED24;
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[18];
  return sub_1C99725C8(v2, v3);
}

uint64_t sub_1C996ED24()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 216) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996EE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  (*(void (**)(void))(*(void *)(v12 + 168) + 8))(*(void *)(v12 + 160));
  int v16 = *(unsigned __int8 *)(v12 + 272);
  if (v16 == 2)
  {
    OUTLINED_FUNCTION_105_3();
    type metadata accessor for PromptResult();
LABEL_5:
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1C996E080(v14);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v13);
    static ExecuteResponse.complete()(v10);
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_44();
    return v19(v18, v19, v20, v21, v22, v23, v24, v25, a9, a10);
  }
  if ((v16 & 1) == 0)
  {
    OUTLINED_FUNCTION_105_3();
    OUTLINED_FUNCTION_82_2();
    v17();
    type metadata accessor for PromptResult();
    goto LABEL_5;
  }
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v12 + 152) + 16), *(void *)(*(void *)(v12 + 152) + 40));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v12 + 224) = v27;
  *os_log_t v27 = v28;
  v27[1] = sub_1C996EFCC;
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v29, v30, v31, v32, v33);
}

uint64_t sub_1C996EFCC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 56);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996F0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v12 = v10[24];
  uint64_t v11 = v10[25];
  uint64_t v13 = v10[23];
  uint64_t v14 = v10[20];
  uint64_t v15 = v10[17];
  OUTLINED_FUNCTION_82_2();
  v16();
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1C996E080(v13);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v14);
  static ExecuteResponse.complete()(v15);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_44();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, a10);
}

uint64_t sub_1C996F19C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 264) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996F28C()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[17];
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v4 = v1;
  sub_1C996E080(v2);

  static ExecuteResponse.complete()(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_128();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1C996F35C()
{
  uint64_t v22 = v0;
  uint64_t v2 = (void *)v0[27];
  v0[30] = v2;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC88();
  if (os_log_type_enabled(v6, v7))
  {
    OUTLINED_FUNCTION_65_13();
    uint64_t v21 = swift_slowAlloc();
    OUTLINED_FUNCTION_56_3(4.8149e-34);
    uint64_t v8 = sub_1C9BEE6E8();
    uint64_t v10 = sub_1C95FF228(v8, v9, &v21);
    OUTLINED_FUNCTION_84_7(v10);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_85(&dword_1C95F9000, v11, v12, "PromptForConfirmationFlow encountered an error while trying to parse user input: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v13 = OUTLINED_FUNCTION_71_2();
  v0[31] = v13;
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = v2;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[32] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1C996F19C;
  uint64_t v15 = OUTLINED_FUNCTION_69_1();
  return sub_1C962F1B0(v15, v16, v17, v18, v19);
}

uint64_t sub_1C996F560()
{
  uint64_t v23 = v0;
  OUTLINED_FUNCTION_22_1();
  v2();
  uint64_t v3 = (void *)v0[29];
  v0[30] = v3;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C9BECF88();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
  id v5 = v3;
  id v6 = v3;
  os_log_type_t v7 = sub_1C9BECF78();
  os_log_type_t v8 = sub_1C9BEDC88();
  if (os_log_type_enabled(v7, v8))
  {
    OUTLINED_FUNCTION_65_13();
    uint64_t v22 = swift_slowAlloc();
    OUTLINED_FUNCTION_56_3(4.8149e-34);
    uint64_t v9 = sub_1C9BEE6E8();
    uint64_t v11 = sub_1C95FF228(v9, v10, &v22);
    OUTLINED_FUNCTION_84_7(v11);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_85(&dword_1C95F9000, v12, v13, "PromptForConfirmationFlow encountered an error while trying to parse user input: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v14 = OUTLINED_FUNCTION_71_2();
  v0[31] = v14;
  *(void *)(v14 + 16) = v1;
  *(void *)(v14 + 24) = v3;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[32] = v15;
  void *v15 = v0;
  v15[1] = sub_1C996F19C;
  uint64_t v16 = OUTLINED_FUNCTION_69_1();
  return sub_1C962F1B0(v16, v17, v18, v19, v20);
}

uint64_t sub_1C996F774()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void **)(v0 + 240);
  swift_task_dealloc();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t sub_1C996F808()
{
  OUTLINED_FUNCTION_24();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  OUTLINED_FUNCTION_8();
  v1[10] = *(void *)(v4 + 80);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  v1[11] = v5;
  OUTLINED_FUNCTION_22(v5);
  v1[12] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C996F8C4()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v0 = OUTLINED_FUNCTION_36_26();
  OUTLINED_FUNCTION_95_8(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_218(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C996F96C;
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v4, v5, v6, v7, v8);
}

uint64_t sub_1C996F96C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  if (!v0) {
    OUTLINED_FUNCTION_85_6();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C996FA4C()
{
  OUTLINED_FUNCTION_24();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  OUTLINED_FUNCTION_8();
  v1[10] = *(void *)(v4 + 80);
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v5 = type metadata accessor for PromptForConfirmationFlowAsync.State();
  v1[11] = v5;
  OUTLINED_FUNCTION_22(v5);
  v1[12] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C996FB08()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v0 = OUTLINED_FUNCTION_36_26();
  OUTLINED_FUNCTION_95_8(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_218(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C996F96C;
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v4, v5, v6, v7, v8);
}

uint64_t sub_1C996FBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C996FBD4, 0, 0);
}

uint64_t sub_1C996FBD4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_101_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96DD284;
  uint64_t v3 = OUTLINED_FUNCTION_63_17();
  return sub_1C99726A4(v3, v4);
}

uint64_t sub_1C996FC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C996FC80, 0, 0);
}

uint64_t sub_1C996FC80()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_101_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_63_17();
  return sub_1C9972780(v3, v4);
}

uint64_t sub_1C996FD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C996FD2C, 0, 0);
}

uint64_t sub_1C996FD2C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_101_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_63_17();
  return sub_1C997285C(v3, v4);
}

uint64_t sub_1C996FDB4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C996FDD4, 0, 0);
}

uint64_t sub_1C996FDD4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_101_0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C962CEA4;
  uint64_t v4 = *(void *)(v0 + 16);
  return sub_1C9972A18(v4);
}

uint64_t sub_1C996FE60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C996FE80, 0, 0);
}

uint64_t sub_1C996FE80()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_101_0();
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C9618A08;
  uint64_t v4 = *(void *)(v0 + 16);
  return sub_1C9972938(v4);
}

uint64_t sub_1C996FF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C996FF30, 0, 0);
}

uint64_t sub_1C996FF30()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_101_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_63_17();
  return sub_1C9972AF8(v3, v4);
}

uint64_t sub_1C996FFB8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1, v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 0x6C6C65636E61632ELL;
  unint64_t v8 = 0x646574726174732ELL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      unint64_t v8 = 0x5374706D6F72702ELL;
      goto LABEL_8;
    case 2:
      unint64_t v8 = 0xD000000000000011;
      goto LABEL_8;
    case 3:
      unint64_t v8 = 0x65646E7573696D2ELL;
      goto LABEL_8;
    case 4:
      unint64_t v8 = 0x61507974706D652ELL;
      goto LABEL_8;
    case 5:
      unint64_t v8 = 0x74656C706D6F632ELL;
      goto LABEL_8;
    case 6:
      unint64_t v8 = 0x726F7272652ELL;
      goto LABEL_8;
    case 7:
      return result;
    default:
LABEL_8:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      return v8;
  }
}

uint64_t PromptForConfirmationFlowAsync.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_111_3();
  OUTLINED_FUNCTION_111_3();
  type metadata accessor for PromptForConfirmationFlowAsync.State();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v1();
  return v0;
}

uint64_t PromptForConfirmationFlowAsync.__deallocating_deinit()
{
  PromptForConfirmationFlowAsync.deinit();
  OUTLINED_FUNCTION_4_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C99702BC()
{
  PromptForConfirmationFlowAsync.on(input:)();
  return v0 & 1;
}

void sub_1C99702E4(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9970308()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForConfirmationFlowAsync.execute()();
}

uint64_t sub_1C99703A4@<X0>(uint64_t a1@<X8>)
{
  return PromptForConfirmationFlowAsync.exitValue.getter(a1);
}

void *sub_1C99703C8()
{
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_19_43();
  v0[2] = sub_1C9970498(v1, v2, v3, v4, v5);
  v0[3] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_17_42();
  v0[4] = sub_1C9970520(v7, v8, v9, v10, v11);
  v0[5] = v12;
  uint64_t v13 = OUTLINED_FUNCTION_17_42();
  v0[6] = sub_1C99706BC(v13, v14, v15, v16, v17);
  v0[7] = v18;
  uint64_t v19 = OUTLINED_FUNCTION_17_42();
  v0[8] = sub_1C9970858(v19, v20, v21, v22, v23);
  v0[9] = v24;
  uint64_t v25 = OUTLINED_FUNCTION_17_42();
  v0[10] = sub_1C99709F4(v25, v26, v27, v28, v29);
  v0[11] = v30;
  uint64_t v31 = OUTLINED_FUNCTION_17_42();
  v0[12] = sub_1C9970B90(v31, v32, v33, v34, v35);
  v0[13] = v36;
  uint64_t v37 = OUTLINED_FUNCTION_17_42();
  v0[14] = sub_1C9970D24(v37, v38, v39, v40, v41);
  v0[15] = v42;
  uint64_t v43 = OUTLINED_FUNCTION_17_42();
  uint64_t v48 = sub_1C9970EB8(v43, v44, v45, v46, v47);
  uint64_t v50 = v49;
  swift_unknownObjectRelease();
  v0[16] = v48;
  v0[17] = v50;
  return v0;
}

uint64_t (*sub_1C9970498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C997DAA0;
}

void *sub_1C9970520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593600;
}

uint64_t sub_1C99705A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 40) + **(int **)(a7 + 40));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1C9615888;
  return v14(a1, a2, a6, a7);
}

void *sub_1C99706BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA5935F0;
}

uint64_t sub_1C9970744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 48) + **(int **)(a7 + 48));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1C9615888;
  return v14(a1, a2, a6, a7);
}

void *sub_1C9970858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA5935E0;
}

uint64_t sub_1C99708E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 56) + **(int **)(a7 + 56));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1C9615888;
  return v14(a1, a2, a6, a7);
}

void *sub_1C99709F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA5935D0;
}

uint64_t sub_1C9970A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 64) + **(int **)(a7 + 64));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1C9615888;
  return v14(a1, a2, a6, a7);
}

void *sub_1C9970B90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA5935C0;
}

uint64_t sub_1C9970C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 72) + **(int **)(a6 + 72));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1C9615888;
  return v12(a1, a5, a6);
}

void *sub_1C9970D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA5935B0;
}

uint64_t sub_1C9970DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 80) + **(int **)(a6 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1C9615888;
  return v12(a1, a5, a6);
}

void *sub_1C9970EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA5935A0;
}

uint64_t sub_1C9970F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 88) + **(int **)(a7 + 88));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1C9615888;
  return v14(a1, a2, a6, a7);
}

void *sub_1C9971054()
{
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_19_43();
  v0[2] = sub_1C99711C8(v1, v2, v3, v4, v5);
  v0[3] = v6;
  uint64_t v7 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v8 = OUTLINED_FUNCTION_33_23(v7);
  v0[4] = &unk_1EA593520;
  v0[5] = v8;
  uint64_t v9 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v10 = OUTLINED_FUNCTION_33_23(v9);
  v0[6] = &unk_1EA593530;
  v0[7] = v10;
  uint64_t v11 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v12 = OUTLINED_FUNCTION_33_23(v11);
  v0[8] = &unk_1EA593540;
  v0[9] = v12;
  uint64_t v13 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v14 = OUTLINED_FUNCTION_33_23(v13);
  v0[10] = &unk_1EA593550;
  v0[11] = v14;
  uint64_t v15 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v16 = OUTLINED_FUNCTION_33_23(v15);
  v0[12] = &unk_1EA593560;
  v0[13] = v16;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v18 = OUTLINED_FUNCTION_33_23(v17);
  v0[14] = &unk_1EA593570;
  v0[15] = v18;
  uint64_t v19 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v20 = OUTLINED_FUNCTION_33_23(v19);
  v0[16] = &unk_1EA593580;
  v0[17] = v20;
  swift_unknownObjectRetain_n();
  return v0;
}

uint64_t (*sub_1C99711C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C997D678;
}

uint64_t sub_1C9971250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  uint64_t v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C997127C, 0, 0);
}

uint64_t sub_1C997127C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_14_53(v15);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v14 + 80) = v16;
  *uint64_t v16 = v17;
  v16[1] = sub_1C9971334;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9971334()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9971434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = sub_1C99714CC(a1, a4, a5, a6, a7);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a7 + 40))(a3, v10, v11, a6, a7);

  return swift_release();
}

uint64_t (*sub_1C99714CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v10 = sub_1C9BEDA18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - v13, a1, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], v14, v10);
  return sub_1C997D5E4;
}

uint64_t sub_1C9971634(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = sub_1C9BEDA18();
  return sub_1C969F194(a1, v2);
}

uint64_t sub_1C9971694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  uint64_t v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C99716C0, 0, 0);
}

uint64_t sub_1C99716C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_14_53(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_104_4(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C9971334;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C997177C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 48))(a3, sub_1C97A2B40, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C99718F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  uint64_t v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C997191C, 0, 0);
}

uint64_t sub_1C997191C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_14_53(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_104_4(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C9971334;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C99719D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 56))(a3, sub_1C97A2B40, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C9971B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  uint64_t v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C9971B74, 0, 0);
}

uint64_t sub_1C9971B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_14_53(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_104_4(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C9971334;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9971C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 64))(a3, sub_1C97A2B40, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C9971DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C9971DC8, 0, 0);
}

uint64_t sub_1C9971DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_90_6(v15);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 72) = v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v16 = v17;
  v16[1] = sub_1C979EE40;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9971E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 72))(sub_1C97A2B40, v14, a5, a6);
  return swift_release();
}

uint64_t sub_1C9971FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C997201C, 0, 0);
}

uint64_t sub_1C997201C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_90_6(v15);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 72) = v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v16 = v17;
  v16[1] = sub_1C99720E0;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C99720E0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C99721E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 80))(sub_1C97A2B40, v14, a5, a6);
  return swift_release();
}

uint64_t sub_1C9972348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  uint64_t v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C9972374, 0, 0);
}

uint64_t sub_1C9972374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  OUTLINED_FUNCTION_14_53(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_104_4(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C967CF64;
  OUTLINED_FUNCTION_1_27();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9972430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 88))(a3, sub_1C97A2B40, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C99725A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C99725C8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99725E4);
}

uint64_t sub_1C99725E4()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_56();
  return v4(v3);
}

uint64_t sub_1C99726A4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99726C0);
}

uint64_t sub_1C99726C0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_56();
  return v4(v3);
}

uint64_t sub_1C9972780(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C997279C);
}

uint64_t sub_1C997279C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_56();
  return v4(v3);
}

uint64_t sub_1C997285C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9972878);
}

uint64_t sub_1C9972878()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_56();
  return v4(v3);
}

uint64_t sub_1C9972938(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9972950);
}

uint64_t sub_1C9972950()
{
  OUTLINED_FUNCTION_24();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 24) + 96)
                                       + **(int **)(*(void *)(v0 + 24) + 96));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C962CEA4;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4);
}

uint64_t sub_1C9972A18(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9972A30);
}

uint64_t sub_1C9972A30()
{
  OUTLINED_FUNCTION_24();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 24) + 112)
                                       + **(int **)(*(void *)(v0 + 24) + 112));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C962CEA4;
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4);
}

uint64_t sub_1C9972AF8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9972B14);
}

uint64_t sub_1C9972B14()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_56();
  return v4(v3);
}

uint64_t sub_1C9972BD4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C9972C2C()
{
  sub_1C9972BD4();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9972C64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C99725C8(a1, a2);
}

uint64_t sub_1C9972D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C99726A4(a1, a2);
}

uint64_t sub_1C9972DB4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9972780(a1, a2);
}

uint64_t sub_1C9972E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C997285C(a1, a2);
}

uint64_t sub_1C9972F04(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9972938(a1);
}

uint64_t sub_1C9972F9C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9972A18(a1);
}

uint64_t sub_1C9973034(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C9972AF8(a1, a2);
}

uint64_t sub_1C99730DC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1EA593590 + dword_1EA593590);
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  return v4();
}

uint64_t sub_1C997318C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_246();
  return PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()(v3);
}

uint64_t sub_1C9973214()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t sub_1C997329C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t sub_1C997332C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t type metadata accessor for PromptForConfirmationFlowAsync.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9973380(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

uint64_t type metadata accessor for AnyPromptForConfirmationFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_1C99733F0()
{
  unint64_t result = qword_1EA593218[0];
  if (!qword_1EA593218[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA593218);
  }
  return result;
}

uint64_t sub_1C997343C(uint64_t a1)
{
  return sub_1C9973494(a1);
}

uint64_t sub_1C9973468(uint64_t a1)
{
  return sub_1C9973494(a1);
}

uint64_t sub_1C9973494(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t dispatch thunk of ConfirmationResponseProviding.confirmationResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t getEnumTagSinglePayload for SimpleConfirmationResponseProvider(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 3;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  if (*a1 <= 2u) {
    int v6 = 2;
  }
  else {
    int v6 = *a1;
  }
  int v7 = v6 - 3;
  if (*a1 < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v7;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for SimpleConfirmationResponseProvider(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9973680);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for SimpleConfirmationResponseProvider()
{
}

uint64_t dispatch thunk of ConfirmationResponseParsing.parseConfirmationResponse(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

void type metadata accessor for ServerProvidedSiriKitConfirmationResponseParser()
{
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.actionForInput(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.parseConfirmationResponse(input:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeRepromptOnEmptyParse(itemToConfirm:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeRepromptOnLowConfidence(itemToConfirm:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeConfirmationRejectedResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.actionForInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.parseConfirmationResponse(input:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 40) + **(int **)(v9 + 40);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makePromptForConfirmation(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_68_10(v9, v10, v11, v12);
  uint64_t v26 = (char *)v13 + *v13;
  uint64_t v14 = swift_task_alloc();
  uint64_t v15 = (void *)OUTLINED_FUNCTION_17_0(v14);
  void *v15 = v16;
  v15[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v22(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeRepromptOnEmptyParse(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 56) + **(int **)(v9 + 56);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeRepromptOnLowConfidence(itemToConfirm:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 64) + **(int **)(v9 + 64);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeConfirmationRejectedResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForConfirmationFlowStrategyAsync.makeErrorResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v22 = *(void *)(v9 + 88) + **(int **)(v9 + 88);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t type metadata accessor for PromptForConfirmationFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromptForConfirmationFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForConfirmationFlow);
}

uint64_t sub_1C9973D98()
{
  uint64_t result = type metadata accessor for PromptForConfirmationFlowAsync.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PromptForConfirmationFlowAsync()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromptForConfirmationFlowAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForConfirmationFlowAsync);
}

uint64_t dispatch thunk of PromptForConfirmationFlowAsync.__allocating_init<A>(itemToConfirm:strategy:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C9973E98()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C9973EEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Input(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PromptResult();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

unsigned char *sub_1C9974000(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  size_t __n = *(void *)(a3 + 16);
  uint64_t v191 = *(void *)(__n - 8);
  unint64_t v184 = *(void *)(v191 + 64);
  uint64_t v197 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v181 = *(void *)(v197 + 64);
  uint64_t v3 = sub_1C9BEC028();
  uint64_t v177 = *(void *)(v3 - 8);
  uint64_t v163 = v177;
  uint64_t v164 = v3;
  int v4 = *(_DWORD *)(v177 + 80);
  uint64_t v5 = sub_1C9BEAC48();
  uint64_t v179 = *(void *)(v5 - 8);
  uint64_t v161 = v179;
  uint64_t v162 = v5;
  int v169 = *(_DWORD *)(v179 + 80) | v4;
  uint64_t v166 = sub_1C9BEAF18();
  uint64_t v175 = *(void *)(v166 - 8);
  uint64_t v196 = v175;
  int v189 = *(_DWORD *)(v175 + 80);
  uint64_t v165 = sub_1C9BEAE48();
  uint64_t v171 = *(void *)(v165 - 8);
  int v6 = *(_DWORD *)(v171 + 80);
  uint64_t v7 = v189 & 0xF8 | v6 | 7u;
  uint64_t v8 = sub_1C9BEC928();
  uint64_t v173 = *(void *)(v8 - 8);
  uint64_t v158 = v173;
  uint64_t v159 = v8;
  int v9 = *(_DWORD *)(v173 + 80);
  uint64_t v10 = sub_1C9BEC8F8();
  uint64_t v11 = v177;
  uint64_t v178 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v178 + 80);
  int v13 = v9;
  uint64_t v14 = (v169 | (v9 | v12)) & 0xF8 | v7;
  uint64_t v15 = v181 + v14;
  unint64_t v16 = *(void *)(v11 + 64);
  unint64_t v160 = v16 + 7;
  if (((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v16) {
    unint64_t v16 = ((v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v16 <= *(void *)(v179 + 64)) {
    unint64_t v16 = *(void *)(v179 + 64);
  }
  int v17 = v6;
  uint64_t v18 = *(void *)(v175 + 64) + v6;
  uint64_t v180 = v6;
  unint64_t v19 = v18 & ~(unint64_t)v6;
  uint64_t v156 = v171;
  unsigned int v20 = *(_DWORD *)(v171 + 84);
  size_t v21 = *(void *)(v171 + 64);
  if (v20) {
    size_t v22 = *(void *)(v171 + 64);
  }
  else {
    size_t v22 = v21 + 1;
  }
  unint64_t v23 = (v22 + 7 + v19) & 0xFFFFFFFFFFFFFFF8;
  size_t v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v16 <= v24) {
    unint64_t v16 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v25 = v23 + 31;
  if (v16 <= (((((v25 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = (((((v25 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v172 = *(void *)(v173 + 64);
  uint64_t v26 = *(unsigned int *)(v175 + 84);
  if (v20) {
    unsigned int v27 = v20 - 1;
  }
  else {
    unsigned int v27 = 0;
  }
  if (v27 <= v26) {
    unsigned int v28 = *(_DWORD *)(v175 + 84);
  }
  else {
    unsigned int v28 = v27;
  }
  if (v28 <= 0x7FFFFFFE) {
    unsigned int v28 = 2147483646;
  }
  unsigned int v174 = v28;
  uint64_t v157 = v7 + 16;
  uint64_t v176 = v189 & 0xF8 | v6 | 7u;
  uint64_t v182 = v181 + v14;
  unint64_t v30 = ((v25 + ((v7 + 16 + ((v172 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v16 <= v30) {
    unint64_t v16 = v30;
  }
  unint64_t v31 = *(void *)(*(void *)(v10 - 8) + 64);
  if (v16 > v31) {
    unint64_t v31 = v16;
  }
  if (v31 <= 0x18) {
    uint64_t v32 = 24;
  }
  else {
    uint64_t v32 = v31;
  }
  uint64_t v29 = v15 & ~v14;
  if (((((v32 + v29 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 <= v184) {
    unint64_t v33 = v184;
  }
  else {
    unint64_t v33 = ((((v32 + v29 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  uint64_t v187 = *(void *)(a3 + 24);
  uint64_t v34 = *(void *)(v187 - 8);
  if (*(void *)(v34 + 64) <= 9uLL) {
    uint64_t v35 = 9;
  }
  else {
    uint64_t v35 = *(void *)(*(void *)(v187 - 8) + 64);
  }
  char v36 = 8 * v35;
  if (v35 > 3) {
    goto LABEL_37;
  }
  unsigned int v37 = ((1 << v36) + 1) >> v36;
  uint64_t v38 = 2;
  if (v37 > 0xFFFD) {
    uint64_t v38 = 4;
  }
  if (v37 <= 0xFD) {
LABEL_37:
  }
    uint64_t v38 = 1;
  unint64_t v39 = v38 + v35;
  if (v39 <= v33) {
    unint64_t v39 = v33;
  }
  if (v39 <= 9) {
    unint64_t v39 = 9;
  }
  int v40 = *(_DWORD *)(v191 + 80);
  int v41 = *(_DWORD *)(v197 + 80);
  int v42 = *(_DWORD *)(v34 + 80);
  int v43 = (v169 | v189 | v17 | v13 | v12 | v40 | v41 | v42) & 0x100000;
  BOOL v45 = (((v41 | v40) | v42) & 0xF8 | v14) == 7
     && v39 + 1 <= 0x18
     && v43 == 0;
  if (!v45)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  if (v35 > 3) {
    goto LABEL_54;
  }
  unsigned int v46 = ((1 << v36) + 1) >> v36;
  uint64_t v47 = 2;
  if (v46 > 0xFFFD) {
    uint64_t v47 = 4;
  }
  if (v46 <= 0xFD) {
LABEL_54:
  }
    uint64_t v47 = 1;
  unint64_t v48 = v47 + v35;
  if (v48 <= v33) {
    unint64_t v48 = v33;
  }
  if (v48 <= 9) {
    unint64_t v48 = 9;
  }
  unsigned int v49 = a2[v48];
  unsigned int v50 = v49 - 7;
  if (v49 >= 7)
  {
    if (v35 > 3) {
      goto LABEL_64;
    }
    unsigned int v51 = ((1 << v36) + 1) >> v36;
    uint64_t v52 = 2;
    if (v51 > 0xFFFD) {
      uint64_t v52 = 4;
    }
    if (v51 <= 0xFD) {
LABEL_64:
    }
      uint64_t v52 = 1;
    unint64_t v53 = v52 + v35;
    if (v53 <= v33) {
      unint64_t v53 = v33;
    }
    if (v53 <= 9) {
      LODWORD(v53) = 9;
    }
    if (v53 <= 3) {
      uint64_t v54 = v53;
    }
    else {
      uint64_t v54 = 4;
    }
    switch(v54)
    {
      case 1:
        int v55 = *a2;
        goto LABEL_77;
      case 2:
        int v55 = *(unsigned __int16 *)a2;
        goto LABEL_77;
      case 3:
        int v55 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_77;
      case 4:
        int v55 = *(_DWORD *)a2;
LABEL_77:
        if (v53 < 4) {
          unsigned int v49 = (v55 | (v50 << (8 * v53))) + 7;
        }
        else {
          unsigned int v49 = v55 + 7;
        }
        break;
      default:
        break;
    }
  }
  switch(v49)
  {
    case 0u:
      (*(void (**)(unsigned char *, unsigned __int8 *, size_t))(v191 + 16))(a1, a2, __n);
      if (v35 > 3) {
        goto LABEL_85;
      }
      unsigned int v56 = ((1 << v36) + 1) >> v36;
      uint64_t v57 = 2;
      if (v56 > 0xFFFD) {
        uint64_t v57 = 4;
      }
      if (v56 <= 0xFD) {
LABEL_85:
      }
        uint64_t v57 = 1;
      unint64_t v58 = v57 + v35;
      if (v58 <= v33) {
        unint64_t v58 = v33;
      }
      if (v58 <= 9) {
        unint64_t v58 = 9;
      }
      uint64_t result = a1;
      a1[v58] = 0;
      return result;
    case 1u:
      uint64_t v63 = a1;
      (*(void (**)(unsigned char *, unsigned __int8 *, size_t))(v191 + 16))(a1, a2, __n);
      if (v35 > 3) {
        goto LABEL_105;
      }
      unsigned int v64 = ((1 << v36) + 1) >> v36;
      uint64_t v65 = 2;
      if (v64 > 0xFFFD) {
        uint64_t v65 = 4;
      }
      if (v64 <= 0xFD) {
LABEL_105:
      }
        uint64_t v65 = 1;
      unint64_t v66 = v65 + v35;
      if (v66 <= v33) {
        unint64_t v66 = v33;
      }
      if (v66 <= 9) {
        unint64_t v66 = 9;
      }
      char v67 = 1;
      goto LABEL_137;
    case 2u:
      uint64_t v192 = v35;
      uint64_t v68 = v10;
      uint64_t v188 = v18;
      unsigned int v154 = v20;
      size_t v153 = v21;
      unint64_t v155 = v19;
      size_t __na = v22;
      unint64_t v185 = v33;
      size_t v170 = v22 + 7;
      char v190 = 8 * v35;
      uint64_t v69 = ~v14;
      (*(void (**)(unsigned char *))(v197 + 16))(a1);
      unint64_t v198 = (unint64_t)&a1[v182] & v69;
      uint64_t v70 = (unsigned __int8 *)((unint64_t)&a2[v182] & v69);
      unsigned int v71 = v70[v32];
      unsigned int v72 = v71 - 10;
      if (v71 < 0xA)
      {
        uint64_t v74 = v68;
      }
      else
      {
        if (v32 <= 3) {
          uint64_t v73 = v32;
        }
        else {
          uint64_t v73 = 4;
        }
        uint64_t v74 = v68;
        switch(v73)
        {
          case 1:
            int v75 = *v70;
            goto LABEL_164;
          case 2:
            int v75 = *(unsigned __int16 *)v70;
            goto LABEL_164;
          case 3:
            int v75 = *(unsigned __int16 *)v70 | (v70[2] << 16);
            goto LABEL_164;
          case 4:
            int v75 = *(_DWORD *)v70;
LABEL_164:
            if (v32 < 4) {
              unsigned int v71 = (v75 | (v72 << (8 * v32))) + 10;
            }
            else {
              unsigned int v71 = v75 + 10;
            }
            break;
          default:
            break;
        }
      }
      size_t v91 = v32 + 1;
      uint64_t v194 = v32;
      uint64_t v92 = ~v180;
      switch(v71)
      {
        case 0u:
          unint64_t v93 = v198;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v163 + 16))(v198, v70, v164);
          *(unsigned char *)(v198 + v194) = 0;
          goto LABEL_240;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v163 + 16))(v198, v70, v164);
          *(void *)((v160 + v198) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v70[v160] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v198 + v194) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v93 = v198;
          *(void *)unint64_t v198 = *(void *)v70;
          *(void *)(v198 + 8) = *((void *)v70 + 1);
          *(void *)(v198 + 16) = *((void *)v70 + 2);
          *(unsigned char *)(v198 + v194) = 2;
          goto LABEL_230;
        case 3u:
          unint64_t v93 = v198;
          *(void *)unint64_t v198 = *(void *)v70;
          *(unsigned char *)(v198 + v194) = 3;
          swift_unknownObjectRetain();
          goto LABEL_240;
        case 4u:
          unint64_t v93 = v198;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v161 + 16))(v198, v70, v162);
          char v102 = 4;
          goto LABEL_213;
        case 5u:
          uint64_t v103 = *(void **)v70;
          unint64_t v93 = v198;
          *(void *)unint64_t v198 = *(void *)v70;
          *(unsigned char *)(v198 + v194) = 5;
          id v104 = v103;
          goto LABEL_240;
        case 6u:
          unint64_t v93 = v198;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v196 + 16))(v198, v70, v166);
          size_t v105 = (void *)((v188 + v198) & v92);
          int v106 = (const void *)((unint64_t)&v70[v188] & v92);
          if (__swift_getEnumTagSinglePayload((uint64_t)v106, 1, v165))
          {
            memcpy(v105, v106, __na);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v156 + 16))(v105, v106, v165);
            __swift_storeEnumTagSinglePayload((uint64_t)v105, 0, 1, v165);
          }
          uint64_t v116 = (void *)(((unint64_t)v105 + v170) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v117 = (void *)(((unint64_t)v106 + v170) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v116 = *v117;
          v116[1] = v117[1];
          unint64_t v118 = ((unint64_t)v116 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v119 = ((unint64_t)v117 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v120 = *(_DWORD *)v119;
          *(unsigned char *)(v118 + 4) = *(unsigned char *)(v119 + 4);
          *(_DWORD *)unint64_t v118 = v120;
          *(unsigned char *)(v198 + v194) = 6;
          swift_bridgeObjectRetain();
          goto LABEL_240;
        case 7u:
          unint64_t v93 = v198;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v196 + 16))(v198, v70, v166);
          int v107 = (void *)((v188 + v198) & v92);
          uint64_t v108 = (const void *)((unint64_t)&v70[v188] & v92);
          if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v165))
          {
            memcpy(v107, v108, __na);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v156 + 16))(v107, v108, v165);
            __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v165);
          }
          v121 = (void *)(((unint64_t)v107 + v170) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v122 = (void *)(((unint64_t)v108 + v170) & 0xFFFFFFFFFFFFFFF8);
          void *v121 = *v122;
          v121[1] = v122[1];
          unint64_t v123 = ((unint64_t)v121 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v124 = ((unint64_t)v122 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v125 = *(_DWORD *)v124;
          *(unsigned char *)(v123 + 4) = *(unsigned char *)(v124 + 4);
          *(_DWORD *)unint64_t v123 = v125;
          uint64_t v126 = (void *)(((v198 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v127 = (void *)((((unint64_t)v70 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v126 = *v127;
          v126[1] = v127[1];
          unint64_t v128 = (void *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v129 = (void *)(((unint64_t)v127 + 23) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v128 = *v129;
          v128[1] = v129[1];
          uint64_t v130 = (void *)(((unint64_t)v128 + 23) & 0xFFFFFFFFFFFFFFF8);
          id v131 = (void *)(((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v130 = *v131;
          v130[1] = v131[1];
          *(unsigned char *)(v198 + v194) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_230:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_240;
        case 8u:
          size_t v183 = v91;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v158 + 16))(v198, v70, v159);
          uint64_t v109 = (void *)(((v198 | 7) + v172) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v110 = (void *)((((unint64_t)v70 | 7) + v172) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v109 = *v110;
          v109[1] = v110[1];
          unint64_t v111 = ((unint64_t)v109 + v157) & ~v176;
          uint64_t v112 = ((unint64_t)v110 + v157) & ~v176;
          swift_bridgeObjectRetain();
          if (v26 == v174)
          {
            uint64_t v113 = v166;
            unint64_t v93 = v198;
            if (!__swift_getEnumTagSinglePayload(v112, v26, v166))
            {
              uint64_t v114 = (const void *)((v188 + v112) & v92);
              goto LABEL_234;
            }
LABEL_223:
            memcpy((void *)v111, (const void *)v112, v24);
            uint64_t v115 = v194;
LABEL_238:
            size_t v139 = __na;
            goto LABEL_239;
          }
          uint64_t v114 = (const void *)((v188 + v112) & v92);
          BOOL v45 = v27 == v174;
          unint64_t v93 = v198;
          uint64_t v113 = v166;
          if (!v45)
          {
            unint64_t v132 = *(void *)((((unint64_t)v114 + v170) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v132 >= 0xFFFFFFFF) {
              LODWORD(v132) = -1;
            }
            if ((v132 + 1) < 2) {
              goto LABEL_234;
            }
            goto LABEL_223;
          }
          if (v154 >= 2 && __swift_getEnumTagSinglePayload((v188 + v112) & v92, v154, v165) >= 2) {
            goto LABEL_223;
          }
LABEL_234:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v196 + 16))(v111, v112, v113);
          os_log_type_t v133 = (void *)((v188 + v111) & v92);
          if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v165))
          {
            memcpy(v133, v114, __na);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v156 + 16))(v133, v114, v165);
            __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v165);
          }
          uint64_t v134 = v114;
          uint64_t v115 = v194;
          uint64_t v135 = (void *)(((unint64_t)v133 + v170) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v136 = (void *)(((unint64_t)v134 + v170) & 0xFFFFFFFFFFFFFFF8);
          void *v135 = *v136;
          v135[1] = v136[1];
          unint64_t v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v138 = ((unint64_t)v136 + 19) & 0xFFFFFFFFFFFFFFF8;
          LODWORD(v134) = *(_DWORD *)v138;
          *(unsigned char *)(v137 + 4) = *(unsigned char *)(v138 + 4);
          *(_DWORD *)unint64_t v137 = v134;
          swift_bridgeObjectRetain();
          size_t v139 = v153;
          if (!v154) {
            goto LABEL_238;
          }
LABEL_239:
          unint64_t v140 = (((v155 + v139 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          id v141 = (void *)(((v111 | 7) + v140) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v142 = *(void **)(((v112 | 7) + v140) & 0xFFFFFFFFFFFFFFF8);
          *id v141 = v142;
          *(unsigned char *)(v93 + v115) = 8;
          id v143 = v142;
          size_t v91 = v183;
          unint64_t v33 = v185;
LABEL_240:
          uint64_t v144 = (void *)((((unint64_t)v70 | 7) + v91) & 0xFFFFFFFFFFFFFFF8);
          id v145 = (void *)(((v93 | 7) + v91) & 0xFFFFFFFFFFFFFFF8);
          void *v145 = *v144;
          unint64_t v146 = ((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v147 = ((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v148 = *(void *)(v147 + 24);
          swift_bridgeObjectRetain();
          if (v148 < 0xFFFFFFFF)
          {
            long long v149 = *(_OWORD *)v147;
            long long v150 = *(_OWORD *)(v147 + 16);
            *(void *)(v146 + 32) = *(void *)(v147 + 32);
            *(_OWORD *)unint64_t v146 = v149;
            *(_OWORD *)(v146 + 16) = v150;
          }
          else
          {
            *(void *)(v146 + 24) = v148;
            *(void *)(v146 + 32) = *(void *)(v147 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v148 - 8))(v146, v147, v148);
          }
          uint64_t result = a1;
          *(unsigned char *)(v146 + 40) = *(unsigned char *)(v147 + 40);
          if (v192 > 3) {
            goto LABEL_247;
          }
          unsigned int v151 = ((1 << v190) + 1) >> v190;
          uint64_t v152 = 2;
          if (v151 > 0xFFFD) {
            uint64_t v152 = 4;
          }
          if (v151 <= 0xFD) {
LABEL_247:
          }
            uint64_t v152 = 1;
          unint64_t v85 = v152 + v192;
          if (v85 <= v33) {
            unint64_t v85 = v33;
          }
          if (v85 <= 9) {
            unint64_t v85 = 9;
          }
          char v86 = 2;
LABEL_253:
          result[v85] = v86;
          return result;
        case 9u:
          unint64_t v93 = v198;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v178 + 16))(v198, v70, v74);
          char v102 = 9;
LABEL_213:
          *(unsigned char *)(v93 + v194) = v102;
          goto LABEL_240;
        default:
          unint64_t v93 = v198;
          memcpy((void *)v198, v70, v91);
          goto LABEL_240;
      }
    case 3u:
      uint64_t v63 = a1;
      (*(void (**)(unsigned char *, unsigned __int8 *, size_t))(v191 + 16))(a1, a2, __n);
      if (v35 > 3) {
        goto LABEL_121;
      }
      unsigned int v76 = ((1 << v36) + 1) >> v36;
      uint64_t v77 = 2;
      if (v76 > 0xFFFD) {
        uint64_t v77 = 4;
      }
      if (v76 <= 0xFD) {
LABEL_121:
      }
        uint64_t v77 = 1;
      unint64_t v66 = v77 + v35;
      if (v66 <= v33) {
        unint64_t v66 = v33;
      }
      if (v66 <= 9) {
        unint64_t v66 = 9;
      }
      char v67 = 3;
      goto LABEL_137;
    case 4u:
      uint64_t v63 = a1;
      (*(void (**)(unsigned char *, unsigned __int8 *, size_t))(v191 + 16))(a1, a2, __n);
      if (v35 > 3) {
        goto LABEL_131;
      }
      unsigned int v78 = ((1 << v36) + 1) >> v36;
      uint64_t v79 = 2;
      if (v78 > 0xFFFD) {
        uint64_t v79 = 4;
      }
      if (v78 <= 0xFD) {
LABEL_131:
      }
        uint64_t v79 = 1;
      unint64_t v66 = v79 + v35;
      if (v66 <= v33) {
        unint64_t v66 = v33;
      }
      if (v66 <= 9) {
        unint64_t v66 = 9;
      }
      char v67 = 4;
LABEL_137:
      uint64_t result = v63;
      v63[v66] = v67;
      return result;
    case 5u:
      if (v35 > 3) {
        goto LABEL_139;
      }
      unsigned int v87 = ((1 << v36) + 1) >> v36;
      if (v87 > 0xFFFD)
      {
        unsigned int v80 = *(_DWORD *)&a2[v35];
      }
      else if (v87 <= 0xFD)
      {
LABEL_139:
        unsigned int v80 = a2[v35];
      }
      else
      {
        unsigned int v80 = *(unsigned __int16 *)&a2[v35];
      }
      unsigned int v88 = v80 - 2;
      if (v80 >= 2)
      {
        if (v35 <= 3) {
          uint64_t v89 = v35;
        }
        else {
          uint64_t v89 = 4;
        }
        switch(v89)
        {
          case 1:
            int v90 = *a2;
            goto LABEL_172;
          case 2:
            int v90 = *(unsigned __int16 *)a2;
            goto LABEL_172;
          case 3:
            int v90 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_172;
          case 4:
            int v90 = *(_DWORD *)a2;
LABEL_172:
            if (v35 < 4) {
              v90 |= v88 << v36;
            }
            unsigned int v80 = v90 + 2;
            break;
          default:
            break;
        }
      }
      if (v80 == 1)
      {
        uint64_t v95 = *(void *)a2;
        id v96 = *(id *)a2;
        uint64_t result = a1;
        *(void *)a1 = v95;
        a1[8] = a2[8];
        if (v35 > 3) {
          goto LABEL_184;
        }
        unsigned int v97 = ((1 << v36) + 1) >> v36;
        if (v97 > 0xFFFD)
        {
          *(_DWORD *)&a1[v35] = 1;
          goto LABEL_193;
        }
        if (v97 <= 0xFD)
        {
LABEL_184:
          a1[v35] = 1;
          goto LABEL_192;
        }
        *(_WORD *)&a1[v35] = 1;
      }
      else
      {
        if (v80)
        {
          if (v35 > 3) {
            goto LABEL_189;
          }
          unsigned int v98 = ((1 << v36) + 1) >> v36;
          uint64_t v99 = 2;
          if (v98 > 0xFFFD) {
            uint64_t v99 = 4;
          }
          if (v98 <= 0xFD) {
LABEL_189:
          }
            uint64_t v99 = 1;
          memcpy(a1, a2, v99 + v35);
          goto LABEL_191;
        }
        (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v34 + 16))(a1, a2, v187);
        if (v35 > 3)
        {
LABEL_180:
          a1[v35] = 0;
LABEL_191:
          uint64_t result = a1;
LABEL_192:
          if (v35 > 3) {
            goto LABEL_196;
          }
          goto LABEL_193;
        }
        unsigned int v94 = ((1 << v36) + 1) >> v36;
        if (v94 > 0xFFFD)
        {
          uint64_t result = a1;
          *(_DWORD *)&a1[v35] = 0;
        }
        else
        {
          if (v94 <= 0xFD) {
            goto LABEL_180;
          }
          *(_WORD *)&a1[v35] = 0;
          uint64_t result = a1;
        }
      }
LABEL_193:
      unsigned int v100 = ((1 << v36) + 1) >> v36;
      uint64_t v101 = 2;
      if (v100 > 0xFFFD) {
        uint64_t v101 = 4;
      }
      if (v100 > 0xFD)
      {
LABEL_197:
        unint64_t v85 = v101 + v35;
        if (v85 <= v33) {
          unint64_t v85 = v33;
        }
        if (v85 <= 9) {
          unint64_t v85 = 9;
        }
        char v86 = 5;
        goto LABEL_253;
      }
LABEL_196:
      uint64_t v101 = 1;
      goto LABEL_197;
    case 6u:
      id v81 = *(id *)a2;
      id v82 = *(id *)a2;
      uint64_t result = a1;
      *(void *)a1 = v81;
      a1[8] = a2[8];
      if (v35 > 3) {
        goto LABEL_144;
      }
      unsigned int v83 = ((1 << v36) + 1) >> v36;
      uint64_t v84 = 2;
      if (v83 > 0xFFFD) {
        uint64_t v84 = 4;
      }
      if (v83 <= 0xFD) {
LABEL_144:
      }
        uint64_t v84 = 1;
      unint64_t v85 = v84 + v35;
      if (v85 <= v33) {
        unint64_t v85 = v33;
      }
      if (v85 <= 9) {
        unint64_t v85 = 9;
      }
      char v86 = 6;
      goto LABEL_253;
    default:
      if (v35 > 3) {
        goto LABEL_95;
      }
      unsigned int v60 = ((1 << v36) + 1) >> v36;
      uint64_t v61 = 2;
      if (v60 > 0xFFFD) {
        uint64_t v61 = 4;
      }
      if (v60 <= 0xFD) {
LABEL_95:
      }
        uint64_t v61 = 1;
      unint64_t v62 = v61 + v35;
      if (v62 <= v33) {
        unint64_t v62 = v33;
      }
      if (v62 <= 9) {
        unint64_t v62 = 9;
      }
      memcpy(a1, a2, v62 + 1);
      return a1;
  }
}

void sub_1C9975478(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v83 = *(void *)(a2 + 16);
  uint64_t v82 = *(void *)(v83 - 8);
  unint64_t v95 = *(void *)(v82 + 64);
  uint64_t v2 = sub_1C9BEAB08();
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v81 = v2;
  uint64_t v93 = *(void *)(v80 + 64);
  uint64_t v77 = sub_1C9BEC028();
  uint64_t v89 = *(void *)(v77 - 8);
  uint64_t v76 = v89;
  int v3 = *(_DWORD *)(v89 + 80);
  uint64_t v75 = sub_1C9BEAC48();
  uint64_t v91 = *(void *)(v75 - 8);
  uint64_t v74 = v91;
  int v84 = *(_DWORD *)(v91 + 80) | v3;
  uint64_t v79 = sub_1C9BEAF18();
  uint64_t v87 = *(void *)(v79 - 8);
  uint64_t v4 = v87;
  int v5 = *(_DWORD *)(v87 + 80) & 0xF8;
  uint64_t v78 = sub_1C9BEAE48();
  uint64_t v85 = *(void *)(v78 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v85 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v8 = sub_1C9BEC928();
  uint64_t v86 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  int v9 = *(_DWORD *)(v86 + 80);
  uint64_t v10 = sub_1C9BEC8F8();
  uint64_t v11 = (v84 | (v9 | *(_DWORD *)(*(void *)(v10 - 8) + 80))) & 0xF8 | v7;
  uint64_t v94 = v93 + v11;
  uint64_t v12 = v94 & ~v11;
  unint64_t v13 = *(void *)(v89 + 64);
  uint64_t v14 = v87;
  if (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v13) {
    unint64_t v13 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v13 <= *(void *)(v91 + 64)) {
    unint64_t v13 = *(void *)(v91 + 64);
  }
  uint64_t v15 = *(void *)(v87 + 64);
  uint64_t v16 = v15 + v6;
  uint64_t v92 = v6;
  uint64_t v17 = *(unsigned int *)(v85 + 84);
  if (v17) {
    uint64_t v18 = *(void *)(v85 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v85 + 64) + 1;
  }
  unint64_t v19 = (v18 + 7 + ((v15 + v6) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v13 <= v20) {
    unint64_t v13 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v21 = v19 + 31;
  if (v13 <= (((((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v13 = (((((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v88 = *(void *)(v86 + 64);
  uint64_t v22 = v7 + 16;
  uint64_t v90 = v7;
  unint64_t v23 = (v7 + 16 + ((v88 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  uint64_t v24 = *(unsigned int *)(v4 + 84);
  if (v17) {
    unsigned int v25 = v17 - 1;
  }
  else {
    unsigned int v25 = 0;
  }
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v26 = v25;
  }
  if (v26 <= 0x7FFFFFFE) {
    int v27 = 2147483646;
  }
  else {
    int v27 = v26;
  }
  unint64_t v28 = ((v21 + v23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v13 <= v28) {
    unint64_t v13 = v28;
  }
  unint64_t v29 = *(void *)(*(void *)(v10 - 8) + 64);
  if (v13 > v29) {
    unint64_t v29 = v13;
  }
  if (v29 <= 0x18) {
    uint64_t v30 = 24;
  }
  else {
    uint64_t v30 = v29;
  }
  if (((((v30 + v12 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 <= v95) {
    unint64_t v31 = v95;
  }
  else {
    unint64_t v31 = ((((v30 + v12 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  uint64_t v32 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v33 = 9;
  if (*(void *)(v32 + 64) > 9uLL) {
    uint64_t v33 = *(void *)(v32 + 64);
  }
  char v34 = 8 * v33;
  if (v33 > 3) {
    goto LABEL_37;
  }
  unsigned int v35 = ((1 << v34) + 1) >> v34;
  uint64_t v36 = 2;
  if (v35 > 0xFFFD) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFD) {
LABEL_37:
  }
    uint64_t v36 = 1;
  unint64_t v37 = v36 + v33;
  if (v37 <= v31) {
    unint64_t v37 = v31;
  }
  if (v37 <= 9) {
    unint64_t v37 = 9;
  }
  unsigned int v38 = a1[v37];
  unsigned int v39 = v38 - 7;
  if (v38 >= 7)
  {
    if (v33 > 3) {
      goto LABEL_47;
    }
    unsigned int v40 = ((1 << v34) + 1) >> v34;
    uint64_t v41 = 2;
    if (v40 > 0xFFFD) {
      uint64_t v41 = 4;
    }
    if (v40 <= 0xFD) {
LABEL_47:
    }
      uint64_t v41 = 1;
    unint64_t v42 = v41 + v33;
    if (v42 > v31) {
      unint64_t v31 = v42;
    }
    if (v31 <= 9) {
      LODWORD(v31) = 9;
    }
    if (v31 <= 3) {
      uint64_t v43 = v31;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a1;
        goto LABEL_60;
      case 2:
        int v44 = *(unsigned __int16 *)a1;
        goto LABEL_60;
      case 3:
        int v44 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_60;
      case 4:
        int v44 = *(_DWORD *)a1;
LABEL_60:
        if (v31 < 4) {
          unsigned int v38 = (v44 | (v39 << (8 * v31))) + 7;
        }
        else {
          unsigned int v38 = v44 + 7;
        }
        break;
      default:
        break;
    }
  }
  switch(v38)
  {
    case 0u:
    case 1u:
    case 3u:
    case 4u:
      BOOL v45 = *(void (**)(unsigned __int8 *, uint64_t))(v82 + 8);
      v45(a1, v83);
      return;
    case 2u:
      uint64_t v72 = v22;
      uint64_t v46 = *(void *)(v10 - 8);
      uint64_t v47 = v10;
      uint64_t v96 = v18 + 7;
      uint64_t v98 = v16;
      uint64_t v48 = ~v11;
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v80 + 8))(a1, v81, v32);
      unsigned int v49 = (unsigned __int8 *)((unint64_t)&a1[v94] & v48);
      unsigned int v50 = v49[v30];
      unsigned int v51 = v50 - 10;
      if (v50 < 0xA)
      {
        uint64_t v53 = v47;
      }
      else
      {
        if (v30 <= 3) {
          uint64_t v52 = v30;
        }
        else {
          uint64_t v52 = 4;
        }
        uint64_t v53 = v47;
        switch(v52)
        {
          case 1:
            int v54 = *v49;
            goto LABEL_89;
          case 2:
            int v54 = *(unsigned __int16 *)v49;
            goto LABEL_89;
          case 3:
            int v54 = *(unsigned __int16 *)((unint64_t)&a1[v94] & v48) | (*(unsigned __int8 *)(((unint64_t)&a1[v94] & v48)
                                                                                                + 2) << 16);
            goto LABEL_89;
          case 4:
            int v54 = *(_DWORD *)v49;
LABEL_89:
            if (v30 < 4) {
              unsigned int v50 = (v54 | (v51 << (8 * v30))) + 10;
            }
            else {
              unsigned int v50 = v54 + 10;
            }
            break;
          default:
            goto LABEL_92;
        }
      }
      break;
    case 5u:
      if (v33 > 3) {
        goto LABEL_74;
      }
      unsigned int v56 = ((1 << v34) + 1) >> v34;
      if (v56 > 0xFFFD)
      {
        unsigned int v55 = *(_DWORD *)&a1[v33];
      }
      else if (v56 <= 0xFD)
      {
LABEL_74:
        unsigned int v55 = a1[v33];
      }
      else
      {
        unsigned int v55 = *(unsigned __int16 *)&a1[v33];
      }
      unsigned int v57 = v55 - 2;
      if (v55 >= 2)
      {
        if (v33 <= 3) {
          uint64_t v58 = v33;
        }
        else {
          uint64_t v58 = 4;
        }
        switch(v58)
        {
          case 1:
            int v59 = *a1;
            goto LABEL_97;
          case 2:
            int v59 = *(unsigned __int16 *)a1;
            goto LABEL_97;
          case 3:
            int v59 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_97;
          case 4:
            int v59 = *(_DWORD *)a1;
LABEL_97:
            if (v33 < 4) {
              unsigned int v55 = (v59 | (v57 << v34)) + 2;
            }
            else {
              unsigned int v55 = v59 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v55 == 1)
      {
LABEL_105:
        uint64_t v65 = *(void **)a1;
      }
      else if (!v55)
      {
        unsigned int v64 = *(void (**)(unsigned __int8 *))(v32 + 8);
        v64(a1);
      }
      return;
    case 6u:
      goto LABEL_105;
    default:
      return;
  }
LABEL_92:
  uint64_t v60 = v30 + 1;
  uint64_t v61 = ~v92;
  switch(v50)
  {
    case 0u:
      uint64_t v63 = v76;
      uint64_t v62 = v77;
      goto LABEL_112;
    case 1u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v76 + 8))(v49, v77);
      swift_release();
      goto LABEL_137;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_120;
    case 3u:
      swift_unknownObjectRelease();
      goto LABEL_137;
    case 4u:
      uint64_t v63 = v74;
      uint64_t v62 = v75;
LABEL_112:
      (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(v49, v62);
      goto LABEL_137;
    case 5u:
      unint64_t v66 = *(void **)v49;
      goto LABEL_136;
    case 6u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v49, v79);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v49[v98] & v61, 1, v78)) {
        (*(void (**)(unint64_t, uint64_t))(v85 + 8))((unint64_t)&v49[v98] & v61, v78);
      }
      goto LABEL_120;
    case 7u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v14 + 8))(v49, v79);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v49[v98] & v61, 1, v78)) {
        (*(void (**)(unint64_t, uint64_t))(v85 + 8))((unint64_t)&v49[v98] & v61, v78);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_120:
      swift_bridgeObjectRelease();
      goto LABEL_137;
    case 8u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v86 + 8))(v49, v73);
      swift_bridgeObjectRelease();
      unint64_t v67 = (v72 + ((((unint64_t)v49 | 7) + v88) & 0xFFFFFFFFFFFFFFF8)) & ~v90;
      if (v24 == v27)
      {
        uint64_t v68 = v14;
        if (__swift_getEnumTagSinglePayload(v67, v24, v79)) {
          goto LABEL_135;
        }
        uint64_t v69 = (v98 + v67) & v61;
        goto LABEL_132;
      }
      uint64_t v69 = (v98 + v67) & v61;
      if (v25 == v27)
      {
        uint64_t v68 = v14;
        if (v17 >= 2 && __swift_getEnumTagSinglePayload((v98 + v67) & v61, v17, v78) >= 2) {
          goto LABEL_135;
        }
        goto LABEL_132;
      }
      unint64_t v70 = *(void *)(((v96 + v69) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v70 >= 0xFFFFFFFF) {
        LODWORD(v70) = -1;
      }
      uint64_t v68 = v14;
      if ((v70 + 1) < 2)
      {
LABEL_132:
        (*(void (**)(unint64_t, uint64_t))(v68 + 8))(v67, v79);
        if (!__swift_getEnumTagSinglePayload(v69, 1, v78)) {
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v69, v78);
        }
        swift_bridgeObjectRelease();
      }
LABEL_135:
      unint64_t v66 = *(void **)(((v67 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
LABEL_136:

LABEL_137:
      swift_bridgeObjectRelease();
      unint64_t v71 = (((((unint64_t)v49 | 7) + v60) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v71 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1(v71);
      }
      return;
    case 9u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v46 + 8))(v49, v53);
      goto LABEL_137;
    default:
      goto LABEL_137;
  }
}

unsigned char *sub_1C99760A4(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v153 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v169 = *(void *)(v153 + 64);
  uint64_t v152 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v166 = *(void *)(v152 + 64);
  uint64_t v149 = sub_1C9BEC028();
  uint64_t v161 = *(void *)(v149 - 8);
  uint64_t v148 = v161;
  int v3 = *(_DWORD *)(v161 + 80);
  uint64_t v147 = sub_1C9BEAC48();
  uint64_t v163 = *(void *)(v147 - 8);
  uint64_t v146 = v163;
  int v155 = *(_DWORD *)(v163 + 80) | v3;
  uint64_t v151 = sub_1C9BEAF18();
  uint64_t v159 = *(void *)(v151 - 8);
  uint64_t v176 = v159;
  int v4 = *(_DWORD *)(v159 + 80) & 0xF8;
  uint64_t v150 = sub_1C9BEAE48();
  uint64_t v5 = *(void *)(v150 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v8 = sub_1C9BEC928();
  uint64_t v157 = *(void *)(v8 - 8);
  uint64_t v144 = v157;
  uint64_t v145 = v8;
  int v9 = *(_DWORD *)(v157 + 80);
  uint64_t v10 = sub_1C9BEC8F8();
  uint64_t v11 = v161;
  uint64_t v162 = *(void *)(v10 - 8);
  uint64_t v12 = (v155 | (v9 | *(_DWORD *)(v162 + 80))) & 0xF8 | v7;
  uint64_t v167 = v166 + v12;
  uint64_t v13 = v167 & ~v12;
  unint64_t v14 = *(void *)(v11 + 64);
  unint64_t v156 = v14 + 7;
  if (((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v14) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v163 + 64)) {
    unint64_t v14 = *(void *)(v163 + 64);
  }
  uint64_t v15 = *(void *)(v159 + 64);
  uint64_t v16 = v15 + v6;
  uint64_t v164 = v6;
  uint64_t v17 = (v15 + v6) & ~v6;
  uint64_t v143 = v5;
  unsigned int v18 = *(_DWORD *)(v5 + 84);
  size_t v19 = *(void *)(v5 + 64);
  if (v18) {
    size_t v20 = *(void *)(v5 + 64);
  }
  else {
    size_t v20 = v19 + 1;
  }
  unint64_t v21 = (v20 + 7 + v17) & 0xFFFFFFFFFFFFFFF8;
  size_t v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v14 <= v22) {
    unint64_t v14 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v23 = v21 + 31;
  if (v14 <= (((((v23 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = (((((v23 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v24 = *(void *)(v157 + 64);
  uint64_t v158 = v7 + 16;
  uint64_t v160 = v7;
  uint64_t v25 = *(unsigned int *)(v176 + 84);
  if (v18) {
    unsigned int v26 = v18 - 1;
  }
  else {
    unsigned int v26 = 0;
  }
  if (v26 <= v25) {
    unsigned int v27 = *(_DWORD *)(v176 + 84);
  }
  else {
    unsigned int v27 = v26;
  }
  if (v27 <= 0x7FFFFFFE) {
    int v28 = 2147483646;
  }
  else {
    int v28 = v27;
  }
  unint64_t v29 = ((v23 + ((v7 + 16 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v14 <= v29) {
    unint64_t v14 = v29;
  }
  unint64_t v30 = *(void *)(*(void *)(v10 - 8) + 64);
  if (v14 > v30) {
    unint64_t v30 = v14;
  }
  if (v30 <= 0x18) {
    uint64_t v31 = 24;
  }
  else {
    uint64_t v31 = v30;
  }
  if (((((v31 + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 <= v169) {
    unint64_t v32 = v169;
  }
  else {
    unint64_t v32 = ((((v31 + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  uint64_t v33 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v33 + 64) <= 9uLL) {
    uint64_t v34 = 9;
  }
  else {
    uint64_t v34 = *(void *)(v33 + 64);
  }
  char v35 = 8 * v34;
  if (v34 > 3) {
    goto LABEL_38;
  }
  unsigned int v36 = ((1 << v35) + 1) >> v35;
  uint64_t v37 = 2;
  if (v36 > 0xFFFD) {
    uint64_t v37 = 4;
  }
  if (v36 <= 0xFD) {
LABEL_38:
  }
    uint64_t v37 = 1;
  unint64_t v38 = v37 + v34;
  if (v38 <= v32) {
    unint64_t v38 = v32;
  }
  if (v38 <= 9) {
    unint64_t v38 = 9;
  }
  unsigned int v39 = a1;
  unsigned int v40 = a2[v38];
  unsigned int v41 = v40 - 7;
  if (v40 >= 7)
  {
    if (v34 > 3) {
      goto LABEL_48;
    }
    unsigned int v42 = ((1 << v35) + 1) >> v35;
    uint64_t v43 = 2;
    if (v42 > 0xFFFD) {
      uint64_t v43 = 4;
    }
    if (v42 <= 0xFD) {
LABEL_48:
    }
      uint64_t v43 = 1;
    unint64_t v44 = v43 + v34;
    if (v44 <= v32) {
      unint64_t v44 = v32;
    }
    if (v44 <= 9) {
      LODWORD(v44) = 9;
    }
    if (v44 <= 3) {
      uint64_t v45 = v44;
    }
    else {
      uint64_t v45 = 4;
    }
    switch(v45)
    {
      case 1:
        int v46 = *a2;
        goto LABEL_61;
      case 2:
        int v46 = *(unsigned __int16 *)a2;
        goto LABEL_61;
      case 3:
        int v46 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_61;
      case 4:
        int v46 = *(_DWORD *)a2;
LABEL_61:
        if (v44 < 4) {
          unsigned int v40 = (v46 | (v41 << (8 * v44))) + 7;
        }
        else {
          unsigned int v40 = v46 + 7;
        }
        break;
      default:
        break;
    }
  }
  switch(v40)
  {
    case 0u:
      (*(void (**)(unsigned char *))(v153 + 16))(a1);
      if (v34 > 3) {
        goto LABEL_69;
      }
      unsigned int v47 = ((1 << v35) + 1) >> v35;
      uint64_t v48 = 2;
      if (v47 > 0xFFFD) {
        uint64_t v48 = 4;
      }
      if (v47 <= 0xFD) {
LABEL_69:
      }
        uint64_t v48 = 1;
      unint64_t v49 = v48 + v34;
      if (v49 <= v32) {
        unint64_t v49 = v32;
      }
      if (v49 <= 9) {
        unint64_t v49 = 9;
      }
      a1[v49] = 0;
      return v39;
    case 1u:
      (*(void (**)(unsigned char *))(v153 + 16))(a1);
      if (v34 > 3) {
        goto LABEL_89;
      }
      unsigned int v53 = ((1 << v35) + 1) >> v35;
      uint64_t v54 = 2;
      if (v53 > 0xFFFD) {
        uint64_t v54 = 4;
      }
      if (v53 <= 0xFD) {
LABEL_89:
      }
        uint64_t v54 = 1;
      unint64_t v55 = v54 + v34;
      if (v55 <= v32) {
        unint64_t v55 = v32;
      }
      if (v55 <= 9) {
        unint64_t v55 = 9;
      }
      char v56 = 1;
      goto LABEL_235;
    case 2u:
      unsigned int v138 = v18;
      int v139 = v28;
      uint64_t v57 = v10;
      uint64_t v154 = v16;
      size_t v137 = v19;
      uint64_t v140 = v17;
      size_t __n = v20;
      size_t v142 = v20 + 7;
      uint64_t v172 = v31;
      uint64_t v58 = ~v12;
      (*(void (**)(unsigned char *))(v152 + 16))(a1);
      unint64_t v170 = (unint64_t)&a1[v167] & v58;
      unsigned int v174 = (unsigned __int8 *)((unint64_t)&a2[v167] & v58);
      unsigned int v59 = v174[v172];
      unsigned int v60 = v59 - 10;
      if (v59 < 0xA)
      {
        uint64_t v62 = v57;
      }
      else
      {
        if (v172 <= 3) {
          uint64_t v61 = v172;
        }
        else {
          uint64_t v61 = 4;
        }
        uint64_t v62 = v57;
        switch(v61)
        {
          case 1:
            int v63 = *v174;
            goto LABEL_147;
          case 2:
            int v63 = *(unsigned __int16 *)v174;
            goto LABEL_147;
          case 3:
            int v63 = *(unsigned __int16 *)v174 | (v174[2] << 16);
            goto LABEL_147;
          case 4:
            int v63 = *(_DWORD *)v174;
LABEL_147:
            if (v172 < 4) {
              unsigned int v59 = (v63 | (v60 << (8 * v172))) + 10;
            }
            else {
              unsigned int v59 = v63 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v77 = v172 + 1;
      unint64_t v168 = v32;
      uint64_t v78 = ~v164;
      switch(v59)
      {
        case 0u:
          unint64_t v79 = v170;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v148 + 16))(v170, v174, v149);
          *(unsigned char *)(v170 + v172) = 0;
          goto LABEL_221;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v148 + 16))(v170, v174, v149);
          *(void *)((v156 + v170) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v174[v156] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v170 + v172) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v79 = v170;
          *(void *)unint64_t v170 = *(void *)v174;
          *(void *)(v170 + 8) = *((void *)v174 + 1);
          *(void *)(v170 + 16) = *((void *)v174 + 2);
          *(unsigned char *)(v170 + v172) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_221;
        case 3u:
          unint64_t v79 = v170;
          *(void *)unint64_t v170 = *(void *)v174;
          *(unsigned char *)(v170 + v172) = 3;
          swift_unknownObjectRetain();
          goto LABEL_221;
        case 4u:
          unint64_t v79 = v170;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v146 + 16))(v170, v174, v147);
          char v88 = 4;
          goto LABEL_195;
        case 5u:
          uint64_t v89 = *(void **)v174;
          unint64_t v79 = v170;
          *(void *)unint64_t v170 = *(void *)v174;
          *(unsigned char *)(v170 + v172) = 5;
          goto LABEL_220;
        case 6u:
          unint64_t v79 = v170;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v176 + 16))(v170, v174, v151);
          uint64_t v90 = (void *)((v154 + v170) & v78);
          uint64_t v91 = (const void *)((unint64_t)&v174[v154] & v78);
          if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v150))
          {
            memcpy(v90, v91, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v143 + 16))(v90, v91, v150);
            __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v150);
          }
          uint64_t v77 = v172 + 1;
          unsigned int v100 = (void *)(((unint64_t)v90 + v142) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v101 = (void *)(((unint64_t)v91 + v142) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v100 = *v101;
          v100[1] = v101[1];
          unint64_t v102 = ((unint64_t)v100 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v103 = ((unint64_t)v101 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v104 = *(_DWORD *)v103;
          *(unsigned char *)(v102 + 4) = *(unsigned char *)(v103 + 4);
          *(_DWORD *)unint64_t v102 = v104;
          *(unsigned char *)(v170 + v172) = 6;
          swift_bridgeObjectRetain();
          unsigned int v39 = a1;
          goto LABEL_222;
        case 7u:
          unint64_t v79 = v170;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v176 + 16))(v170, v174, v151);
          uint64_t v92 = (void *)((v154 + v170) & v78);
          uint64_t v93 = (const void *)((unint64_t)&v174[v154] & v78);
          if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v150))
          {
            memcpy(v92, v93, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v143 + 16))(v92, v93, v150);
            __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v150);
          }
          uint64_t v77 = v172 + 1;
          size_t v105 = (void *)(((unint64_t)v92 + v142) & 0xFFFFFFFFFFFFFFF8);
          int v106 = (void *)(((unint64_t)v93 + v142) & 0xFFFFFFFFFFFFFFF8);
          *size_t v105 = *v106;
          v105[1] = v106[1];
          unint64_t v107 = ((unint64_t)v105 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v108 = ((unint64_t)v106 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v109 = *(_DWORD *)v108;
          *(unsigned char *)(v107 + 4) = *(unsigned char *)(v108 + 4);
          *(_DWORD *)unint64_t v107 = v109;
          uint64_t v110 = (void *)(((v170 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v111 = (void *)((((unint64_t)v174 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v110 = *v111;
          v110[1] = v111[1];
          uint64_t v112 = (void *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v113 = (void *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v112 = *v113;
          v112[1] = v113[1];
          uint64_t v114 = (void *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v115 = (void *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v114 = *v115;
          v114[1] = v115[1];
          *(unsigned char *)(v170 + v172) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unsigned int v39 = a1;
          goto LABEL_221;
        case 8u:
          uint64_t v165 = ~v164;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v144 + 16))(v170, v174, v145);
          uint64_t v94 = (void *)(((v170 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v95 = (void *)((((unint64_t)v174 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v94 = *v95;
          v94[1] = v95[1];
          unint64_t v96 = ((unint64_t)v94 + v158) & ~v160;
          uint64_t v97 = ((unint64_t)v95 + v158) & ~v160;
          swift_bridgeObjectRetain();
          if (v25 == v139)
          {
            unint64_t v79 = v170;
            uint64_t v98 = v165;
            if (!__swift_getEnumTagSinglePayload(v97, v25, v151))
            {
              uint64_t v99 = (const void *)((v154 + v97) & v165);
              goto LABEL_214;
            }
LABEL_204:
            memcpy((void *)v96, (const void *)v97, v22);
LABEL_218:
            size_t v123 = __n;
            goto LABEL_219;
          }
          uint64_t v98 = v165;
          uint64_t v99 = (const void *)((v154 + v97) & v165);
          if (v26 != v139)
          {
            unint64_t v116 = *(void *)((((unint64_t)v99 + v142) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v116 >= 0xFFFFFFFF) {
              LODWORD(v116) = -1;
            }
            unint64_t v79 = v170;
            if ((v116 + 1) < 2) {
              goto LABEL_214;
            }
            goto LABEL_204;
          }
          unint64_t v79 = v170;
          if (v138 >= 2 && __swift_getEnumTagSinglePayload((v154 + v97) & v165, v138, v150) >= 2) {
            goto LABEL_204;
          }
LABEL_214:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v176 + 16))(v96, v97, v151);
          uint64_t v117 = (void *)((v154 + v96) & v98);
          if (__swift_getEnumTagSinglePayload((uint64_t)v99, 1, v150))
          {
            memcpy(v117, v99, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v143 + 16))(v117, v99, v150);
            __swift_storeEnumTagSinglePayload((uint64_t)v117, 0, 1, v150);
          }
          unint64_t v118 = (void *)(((unint64_t)v117 + v142) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v119 = (void *)(((unint64_t)v99 + v142) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v118 = *v119;
          v118[1] = v119[1];
          unint64_t v120 = ((unint64_t)v118 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v121 = ((unint64_t)v119 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v122 = *(_DWORD *)v121;
          *(unsigned char *)(v120 + 4) = *(unsigned char *)(v121 + 4);
          *(_DWORD *)unint64_t v120 = v122;
          swift_bridgeObjectRetain();
          size_t v123 = v137;
          if (!v138) {
            goto LABEL_218;
          }
LABEL_219:
          unint64_t v124 = (((v140 + v123 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          int v125 = (void *)(((v96 | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v89 = *(void **)(((v97 | 7) + v124) & 0xFFFFFFFFFFFFFFF8);
          *int v125 = v89;
          *(unsigned char *)(v79 + v172) = 8;
LABEL_220:
          id v126 = v89;
LABEL_221:
          unint64_t v32 = v168;
LABEL_222:
          uint64_t v127 = (void *)((((unint64_t)v174 | 7) + v77) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v128 = (void *)(((v79 | 7) + v77) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v128 = *v127;
          unint64_t v129 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v130 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v131 = *(void *)(v130 + 24);
          swift_bridgeObjectRetain();
          if (v131 < 0xFFFFFFFF)
          {
            long long v132 = *(_OWORD *)v130;
            long long v133 = *(_OWORD *)(v130 + 16);
            *(void *)(v129 + 32) = *(void *)(v130 + 32);
            *(_OWORD *)unint64_t v129 = v132;
            *(_OWORD *)(v129 + 16) = v133;
          }
          else
          {
            *(void *)(v129 + 24) = v131;
            *(void *)(v129 + 32) = *(void *)(v130 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v131 - 8))(v129, v130, v131);
          }
          *(unsigned char *)(v129 + 40) = *(unsigned char *)(v130 + 40);
          if (v34 > 3) {
            goto LABEL_229;
          }
          unsigned int v134 = ((1 << (8 * v34)) + 1) >> (8 * v34);
          uint64_t v135 = 2;
          if (v134 > 0xFFFD) {
            uint64_t v135 = 4;
          }
          if (v134 <= 0xFD) {
LABEL_229:
          }
            uint64_t v135 = 1;
          unint64_t v55 = v135 + v34;
          if (v55 <= v32) {
            unint64_t v55 = v32;
          }
          if (v55 <= 9) {
            unint64_t v55 = 9;
          }
          char v56 = 2;
LABEL_235:
          v39[v55] = v56;
          return v39;
        case 9u:
          unint64_t v79 = v170;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v162 + 16))(v170, v174, v62);
          char v88 = 9;
LABEL_195:
          *(unsigned char *)(v79 + v172) = v88;
          goto LABEL_221;
        default:
          unint64_t v79 = v170;
          memcpy((void *)v170, v174, v172 + 1);
          goto LABEL_222;
      }
    case 3u:
      (*(void (**)(unsigned char *))(v153 + 16))(a1);
      if (v34 > 3) {
        goto LABEL_105;
      }
      unsigned int v64 = ((1 << v35) + 1) >> v35;
      uint64_t v65 = 2;
      if (v64 > 0xFFFD) {
        uint64_t v65 = 4;
      }
      if (v64 <= 0xFD) {
LABEL_105:
      }
        uint64_t v65 = 1;
      unint64_t v55 = v65 + v34;
      if (v55 <= v32) {
        unint64_t v55 = v32;
      }
      if (v55 <= 9) {
        unint64_t v55 = 9;
      }
      char v56 = 3;
      goto LABEL_235;
    case 4u:
      (*(void (**)(unsigned char *))(v153 + 16))(a1);
      if (v34 > 3) {
        goto LABEL_115;
      }
      unsigned int v66 = ((1 << v35) + 1) >> v35;
      uint64_t v67 = 2;
      if (v66 > 0xFFFD) {
        uint64_t v67 = 4;
      }
      if (v66 <= 0xFD) {
LABEL_115:
      }
        uint64_t v67 = 1;
      unint64_t v55 = v67 + v34;
      if (v55 <= v32) {
        unint64_t v55 = v32;
      }
      if (v55 <= 9) {
        unint64_t v55 = 9;
      }
      char v56 = 4;
      goto LABEL_235;
    case 5u:
      if (v34 > 3) {
        goto LABEL_122;
      }
      unsigned int v73 = ((1 << v35) + 1) >> v35;
      if (v73 > 0xFFFD)
      {
        unsigned int v68 = *(_DWORD *)&a2[v34];
      }
      else if (v73 <= 0xFD)
      {
LABEL_122:
        unsigned int v68 = a2[v34];
      }
      else
      {
        unsigned int v68 = *(unsigned __int16 *)&a2[v34];
      }
      unsigned int v74 = v68 - 2;
      if (v68 >= 2)
      {
        if (v34 <= 3) {
          uint64_t v75 = v34;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *a2;
            goto LABEL_155;
          case 2:
            int v76 = *(unsigned __int16 *)a2;
            goto LABEL_155;
          case 3:
            int v76 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_155;
          case 4:
            int v76 = *(_DWORD *)a2;
LABEL_155:
            if (v34 < 4) {
              v76 |= v74 << v35;
            }
            unsigned int v68 = v76 + 2;
            break;
          default:
            break;
        }
      }
      if (v68 == 1)
      {
        uint64_t v81 = *(void *)a2;
        id v82 = *(id *)a2;
        *(void *)a1 = v81;
        a1[8] = a2[8];
        if (v34 <= 3)
        {
          unsigned int v83 = ((1 << v35) + 1) >> v35;
          if (v83 > 0xFFFD)
          {
            *(_DWORD *)&a1[v34] = 1;
            goto LABEL_175;
          }
          if (v83 > 0xFD)
          {
            *(_WORD *)&a1[v34] = 1;
            goto LABEL_175;
          }
        }
        a1[v34] = 1;
      }
      else
      {
        if (!v68)
        {
          (*(void (**)(unsigned char *))(v33 + 16))(a1);
          if (v34 > 3)
          {
LABEL_163:
            a1[v34] = 0;
            goto LABEL_174;
          }
          unsigned int v80 = ((1 << v35) + 1) >> v35;
          if (v80 > 0xFFFD)
          {
            *(_DWORD *)&a1[v34] = 0;
          }
          else
          {
            if (v80 <= 0xFD) {
              goto LABEL_163;
            }
            *(_WORD *)&a1[v34] = 0;
          }
LABEL_175:
          unsigned int v86 = ((1 << v35) + 1) >> v35;
          uint64_t v87 = 2;
          if (v86 > 0xFFFD) {
            uint64_t v87 = 4;
          }
          if (v86 > 0xFD)
          {
LABEL_179:
            unint64_t v55 = v87 + v34;
            if (v55 <= v32) {
              unint64_t v55 = v32;
            }
            if (v55 <= 9) {
              unint64_t v55 = 9;
            }
            char v56 = 5;
            goto LABEL_235;
          }
LABEL_178:
          uint64_t v87 = 1;
          goto LABEL_179;
        }
        if (v34 > 3) {
          goto LABEL_172;
        }
        unsigned int v84 = ((1 << v35) + 1) >> v35;
        uint64_t v85 = 2;
        if (v84 > 0xFFFD) {
          uint64_t v85 = 4;
        }
        if (v84 <= 0xFD) {
LABEL_172:
        }
          uint64_t v85 = 1;
        memcpy(a1, a2, v85 + v34);
      }
LABEL_174:
      if (v34 > 3) {
        goto LABEL_178;
      }
      goto LABEL_175;
    case 6u:
      id v69 = *(id *)a2;
      id v70 = *(id *)a2;
      *(void *)a1 = v69;
      a1[8] = a2[8];
      if (v34 > 3) {
        goto LABEL_127;
      }
      unsigned int v71 = ((1 << v35) + 1) >> v35;
      uint64_t v72 = 2;
      if (v71 > 0xFFFD) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFD) {
LABEL_127:
      }
        uint64_t v72 = 1;
      unint64_t v55 = v72 + v34;
      if (v55 <= v32) {
        unint64_t v55 = v32;
      }
      if (v55 <= 9) {
        unint64_t v55 = 9;
      }
      char v56 = 6;
      goto LABEL_235;
    default:
      if (v34 > 3) {
        goto LABEL_79;
      }
      unsigned int v50 = ((1 << v35) + 1) >> v35;
      uint64_t v51 = 2;
      if (v50 > 0xFFFD) {
        uint64_t v51 = 4;
      }
      if (v50 <= 0xFD) {
LABEL_79:
      }
        uint64_t v51 = 1;
      unint64_t v52 = v51 + v34;
      if (v52 <= v32) {
        unint64_t v52 = v32;
      }
      if (v52 <= 9) {
        unint64_t v52 = 9;
      }
      memcpy(a1, a2, v52 + 1);
      return v39;
  }
}

unsigned __int8 *sub_1C9977404(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  if (a1 != a2)
  {
    uint64_t v209 = *(void *)(a3 + 16);
    uint64_t v208 = *(void *)(v209 - 8);
    unint64_t v206 = *(void *)(v208 + 64);
    uint64_t v4 = sub_1C9BEAB08();
    uint64_t v191 = *(void *)(v4 - 8);
    uint64_t v192 = v4;
    uint64_t v202 = *(void *)(v191 + 64);
    uint64_t v188 = sub_1C9BEC028();
    uint64_t v187 = *(void *)(v188 - 8);
    int v5 = *(_DWORD *)(v187 + 80);
    uint64_t v185 = sub_1C9BEAC48();
    uint64_t v200 = *(void *)(v185 - 8);
    uint64_t v184 = v200;
    int v193 = *(_DWORD *)(v200 + 80) | v5;
    uint64_t v189 = sub_1C9BEAF18();
    uint64_t v197 = *(void *)(v189 - 8);
    uint64_t v212 = v197;
    int v6 = *(_DWORD *)(v197 + 80) & 0xF8;
    uint64_t v190 = sub_1C9BEAE48();
    uint64_t v7 = *(void *)(v190 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 | v8 | 7;
    uint64_t v179 = sub_1C9BEC928();
    uint64_t v195 = *(void *)(v179 - 8);
    uint64_t v178 = v195;
    int v10 = *(_DWORD *)(v195 + 80);
    uint64_t v11 = sub_1C9BEC8F8();
    uint64_t v12 = v9;
    uint64_t v183 = v11;
    uint64_t v13 = v11;
    uint64_t v14 = v8;
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t v182 = v15;
    uint64_t v16 = (v193 | (v10 | *(_DWORD *)(v15 + 80))) & 0xF8 | v9;
    uint64_t v203 = v202 + v16;
    uint64_t v17 = v203 & ~v16;
    unint64_t v18 = *(void *)(v187 + 64);
    unint64_t v181 = v18 + 7;
    if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
      unint64_t v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v18 <= *(void *)(v200 + 64)) {
      unint64_t v18 = *(void *)(v200 + 64);
    }
    uint64_t v199 = *(void *)(v197 + 64) + v8;
    uint64_t v173 = v7;
    int v19 = *(_DWORD *)(v7 + 84);
    size_t v20 = *(void *)(v7 + 64);
    size_t v172 = v20;
    if (!v19) {
      ++v20;
    }
    size_t __n = v20;
    size_t v194 = v20 + 7;
    uint64_t v180 = v199 & ~v8;
    unint64_t v21 = (v20 + 7 + v180) & 0xFFFFFFFFFFFFFFF8;
    size_t v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    if (v18 <= v22) {
      unint64_t v18 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    }
    unint64_t v23 = v21 + 31;
    if (v18 <= (((((v23 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v18 = (((((v23 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    uint64_t v176 = *(void *)(v195 + 64);
    uint64_t v177 = v9 + 16;
    unint64_t v24 = (v9 + 16 + ((v176 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9;
    uint64_t v25 = *(unsigned int *)(v197 + 84);
    unsigned int v174 = *(_DWORD *)(v7 + 84);
    BOOL v26 = v19 != 0;
    unsigned int v27 = v19 - 1;
    if (v26) {
      unsigned int v28 = v27;
    }
    else {
      unsigned int v28 = 0;
    }
    if (v28 <= v25) {
      unsigned int v29 = *(_DWORD *)(v197 + 84);
    }
    else {
      unsigned int v29 = v28;
    }
    if (v29 <= 0x7FFFFFFE) {
      unsigned int v29 = 2147483646;
    }
    unsigned int v196 = v29;
    unint64_t v30 = ((v23 + v24) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v18 <= v30) {
      unint64_t v18 = v30;
    }
    unint64_t v31 = *(void *)(v15 + 64);
    if (v18 > v31) {
      unint64_t v31 = v18;
    }
    if (v31 <= 0x18) {
      uint64_t v32 = 24;
    }
    else {
      uint64_t v32 = v31;
    }
    if (((((v32 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 <= v206) {
      unint64_t v33 = v206;
    }
    else {
      unint64_t v33 = ((((v32 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    uint64_t v205 = *(void *)(a3 + 24);
    uint64_t v201 = *(void *)(v205 - 8);
    if (*(void *)(v201 + 64) <= 9uLL) {
      uint64_t v34 = 9;
    }
    else {
      uint64_t v34 = *(void *)(v201 + 64);
    }
    char v35 = 8 * v34;
    if (v34 > 3) {
      goto LABEL_37;
    }
    unsigned int v36 = ((1 << v35) + 1) >> v35;
    uint64_t v37 = 2;
    if (v36 > 0xFFFD) {
      uint64_t v37 = 4;
    }
    if (v36 <= 0xFD) {
LABEL_37:
    }
      uint64_t v37 = 1;
    int v3 = a1;
    unint64_t v38 = v37 + v34;
    if (v38 <= v33) {
      unint64_t v38 = v33;
    }
    if (v38 <= 9) {
      unint64_t v38 = 9;
    }
    unsigned int v39 = a1[v38];
    unsigned int v40 = v39 - 7;
    unsigned int v41 = a2;
    if (v39 >= 7)
    {
      if (v34 > 3) {
        goto LABEL_47;
      }
      unsigned int v42 = ((1 << v35) + 1) >> v35;
      uint64_t v43 = 2;
      if (v42 > 0xFFFD) {
        uint64_t v43 = 4;
      }
      if (v42 <= 0xFD) {
LABEL_47:
      }
        uint64_t v43 = 1;
      unint64_t v44 = v43 + v34;
      if (v44 <= v33) {
        unint64_t v44 = v33;
      }
      if (v44 <= 9) {
        LODWORD(v44) = 9;
      }
      if (v44 <= 3) {
        uint64_t v45 = v44;
      }
      else {
        uint64_t v45 = 4;
      }
      switch(v45)
      {
        case 1:
          int v46 = *a1;
          goto LABEL_60;
        case 2:
          int v46 = *(unsigned __int16 *)a1;
          goto LABEL_60;
        case 3:
          int v46 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_60;
        case 4:
          int v46 = *(_DWORD *)a1;
LABEL_60:
          if (v44 < 4) {
            v46 |= v40 << (8 * v44);
          }
          unsigned int v39 = v46 + 7;
          break;
        default:
          break;
      }
    }
    size_t v207 = v32 + 1;
    uint64_t v47 = ~v16;
    uint64_t v198 = ~v14;
    uint64_t v175 = ~v12;
    switch(v39)
    {
      case 0u:
      case 1u:
      case 3u:
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v208 + 8))(a1, v209);
        goto LABEL_132;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v191 + 8))(a1, v192);
        unint64_t v48 = (unint64_t)&a1[v203] & v47;
        unsigned int v49 = *(unsigned __int8 *)(v48 + v32);
        unsigned int v50 = v49 - 10;
        if (v49 >= 0xA)
        {
          if (v32 <= 3) {
            uint64_t v51 = v32;
          }
          else {
            uint64_t v51 = 4;
          }
          switch(v51)
          {
            case 1:
              int v52 = *(unsigned __int8 *)v48;
              goto LABEL_86;
            case 2:
              int v52 = *(unsigned __int16 *)v48;
              goto LABEL_86;
            case 3:
              int v52 = *(unsigned __int16 *)v48 | (*(unsigned __int8 *)(((unint64_t)&a1[v203] & v47) + 2) << 16);
              goto LABEL_86;
            case 4:
              int v52 = *(_DWORD *)v48;
LABEL_86:
              if (v32 < 4) {
                unsigned int v49 = (v52 | (v50 << (8 * v32))) + 10;
              }
              else {
                unsigned int v49 = v52 + 10;
              }
              break;
            default:
              goto LABEL_89;
          }
        }
        break;
      case 5u:
        if (v34 > 3) {
          goto LABEL_72;
        }
        unsigned int v54 = ((1 << v35) + 1) >> v35;
        if (v54 > 0xFFFD)
        {
          unsigned int v53 = *(_DWORD *)&a1[v34];
        }
        else if (v54 <= 0xFD)
        {
LABEL_72:
          unsigned int v53 = a1[v34];
        }
        else
        {
          unsigned int v53 = *(unsigned __int16 *)&a1[v34];
        }
        unsigned int v55 = v53 - 2;
        if (v53 >= 2)
        {
          if (v34 <= 3) {
            uint64_t v56 = v34;
          }
          else {
            uint64_t v56 = 4;
          }
          switch(v56)
          {
            case 1:
              int v57 = *a1;
              goto LABEL_94;
            case 2:
              int v57 = *(unsigned __int16 *)a1;
              goto LABEL_94;
            case 3:
              int v57 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_94;
            case 4:
              int v57 = *(_DWORD *)a1;
LABEL_94:
              if (v34 < 4) {
                v57 |= v55 << v35;
              }
              unsigned int v53 = v57 + 2;
              break;
            default:
              break;
          }
        }
        if (v53 == 1)
        {
LABEL_100:
        }
        else if (!v53)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v201 + 8))(a1, v205);
        }
        goto LABEL_132;
      case 6u:
        goto LABEL_100;
      default:
        goto LABEL_132;
    }
LABEL_89:
    switch(v49)
    {
      case 0u:
        uint64_t v59 = v187;
        uint64_t v58 = v188;
        goto LABEL_117;
      case 1u:
        (*(void (**)(unint64_t, uint64_t))(v187 + 8))((unint64_t)&a1[v203] & v47, v188);
        swift_release();
        goto LABEL_130;
      case 2u:
        swift_bridgeObjectRelease();
        goto LABEL_112;
      case 3u:
        swift_unknownObjectRelease();
        goto LABEL_130;
      case 4u:
        uint64_t v59 = v184;
        uint64_t v58 = v185;
        goto LABEL_117;
      case 5u:
        unsigned int v60 = *(void **)v48;
        goto LABEL_129;
      case 6u:
        (*(void (**)(unint64_t, uint64_t))(v212 + 8))((unint64_t)&a1[v203] & v47, v189);
        uint64_t v170 = (v199 + v48) & v198;
        if (!__swift_getEnumTagSinglePayload(v170, 1, v190)) {
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v170, v190);
        }
        goto LABEL_112;
      case 7u:
        (*(void (**)(unint64_t, uint64_t))(v212 + 8))((unint64_t)&a1[v203] & v47, v189);
        uint64_t v171 = (v199 + v48) & v198;
        if (!__swift_getEnumTagSinglePayload(v171, 1, v190)) {
          (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v171, v190);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_112:
        swift_bridgeObjectRelease();
        goto LABEL_130;
      case 8u:
        (*(void (**)(unint64_t, uint64_t))(v178 + 8))((unint64_t)&a1[v203] & v47, v179);
        unint64_t v61 = ((v48 | 7) + v176) & 0xFFFFFFFFFFFFFFF8;
        swift_bridgeObjectRelease();
        unint64_t v62 = (v177 + v61) & v175;
        if (v25 == v196)
        {
          uint64_t v63 = (v177 + v61) & v175;
          int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v63, v25, v189);
          unint64_t v62 = v63;
          unint64_t v48 = (unint64_t)&a1[v203] & v47;
          if (EnumTagSinglePayload) {
            goto LABEL_128;
          }
          uint64_t v169 = (v199 + v62) & v198;
          goto LABEL_125;
        }
        uint64_t v65 = (v199 + v62) & v198;
        uint64_t v169 = v65;
        if (v28 == v196)
        {
          unint64_t v48 = (unint64_t)&a1[v203] & v47;
          if (v174 >= 2)
          {
            unint64_t v167 = v62;
            unsigned int v66 = __swift_getEnumTagSinglePayload(v65, v174, v190);
            unint64_t v62 = v167;
            if (v66 >= 2) {
              goto LABEL_128;
            }
          }
          goto LABEL_125;
        }
        unint64_t v67 = *(void *)(((v194 + v65) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v67 >= 0xFFFFFFFF) {
          LODWORD(v67) = -1;
        }
        unint64_t v48 = (unint64_t)&a1[v203] & v47;
        if ((v67 + 1) < 2)
        {
LABEL_125:
          unint64_t v168 = v62;
          (*(void (**)(unint64_t, uint64_t))(v212 + 8))(v62, v189);
          if (!__swift_getEnumTagSinglePayload(v169, 1, v190)) {
            (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v169, v190);
          }
          swift_bridgeObjectRelease();
          unint64_t v62 = v168;
        }
LABEL_128:
        unsigned int v60 = *(void **)(((v62 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
LABEL_129:

LABEL_130:
        swift_bridgeObjectRelease();
        unint64_t v68 = ((((v48 | 7) + v207) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
        unsigned int v41 = a2;
        if (*(void *)(v68 + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v68);
        }
LABEL_132:
        if (v34 > 3) {
          goto LABEL_136;
        }
        unsigned int v69 = ((1 << v35) + 1) >> v35;
        uint64_t v70 = 2;
        if (v69 > 0xFFFD) {
          uint64_t v70 = 4;
        }
        if (v69 <= 0xFD) {
LABEL_136:
        }
          uint64_t v70 = 1;
        unint64_t v71 = v70 + v34;
        if (v71 <= v33) {
          unint64_t v71 = v33;
        }
        if (v71 <= 9) {
          unint64_t v71 = 9;
        }
        unsigned int v72 = v41[v71];
        unsigned int v73 = v72 - 7;
        if (v72 >= 7)
        {
          if (v34 > 3) {
            goto LABEL_146;
          }
          unsigned int v74 = ((1 << v35) + 1) >> v35;
          uint64_t v75 = 2;
          if (v74 > 0xFFFD) {
            uint64_t v75 = 4;
          }
          if (v74 <= 0xFD) {
LABEL_146:
          }
            uint64_t v75 = 1;
          unint64_t v76 = v75 + v34;
          if (v76 <= v33) {
            unint64_t v76 = v33;
          }
          if (v76 <= 9) {
            LODWORD(v76) = 9;
          }
          if (v76 <= 3) {
            uint64_t v77 = v76;
          }
          else {
            uint64_t v77 = 4;
          }
          switch(v77)
          {
            case 1:
              int v78 = *v41;
              goto LABEL_159;
            case 2:
              int v78 = *(unsigned __int16 *)v41;
              goto LABEL_159;
            case 3:
              int v78 = *(unsigned __int16 *)v41 | (v41[2] << 16);
              goto LABEL_159;
            case 4:
              int v78 = *(_DWORD *)v41;
LABEL_159:
              if (v76 < 4) {
                unsigned int v72 = (v78 | (v73 << (8 * v76))) + 7;
              }
              else {
                unsigned int v72 = v78 + 7;
              }
              break;
            default:
              goto LABEL_162;
          }
        }
        break;
      case 9u:
        uint64_t v59 = v182;
        uint64_t v58 = v183;
LABEL_117:
        (*(void (**)(unint64_t, uint64_t))(v59 + 8))((unint64_t)&a1[v203] & v47, v58);
        goto LABEL_130;
      default:
        goto LABEL_130;
    }
LABEL_162:
    switch(v72)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v208 + 16))(a1, v41, v209);
        if (v34 > 3) {
          goto LABEL_167;
        }
        unsigned int v79 = ((1 << v35) + 1) >> v35;
        uint64_t v80 = 2;
        if (v79 > 0xFFFD) {
          uint64_t v80 = 4;
        }
        if (v79 <= 0xFD) {
LABEL_167:
        }
          uint64_t v80 = 1;
        unint64_t v81 = v80 + v34;
        if (v81 <= v33) {
          unint64_t v81 = v33;
        }
        if (v81 <= 9) {
          unint64_t v81 = 9;
        }
        a1[v81] = 0;
        return v3;
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v208 + 16))(a1, v41, v209);
        if (v34 > 3) {
          goto LABEL_187;
        }
        unsigned int v85 = ((1 << v35) + 1) >> v35;
        uint64_t v86 = 2;
        if (v85 > 0xFFFD) {
          uint64_t v86 = 4;
        }
        if (v85 <= 0xFD) {
LABEL_187:
        }
          uint64_t v86 = 1;
        unint64_t v87 = v86 + v34;
        if (v87 <= v33) {
          unint64_t v87 = v33;
        }
        if (v87 <= 9) {
          unint64_t v87 = 9;
        }
        char v88 = 1;
        goto LABEL_333;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v191 + 16))(a1, v41, v192);
        uint64_t v89 = (void *)((unint64_t)&a1[v203] & v47);
        uint64_t v90 = (unsigned __int8 *)((unint64_t)&v41[v203] & v47);
        unsigned int v91 = v90[v32];
        unsigned int v92 = v91 - 10;
        if (v91 < 0xA)
        {
          unint64_t v94 = (unint64_t)v89;
        }
        else
        {
          if (v32 <= 3) {
            uint64_t v93 = v32;
          }
          else {
            uint64_t v93 = 4;
          }
          unint64_t v94 = (unint64_t)v89;
          switch(v93)
          {
            case 1:
              int v95 = *v90;
              goto LABEL_245;
            case 2:
              int v95 = *(unsigned __int16 *)v90;
              goto LABEL_245;
            case 3:
              int v95 = *(unsigned __int16 *)v90 | (v90[2] << 16);
              goto LABEL_245;
            case 4:
              int v95 = *(_DWORD *)v90;
LABEL_245:
              if (v32 < 4) {
                unsigned int v91 = (v95 | (v92 << (8 * v32))) + 10;
              }
              else {
                unsigned int v91 = v95 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v91)
        {
          case 0u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v187 + 16))(v94, v90, v188);
            *(unsigned char *)(v94 + v32) = 0;
            goto LABEL_320;
          case 1u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v187 + 16))(v94, v90, v188);
            *(void *)((v181 + v94) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v90[v181] & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v94 + v32) = 1;
            sub_1C9BEC838();
          case 2u:
            *(void *)unint64_t v94 = *(void *)v90;
            *(void *)(v94 + 8) = *((void *)v90 + 1);
            *(void *)(v94 + 16) = *((void *)v90 + 2);
            *(unsigned char *)(v94 + v32) = 2;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_320;
          case 3u:
            *(void *)unint64_t v94 = *(void *)v90;
            *(unsigned char *)(v94 + v32) = 3;
            swift_unknownObjectRetain();
            goto LABEL_320;
          case 4u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v184 + 16))(v94, v90, v185);
            char v117 = 4;
            goto LABEL_293;
          case 5u:
            unint64_t v118 = *(void **)v90;
            *(void *)unint64_t v94 = *(void *)v90;
            *(unsigned char *)(v94 + v32) = 5;
            goto LABEL_319;
          case 6u:
            uint64_t v119 = v32;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v212 + 16))(v94, v90, v189);
            unint64_t v120 = (void *)((v199 + v94) & v198);
            unint64_t v121 = (const void *)((unint64_t)&v90[v199] & v198);
            if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v190))
            {
              memcpy(v120, v121, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v173 + 16))(v120, v121, v190);
              __swift_storeEnumTagSinglePayload((uint64_t)v120, 0, 1, v190);
            }
            unint64_t v130 = (void *)(((unint64_t)v120 + v194) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v131 = (void *)(((unint64_t)v121 + v194) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v130 = *v131;
            v130[1] = v131[1];
            unint64_t v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v133 = ((unint64_t)v131 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v134 = *(_DWORD *)v133;
            *(unsigned char *)(v132 + 4) = *(unsigned char *)(v133 + 4);
            *(_DWORD *)unint64_t v132 = v134;
            *(unsigned char *)(v94 + v119) = 6;
            goto LABEL_309;
          case 7u:
            uint64_t v122 = v32;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v212 + 16))(v94, v90, v189);
            size_t v123 = (void *)((v199 + v94) & v198);
            unint64_t v124 = (const void *)((unint64_t)&v90[v199] & v198);
            if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, v190))
            {
              memcpy(v123, v124, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v173 + 16))(v123, v124, v190);
              __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v190);
            }
            uint64_t v135 = (void *)(((unint64_t)v123 + v194) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v136 = (void *)(((unint64_t)v124 + v194) & 0xFFFFFFFFFFFFFFF8);
            void *v135 = *v136;
            v135[1] = v136[1];
            unint64_t v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v138 = ((unint64_t)v136 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v139 = *(_DWORD *)v138;
            *(unsigned char *)(v137 + 4) = *(unsigned char *)(v138 + 4);
            *(_DWORD *)unint64_t v137 = v139;
            uint64_t v140 = (void *)(((v94 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            id v141 = (void *)((((unint64_t)v90 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v140 = *v141;
            v140[1] = v141[1];
            size_t v142 = (void *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v143 = (void *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8);
            *size_t v142 = *v143;
            v142[1] = v143[1];
            uint64_t v144 = (void *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v145 = (void *)(((unint64_t)v143 + 23) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v144 = *v145;
            v144[1] = v145[1];
            *(unsigned char *)(v94 + v122) = 7;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_309:
            swift_bridgeObjectRetain();
            int v3 = a1;
            goto LABEL_320;
          case 8u:
            uint64_t v211 = v32;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v178 + 16))(v94, v90, v179);
            int v125 = (void *)(((v94 | 7) + v176) & 0xFFFFFFFFFFFFFFF8);
            id v126 = (void *)((((unint64_t)v90 | 7) + v176) & 0xFFFFFFFFFFFFFFF8);
            *int v125 = *v126;
            v125[1] = v126[1];
            unint64_t v214 = ((unint64_t)v125 + v177) & v175;
            uint64_t v127 = ((unint64_t)v126 + v177) & v175;
            swift_bridgeObjectRetain();
            if (v25 == v196)
            {
              unint64_t v128 = v214;
              if (!__swift_getEnumTagSinglePayload(v127, v25, v189))
              {
                unint64_t v129 = (const void *)((v199 + v127) & v198);
                goto LABEL_313;
              }
            }
            else
            {
              unint64_t v129 = (const void *)((v199 + v127) & v198);
              if (v28 == v196)
              {
                unint64_t v128 = v214;
                if (v174 < 2 || __swift_getEnumTagSinglePayload((v199 + v127) & v198, v174, v190) < 2)
                {
LABEL_313:
                  (*(void (**)(unint64_t, uint64_t, uint64_t))(v212 + 16))(v128, v127, v189);
                  uint64_t v147 = (void *)((v199 + v128) & v198);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v190))
                  {
                    memcpy(v147, v129, __n);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v173 + 16))(v147, v129, v190);
                    __swift_storeEnumTagSinglePayload((uint64_t)v147, 0, 1, v190);
                  }
                  uint64_t v148 = (void *)(((unint64_t)v147 + v194) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v149 = (void *)(((unint64_t)v129 + v194) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v148 = *v149;
                  v148[1] = v149[1];
                  unint64_t v150 = ((unint64_t)v148 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v151 = ((unint64_t)v149 + 19) & 0xFFFFFFFFFFFFFFF8;
                  int v152 = *(_DWORD *)v151;
                  *(unsigned char *)(v150 + 4) = *(unsigned char *)(v151 + 4);
                  *(_DWORD *)unint64_t v150 = v152;
                  swift_bridgeObjectRetain();
                  size_t v153 = v172;
                  unint64_t v128 = v214;
                  if (!v174) {
                    goto LABEL_317;
                  }
LABEL_318:
                  unint64_t v154 = (((v180 + v153 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  int v155 = (void *)(((v128 | 7) + v154) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v118 = *(void **)(((v127 | 7) + v154) & 0xFFFFFFFFFFFFFFF8);
                  void *v155 = v118;
                  *(unsigned char *)(v94 + v211) = 8;
LABEL_319:
                  id v156 = v118;
LABEL_320:
                  uint64_t v157 = (void *)((((unint64_t)v90 | 7) + v207) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v158 = (void *)(((v94 | 7) + v207) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v158 = *v157;
                  unint64_t v159 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v160 = ((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v161 = *(void *)(v160 + 24);
                  swift_bridgeObjectRetain();
                  if (v161 < 0xFFFFFFFF)
                  {
                    long long v162 = *(_OWORD *)v160;
                    long long v163 = *(_OWORD *)(v160 + 16);
                    *(void *)(v159 + 32) = *(void *)(v160 + 32);
                    *(_OWORD *)unint64_t v159 = v162;
                    *(_OWORD *)(v159 + 16) = v163;
                  }
                  else
                  {
                    *(void *)(v159 + 24) = v161;
                    *(void *)(v159 + 32) = *(void *)(v160 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v161 - 8))(v159, v160, v161);
                  }
                  *(unsigned char *)(v159 + 40) = *(unsigned char *)(v160 + 40);
                  if (v34 > 3) {
                    goto LABEL_327;
                  }
                  unsigned int v164 = ((1 << v35) + 1) >> v35;
                  uint64_t v165 = 2;
                  if (v164 > 0xFFFD) {
                    uint64_t v165 = 4;
                  }
                  if (v164 <= 0xFD) {
LABEL_327:
                  }
                    uint64_t v165 = 1;
                  unint64_t v87 = v165 + v34;
                  if (v87 <= v33) {
                    unint64_t v87 = v33;
                  }
                  if (v87 <= 9) {
                    unint64_t v87 = 9;
                  }
                  char v88 = 2;
                  goto LABEL_333;
                }
              }
              else
              {
                unint64_t v146 = *(void *)((((unint64_t)v129 + v194) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v146 >= 0xFFFFFFFF) {
                  LODWORD(v146) = -1;
                }
                unint64_t v128 = v214;
                if ((v146 + 1) < 2) {
                  goto LABEL_313;
                }
              }
            }
            memcpy((void *)v128, (const void *)v127, v22);
LABEL_317:
            size_t v153 = __n;
            goto LABEL_318;
          case 9u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v182 + 16))(v94, v90, v183);
            char v117 = 9;
LABEL_293:
            *(unsigned char *)(v94 + v32) = v117;
            goto LABEL_320;
          default:
            memcpy((void *)v94, v90, v207);
            goto LABEL_320;
        }
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v208 + 16))(a1, v41, v209);
        if (v34 > 3) {
          goto LABEL_203;
        }
        unsigned int v96 = ((1 << v35) + 1) >> v35;
        uint64_t v97 = 2;
        if (v96 > 0xFFFD) {
          uint64_t v97 = 4;
        }
        if (v96 <= 0xFD) {
LABEL_203:
        }
          uint64_t v97 = 1;
        unint64_t v87 = v97 + v34;
        if (v87 <= v33) {
          unint64_t v87 = v33;
        }
        if (v87 <= 9) {
          unint64_t v87 = 9;
        }
        char v88 = 3;
        goto LABEL_333;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v208 + 16))(a1, v41, v209);
        if (v34 > 3) {
          goto LABEL_213;
        }
        unsigned int v98 = ((1 << v35) + 1) >> v35;
        uint64_t v99 = 2;
        if (v98 > 0xFFFD) {
          uint64_t v99 = 4;
        }
        if (v98 <= 0xFD) {
LABEL_213:
        }
          uint64_t v99 = 1;
        unint64_t v87 = v99 + v34;
        if (v87 <= v33) {
          unint64_t v87 = v33;
        }
        if (v87 <= 9) {
          unint64_t v87 = 9;
        }
        char v88 = 4;
        goto LABEL_333;
      case 5u:
        if (v34 > 3) {
          goto LABEL_220;
        }
        unsigned int v105 = ((1 << v35) + 1) >> v35;
        if (v105 > 0xFFFD)
        {
          unsigned int v100 = *(_DWORD *)&v41[v34];
        }
        else if (v105 <= 0xFD)
        {
LABEL_220:
          unsigned int v100 = v41[v34];
        }
        else
        {
          unsigned int v100 = *(unsigned __int16 *)&v41[v34];
        }
        unsigned int v106 = v100 - 2;
        if (v100 >= 2)
        {
          if (v34 <= 3) {
            uint64_t v107 = v34;
          }
          else {
            uint64_t v107 = 4;
          }
          switch(v107)
          {
            case 1:
              int v108 = *v41;
              goto LABEL_253;
            case 2:
              int v108 = *(unsigned __int16 *)v41;
              goto LABEL_253;
            case 3:
              int v108 = *(unsigned __int16 *)v41 | (v41[2] << 16);
              goto LABEL_253;
            case 4:
              int v108 = *(_DWORD *)v41;
LABEL_253:
              if (v34 < 4) {
                v108 |= v106 << v35;
              }
              unsigned int v100 = v108 + 2;
              break;
            default:
              break;
          }
        }
        if (v100 == 1)
        {
          uint64_t v110 = *(void *)v41;
          id v111 = *(id *)v41;
          *(void *)a1 = v110;
          a1[8] = v41[8];
          if (v34 <= 3)
          {
            unsigned int v112 = ((1 << v35) + 1) >> v35;
            if (v112 > 0xFFFD)
            {
              *(_DWORD *)&a1[v34] = 1;
              goto LABEL_273;
            }
            if (v112 > 0xFD)
            {
              *(_WORD *)&a1[v34] = 1;
              goto LABEL_273;
            }
          }
          a1[v34] = 1;
        }
        else
        {
          if (!v100)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v201 + 16))(a1, v41, v205);
            if (v34 > 3)
            {
LABEL_261:
              a1[v34] = 0;
              goto LABEL_272;
            }
            unsigned int v109 = ((1 << v35) + 1) >> v35;
            if (v109 > 0xFFFD)
            {
              *(_DWORD *)&a1[v34] = 0;
            }
            else
            {
              if (v109 <= 0xFD) {
                goto LABEL_261;
              }
              *(_WORD *)&a1[v34] = 0;
            }
LABEL_273:
            unsigned int v115 = ((1 << v35) + 1) >> v35;
            uint64_t v116 = 2;
            if (v115 > 0xFFFD) {
              uint64_t v116 = 4;
            }
            if (v115 > 0xFD)
            {
LABEL_277:
              unint64_t v87 = v116 + v34;
              if (v87 <= v33) {
                unint64_t v87 = v33;
              }
              if (v87 <= 9) {
                unint64_t v87 = 9;
              }
              char v88 = 5;
LABEL_333:
              v3[v87] = v88;
              return v3;
            }
LABEL_276:
            uint64_t v116 = 1;
            goto LABEL_277;
          }
          if (v34 > 3) {
            goto LABEL_270;
          }
          unsigned int v113 = ((1 << v35) + 1) >> v35;
          uint64_t v114 = 2;
          if (v113 > 0xFFFD) {
            uint64_t v114 = 4;
          }
          if (v113 <= 0xFD) {
LABEL_270:
          }
            uint64_t v114 = 1;
          memcpy(a1, v41, v114 + v34);
        }
LABEL_272:
        if (v34 > 3) {
          goto LABEL_276;
        }
        goto LABEL_273;
      case 6u:
        id v101 = *(id *)v41;
        id v102 = *(id *)v41;
        *(void *)a1 = v101;
        a1[8] = v41[8];
        if (v34 > 3) {
          goto LABEL_225;
        }
        unsigned int v103 = ((1 << v35) + 1) >> v35;
        uint64_t v104 = 2;
        if (v103 > 0xFFFD) {
          uint64_t v104 = 4;
        }
        if (v103 <= 0xFD) {
LABEL_225:
        }
          uint64_t v104 = 1;
        unint64_t v87 = v104 + v34;
        if (v87 <= v33) {
          unint64_t v87 = v33;
        }
        if (v87 <= 9) {
          unint64_t v87 = 9;
        }
        char v88 = 6;
        goto LABEL_333;
      default:
        if (v34 > 3) {
          goto LABEL_177;
        }
        unsigned int v82 = ((1 << v35) + 1) >> v35;
        uint64_t v83 = 2;
        if (v82 > 0xFFFD) {
          uint64_t v83 = 4;
        }
        if (v82 <= 0xFD) {
LABEL_177:
        }
          uint64_t v83 = 1;
        unint64_t v84 = v83 + v34;
        if (v84 <= v33) {
          unint64_t v84 = v33;
        }
        if (v84 <= 9) {
          unint64_t v84 = 9;
        }
        memcpy(a1, v41, v84 + 1);
        return v3;
    }
  }
  return v3;
}

unsigned char *sub_1C9978DF8(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v167 = *(void *)(a3 + 16);
  uint64_t v165 = *(void *)(v167 - 8);
  unint64_t v180 = *(void *)(v165 + 64);
  uint64_t v3 = sub_1C9BEAB08();
  uint64_t v163 = *(void *)(v3 - 8);
  uint64_t v164 = v3;
  uint64_t v178 = *(void *)(v163 + 64);
  uint64_t v160 = sub_1C9BEC028();
  uint64_t v172 = *(void *)(v160 - 8);
  uint64_t v159 = v172;
  int v4 = *(_DWORD *)(v172 + 80);
  uint64_t v158 = sub_1C9BEAC48();
  uint64_t v176 = *(void *)(v158 - 8);
  uint64_t v157 = v176;
  int v168 = *(_DWORD *)(v176 + 80) | v4;
  uint64_t v162 = sub_1C9BEAF18();
  uint64_t v174 = *(void *)(v162 - 8);
  uint64_t v185 = v174;
  int v5 = *(_DWORD *)(v174 + 80) & 0xF8;
  uint64_t v161 = sub_1C9BEAE48();
  uint64_t v6 = *(void *)(v161 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v155 = sub_1C9BEC928();
  uint64_t v170 = *(void *)(v155 - 8);
  uint64_t v154 = v170;
  int v9 = *(_DWORD *)(v170 + 80);
  uint64_t v156 = sub_1C9BEC8F8();
  uint64_t v10 = *(void *)(v156 - 8);
  uint64_t v11 = v172;
  uint64_t v173 = v10;
  uint64_t v12 = (v168 | (v9 | *(_DWORD *)(v10 + 80))) & 0xF8 | v8;
  uint64_t v179 = v178 + v12;
  uint64_t v13 = v179 & ~v12;
  unint64_t v14 = *(void *)(v11 + 64);
  unint64_t v169 = v14 + 7;
  if (((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v14) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v176 + 64)) {
    unint64_t v14 = *(void *)(v176 + 64);
  }
  if (v14 <= 0x18) {
    unint64_t v15 = 24;
  }
  else {
    unint64_t v15 = v14;
  }
  uint64_t v175 = *(void *)(v174 + 64) + v7;
  uint64_t v177 = v7;
  uint64_t v16 = v175 & ~v7;
  uint64_t v151 = v6;
  unsigned int v17 = *(_DWORD *)(v6 + 84);
  size_t v18 = *(void *)(v6 + 64);
  if (v17) {
    size_t v19 = *(void *)(v6 + 64);
  }
  else {
    size_t v19 = v18 + 1;
  }
  unint64_t v20 = (v19 + 7 + v16) & 0xFFFFFFFFFFFFFFF8;
  size_t v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v21 <= v15) {
    unint64_t v22 = v15;
  }
  else {
    unint64_t v22 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v23 = v20 + 31;
  unint64_t v24 = ((((v23 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v24 + 16 > v22) {
    unint64_t v22 = v24 + 16;
  }
  uint64_t v25 = *(void *)(v170 + 64);
  uint64_t v153 = v8 + 16;
  uint64_t v171 = v5 | v7 | 7;
  uint64_t v26 = *(unsigned int *)(v185 + 84);
  if (v17) {
    unsigned int v27 = v17 - 1;
  }
  else {
    unsigned int v27 = 0;
  }
  if (v27 <= v26) {
    unsigned int v28 = *(_DWORD *)(v185 + 84);
  }
  else {
    unsigned int v28 = v27;
  }
  if (v28 <= 0x7FFFFFFE) {
    unsigned int v28 = 2147483646;
  }
  unsigned int v152 = v28;
  unint64_t v29 = (v23 + ((v8 + 16 + ((v25 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = v29 + 8;
  if (v29 + 8 <= v22) {
    unint64_t v31 = v22;
  }
  else {
    unint64_t v31 = v29 + 8;
  }
  unint64_t v32 = *(void *)(v10 + 64);
  if (v32 <= v31) {
    unint64_t v33 = v31;
  }
  else {
    unint64_t v33 = *(void *)(v10 + 64);
  }
  if (((((v33 + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 <= v180) {
    unint64_t v34 = v180;
  }
  else {
    unint64_t v34 = ((((v33 + v13 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  uint64_t v35 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v35 + 64) <= 9uLL) {
    uint64_t v36 = 9;
  }
  else {
    uint64_t v36 = *(void *)(v35 + 64);
  }
  char v37 = 8 * v36;
  if (v36 > 3) {
    goto LABEL_40;
  }
  unsigned int v38 = ((1 << v37) + 1) >> v37;
  uint64_t v39 = 2;
  if (v38 > 0xFFFD) {
    uint64_t v39 = 4;
  }
  if (v38 <= 0xFD) {
LABEL_40:
  }
    uint64_t v39 = 1;
  unint64_t v40 = v39 + v36;
  if (v40 <= v34) {
    unint64_t v40 = v34;
  }
  if (v40 <= 9) {
    unint64_t v40 = 9;
  }
  unsigned int v41 = a2[v40];
  unsigned int v42 = v41 - 7;
  uint64_t v43 = a1;
  if (v41 >= 7)
  {
    if (v36 > 3) {
      goto LABEL_50;
    }
    unsigned int v44 = ((1 << v37) + 1) >> v37;
    uint64_t v45 = 2;
    if (v44 > 0xFFFD) {
      uint64_t v45 = 4;
    }
    if (v44 <= 0xFD) {
LABEL_50:
    }
      uint64_t v45 = 1;
    unint64_t v46 = v45 + v36;
    if (v46 <= v34) {
      unint64_t v46 = v34;
    }
    if (v46 <= 9) {
      LODWORD(v46) = 9;
    }
    if (v46 <= 3) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 4;
    }
    switch(v47)
    {
      case 1:
        int v48 = *a2;
        goto LABEL_63;
      case 2:
        int v48 = *(unsigned __int16 *)a2;
        goto LABEL_63;
      case 3:
        int v48 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_63;
      case 4:
        int v48 = *(_DWORD *)a2;
LABEL_63:
        if (v46 < 4) {
          unsigned int v41 = (v48 | (v42 << (8 * v46))) + 7;
        }
        else {
          unsigned int v41 = v48 + 7;
        }
        break;
      default:
        break;
    }
  }
  switch(v41)
  {
    case 0u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v165 + 32))(a1, a2, v167);
      if (v36 > 3) {
        goto LABEL_71;
      }
      unsigned int v49 = ((1 << v37) + 1) >> v37;
      uint64_t v50 = 2;
      if (v49 > 0xFFFD) {
        uint64_t v50 = 4;
      }
      if (v49 <= 0xFD) {
LABEL_71:
      }
        uint64_t v50 = 1;
      unint64_t v51 = v50 + v36;
      if (v51 <= v34) {
        unint64_t v51 = v34;
      }
      if (v51 <= 9) {
        unint64_t v51 = 9;
      }
      a1[v51] = 0;
      return v43;
    case 1u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v165 + 32))(a1, a2, v167);
      if (v36 > 3) {
        goto LABEL_91;
      }
      unsigned int v55 = ((1 << v37) + 1) >> v37;
      uint64_t v56 = 2;
      if (v55 > 0xFFFD) {
        uint64_t v56 = 4;
      }
      if (v55 <= 0xFD) {
LABEL_91:
      }
        uint64_t v56 = 1;
      unint64_t v57 = v56 + v36;
      if (v57 <= v34) {
        unint64_t v57 = v34;
      }
      if (v57 <= 9) {
        unint64_t v57 = 9;
      }
      char v58 = 1;
      goto LABEL_244;
    case 2u:
      uint64_t v147 = v16;
      unsigned int v146 = v17;
      size_t v145 = v18;
      unint64_t v148 = v24 + 16;
      unint64_t v149 = v15;
      size_t __n = v19;
      size_t v166 = v19 + 7;
      uint64_t v59 = ~v12;
      unint64_t v183 = v33;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v163 + 32))(a1, a2, v164);
      unint64_t v60 = (unint64_t)&a1[v179] & v59;
      unint64_t v61 = (unsigned __int8 *)((unint64_t)&a2[v179] & v59);
      unsigned int v62 = v61[v183];
      unsigned int v63 = v62 - 10;
      unint64_t v181 = v34;
      if (v62 >= 0xA)
      {
        if (v183 <= 3) {
          uint64_t v64 = v183;
        }
        else {
          uint64_t v64 = 4;
        }
        switch(v64)
        {
          case 1:
            int v65 = *v61;
            goto LABEL_148;
          case 2:
            int v65 = *(unsigned __int16 *)v61;
            goto LABEL_148;
          case 3:
            int v65 = *(unsigned __int16 *)((unint64_t)&a2[v179] & v59) | (*(unsigned __int8 *)(((unint64_t)&a2[v179] & v59)
                                                                                                 + 2) << 16);
            goto LABEL_148;
          case 4:
            int v65 = *(_DWORD *)v61;
LABEL_148:
            if (v183 < 4) {
              unsigned int v62 = (v65 | (v63 << (8 * v183))) + 10;
            }
            else {
              unsigned int v62 = v65 + 10;
            }
            break;
          default:
            break;
        }
      }
      size_t v77 = v183 + 1;
      uint64_t v78 = ~v177;
      switch(v62)
      {
        case 0u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v159 + 32))(v60, v61, v160);
          size_t v77 = v183 + 1;
          unint64_t v60 = (unint64_t)&a1[v179] & v59;
          *(unsigned char *)(v60 + v183) = 0;
          goto LABEL_198;
        case 1u:
          unsigned int v85 = (_OWORD *)((unint64_t)&a1[v179] & v59);
          unint64_t v86 = v183;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v159 + 32))(v60, v61, v160);
          size_t v77 = v183 + 1;
          unint64_t v60 = (unint64_t)v85;
          *(void *)(((unint64_t)v85 + v169) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v61[v169] & 0xFFFFFFFFFFFFFFF8);
          char v87 = 1;
          goto LABEL_197;
        case 2u:
          long long v88 = *(_OWORD *)v61;
          *(void *)(((unint64_t)&a1[v179] & v59) + 0x10) = *(void *)(((unint64_t)&a2[v179] & v59)
                                                                              + 0x10);
          *(_OWORD *)unint64_t v60 = v88;
          char v89 = 2;
          goto LABEL_191;
        case 3u:
          *(void *)unint64_t v60 = *(void *)v61;
          char v89 = 3;
          goto LABEL_191;
        case 4u:
          unsigned int v85 = (_OWORD *)((unint64_t)&a1[v179] & v59);
          unint64_t v86 = v183;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v157 + 32))(v60, v61, v158);
          size_t v77 = v183 + 1;
          unint64_t v60 = (unint64_t)v85;
          char v87 = 4;
          goto LABEL_197;
        case 5u:
          *(void *)unint64_t v60 = *(void *)v61;
          char v89 = 5;
LABEL_191:
          *(unsigned char *)(v60 + v183) = v89;
          goto LABEL_198;
        case 6u:
          size_t v90 = v183 + 1;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v185 + 32))(v60, v61, v162);
          unint64_t v91 = (unint64_t)&a1[v179] & v59;
          unsigned int v92 = (void *)((v175 + v91) & v78);
          uint64_t v93 = (const void *)((unint64_t)&v61[v175] & v78);
          if (__swift_getEnumTagSinglePayload((uint64_t)v93, 1, v161))
          {
            memcpy(v92, v93, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v151 + 32))(v92, v93, v161);
            __swift_storeEnumTagSinglePayload((uint64_t)v92, 0, 1, v161);
          }
          unint64_t v96 = v181;
          unsigned int v106 = (_OWORD *)(((unint64_t)v92 + v166) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v107 = (_OWORD *)(((unint64_t)v93 + v166) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v106 = *v107;
          unint64_t v108 = ((unint64_t)v106 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v109 = ((unint64_t)v107 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v110 = *(_DWORD *)v109;
          *(unsigned char *)(v108 + 4) = *(unsigned char *)(v109 + 4);
          *(_DWORD *)unint64_t v108 = v110;
          char v111 = 6;
          unint64_t v60 = v91;
          goto LABEL_213;
        case 7u:
          size_t v90 = v183 + 1;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v185 + 32))(v60, v61, v162);
          unint64_t v91 = (unint64_t)&a1[v179] & v59;
          unint64_t v94 = (void *)((v175 + v91) & v78);
          int v95 = (const void *)((unint64_t)&v61[v175] & v78);
          if (__swift_getEnumTagSinglePayload((uint64_t)v95, 1, v161))
          {
            memcpy(v94, v95, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v151 + 32))(v94, v95, v161);
            __swift_storeEnumTagSinglePayload((uint64_t)v94, 0, 1, v161);
          }
          unint64_t v96 = v181;
          unsigned int v112 = (_OWORD *)(((unint64_t)v94 + v166) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v113 = (_OWORD *)(((unint64_t)v95 + v166) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v112 = *v113;
          unint64_t v114 = ((unint64_t)v112 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v115 = ((unint64_t)v113 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v116 = *(_DWORD *)v115;
          *(unsigned char *)(v114 + 4) = *(unsigned char *)(v115 + 4);
          *(_DWORD *)unint64_t v114 = v116;
          unint64_t v60 = v91;
          char v117 = (_OWORD *)(((v91 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v118 = (_OWORD *)((((unint64_t)v61 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          *char v117 = *v118;
          uint64_t v119 = (_OWORD *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v120 = (_OWORD *)(((unint64_t)v118 + 23) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v119 = *v120;
          *(_OWORD *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
          char v111 = 7;
LABEL_213:
          *(unsigned char *)(v91 + v183) = v111;
          uint64_t v43 = a1;
          size_t v77 = v90;
          goto LABEL_234;
        case 8u:
          unint64_t v97 = (unint64_t)&a1[v179] & v59;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v154 + 32))(v60, v61, v155);
          unsigned int v98 = (_OWORD *)(((v97 | 7) + v25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v99 = (_OWORD *)((((unint64_t)v61 | 7) + v25) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v98 = *v99;
          unint64_t v100 = ((unint64_t)v98 + v153) & ~v171;
          uint64_t v101 = ((unint64_t)v99 + v153) & ~v171;
          if (v26 != v152)
          {
            if (v27 == v152)
            {
              uint64_t v103 = v162;
              unint64_t v104 = ((unint64_t)v98 + v153) & ~v171;
              if (v146 < 2)
              {
                unsigned int v105 = (const void *)((v175 + v101) & v78);
                goto LABEL_217;
              }
              unsigned int v105 = (const void *)((v175 + v101) & v78);
              if (__swift_getEnumTagSinglePayload((uint64_t)v105, v146, v161) < 2) {
                goto LABEL_217;
              }
            }
            else
            {
              unint64_t v121 = *(void *)(((v166 + ((v175 + v101) & v78)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v121 >= 0xFFFFFFFF) {
                LODWORD(v121) = -1;
              }
              uint64_t v103 = v162;
              unint64_t v104 = v100;
              unsigned int v105 = (const void *)((v175 + v101) & v78);
              if ((v121 + 1) < 2) {
                goto LABEL_217;
              }
            }
LABEL_223:
            memcpy((void *)v104, (const void *)v101, v21);
            unint64_t v96 = v181;
            unint64_t v129 = v149;
            size_t v128 = __n;
            unint64_t v60 = v97;
            uint64_t v130 = v147;
            unint64_t v131 = v148;
            size_t v77 = v183 + 1;
LABEL_224:
            size_t v132 = v128;
            goto LABEL_225;
          }
          uint64_t v102 = v26;
          uint64_t v103 = v162;
          unint64_t v104 = ((unint64_t)v98 + v153) & ~v171;
          if (__swift_getEnumTagSinglePayload(v101, v102, v162)) {
            goto LABEL_223;
          }
          unsigned int v105 = (const void *)((v175 + v101) & v78);
LABEL_217:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v185 + 32))(v104, v101, v103);
          uint64_t v122 = (void *)((v175 + v104) & v78);
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v161))
          {
            memcpy(v122, v105, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v151 + 32))(v122, v105, v161);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v161);
          }
          unint64_t v96 = v181;
          size_t v123 = (_OWORD *)(((unint64_t)v122 + v166) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v124 = (_OWORD *)(((unint64_t)v105 + v166) & 0xFFFFFFFFFFFFFFF8);
          *size_t v123 = *v124;
          unint64_t v125 = ((unint64_t)v124 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v126 = *(_DWORD *)v125;
          unint64_t v127 = ((unint64_t)v123 + 19) & 0xFFFFFFFFFFFFFFF8;
          *(unsigned char *)(v127 + 4) = *(unsigned char *)(v125 + 4);
          *(_DWORD *)unint64_t v127 = v126;
          unint64_t v129 = v149;
          size_t v128 = __n;
          unint64_t v60 = v97;
          uint64_t v130 = v147;
          unint64_t v131 = v148;
          size_t v77 = v183 + 1;
          size_t v132 = v145;
          if (!v146) {
            goto LABEL_224;
          }
LABEL_225:
          uint64_t v133 = v130 + 7;
          unint64_t v134 = (((v133 + v132) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          *(void *)(((v104 | 7) + v134) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v101 | 7) + v134) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v135 = (((v133 + v128) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          if (v135 <= v129) {
            unint64_t v135 = v129;
          }
          if (v131 > v135) {
            unint64_t v135 = v131;
          }
          if (v30 > v135) {
            unint64_t v135 = v30;
          }
          if (v32 > v135) {
            unint64_t v135 = v32;
          }
          *(unsigned char *)(v60 + v135) = 8;
          uint64_t v43 = a1;
LABEL_234:
          uint64_t v136 = (void *)(((v60 | 7) + v77) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v137 = (void *)((((unint64_t)v61 | 7) + v77) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v136 = *v137;
          unint64_t v138 = ((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v139 = ((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v140 = *(_OWORD *)v139;
          long long v141 = *(_OWORD *)(v139 + 16);
          *(void *)(v138 + 32) = *(void *)(v139 + 32);
          *(_OWORD *)unint64_t v138 = v140;
          *(_OWORD *)(v138 + 16) = v141;
          *(unsigned char *)(v138 + 40) = *(unsigned char *)(v139 + 40);
          if (v36 > 3) {
            goto LABEL_238;
          }
          unsigned int v142 = ((1 << (8 * v36)) + 1) >> (8 * v36);
          uint64_t v143 = 2;
          if (v142 > 0xFFFD) {
            uint64_t v143 = 4;
          }
          if (v142 <= 0xFD) {
LABEL_238:
          }
            uint64_t v143 = 1;
          unint64_t v57 = v143 + v36;
          if (v57 <= v96) {
            unint64_t v57 = v96;
          }
          if (v57 <= 9) {
            unint64_t v57 = 9;
          }
          char v58 = 2;
LABEL_244:
          v43[v57] = v58;
          return v43;
        case 9u:
          unsigned int v85 = (_OWORD *)((unint64_t)&a1[v179] & v59);
          unint64_t v86 = v183;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v173 + 32))(v60, v61, v156);
          size_t v77 = v183 + 1;
          unint64_t v60 = (unint64_t)v85;
          char v87 = 9;
LABEL_197:
          *((unsigned char *)v85 + v86) = v87;
          goto LABEL_198;
        default:
          memcpy((void *)v60, v61, v77);
          size_t v77 = v183 + 1;
          unint64_t v60 = (unint64_t)&a1[v179] & v59;
LABEL_198:
          unint64_t v96 = v181;
          goto LABEL_234;
      }
    case 3u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v165 + 32))(a1, a2, v167);
      if (v36 > 3) {
        goto LABEL_107;
      }
      unsigned int v66 = ((1 << v37) + 1) >> v37;
      uint64_t v67 = 2;
      if (v66 > 0xFFFD) {
        uint64_t v67 = 4;
      }
      if (v66 <= 0xFD) {
LABEL_107:
      }
        uint64_t v67 = 1;
      unint64_t v57 = v67 + v36;
      if (v57 <= v34) {
        unint64_t v57 = v34;
      }
      if (v57 <= 9) {
        unint64_t v57 = 9;
      }
      char v58 = 3;
      goto LABEL_244;
    case 4u:
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v165 + 32))(a1, a2, v167);
      if (v36 > 3) {
        goto LABEL_117;
      }
      unsigned int v68 = ((1 << v37) + 1) >> v37;
      uint64_t v69 = 2;
      if (v68 > 0xFFFD) {
        uint64_t v69 = 4;
      }
      if (v68 <= 0xFD) {
LABEL_117:
      }
        uint64_t v69 = 1;
      unint64_t v57 = v69 + v36;
      if (v57 <= v34) {
        unint64_t v57 = v34;
      }
      if (v57 <= 9) {
        unint64_t v57 = 9;
      }
      char v58 = 4;
      goto LABEL_244;
    case 5u:
      if (v36 > 3) {
        goto LABEL_124;
      }
      unsigned int v73 = ((1 << v37) + 1) >> v37;
      if (v73 > 0xFFFD)
      {
        unsigned int v70 = *(_DWORD *)&a2[v36];
      }
      else if (v73 <= 0xFD)
      {
LABEL_124:
        unsigned int v70 = a2[v36];
      }
      else
      {
        unsigned int v70 = *(unsigned __int16 *)&a2[v36];
      }
      unsigned int v74 = v70 - 2;
      if (v70 >= 2)
      {
        if (v36 <= 3) {
          uint64_t v75 = v36;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *a2;
            goto LABEL_156;
          case 2:
            int v76 = *(unsigned __int16 *)a2;
            goto LABEL_156;
          case 3:
            int v76 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_156;
          case 4:
            int v76 = *(_DWORD *)a2;
LABEL_156:
            if (v36 < 4) {
              v76 |= v74 << v37;
            }
            unsigned int v70 = v76 + 2;
            break;
          default:
            break;
        }
      }
      if (v70 == 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        if (v36 <= 3)
        {
          unsigned int v80 = ((1 << v37) + 1) >> v37;
          if (v80 > 0xFFFD)
          {
            *(_DWORD *)&a1[v36] = 1;
            goto LABEL_176;
          }
          if (v80 > 0xFD)
          {
            *(_WORD *)&a1[v36] = 1;
            goto LABEL_176;
          }
        }
        a1[v36] = 1;
      }
      else
      {
        if (!v70)
        {
          (*(void (**)(unsigned char *, unsigned __int8 *))(v35 + 32))(a1, a2);
          if (v36 > 3)
          {
LABEL_164:
            a1[v36] = 0;
            goto LABEL_175;
          }
          unsigned int v79 = ((1 << v37) + 1) >> v37;
          if (v79 > 0xFFFD)
          {
            *(_DWORD *)&a1[v36] = 0;
          }
          else
          {
            if (v79 <= 0xFD) {
              goto LABEL_164;
            }
            *(_WORD *)&a1[v36] = 0;
          }
LABEL_176:
          unsigned int v83 = ((1 << v37) + 1) >> v37;
          uint64_t v84 = 2;
          if (v83 > 0xFFFD) {
            uint64_t v84 = 4;
          }
          if (v83 > 0xFD)
          {
LABEL_180:
            unint64_t v57 = v84 + v36;
            if (v57 <= v34) {
              unint64_t v57 = v34;
            }
            if (v57 <= 9) {
              unint64_t v57 = 9;
            }
            char v58 = 5;
            goto LABEL_244;
          }
LABEL_179:
          uint64_t v84 = 1;
          goto LABEL_180;
        }
        if (v36 > 3) {
          goto LABEL_173;
        }
        unsigned int v81 = ((1 << v37) + 1) >> v37;
        uint64_t v82 = 2;
        if (v81 > 0xFFFD) {
          uint64_t v82 = 4;
        }
        if (v81 <= 0xFD) {
LABEL_173:
        }
          uint64_t v82 = 1;
        memcpy(a1, a2, v82 + v36);
      }
LABEL_175:
      if (v36 > 3) {
        goto LABEL_179;
      }
      goto LABEL_176;
    case 6u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      if (v36 > 3) {
        goto LABEL_129;
      }
      unsigned int v71 = ((1 << v37) + 1) >> v37;
      uint64_t v72 = 2;
      if (v71 > 0xFFFD) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFD) {
LABEL_129:
      }
        uint64_t v72 = 1;
      unint64_t v57 = v72 + v36;
      if (v57 <= v34) {
        unint64_t v57 = v34;
      }
      if (v57 <= 9) {
        unint64_t v57 = 9;
      }
      char v58 = 6;
      goto LABEL_244;
    default:
      if (v36 > 3) {
        goto LABEL_81;
      }
      unsigned int v52 = ((1 << v37) + 1) >> v37;
      uint64_t v53 = 2;
      if (v52 > 0xFFFD) {
        uint64_t v53 = 4;
      }
      if (v52 <= 0xFD) {
LABEL_81:
      }
        uint64_t v53 = 1;
      unint64_t v54 = v53 + v36;
      if (v54 <= v34) {
        unint64_t v54 = v34;
      }
      if (v54 <= 9) {
        unint64_t v54 = 9;
      }
      memcpy(a1, a2, v54 + 1);
      return v43;
  }
}

unsigned __int8 *sub_1C997A0D0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v208 = *(void *)(a3 + 16);
    uint64_t v207 = *(void *)(v208 - 8);
    unint64_t v204 = *(void *)(v207 + 64);
    uint64_t v190 = sub_1C9BEAB08();
    uint64_t v189 = *(void *)(v190 - 8);
    uint64_t v200 = *(void *)(v189 + 64);
    uint64_t v186 = sub_1C9BEC028();
    uint64_t v185 = *(void *)(v186 - 8);
    int v4 = *(_DWORD *)(v185 + 80);
    uint64_t v184 = sub_1C9BEAC48();
    uint64_t v198 = *(void *)(v184 - 8);
    uint64_t v183 = v198;
    int v191 = *(_DWORD *)(v198 + 80) | v4;
    uint64_t v187 = sub_1C9BEAF18();
    uint64_t v196 = *(void *)(v187 - 8);
    uint64_t v211 = v196;
    int v5 = *(_DWORD *)(v196 + 80) & 0xF8;
    uint64_t v188 = sub_1C9BEAE48();
    uint64_t v6 = *(void *)(v188 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = v5 | v7 | 7;
    uint64_t v178 = sub_1C9BEC928();
    uint64_t v193 = *(void *)(v178 - 8);
    uint64_t v177 = v193;
    int v9 = *(_DWORD *)(v193 + 80);
    uint64_t v10 = sub_1C9BEC8F8();
    uint64_t v11 = v8;
    uint64_t v182 = v10;
    uint64_t v12 = v10;
    uint64_t v13 = v7;
    uint64_t v14 = *(void *)(v12 - 8);
    uint64_t v181 = v14;
    uint64_t v15 = (v191 | (v9 | *(_DWORD *)(v14 + 80))) & 0xF8 | v8;
    uint64_t v201 = v200 + v15;
    uint64_t v16 = v201 & ~v15;
    unint64_t v17 = *(void *)(v185 + 64);
    unint64_t v180 = v17 + 7;
    if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17) {
      unint64_t v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v17 <= *(void *)(v198 + 64)) {
      unint64_t v17 = *(void *)(v198 + 64);
    }
    if (v17 <= 0x18) {
      unint64_t v18 = 24;
    }
    else {
      unint64_t v18 = v17;
    }
    uint64_t v197 = *(void *)(v196 + 64) + v7;
    uint64_t v172 = v6;
    int v19 = *(_DWORD *)(v6 + 84);
    size_t v171 = *(void *)(v6 + 64);
    if (v19) {
      size_t v20 = *(void *)(v6 + 64);
    }
    else {
      size_t v20 = *(void *)(v6 + 64) + 1;
    }
    size_t v192 = v20 + 7;
    uint64_t v179 = v197 & ~v7;
    unint64_t v21 = (v20 + 7 + v179) & 0xFFFFFFFFFFFFFFF8;
    size_t v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    unint64_t v170 = v18;
    if (v22 <= v18) {
      unint64_t v23 = v18;
    }
    else {
      unint64_t v23 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    }
    unint64_t v24 = v21 + 31;
    unint64_t v169 = (((((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v169 > v23) {
      unint64_t v23 = (((((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    uint64_t v175 = *(void *)(v193 + 64);
    uint64_t v194 = v8 + 16;
    uint64_t v25 = *(unsigned int *)(v211 + 84);
    unsigned int v173 = *(_DWORD *)(v6 + 84);
    BOOL v26 = v19 != 0;
    unsigned int v27 = v19 - 1;
    if (!v26) {
      unsigned int v27 = 0;
    }
    unsigned int v166 = v27;
    if (v27 <= v25) {
      unsigned int v27 = *(_DWORD *)(v211 + 84);
    }
    if (v27 <= 0x7FFFFFFE) {
      unsigned int v27 = 2147483646;
    }
    unsigned int v176 = v27;
    unint64_t v28 = ((v24 + ((v8 + 16 + ((v175 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unint64_t v168 = v28;
    if (v28 <= v23) {
      unint64_t v28 = v23;
    }
    unint64_t v29 = *(void *)(v14 + 64);
    if (v29 <= v28) {
      unint64_t v30 = v28;
    }
    else {
      unint64_t v30 = *(void *)(v14 + 64);
    }
    if (((((v30 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41 <= v204) {
      unint64_t v31 = v204;
    }
    else {
      unint64_t v31 = ((((v30 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    uint64_t v203 = *(void *)(a3 + 24);
    uint64_t v199 = *(void *)(v203 - 8);
    if (*(void *)(v199 + 64) <= 9uLL) {
      uint64_t v32 = 9;
    }
    else {
      uint64_t v32 = *(void *)(v199 + 64);
    }
    char v33 = 8 * v32;
    if (v32 > 3) {
      goto LABEL_38;
    }
    unsigned int v34 = ((1 << v33) + 1) >> v33;
    uint64_t v35 = 2;
    if (v34 > 0xFFFD) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFD) {
LABEL_38:
    }
      uint64_t v35 = 1;
    uint64_t v3 = a1;
    unint64_t v36 = v35 + v32;
    if (v36 <= v31) {
      unint64_t v36 = v31;
    }
    if (v36 <= 9) {
      unint64_t v36 = 9;
    }
    unsigned int v37 = a1[v36];
    unsigned int v38 = v37 - 7;
    if (v37 >= 7)
    {
      if (v32 > 3) {
        goto LABEL_48;
      }
      unsigned int v39 = ((1 << v33) + 1) >> v33;
      uint64_t v40 = 2;
      if (v39 > 0xFFFD) {
        uint64_t v40 = 4;
      }
      if (v39 <= 0xFD) {
LABEL_48:
      }
        uint64_t v40 = 1;
      unint64_t v41 = v40 + v32;
      if (v41 <= v31) {
        unint64_t v41 = v31;
      }
      if (v41 <= 9) {
        LODWORD(v41) = 9;
      }
      if (v41 <= 3) {
        uint64_t v42 = v41;
      }
      else {
        uint64_t v42 = 4;
      }
      switch(v42)
      {
        case 1:
          int v43 = *a1;
          goto LABEL_61;
        case 2:
          int v43 = *(unsigned __int16 *)a1;
          goto LABEL_61;
        case 3:
          int v43 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_61;
        case 4:
          int v43 = *(_DWORD *)a1;
LABEL_61:
          if (v41 < 4) {
            v43 |= v38 << (8 * v41);
          }
          unsigned int v37 = v43 + 7;
          break;
        default:
          break;
      }
    }
    unint64_t v167 = v29;
    size_t v205 = v30 + 1;
    uint64_t v44 = ~v15;
    uint64_t v195 = ~v13;
    uint64_t v174 = ~v11;
    switch(v37)
    {
      case 0u:
      case 1u:
      case 3u:
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v207 + 8))(a1, v208);
        goto LABEL_134;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v189 + 8))(a1, v190);
        uint64_t v45 = (id *)((unint64_t)&a1[v201] & v44);
        unsigned int v46 = *((unsigned __int8 *)v45 + v30);
        unsigned int v47 = v46 - 10;
        if (v46 >= 0xA)
        {
          if (v30 <= 3) {
            uint64_t v48 = v30;
          }
          else {
            uint64_t v48 = 4;
          }
          switch(v48)
          {
            case 1:
              int v49 = *(unsigned __int8 *)v45;
              goto LABEL_87;
            case 2:
              int v49 = *(unsigned __int16 *)v45;
              goto LABEL_87;
            case 3:
              int v49 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&a1[v201] & v44) + 2) << 16);
              goto LABEL_87;
            case 4:
              int v49 = *(_DWORD *)v45;
LABEL_87:
              if (v30 < 4) {
                unsigned int v46 = (v49 | (v47 << (8 * v30))) + 10;
              }
              else {
                unsigned int v46 = v49 + 10;
              }
              break;
            default:
              goto LABEL_90;
          }
        }
        break;
      case 5u:
        if (v32 > 3) {
          goto LABEL_73;
        }
        unsigned int v51 = ((1 << v33) + 1) >> v33;
        if (v51 > 0xFFFD)
        {
          unsigned int v50 = *(_DWORD *)&a1[v32];
        }
        else if (v51 <= 0xFD)
        {
LABEL_73:
          unsigned int v50 = a1[v32];
        }
        else
        {
          unsigned int v50 = *(unsigned __int16 *)&a1[v32];
        }
        unsigned int v52 = v50 - 2;
        if (v50 >= 2)
        {
          if (v32 <= 3) {
            uint64_t v53 = v32;
          }
          else {
            uint64_t v53 = 4;
          }
          switch(v53)
          {
            case 1:
              int v54 = *a1;
              goto LABEL_95;
            case 2:
              int v54 = *(unsigned __int16 *)a1;
              goto LABEL_95;
            case 3:
              int v54 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_95;
            case 4:
              int v54 = *(_DWORD *)a1;
LABEL_95:
              if (v32 < 4) {
                v54 |= v52 << v33;
              }
              unsigned int v50 = v54 + 2;
              break;
            default:
              break;
          }
        }
        if (v50 == 1)
        {
LABEL_101:
        }
        else if (!v50)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v199 + 8))(a1, v203);
        }
        goto LABEL_134;
      case 6u:
        goto LABEL_101;
      default:
        goto LABEL_134;
    }
LABEL_90:
    size_t __n = v20;
    switch(v46)
    {
      case 0u:
        uint64_t v56 = v185;
        uint64_t v55 = v186;
        goto LABEL_118;
      case 1u:
        unint64_t v57 = (id *)((unint64_t)&a1[v201] & v44);
        (*(void (**)(id *, uint64_t))(v185 + 8))(v45, v186);
        swift_release();
        goto LABEL_119;
      case 2u:
        unint64_t v57 = (id *)((unint64_t)&a1[v201] & v44);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_119;
      case 3u:
        unint64_t v57 = (id *)((unint64_t)&a1[v201] & v44);
        swift_unknownObjectRelease();
        goto LABEL_119;
      case 4u:
        uint64_t v56 = v183;
        uint64_t v55 = v184;
        goto LABEL_118;
      case 5u:
        unint64_t v57 = (id *)((unint64_t)&a1[v201] & v44);

        goto LABEL_119;
      case 6u:
        (*(void (**)(id *, uint64_t))(v211 + 8))(v45, v187);
        unint64_t v163 = (unint64_t)&a1[v201] & v44;
        uint64_t v58 = (v197 + v163) & v195;
        if (!__swift_getEnumTagSinglePayload(v58, 1, v188)) {
          (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v58, v188);
        }
        goto LABEL_113;
      case 7u:
        (*(void (**)(id *, uint64_t))(v211 + 8))(v45, v187);
        uint64_t v164 = (v197 + ((unint64_t)&a1[v201] & v44)) & v195;
        if (!__swift_getEnumTagSinglePayload(v164, 1, v188)) {
          (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v164, v188);
        }
        swift_bridgeObjectRelease();
        unint64_t v163 = (unint64_t)&a1[v201] & v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_113:
        swift_bridgeObjectRelease();
        goto LABEL_131;
      case 8u:
        (*(void (**)(id *, uint64_t))(v177 + 8))(v45, v178);
        unint64_t v163 = (unint64_t)&a1[v201] & v44;
        swift_bridgeObjectRelease();
        uint64_t v59 = v194 + (((v163 | 7) + v175) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v60 = v59 & v174;
        if (v25 == v176)
        {
          if (__swift_getEnumTagSinglePayload(v59 & v174, v25, v187)) {
            goto LABEL_130;
          }
          uint64_t v162 = (v197 + v60) & v195;
          goto LABEL_127;
        }
        uint64_t v61 = (v197 + v60) & v195;
        uint64_t v162 = v61;
        if (v166 == v176)
        {
          if (v173 >= 2 && __swift_getEnumTagSinglePayload(v61, v173, v188) >= 2) {
            goto LABEL_130;
          }
          goto LABEL_127;
        }
        unint64_t v62 = *(void *)(((v192 + v61) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v62 >= 0xFFFFFFFF) {
          LODWORD(v62) = -1;
        }
        if ((v62 + 1) < 2)
        {
LABEL_127:
          (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v60, v187);
          if (!__swift_getEnumTagSinglePayload(v162, 1, v188)) {
            (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v162, v188);
          }
          swift_bridgeObjectRelease();
        }
LABEL_130:

LABEL_131:
        uint64_t v45 = (id *)v163;
LABEL_132:
        unint64_t v63 = ((((unint64_t)v45 | 7) + v205) & 0xFFFFFFFFFFFFFFF8) + 15;
        swift_bridgeObjectRelease();
        unint64_t v64 = v63 & 0xFFFFFFFFFFFFFFF8;
        unint64_t v65 = *(void *)((v63 & 0xFFFFFFFFFFFFFFF8) + 24);
        size_t v20 = __n;
        if (v65 >= 0xFFFFFFFF) {
          __swift_destroy_boxed_opaque_existential_1(v64);
        }
LABEL_134:
        if (v32 > 3) {
          goto LABEL_138;
        }
        unsigned int v66 = ((1 << v33) + 1) >> v33;
        uint64_t v67 = 2;
        if (v66 > 0xFFFD) {
          uint64_t v67 = 4;
        }
        if (v66 <= 0xFD) {
LABEL_138:
        }
          uint64_t v67 = 1;
        unint64_t v68 = v67 + v32;
        if (v68 <= v31) {
          unint64_t v68 = v31;
        }
        if (v68 <= 9) {
          unint64_t v68 = 9;
        }
        unsigned int v69 = a2[v68];
        unsigned int v70 = v69 - 7;
        if (v69 >= 7)
        {
          if (v32 > 3) {
            goto LABEL_148;
          }
          unsigned int v71 = ((1 << v33) + 1) >> v33;
          uint64_t v72 = 2;
          if (v71 > 0xFFFD) {
            uint64_t v72 = 4;
          }
          if (v71 <= 0xFD) {
LABEL_148:
          }
            uint64_t v72 = 1;
          unint64_t v73 = v72 + v32;
          if (v73 <= v31) {
            unint64_t v73 = v31;
          }
          if (v73 <= 9) {
            LODWORD(v73) = 9;
          }
          if (v73 <= 3) {
            uint64_t v74 = v73;
          }
          else {
            uint64_t v74 = 4;
          }
          switch(v74)
          {
            case 1:
              int v75 = *a2;
              goto LABEL_161;
            case 2:
              int v75 = *(unsigned __int16 *)a2;
              goto LABEL_161;
            case 3:
              int v75 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_161;
            case 4:
              int v75 = *(_DWORD *)a2;
LABEL_161:
              if (v73 < 4) {
                unsigned int v69 = (v75 | (v70 << (8 * v73))) + 7;
              }
              else {
                unsigned int v69 = v75 + 7;
              }
              break;
            default:
              goto LABEL_164;
          }
        }
        break;
      case 9u:
        uint64_t v56 = v181;
        uint64_t v55 = v182;
LABEL_118:
        unint64_t v57 = (id *)((unint64_t)&a1[v201] & v44);
        (*(void (**)(id *, uint64_t))(v56 + 8))(v45, v55);
LABEL_119:
        uint64_t v45 = v57;
        goto LABEL_132;
      default:
        goto LABEL_132;
    }
LABEL_164:
    switch(v69)
    {
      case 0u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v207 + 32))(a1, a2, v208);
        if (v32 > 3) {
          goto LABEL_169;
        }
        unsigned int v76 = ((1 << v33) + 1) >> v33;
        uint64_t v77 = 2;
        if (v76 > 0xFFFD) {
          uint64_t v77 = 4;
        }
        if (v76 <= 0xFD) {
LABEL_169:
        }
          uint64_t v77 = 1;
        unint64_t v78 = v77 + v32;
        if (v78 <= v31) {
          unint64_t v78 = v31;
        }
        if (v78 <= 9) {
          unint64_t v78 = 9;
        }
        a1[v78] = 0;
        return v3;
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v207 + 32))(a1, a2, v208);
        if (v32 > 3) {
          goto LABEL_189;
        }
        unsigned int v82 = ((1 << v33) + 1) >> v33;
        uint64_t v83 = 2;
        if (v82 > 0xFFFD) {
          uint64_t v83 = 4;
        }
        if (v82 <= 0xFD) {
LABEL_189:
        }
          uint64_t v83 = 1;
        unint64_t v84 = v83 + v32;
        if (v84 <= v31) {
          unint64_t v84 = v31;
        }
        if (v84 <= 9) {
          unint64_t v84 = 9;
        }
        char v85 = 1;
        goto LABEL_338;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v189 + 32))(a1, a2, v190);
        uint64_t v86 = v44;
        unint64_t v87 = (unint64_t)&a1[v201] & v44;
        long long v88 = (unsigned __int8 *)((unint64_t)&a2[v201] & v86);
        unsigned int v89 = v88[v30];
        unsigned int v90 = v89 - 10;
        if (v89 >= 0xA)
        {
          if (v30 <= 3) {
            uint64_t v91 = v30;
          }
          else {
            uint64_t v91 = 4;
          }
          switch(v91)
          {
            case 1:
              int v92 = *v88;
              goto LABEL_246;
            case 2:
              int v92 = *(unsigned __int16 *)v88;
              goto LABEL_246;
            case 3:
              int v92 = *(unsigned __int16 *)((unint64_t)&a2[v201] & v86) | (*(unsigned __int8 *)(((unint64_t)&a2[v201] & v86) + 2) << 16);
              goto LABEL_246;
            case 4:
              int v92 = *(_DWORD *)v88;
LABEL_246:
              if (v30 < 4) {
                unsigned int v89 = (v92 | (v90 << (8 * v30))) + 10;
              }
              else {
                unsigned int v89 = v92 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v89)
        {
          case 0u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v185 + 32))(v87, v88, v186);
            *(unsigned char *)(v87 + v30) = 0;
            goto LABEL_328;
          case 1u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v185 + 32))(v87, v88, v186);
            *(void *)((v180 + v87) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v88[v180] & 0xFFFFFFFFFFFFFFF8);
            char v110 = 1;
            goto LABEL_294;
          case 2u:
            long long v111 = *(_OWORD *)v88;
            *(void *)(v87 + 16) = *(void *)(((unint64_t)&a2[v201] & v86) + 0x10);
            *(_OWORD *)unint64_t v87 = v111;
            char v110 = 2;
            goto LABEL_294;
          case 3u:
            *(void *)unint64_t v87 = *(void *)v88;
            char v110 = 3;
            goto LABEL_294;
          case 4u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v183 + 32))(v87, v88, v184);
            char v110 = 4;
            goto LABEL_294;
          case 5u:
            *(void *)unint64_t v87 = *(void *)v88;
            char v110 = 5;
            goto LABEL_294;
          case 6u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v211 + 32))(v87, v88, v187);
            unsigned int v112 = (void *)((v197 + v87) & v195);
            unsigned int v113 = (const void *)((unint64_t)&v88[v197] & v195);
            if (__swift_getEnumTagSinglePayload((uint64_t)v113, 1, v188))
            {
              memcpy(v112, v113, v20);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v172 + 32))(v112, v113, v188);
              __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v188);
            }
            size_t v128 = (_OWORD *)(((unint64_t)v112 + v192) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v129 = (_OWORD *)(((unint64_t)v113 + v192) & 0xFFFFFFFFFFFFFFF8);
            *size_t v128 = *v129;
            unint64_t v130 = ((unint64_t)v128 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v132 = *(_DWORD *)v131;
            *(unsigned char *)(v130 + 4) = *(unsigned char *)(v131 + 4);
            *(_DWORD *)unint64_t v130 = v132;
            char v133 = 6;
            goto LABEL_310;
          case 7u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v211 + 32))(v87, v88, v187);
            unint64_t v114 = (void *)((v197 + v87) & v195);
            unint64_t v115 = (const void *)((unint64_t)&v88[v197] & v195);
            if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v188))
            {
              memcpy(v114, v115, v20);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v172 + 32))(v114, v115, v188);
              __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v188);
            }
            unint64_t v134 = (_OWORD *)(((unint64_t)v114 + v192) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v135 = (_OWORD *)(((unint64_t)v115 + v192) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v134 = *v135;
            unint64_t v136 = ((unint64_t)v134 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v138 = *(_DWORD *)v137;
            *(unsigned char *)(v136 + 4) = *(unsigned char *)(v137 + 4);
            *(_DWORD *)unint64_t v136 = v138;
            unint64_t v139 = (_OWORD *)(((v87 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            long long v140 = (_OWORD *)((((unint64_t)v88 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v139 = *v140;
            long long v141 = (_OWORD *)(((unint64_t)v139 + 23) & 0xFFFFFFFFFFFFFFF8);
            unsigned int v142 = (_OWORD *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
            *long long v141 = *v142;
            *(_OWORD *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFFFF8);
            char v133 = 7;
LABEL_310:
            *(unsigned char *)(v87 + v30) = v133;
            uint64_t v3 = a1;
            goto LABEL_328;
          case 8u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v177 + 32))(v87, v88, v178);
            int v116 = (_OWORD *)(((v87 | 7) + v175) & 0xFFFFFFFFFFFFFFF8);
            char v117 = (_OWORD *)((((unint64_t)v88 | 7) + v175) & 0xFFFFFFFFFFFFFFF8);
            *int v116 = *v117;
            unint64_t v118 = ((unint64_t)v116 + v194) & v174;
            uint64_t v119 = (const void *)(((unint64_t)v117 + v194) & v174);
            long long v210 = v119;
            if (v25 == v176)
            {
              int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v119, v25, v187);
              uint64_t v119 = v210;
              if (!EnumTagSinglePayload)
              {
                unint64_t v121 = (const void *)(((unint64_t)v210 + v197) & v195);
                goto LABEL_314;
              }
            }
            else
            {
              unint64_t v121 = (const void *)(((unint64_t)v119 + v197) & v195);
              if (v166 == v176)
              {
                if (v173 < 2
                  || (unsigned int v122 = __swift_getEnumTagSinglePayload(((unint64_t)v119 + v197) & v195, v173, v188),
                      uint64_t v119 = v210,
                      v122 < 2))
                {
LABEL_314:
                  (*(void (**)(unint64_t, const void *, uint64_t))(v211 + 32))(v118, v119, v187);
                  uint64_t v144 = (void *)((v197 + v118) & v195);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v121, 1, v188))
                  {
                    memcpy(v144, v121, v20);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v172 + 32))(v144, v121, v188);
                    __swift_storeEnumTagSinglePayload((uint64_t)v144, 0, 1, v188);
                  }
                  size_t v145 = (_OWORD *)(((unint64_t)v144 + v192) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v146 = (_OWORD *)(((unint64_t)v121 + v192) & 0xFFFFFFFFFFFFFFF8);
                  _OWORD *v145 = *v146;
                  unint64_t v147 = ((unint64_t)v146 + 19) & 0xFFFFFFFFFFFFFFF8;
                  int v148 = *(_DWORD *)v147;
                  unint64_t v149 = ((unint64_t)v145 + 19) & 0xFFFFFFFFFFFFFFF8;
                  *(unsigned char *)(v149 + 4) = *(unsigned char *)(v147 + 4);
                  *(_DWORD *)unint64_t v149 = v148;
                  unint64_t v125 = v169;
                  unint64_t v124 = v170;
                  size_t v150 = v171;
                  unint64_t v126 = v167;
                  unint64_t v127 = v168;
                  unint64_t v123 = (unint64_t)v210;
                  if (!v173) {
                    goto LABEL_318;
                  }
LABEL_319:
                  unint64_t v151 = (((v179 + 7 + v150) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  *(void *)(((v118 | 7) + v151) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v123 | 7) + v151) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v152 = (((v179 + 7 + v20) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  if (v152 <= v124) {
                    unint64_t v152 = v124;
                  }
                  if (v125 > v152) {
                    unint64_t v152 = v125;
                  }
                  if (v127 > v152) {
                    unint64_t v152 = v127;
                  }
                  if (v126 > v152) {
                    unint64_t v152 = v126;
                  }
                  *(unsigned char *)(v87 + v152) = 8;
LABEL_328:
                  uint64_t v153 = (void *)(((v87 | 7) + v205) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v154 = (void *)((((unint64_t)v88 | 7) + v205) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v153 = *v154;
                  unint64_t v155 = ((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v156 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
                  long long v157 = *(_OWORD *)v156;
                  long long v158 = *(_OWORD *)(v156 + 16);
                  *(void *)(v155 + 32) = *(void *)(v156 + 32);
                  *(_OWORD *)unint64_t v155 = v157;
                  *(_OWORD *)(v155 + 16) = v158;
                  *(unsigned char *)(v155 + 40) = *(unsigned char *)(v156 + 40);
                  if (v32 > 3) {
                    goto LABEL_332;
                  }
                  unsigned int v159 = ((1 << v33) + 1) >> v33;
                  uint64_t v160 = 2;
                  if (v159 > 0xFFFD) {
                    uint64_t v160 = 4;
                  }
                  if (v159 <= 0xFD) {
LABEL_332:
                  }
                    uint64_t v160 = 1;
                  unint64_t v84 = v160 + v32;
                  if (v84 <= v31) {
                    unint64_t v84 = v31;
                  }
                  if (v84 <= 9) {
                    unint64_t v84 = 9;
                  }
                  char v85 = 2;
                  goto LABEL_338;
                }
              }
              else
              {
                unint64_t v143 = *(void *)((((unint64_t)v121 + v192) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v143 >= 0xFFFFFFFF) {
                  LODWORD(v143) = -1;
                }
                if ((v143 + 1) < 2) {
                  goto LABEL_314;
                }
              }
            }
            memcpy((void *)v118, v119, v22);
            unint64_t v123 = (unint64_t)v210;
            unint64_t v125 = v169;
            unint64_t v124 = v170;
            unint64_t v126 = v167;
            unint64_t v127 = v168;
LABEL_318:
            size_t v150 = v20;
            goto LABEL_319;
          case 9u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v181 + 32))(v87, v88, v182);
            char v110 = 9;
LABEL_294:
            *(unsigned char *)(v87 + v30) = v110;
            goto LABEL_328;
          default:
            memcpy((void *)v87, v88, v205);
            goto LABEL_328;
        }
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v207 + 32))(a1, a2, v208);
        if (v32 > 3) {
          goto LABEL_205;
        }
        unsigned int v93 = ((1 << v33) + 1) >> v33;
        uint64_t v94 = 2;
        if (v93 > 0xFFFD) {
          uint64_t v94 = 4;
        }
        if (v93 <= 0xFD) {
LABEL_205:
        }
          uint64_t v94 = 1;
        unint64_t v84 = v94 + v32;
        if (v84 <= v31) {
          unint64_t v84 = v31;
        }
        if (v84 <= 9) {
          unint64_t v84 = 9;
        }
        char v85 = 3;
        goto LABEL_338;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v207 + 32))(a1, a2, v208);
        if (v32 > 3) {
          goto LABEL_215;
        }
        unsigned int v95 = ((1 << v33) + 1) >> v33;
        uint64_t v96 = 2;
        if (v95 > 0xFFFD) {
          uint64_t v96 = 4;
        }
        if (v95 <= 0xFD) {
LABEL_215:
        }
          uint64_t v96 = 1;
        unint64_t v84 = v96 + v32;
        if (v84 <= v31) {
          unint64_t v84 = v31;
        }
        if (v84 <= 9) {
          unint64_t v84 = 9;
        }
        char v85 = 4;
        goto LABEL_338;
      case 5u:
        if (v32 > 3) {
          goto LABEL_222;
        }
        unsigned int v100 = ((1 << v33) + 1) >> v33;
        if (v100 > 0xFFFD)
        {
          unsigned int v97 = *(_DWORD *)&a2[v32];
        }
        else if (v100 <= 0xFD)
        {
LABEL_222:
          unsigned int v97 = a2[v32];
        }
        else
        {
          unsigned int v97 = *(unsigned __int16 *)&a2[v32];
        }
        unsigned int v101 = v97 - 2;
        if (v97 >= 2)
        {
          if (v32 <= 3) {
            uint64_t v102 = v32;
          }
          else {
            uint64_t v102 = 4;
          }
          switch(v102)
          {
            case 1:
              int v103 = *a2;
              goto LABEL_254;
            case 2:
              int v103 = *(unsigned __int16 *)a2;
              goto LABEL_254;
            case 3:
              int v103 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_254;
            case 4:
              int v103 = *(_DWORD *)a2;
LABEL_254:
              if (v32 < 4) {
                v103 |= v101 << v33;
              }
              unsigned int v97 = v103 + 2;
              break;
            default:
              break;
          }
        }
        if (v97 == 1)
        {
          *(void *)a1 = *(void *)a2;
          a1[8] = a2[8];
          if (v32 <= 3)
          {
            unsigned int v105 = ((1 << v33) + 1) >> v33;
            if (v105 > 0xFFFD)
            {
              *(_DWORD *)&a1[v32] = 1;
              goto LABEL_274;
            }
            if (v105 > 0xFD)
            {
              *(_WORD *)&a1[v32] = 1;
              goto LABEL_274;
            }
          }
          a1[v32] = 1;
        }
        else
        {
          if (!v97)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v199 + 32))(a1, a2, v203);
            if (v32 > 3)
            {
LABEL_262:
              a1[v32] = 0;
              goto LABEL_273;
            }
            unsigned int v104 = ((1 << v33) + 1) >> v33;
            if (v104 > 0xFFFD)
            {
              *(_DWORD *)&a1[v32] = 0;
            }
            else
            {
              if (v104 <= 0xFD) {
                goto LABEL_262;
              }
              *(_WORD *)&a1[v32] = 0;
            }
LABEL_274:
            unsigned int v108 = ((1 << v33) + 1) >> v33;
            uint64_t v109 = 2;
            if (v108 > 0xFFFD) {
              uint64_t v109 = 4;
            }
            if (v108 > 0xFD)
            {
LABEL_278:
              unint64_t v84 = v109 + v32;
              if (v84 <= v31) {
                unint64_t v84 = v31;
              }
              if (v84 <= 9) {
                unint64_t v84 = 9;
              }
              char v85 = 5;
LABEL_338:
              v3[v84] = v85;
              return v3;
            }
LABEL_277:
            uint64_t v109 = 1;
            goto LABEL_278;
          }
          if (v32 > 3) {
            goto LABEL_271;
          }
          unsigned int v106 = ((1 << v33) + 1) >> v33;
          uint64_t v107 = 2;
          if (v106 > 0xFFFD) {
            uint64_t v107 = 4;
          }
          if (v106 <= 0xFD) {
LABEL_271:
          }
            uint64_t v107 = 1;
          memcpy(a1, a2, v107 + v32);
        }
LABEL_273:
        if (v32 > 3) {
          goto LABEL_277;
        }
        goto LABEL_274;
      case 6u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        if (v32 > 3) {
          goto LABEL_227;
        }
        unsigned int v98 = ((1 << v33) + 1) >> v33;
        uint64_t v99 = 2;
        if (v98 > 0xFFFD) {
          uint64_t v99 = 4;
        }
        if (v98 <= 0xFD) {
LABEL_227:
        }
          uint64_t v99 = 1;
        unint64_t v84 = v99 + v32;
        if (v84 <= v31) {
          unint64_t v84 = v31;
        }
        if (v84 <= 9) {
          unint64_t v84 = 9;
        }
        char v85 = 6;
        goto LABEL_338;
      default:
        if (v32 > 3) {
          goto LABEL_179;
        }
        unsigned int v79 = ((1 << v33) + 1) >> v33;
        uint64_t v80 = 2;
        if (v79 > 0xFFFD) {
          uint64_t v80 = 4;
        }
        if (v79 <= 0xFD) {
LABEL_179:
        }
          uint64_t v80 = 1;
        unint64_t v81 = v80 + v32;
        if (v81 <= v31) {
          unint64_t v81 = v31;
        }
        if (v81 <= 9) {
          unint64_t v81 = 9;
        }
        memcpy(a1, a2, v81 + 1);
        return v3;
    }
  }
  return v3;
}

uint64_t sub_1C997BA14(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v44 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v43 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v41 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v41 + 80);
  uint64_t v42 = *(void *)(sub_1C9BEAC48() - 8);
  int v38 = *(_DWORD *)(v42 + 80) | v3;
  uint64_t v40 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v40 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v39 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v39 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v38 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v43 + v10) & ~v10;
  unint64_t v12 = *(void *)(v41 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v42 + 64)) {
    unint64_t v12 = *(void *)(v42 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v40 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v39 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v39 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v18 <= v44) {
    unint64_t v18 = v44;
  }
  unint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_25;
  }
  unsigned int v21 = ((1 << v20) + 1) >> v20;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
LABEL_25:
  }
    uint64_t v22 = 1;
  unint64_t v23 = v22 + v19;
  if (v23 <= v18) {
    unint64_t v23 = v18;
  }
  if (v23 <= 9) {
    unint64_t v23 = 9;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_51;
  }
  unint64_t v24 = v23 + 1;
  char v25 = 8 * v24;
  if (v24 <= 3)
  {
    unsigned int v28 = ((a2 + ~(-1 << v25) - 248) >> v25) + 1;
    if (HIWORD(v28))
    {
      int v26 = *(_DWORD *)((char *)a1 + v24);
      if (!v26) {
        goto LABEL_51;
      }
      goto LABEL_41;
    }
    if (v28 > 0xFF)
    {
      int v26 = *(unsigned __int16 *)((char *)a1 + v24);
      if (!*(unsigned __int16 *)((char *)a1 + v24)) {
        goto LABEL_51;
      }
      goto LABEL_41;
    }
    if (v28 < 2)
    {
LABEL_51:
      if (v19 > 3) {
        goto LABEL_55;
      }
      unsigned int v32 = ((1 << v20) + 1) >> v20;
      uint64_t v33 = 2;
      if (v32 > 0xFFFD) {
        uint64_t v33 = 4;
      }
      if (v32 <= 0xFD) {
LABEL_55:
      }
        uint64_t v33 = 1;
      unint64_t v34 = v33 + v19;
      if (v34 > v18) {
        unint64_t v18 = v34;
      }
      if (v18 <= 9) {
        unint64_t v18 = 9;
      }
      unsigned int v35 = *((unsigned __int8 *)a1 + v18);
      if (v35 >= 8) {
        return (v35 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v26 = *((unsigned __int8 *)a1 + v24);
  if (!*((unsigned char *)a1 + v24)) {
    goto LABEL_51;
  }
LABEL_41:
  int v29 = (v26 - 1) << v25;
  if (v24 > 3) {
    int v29 = 0;
  }
  if (v24)
  {
    if (v24 <= 3) {
      int v30 = v24;
    }
    else {
      int v30 = 4;
    }
    switch(v30)
    {
      case 2:
        int v31 = *a1;
        break;
      case 3:
        int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v31 = *(_DWORD *)a1;
        break;
      default:
        int v31 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v31 = 0;
  }
  return (v31 | v29) + 249;
}

void sub_1C997BF7C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v41 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v40 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v38 = *(void *)(sub_1C9BEC028() - 8);
  int v4 = *(_DWORD *)(v38 + 80);
  uint64_t v39 = *(void *)(sub_1C9BEAC48() - 8);
  int v35 = *(_DWORD *)(v39 + 80) | v4;
  uint64_t v37 = *(void *)(sub_1C9BEAF18() - 8);
  int v5 = *(_DWORD *)(v37 + 80) & 0xF8;
  uint64_t v6 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v36 = *(void *)(sub_1C9BEC928() - 8);
  int v9 = *(_DWORD *)(v36 + 80);
  uint64_t v10 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v11 = (v35 | (v9 | *(_DWORD *)(v10 + 80))) & 0xF8 | v8;
  uint64_t v12 = (v40 + v11) & ~v11;
  unint64_t v13 = *(void *)(v38 + 64);
  if (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v13) {
    unint64_t v13 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v13 <= *(void *)(v39 + 64)) {
    unint64_t v13 = *(void *)(v39 + 64);
  }
  uint64_t v14 = *(void *)(v6 + 64) + ((*(void *)(v37 + 64) + v7) & ~v7);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  unint64_t v15 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v13 <= v16) {
    unint64_t v13 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v17 = ((((((v15 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 <= v17) {
    unint64_t v13 = v17;
  }
  if (v13 <= ((v16 + ((v8 + ((*(void *)(v36 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v13 = ((v16 + ((v8 + ((*(void *)(v36 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v18 = *(void *)(v10 + 64);
  if (v13 > v18) {
    unint64_t v18 = v13;
  }
  if (v18 <= 0x18) {
    unint64_t v18 = 24;
  }
  unint64_t v19 = ((((v12 + v18 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v19 <= v41) {
    unint64_t v19 = v41;
  }
  unint64_t v20 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v20 <= 9) {
    unint64_t v20 = 9;
  }
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_25;
  }
  unsigned int v22 = ((1 << v21) + 1) >> v21;
  uint64_t v23 = 2;
  if (v22 > 0xFFFD) {
    uint64_t v23 = 4;
  }
  if (v22 <= 0xFD) {
LABEL_25:
  }
    uint64_t v23 = 1;
  unint64_t v24 = v23 + v20;
  if (v24 <= v19) {
    unint64_t v24 = v19;
  }
  if (v24 <= 9) {
    unint64_t v24 = 9;
  }
  size_t v25 = v24 + 1;
  char v26 = 8 * (v24 + 1);
  if (a3 < 0xF9)
  {
    int v27 = 0;
  }
  else if (v25 <= 3)
  {
    unsigned int v30 = ((a3 + ~(-1 << v26) - 248) >> v26) + 1;
    if (HIWORD(v30))
    {
      int v27 = 4;
    }
    else if (v30 >= 0x100)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = v30 > 1;
    }
  }
  else
  {
    int v27 = 1;
  }
  if (a2 > 0xF8)
  {
    unsigned int v28 = a2 - 249;
    if (v25 < 4)
    {
      int v29 = (v28 >> v26) + 1;
      if (v25)
      {
        int v31 = v28 & ~(-1 << v26);
        bzero(a1, v25);
        if (v25 == 3)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
        }
        else if (v25 == 2)
        {
          *(_WORD *)a1 = v31;
        }
        else
        {
          *a1 = v31;
        }
      }
    }
    else
    {
      bzero(a1, v25);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v25] = v29;
        break;
      case 2:
        *(_WORD *)&a1[v25] = v29;
        break;
      case 3:
LABEL_70:
        __break(1u);
        JUMPOUT(0x1C997C524);
      case 4:
        *(_DWORD *)&a1[v25] = v29;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v27)
    {
      case 1:
        a1[v25] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_50;
      case 2:
        *(_WORD *)&a1[v25] = 0;
        goto LABEL_49;
      case 3:
        goto LABEL_70;
      case 4:
        *(_DWORD *)&a1[v25] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_50;
      default:
LABEL_49:
        if (a2)
        {
LABEL_50:
          if (v20 > 3) {
            goto LABEL_54;
          }
          unsigned int v32 = ((1 << v21) + 1) >> v21;
          uint64_t v33 = 2;
          if (v32 > 0xFFFD) {
            uint64_t v33 = 4;
          }
          if (v32 <= 0xFD) {
LABEL_54:
          }
            uint64_t v33 = 1;
          unint64_t v34 = v33 + v20;
          if (v34 > v19) {
            unint64_t v19 = v34;
          }
          if (v19 <= 9) {
            unint64_t v19 = 9;
          }
          a1[v19] = -(char)a2;
        }
        break;
    }
  }
}

uint64_t sub_1C997C54C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v36 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v35 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v33 = *(void *)(sub_1C9BEC028() - 8);
  int v2 = *(_DWORD *)(v33 + 80);
  uint64_t v34 = *(void *)(sub_1C9BEAC48() - 8);
  int v30 = *(_DWORD *)(v34 + 80) | v2;
  uint64_t v32 = *(void *)(sub_1C9BEAF18() - 8);
  int v3 = *(_DWORD *)(v32 + 80) & 0xF8;
  uint64_t v4 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 | v5 | 7;
  uint64_t v31 = *(void *)(sub_1C9BEC928() - 8);
  int v7 = *(_DWORD *)(v31 + 80);
  uint64_t v8 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v9 = (v30 | (v7 | *(_DWORD *)(v8 + 80))) & 0xF8 | v6;
  uint64_t v10 = (v35 + v9) & ~v9;
  unint64_t v11 = *(void *)(v33 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v34 + 64)) {
    unint64_t v11 = *(void *)(v34 + 64);
  }
  uint64_t v12 = *(void *)(v4 + 64) + ((*(void *)(v32 + 64) + v5) & ~v5);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v11 <= v14) {
    unint64_t v11 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v15 = ((((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v11 <= v15) {
    unint64_t v11 = v15;
  }
  if (v11 <= ((v14 + ((v6 + ((*(void *)(v31 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v11 = ((v14 + ((v6 + ((*(void *)(v31 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v16 = *(void *)(v8 + 64);
  if (v11 > v16) {
    unint64_t v16 = v11;
  }
  if (v16 <= 0x18) {
    unint64_t v16 = 24;
  }
  unint64_t v17 = ((((v10 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v17 <= v36) {
    unint64_t v17 = v36;
  }
  uint64_t v18 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v19 = 9;
  if (*(void *)(v18 + 64) > 9uLL) {
    uint64_t v19 = *(void *)(v18 + 64);
  }
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_25;
  }
  unsigned int v21 = ((1 << v20) + 1) >> v20;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
LABEL_25:
  }
    uint64_t v22 = 1;
  unint64_t v23 = v22 + v19;
  if (v23 <= v17) {
    unint64_t v23 = v17;
  }
  if (v23 <= 9) {
    unint64_t v23 = 9;
  }
  uint64_t result = a1[v23];
  if (result >= 7)
  {
    if (v19 > 3) {
      goto LABEL_35;
    }
    unsigned int v25 = ((1 << v20) + 1) >> v20;
    uint64_t v26 = 2;
    if (v25 > 0xFFFD) {
      uint64_t v26 = 4;
    }
    if (v25 <= 0xFD) {
LABEL_35:
    }
      uint64_t v26 = 1;
    unint64_t v27 = v26 + v19;
    if (v27 > v17) {
      unint64_t v17 = v27;
    }
    if (v17 <= 9) {
      LODWORD(v17) = 9;
    }
    if (v17 <= 3) {
      uint64_t v28 = v17;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a1;
        goto LABEL_48;
      case 2:
        int v29 = *(unsigned __int16 *)a1;
        goto LABEL_48;
      case 3:
        int v29 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_48;
      case 4:
        int v29 = *(_DWORD *)a1;
LABEL_48:
        if (v17 < 4) {
          uint64_t result = (v29 | ((result - 7) << (8 * v17))) + 7;
        }
        else {
          uint64_t result = (v29 + 7);
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C997CA08(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v47 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v45 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v43 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v43 + 80);
  uint64_t v44 = *(void *)(sub_1C9BEAC48() - 8);
  int v40 = *(_DWORD *)(v44 + 80) | v3;
  uint64_t v42 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v42 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v41 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v41 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v40 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v45 + v10) & ~v10;
  unint64_t v12 = *(void *)(v43 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v44 + 64)) {
    unint64_t v12 = *(void *)(v44 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v42 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v41 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v41 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v18 <= v47) {
    unint64_t v18 = v47;
  }
  unint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  if (a2 > 6)
  {
    char v23 = 8 * v19;
    if (v19 > 3) {
      goto LABEL_36;
    }
    unsigned int v24 = ((1 << v23) + 1) >> v23;
    uint64_t v25 = 2;
    if (v24 > 0xFFFD) {
      uint64_t v25 = 4;
    }
    if (v24 <= 0xFD) {
LABEL_36:
    }
      uint64_t v25 = 1;
    unint64_t v26 = v25 + v19;
    if (v26 <= v18) {
      unint64_t v26 = v18;
    }
    if (v26 <= 9) {
      LODWORD(v26) = 9;
    }
    BOOL v27 = v26 > 3;
    char v28 = 8 * v26;
    int v29 = (a2 - 7) & ~(-1 << v28);
    unsigned int v30 = ((a2 - 7) >> v28) + 7;
    if (v27)
    {
      LOBYTE(v30) = 7;
      int v31 = a2 - 7;
    }
    else
    {
      int v31 = v29;
    }
    if (v19 > 3) {
      goto LABEL_48;
    }
    unsigned int v32 = ((1 << v23) + 1) >> v23;
    uint64_t v33 = 2;
    if (v32 > 0xFFFD) {
      uint64_t v33 = 4;
    }
    if (v32 <= 0xFD) {
LABEL_48:
    }
      uint64_t v33 = 1;
    unint64_t v34 = v33 + v19;
    if (v34 <= v18) {
      unint64_t v34 = v18;
    }
    if (v34 <= 9) {
      unint64_t v34 = 9;
    }
    a1[v34] = v30;
    if (v19 > 3) {
      goto LABEL_57;
    }
    unsigned int v35 = ((1 << v23) + 1) >> v23;
    uint64_t v36 = 2;
    if (v35 > 0xFFFD) {
      uint64_t v36 = 4;
    }
    if (v35 <= 0xFD) {
LABEL_57:
    }
      uint64_t v36 = 1;
    unint64_t v37 = v36 + v19;
    if (v37 > v18) {
      unint64_t v18 = v37;
    }
    if (v18 <= 9) {
      size_t v38 = 9;
    }
    else {
      size_t v38 = v18;
    }
    if (v38 >= 4) {
      int v39 = 4;
    }
    else {
      int v39 = v38;
    }
    bzero(a1, v38);
    switch(v39)
    {
      case 2:
        *(_WORD *)a1 = v31;
        break;
      case 3:
        *(_WORD *)a1 = v31;
        a1[2] = BYTE2(v31);
        break;
      case 4:
        *(_DWORD *)a1 = v31;
        break;
      default:
        *a1 = v31;
        break;
    }
  }
  else
  {
    if (v19 > 3) {
      goto LABEL_26;
    }
    unsigned int v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    uint64_t v21 = 2;
    if (v20 > 0xFFFD) {
      uint64_t v21 = 4;
    }
    if (v20 <= 0xFD) {
LABEL_26:
    }
      uint64_t v21 = 1;
    unint64_t v22 = v21 + v19;
    if (v22 > v18) {
      unint64_t v18 = v22;
    }
    if (v18 <= 9) {
      unint64_t v18 = 9;
    }
    a1[v18] = a2;
  }
}

uint64_t sub_1C997CF90(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t sub_1C997CF98()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9971250(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D028()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C997D060()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9971694(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D0F0()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C99718F0(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D180()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9971B48(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D210()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_45_18();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_24_33();
  return sub_1C9971DA0(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C997D2A8()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_45_18();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_24_33();
  return sub_1C9971FF4(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C997D340()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9972348(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D3D0(uint64_t a1)
{
  return sub_1C9972430(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C997D3E4(uint64_t a1)
{
  return sub_1C997D418(a1, sub_1C99721E0);
}

uint64_t sub_1C997D400(uint64_t a1)
{
  return sub_1C997D418(a1, sub_1C9971E8C);
}

uint64_t sub_1C997D418(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C997D434(uint64_t a1)
{
  return sub_1C997D528(a1, sub_1C9971C30);
}

uint64_t sub_1C997D450(uint64_t a1)
{
  return sub_1C997D528(a1, sub_1C99719D8);
}

uint64_t sub_1C997D46C(uint64_t a1)
{
  return sub_1C997D528(a1, sub_1C997177C);
}

uint64_t objectdestroy_126Tm()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C997D510(uint64_t a1)
{
  return sub_1C997D528(a1, sub_1C9971434);
}

uint64_t sub_1C997D528(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C997D540()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEDA18();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C997D5E4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = sub_1C9BEDA18();
  OUTLINED_FUNCTION_2_4(v2);

  return sub_1C9971634(a1);
}

uint64_t sub_1C997D678()
{
  OUTLINED_FUNCTION_80_10();
  return v0();
}

uint64_t sub_1C997D6A0()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9970F40(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D730()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_45_18();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_24_33();
  return sub_1C9970DAC(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C997D7C8()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_45_18();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_24_33();
  return sub_1C9970C18(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C997D860()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9970A7C(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D8F0()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C99708E0(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997D980()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9970744(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997DA10()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C99705A8(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C997DAA0()
{
  OUTLINED_FUNCTION_80_10();
  return v0();
}

uint64_t sub_1C997DAC8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C996FBB0(v3, v4, v5);
}

uint64_t sub_1C997DB58()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  return sub_1C996FDB4(v2, v0);
}

uint64_t sub_1C997DBE8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C996FF0C(v3, v4, v5);
}

uint64_t sub_1C997DC78()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  return sub_1C996FE60(v2, v0);
}

uint64_t sub_1C997DD08()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C996FD08(v3, v4, v5);
}

uint64_t sub_1C997DD98()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C996FC5C(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_12_53()
{
  return swift_task_dealloc();
}

int8x16_t OUTLINED_FUNCTION_14_53(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  long long v2 = *(_OWORD *)(v1 + 56);
  int8x16_t v3 = *(int8x16_t *)(v1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 32) = v2;
  int8x16_t result = vextq_s8(v3, v3, 8uLL);
  *(int8x16_t *)(a1 + 48) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_16_43()
{
  uint64_t v3 = *(void *)(v1 + 128);
  *(void *)uint64_t v3 = v0;
  *(unsigned char *)(v3 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_17_42()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_24_33()
{
  return v0;
}

void *OUTLINED_FUNCTION_33_23(void *result)
{
  result[2] = v4;
  result[3] = v5;
  result[4] = v3;
  result[5] = v2;
  result[6] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_36_26()
{
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 72) + 16), *(void *)(*(void *)(v0 + 72) + 40));
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_51_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t OUTLINED_FUNCTION_63_17()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_65_13()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_84_7(uint64_t a1)
{
  *(void *)(v1 + 128) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_85_6()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_task_dealloc();
}

__n128 OUTLINED_FUNCTION_90_6(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  __n128 result = *(__n128 *)(v2 + 32);
  long long v4 = *(_OWORD *)(v2 + 48);
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_92_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_95_8(uint64_t result)
{
  *(void *)(v1 + 104) = result;
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_101_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_102_2()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_104_4(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t PromptForConfirmationFlowReturning.__allocating_init(acceptedTransition:rejectedTransition:cancelledTransition:)(long long *a1, _OWORD *a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  PromptForConfirmationFlowReturning.init(acceptedTransition:rejectedTransition:cancelledTransition:)(a1, a2, a3);
  return v6;
}

_OWORD *PromptForConfirmationFlowReturning.init(acceptedTransition:rejectedTransition:cancelledTransition:)(long long *a1, _OWORD *a2, long long *a3)
{
  long long v4 = *a1;
  long long v5 = *a3;
  v3[2] = *a2;
  v3[3] = v4;
  v3[1] = v5;
  return v3;
}

void sub_1C997E17C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for PromptResult();
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v13, v14);
  unint64_t v16 = (char *)&v27 - v15;
  (*(void (**)(char *, uint64_t))(v17 + 16))((char *)&v27 - v15, a1);
  if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v12) == 1)
  {
LABEL_8:
    *(_OWORD *)a2 = xmmword_1C9BF0830;
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = *(void **)v16;
        if (v16[8] == 1)
        {

          goto LABEL_8;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_1EA5922D8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
        type metadata accessor for ErrorAction();
        char v23 = (void *)swift_allocObject();
        v23[2] = 0;
        v23[3] = 0;
        v23[4] = v21;
        uint64_t v24 = sub_1C997E504(qword_1EA593668, (void (*)(uint64_t))type metadata accessor for ErrorAction);
        *(void *)(inited + 32) = v23;
        *(void *)(inited + 40) = v24;
        long long v27 = xmmword_1C9BF0830;
        type metadata accessor for StaticActionGroup();
        swift_allocObject();
        uint64_t v25 = StaticActionGroup.init(actions:transition:debugDescription:)((void *)inited, (uint64_t *)&v27, 0xD000000000000011, 0x80000001C9C22B20);
        uint64_t v26 = sub_1C997E504(&qword_1EA589E18, (void (*)(uint64_t))type metadata accessor for StaticActionGroup);
        *(void *)a2 = v25;
        *(void *)(a2 + 8) = v26;
        break;
      case 2u:
        uint64_t v19 = v2[2];
        unint64_t v20 = v2[3];
        goto LABEL_10;
      case 3u:
        goto LABEL_8;
      default:
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v16, AssociatedTypeWitness);
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(&v27, AssociatedTypeWitness, AssociatedConformanceWitness);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v11, AssociatedTypeWitness);
        if (v27 == 2) {
          goto LABEL_8;
        }
        if (v27)
        {
          uint64_t v19 = v2[4];
          unint64_t v20 = v2[5];
        }
        else
        {
          uint64_t v19 = v2[6];
          unint64_t v20 = v2[7];
        }
LABEL_10:
        *(void *)a2 = v19;
        *(void *)(a2 + 8) = v20;
        sub_1C96EEA00(v19, v20);
        return;
    }
  }
}

uint64_t sub_1C997E504(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PromptForConfirmationFlowReturning.deinit()
{
  sub_1C96EEA84(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1C96EEA84(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_1C96EEA84(*(void *)(v0 + 48), *(void *)(v0 + 56));
  return v0;
}

uint64_t PromptForConfirmationFlowReturning.__deallocating_deinit()
{
  PromptForConfirmationFlowReturning.deinit();

  return swift_deallocClassInstance();
}

void sub_1C997E5B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1C997E5D4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PromptForConfirmationFlowReturning()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromptForConfirmationFlowReturning(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForConfirmationFlowReturning);
}

uint64_t dispatch thunk of PromptForConfirmationFlowReturning.__allocating_init(acceptedTransition:rejectedTransition:cancelledTransition:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PromptForConfirmationFlowReturning.getNextGroupTransition(frameExitValue:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t PromptForDisambiguationFlowAsync.__allocating_init<A>(items:strategy:outputPublisher:)()
{
  uint64_t v0 = swift_allocObject();
  PromptForDisambiguationFlowAsync.init<A>(items:strategy:outputPublisher:)();
  return v0;
}

uint64_t static DisambiguationResult.chosenItem(_:)()
{
  OUTLINED_FUNCTION_111_4();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v6 = (char *)&v9 - v5;
  OUTLINED_FUNCTION_112();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v6, v1, v0);
  swift_storeEnumTagMultiPayload();
  return sub_1C997E8C4((uint64_t)v6, v2);
}

uint64_t DisambiguationResult.chosenItem.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  type metadata accessor for DisambiguationResult.DisambiguationResultType();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_21_31();
  OUTLINED_FUNCTION_82_2();
  v7();
  OUTLINED_FUNCTION_55();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = OUTLINED_FUNCTION_55();
    v9(v8);
    uint64_t v10 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_112();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(a2, v2, v4);
    uint64_t v10 = 0;
  }
  return __swift_storeEnumTagSinglePayload(a2, v10, 1, v4);
}

uint64_t sub_1C997E8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DisambiguationResult.DisambiguationResultType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t static DisambiguationResult.paginate(_:)()
{
  OUTLINED_FUNCTION_111_4();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_21_31();
  char v5 = *(unsigned char *)(v0 + 8);
  *(void *)uint64_t v2 = *(void *)v0;
  *(unsigned char *)(v2 + 8) = v5;
  swift_storeEnumTagMultiPayload();
  return sub_1C997E8C4(v2, v1);
}

uint64_t DisambiguationResult.paginationRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DisambiguationResult.DisambiguationResultType();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v13 - v7;
  OUTLINED_FUNCTION_82_2();
  v9();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v11 = *(void *)v8;
    char v12 = v8[8];
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v2);
    uint64_t v11 = 0;
    char v12 = -1;
  }
  *(void *)a1 = v11;
  *(unsigned char *)(a1 + 8) = v12;
  return result;
}

void static DisambiguationResult<A>.== infix(_:_:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v35 = v0;
  uint64_t v2 = v1;
  uint64_t v38 = v3;
  uint64_t v39 = v4;
  OUTLINED_FUNCTION_0();
  uint64_t v37 = v5;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_2_0();
  uint64_t v34 = v8;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_70_14();
  uint64_t v33 = v11;
  OUTLINED_FUNCTION_47();
  type metadata accessor for DisambiguationResult.DisambiguationResultType();
  OUTLINED_FUNCTION_0_2();
  uint64_t v13 = v12;
  uint64_t v16 = MEMORY[0x1F4188790](v14, v15);
  unint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19);
  OUTLINED_FUNCTION_77();
  OUTLINED_FUNCTION_0_2();
  uint64_t v36 = v20;
  OUTLINED_FUNCTION_12_4();
  uint64_t v23 = MEMORY[0x1F4188790](v21, v22);
  uint64_t v25 = (char *)&v32 + *(int *)(v23 + 48) - v24;
  uint64_t v26 = *(void (**)(void))(v13 + 16);
  OUTLINED_FUNCTION_77_10();
  v26();
  OUTLINED_FUNCTION_77_10();
  v26();
  OUTLINED_FUNCTION_50();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_77_10();
    v26();
    swift_getEnumCaseMultiPayload();
  }
  else
  {
    OUTLINED_FUNCTION_77_10();
    v26();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v2);
    }
    else
    {
      uint64_t v27 = v37;
      char v28 = *(void (**)(uint64_t, char *, uint64_t))(v37 + 32);
      v28(v33, v18, v2);
      v28(v34, v25, v2);
      sub_1C9BED528();
      int v29 = *(void (**)(void))(v27 + 8);
      OUTLINED_FUNCTION_121_2();
      v29();
      OUTLINED_FUNCTION_121_2();
      v29();
    }
  }
  uint64_t v30 = OUTLINED_FUNCTION_50();
  v31(v30);
  OUTLINED_FUNCTION_10();
}

void sub_1C997EE04()
{
  static DisambiguationResult<A>.== infix(_:_:)();
}

uint64_t PromptForDisambiguationFlowStrategy.makeRepromptOnEmptyParse(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v5 = *((unsigned char *)a1 + 24);
  uint64_t v6 = a1[4];
  char v7 = *((unsigned char *)a1 + 40);
  uint64_t v9 = *a1;
  long long v10 = *(_OWORD *)(a1 + 1);
  char v11 = v5;
  uint64_t v12 = v6;
  char v13 = v7;
  return (*(uint64_t (**)(uint64_t *))(a5 + 48))(&v9);
}

void sub_1C997EE70()
{
}

void PromptForDisambiguationFlowStrategy.makeRepromptOnLowConfidence(_:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  char v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA5936F0;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C997F01C()
{
}

void PromptForDisambiguationFlowStrategy.makeFlowCancelledResponse(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  char v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA5936F8;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C997F1C8()
{
}

void PromptForDisambiguationFlowStrategy.makeErrorResponse(_:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  char v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA593700;
  OUTLINED_FUNCTION_12_1(v5);
}

uint64_t sub_1C997F374()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:)();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:)()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = *(unsigned char *)(v7 + 24);
  uint64_t v9 = *(void *)(v7 + 32);
  char v10 = *(unsigned char *)(v7 + 40);
  *(void *)(v0 + 16) = *(void *)v7;
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v7 + 8);
  *(unsigned char *)(v0 + 40) = v8;
  *(void *)(v0 + 48) = v9;
  *(unsigned char *)(v0 + 56) = v10;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 48) + **(int **)(v1 + 48));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 64) = v11;
  *char v11 = v12;
  v11[1] = sub_1C997F564;
  return v14(v6, v0 + 16, v4, v2);
}

uint64_t sub_1C997F564()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C997F65C()
{
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C997F678()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:)();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D5F14();
}

uint64_t sub_1C997F798()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return PromptForDisambiguationFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6D18();
}

uint64_t sub_1C997F8B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForDisambiguationFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.makeErrorResponse(_:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6734();
}

uint64_t PromptForDisambiguationFlowStrategyAsync.actionForInputWrapper(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C997F9F8);
}

uint64_t sub_1C997F9F8()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void, void))(v0[5] + 32))(v0[3], v0[4]);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t PromptForDisambiguationFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  return PromptForDisambiguationFlowAsync.exitValue.getter(a1);
}

uint64_t PromptForDisambiguationFlowAsync.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_21_31();
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_82_2();
  v8();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      OUTLINED_FUNCTION_103();
      return swift_storeEnumTagMultiPayload();
    case 6:
      char v12 = *(unsigned char *)(v1 + 8);
      *(void *)a1 = *(void *)v1;
      *(unsigned char *)(a1 + 8) = v12;
      OUTLINED_FUNCTION_103();
      return swift_storeEnumTagMultiPayload();
    case 5:
      OUTLINED_FUNCTION_103();
      OUTLINED_FUNCTION_8_4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(a1, v1);
    default:
      *(void *)a1 = sub_1C9981B18();
      *(unsigned char *)(a1 + 8) = 0;
      OUTLINED_FUNCTION_103();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  }
}

uint64_t sub_1C997FC48()
{
  swift_allocObject();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  sub_1C997FC94(v1, v2, v3);
  return v0;
}

uint64_t sub_1C997FC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_123_2();
  OUTLINED_FUNCTION_123_2();
  type metadata accessor for PromptForDisambiguationFlowAsync();
  type metadata accessor for AnyPromptForDisambiguationFlowStrategy();
  swift_unknownObjectRetain();
  sub_1C997FDD8();
  sub_1C95FD654(a3, (uint64_t)v8);
  swift_getWitnessTable();
  uint64_t v6 = PromptForDisambiguationFlowAsync.__allocating_init<A>(items:strategy:outputPublisher:)();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a3);
  *(void *)(v4 + 16) = v6;
  return v4;
}

uint64_t sub_1C997FDD8()
{
  OUTLINED_FUNCTION_70_13();
  OUTLINED_FUNCTION_14_36();
  sub_1C998916C();
  return v0;
}

uint64_t PromptForDisambiguationFlow.__allocating_init(items:strategy:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C95FD654(a3, (uint64_t)&v8);
  uint64_t v4 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v5 = OUTLINED_FUNCTION_11_14();
  sub_1C95FD5D8(&v8, v5 + 16);
  uint64_t v9 = v4;
  uint64_t v10 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(void *)&long long v8 = v5;
  OUTLINED_FUNCTION_55();
  uint64_t v6 = sub_1C997FC48();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v6;
}

uint64_t PromptForDisambiguationFlow.on(input:)()
{
  PromptForDisambiguationFlowAsync.on(input:)();
  return v0 & 1;
}

void PromptForDisambiguationFlowAsync.on(input:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  uint64_t v6 = *v0;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589210);
  uint64_t v8 = OUTLINED_FUNCTION_22(v7);
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v72 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OUTLINED_FUNCTION_47();
  LOBYTE(v0) = type metadata accessor for Parse(v11);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_89_6();
  MEMORY[0x1F4188790](v14, v15);
  uint64_t v17 = (char *)&v65 - v16;
  uint64_t v73 = *(void *)(v6 + 80);
  unint64_t v18 = (uint8_t *)type metadata accessor for PromptForDisambiguationFlowAsync.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v21, v22);
  OUTLINED_FUNCTION_7_37();
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v65 - v25;
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_82_2();
  v27();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint8_t *))(v20 + 8))(v26, v18);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v39 = sub_1C9BECF88();
    int v40 = OUTLINED_FUNCTION_34(v39, (uint64_t)qword_1EBC7A520);
    os_log_type_t v41 = sub_1C9BEDC78();
    if (!OUTLINED_FUNCTION_4(v41)) {
      goto LABEL_13;
    }
    uint64_t v42 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v42);
    uint64_t v43 = "PromptForDisambiguationFlow received input but is not in the promptSent state. Ignoring.";
    goto LABEL_12;
  }
  uint64_t v28 = *(void *)v26;
  uint64_t v29 = *((void *)v26 + 2);
  uint64_t v67 = *((void *)v26 + 1);
  uint64_t v68 = v29;
  int v69 = v26[24];
  uint64_t v70 = *((void *)v26 + 4);
  uint64_t v71 = v28;
  os_log_type_t v30 = v26[40];
  uint64_t v66 = type metadata accessor for Input(0);
  uint64_t v31 = v5 + *(int *)(v66 + 20);
  sub_1C999A52C(v31, (uint64_t)v17, (void (*)(void))type metadata accessor for Parse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1C999A580((uint64_t)v17, (void (*)(void))type metadata accessor for Parse);
  if (EnumCaseMultiPayload == 10)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1C9BECF88();
    uint64_t v34 = (void *)OUTLINED_FUNCTION_34(v33, (uint64_t)qword_1EBC7A520);
    os_log_type_t v35 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_65_0(v35))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_39_1(&dword_1C95F9000, v36, v37, "PromptForDisambiguationFlow received empty parse. Will handle and reprompt.");
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v38 = v67;
    *(void *)uint64_t v1 = v71;
    *(void *)(v1 + 8) = v38;
    *(void *)(v1 + 16) = v68;
    *(unsigned char *)(v1 + 24) = v69;
    *(void *)(v1 + 32) = v70;
    *(unsigned char *)(v1 + 40) = v30;
    OUTLINED_FUNCTION_55();
LABEL_39:
    swift_storeEnumTagMultiPayload();
    sub_1C998201C(v1);
    goto LABEL_40;
  }
  if ((sub_1C966630C(v5) & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1C9BECF88();
    unsigned int v51 = (void *)OUTLINED_FUNCTION_34(v50, (uint64_t)qword_1EBC7A520);
    os_log_type_t v52 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_65_0(v52))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_39_1(&dword_1C95F9000, v53, v54, "PromptForDisambiguationFlow received low confidence input. Treating as misunderstood and will reprompt.");
      OUTLINED_FUNCTION_11_4();
    }

    type metadata accessor for PaginatedItemContainer();
    uint64_t v55 = v1 + *(int *)(OUTLINED_FUNCTION_77() + 48);
    sub_1C999A52C(v5, v1, (void (*)(void))type metadata accessor for Input);
    OUTLINED_FUNCTION_61_16();
    *(unsigned char *)(v55 + 40) = v30;
    OUTLINED_FUNCTION_55();
    goto LABEL_39;
  }
  uint64_t v44 = v3[2];
  char v0 = *(void **)(v44 + 40);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v44 + 32))(&v76, v5);
  if (!(_BYTE)v76)
  {
    swift_bridgeObjectRelease();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_1C9BECF88();
    unint64_t v57 = (void *)OUTLINED_FUNCTION_34(v56, (uint64_t)qword_1EBC7A520);
    os_log_type_t v58 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_65_0(v58))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_39_1(&dword_1C95F9000, v59, v60, "PromptForDisambiguationFlow received cancel action from strategy. Transitioning to cancelled state.");
      OUTLINED_FUNCTION_11_4();
    }

    OUTLINED_FUNCTION_55();
    goto LABEL_39;
  }
  if (v76 == 1)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_1C9BECF88();
    unsigned int v46 = OUTLINED_FUNCTION_34(v45, (uint64_t)qword_1EBC7A520);
    os_log_type_t v47 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_65_0(v47))
    {
      uint64_t v48 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v48 = 0;
      _os_log_impl(&dword_1C95F9000, v46, v30, "PromptForDisambiguationFlow received handle action from strategy. Transitioning to responseReceived state.", v48, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C9608D98((uint64_t)(v3 + 8), (uint64_t)v74, &qword_1EA589190);
    if (v75)
    {
      __swift_project_boxed_opaque_existential_1(v74, v75);
      sub_1C999A52C(v31, v2, (void (*)(void))type metadata accessor for Parse);
      uint64_t v49 = (uint64_t)v72;
      sub_1C998260C();
      sub_1C9BEC258();
      sub_1C95FE81C(v49, &qword_1EA589210);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    }
    else
    {
      sub_1C95FE81C((uint64_t)v74, &qword_1EA589190);
    }
    type metadata accessor for PaginatedItemContainer();
    uint64_t v64 = v1 + *(int *)(OUTLINED_FUNCTION_77() + 48);
    sub_1C999A52C(v5, v1, (void (*)(void))type metadata accessor for Input);
    OUTLINED_FUNCTION_61_16();
    *(unsigned char *)(v64 + 40) = v30;
    OUTLINED_FUNCTION_55();
    goto LABEL_39;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v61 = sub_1C9BECF88();
  int v40 = OUTLINED_FUNCTION_34(v61, (uint64_t)qword_1EBC7A520);
  os_log_type_t v62 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_4(v62))
  {
    unint64_t v63 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v63);
    uint64_t v43 = "PromptForDisambiguationFlow received ignore action from strategy. Ignoring.";
LABEL_12:
    _os_log_impl(&dword_1C95F9000, v40, (os_log_type_t)v0, v43, v18, 2u);
    OUTLINED_FUNCTION_11_4();
  }
LABEL_13:

LABEL_40:
  OUTLINED_FUNCTION_10();
}

void PromptForDisambiguationFlow.execute(completion:)()
{
}

uint64_t PromptForDisambiguationFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9980654);
}

uint64_t sub_1C9980654()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9618A08;
  OUTLINED_FUNCTION_60_1();
  return PromptForDisambiguationFlowAsync.execute()();
}

uint64_t PromptForDisambiguationFlowAsync.execute()()
{
  OUTLINED_FUNCTION_24();
  v1[30] = v2;
  v1[31] = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = type metadata accessor for Input(0);
  v1[32] = v4;
  OUTLINED_FUNCTION_22(v4);
  v1[33] = OUTLINED_FUNCTION_16();
  v1[34] = *(void *)(v3 + 80);
  uint64_t v5 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  v1[35] = v5;
  OUTLINED_FUNCTION_5_0(v5);
  v1[36] = v6;
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99807D8()
{
  uint64_t v84 = v0;
  char v2 = v0 - 24;
  uint64_t v3 = *(void *)(v0 + 304);
  uint64_t v5 = *(void *)(v0 + 280);
  uint64_t v4 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 248) + *(void *)(**(void **)(v0 + 248) + 128);
  OUTLINED_FUNCTION_84_1();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v3, v6, v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_33;
    case 2u:
      uint64_t v22 = *(void *)(v0 + 304);
      uint64_t v23 = *(void *)(v0 + 264);
      type metadata accessor for PaginatedItemContainer();
      uint64_t v24 = v22 + *(int *)(OUTLINED_FUNCTION_77() + 48);
      uint64_t v25 = *(void *)v24;
      *(void *)(v0 + 352) = *(void *)v24;
      uint64_t v26 = *(void *)(v24 + 8);
      uint64_t v27 = *(void *)(v24 + 16);
      char v28 = *(unsigned char *)(v24 + 24);
      uint64_t v29 = *(void *)(v24 + 32);
      char v30 = *(unsigned char *)(v24 + 40);
      sub_1C999A4CC(v22, v23, (void (*)(void))type metadata accessor for Input);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v31 = sub_1C9BECF88();
      uint64_t v32 = (void *)OUTLINED_FUNCTION_34(v31, (uint64_t)qword_1EBC7A520);
      os_log_type_t v33 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v33))
      {
        uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v34);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v35, v36, "PromptForDisambiguationFlow parsing response from user");
        OUTLINED_FUNCTION_11_4();
      }

      *(void *)(v0 + 112) = v25;
      *(void *)(v0 + 120) = v26;
      *(void *)(v0 + 128) = v27;
      *(unsigned char *)(v0 + 136) = v28;
      *(void *)(v0 + 144) = v29;
      *(unsigned char *)(v0 + 152) = v30;
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 360) = v37;
      void *v37 = v38;
      v37[1] = sub_1C99812C8;
      OUTLINED_FUNCTION_131_1();
      OUTLINED_FUNCTION_6_11();
      return sub_1C9984784();
    case 3u:
      uint64_t v40 = *(void *)(v0 + 304);
      type metadata accessor for PaginatedItemContainer();
      os_log_type_t v41 = (uint64_t *)(v40 + *(int *)(OUTLINED_FUNCTION_77() + 48));
      uint64_t v42 = *v41;
      *(void *)(v0 + 400) = *v41;
      OUTLINED_FUNCTION_54_18((uint64_t)v41);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1C9BECF88();
      uint64_t v44 = (void *)OUTLINED_FUNCTION_34(v43, (uint64_t)qword_1EBC7A520);
      os_log_type_t v45 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v45))
      {
        unsigned int v46 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v46);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v47, v48, "PromptForDisambiguationFlow could not make out user response. Reprompting.");
        OUTLINED_FUNCTION_11_4();
      }

      *(void *)(v0 + 16) = v42;
      *(_OWORD *)(v0 + 24) = v82;
      *(unsigned char *)(v0 + 40) = v1;
      *(void *)(v0 + 48) = v7;
      *(unsigned char *)(v0 + 56) = v2;
      uint64_t v49 = (void *)swift_task_alloc();
      *(void *)(v0 + 408) = v49;
      void *v49 = v0;
      v49[1] = sub_1C9981510;
      OUTLINED_FUNCTION_99_5();
      OUTLINED_FUNCTION_6_11();
      return sub_1C9985840();
    case 4u:
      unsigned int v51 = *(uint64_t **)(v0 + 304);
      uint64_t v52 = *v51;
      *(void *)(v0 + 376) = *v51;
      OUTLINED_FUNCTION_54_18((uint64_t)v51);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v53 = sub_1C9BECF88();
      uint64_t v54 = (void *)OUTLINED_FUNCTION_34(v53, (uint64_t)qword_1EBC7A520);
      os_log_type_t v55 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v55))
      {
        uint64_t v56 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v56);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v57, v58, "PromptForDisambiguationFlow received an empty parse. Reprompting.");
        OUTLINED_FUNCTION_11_4();
      }

      *(void *)(v0 + 64) = v52;
      *(_OWORD *)(v0 + 72) = v82;
      *(unsigned char *)(v0 + 88) = v1;
      *(void *)(v0 + 96) = v7;
      *(unsigned char *)(v0 + 104) = v2;
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v59;
      *uint64_t v59 = v0;
      v59[1] = sub_1C998142C;
      OUTLINED_FUNCTION_99_5();
      OUTLINED_FUNCTION_6_11();
      return sub_1C99854E0();
    case 5u:
      (*(void (**)(void, void))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 280));
      goto LABEL_33;
    case 6u:

LABEL_33:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C9BECF88();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EBC7A520);
      swift_retain_n();
      os_log_type_t v62 = sub_1C9BECF78();
      os_log_type_t v63 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_96(v63))
      {
        uint64_t v64 = *(void *)(v0 + 296);
        uint64_t v65 = *(void *)(v0 + 280);
        uint64_t v66 = (uint8_t *)OUTLINED_FUNCTION_67();
        uint64_t v83 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)uint64_t v66 = 136315138;
        v7(v64, v6, v65);
        swift_getWitnessTable();
        uint64_t v67 = sub_1C9BED5E8();
        *(void *)(v0 + 232) = sub_1C95FF228(v67, v68, &v83);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1C95F9000, v62, v1, "PromptForDisambiguationFlow executed in an unexpected state (%s). Transitioning to error", v66, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v69 = *(void *)(v0 + 296);
      uint64_t v70 = *(void *)(v0 + 240);
      *(void *)uint64_t v69 = sub_1C9981B18();
      *(unsigned char *)(v69 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1C998201C(v69);
      static ExecuteResponse.complete()(v70);
      OUTLINED_FUNCTION_49_16();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_6_11();
      __asm { BRAA            X1, X16 }
      return result;
    case 7u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v73 = sub_1C9BECF88();
      uint64_t v74 = (void *)OUTLINED_FUNCTION_34(v73, (uint64_t)qword_1EBC7A520);
      os_log_type_t v75 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v75))
      {
        uint64_t v76 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v76);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v77, v78, "PromptForDisambiguationFlow sending cancellation response");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 336) = v79;
      void *v79 = v80;
      v79[1] = sub_1C99811EC;
      OUTLINED_FUNCTION_6_11();
      uint64_t result = sub_1C9984488();
      break;
    default:
      uint64_t v8 = *(uint64_t **)(v0 + 304);
      uint64_t v9 = *v8;
      *(void *)(v0 + 312) = *v8;
      OUTLINED_FUNCTION_54_18((uint64_t)v8);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v10 = sub_1C9BECF88();
      uint64_t v11 = (void *)OUTLINED_FUNCTION_34(v10, (uint64_t)qword_1EBC7A520);
      os_log_type_t v12 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v12))
      {
        uint64_t v13 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v13);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v14, v15, "PromptForDisambiguationFlow sending prompt for disambiguation");
        OUTLINED_FUNCTION_11_4();
      }

      *(void *)(v0 + 160) = v9;
      *(_OWORD *)(v0 + 168) = v82;
      *(unsigned char *)(v0 + 184) = v1;
      *(void *)(v0 + 192) = v7;
      *(unsigned char *)(v0 + 200) = v2;
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 320) = v16;
      *uint64_t v16 = v17;
      v16[1] = sub_1C99810A4;
      OUTLINED_FUNCTION_99_5();
      OUTLINED_FUNCTION_6_11();
      uint64_t result = sub_1C9983954(v18, v19);
      break;
  }
  return result;
}

uint64_t sub_1C99810A4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 328) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9981188()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99811EC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 344) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99812C8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 368) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99813AC()
{
  OUTLINED_FUNCTION_24();
  sub_1C999A580(*(void *)(v0 + 264), (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C998142C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 392) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9981510()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 416) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99815F4()
{
  OUTLINED_FUNCTION_24();
  sub_1C999A580(*(void *)(v0 + 304), (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9981674()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v1 + 328);
  OUTLINED_FUNCTION_20_47();
  id v4 = v3;
  sub_1C998201C(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v5();
}

uint64_t sub_1C9981710()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = *(void **)(v1 + 344);
  OUTLINED_FUNCTION_20_47();
  id v4 = v3;
  sub_1C998201C(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v5();
}

uint64_t sub_1C99817A4()
{
  OUTLINED_FUNCTION_33();
  sub_1C999A580(*(void *)(v1 + 264), (void (*)(void))type metadata accessor for Input);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v1 + 368);
  OUTLINED_FUNCTION_20_47();
  id v4 = v3;
  sub_1C998201C(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v5();
}

uint64_t sub_1C9981860()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void **)(v1 + 392);
  OUTLINED_FUNCTION_20_47();
  id v4 = v3;
  sub_1C998201C(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v5();
}

uint64_t sub_1C99818FC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = *(void *)(v1 + 304);
  swift_bridgeObjectRelease();
  sub_1C999A580(v3, (void (*)(void))type metadata accessor for Input);
  id v4 = *(void **)(v1 + 416);
  OUTLINED_FUNCTION_20_47();
  id v5 = v4;
  sub_1C998201C(v0);

  static ExecuteResponse.complete()(v2);
  OUTLINED_FUNCTION_49_16();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v6();
}

uint64_t PromptForDisambiguationFlow.deinit()
{
  swift_release();
  return v0;
}

uint64_t PromptForDisambiguationFlow.__deallocating_deinit()
{
  PromptForDisambiguationFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9981A0C()
{
  return PromptForDisambiguationFlow.on(input:)() & 1;
}

void sub_1C9981A34()
{
}

uint64_t sub_1C9981A58(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615010;
  return PromptForDisambiguationFlow.execute()(a1);
}

uint64_t sub_1C9981AF4@<X0>(uint64_t a1@<X8>)
{
  return PromptForDisambiguationFlow.exitValue.getter(a1);
}

uint64_t sub_1C9981B18()
{
  uint64_t v1 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C9BEE188();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_1C9BED6B8();
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 128);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  swift_getWitnessTable();
  sub_1C9BEE5F8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  type metadata accessor for CommandFailure();
  swift_allocObject();
  uint64_t v9 = CommandFailure.init(errorCode:reason:)(-1, v7, v8);
  sub_1C9609684((unint64_t *)&qword_1EA5942F0, (void (*)(uint64_t))type metadata accessor for CommandFailure);
  uint64_t result = swift_allocError();
  *uint64_t v11 = v9;
  return result;
}

void sub_1C9981D44()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v0;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_8();
  uint64_t v3 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v4, v5);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C9BECF88();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v7 = sub_1C9BECF78();
  os_log_type_t v8 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_96(v8))
  {
    os_log_type_t v23 = v1;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v22 = v7;
    uint64_t v10 = v2[13];
    uint64_t v11 = v2[14];
    uint64_t v13 = v2[15];
    uint64_t v12 = v2[16];
    swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x1CB78A7E0](v10, v11, v13, v12);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    sub_1C95FF228(v14, v16, &v24);
    sub_1C9BEDF68();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    OUTLINED_FUNCTION_84_1();
    OUTLINED_FUNCTION_82_2();
    v17();
    swift_release();
    unint64_t v18 = sub_1C9987F30(v3);
    unint64_t v20 = v19;
    OUTLINED_FUNCTION_64();
    v21();
    sub_1C95FF228(v18, v20, &v24);
    sub_1C9BEDF68();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v22, v23, "PromptForDisambiguationFlow [%s] transitioned to state %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_release_n();
  }
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C998201C(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess();
  sub_1C9981D44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void PromptForDisambiguationFlowAsync.init<A>(items:strategy:outputPublisher:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v23 = v6;
  uint64_t v24 = v7;
  uint64_t v25 = *v0;
  uint64_t v8 = v25;
  uint64_t v9 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12, v13);
  unint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEAAF8();
  sub_1C9BEAAB8();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v9);
  v1[13] = sub_1C9658304(8);
  v1[14] = v16;
  v1[15] = v17;
  v1[16] = v18;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 24))(&v28, v5, v3);
  uint64_t v26 = v28;
  char v27 = v29;
  PaginatedItemContainer.init(items:paginationStyle:)(v23, (uint64_t)&v26, *(void *)(v8 + 80), (uint64_t)&v30);
  __n128 v19 = v31;
  *(void *)((char *)v1 + *(void *)(*v1 + 128)) = v30;
  OUTLINED_FUNCTION_126_0(v19);
  type metadata accessor for PromptForDisambiguationFlowAsync.State();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for AnyPromptForDisambiguationFlowStrategy();
  swift_unknownObjectRetain();
  v1[2] = sub_1C99823A4();
  uint64_t v20 = v24;
  sub_1C95FD654(v24, (uint64_t)(v1 + 3));
  (*(void (**)(uint64_t, uint64_t))(v3 + 88))(v5, v3);
  sub_1C99823D8(v21, (uint64_t)&v30);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v20);
  sub_1C998B5E8((uint64_t)&v30, (uint64_t)(v1 + 8));
  OUTLINED_FUNCTION_10();
}

uint64_t type metadata accessor for DisambiguationResult.DisambiguationResultType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99823A4()
{
  OUTLINED_FUNCTION_70_13();
  OUTLINED_FUNCTION_14_36();
  sub_1C9988448();
  return v0;
}

double sub_1C99823D8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (!a1)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C9BECF88();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBC7A520);
    uint64_t v11 = sub_1C9BECF78();
    os_log_type_t v12 = sub_1C9BEDC88();
    if (!os_log_type_enabled(v11, v12)) {
      goto LABEL_15;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    uint64_t v14 = "PromptForDisambiguationFlow PervasiveEntityResolution use case is undefined";
    goto LABEL_14;
  }
  uint64_t v17 = &type metadata for FeatureFlagDefinitions.Core;
  unint64_t v3 = sub_1C96E6668();
  unint64_t v18 = v3;
  v16[0] = 1;
  swift_bridgeObjectRetain();
  char v4 = sub_1C9BEAD08();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if ((v4 & 1) == 0)
  {
    uint64_t v17 = &type metadata for FeatureFlagDefinitions.Core;
    unint64_t v18 = v3;
    v16[0] = 2;
    char v5 = sub_1C9BEAD08();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if ((v5 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v15 = sub_1C9BECF88();
      __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A520);
      uint64_t v11 = sub_1C9BECF78();
      os_log_type_t v12 = sub_1C9BEDC78();
      if (!os_log_type_enabled(v11, v12)) {
        goto LABEL_15;
      }
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      uint64_t v14 = "PromptForDisambiguationFlow PervasiveEntityResolution data collection is not enabled";
LABEL_14:
      _os_log_impl(&dword_1C95F9000, v11, v12, v14, v13, 2u);
      MEMORY[0x1CB78C440](v13, -1, -1);
LABEL_15:

      goto LABEL_16;
    }
  }
  uint64_t v6 = sub_1C9BEC238();
  uint64_t v7 = sub_1C9BEC228();
  if (v7)
  {
    uint64_t v9 = MEMORY[0x1E4F9FE10];
    *(void *)(a2 + 24) = v6;
    *(void *)(a2 + 32) = v9;
    *(void *)a2 = v7;
    return result;
  }
LABEL_16:
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_1C998260C()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v192 = v3;
  sub_1C9BEC0F8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v189 = v5;
  uint64_t v190 = v4;
  MEMORY[0x1F4188790](v4, v6);
  OUTLINED_FUNCTION_2_0();
  uint64_t v187 = v7;
  OUTLINED_FUNCTION_3();
  uint64_t v10 = MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_98_5(v10, v11, v12, v13, v14, v15, v16, v17, v168);
  uint64_t v173 = sub_1C9BECD18();
  OUTLINED_FUNCTION_0_2();
  uint64_t v172 = v18;
  MEMORY[0x1F4188790](v19, v20);
  OUTLINED_FUNCTION_33_0();
  uint64_t v181 = v21;
  uint64_t v182 = sub_1C9BEAE78();
  OUTLINED_FUNCTION_0_2();
  uint64_t v184 = v22;
  MEMORY[0x1F4188790](v23, v24);
  OUTLINED_FUNCTION_33_0();
  uint64_t v174 = v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA593C30);
  uint64_t v27 = OUTLINED_FUNCTION_22(v26);
  MEMORY[0x1F4188790](v27, v28);
  OUTLINED_FUNCTION_33_0();
  OUTLINED_FUNCTION_122_1(v29);
  uint64_t v180 = sub_1C9BEB0C8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v179 = v30;
  MEMORY[0x1F4188790](v31, v32);
  OUTLINED_FUNCTION_33_0();
  uint64_t v178 = v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79450);
  uint64_t v35 = OUTLINED_FUNCTION_22(v34);
  MEMORY[0x1F4188790](v35, v36);
  int v191 = (char *)&v168 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58BAF0);
  uint64_t v39 = OUTLINED_FUNCTION_22(v38);
  MEMORY[0x1F4188790](v39, v40);
  OUTLINED_FUNCTION_2_0();
  uint64_t v185 = (_DWORD *)v41;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v42, v43);
  OUTLINED_FUNCTION_70_14();
  uint64_t v186 = v44;
  OUTLINED_FUNCTION_47();
  uint64_t v176 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v45, v46);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v47, v48);
  uint64_t v183 = (char *)&v168 - v49;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v50, v51);
  uint64_t v53 = (char *)&v168 - v52;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v54, v55);
  OUTLINED_FUNCTION_6_0();
  uint64_t v58 = (void *)(v57 - v56);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA593C38);
  uint64_t v60 = OUTLINED_FUNCTION_22(v59);
  MEMORY[0x1F4188790](v60, v61);
  OUTLINED_FUNCTION_7_37();
  MEMORY[0x1F4188790](v62, v63);
  uint64_t v65 = (char *)&v168 - v64;
  uint64_t v66 = sub_1C9BED5C8();
  uint64_t v67 = OUTLINED_FUNCTION_22(v66);
  MEMORY[0x1F4188790](v67, v68);
  OUTLINED_FUNCTION_6_0();
  sub_1C9BEA5B8();
  swift_allocObject();
  sub_1C9BEA5A8();
  sub_1C9609684(&qword_1EBC782F8, (void (*)(uint64_t))type metadata accessor for Parse);
  uint64_t v193 = (void (*)(uint64_t, uint64_t, uint64_t))v2;
  uint64_t v69 = sub_1C9BEA598();
  unint64_t v71 = v70;
  uint64_t v72 = (uint64_t)v191;
  unint64_t v169 = v53;
  uint64_t v170 = v0;
  size_t v171 = v65;
  swift_release();
  sub_1C9BED5B8();
  uint64_t v73 = sub_1C9BED588();
  if (!v74)
  {
    uint64_t v83 = (uint64_t)v193;
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v84 = sub_1C9BECF88();
    char v85 = OUTLINED_FUNCTION_34(v84, (uint64_t)qword_1EBC7A520);
    os_log_type_t v86 = sub_1C9BEDC88();
    if (os_log_type_enabled(v85, v86))
    {
      unint64_t v87 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)unint64_t v87 = 0;
      _os_log_impl(&dword_1C95F9000, v85, v86, "PervasiveEntityResolution nil encoded USO parse to JSON", v87, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    sub_1C960B0D8(v69, v71);

    sub_1C999A580(v83, (void (*)(void))type metadata accessor for Parse);
    uint64_t v88 = 1;
    uint64_t v89 = v192;
    goto LABEL_4;
  }
  uint64_t v75 = v73;
  uint64_t v76 = v74;
  sub_1C960B0D8(v69, v71);
  uint64_t v77 = (uint64_t)v171;
  uint64_t v78 = v190;
  __swift_storeEnumTagSinglePayload((uint64_t)v171, 1, 1, v190);
  unsigned int v79 = v193;
  uint64_t v80 = v58;
  sub_1C999A52C((uint64_t)v193, (uint64_t)v58, (void (*)(void))type metadata accessor for Parse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v168 = v75;
  switch(EnumCaseMultiPayload)
  {
    case 0:
      sub_1C999A580((uint64_t)v58, (void (*)(void))type metadata accessor for Parse);
      goto LABEL_20;
    case 2:
      uint64_t v100 = *v58;
      uint64_t v99 = v58[1];
      uint64_t v101 = v80[2];
      if (v101)
      {
        sub_1C9606B08();
        if (*((void *)&v196 + 1))
        {
          if (OUTLINED_FUNCTION_82_8())
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v102 = v194[0];
            sub_1C95FE81C(v77, &qword_1EA593C38);
            *(void *)uint64_t v77 = v102;
LABEL_45:
            uint64_t v133 = OUTLINED_FUNCTION_76_10();
            v134(v133);
            __swift_storeEnumTagSinglePayload(v77, 0, 1, v78);
            uint64_t v89 = v192;
            uint64_t v135 = v188;
            goto LABEL_56;
          }
          goto LABEL_37;
        }
      }
      else
      {
        long long v195 = 0u;
        long long v196 = 0u;
      }
      sub_1C95FE81C((uint64_t)&v195, &qword_1EBC78700);
      if (!v101)
      {
        long long v195 = 0u;
        long long v196 = 0u;
        goto LABEL_41;
      }
LABEL_37:
      sub_1C9606B08();
      if (*((void *)&v196 + 1))
      {
        if (OUTLINED_FUNCTION_82_8()) {
          goto LABEL_44;
        }
        goto LABEL_42;
      }
LABEL_41:
      sub_1C95FE81C((uint64_t)&v195, &qword_1EBC78700);
      if (!v101)
      {
        long long v195 = 0u;
        long long v196 = 0u;
        goto LABEL_49;
      }
LABEL_42:
      sub_1C9606B08();
      if (!*((void *)&v196 + 1))
      {
LABEL_49:
        sub_1C95FE81C((uint64_t)&v195, &qword_1EBC78700);
        goto LABEL_50;
      }
      if (OUTLINED_FUNCTION_82_8())
      {
LABEL_44:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v102 = v194[0];
        uint64_t v132 = v194[1];
        sub_1C95FE81C(v77, &qword_1EA593C38);
        *(void *)uint64_t v77 = v102;
        *(void *)(v77 + 8) = v132;
        goto LABEL_45;
      }
LABEL_50:
      int v191 = v76;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v137 = sub_1C9BECF88();
      __swift_project_value_buffer(v137, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v138 = sub_1C9BECF78();
      os_log_type_t v139 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_96(v139))
      {
        long long v140 = (uint8_t *)OUTLINED_FUNCTION_67();
        uint64_t v141 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)long long v140 = 136315138;
        v194[0] = v141;
        *(void *)&long long v195 = v100;
        *((void *)&v195 + 1) = v99;
        *(void *)&long long v196 = v101;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v142 = sub_1C9BED5D8();
        *(void *)&long long v195 = sub_1C95FF228(v142, v143, v194);
        uint64_t v77 = (uint64_t)v171;
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C95F9000, v138, (os_log_type_t)v76, "PervasiveEntityResolution could not extract selection from directInvocation:  %s.", v140, 0xCu);
        OUTLINED_FUNCTION_41_0();
        unsigned int v79 = v193;
        OUTLINED_FUNCTION_11_4();
        uint64_t v78 = v190;
        OUTLINED_FUNCTION_11_4();
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      uint64_t v89 = v192;
      uint64_t v135 = v188;
      uint64_t v102 = v189;
LABEL_56:
      uint64_t v94 = v170;
LABEL_69:
      sub_1C9608D98(v77, v94, &qword_1EA593C38);
      if (__swift_getEnumTagSinglePayload(v94, 1, v78) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1C999A580((uint64_t)v79, (void (*)(void))type metadata accessor for Parse);
        sub_1C95FE81C(v77, &qword_1EA593C38);
        sub_1C95FE81C(v94, &qword_1EA593C38);
        uint64_t v88 = 1;
      }
      else
      {
        OUTLINED_FUNCTION_49_4();
        v156(v155);
        OUTLINED_FUNCTION_55();
        OUTLINED_FUNCTION_82_2();
        v158(v157);
        sub_1C9BEC108();
        sub_1C999A580((uint64_t)v79, (void (*)(void))type metadata accessor for Parse);
        (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v135, v78);
        sub_1C95FE81C(v77, &qword_1EA593C38);
        uint64_t v88 = 0;
      }
LABEL_4:
      uint64_t v82 = sub_1C9BEC118();
      __swift_storeEnumTagSinglePayload(v89, v88, 1, v82);
      OUTLINED_FUNCTION_10();
      return;
    case 3:
      swift_unknownObjectRelease();
LABEL_20:
      uint64_t v94 = v170;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v103 = sub_1C9BECF88();
      unsigned int v104 = (void *)OUTLINED_FUNCTION_34(v103, (uint64_t)qword_1EBC7A520);
      os_log_type_t v105 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_4(v105))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_13_0(&dword_1C95F9000, v106, v107, "PervasiveEntityResolution currently doesn't handle NLv3/NLv4 parse.");
        OUTLINED_FUNCTION_11_4();
      }

      goto LABEL_67;
    case 6:
      sub_1C999A4CC((uint64_t)v58, (uint64_t)v169, (void (*)(void))type metadata accessor for USOParse);
      uint64_t v108 = sub_1C9BEAEC8();
      sub_1C9612ECC(v108);
      swift_bridgeObjectRelease();
      uint64_t v109 = sub_1C9BEB018();
      if (__swift_getEnumTagSinglePayload(v72, 1, v109) == 1)
      {
        sub_1C95FE81C(v72, &qword_1EBC79450);
        uint64_t v110 = sub_1C9BEAEA8();
        uint64_t v111 = v186;
        uint64_t v112 = v186;
        uint64_t v113 = 1;
      }
      else
      {
        sub_1C9BEAFC8();
        OUTLINED_FUNCTION_112();
        OUTLINED_FUNCTION_50();
        OUTLINED_FUNCTION_37();
        v115(v114);
        uint64_t v111 = v186;
        sub_1C9BEB098();
        OUTLINED_FUNCTION_64();
        v117(v116);
        uint64_t v110 = sub_1C9BEAEA8();
        uint64_t v112 = v111;
        uint64_t v113 = 0;
      }
      __swift_storeEnumTagSinglePayload(v112, v113, 1, v110);
      uint64_t v118 = (uint64_t)v185;
      sub_1C9608D98(v111, (uint64_t)v185, &qword_1EA58BAF0);
      sub_1C9BEAEA8();
      int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v118, 1, v110);
      uint64_t v94 = v170;
      if (EnumTagSinglePayload == 1)
      {
        sub_1C95FE81C(v118, &qword_1EA58BAF0);
        uint64_t v120 = (uint64_t)v169;
        goto LABEL_60;
      }
      uint64_t v121 = sub_1C9BEAE98();
      OUTLINED_FUNCTION_112();
      OUTLINED_FUNCTION_37();
      v123(v122);
      uint64_t v124 = *(void *)(v121 + 16);
      if (!v124)
      {
        uint64_t v131 = 1;
        uint64_t v127 = v182;
        goto LABEL_47;
      }
      int v191 = v76;
      uint64_t v76 = (char *)(v184 + 16);
      unsigned int v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v184 + 16);
      OUTLINED_FUNCTION_13_58();
      uint64_t v126 = v121 + v125;
      uint64_t v111 = (uint64_t)(v76 - 8);
      uint64_t v77 = *((void *)v76 + 7);
      uint64_t v185 = (_DWORD *)v121;
      swift_bridgeObjectRetain();
      uint64_t v127 = v182;
      uint64_t v128 = v174;
      while (1)
      {
        v79(v128, v126, v127);
        if (sub_1C9BEAE68()) {
          break;
        }
        OUTLINED_FUNCTION_50();
        OUTLINED_FUNCTION_121_2();
        v130(v129);
        v126 += v77;
        if (!--v124)
        {
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_92_9();
LABEL_47:
          uint64_t v136 = v177;
          goto LABEL_58;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v136 = v177;
      OUTLINED_FUNCTION_49_4();
      v145(v144);
      OUTLINED_FUNCTION_92_9();
LABEL_58:
      __swift_storeEnumTagSinglePayload(v136, v131, 1, v127);
      swift_bridgeObjectRelease();
      int v146 = __swift_getEnumTagSinglePayload(v136, 1, v127);
      uint64_t v78 = v190;
      uint64_t v120 = (uint64_t)v169;
      if (v146 != 1)
      {
        uint64_t v102 = v181;
        sub_1C9BEAE58();
        OUTLINED_FUNCTION_64();
        v160(v159);
        uint64_t v161 = sub_1C9BECD08();
        uint64_t v163 = v162;
        OUTLINED_FUNCTION_37();
        v165(v164);
        sub_1C95FE81C(v111, &qword_1EA58BAF0);
        sub_1C999A580((uint64_t)v169, (void (*)(void))type metadata accessor for USOParse);
        sub_1C95FE81C(v77, &qword_1EA593C38);
        *(void *)uint64_t v77 = v161;
        *(void *)(v77 + 8) = v163;
        uint64_t v166 = OUTLINED_FUNCTION_76_10();
        v167(v166);
        __swift_storeEnumTagSinglePayload(v77, 0, 1, v78);
        uint64_t v89 = v192;
        goto LABEL_68;
      }
      sub_1C95FE81C(v136, &qword_1EA593C30);
LABEL_60:
      uint64_t v147 = (uint64_t)v183;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v148 = sub_1C9BECF88();
      __swift_project_value_buffer(v148, (uint64_t)qword_1EBC7A520);
      sub_1C999A52C(v120, v147, (void (*)(void))type metadata accessor for USOParse);
      uint64_t v149 = v120;
      size_t v150 = sub_1C9BECF78();
      os_log_type_t v151 = sub_1C9BEDC88();
      if (os_log_type_enabled(v150, v151))
      {
        unint64_t v152 = (_DWORD *)OUTLINED_FUNCTION_67();
        *(void *)&long long v195 = OUTLINED_FUNCTION_35_0();
        int v191 = v76;
        _DWORD *v152 = 136315138;
        uint64_t v185 = v152 + 1;
        sub_1C999A52C(v147, v175, (void (*)(void))type metadata accessor for USOParse);
        uint64_t v153 = sub_1C9BED5D8();
        v194[0] = sub_1C95FF228(v153, v154, (uint64_t *)&v195);
        unsigned int v79 = v193;
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C999A580(v147, (void (*)(void))type metadata accessor for USOParse);
        OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v150, v151, "PervasiveEntityResolution could not extract selection from usoParse:  %s.");
        swift_arrayDestroy();
        uint64_t v78 = v190;
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();

        sub_1C95FE81C(v186, &qword_1EA58BAF0);
        uint64_t v98 = (uint64_t)v169;
      }
      else
      {

        sub_1C999A580(v147, (void (*)(void))type metadata accessor for USOParse);
        sub_1C95FE81C(v111, &qword_1EA58BAF0);
        uint64_t v98 = v149;
      }
      unsigned int v97 = (void (*)(void))type metadata accessor for USOParse;
LABEL_66:
      sub_1C999A580(v98, v97);
LABEL_67:
      uint64_t v89 = v192;
      uint64_t v102 = v189;
LABEL_68:
      uint64_t v135 = v188;
      goto LABEL_69;
    default:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v90 = sub_1C9BECF88();
      uint64_t v91 = (void *)OUTLINED_FUNCTION_34(v90, (uint64_t)qword_1EBC7A520);
      os_log_type_t v92 = sub_1C9BEDC88();
      BOOL v93 = OUTLINED_FUNCTION_4(v92);
      uint64_t v94 = v170;
      if (v93)
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_13_0(&dword_1C95F9000, v95, v96, "PervasiveEntityResolution unhandled response type.");
        OUTLINED_FUNCTION_11_4();
      }

      unsigned int v97 = (void (*)(void))type metadata accessor for Parse;
      uint64_t v98 = (uint64_t)v80;
      goto LABEL_66;
  }
}

void PromptForDisambiguationFlowAsync.execute(completion:)()
{
}

void sub_1C99838F4()
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v1 = v0;
  swift_getWitnessTable();
  uint64_t v2 = OUTLINED_FUNCTION_50();
  Flow.deferToExecuteAsync(_:)(v2, v3, v1, v4);
}

uint64_t sub_1C9983954(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 272) = a1;
  *(void *)(v3 + 280) = v2;
  *(void *)(v3 + 288) = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  *(void *)(v3 + 296) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589170);
  *(void *)(v3 + 304) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589178);
  *(void *)(v3 + 312) = swift_task_alloc();
  *(void *)(v3 + 320) = type metadata accessor for Input(0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a2;
  *(void *)(v3 + 328) = v5;
  *(void *)(v3 + 336) = v6;
  *(_OWORD *)(v3 + 344) = *(_OWORD *)(a2 + 1);
  *(unsigned char *)(v3 + 57) = *((unsigned char *)a2 + 24);
  *(void *)(v3 + 360) = a2[4];
  *(unsigned char *)(v3 + 58) = *((unsigned char *)a2 + 40);
  return MEMORY[0x1F4188298](sub_1C9983AD0, 0, 0);
}

uint64_t sub_1C9983AD0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_127_1();
  v0[2] = v0[42];
  OUTLINED_FUNCTION_133_1(v2, *v1);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[46] = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_1C9983B8C;
  return sub_1C998AAB4((uint64_t)(v0 + 14), (uint64_t)(v0 + 2));
}

uint64_t sub_1C9983B8C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 376) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9983C68()
{
  OUTLINED_FUNCTION_70();
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v1 = *(void *)(v0 + 320);
  sub_1C9985A98(v0 + 112, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    uint64_t v3 = *(void **)(v0 + 280);
    sub_1C95FE81C(*(void *)(v0 + 312), &qword_1EA589178);
    uint64_t v4 = v3 + 3;
    uint64_t v5 = v3[6];
    uint64_t v6 = v3[7];
    __swift_project_boxed_opaque_existential_1(v4, v5);
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 400) = v7;
    *(void *)(v7 + 16) = v0 + 112;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C9984080;
    uint64_t v9 = OUTLINED_FUNCTION_246();
    return sub_1C962F1B0(v9, v10, v7, v5, v6);
  }
  else
  {
    sub_1C999A4CC(*(void *)(v0 + 312), *(void *)(v0 + 328), (void (*)(void))type metadata accessor for Input);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C9BECF88();
    uint64_t v13 = (void *)OUTLINED_FUNCTION_34(v12, (uint64_t)qword_1EBC7A520);
    os_log_type_t v14 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v14))
    {
      uint64_t v15 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v15);
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v16, v17, "PromptForDisambiguationFlow bypassed the prompt with a learned selection");
      OUTLINED_FUNCTION_11_4();
    }
    char v18 = *(unsigned char *)(v0 + 58);
    uint64_t v19 = *(void *)(v0 + 360);
    char v20 = *(unsigned char *)(v0 + 57);
    uint64_t v21 = *(void *)(v0 + 336);
    long long v23 = *(_OWORD *)(v0 + 344);

    *(void *)(v0 + 64) = v21;
    *(_OWORD *)(v0 + 72) = v23;
    *(unsigned char *)(v0 + 88) = v20;
    *(void *)(v0 + 96) = v19;
    *(unsigned char *)(v0 + 104) = v18;
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1C9983EF0;
    OUTLINED_FUNCTION_131_1();
    return sub_1C9984784();
  }
}

uint64_t sub_1C9983EF0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 392) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9983FCC()
{
  OUTLINED_FUNCTION_26_0();
  sub_1C999A580(*(void *)(v0 + 328), (void (*)(void))type metadata accessor for Input);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9984080()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 416) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 152);
  }
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9984178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  sub_1C9608D98(v10[35] + 64, (uint64_t)(v10 + 24), &qword_1EA589190);
  if (v10[27])
  {
    uint64_t v11 = v10[38];
    __swift_project_boxed_opaque_existential_1(v10 + 24, v10[27]);
    sub_1C95FD654((uint64_t)(v10 + 14), (uint64_t)(v10 + 29));
    sub_1C99865F8();
    sub_1C9BEC248();
    sub_1C95FE81C(v11, &qword_1EA589170);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 24));
  }
  else
  {
    sub_1C95FE81C((uint64_t)(v10 + 24), &qword_1EA589190);
  }
  OUTLINED_FUNCTION_127_1();
  uint64_t v12 = v10[37];
  uint64_t v13 = v10[34];
  long long v15 = *v14;
  *(void *)uint64_t v12 = v10[42];
  *(_OWORD *)(v12 + 8) = v15;
  *(unsigned char *)(v12 + 24) = v16;
  *(void *)(v12 + 32) = v17;
  *(unsigned char *)(v12 + 40) = v18;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C998201C(v12);
  static ExecuteResponse.ongoing(requireInput:)(1, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v10 + 14));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_44();
  return v20(v19, v20, v21, v22, v23, v24, v25, v26, a9, a10);
}

uint64_t sub_1C99842F0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_95_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9984368()
{
  OUTLINED_FUNCTION_33();
  sub_1C999A580(*(void *)(v0 + 328), (void (*)(void))type metadata accessor for Input);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  OUTLINED_FUNCTION_95_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9984408()
{
  OUTLINED_FUNCTION_33();
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  OUTLINED_FUNCTION_95_9();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9984488()
{
  OUTLINED_FUNCTION_24();
  v1[7] = v2;
  v1[8] = v0;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_8();
  v1[9] = *(void *)(v3 + 88);
  uint64_t v4 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  v1[10] = v4;
  OUTLINED_FUNCTION_22(v4);
  v1[11] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C998452C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v2);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 96) = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_1C99845FC;
  uint64_t v6 = OUTLINED_FUNCTION_246();
  return sub_1C962F1B0(v6, v7, v8, v2, v3);
}

uint64_t sub_1C99845FC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99846E0()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 56);
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1C998201C(v1);
  static ExecuteResponse.complete()(v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v3();
}

uint64_t sub_1C9984784()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  *(void *)(v1 + 168) = v4;
  *(void *)(v1 + 176) = v0;
  *(void *)(v1 + 160) = v5;
  OUTLINED_FUNCTION_41();
  *(void *)(v1 + 184) = *(void *)(v6 + 80);
  OUTLINED_FUNCTION_8();
  *(void *)(v1 + 192) = *(void *)(v7 + 88);
  uint64_t v8 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  *(void *)(v1 + 200) = v8;
  OUTLINED_FUNCTION_22(v8);
  *(void *)(v1 + 208) = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0();
  *(void *)(v1 + 216) = v9;
  *(void *)(v1 + 224) = swift_task_alloc();
  *(void *)(v1 + 232) = swift_task_alloc();
  *(void *)(v1 + 240) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DisambiguationResult.DisambiguationResultType();
  *(void *)(v1 + 248) = v10;
  OUTLINED_FUNCTION_5_0(v10);
  *(void *)(v1 + 256) = v11;
  *(void *)(v1 + 264) = OUTLINED_FUNCTION_16();
  uint64_t v12 = type metadata accessor for DisambiguationResult();
  *(void *)(v1 + 272) = v12;
  OUTLINED_FUNCTION_5_0(v12);
  *(void *)(v1 + 280) = v13;
  uint64_t v14 = OUTLINED_FUNCTION_16();
  uint64_t v15 = *v3;
  *(void *)(v1 + 288) = v14;
  *(void *)(v1 + 296) = v15;
  *(_OWORD *)(v1 + 304) = *(_OWORD *)(v3 + 1);
  *(unsigned char *)(v1 + 57) = *((unsigned char *)v3 + 24);
  *(void *)(v1 + 320) = v3[4];
  *(unsigned char *)(v1 + 58) = *((unsigned char *)v3 + 40);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v16, v17, v18);
}

uint64_t sub_1C998491C()
{
  OUTLINED_FUNCTION_24();
  char v1 = v0[3].n128_i8[10];
  v0[1].n128_u64[0] = v0[18].n128_u64[1];
  OUTLINED_FUNCTION_133_1(v1, v0[19]);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[20].n128_u64[1] = (unint64_t)v2;
  *uint64_t v2 = v3;
  v2[1] = sub_1C99849D4;
  OUTLINED_FUNCTION_131_1();
  return sub_1C998A884(v4, v5, v6);
}

uint64_t sub_1C99849D4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 336) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9984AB0()
{
  uint64_t v55 = v0;
  OUTLINED_FUNCTION_82_2();
  v1();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t v3 = v0[16].n128_u64[1];
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v47 = *(void *)v3;
    char v4 = *(unsigned char *)(v3 + 8);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    uint64_t v6 = OUTLINED_FUNCTION_34(v5, (uint64_t)qword_1EBC7A520);
    os_log_type_t v7 = sub_1C9BEDC78();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v48 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v9 = sub_1C992CF94(v47, v4);
      v0[9].n128_u64[0] = sub_1C95FF228(v9, v10, &v48);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v6, v7, "PromptForDisambiguationFlow received a request to paginate from the user: %s", v8, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    unsigned __int8 v11 = v0[3].n128_u8[10];
    unint64_t v12 = v0[20].n128_u64[0];
    unsigned __int8 v13 = v0[3].n128_u8[9];
    unint64_t v14 = v0[18].n128_u64[0];
    unint64_t v15 = v0[17].n128_u64[0];
    unint64_t v16 = v0[17].n128_u64[1];
    uint64_t v17 = (void *)v0[13].n128_u64[0];
    uint64_t v18 = v0[10].n128_i64[0];
    uint64_t v48 = v0[18].n128_i64[1];
    __n128 v49 = v0[19];
    unsigned __int8 v50 = v13;
    unint64_t v51 = v12;
    unsigned __int8 v52 = v11;
    uint64_t v53 = v47;
    char v54 = v4;
    uint64_t v19 = type metadata accessor for PaginatedItemContainer();
    swift_bridgeObjectRetain();
    sub_1C992D7D0(&v53, v19);
    void *v17 = v48;
    OUTLINED_FUNCTION_126_0(v49);
    swift_storeEnumTagMultiPayload();
    sub_1C998201C((uint64_t)v17);
    (*(void (**)(unint64_t, unint64_t))(v16 + 8))(v14, v15);
    static ExecuteResponse.ongoing(requireInput:)(0, v18);
  }
  else
  {
    OUTLINED_FUNCTION_49_4();
    v20();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    unint64_t v22 = v0[14].n128_u64[1];
    unint64_t v21 = v0[15].n128_u64[0];
    unint64_t v23 = v0[13].n128_u64[1];
    unint64_t v24 = v0[12].n128_u64[0];
    uint64_t v25 = sub_1C9BECF88();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
    (*(void (**)(unint64_t, unint64_t, unint64_t))(v23 + 16))(v22, v21, v24);
    uint64_t v26 = sub_1C9BECF78();
    os_log_type_t v27 = sub_1C9BEDC78();
    BOOL v28 = OUTLINED_FUNCTION_65_0(v27);
    unint64_t v29 = v0[14].n128_u64[1];
    if (v28)
    {
      unint64_t v30 = v0[13].n128_u64[1];
      unint64_t v31 = v0[12].n128_u64[0];
      uint64_t v32 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v48 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v32 = 136315138;
      OUTLINED_FUNCTION_82_2();
      v33();
      uint64_t v34 = sub_1C9BED5D8();
      v0[9].n128_u64[1] = sub_1C95FF228(v34, v35, &v48);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void (**)(unint64_t, unint64_t))(v30 + 8);
      v46(v29, v31);
      _os_log_impl(&dword_1C95F9000, v26, (os_log_type_t)v24, "PromptForDisambiguationFlow received a chosen item from the user (%s). Returning with answer.", v32, 0xCu);
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      uint64_t v46 = *(void (**)(unint64_t, unint64_t))(v0[13].n128_u64[1] + 8);
      v46(v0[14].n128_u64[1], v0[12].n128_u64[0]);
    }

    unint64_t v36 = v0[17].n128_u64[1];
    unint64_t v45 = v0[18].n128_u64[0];
    unint64_t v37 = v0[17].n128_u64[0];
    unint64_t v38 = v0[15].n128_u64[0];
    uint64_t v39 = v0[13].n128_i64[0];
    unint64_t v40 = v0[12].n128_u64[0];
    uint64_t v41 = v0[10].n128_i64[0];
    OUTLINED_FUNCTION_82_2();
    v42();
    type metadata accessor for PromptResult();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1C998201C(v39);
    v46(v38, v40);
    (*(void (**)(unint64_t, unint64_t))(v36 + 8))(v45, v37);
    static ExecuteResponse.complete()(v41);
  }
  OUTLINED_FUNCTION_117_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v43();
}

uint64_t sub_1C9984FDC()
{
  unint64_t v24 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  char v1 = (void *)v0[42];
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[42];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v23 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1C9BEE6E8();
    v0[17] = sub_1C95FF228(v10, v11, &v23);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "PromptForDisambiguationFlow encountered an error while trying to parse user input: %s", v9, 0xCu);
    OUTLINED_FUNCTION_41_0();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v12 = v0[42];
  uint64_t v13 = v0[22];
  uint64_t v14 = OUTLINED_FUNCTION_53_13();
  v0[43] = v14;
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[44] = v15;
  void *v15 = v16;
  v15[1] = sub_1C9985228;
  uint64_t v17 = OUTLINED_FUNCTION_26();
  return sub_1C962F1B0(v17, v18, v19, v20, v21);
}

uint64_t sub_1C9985228()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *id v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 360) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 64);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9985318()
{
  OUTLINED_FUNCTION_26_0();
  char v1 = (void *)v0[42];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[20];
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v4 = v1;
  sub_1C998201C(v2);

  static ExecuteResponse.complete()(v3);
  OUTLINED_FUNCTION_117_3();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v5();
}

uint64_t sub_1C998540C()
{
  char v1 = *(void **)(v0 + 336);
  swift_task_dealloc();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t sub_1C99854E0()
{
  OUTLINED_FUNCTION_24();
  v1[13] = v2;
  v1[14] = v0;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_8();
  uint64_t v3 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  v1[15] = v3;
  OUTLINED_FUNCTION_22(v3);
  uint64_t v4 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_94_7(v4);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9985584()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0[14];
  uint64_t v2 = OUTLINED_FUNCTION_53_13();
  v0[17] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0 + 2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C9985648;
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v4, v5, v6, v7, v8);
}

uint64_t sub_1C9985648()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 64);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9985738()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(_OWORD **)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 104);
  long long v3 = *(_OWORD *)(v0 + 16);
  long long v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)((char *)v1 + 25) = *(_OWORD *)(v0 + 41);
  *uint64_t v1 = v3;
  v1[1] = v4;
  swift_storeEnumTagMultiPayload();
  sub_1C96E663C(v0 + 16);
  sub_1C998201C((uint64_t)v1);
  static ExecuteResponse.ongoing(requireInput:)(1, v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v5();
}

uint64_t sub_1C99857DC()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9985840()
{
  OUTLINED_FUNCTION_24();
  v1[13] = v2;
  v1[14] = v0;
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_8();
  uint64_t v3 = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  v1[15] = v3;
  OUTLINED_FUNCTION_22(v3);
  uint64_t v4 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_94_7(v4);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C99858E4()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0[14];
  uint64_t v2 = OUTLINED_FUNCTION_53_13();
  v0[17] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0 + 2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C99859A8;
  OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v4, v5, v6, v7, v8);
}

uint64_t sub_1C99859A8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 152) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 64);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9985A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = a1;
  uint64_t v76 = sub_1C9BEAB08();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76, v4);
  uint64_t v74 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Input(0);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v78 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589198);
  MEMORY[0x1F4188790](v9 - 8, v10);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Parse(0);
  uint64_t v15 = MEMORY[0x1F4188790](v13, v14);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v18);
  uint64_t v79 = (uint64_t)&v74 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5891A0);
  MEMORY[0x1F4188790](v20 - 8, v21);
  uint64_t v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1C9BEC1A8();
  uint64_t v80 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24, v25);
  uint64_t v81 = (char *)&v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589170);
  MEMORY[0x1F4188790](v27 - 8, v28);
  unint64_t v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1C9BEC178();
  uint64_t v86 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31, v32);
  char v85 = (char *)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v2;
  sub_1C9608D98(v2 + 64, (uint64_t)&v87, &qword_1EA589190);
  if (!v88)
  {
    sub_1C95FE81C((uint64_t)&v87, &qword_1EA589190);
    return __swift_storeEnumTagSinglePayload(a2, 1, 1, v6);
  }
  uint64_t v82 = (int *)v6;
  uint64_t v83 = a2;
  sub_1C95FD5D8(&v87, (uint64_t)v90);
  uint64_t v88 = &type metadata for FeatureFlagDefinitions.Core;
  unint64_t v89 = sub_1C96E6668();
  LOBYTE(v87) = 1;
  char v34 = sub_1C9BEAD08();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v87);
  if ((v34 & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_1C9BECF88();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EBC7A520);
    unint64_t v37 = sub_1C9BECF78();
    os_log_type_t v38 = sub_1C9BEDC78();
    BOOL v45 = os_log_type_enabled(v37, v38);
    uint64_t v40 = v83;
    if (!v45) {
      goto LABEL_14;
    }
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    uint64_t v42 = "PromptForDisambiguationFlow PervasiveEntityResolution is not enabled";
    goto LABEL_13;
  }
  sub_1C95FD654(v84, (uint64_t)&v87);
  sub_1C99865F8();
  uint64_t v35 = v31;
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v85, v30, v31);
    __swift_project_boxed_opaque_existential_1(v90, v90[3]);
    sub_1C9BEC268();
    uint64_t v49 = v24;
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24) == 1)
    {
      sub_1C95FE81C((uint64_t)v23, &qword_1EA5891A0);
      uint64_t v40 = v83;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C9BECF88();
      __swift_project_value_buffer(v50, (uint64_t)qword_1EBC7A520);
      unint64_t v51 = sub_1C9BECF78();
      os_log_type_t v52 = sub_1C9BEDC78();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl(&dword_1C95F9000, v51, v52, "PromptForDisambiguationFlow PervasiveEntityResolution: nothing learned", v53, 2u);
        MEMORY[0x1CB78C440](v53, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v35);
      goto LABEL_15;
    }
    uint64_t v55 = v80;
    char v54 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v81, v23, v49);
    sub_1C9609684(&qword_1EBC77F10, (void (*)(uint64_t))type metadata accessor for Parse);
    sub_1C9BEC198();
    int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
    uint64_t v57 = v83;
    if (EnumTagSinglePayload == 1)
    {
      sub_1C95FE81C((uint64_t)v12, &qword_1EA589198);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_1C9BECF88();
      __swift_project_value_buffer(v58, (uint64_t)qword_1EBC7A520);
      uint64_t v59 = sub_1C9BECF78();
      os_log_type_t v60 = sub_1C9BEDC88();
      BOOL v61 = os_log_type_enabled(v59, v60);
      uint64_t v62 = v82;
      if (v61)
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v63 = 0;
        _os_log_impl(&dword_1C95F9000, v59, v60, "PromptForDisambiguationFlow could not decode parse, starting fresh", v63, 2u);
        uint64_t v64 = v63;
        char v54 = v81;
        MEMORY[0x1CB78C440](v64, -1, -1);
      }
    }
    else
    {
      uint64_t v65 = v79;
      sub_1C999A4CC((uint64_t)v12, v79, (void (*)(void))type metadata accessor for Parse);
      sub_1C999A52C(v65, (uint64_t)v17, (void (*)(void))type metadata accessor for Parse);
      uint64_t v62 = v82;
      uint64_t v66 = (uint64_t)v78;
      uint64_t v67 = &v78[v82[7]];
      *((void *)v67 + 4) = 0;
      *(_OWORD *)uint64_t v67 = 0u;
      *((_OWORD *)v67 + 1) = 0u;
      sub_1C999A52C((uint64_t)v17, v66 + v62[5], (void (*)(void))type metadata accessor for Parse);
      *(void *)(v66 + v62[6]) = MEMORY[0x1E4FBC860];
      uint64_t v68 = v74;
      sub_1C9BEAAF8();
      sub_1C999A580((uint64_t)v17, (void (*)(void))type metadata accessor for Parse);
      (*(void (**)(uint64_t, char *, uint64_t))(v75 + 32))(v66, v68, v76);
      *(unsigned char *)(v66 + v62[8]) = 0;
      (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)(v77 + 16) + 32))(&v87, v66);
      if (v87 == 1)
      {
        sub_1C999A580(v65, (void (*)(void))type metadata accessor for Parse);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v49);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v35);
        sub_1C999A4CC(v66, v57, (void (*)(void))type metadata accessor for Input);
        uint64_t v46 = v57;
        uint64_t v47 = 0;
LABEL_37:
        uint64_t v48 = (uint64_t)v62;
        goto LABEL_16;
      }
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v69 = sub_1C9BECF88();
      __swift_project_value_buffer(v69, (uint64_t)qword_1EBC7A520);
      unint64_t v70 = sub_1C9BECF78();
      os_log_type_t v71 = sub_1C9BEDC88();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v72 = 0;
        _os_log_impl(&dword_1C95F9000, v70, v71, "PromptForDisambiguationFlow learned selection rejected, starting fresh", v72, 2u);
        uint64_t v73 = v72;
        char v54 = v81;
        MEMORY[0x1CB78C440](v73, -1, -1);
      }

      sub_1C999A580(v66, (void (*)(void))type metadata accessor for Input);
      sub_1C999A580(v79, (void (*)(void))type metadata accessor for Parse);
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v49);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v35);
    uint64_t v46 = v57;
    uint64_t v47 = 1;
    goto LABEL_37;
  }
  sub_1C95FE81C((uint64_t)v30, &qword_1EA589170);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C9BECF88();
  __swift_project_value_buffer(v36, (uint64_t)qword_1EBC7A520);
  unint64_t v37 = sub_1C9BECF78();
  os_log_type_t v38 = sub_1C9BEDC78();
  BOOL v39 = os_log_type_enabled(v37, v38);
  uint64_t v40 = v83;
  if (!v39) {
    goto LABEL_14;
  }
  uint64_t v41 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v41 = 0;
  uint64_t v42 = "PromptForDisambiguationFlow Could not extract choices for PervasiveEntityResolution";
LABEL_13:
  _os_log_impl(&dword_1C95F9000, v37, v38, v42, v41, 2u);
  MEMORY[0x1CB78C440](v41, -1, -1);
LABEL_14:

LABEL_15:
  uint64_t v46 = v40;
  uint64_t v47 = 1;
  uint64_t v48 = (uint64_t)v82;
LABEL_16:
  __swift_storeEnumTagSinglePayload(v46, v47, 1, v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
}

uint64_t sub_1C9986588(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99865A0);
}

uint64_t sub_1C99865A0()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FD654(*(void *)(v0 + 24), *(void *)(v0 + 16));
  OUTLINED_FUNCTION_90();
  return v1();
}

void sub_1C99865F8()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v250 = sub_1C9BEB1E8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v245 = v5;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_70_14();
  OUTLINED_FUNCTION_122_1(v14);
  v258 = (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9BECD18();
  OUTLINED_FUNCTION_0_2();
  uint64_t v227 = v15;
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_89_6();
  uint64_t v20 = MEMORY[0x1F4188790](v18, v19);
  OUTLINED_FUNCTION_98_5(v20, v21, v22, v23, v24, v25, v26, v27, v215);
  uint64_t v256 = sub_1C9BEAE78();
  OUTLINED_FUNCTION_0_2();
  uint64_t v236 = v28;
  MEMORY[0x1F4188790](v29, v30);
  OUTLINED_FUNCTION_33_0();
  uint64_t v255 = v31;
  OUTLINED_FUNCTION_47();
  uint64_t v248 = sub_1C9BEAEA8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v229 = v32;
  MEMORY[0x1F4188790](v33, v34);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v35, v36);
  OUTLINED_FUNCTION_70_14();
  uint64_t v243 = v37;
  uint64_t v247 = sub_1C9BEB0C8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v228 = v38;
  MEMORY[0x1F4188790](v39, v40);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v41, v42);
  OUTLINED_FUNCTION_70_14();
  uint64_t v242 = v43;
  OUTLINED_FUNCTION_47();
  uint64_t v251 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v244 = v44;
  MEMORY[0x1F4188790](v45, v46);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v47, v48);
  OUTLINED_FUNCTION_70_14();
  uint64_t v235 = v49;
  OUTLINED_FUNCTION_47();
  sub_1C9BEB188();
  OUTLINED_FUNCTION_0_2();
  v253 = v51;
  v254 = v50;
  MEMORY[0x1F4188790](v50, v52);
  OUTLINED_FUNCTION_33_0();
  uint64_t v252 = v53;
  OUTLINED_FUNCTION_47();
  uint64_t v233 = sub_1C9BEB148();
  OUTLINED_FUNCTION_0_2();
  uint64_t v55 = v54;
  uint64_t v58 = MEMORY[0x1F4188790](v56, v57);
  os_log_type_t v60 = (char *)&v215 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1F4188790](v58, v61);
  uint64_t v64 = (char *)&v215 - v63;
  MEMORY[0x1F4188790](v62, v65);
  OUTLINED_FUNCTION_70_14();
  v230 = v66;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77F68);
  uint64_t v68 = OUTLINED_FUNCTION_22(v67);
  MEMORY[0x1F4188790](v68, v69);
  OUTLINED_FUNCTION_6_0();
  uint64_t v72 = v71 - v70;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  uint64_t v74 = OUTLINED_FUNCTION_22(v73);
  MEMORY[0x1F4188790](v74, v75);
  OUTLINED_FUNCTION_6_0();
  uint64_t v78 = v77 - v76;
  sub_1C95FD654((uint64_t)v2, (uint64_t)v261);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  uint64_t v79 = type metadata accessor for AceOutput();
  if ((swift_dynamicCast() & 1) == 0)
  {
    __swift_storeEnumTagSinglePayload(v72, 1, 1, v79);
    uint64_t v81 = &qword_1EBC77F68;
    uint64_t v82 = v72;
    goto LABEL_5;
  }
  __swift_storeEnumTagSinglePayload(v72, 0, 1, v79);
  sub_1C9608D98(v72 + *(int *)(v79 + 28), v78, &qword_1EBC77C70);
  sub_1C999A580(v72, (void (*)(void))type metadata accessor for AceOutput);
  uint64_t v80 = type metadata accessor for NLContextUpdate();
  if (__swift_getEnumTagSinglePayload(v78, 1, v80) == 1)
  {
    uint64_t v81 = &qword_1EBC77C70;
    uint64_t v82 = v78;
LABEL_5:
    sub_1C95FE81C(v82, v81);
    goto LABEL_6;
  }
  uint64_t v86 = *(void *)(v78 + 216);
  swift_bridgeObjectRetain();
  sub_1C999A580(v78, (void (*)(void))type metadata accessor for NLContextUpdate);
  if (!v86)
  {
LABEL_6:
    if (qword_1EBC7A3B8 == -1)
    {
LABEL_7:
      uint64_t v83 = sub_1C9BECF88();
      __swift_project_value_buffer(v83, (uint64_t)qword_1EBC7A520);
      sub_1C95FD654((uint64_t)v2, (uint64_t)v261);
      uint64_t v84 = sub_1C9BECF78();
      os_log_type_t v85 = sub_1C9BEDC88();
      uint64_t v86 = v85;
      if (!os_log_type_enabled(v84, v85))
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v261);
        goto LABEL_10;
      }
      long long v87 = (_DWORD *)OUTLINED_FUNCTION_67();
      uint64_t v260 = OUTLINED_FUNCTION_35_0();
      *long long v87 = 136315138;
      v226 = v2;
      sub_1C95FD654((uint64_t)v261, (uint64_t)v259);
      uint64_t v88 = sub_1C9BED5D8();
      v259[0] = sub_1C95FF228(v88, v89, &v260);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v261);
      OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v84, (os_log_type_t)v86, "PromptForDisambiguationFlow no nluSystemDialogActs found in: %s");
      OUTLINED_FUNCTION_135_1();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
LABEL_11:
      uint64_t v90 = sub_1C9BEC178();
      __swift_storeEnumTagSinglePayload(v4, v86, 1, v90);
      OUTLINED_FUNCTION_10();
      return;
    }
LABEL_122:
    swift_once();
    goto LABEL_7;
  }
  uint64_t v91 = *(void *)(v86 + 16);
  if (!v91) {
    goto LABEL_18;
  }
  uint64_t v218 = v0;
  uint64_t v217 = v4;
  os_log_type_t v92 = (void (*)(char *, uint64_t, uint64_t))v55[2];
  OUTLINED_FUNCTION_13_58();
  uint64_t v93 = v86;
  uint64_t v95 = v86 + v94;
  v237 = v55 + 1;
  uint64_t v96 = v55[9];
  uint64_t v249 = v93;
  swift_bridgeObjectRetain();
  uint64_t v97 = v233;
  while (1)
  {
    v92(v60, v95, v97);
    if (sub_1C9BEB0F8()) {
      break;
    }
    OUTLINED_FUNCTION_103_6();
    OUTLINED_FUNCTION_37();
    v98();
    v95 += v96;
    if (!--v91)
    {
      uint64_t v86 = v249;
      swift_bridgeObjectRelease();
      uint64_t v4 = v217;
LABEL_18:
      if (qword_1EBC7A3B8 == -1)
      {
LABEL_19:
        uint64_t v99 = sub_1C9BECF88();
        __swift_project_value_buffer(v99, (uint64_t)qword_1EBC7A520);
        swift_bridgeObjectRetain();
        uint64_t v100 = sub_1C9BECF78();
        os_log_type_t v101 = sub_1C9BEDC88();
        BOOL v102 = os_log_type_enabled(v100, v101);
        uint64_t v103 = v233;
        if (v102)
        {
          v226 = v2;
          unsigned int v104 = (_DWORD *)OUTLINED_FUNCTION_67();
          v261[0] = OUTLINED_FUNCTION_35_0();
          *unsigned int v104 = 136315138;
          uint64_t v105 = swift_bridgeObjectRetain();
          uint64_t v106 = MEMORY[0x1CB78AA50](v105, v103);
          unint64_t v108 = v107;
          swift_bridgeObjectRelease();
          v259[0] = sub_1C95FF228(v106, v108, v261);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_21_28(&dword_1C95F9000, v100, v101, "PromptForDisambiguationFlow no choice found in SDA: %s");
          OUTLINED_FUNCTION_135_1();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
          goto LABEL_11;
        }
        swift_bridgeObjectRelease_n();

LABEL_10:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
        uint64_t v86 = 1;
        goto LABEL_11;
      }
LABEL_127:
      swift_once();
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v109 = (void (*)(char *, char *, uint64_t))v55[4];
  v109(v64, v60, v97);
  swift_bridgeObjectRelease();
  v109(v230, v64, v97);
  sub_1C9BEB0D8();
  uint64_t v110 = sub_1C9BEAEC8();
  OUTLINED_FUNCTION_37();
  v111();
  uint64_t v4 = MEMORY[0x1E4FBC860];
  uint64_t v249 = *(void *)(v110 + 16);
  v226 = v2;
  uint64_t v216 = v110;
  if (!v249)
  {
    uint64_t v115 = MEMORY[0x1E4FBC860];
    goto LABEL_51;
  }
  uint64_t v224 = *(void *)(v244 + 16);
  OUTLINED_FUNCTION_13_58();
  uint64_t v223 = v110 + v112;
  uint64_t v222 = v228 + 8;
  uint64_t v221 = v229 + 8;
  v254 = (void (**)(void (*)(void), uint64_t))(v236 + 16);
  uint64_t v252 = v236 + 8;
  v253 = (void (**)(void))(v227 + 8);
  uint64_t v220 = v113 - 8;
  uint64_t v225 = v113;
  uint64_t v219 = *(void *)(v113 + 56);
  swift_bridgeObjectRetain();
  uint64_t v114 = 0;
  uint64_t v115 = v4;
  while (1)
  {
    uint64_t v238 = v114;
    OUTLINED_FUNCTION_82_2();
    v116();
    sub_1C9BEAFC8();
    sub_1C9BEB098();
    OUTLINED_FUNCTION_103_6();
    OUTLINED_FUNCTION_37();
    v117();
    uint64_t v118 = sub_1C9BEAE98();
    OUTLINED_FUNCTION_103_6();
    OUTLINED_FUNCTION_37();
    v119();
    uint64_t v120 = *(void *)(v118 + 16);
    if (v120)
    {
      uint64_t v232 = v115;
      v261[0] = v4;
      sub_1C963C340();
      OUTLINED_FUNCTION_13_58();
      uint64_t v231 = v118;
      uint64_t v122 = v118 + v121;
      uint64_t v124 = *(void *)(v123 + 72);
      uint64_t v2 = *(void (**)(void))(v123 + 16);
      do
      {
        OUTLINED_FUNCTION_82_2();
        v2();
        sub_1C9BEAE58();
        uint64_t v125 = sub_1C9BECD08();
        uint64_t v127 = v126;
        OUTLINED_FUNCTION_37();
        v128();
        OUTLINED_FUNCTION_37();
        v129();
        uint64_t v130 = v261[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_73_10();
          uint64_t v130 = v261[0];
        }
        unint64_t v131 = *(void *)(v130 + 16);
        if (v131 >= *(void *)(v130 + 24) >> 1)
        {
          sub_1C963C340();
          uint64_t v130 = v261[0];
        }
        *(void *)(v130 + 16) = v131 + 1;
        uint64_t v132 = v130 + 16 * v131;
        *(void *)(v132 + 32) = v125;
        *(void *)(v132 + 40) = v127;
        v122 += v124;
        --v120;
      }
      while (v120);
      swift_bridgeObjectRelease();
      uint64_t v115 = v232;
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v130 = v4;
    }
    OUTLINED_FUNCTION_103_6();
    OUTLINED_FUNCTION_37();
    v133();
    uint64_t v134 = *(void *)(v130 + 16);
    uint64_t v135 = *(void *)(v115 + 16);
    uint64_t v86 = v135 + v134;
    if (__OFADD__(v135, v134))
    {
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
      goto LABEL_122;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v86 > *(void *)(v115 + 24) >> 1)
    {
      sub_1C965519C();
      uint64_t v115 = v136;
    }
    if (!*(void *)(v130 + 16))
    {
      if (v134) {
        goto LABEL_118;
      }
      goto LABEL_48;
    }
    uint64_t v137 = *(void *)(v115 + 16);
    if ((*(void *)(v115 + 24) >> 1) - v137 < v134)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
      goto LABEL_127;
    }
    unint64_t v138 = v115 + 16 * v137 + 32;
    if (v130 + 32 < v138 + 16 * v134 && v138 < v130 + 32 + 16 * v134) {
      break;
    }
    swift_arrayInitWithCopy();
    if (v134)
    {
      uint64_t v140 = *(void *)(v115 + 16);
      BOOL v141 = __OFADD__(v140, v134);
      uint64_t v142 = v140 + v134;
      if (v141) {
        goto LABEL_125;
      }
      *(void *)(v115 + 16) = v142;
    }
LABEL_48:
    uint64_t v114 = v238 + 1;
    swift_bridgeObjectRelease();
    if (v114 == v249)
    {
      swift_bridgeObjectRelease();
LABEL_51:
      uint64_t v143 = *(void *)(v115 + 16);
      uint64_t v144 = v250;
      if (v143)
      {
        uint64_t v4 = v115 + 40;
        uint64_t v145 = MEMORY[0x1E4FBC860];
        do
        {
          uint64_t v147 = *(void *)(v4 - 8);
          uint64_t v146 = *(void *)v4;
          uint64_t v148 = HIBYTE(*(void *)v4) & 0xFLL;
          if ((*(void *)v4 & 0x2000000000000000) == 0) {
            uint64_t v148 = v147 & 0xFFFFFFFFFFFFLL;
          }
          if (v148)
          {
            uint64_t v149 = v145;
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v145 = v149;
            v261[0] = v149;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              OUTLINED_FUNCTION_73_10();
              uint64_t v145 = v261[0];
            }
            unint64_t v152 = *(void *)(v145 + 16);
            unint64_t v151 = *(void *)(v145 + 24);
            if (v152 >= v151 >> 1)
            {
              OUTLINED_FUNCTION_100_5(v151);
              sub_1C963C340();
              uint64_t v145 = v261[0];
            }
            *(void *)(v145 + 16) = v152 + 1;
            uint64_t v153 = v145 + 16 * v152;
            *(void *)(v153 + 32) = v147;
            *(void *)(v153 + 40) = v146;
          }
          v4 += 16;
          --v143;
        }
        while (v143);
      }
      else
      {
        uint64_t v145 = MEMORY[0x1E4FBC860];
      }
      uint64_t v243 = v145;
      swift_bridgeObjectRelease();
      uint64_t v154 = MEMORY[0x1E4FBC860];
      if (v249)
      {
        uint64_t v257 = *(void *)(v244 + 16);
        OUTLINED_FUNCTION_13_58();
        uint64_t v156 = v216 + v155;
        uint64_t v256 = *(void *)(v157 + 56);
        uint64_t v2 = (void (*)(void))(v229 + 8);
        uint64_t v244 = v157;
        long long v158 = (void (**)(uint64_t, uint64_t))(v157 - 8);
        swift_bridgeObjectRetain();
        uint64_t v86 = MEMORY[0x1E4FBC860];
        uint64_t v159 = v239;
        do
        {
          uint64_t v160 = v251;
          OUTLINED_FUNCTION_82_2();
          v161();
          sub_1C9BEAFC8();
          uint64_t v162 = v240;
          sub_1C9BEB098();
          OUTLINED_FUNCTION_121_2();
          v163();
          uint64_t v164 = sub_1C9BEAE88();
          (*(void (**)(uint64_t, uint64_t))v2)(v162, v248);
          (*v158)(v159, v160);
          uint64_t v165 = *(void *)(v164 + 16);
          uint64_t v166 = *(void *)(v86 + 16);
          uint64_t v4 = v166 + v165;
          if (__OFADD__(v166, v165)) {
            goto LABEL_120;
          }
          int v167 = swift_isUniquelyReferenced_nonNull_native();
          if (!v167 || v4 > *(void *)(v86 + 24) >> 1)
          {
            if (v166 <= v4) {
              uint64_t v168 = v166 + v165;
            }
            else {
              uint64_t v168 = v166;
            }
            uint64_t v86 = sub_1C9654DC4(v167, v168, 1, v86);
          }
          if (*(void *)(v164 + 16))
          {
            uint64_t v169 = *(void *)(v86 + 16);
            if ((*(void *)(v86 + 24) >> 1) - v169 < v165) {
              goto LABEL_124;
            }
            unint64_t v170 = (*(unsigned __int8 *)(v245 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v245 + 80);
            uint64_t v171 = *(void *)(v245 + 72);
            unint64_t v172 = v86 + v170 + v171 * v169;
            if (v164 + v170 < v172 + v171 * v165 && v172 < v164 + v170 + v171 * v165) {
              goto LABEL_128;
            }
            swift_arrayInitWithCopy();
            if (v165)
            {
              uint64_t v174 = *(void *)(v86 + 16);
              BOOL v141 = __OFADD__(v174, v165);
              uint64_t v175 = v174 + v165;
              if (v141) {
                goto LABEL_126;
              }
              *(void *)(v86 + 16) = v175;
            }
          }
          else if (v165)
          {
            goto LABEL_121;
          }
          swift_bridgeObjectRelease();
          v156 += v256;
          --v249;
        }
        while (v249);
        swift_bridgeObjectRelease();
        uint64_t v144 = v250;
        uint64_t v154 = MEMORY[0x1E4FBC860];
      }
      else
      {
        uint64_t v86 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      v261[0] = v154;
      uint64_t v2 = v234;
      uint64_t v256 = *(void *)(v86 + 16);
      if (!v256)
      {
LABEL_109:
        swift_bridgeObjectRelease();
        uint64_t v200 = v261[0];
        uint64_t v201 = *(void *)(v261[0] + 16);
        if (v201)
        {
          v261[0] = MEMORY[0x1E4FBC860];
          sub_1C963C340();
          uint64_t v202 = *(void (**)(uint64_t, uint64_t, uint64_t))(v245 + 16);
          uint64_t v257 = v200;
          v258 = v202;
          OUTLINED_FUNCTION_13_58();
          uint64_t v204 = v200 + v203;
          uint64_t v206 = *(void *)(v205 + 56);
          do
          {
            v258(v241, v204, v144);
            uint64_t v207 = sub_1C9BEB1C8();
            uint64_t v209 = v208;
            OUTLINED_FUNCTION_64();
            v210();
            uint64_t v211 = v261[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              OUTLINED_FUNCTION_73_10();
              uint64_t v211 = v261[0];
            }
            unint64_t v212 = *(void *)(v211 + 16);
            if (v212 >= *(void *)(v211 + 24) >> 1)
            {
              sub_1C963C340();
              uint64_t v211 = v261[0];
            }
            *(void *)(v211 + 16) = v212 + 1;
            uint64_t v213 = v211 + 16 * v212;
            *(void *)(v213 + 32) = v207;
            *(void *)(v213 + 40) = v209;
            v204 += v206;
            --v201;
            uint64_t v144 = v250;
          }
          while (v201);
        }
        swift_release();
        uint64_t v4 = v217;
        sub_1C9BEC168();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v226);
        OUTLINED_FUNCTION_103_6();
        OUTLINED_FUNCTION_37();
        v214();
        uint64_t v86 = 0;
        goto LABEL_11;
      }
      unint64_t v176 = 0;
      uint64_t v255 = v245 + 16;
      uint64_t v252 = v227 + 8;
      v253 = (void (**)(void))(v245 + 32);
      v254 = (void (**)(void (*)(void), uint64_t))(v245 + 8);
      uint64_t v251 = (v245 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        if (v176 >= *(void *)(v86 + 16)) {
          goto LABEL_119;
        }
        OUTLINED_FUNCTION_13_58();
        uint64_t v178 = *(void *)(v177 + 72);
        uint64_t v257 = v179;
        uint64_t v180 = *(void (**)(void (*)(uint64_t), unint64_t, uint64_t))(v177 + 16);
        uint64_t v181 = v246;
        v180(v246, v86 + v179 + v178 * v176, v144);
        uint64_t v4 = sub_1C9BEB1C8();
        unint64_t v183 = v182;
        swift_bridgeObjectRelease();
        if ((v183 & 0x2000000000000000) != 0) {
          uint64_t v184 = HIBYTE(v183) & 0xF;
        }
        else {
          uint64_t v184 = v4 & 0xFFFFFFFFFFFFLL;
        }
        v180((void (*)(uint64_t))v2, (unint64_t)v181, v144);
        if (v184)
        {
          sub_1C9BEB1D8();
          uint64_t v185 = sub_1C9BECD08();
          uint64_t v181 = v186;
          OUTLINED_FUNCTION_37();
          v187();
          if (v185 == 0x64695F6D657469 && v181 == (void (*)(uint64_t))0xE700000000000000)
          {
            swift_bridgeObjectRelease();
            (*v254)(v2, v144);
LABEL_103:
            uint64_t v192 = *v253;
            OUTLINED_FUNCTION_49_4();
            v192();
            uint64_t v193 = v261[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C963C1A0(0, *(void *)(v193 + 16) + 1, 1);
              uint64_t v193 = v261[0];
            }
            unint64_t v195 = *(void *)(v193 + 16);
            unint64_t v194 = *(void *)(v193 + 24);
            if (v195 >= v194 >> 1)
            {
              char v197 = OUTLINED_FUNCTION_100_5(v194);
              sub_1C963C1A0(v197, v198, v199);
              uint64_t v193 = v261[0];
            }
            *(void *)(v193 + 16) = v195 + 1;
            uint64_t v196 = v250;
            OUTLINED_FUNCTION_49_4();
            v192();
            uint64_t v144 = v196;
            v261[0] = v193;
            uint64_t v2 = v234;
            goto LABEL_108;
          }
          char v189 = sub_1C9BEE618();
          swift_bridgeObjectRelease();
          uint64_t v190 = OUTLINED_FUNCTION_105_4();
          v181(v190);
          if (v189) {
            goto LABEL_103;
          }
          uint64_t v2 = v234;
        }
        else
        {
          uint64_t v191 = OUTLINED_FUNCTION_105_4();
          v181(v191);
        }
        ((void (*)(void (*)(uint64_t), uint64_t))v181)(v246, v144);
LABEL_108:
        if (v256 == ++v176) {
          goto LABEL_109;
        }
      }
    }
  }
LABEL_128:
  sub_1C9BEE408();
  __break(1u);
}

uint64_t sub_1C9987A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return MEMORY[0x1F4188298](sub_1C9987A68, 0, 0);
}

uint64_t sub_1C9987A68()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_75_11();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 88) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C9987B00;
  uint64_t v3 = *(void *)(v1 + 64);
  return sub_1C998ACC8(v3, v0);
}

uint64_t sub_1C9987B00()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9987BF8()
{
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9987C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  v3[8] = a1;
  return MEMORY[0x1F4188298](sub_1C9987C38, 0, 0);
}

uint64_t sub_1C9987C38()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_75_11();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 88) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1C9987CD0;
  uint64_t v3 = *(void *)(v1 + 64);
  return sub_1C998AEC0(v3, v0);
}

uint64_t sub_1C9987CD0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9987DC8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C9987DE8, 0, 0);
}

uint64_t sub_1C9987DE8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9618A08;
  uint64_t v3 = OUTLINED_FUNCTION_60_1();
  return sub_1C998AFC0(v3);
}

uint64_t sub_1C9987E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C9987E98, 0, 0);
}

uint64_t sub_1C9987E98()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96DD284;
  uint64_t v2 = OUTLINED_FUNCTION_60_1();
  return sub_1C998B09C(v2, v3);
}

unint64_t sub_1C9987F30(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1, v2);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0x6C6C65636E61632ELL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      unint64_t result = 0x5374706D6F72702ELL;
      break;
    case 2:
      type metadata accessor for Input(255);
      type metadata accessor for PaginatedItemContainer();
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      sub_1C999A580((uint64_t)v6, (void (*)(void))type metadata accessor for Input);
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      type metadata accessor for Input(255);
      type metadata accessor for PaginatedItemContainer();
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      sub_1C999A580((uint64_t)v6, (void (*)(void))type metadata accessor for Input);
      unint64_t result = 0x65646E7573696D2ELL;
      break;
    case 4:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      unint64_t result = 0x61507974706D652ELL;
      break;
    case 5:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      unint64_t result = 0x74656C706D6F632ELL;
      break;
    case 6:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      unint64_t result = 0x726F7272652ELL;
      break;
    case 7:
      return result;
    default:
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
      unint64_t result = 0x646574726174732ELL;
      break;
  }
  return result;
}

uint64_t PromptForDisambiguationFlowAsync.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  sub_1C95FE81C(v0 + 64, &qword_1EA589190);
  swift_bridgeObjectRelease();
  type metadata accessor for PromptForDisambiguationFlowAsync.State();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v1();
  return v0;
}

uint64_t PromptForDisambiguationFlowAsync.__deallocating_deinit()
{
  PromptForDisambiguationFlowAsync.deinit();
  OUTLINED_FUNCTION_4_0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C998833C()
{
  PromptForDisambiguationFlowAsync.on(input:)();
  return v0 & 1;
}

void sub_1C9988364()
{
}

uint64_t sub_1C9988388()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForDisambiguationFlowAsync.execute()();
}

uint64_t sub_1C9988424@<X0>(uint64_t a1@<X8>)
{
  return PromptForDisambiguationFlowAsync.exitValue.getter(a1);
}

void *sub_1C9988448()
{
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_19_43();
  v0[2] = sub_1C9988514(v1, v2, v3, v4, v5);
  v0[3] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_17_42();
  v0[4] = sub_1C998859C(v7, v8, v9, v10, v11);
  v0[5] = v12;
  uint64_t v13 = OUTLINED_FUNCTION_17_42();
  v0[6] = sub_1C9988624(v13, v14, v15, v16, v17);
  v0[7] = v18;
  uint64_t v19 = OUTLINED_FUNCTION_17_42();
  v0[8] = sub_1C99888F0(v19, v20, v21, v22, v23);
  v0[9] = v24;
  uint64_t v25 = OUTLINED_FUNCTION_17_42();
  v0[10] = sub_1C9988AB4(v25, v26, v27, v28, v29);
  v0[11] = v30;
  uint64_t v31 = OUTLINED_FUNCTION_17_42();
  v0[12] = sub_1C9988C78(v31, v32, v33, v34, v35);
  v0[13] = v36;
  uint64_t v37 = OUTLINED_FUNCTION_17_42();
  v0[14] = sub_1C9988E3C(v37, v38, v39, v40, v41);
  v0[15] = v42;
  uint64_t v43 = OUTLINED_FUNCTION_17_42();
  uint64_t v48 = sub_1C9988FD0(v43, v44, v45, v46, v47);
  uint64_t v50 = v49;
  swift_unknownObjectRelease();
  v0[16] = v48;
  v0[17] = v50;
  return v0;
}

uint64_t (*sub_1C9988514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C999A264;
}

uint64_t (*sub_1C998859C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C999A23C;
}

void *sub_1C9988624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593BE8;
}

uint64_t sub_1C99886AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v13 = *(unsigned char *)(a3 + 24);
  uint64_t v14 = *(void *)(a3 + 32);
  char v15 = *(unsigned char *)(a3 + 40);
  *(void *)(v8 + 16) = *(void *)a3;
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a3 + 8);
  *(unsigned char *)(v8 + 40) = v13;
  *(void *)(v8 + 48) = v14;
  *(unsigned char *)(v8 + 56) = v15;
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 40) + **(int **)(a8 + 40));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v8 + 64) = v16;
  *uint64_t v16 = v8;
  v16[1] = sub_1C99887F8;
  return v18(a1, a2, v8 + 16, a7, a8);
}

uint64_t sub_1C99887F8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

void *sub_1C99888F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593BD8;
}

uint64_t sub_1C9988978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11 = *(unsigned char *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  char v13 = *(unsigned char *)(a2 + 40);
  *(void *)(v7 + 16) = *(void *)a2;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(v7 + 40) = v11;
  *(void *)(v7 + 48) = v12;
  *(unsigned char *)(v7 + 56) = v13;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 48) + **(int **)(a7 + 48));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 64) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_1C99887F8;
  return v16(a1, v7 + 16, a6, a7);
}

void *sub_1C9988AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593BC8;
}

uint64_t sub_1C9988B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11 = *(unsigned char *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  char v13 = *(unsigned char *)(a2 + 40);
  *(void *)(v7 + 16) = *(void *)a2;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(v7 + 40) = v11;
  *(void *)(v7 + 48) = v12;
  *(unsigned char *)(v7 + 56) = v13;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 56) + **(int **)(a7 + 56));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 64) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_1C99887F8;
  return v16(a1, v7 + 16, a6, a7);
}

void *sub_1C9988C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593BB8;
}

uint64_t sub_1C9988D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v11 = *(unsigned char *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  char v13 = *(unsigned char *)(a2 + 40);
  *(void *)(v7 + 16) = *(void *)a2;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(v7 + 40) = v11;
  *(void *)(v7 + 48) = v12;
  *(unsigned char *)(v7 + 56) = v13;
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 64) + **(int **)(a7 + 64));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 64) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_1C99887F8;
  return v16(a1, v7 + 16, a6, a7);
}

void *sub_1C9988E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593BA8;
}

uint64_t sub_1C9988EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 72) + **(int **)(a6 + 72));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1C9615888;
  return v12(a1, a5, a6);
}

void *sub_1C9988FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return &unk_1EA593B98;
}

uint64_t sub_1C9989058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 80) + **(int **)(a7 + 80));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v12;
  *uint64_t v12 = v7;
  v12[1] = sub_1C9615888;
  return v14(a1, a2, a6, a7);
}

void *sub_1C998916C()
{
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_19_43();
  v0[2] = sub_1C99892C4(v1, v2, v3, v4, v5);
  v0[3] = v6;
  uint64_t v7 = OUTLINED_FUNCTION_17_42();
  v0[4] = sub_1C998934C(v7, v8, v9, v10, v11);
  v0[5] = v12;
  uint64_t v13 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v14 = OUTLINED_FUNCTION_33_23(v13);
  v0[6] = &unk_1EA593B38;
  v0[7] = v14;
  uint64_t v15 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v16 = OUTLINED_FUNCTION_33_23(v15);
  v0[8] = &unk_1EA593B48;
  v0[9] = v16;
  uint64_t v17 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v18 = OUTLINED_FUNCTION_33_23(v17);
  v0[10] = &unk_1EA593B58;
  v0[11] = v18;
  uint64_t v19 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v20 = OUTLINED_FUNCTION_33_23(v19);
  v0[12] = &unk_1EA593B68;
  v0[13] = v20;
  uint64_t v21 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v22 = OUTLINED_FUNCTION_33_23(v21);
  v0[14] = &unk_1EA593B78;
  v0[15] = v22;
  uint64_t v23 = (void *)OUTLINED_FUNCTION_11_14();
  uint64_t v24 = OUTLINED_FUNCTION_33_23(v23);
  v0[16] = &unk_1EA593B88;
  v0[17] = v24;
  swift_unknownObjectRetain_n();
  return v0;
}

uint64_t (*sub_1C99892C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C9999E9C;
}

uint64_t (*sub_1C998934C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  uint64_t v10 = (void *)swift_allocObject();
  long long v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v10[6] = a1;
  swift_unknownObjectRetain();
  return sub_1C9999E74;
}

uint64_t sub_1C99893D4(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 104) = a7;
  *(void *)(v8 + 112) = a8;
  *(void *)(v8 + 88) = a5;
  *(void *)(v8 + 96) = a6;
  *(void *)(v8 + 72) = a2;
  *(void *)(v8 + 80) = a4;
  *(void *)(v8 + 64) = a1;
  long long v9 = a3[1];
  *(_OWORD *)(v8 + 16) = *a3;
  *(_OWORD *)(v8 + 32) = v9;
  *(_OWORD *)(v8 + 41) = *(_OWORD *)((char *)a3 + 25);
  return MEMORY[0x1F4188298](sub_1C9989410, 0, 0);
}

uint64_t sub_1C9989410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v15 = *(void *)(v14 + 112);
  uint64_t v16 = *(void *)(v14 + 88);
  uint64_t v17 = swift_task_alloc();
  *(void *)(v14 + 120) = v17;
  long long v18 = *(_OWORD *)(v14 + 96);
  int8x16_t v19 = *(int8x16_t *)(v14 + 72);
  *(void *)(v17 + 16) = v16;
  *(_OWORD *)(v17 + 24) = v18;
  *(void *)(v17 + 40) = v15;
  *(int8x16_t *)(v17 + 48) = vextq_s8(v19, v19, 8uLL);
  *(void *)(v17 + 64) = v14 + 16;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v14 + 128) = v20;
  type metadata accessor for DisambiguationResult();
  OUTLINED_FUNCTION_21_2();
  *uint64_t v20 = v21;
  v20[1] = sub_1C9989514;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v22, v23, v24, v25, v26, v27, v28, v29, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9989514()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9989614()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9989670(uint64_t a1, uint64_t a2, uint64_t a3, long long *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v11 = a4[1];
  long long v15 = *a4;
  v16[0] = v11;
  *(_OWORD *)((char *)v16 + 9) = *(long long *)((char *)a4 + 25);
  uint64_t v12 = sub_1C9989720(a1, a5, a6, a7, a8);
  (*(void (**)(uint64_t, long long *, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a8 + 40))(a3, &v15, v12, v13, a7, a8);

  return swift_release();
}

uint64_t (*sub_1C9989720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1)
{
  type metadata accessor for DisambiguationResult();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v10 = sub_1C9BEDA18();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v18 - v13, a1, v10);
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = a2;
  *((void *)v16 + 3) = a3;
  *((void *)v16 + 4) = a4;
  *((void *)v16 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v15], v14, v10);
  return sub_1C9999D90;
}

uint64_t sub_1C9989898(uint64_t a1)
{
  type metadata accessor for DisambiguationResult();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = sub_1C9BEDA18();
  return sub_1C969F194(a1, v2);
}

uint64_t sub_1C9989904(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 96) = a6;
  *(void *)(v7 + 104) = a7;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a3;
  long long v8 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 41) = *(_OWORD *)((char *)a2 + 25);
  return MEMORY[0x1F4188298](sub_1C998993C, 0, 0);
}

uint64_t sub_1C998993C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = OUTLINED_FUNCTION_106_4();
  OUTLINED_FUNCTION_60_16(v15);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 120) = v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v16 = v17;
  v16[1] = sub_1C99899FC;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C99899FC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9989AFC()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C9989B5C(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  long long v15 = a3[1];
  long long v19 = *a3;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(long long *)((char *)a3 + 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 48))(&v19, sub_1C9999C00, v17, a6, a7);
  return swift_release();
}

uint64_t sub_1C9989CE0(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 96) = a6;
  *(void *)(v7 + 104) = a7;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a3;
  long long v8 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 41) = *(_OWORD *)((char *)a2 + 25);
  return MEMORY[0x1F4188298](sub_1C9989D18, 0, 0);
}

uint64_t sub_1C9989D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = OUTLINED_FUNCTION_106_4();
  OUTLINED_FUNCTION_60_16(v15);
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 120) = v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *unint64_t v16 = v17;
  v16[1] = sub_1C9989DD8;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9989DD8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9989ED8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  long long v15 = a3[1];
  long long v19 = *a3;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(long long *)((char *)a3 + 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 56))(&v19, sub_1C9999C00, v17, a6, a7);
  return swift_release();
}

uint64_t sub_1C998A05C(uint64_t a1)
{
  sub_1C9608D98(a1, (uint64_t)v3, (uint64_t *)&unk_1EBC764F8);
  if (v4)
  {
    v2[0] = *(void *)&v3[0];
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
    return sub_1C9BED9F8();
  }
  else
  {
    sub_1C95FD5D8(v3, (uint64_t)v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
    return sub_1C9BEDA08();
  }
}

uint64_t sub_1C998A0E4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 96) = a6;
  *(void *)(v7 + 104) = a7;
  *(void *)(v7 + 80) = a4;
  *(void *)(v7 + 88) = a5;
  *(void *)(v7 + 64) = a1;
  *(void *)(v7 + 72) = a3;
  long long v8 = a2[1];
  *(_OWORD *)(v7 + 16) = *a2;
  *(_OWORD *)(v7 + 32) = v8;
  *(_OWORD *)(v7 + 41) = *(_OWORD *)((char *)a2 + 25);
  return MEMORY[0x1F4188298](sub_1C998A11C, 0, 0);
}

uint64_t sub_1C998A11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = OUTLINED_FUNCTION_106_4();
  OUTLINED_FUNCTION_60_16(v15);
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v14 + 120) = v16;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *unint64_t v16 = v17;
  v16[1] = sub_1C9989DD8;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C998A1DC(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  long long v15 = a3[1];
  long long v19 = *a3;
  v20[0] = v15;
  *(_OWORD *)((char *)v20 + 9) = *(long long *)((char *)a3 + 25);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, (char *)&v20[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 64))(&v19, sub_1C9999C00, v17, a6, a7);
  return swift_release();
}

uint64_t sub_1C998A360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C998A388, 0, 0);
}

uint64_t sub_1C998A388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = *(void *)(v14 + 24);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 64) = v16;
  long long v17 = *(_OWORD *)(v14 + 48);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 32);
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = v15;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v14 + 72) = v18;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v18 = v19;
  v18[1] = sub_1C979EE40;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C998A458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 72))(sub_1C9999C00, v14, a5, a6);
  return swift_release();
}

uint64_t sub_1C998A5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  uint64_t v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C998A5EC, 0, 0);
}

uint64_t sub_1C998A5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = swift_task_alloc();
  *(void *)(v14 + 72) = v15;
  long long v16 = *(_OWORD *)(v14 + 56);
  int8x16_t v17 = *(int8x16_t *)(v14 + 24);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)(v14 + 40);
  *(_OWORD *)(v15 + 32) = v16;
  *(int8x16_t *)(v15 + 48) = vextq_s8(v17, v17, 8uLL);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v14 + 80) = v18;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v18 = v19;
  v18[1] = sub_1C967CF64;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C998A6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a7 + 80))(a3, sub_1C9999C00, v16, a6, a7);
  return swift_release();
}

uint64_t sub_1C998A834()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C998A85C()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1C998A884(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = a2;
  uint64_t v5 = *a3;
  *(void *)(v4 + 80) = v3;
  *(void *)(v4 + 88) = v5;
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a3 + 1);
  *(unsigned char *)(v4 + 57) = *((unsigned char *)a3 + 24);
  *(void *)(v4 + 112) = a3[4];
  *(unsigned char *)(v4 + 58) = *((unsigned char *)a3 + 40);
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C998A8C4);
}

uint64_t sub_1C998A8C4()
{
  OUTLINED_FUNCTION_33();
  char v1 = *(unsigned char *)(v0 + 58);
  uint64_t v2 = *(void *)(v0 + 112);
  char v3 = *(unsigned char *)(v0 + 57);
  uint64_t v4 = *(int **)(*(void *)(v0 + 80) + 48);
  *(void *)(v0 + 16) = *(void *)(v0 + 88);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 96);
  *(unsigned char *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v2;
  *(unsigned char *)(v0 + 56) = v1;
  long long v8 = (uint64_t (*)(void))((char *)v4 + *v4);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 120) = v5;
  *uint64_t v5 = v6;
  v5[1] = sub_1C998A9BC;
  OUTLINED_FUNCTION_131_1();
  return v8();
}

uint64_t sub_1C998A9BC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *char v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C998AAB4(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C998AAD4);
}

uint64_t sub_1C998AAD4()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_72_15();
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 88);
  *(unsigned char *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  *(unsigned char *)(v0 + 56) = v4;
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_218(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C998ABB4;
  uint64_t v8 = OUTLINED_FUNCTION_74_12();
  return v9(v8);
}

uint64_t sub_1C998ABB4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C998ACAC()
{
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C998ACC8(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C998ACE8);
}

uint64_t sub_1C998ACE8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_72_15();
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 88);
  *(unsigned char *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  *(unsigned char *)(v0 + 56) = v4;
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_218(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C998ADC8;
  uint64_t v8 = OUTLINED_FUNCTION_74_12();
  return v9(v8);
}

uint64_t sub_1C998ADC8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C998AEC0(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C998AEE0);
}

uint64_t sub_1C998AEE0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_72_15();
  *(void *)(v0 + 16) = v1;
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 88);
  *(unsigned char *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = v3;
  *(unsigned char *)(v0 + 56) = v4;
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_218(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C998ADC8;
  uint64_t v8 = OUTLINED_FUNCTION_74_12();
  return v9(v8);
}

uint64_t sub_1C998AFC0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C998AFD8);
}

uint64_t sub_1C998AFD8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 24) + 112)
                                       + **(int **)(*(void *)(v0 + 24) + 112));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_20_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C962CEA4;
  uint64_t v4 = OUTLINED_FUNCTION_60_1();
  return v6(v4);
}

uint64_t sub_1C998B09C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C998B0B8);
}

uint64_t sub_1C998B0B8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 128) + **(int **)(v0[4] + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96ED14C;
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  return v5(v2, v3);
}

uint64_t sub_1C998B190(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9615888;
  return sub_1C998A884(a1, a2, a3);
}

uint64_t sub_1C998B240(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C998AAB4(a1, a2);
}

uint64_t sub_1C998B2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C998ACC8(a1, a2);
}

uint64_t sub_1C998B390(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C998AEC0(a1, a2);
}

uint64_t sub_1C998B438(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C998AFC0(a1);
}

uint64_t sub_1C998B4D0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C998B09C(a1, a2);
}

uint64_t sub_1C998B57C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t type metadata accessor for PromptForDisambiguationFlowAsync.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for AnyPromptForDisambiguationFlowStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C998B5E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C998B650(uint64_t a1)
{
  return sub_1C9973494(a1);
}

uint64_t sub_1C998B67C(uint64_t a1)
{
  return sub_1C9973494(a1);
}

uint64_t sub_1C998B6A8()
{
  uint64_t result = type metadata accessor for DisambiguationResult.DisambiguationResultType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C998B73C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 9uLL) {
    uint64_t v5 = 9;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if ((*(_DWORD *)(v4 + 80) & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  unsigned int v7 = a2[v5];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_19;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_19:
        int v11 = (v10 | (v8 << (8 * v5))) + 2;
        unsigned int v7 = v10 + 2;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    *(unsigned char *)(a1 + v5) = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    *(unsigned char *)(a1 + v5) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1C998B8BC(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 9) {
    unint64_t v2 = 9;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 != 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

uint64_t sub_1C998B9B8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 9uLL) {
    uint64_t v4 = 9;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    char v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C998BAF8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 9uLL) {
      uint64_t v7 = 9;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void *)a2;
      a1[8] = a2[8];
      *(void *)a1 = v18;
      char v19 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v19 = 0;
    }
    a1[v7] = v19;
  }
  return a1;
}

uint64_t sub_1C998BD0C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 9uLL) {
    uint64_t v4 = 9;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    char v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C998BE4C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 9uLL) {
      uint64_t v7 = 9;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C998C060(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 9;
  if (*(void *)(v3 + 64) > 9uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C998C194(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 9) {
    unint64_t v5 = 9;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C998C358);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t type metadata accessor for DisambiguationResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.paginationStyle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.actionForInput(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.parseDisambiguationResult(input:paginatedItems:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makePromptForDisambiguation(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeRepromptOnEmptyParse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeRepromptOnLowConfidence(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.paginationStyle()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.actionForInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.parseDisambiguationResponse(input:paginatedItems:)()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  unsigned int v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
  uint64_t v10 = swift_task_alloc();
  unsigned int v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *unsigned int v11 = v12;
  v11[1] = sub_1C9615888;
  return v14(v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makePromptForDisambiguation(paginatedItems:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeRepromptOnEmptyParse(paginatedItems:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeRepromptOnLowConfidence(paginatedItems:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 72) + **(int **)(v0 + 72));
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_17_0(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1C9615010;
  return v10(v5, v3, v1);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.makeErrorResponse(_:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowStrategyAsync.pervasiveUseCaseDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t type metadata accessor for PromptForDisambiguationFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromptForDisambiguationFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForDisambiguationFlow);
}

uint64_t sub_1C998CA34()
{
  uint64_t result = type metadata accessor for PromptForDisambiguationFlowAsync.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for PromptForDisambiguationFlowAsync()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromptForDisambiguationFlowAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForDisambiguationFlowAsync);
}

uint64_t dispatch thunk of PromptForDisambiguationFlowAsync.__allocating_init<A>(items:strategy:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C998CB38()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C998CB8C()
{
  uint64_t v5 = ")";
  uint64_t v6 = ")";
  uint64_t result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v8 = &v3;
    uint64_t v9 = ")";
    uint64_t result = type metadata accessor for PromptResult();
    if (v2 <= 0x3F)
    {
      uint64_t v10 = *(void *)(result - 8) + 64;
      uint64_t v11 = &unk_1C9C05430;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

char *sub_1C998CC9C(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  __dst = (void *)sub_1C9BEAB08();
  uint64_t v294 = *(__dst - 1);
  uint64_t v286 = *(void *)(v294 + 64);
  uint64_t v264 = sub_1C9BEC028();
  uint64_t v280 = *(void *)(v264 - 8);
  uint64_t v263 = v280;
  int v3 = *(_DWORD *)(v280 + 80);
  uint64_t v262 = sub_1C9BEAC48();
  uint64_t v282 = *(void *)(v262 - 8);
  uint64_t v261 = v282;
  int v270 = *(_DWORD *)(v282 + 80) | v3;
  uint64_t v266 = sub_1C9BEAF18();
  uint64_t v278 = *(void *)(v266 - 8);
  uint64_t v293 = v278;
  int v290 = *(_DWORD *)(v278 + 80);
  uint64_t v265 = sub_1C9BEAE48();
  uint64_t v273 = *(void *)(v265 - 8);
  int v4 = *(_DWORD *)(v273 + 80);
  int v5 = v4;
  uint64_t v6 = v290 & 0xF8 | v4 | 7u;
  uint64_t v7 = sub_1C9BEC928();
  uint64_t v276 = *(void *)(v7 - 8);
  uint64_t v256 = v276;
  uint64_t v257 = v7;
  int v8 = *(_DWORD *)(v276 + 80);
  uint64_t v260 = sub_1C9BEC8F8();
  uint64_t v9 = v280;
  uint64_t v259 = *(void *)(v260 - 8);
  int v10 = *(_DWORD *)(v259 + 80);
  int v11 = v8;
  uint64_t v12 = (v270 | (v8 | v10)) & 0xF8 | v6;
  uint64_t v281 = v286 + v12;
  unint64_t v13 = *(void *)(v9 + 64);
  unint64_t v258 = v13 + 7;
  if (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v13) {
    unint64_t v13 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v13 <= *(void *)(v282 + 64)) {
    unint64_t v13 = *(void *)(v282 + 64);
  }
  int v14 = v4;
  uint64_t v279 = *(void *)(v278 + 64) + v4;
  uint64_t v283 = v4;
  unint64_t v15 = v279 & ~(unint64_t)v4;
  uint64_t v255 = v273;
  int v16 = *(_DWORD *)(v273 + 84);
  if (v16) {
    uint64_t v17 = *(void *)(v273 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v273 + 64) + 1;
  }
  unint64_t v18 = (v17 + 7 + v15) & 0xFFFFFFFFFFFFFFF8;
  size_t v19 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v13 <= v19) {
    unint64_t v13 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v20 = v18 + 31;
  if (v13 <= (((((v20 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v13 = (((((v20 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v21 = *(void *)(v276 + 64);
  uint64_t v277 = v6 + 16;
  uint64_t v22 = v290 & 0xF8 | v5 | 7u;
  unint64_t v23 = (v6 + 16 + ((v21 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  uint64_t v24 = *(unsigned int *)(v293 + 84);
  if (v16) {
    unsigned int v25 = v16 - 1;
  }
  else {
    unsigned int v25 = 0;
  }
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v293 + 84);
  }
  else {
    unsigned int v26 = v25;
  }
  if (v26 <= 0x7FFFFFFE) {
    int v27 = 2147483646;
  }
  else {
    int v27 = v26;
  }
  unint64_t v28 = ((v20 + v23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v13 <= v28) {
    unint64_t v13 = v28;
  }
  unint64_t v29 = *(void *)(*(void *)(v260 - 8) + 64);
  if (v13 > v29) {
    unint64_t v29 = v13;
  }
  if (v29 <= 0x18) {
    uint64_t v30 = 24;
  }
  else {
    uint64_t v30 = v29;
  }
  unint64_t v31 = (v30 + ((v286 + v12) & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v32 + 64) <= 9uLL) {
    uint64_t v33 = 9;
  }
  else {
    uint64_t v33 = *(void *)(v32 + 64);
  }
  char v34 = 8 * v33;
  if (v33 > 3) {
    goto LABEL_35;
  }
  unsigned int v35 = ((1 << v34) + 1) >> v34;
  uint64_t v36 = 2;
  if (v35 > 0xFFFD) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFD) {
LABEL_35:
  }
    uint64_t v36 = 1;
  unint64_t v37 = v36 + v33;
  unint64_t v287 = ((v31 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  if (v287 > v37) {
    unint64_t v37 = ((v31 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  uint64_t v38 = 41;
  if (v37 > 0x29) {
    uint64_t v38 = v37;
  }
  int v39 = *(_DWORD *)(v294 + 80);
  int v40 = *(_DWORD *)(v32 + 80);
  int v41 = v270 | v290 | v14 | v11 | v10 | v39 | v40;
  uint64_t v42 = a1;
  if ((v41 & 0x100000) != 0
    || ((unint64_t)(v38 + 1) <= 0x18
      ? (BOOL v43 = ((v40 | v39) & 0xF8 | v12) == 7)
      : (BOOL v43 = 0),
        !v43))
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  if (v33 > 3) {
    goto LABEL_50;
  }
  unsigned int v44 = ((1 << v34) + 1) >> v34;
  uint64_t v45 = 2;
  if (v44 > 0xFFFD) {
    uint64_t v45 = 4;
  }
  if (v44 <= 0xFD) {
LABEL_50:
  }
    uint64_t v45 = 1;
  unint64_t v46 = v45 + v33;
  if (v287 > v46) {
    unint64_t v46 = ((v31 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v46 <= 0x29) {
    unint64_t v46 = 41;
  }
  unsigned int v47 = a2[v46];
  unsigned int v48 = v47 - 7;
  if (v47 >= 7)
  {
    if (v33 > 3) {
      goto LABEL_60;
    }
    unsigned int v49 = ((1 << v34) + 1) >> v34;
    uint64_t v50 = 2;
    if (v49 > 0xFFFD) {
      uint64_t v50 = 4;
    }
    if (v49 <= 0xFD) {
LABEL_60:
    }
      uint64_t v50 = 1;
    unint64_t v51 = v50 + v33;
    if (v287 > v51) {
      unint64_t v51 = ((v31 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v51 <= 0x29) {
      LODWORD(v51) = 41;
    }
    if (v51 <= 3) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 4;
    }
    switch(v52)
    {
      case 1:
        int v53 = *a2;
        goto LABEL_74;
      case 2:
        int v53 = *(unsigned __int16 *)a2;
        goto LABEL_74;
      case 3:
        int v53 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_74;
      case 4:
        int v53 = *(_DWORD *)a2;
LABEL_74:
        if (v51 < 4) {
          v53 |= v48 << (8 * v51);
        }
        unsigned int v47 = v53 + 7;
        break;
      default:
        break;
    }
  }
  unsigned int v291 = *(_DWORD *)(v273 + 84);
  size_t v289 = *(void *)(v273 + 64);
  uint64_t v54 = ~v12;
  uint64_t v55 = ~v22;
  switch(v47)
  {
    case 0u:
      char v56 = 8 * v33;
      uint64_t v57 = v33;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      a1[40] = a2[40];
      swift_bridgeObjectRetain();
      if (v57 > 3) {
        goto LABEL_82;
      }
      unsigned int v58 = ((1 << v56) + 1) >> v56;
      uint64_t v59 = 2;
      if (v58 > 0xFFFD) {
        uint64_t v59 = 4;
      }
      if (v58 <= 0xFD) {
LABEL_82:
      }
        uint64_t v59 = 1;
      unint64_t v60 = v59 + v57;
      if (v287 > v60) {
        unint64_t v60 = v287;
      }
      if (v60 <= 0x29) {
        unint64_t v60 = 41;
      }
      uint64_t v42 = a1;
      a1[v60] = 0;
      return v42;
    case 1u:
      char v64 = 8 * v33;
      uint64_t v65 = v33;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v66 = a1;
      a1[40] = a2[40];
      swift_bridgeObjectRetain();
      if (v65 > 3) {
        goto LABEL_102;
      }
      unsigned int v67 = ((1 << v64) + 1) >> v64;
      uint64_t v68 = 2;
      if (v67 > 0xFFFD) {
        uint64_t v68 = 4;
      }
      if (v67 <= 0xFD) {
LABEL_102:
      }
        uint64_t v68 = 1;
      unint64_t v69 = v68 + v65;
      if (v287 > v69) {
        unint64_t v69 = v287;
      }
      if (v69 <= 0x29) {
        unint64_t v69 = 41;
      }
      char v70 = 1;
      goto LABEL_130;
    case 2u:
      uint64_t v249 = v17 + 7;
      uint64_t v251 = ~v283;
      int v245 = v27;
      unint64_t v243 = v15;
      size_t __n = v17;
      size_t v284 = v30 + 1;
      unint64_t v271 = v31;
      uint64_t v274 = v33;
      char v253 = 8 * v33;
      uint64_t v71 = *(void (**)(char *, unsigned __int8 *, void *))(v294 + 16);
      uint64_t v295 = v30;
      v71(a1, a2, __dst);
      unint64_t __dsta = (unint64_t)&a1[v281] & v54;
      uint64_t v72 = (unsigned __int8 *)((unint64_t)&a2[v281] & v54);
      unsigned int v73 = v72[v295];
      unsigned int v74 = v73 - 10;
      if (v73 >= 0xA)
      {
        if (v295 <= 3) {
          uint64_t v75 = v295;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *v72;
            goto LABEL_156;
          case 2:
            int v76 = *(unsigned __int16 *)v72;
            goto LABEL_156;
          case 3:
            int v76 = *(unsigned __int16 *)((unint64_t)&a2[v281] & v54) | (*(unsigned __int8 *)(((unint64_t)&a2[v281] & v54)
                                                                                                 + 2) << 16);
            goto LABEL_156;
          case 4:
            int v76 = *(_DWORD *)v72;
LABEL_156:
            if (v295 < 4) {
              unsigned int v73 = (v76 | (v74 << (8 * v295))) + 10;
            }
            else {
              unsigned int v73 = v76 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v73)
      {
        case 0u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(__dsta, v72, v264);
          *(unsigned char *)(__dsta + v295) = 0;
          goto LABEL_279;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(__dsta, v72, v264);
          *(void *)((v258 + __dsta) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v72[v258] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(__dsta + v295) = 1;
          sub_1C9BEC838();
        case 2u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          *(void *)unint64_t __dsta = *(void *)v72;
          *(void *)(v101 + 8) = *(void *)(((unint64_t)&a2[v281] & v54) + 8);
          *(void *)(v101 + 0x10) = *(void *)(((unint64_t)&a2[v281] & v54) + 0x10);
          *(unsigned char *)(__dsta + v295) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_247;
        case 3u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          *(void *)unint64_t __dsta = *(void *)v72;
          *(unsigned char *)(__dsta + v295) = 3;
          swift_unknownObjectRetain();
          goto LABEL_279;
        case 4u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          uint64_t v122 = v295;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v261 + 16))(__dsta, v72, v262);
          char v123 = 4;
          goto LABEL_216;
        case 5u:
          uint64_t v100 = a1;
          uint64_t v124 = *(void **)v72;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          *(void *)unint64_t __dsta = *(void *)v72;
          *(unsigned char *)(__dsta + v295) = 5;
          id v125 = v124;
          goto LABEL_279;
        case 6u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v293 + 16))(__dsta, v72, v266);
          uint64_t v126 = (void *)((v279 + __dsta) & v251);
          uint64_t v127 = (const void *)((unint64_t)&v72[v279] & v251);
          if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v265))
          {
            memcpy(v126, v127, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v255 + 16))(v126, v127, v265);
            __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v265);
          }
          uint64_t v155 = (void *)(((unint64_t)v126 + v249) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v156 = (void *)(((unint64_t)v127 + v249) & 0xFFFFFFFFFFFFFFF8);
          void *v155 = *v156;
          v155[1] = v156[1];
          unint64_t v157 = ((unint64_t)v155 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v158 = ((unint64_t)v156 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v159 = *(_DWORD *)v158;
          *(unsigned char *)(v157 + 4) = *(unsigned char *)(v158 + 4);
          *(_DWORD *)unint64_t v157 = v159;
          *(unsigned char *)(__dsta + v295) = 6;
          goto LABEL_247;
        case 7u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v293 + 16))(__dsta, v72, v266);
          uint64_t v128 = (void *)((v279 + __dsta) & v251);
          uint64_t v129 = (const void *)((unint64_t)&v72[v279] & v251);
          if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v265))
          {
            memcpy(v128, v129, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v255 + 16))(v128, v129, v265);
            __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v265);
          }
          uint64_t v160 = (void *)(((unint64_t)v128 + v249) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v161 = (void *)(((unint64_t)v129 + v249) & 0xFFFFFFFFFFFFFFF8);
          void *v160 = *v161;
          v160[1] = v161[1];
          unint64_t v162 = ((unint64_t)v160 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v163 = ((unint64_t)v161 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v164 = *(_DWORD *)v163;
          *(unsigned char *)(v162 + 4) = *(unsigned char *)(v163 + 4);
          *(_DWORD *)unint64_t v162 = v164;
          uint64_t v165 = (void *)(((__dsta | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v166 = (void *)((((unint64_t)v72 | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          void *v165 = *v166;
          v165[1] = v166[1];
          int v167 = (void *)(((unint64_t)v165 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v168 = (void *)(((unint64_t)v166 + 23) & 0xFFFFFFFFFFFFFFF8);
          *int v167 = *v168;
          v167[1] = v168[1];
          uint64_t v169 = (void *)(((unint64_t)v167 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v170 = (void *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v169 = *v170;
          v169[1] = v170[1];
          *(unsigned char *)(__dsta + v295) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_247:
          swift_bridgeObjectRetain();
          goto LABEL_279;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v256 + 16))(__dsta, v72, v257);
          uint64_t v130 = (void *)(((__dsta | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v131 = (void *)((((unint64_t)v72 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v130 = *v131;
          v130[1] = v131[1];
          unint64_t v132 = ((unint64_t)v130 + v277) & v55;
          uint64_t v133 = ((unint64_t)v131 + v277) & v55;
          swift_bridgeObjectRetain();
          if (v24 == v245)
          {
            uint64_t v134 = v24;
            uint64_t v135 = v266;
            uint64_t v136 = v279;
            unint64_t v101 = (unint64_t)&a1[v281] & v54;
            if (!__swift_getEnumTagSinglePayload(v133, v134, v266))
            {
              uint64_t v137 = (const void *)((v279 + v133) & v251);
              goto LABEL_270;
            }
LABEL_237:
            memcpy((void *)v132, (const void *)v133, v19);
LABEL_277:
            size_t v210 = __n;
            goto LABEL_278;
          }
          uint64_t v136 = v279;
          uint64_t v137 = (const void *)((v279 + v133) & v251);
          if (v25 != v245)
          {
            unint64_t v201 = *(void *)((((unint64_t)v137 + v249) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v201 >= 0xFFFFFFFF) {
              LODWORD(v201) = -1;
            }
            uint64_t v135 = v266;
            unint64_t v101 = __dsta;
            if ((v201 + 1) < 2) {
              goto LABEL_270;
            }
            goto LABEL_237;
          }
          uint64_t v135 = v266;
          unint64_t v101 = __dsta;
          if (v291 >= 2 && __swift_getEnumTagSinglePayload((v279 + v133) & v251, v291, v265) >= 2) {
            goto LABEL_237;
          }
LABEL_270:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v293 + 16))(v132, v133, v135);
          uint64_t v202 = (void *)((v136 + v132) & v251);
          if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v265))
          {
            memcpy(v202, v137, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v255 + 16))(v202, v137, v265);
            __swift_storeEnumTagSinglePayload((uint64_t)v202, 0, 1, v265);
          }
          uint64_t v205 = (void *)(((unint64_t)v202 + v249) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v206 = (void *)(((unint64_t)v137 + v249) & 0xFFFFFFFFFFFFFFF8);
          void *v205 = *v206;
          v205[1] = v206[1];
          unint64_t v207 = ((unint64_t)v205 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v208 = ((unint64_t)v206 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v209 = *(_DWORD *)v208;
          *(unsigned char *)(v207 + 4) = *(unsigned char *)(v208 + 4);
          *(_DWORD *)unint64_t v207 = v209;
          swift_bridgeObjectRetain();
          size_t v210 = v289;
          if (!v291) {
            goto LABEL_277;
          }
LABEL_278:
          unint64_t v211 = (((v243 + v210 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          unint64_t v212 = (void *)(((v132 | 7) + v211) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v213 = *(void **)(((v133 | 7) + v211) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v212 = v213;
          *(unsigned char *)(v101 + v295) = 8;
          id v214 = v213;
          uint64_t v100 = a1;
LABEL_279:
          uint64_t v215 = (void *)((((unint64_t)v72 | 7) + v284) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v216 = (void *)(((v101 | 7) + v284) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v216 = *v215;
          unint64_t v217 = ((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v218 = ((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v219 = *(void *)(v218 + 24);
          swift_bridgeObjectRetain();
          if (v219 < 0xFFFFFFFF)
          {
            long long v220 = *(_OWORD *)v218;
            long long v221 = *(_OWORD *)(v218 + 16);
            *(void *)(v217 + 32) = *(void *)(v218 + 32);
            *(_OWORD *)unint64_t v217 = v220;
            *(_OWORD *)(v217 + 16) = v221;
          }
          else
          {
            *(void *)(v217 + 24) = v219;
            *(void *)(v217 + 32) = *(void *)(v218 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v219 - 8))(v217, v218, v219);
          }
          *(unsigned char *)(v217 + 40) = *(unsigned char *)(v218 + 40);
          unint64_t v222 = ((v271 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
          uint64_t v42 = v100;
          unint64_t v223 = (unint64_t)&v100[v222 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v224 = (unint64_t)&a2[v222 + 7] & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v223 = *(void *)v224;
          long long v225 = *(_OWORD *)(v224 + 8);
          *(unsigned char *)(v223 + 24) = *(unsigned char *)(v224 + 24);
          *(_OWORD *)(v223 + 8) = v225;
          uint64_t v226 = *(void *)(v224 + 32);
          *(unsigned char *)(v223 + 40) = *(unsigned char *)(v224 + 40);
          *(void *)(v223 + 32) = v226;
          swift_bridgeObjectRetain();
          if (v274 > 3) {
            goto LABEL_286;
          }
          unsigned int v227 = ((1 << v253) + 1) >> v253;
          uint64_t v228 = 2;
          if (v227 > 0xFFFD) {
            uint64_t v228 = 4;
          }
          if (v227 <= 0xFD) {
LABEL_286:
          }
            uint64_t v228 = 1;
          unint64_t v95 = v228 + v274;
          if (v287 > v95) {
            unint64_t v95 = v287;
          }
          if (v95 <= 0x29) {
            unint64_t v95 = 41;
          }
          char v96 = 2;
LABEL_292:
          v42[v95] = v96;
          return v42;
        case 9u:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          uint64_t v122 = v295;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(__dsta, v72, v260);
          char v123 = 9;
LABEL_216:
          *(unsigned char *)(v101 + v122) = v123;
          goto LABEL_279;
        default:
          uint64_t v100 = a1;
          unint64_t v101 = (unint64_t)&a1[v281] & v54;
          memcpy((void *)__dsta, v72, v284);
          goto LABEL_279;
      }
    case 3u:
      uint64_t v250 = v17 + 7;
      uint64_t v252 = ~v283;
      int v246 = v27;
      unint64_t v244 = v15;
      size_t __na = v17;
      size_t v285 = v30 + 1;
      unint64_t v272 = v31;
      uint64_t v275 = v33;
      char v254 = 8 * v33;
      uint64_t v77 = *(void (**)(char *, unsigned __int8 *, void *))(v294 + 16);
      uint64_t v296 = v30;
      v77(a1, a2, __dst);
      unint64_t __dstb = (unint64_t)&a1[v281] & v54;
      uint64_t v78 = (unsigned __int8 *)((unint64_t)&a2[v281] & v54);
      unsigned int v79 = v78[v296];
      unsigned int v80 = v79 - 10;
      if (v79 >= 0xA)
      {
        if (v296 <= 3) {
          uint64_t v81 = v296;
        }
        else {
          uint64_t v81 = 4;
        }
        switch(v81)
        {
          case 1:
            int v82 = *v78;
            goto LABEL_164;
          case 2:
            int v82 = *(unsigned __int16 *)v78;
            goto LABEL_164;
          case 3:
            int v82 = *(unsigned __int16 *)((unint64_t)&a2[v281] & v54) | (*(unsigned __int8 *)(((unint64_t)&a2[v281] & v54)
                                                                                                 + 2) << 16);
            goto LABEL_164;
          case 4:
            int v82 = *(_DWORD *)v78;
LABEL_164:
            if (v296 < 4) {
              unsigned int v79 = (v82 | (v80 << (8 * v296))) + 10;
            }
            else {
              unsigned int v79 = v82 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v79)
      {
        case 0u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(__dstb, v78, v264);
          *(unsigned char *)(__dstb + v296) = 0;
          goto LABEL_253;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(__dstb, v78, v264);
          *(void *)((v258 + __dstb) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v78[v258] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(__dstb + v296) = 1;
          sub_1C9BEC838();
        case 2u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          *(void *)unint64_t __dstb = *(void *)v78;
          *(void *)(v103 + 8) = *(void *)(((unint64_t)&a2[v281] & v54) + 8);
          *(void *)(v103 + 0x10) = *(void *)(((unint64_t)&a2[v281] & v54) + 0x10);
          *(unsigned char *)(__dstb + v296) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_252;
        case 3u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          *(void *)unint64_t __dstb = *(void *)v78;
          *(unsigned char *)(__dstb + v296) = 3;
          swift_unknownObjectRetain();
          goto LABEL_253;
        case 4u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          uint64_t v139 = v296;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v261 + 16))(__dstb, v78, v262);
          char v140 = 4;
          goto LABEL_228;
        case 5u:
          BOOL v102 = a1;
          BOOL v141 = *(void **)v78;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          *(void *)unint64_t __dstb = *(void *)v78;
          *(unsigned char *)(__dstb + v296) = 5;
          id v142 = v141;
          goto LABEL_253;
        case 6u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v293 + 16))(__dstb, v78, v266);
          uint64_t v143 = (void *)((v279 + __dstb) & v252);
          uint64_t v144 = (const void *)((unint64_t)&v78[v279] & v252);
          if (__swift_getEnumTagSinglePayload((uint64_t)v144, 1, v265))
          {
            memcpy(v143, v144, __na);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v255 + 16))(v143, v144, v265);
            __swift_storeEnumTagSinglePayload((uint64_t)v143, 0, 1, v265);
          }
          uint64_t v171 = (void *)(((unint64_t)v143 + v250) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v172 = (void *)(((unint64_t)v144 + v250) & 0xFFFFFFFFFFFFFFF8);
          void *v171 = *v172;
          v171[1] = v172[1];
          unint64_t v173 = ((unint64_t)v171 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v174 = ((unint64_t)v172 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v175 = *(_DWORD *)v174;
          *(unsigned char *)(v173 + 4) = *(unsigned char *)(v174 + 4);
          *(_DWORD *)unint64_t v173 = v175;
          *(unsigned char *)(__dstb + v296) = 6;
          goto LABEL_252;
        case 7u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v293 + 16))(__dstb, v78, v266);
          uint64_t v145 = (void *)((v279 + __dstb) & v252);
          uint64_t v146 = (const void *)((unint64_t)&v78[v279] & v252);
          if (__swift_getEnumTagSinglePayload((uint64_t)v146, 1, v265))
          {
            memcpy(v145, v146, __na);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v255 + 16))(v145, v146, v265);
            __swift_storeEnumTagSinglePayload((uint64_t)v145, 0, 1, v265);
          }
          unint64_t v176 = (void *)(((unint64_t)v145 + v250) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v177 = (void *)(((unint64_t)v146 + v250) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v176 = *v177;
          v176[1] = v177[1];
          unint64_t v178 = ((unint64_t)v176 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v179 = ((unint64_t)v177 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v180 = *(_DWORD *)v179;
          *(unsigned char *)(v178 + 4) = *(unsigned char *)(v179 + 4);
          *(_DWORD *)unint64_t v178 = v180;
          uint64_t v181 = (void *)(((__dstb | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v182 = (void *)((((unint64_t)v78 | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v181 = *v182;
          v181[1] = v182[1];
          unint64_t v183 = (void *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v184 = (void *)(((unint64_t)v182 + 23) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v183 = *v184;
          v183[1] = v184[1];
          uint64_t v185 = (void *)(((unint64_t)v183 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v186 = (void *)(((unint64_t)v184 + 23) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v185 = *v186;
          v185[1] = v186[1];
          *(unsigned char *)(__dstb + v296) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_252:
          swift_bridgeObjectRetain();
          goto LABEL_253;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v256 + 16))(__dstb, v78, v257);
          uint64_t v147 = (void *)(((__dstb | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v148 = (void *)((((unint64_t)v78 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v147 = *v148;
          v147[1] = v148[1];
          unint64_t v149 = ((unint64_t)v147 + v277) & v55;
          uint64_t v150 = ((unint64_t)v148 + v277) & v55;
          swift_bridgeObjectRetain();
          if (v24 == v246)
          {
            uint64_t v151 = v24;
            uint64_t v152 = v266;
            uint64_t v153 = v279;
            unint64_t v103 = (unint64_t)&a1[v281] & v54;
            if (!__swift_getEnumTagSinglePayload(v150, v151, v266))
            {
              uint64_t v154 = (const void *)((v279 + v150) & v252);
              goto LABEL_296;
            }
LABEL_298:
            memcpy((void *)v149, (const void *)v150, v19);
            uint64_t v231 = v296;
            unint64_t v232 = v244;
            goto LABEL_301;
          }
          uint64_t v153 = v279;
          uint64_t v154 = (const void *)((v279 + v150) & v252);
          if (v25 == v246)
          {
            if (v291 < 2)
            {
              uint64_t v152 = v266;
              unint64_t v103 = __dstb;
              goto LABEL_296;
            }
            BOOL v204 = __swift_getEnumTagSinglePayload((v279 + v150) & v252, v291, v265) >= 2;
          }
          else
          {
            unint64_t v203 = *(void *)((((unint64_t)v154 + v250) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v203 >= 0xFFFFFFFF) {
              LODWORD(v203) = -1;
            }
            BOOL v204 = (v203 + 1) >= 2;
          }
          uint64_t v152 = v266;
          unint64_t v103 = __dstb;
          if (v204) {
            goto LABEL_298;
          }
LABEL_296:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v293 + 16))(v149, v150, v152);
          v230 = (void *)((v153 + v149) & v252);
          if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v265))
          {
            memcpy(v230, v154, __na);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v255 + 16))(v230, v154, v265);
            __swift_storeEnumTagSinglePayload((uint64_t)v230, 0, 1, v265);
          }
          uint64_t v233 = (void *)(((unint64_t)v230 + v250) & 0xFFFFFFFFFFFFFFF8);
          v234 = (void *)(((unint64_t)v154 + v250) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v233 = *v234;
          v233[1] = v234[1];
          unint64_t v235 = ((unint64_t)v233 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v236 = ((unint64_t)v234 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v237 = *(_DWORD *)v236;
          *(unsigned char *)(v235 + 4) = *(unsigned char *)(v236 + 4);
          *(_DWORD *)unint64_t v235 = v237;
          swift_bridgeObjectRetain();
          uint64_t v231 = v296;
          unint64_t v232 = v244;
          size_t v238 = v289;
          if (v291)
          {
LABEL_302:
            unint64_t v239 = (((v232 + v238 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
            uint64_t v240 = (void *)(((v149 | 7) + v239) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v241 = *(void **)(((v150 | 7) + v239) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v240 = v241;
            *(unsigned char *)(v103 + v231) = 8;
            id v242 = v241;
            size_t v138 = v285;
            BOOL v102 = a1;
LABEL_254:
            uint64_t v187 = (void *)((((unint64_t)v78 | 7) + v138) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v188 = (void *)(((v103 | 7) + v138) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v188 = *v187;
            unint64_t v189 = ((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v190 = ((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v191 = *(void *)(v190 + 24);
            swift_bridgeObjectRetain();
            if (v191 < 0xFFFFFFFF)
            {
              long long v192 = *(_OWORD *)v190;
              long long v193 = *(_OWORD *)(v190 + 16);
              *(void *)(v189 + 32) = *(void *)(v190 + 32);
              *(_OWORD *)unint64_t v189 = v192;
              *(_OWORD *)(v189 + 16) = v193;
            }
            else
            {
              *(void *)(v189 + 24) = v191;
              *(void *)(v189 + 32) = *(void *)(v190 + 32);
              (**(void (***)(unint64_t, unint64_t, unint64_t))(v191 - 8))(v189, v190, v191);
            }
            *(unsigned char *)(v189 + 40) = *(unsigned char *)(v190 + 40);
            unint64_t v194 = ((v272 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
            uint64_t v42 = v102;
            unint64_t v195 = (unint64_t)&v102[v194 + 7] & 0xFFFFFFFFFFFFFFF8;
            unint64_t v196 = (unint64_t)&a2[v194 + 7] & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v195 = *(void *)v196;
            long long v197 = *(_OWORD *)(v196 + 8);
            *(unsigned char *)(v195 + 24) = *(unsigned char *)(v196 + 24);
            *(_OWORD *)(v195 + 8) = v197;
            uint64_t v198 = *(void *)(v196 + 32);
            *(unsigned char *)(v195 + 40) = *(unsigned char *)(v196 + 40);
            *(void *)(v195 + 32) = v198;
            swift_bridgeObjectRetain();
            if (v275 > 3) {
              goto LABEL_261;
            }
            unsigned int v199 = ((1 << v254) + 1) >> v254;
            uint64_t v200 = 2;
            if (v199 > 0xFFFD) {
              uint64_t v200 = 4;
            }
            if (v199 <= 0xFD) {
LABEL_261:
            }
              uint64_t v200 = 1;
            unint64_t v95 = v200 + v275;
            if (v287 > v95) {
              unint64_t v95 = v287;
            }
            if (v95 <= 0x29) {
              unint64_t v95 = 41;
            }
            char v96 = 3;
            goto LABEL_292;
          }
LABEL_301:
          size_t v238 = __na;
          goto LABEL_302;
        case 9u:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          uint64_t v139 = v296;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(__dstb, v78, v260);
          char v140 = 9;
LABEL_228:
          *(unsigned char *)(v103 + v139) = v140;
LABEL_253:
          size_t v138 = v285;
          goto LABEL_254;
        default:
          BOOL v102 = a1;
          unint64_t v103 = (unint64_t)&a1[v281] & v54;
          size_t v138 = v285;
          memcpy((void *)__dstb, v78, v285);
          goto LABEL_254;
      }
    case 4u:
      char v83 = 8 * v33;
      uint64_t v84 = v33;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v66 = a1;
      a1[40] = a2[40];
      swift_bridgeObjectRetain();
      if (v84 > 3) {
        goto LABEL_124;
      }
      unsigned int v85 = ((1 << v83) + 1) >> v83;
      uint64_t v86 = 2;
      if (v85 > 0xFFFD) {
        uint64_t v86 = 4;
      }
      if (v85 <= 0xFD) {
LABEL_124:
      }
        uint64_t v86 = 1;
      unint64_t v69 = v86 + v84;
      if (v287 > v69) {
        unint64_t v69 = v287;
      }
      if (v69 <= 0x29) {
        unint64_t v69 = 41;
      }
      char v70 = 4;
LABEL_130:
      uint64_t v42 = v66;
      v66[v69] = v70;
      return v42;
    case 5u:
      if (v33 > 3) {
        goto LABEL_134;
      }
      unsigned int v87 = ((1 << v34) + 1) >> v34;
      if (v87 > 0xFFFD)
      {
        unsigned int v88 = *(_DWORD *)&a2[v33];
      }
      else if (v87 > 0xFD)
      {
        unsigned int v88 = *(unsigned __int16 *)&a2[v33];
      }
      else
      {
LABEL_134:
        unsigned int v88 = a2[v33];
      }
      unsigned int v97 = v88 - 2;
      if (v88 >= 2)
      {
        if (v33 <= 3) {
          uint64_t v98 = v33;
        }
        else {
          uint64_t v98 = 4;
        }
        switch(v98)
        {
          case 1:
            int v99 = *a2;
            goto LABEL_172;
          case 2:
            int v99 = *(unsigned __int16 *)a2;
            goto LABEL_172;
          case 3:
            int v99 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_172;
          case 4:
            int v99 = *(_DWORD *)a2;
LABEL_172:
            if (v33 < 4) {
              v99 |= v97 << v34;
            }
            unsigned int v88 = v99 + 2;
            break;
          default:
            break;
        }
      }
      if (v88 == 1)
      {
        uint64_t v110 = *(void *)a2;
        uint64_t v111 = v33;
        char v112 = 8 * v33;
        id v113 = *(id *)a2;
        unint64_t v106 = v287;
        char v107 = v112;
        uint64_t v108 = v111;
        *(void *)a1 = v110;
        uint64_t v42 = a1;
        a1[8] = a2[8];
        if (v111 <= 3)
        {
          unsigned int v114 = ((1 << v112) + 1) >> v112;
          if (v114 > 0xFFFD)
          {
            *(_DWORD *)&a1[v111] = 1;
            goto LABEL_193;
          }
          if (v114 > 0xFD)
          {
            *(_WORD *)&a1[v111] = 1;
            goto LABEL_193;
          }
        }
        a1[v111] = 1;
      }
      else
      {
        if (!v88)
        {
          uint64_t v104 = v33;
          char v105 = 8 * v33;
          (*(void (**)(char *))(v32 + 16))(a1);
          unint64_t v106 = v287;
          char v107 = v105;
          uint64_t v108 = v104;
          if (v104 > 3)
          {
LABEL_180:
            a1[v104] = 0;
            uint64_t v42 = a1;
            goto LABEL_192;
          }
          unsigned int v109 = ((1 << v105) + 1) >> v105;
          if (v109 > 0xFFFD)
          {
            uint64_t v42 = a1;
            *(_DWORD *)&a1[v108] = 0;
          }
          else
          {
            if (v109 <= 0xFD) {
              goto LABEL_180;
            }
            *(_WORD *)&a1[v104] = 0;
            uint64_t v42 = a1;
          }
LABEL_193:
          unsigned int v120 = ((1 << v107) + 1) >> v107;
          uint64_t v121 = 2;
          if (v120 > 0xFFFD) {
            uint64_t v121 = 4;
          }
          if (v120 > 0xFD)
          {
LABEL_197:
            unint64_t v95 = v121 + v108;
            if (v106 > v95) {
              unint64_t v95 = v106;
            }
            if (v95 <= 0x29) {
              unint64_t v95 = 41;
            }
            char v96 = 5;
            goto LABEL_292;
          }
LABEL_196:
          uint64_t v121 = 1;
          goto LABEL_197;
        }
        if (v33 > 3) {
          goto LABEL_190;
        }
        unsigned int v115 = ((1 << v34) + 1) >> v34;
        uint64_t v116 = 2;
        if (v115 > 0xFFFD) {
          uint64_t v116 = 4;
        }
        if (v115 <= 0xFD)
        {
LABEL_190:
          char v117 = a1;
          char v118 = 8 * v33;
          uint64_t v116 = 1;
        }
        else
        {
          char v117 = a1;
          char v118 = 8 * v33;
        }
        uint64_t v119 = v33;
        memcpy(v117, a2, v116 + v33);
        uint64_t v108 = v119;
        uint64_t v42 = v117;
        char v107 = v118;
        unint64_t v106 = v287;
      }
LABEL_192:
      if (v108 > 3) {
        goto LABEL_196;
      }
      goto LABEL_193;
    case 6u:
      char v89 = 8 * v33;
      id v90 = *(id *)a2;
      uint64_t v91 = v33;
      id v92 = *(id *)a2;
      *(void *)a1 = v90;
      uint64_t v42 = a1;
      a1[8] = a2[8];
      if (v91 > 3) {
        goto LABEL_139;
      }
      unsigned int v93 = ((1 << v89) + 1) >> v89;
      uint64_t v94 = 2;
      if (v93 > 0xFFFD) {
        uint64_t v94 = 4;
      }
      if (v93 <= 0xFD) {
LABEL_139:
      }
        uint64_t v94 = 1;
      unint64_t v95 = v94 + v91;
      if (v287 > v95) {
        unint64_t v95 = v287;
      }
      if (v95 <= 0x29) {
        unint64_t v95 = 41;
      }
      char v96 = 6;
      goto LABEL_292;
    default:
      if (v33 > 3) {
        goto LABEL_92;
      }
      unsigned int v61 = ((1 << v34) + 1) >> v34;
      uint64_t v62 = 2;
      if (v61 > 0xFFFD) {
        uint64_t v62 = 4;
      }
      if (v61 <= 0xFD) {
LABEL_92:
      }
        uint64_t v62 = 1;
      unint64_t v63 = v62 + v33;
      if (v287 > v63) {
        unint64_t v63 = ((v31 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v63 <= 0x29) {
        unint64_t v63 = 41;
      }
      memcpy(a1, a2, v63 + 1);
      return v42;
  }
}

void sub_1C998EA30(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = sub_1C9BEAB08();
  uint64_t v100 = *(void *)(v2 - 8);
  uint64_t v101 = v2;
  uint64_t v112 = *(void *)(v100 + 64);
  uint64_t v97 = sub_1C9BEC028();
  uint64_t v105 = *(void *)(v97 - 8);
  uint64_t v96 = v105;
  int v3 = *(_DWORD *)(v105 + 80);
  uint64_t v4 = sub_1C9BEAC48();
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v95 = v4;
  int v109 = *(_DWORD *)(v104 + 80) | v3;
  uint64_t v99 = sub_1C9BEAF18();
  uint64_t v102 = *(void *)(v99 - 8);
  uint64_t v115 = v102;
  int v5 = *(_DWORD *)(v102 + 80) & 0xF8;
  uint64_t v98 = sub_1C9BEAE48();
  uint64_t v6 = *(void *)(v98 - 8);
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v5 | v8 | 7;
  uint64_t v10 = sub_1C9BEC928();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v92 = v11;
  uint64_t v93 = v10;
  int v107 = *(_DWORD *)(v11 + 80);
  uint64_t v12 = sub_1C9BEC8F8();
  uint64_t v94 = *(void *)(v12 - 8);
  unint64_t v13 = *(void *)(v105 + 64);
  if (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v13) {
    unint64_t v13 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v13 <= *(void *)(v104 + 64)) {
    unint64_t v13 = *(void *)(v104 + 64);
  }
  uint64_t v14 = *(void *)(v102 + 64);
  uint64_t v15 = v14 + v8;
  uint64_t v16 = v8;
  uint64_t v91 = v6;
  int v17 = *(_DWORD *)(v6 + 84);
  if (v17) {
    uint64_t v18 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v6 + 64) + 1;
  }
  unint64_t v19 = (v18 + 7 + ((v14 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v13 <= v20) {
    unint64_t v13 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v21 = v19 + 31;
  if (v13 <= (((((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v13 = (((((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v103 = *(void *)(v11 + 64);
  uint64_t v22 = *(unsigned int *)(v115 + 84);
  unsigned int v106 = *(_DWORD *)(v7 + 84);
  BOOL v23 = v17 != 0;
  unsigned int v24 = v17 - 1;
  if (v23) {
    unsigned int v25 = v24;
  }
  else {
    unsigned int v25 = 0;
  }
  if (v25 <= v22) {
    unsigned int v26 = *(_DWORD *)(v115 + 84);
  }
  else {
    unsigned int v26 = v25;
  }
  if (v26 <= 0x7FFFFFFE) {
    int v27 = 2147483646;
  }
  else {
    int v27 = v26;
  }
  uint64_t v28 = v9 + 16;
  unint64_t v29 = ((v21 + ((v9 + 16 + ((v103 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v13 <= v29) {
    unint64_t v13 = v29;
  }
  unint64_t v30 = *(void *)(*(void *)(v12 - 8) + 64);
  if (v13 > v30) {
    unint64_t v30 = v13;
  }
  if (v30 <= 0x18) {
    uint64_t v31 = 24;
  }
  else {
    uint64_t v31 = v30;
  }
  uint64_t v32 = *(void *)(a2 + 24);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = (v109 | (v107 | *(_DWORD *)(v94 + 80))) & 0xF8 | v9;
  uint64_t v35 = v112 + v34;
  unint64_t v36 = (v31 + ((v112 + v34) & ~v34) + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = ((v36 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v38 = 9;
  if (*(void *)(v33 + 64) > 9uLL) {
    uint64_t v38 = *(void *)(v33 + 64);
  }
  char v39 = 8 * v38;
  if (v38 > 3) {
    goto LABEL_34;
  }
  unsigned int v40 = ((1 << v39) + 1) >> v39;
  uint64_t v41 = 2;
  if (v40 > 0xFFFD) {
    uint64_t v41 = 4;
  }
  if (v40 <= 0xFD) {
LABEL_34:
  }
    uint64_t v41 = 1;
  unint64_t v42 = v41 + v38;
  if (v37 > v42) {
    unint64_t v42 = ((v36 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v42 <= 0x29) {
    unint64_t v42 = 41;
  }
  unsigned int v43 = a1[v42];
  unsigned int v44 = v43 - 7;
  if (v43 >= 7)
  {
    if (v38 > 3) {
      goto LABEL_44;
    }
    unsigned int v45 = ((1 << v39) + 1) >> v39;
    uint64_t v46 = 2;
    if (v45 > 0xFFFD) {
      uint64_t v46 = 4;
    }
    BOOL v47 = v45 > 0xFD;
    uint64_t v33 = *(void *)(*(void *)(a2 + 24) - 8);
    uint64_t v28 = v9 + 16;
    if (!v47) {
LABEL_44:
    }
      uint64_t v46 = 1;
    unint64_t v48 = v46 + v38;
    if (v37 <= v48) {
      unint64_t v37 = v48;
    }
    if (v37 <= 0x29) {
      LODWORD(v37) = 41;
    }
    if (v37 <= 3) {
      uint64_t v49 = v37;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *a1;
        goto LABEL_57;
      case 2:
        int v50 = *(unsigned __int16 *)a1;
        goto LABEL_57;
      case 3:
        int v50 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_57;
      case 4:
        int v50 = *(_DWORD *)a1;
LABEL_57:
        if (v37 < 4) {
          v50 |= v44 << (8 * v37);
        }
        unsigned int v43 = v50 + 7;
        break;
      default:
        break;
    }
  }
  int v51 = v27;
  uint64_t v52 = ~v34;
  uint64_t v53 = ~v9;
  switch(v43)
  {
    case 0u:
    case 1u:
    case 4u:
      goto LABEL_157;
    case 2u:
      uint64_t v54 = v28;
      uint64_t v90 = ~v16;
      int v110 = v51;
      uint64_t v55 = v12;
      uint64_t v108 = v15;
      uint64_t v88 = v18 + 7;
      uint64_t v114 = v31 + 1;
      (*(void (**)(unsigned __int8 *, uint64_t))(v100 + 8))(a1, v101);
      char v56 = (unsigned __int8 *)((unint64_t)&a1[v35] & v52);
      unsigned int v57 = v56[v31];
      unsigned int v58 = v57 - 10;
      if (v57 < 0xA)
      {
        uint64_t v61 = v31 + 1;
        uint64_t v60 = v55;
        int v62 = v110;
      }
      else
      {
        if (v31 <= 3) {
          uint64_t v59 = v31;
        }
        else {
          uint64_t v59 = 4;
        }
        uint64_t v60 = v55;
        uint64_t v61 = v31 + 1;
        int v62 = v110;
        switch(v59)
        {
          case 1:
            int v63 = *v56;
            goto LABEL_90;
          case 2:
            int v63 = *(unsigned __int16 *)v56;
            goto LABEL_90;
          case 3:
            int v63 = *(unsigned __int16 *)((unint64_t)&a1[v35] & v52) | (*(unsigned __int8 *)(((unint64_t)&a1[v35] & v52)
                                                                                                + 2) << 16);
            goto LABEL_90;
          case 4:
            int v63 = *(_DWORD *)v56;
LABEL_90:
            if (v31 < 4) {
              unsigned int v57 = (v63 | (v58 << (8 * v31))) + 10;
            }
            else {
              unsigned int v57 = v63 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v57)
      {
        case 0u:
          goto LABEL_105;
        case 1u:
          goto LABEL_106;
        case 2u:
          goto LABEL_107;
        case 3u:
          goto LABEL_108;
        case 4u:
          goto LABEL_109;
        case 5u:
          goto LABEL_110;
        case 6u:
          goto LABEL_111;
        case 7u:
          goto LABEL_114;
        case 8u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v92 + 8))(v56, v93);
          swift_bridgeObjectRelease();
          unint64_t v76 = (v54 + ((((unint64_t)v56 | 7) + v103) & 0xFFFFFFFFFFFFFFF8)) & v53;
          if (v22 == v62) {
            goto LABEL_136;
          }
          uint64_t v77 = (v108 + v76) & v90;
          uint64_t v78 = v99;
          if (v25 == v62)
          {
            uint64_t v79 = v106;
            uint64_t v80 = v98;
            if (v106 >= 2) {
              goto LABEL_140;
            }
            goto LABEL_149;
          }
          unint64_t v85 = *(void *)(((v88 + v77) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v85 >= 0xFFFFFFFF) {
            LODWORD(v85) = -1;
          }
          uint64_t v80 = v98;
          if ((v85 + 1) < 2) {
            goto LABEL_149;
          }
          break;
        case 9u:
          goto LABEL_118;
        default:
          goto LABEL_155;
      }
      goto LABEL_152;
    case 3u:
      uint64_t v64 = v28;
      uint64_t v90 = ~v16;
      int v111 = v51;
      uint64_t v65 = v12;
      uint64_t v108 = v15;
      uint64_t v89 = v18 + 7;
      uint64_t v114 = v31 + 1;
      (*(void (**)(unsigned __int8 *, uint64_t))(v100 + 8))(a1, v101);
      char v56 = (unsigned __int8 *)((unint64_t)&a1[v35] & v52);
      unsigned int v66 = v56[v31];
      unsigned int v67 = v66 - 10;
      if (v66 < 0xA)
      {
        uint64_t v61 = v31 + 1;
        uint64_t v60 = v65;
        int v69 = v111;
      }
      else
      {
        if (v31 <= 3) {
          uint64_t v68 = v31;
        }
        else {
          uint64_t v68 = 4;
        }
        uint64_t v60 = v65;
        uint64_t v61 = v31 + 1;
        int v69 = v111;
        switch(v68)
        {
          case 1:
            int v70 = *v56;
            goto LABEL_101;
          case 2:
            int v70 = *(unsigned __int16 *)v56;
            goto LABEL_101;
          case 3:
            int v70 = *(unsigned __int16 *)((unint64_t)&a1[v35] & v52) | (*(unsigned __int8 *)(((unint64_t)&a1[v35] & v52)
                                                                                                + 2) << 16);
            goto LABEL_101;
          case 4:
            int v70 = *(_DWORD *)v56;
LABEL_101:
            if (v31 < 4) {
              unsigned int v66 = (v70 | (v67 << (8 * v31))) + 10;
            }
            else {
              unsigned int v66 = v70 + 10;
            }
            break;
          default:
            goto LABEL_104;
        }
      }
      break;
    case 5u:
      if (v38 > 3) {
        goto LABEL_74;
      }
      unsigned int v72 = ((1 << v39) + 1) >> v39;
      if (v72 > 0xFFFD)
      {
        unsigned int v71 = *(_DWORD *)&a1[v38];
      }
      else if (v72 <= 0xFD)
      {
LABEL_74:
        unsigned int v71 = a1[v38];
      }
      else
      {
        unsigned int v71 = *(unsigned __int16 *)&a1[v38];
      }
      unsigned int v73 = v71 - 2;
      if (v71 >= 2)
      {
        if (v38 <= 3) {
          uint64_t v74 = v38;
        }
        else {
          uint64_t v74 = 4;
        }
        switch(v74)
        {
          case 1:
            int v75 = *a1;
            goto LABEL_123;
          case 2:
            int v75 = *(unsigned __int16 *)a1;
            goto LABEL_123;
          case 3:
            int v75 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_123;
          case 4:
            int v75 = *(_DWORD *)a1;
LABEL_123:
            if (v38 < 4) {
              unsigned int v71 = (v75 | (v73 << v39)) + 2;
            }
            else {
              unsigned int v71 = v75 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v71 == 1)
      {
LABEL_131:
        uint64_t v84 = *(void **)a1;
      }
      else if (!v71)
      {
        char v83 = *(void (**)(unsigned __int8 *, uint64_t))(v33 + 8);
        v83(a1, v32);
      }
      return;
    case 6u:
      goto LABEL_131;
    default:
      return;
  }
LABEL_104:
  switch(v66)
  {
    case 0u:
LABEL_105:
      uint64_t v81 = v96;
      uint64_t v60 = v97;
      goto LABEL_119;
    case 1u:
LABEL_106:
      (*(void (**)(unsigned __int8 *, uint64_t))(v96 + 8))(v56, v97);
      swift_release();
      goto LABEL_154;
    case 2u:
LABEL_107:
      swift_bridgeObjectRelease();
      goto LABEL_117;
    case 3u:
LABEL_108:
      swift_unknownObjectRelease();
      goto LABEL_154;
    case 4u:
LABEL_109:
      uint64_t v81 = v104;
      uint64_t v60 = v95;
      goto LABEL_119;
    case 5u:
LABEL_110:
      int v82 = *(void **)v56;
      goto LABEL_153;
    case 6u:
LABEL_111:
      (*(void (**)(unsigned __int8 *, uint64_t))(v115 + 8))(v56, v99);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v56[v108] & v90, 1, v98)) {
        (*(void (**)(unint64_t, uint64_t))(v91 + 8))((unint64_t)&v56[v108] & v90, v98);
      }
      goto LABEL_117;
    case 7u:
LABEL_114:
      (*(void (**)(unsigned __int8 *, uint64_t))(v115 + 8))(v56, v99);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v56[v108] & v90, 1, v98)) {
        (*(void (**)(unint64_t, uint64_t))(v91 + 8))((unint64_t)&v56[v108] & v90, v98);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_117:
      swift_bridgeObjectRelease();
      goto LABEL_154;
    case 8u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v92 + 8))(v56, v93);
      swift_bridgeObjectRelease();
      unint64_t v76 = (v64 + ((((unint64_t)v56 | 7) + v103) & 0xFFFFFFFFFFFFFFF8)) & v53;
      if (v22 == v69)
      {
LABEL_136:
        uint64_t v78 = v99;
        uint64_t v80 = v98;
        if (__swift_getEnumTagSinglePayload(v76, v22, v99)) {
          goto LABEL_152;
        }
        uint64_t v77 = (v108 + v76) & v90;
        goto LABEL_149;
      }
      uint64_t v77 = (v108 + v76) & v90;
      if (v25 == v69)
      {
        uint64_t v79 = v106;
        uint64_t v80 = v98;
        uint64_t v78 = v99;
        if (v106 >= 2)
        {
LABEL_140:
          if (__swift_getEnumTagSinglePayload(v77, v79, v80) >= 2) {
            goto LABEL_152;
          }
        }
        goto LABEL_149;
      }
      unint64_t v86 = *(void *)(((v89 + v77) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v86 >= 0xFFFFFFFF) {
        LODWORD(v86) = -1;
      }
      uint64_t v80 = v98;
      uint64_t v78 = v99;
      if ((v86 + 1) < 2)
      {
LABEL_149:
        (*(void (**)(unint64_t, uint64_t))(v115 + 8))(v76, v78);
        if (!__swift_getEnumTagSinglePayload(v77, 1, v80)) {
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v77, v80);
        }
        swift_bridgeObjectRelease();
      }
LABEL_152:
      int v82 = *(void **)(((v76 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
LABEL_153:

LABEL_154:
      uint64_t v61 = v114;
LABEL_155:
      unint64_t v87 = ((((unint64_t)v56 | 7) + v61) & 0xFFFFFFFFFFFFFFF8) + 15;
      swift_bridgeObjectRelease();
      if (*(void *)((v87 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v87 & 0xFFFFFFFFFFFFFFF8);
      }
LABEL_157:
      swift_bridgeObjectRelease();
      return;
    case 9u:
LABEL_118:
      uint64_t v81 = v94;
LABEL_119:
      (*(void (**)(unsigned __int8 *, uint64_t))(v81 + 8))(v56, v60);
      goto LABEL_154;
    default:
      goto LABEL_155;
  }
}

char *sub_1C998F800(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = sub_1C9BEAB08();
  __dst = *(void **)(v3 - 8);
  uint64_t v266 = v3;
  uint64_t v279 = __dst[8];
  uint64_t v260 = sub_1C9BEC028();
  uint64_t v275 = *(void *)(v260 - 8);
  uint64_t v259 = v275;
  int v4 = *(_DWORD *)(v275 + 80);
  uint64_t v258 = sub_1C9BEAC48();
  uint64_t v277 = *(void *)(v258 - 8);
  uint64_t v257 = v277;
  int v269 = *(_DWORD *)(v277 + 80) | v4;
  uint64_t v261 = sub_1C9BEAF18();
  uint64_t v273 = *(void *)(v261 - 8);
  uint64_t v285 = v273;
  int v5 = *(_DWORD *)(v273 + 80) & 0xF8;
  uint64_t v262 = sub_1C9BEAE48();
  uint64_t v271 = *(void *)(v262 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v271 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v8 = sub_1C9BEC928();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v254 = v9;
  uint64_t v255 = v8;
  int v10 = *(_DWORD *)(v9 + 80);
  uint64_t v256 = sub_1C9BEC8F8();
  uint64_t v11 = v275;
  uint64_t v276 = *(void *)(v256 - 8);
  uint64_t v12 = (v269 | (v10 | *(_DWORD *)(v276 + 80))) & 0xF8 | v7;
  uint64_t v13 = v279 + v12;
  unint64_t v14 = *(void *)(v11 + 64);
  unint64_t v280 = v14 + 7;
  if (((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v14) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v277 + 64)) {
    unint64_t v14 = *(void *)(v277 + 64);
  }
  uint64_t v15 = *(void *)(v273 + 64);
  uint64_t v16 = v15 + v6;
  uint64_t v17 = (v15 + v6) & ~v6;
  uint64_t v270 = v271;
  unsigned int v18 = *(_DWORD *)(v271 + 84);
  if (v18) {
    uint64_t v19 = *(void *)(v271 + 64);
  }
  else {
    uint64_t v19 = *(void *)(v271 + 64) + 1;
  }
  unint64_t v20 = (v19 + 7 + v17) & 0xFFFFFFFFFFFFFFF8;
  size_t v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v14 <= v21) {
    unint64_t v14 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v22 = v20 + 31;
  if (v14 <= (((((v22 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v14 = (((((v22 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v23 = *(void *)(v9 + 64);
  uint64_t v274 = v7 + 16;
  uint64_t v24 = *(unsigned int *)(v285 + 84);
  if (v18) {
    unsigned int v25 = v18 - 1;
  }
  else {
    unsigned int v25 = 0;
  }
  if (v25 <= v24) {
    unsigned int v26 = *(_DWORD *)(v285 + 84);
  }
  else {
    unsigned int v26 = v25;
  }
  if (v26 <= 0x7FFFFFFE) {
    unsigned int v26 = 2147483646;
  }
  unsigned int v278 = v26;
  unint64_t v27 = ((v22 + ((v7 + 16 + ((v23 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v14 <= v27) {
    unint64_t v14 = v27;
  }
  unint64_t v28 = *(void *)(*(void *)(v256 - 8) + 64);
  if (v14 > v28) {
    unint64_t v28 = v14;
  }
  if (v28 <= 0x18) {
    uint64_t v29 = 24;
  }
  else {
    uint64_t v29 = v28;
  }
  unint64_t v30 = (v29 + (v13 & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v32 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v32 + 64) <= 9uLL) {
    uint64_t v33 = 9;
  }
  else {
    uint64_t v33 = *(void *)(v32 + 64);
  }
  char v34 = 8 * v33;
  if (v33 > 3) {
    goto LABEL_34;
  }
  unsigned int v35 = ((1 << v34) + 1) >> v34;
  uint64_t v36 = 2;
  if (v35 > 0xFFFD) {
    uint64_t v36 = 4;
  }
  if (v35 <= 0xFD) {
LABEL_34:
  }
    uint64_t v36 = 1;
  unint64_t v37 = v36 + v33;
  if (v31 > v37) {
    unint64_t v37 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v37 <= 0x29) {
    unint64_t v37 = 41;
  }
  unsigned int v38 = a2[v37];
  unsigned int v39 = v38 - 7;
  if (v38 >= 7)
  {
    if (v33 > 3) {
      goto LABEL_44;
    }
    unsigned int v40 = ((1 << v34) + 1) >> v34;
    uint64_t v41 = 2;
    if (v40 > 0xFFFD) {
      uint64_t v41 = 4;
    }
    if (v40 <= 0xFD) {
LABEL_44:
    }
      uint64_t v41 = 1;
    unint64_t v42 = v41 + v33;
    if (v31 > v42) {
      unint64_t v42 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v42 <= 0x29) {
      LODWORD(v42) = 41;
    }
    if (v42 <= 3) {
      uint64_t v43 = v42;
    }
    else {
      uint64_t v43 = 4;
    }
    switch(v43)
    {
      case 1:
        int v44 = *a2;
        goto LABEL_57;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        goto LABEL_57;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_57;
      case 4:
        int v44 = *(_DWORD *)a2;
LABEL_57:
        if (v42 < 4) {
          v44 |= v39 << (8 * v42);
        }
        unsigned int v38 = v44 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v283 = v16;
  size_t v272 = *(void *)(v271 + 64);
  uint64_t v45 = ~v12;
  uint64_t v46 = ~v7;
  switch(v38)
  {
    case 0u:
      char v47 = 8 * v33;
      unint64_t v48 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      uint64_t v49 = a1;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      a1[40] = a2[40];
      uint64_t v50 = v33;
      swift_bridgeObjectRetain();
      if (v50 > 3) {
        goto LABEL_65;
      }
      unsigned int v51 = ((1 << v47) + 1) >> v47;
      uint64_t v52 = 2;
      if (v51 > 0xFFFD) {
        uint64_t v52 = 4;
      }
      if (v51 <= 0xFD) {
LABEL_65:
      }
        uint64_t v52 = 1;
      unint64_t v53 = v52 + v50;
      if (v48 > v53) {
        unint64_t v53 = v48;
      }
      if (v53 <= 0x29) {
        unint64_t v53 = 41;
      }
      a1[v53] = 0;
      return v49;
    case 1u:
      char v57 = 8 * v33;
      unint64_t v58 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      uint64_t v49 = a1;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      a1[40] = a2[40];
      uint64_t v59 = v33;
      swift_bridgeObjectRetain();
      if (v59 > 3) {
        goto LABEL_85;
      }
      unsigned int v60 = ((1 << v57) + 1) >> v57;
      uint64_t v61 = 2;
      if (v60 > 0xFFFD) {
        uint64_t v61 = 4;
      }
      if (v60 <= 0xFD) {
LABEL_85:
      }
        uint64_t v61 = 1;
      unint64_t v62 = v61 + v59;
      if (v58 > v62) {
        unint64_t v62 = v58;
      }
      if (v62 <= 0x29) {
        unint64_t v62 = 41;
      }
      char v63 = 1;
      goto LABEL_283;
    case 2u:
      uint64_t v246 = v33;
      unint64_t v248 = (v29 + (v13 & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v240 = v19 + 7;
      uint64_t v242 = ~v6;
      uint64_t v236 = v17;
      size_t v238 = v19;
      unint64_t v250 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      size_t __n = v29 + 1;
      char v244 = 8 * v33;
      uint64_t v64 = v266;
      uint64_t v49 = a1;
      uint64_t v267 = v29;
      ((void (*)(char *, unsigned __int8 *, uint64_t))__dst[2])(a1, a2, v64);
      unint64_t __dsta = (unint64_t)&a1[v13] & v45;
      uint64_t v65 = (unsigned __int8 *)((unint64_t)&a2[v13] & v45);
      unsigned int v66 = v65[v267];
      unsigned int v67 = v66 - 10;
      if (v66 >= 0xA)
      {
        if (v267 <= 3) {
          uint64_t v68 = v267;
        }
        else {
          uint64_t v68 = 4;
        }
        switch(v68)
        {
          case 1:
            int v69 = *v65;
            goto LABEL_139;
          case 2:
            int v69 = *(unsigned __int16 *)v65;
            goto LABEL_139;
          case 3:
            int v69 = *(unsigned __int16 *)v65 | (v65[2] << 16);
            goto LABEL_139;
          case 4:
            int v69 = *(_DWORD *)v65;
LABEL_139:
            if (v267 < 4) {
              unsigned int v66 = (v69 | (v67 << (8 * v267))) + 10;
            }
            else {
              unsigned int v66 = v69 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v66)
      {
        case 0u:
          unint64_t v95 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(__dsta, v65, v260);
          *(unsigned char *)(__dsta + v267) = 0;
          goto LABEL_251;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(__dsta, v65, v260);
          *(void *)((v280 + __dsta) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v65[v280] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(__dsta + v267) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v95 = __dsta;
          *(void *)unint64_t __dsta = *(void *)v65;
          *(void *)(__dsta + 8) = *((void *)v65 + 1);
          *(void *)(__dsta + 16) = *((void *)v65 + 2);
          *(unsigned char *)(__dsta + v267) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_231;
        case 3u:
          unint64_t v95 = __dsta;
          *(void *)unint64_t __dsta = *(void *)v65;
          *(unsigned char *)(__dsta + v267) = 3;
          swift_unknownObjectRetain();
          goto LABEL_251;
        case 4u:
          unint64_t v95 = __dsta;
          uint64_t v117 = v267;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v257 + 16))(__dsta, v65, v258);
          char v118 = 4;
          goto LABEL_199;
        case 5u:
          uint64_t v119 = *(void **)v65;
          unint64_t v95 = __dsta;
          *(void *)unint64_t __dsta = *(void *)v65;
          *(unsigned char *)(__dsta + v267) = 5;
          id v120 = v119;
          goto LABEL_251;
        case 6u:
          unint64_t v95 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v285 + 16))(__dsta, v65, v261);
          uint64_t v121 = (void *)((v283 + __dsta) & v242);
          uint64_t v122 = (const void *)((unint64_t)&v65[v283] & v242);
          if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v262))
          {
            memcpy(v121, v122, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v270 + 16))(v121, v122, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v262);
          }
          uint64_t v152 = (void *)(((unint64_t)v121 + v240) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v153 = (void *)(((unint64_t)v122 + v240) & 0xFFFFFFFFFFFFFFF8);
          void *v152 = *v153;
          v152[1] = v153[1];
          unint64_t v154 = ((unint64_t)v152 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v155 = ((unint64_t)v153 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v156 = *(_DWORD *)v155;
          *(unsigned char *)(v154 + 4) = *(unsigned char *)(v155 + 4);
          *(_DWORD *)unint64_t v154 = v156;
          *(unsigned char *)(__dsta + v267) = 6;
          goto LABEL_231;
        case 7u:
          unint64_t v95 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v285 + 16))(__dsta, v65, v261);
          char v123 = (void *)((v283 + __dsta) & v242);
          uint64_t v124 = (const void *)((unint64_t)&v65[v283] & v242);
          if (__swift_getEnumTagSinglePayload((uint64_t)v124, 1, v262))
          {
            memcpy(v123, v124, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v270 + 16))(v123, v124, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v123, 0, 1, v262);
          }
          unint64_t v157 = (void *)(((unint64_t)v123 + v240) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v158 = (void *)(((unint64_t)v124 + v240) & 0xFFFFFFFFFFFFFFF8);
          void *v157 = *v158;
          v157[1] = v158[1];
          unint64_t v159 = ((unint64_t)v157 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v161 = *(_DWORD *)v160;
          *(unsigned char *)(v159 + 4) = *(unsigned char *)(v160 + 4);
          *(_DWORD *)unint64_t v159 = v161;
          unint64_t v162 = (void *)(((__dsta | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v163 = (void *)((((unint64_t)v65 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          void *v162 = *v163;
          v162[1] = v163[1];
          int v164 = (void *)(((unint64_t)v162 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v165 = (void *)(((unint64_t)v163 + 23) & 0xFFFFFFFFFFFFFFF8);
          *int v164 = *v165;
          v164[1] = v165[1];
          uint64_t v166 = (void *)(((unint64_t)v164 + 23) & 0xFFFFFFFFFFFFFFF8);
          int v167 = (void *)(((unint64_t)v165 + 23) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v166 = *v167;
          v166[1] = v167[1];
          *(unsigned char *)(__dsta + v267) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_231:
          swift_bridgeObjectRetain();
          goto LABEL_251;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v254 + 16))(__dsta, v65, v255);
          id v125 = (void *)(((__dsta | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v281 = v65;
          uint64_t v126 = (void *)((((unint64_t)v65 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          *id v125 = *v126;
          v125[1] = v126[1];
          unint64_t v127 = ((unint64_t)v125 + v274) & v46;
          uint64_t v128 = ((unint64_t)v126 + v274) & v46;
          swift_bridgeObjectRetain();
          if (v24 == v278)
          {
            uint64_t v129 = v24;
            uint64_t v130 = v261;
            uint64_t v131 = v262;
            if (!__swift_getEnumTagSinglePayload(v128, v129, v261))
            {
              unint64_t v132 = (const void *)((v283 + v128) & v242);
              goto LABEL_240;
            }
LABEL_220:
            memcpy((void *)v127, (const void *)v128, v21);
            unint64_t v95 = __dsta;
LABEL_249:
            size_t v193 = v238;
            goto LABEL_250;
          }
          unint64_t v132 = (const void *)((v283 + v128) & v242);
          if (v25 != v278)
          {
            unint64_t v184 = *(void *)((((unint64_t)v132 + v240) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v184 >= 0xFFFFFFFF) {
              LODWORD(v184) = -1;
            }
            uint64_t v130 = v261;
            uint64_t v131 = v262;
            if ((v184 + 1) < 2) {
              goto LABEL_240;
            }
            goto LABEL_220;
          }
          uint64_t v130 = v261;
          uint64_t v131 = v262;
          if (v18 >= 2 && __swift_getEnumTagSinglePayload((v283 + v128) & v242, v18, v262) >= 2) {
            goto LABEL_220;
          }
LABEL_240:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v285 + 16))(v127, v128, v130);
          uint64_t v185 = (void *)((v283 + v127) & v242);
          if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v131))
          {
            memcpy(v185, v132, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v270 + 16))(v185, v132, v131);
            __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v131);
          }
          unint64_t v95 = __dsta;
          uint64_t v188 = (void *)(((unint64_t)v185 + v240) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v189 = (void *)(((unint64_t)v132 + v240) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v188 = *v189;
          v188[1] = v189[1];
          unint64_t v190 = ((unint64_t)v188 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v191 = ((unint64_t)v189 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v192 = *(_DWORD *)v191;
          *(unsigned char *)(v190 + 4) = *(unsigned char *)(v191 + 4);
          *(_DWORD *)unint64_t v190 = v192;
          swift_bridgeObjectRetain();
          uint64_t v49 = a1;
          size_t v193 = v272;
          if (!v18) {
            goto LABEL_249;
          }
LABEL_250:
          unint64_t v194 = (((v236 + v193 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          unint64_t v195 = (void *)(((v127 | 7) + v194) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v196 = *(void **)(((v128 | 7) + v194) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v195 = v196;
          *(unsigned char *)(v95 + v267) = 8;
          id v197 = v196;
          uint64_t v65 = v281;
LABEL_251:
          uint64_t v198 = (void *)((((unint64_t)v65 | 7) + __n) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v199 = (void *)(((v95 | 7) + __n) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v199 = *v198;
          unint64_t v200 = ((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v201 = ((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v202 = *(void *)(v201 + 24);
          swift_bridgeObjectRetain();
          if (v202 < 0xFFFFFFFF)
          {
            long long v203 = *(_OWORD *)v201;
            long long v204 = *(_OWORD *)(v201 + 16);
            *(void *)(v200 + 32) = *(void *)(v201 + 32);
            *(_OWORD *)unint64_t v200 = v203;
            *(_OWORD *)(v200 + 16) = v204;
          }
          else
          {
            *(void *)(v200 + 24) = v202;
            *(void *)(v200 + 32) = *(void *)(v201 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v202 - 8))(v200, v201, v202);
          }
          *(unsigned char *)(v200 + 40) = *(unsigned char *)(v201 + 40);
          unint64_t v205 = ((v248 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
          unint64_t v206 = (unint64_t)&v49[v205 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v207 = (unint64_t)&a2[v205 + 7] & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v206 = *(void *)v207;
          long long v208 = *(_OWORD *)(v207 + 8);
          *(unsigned char *)(v206 + 24) = *(unsigned char *)(v207 + 24);
          *(_OWORD *)(v206 + 8) = v208;
          uint64_t v209 = *(void *)(v207 + 32);
          *(unsigned char *)(v206 + 40) = *(unsigned char *)(v207 + 40);
          *(void *)(v206 + 32) = v209;
          swift_bridgeObjectRetain();
          if (v246 > 3) {
            goto LABEL_258;
          }
          unsigned int v210 = ((1 << v244) + 1) >> v244;
          uint64_t v211 = 2;
          if (v210 > 0xFFFD) {
            uint64_t v211 = 4;
          }
          if (v210 <= 0xFD) {
LABEL_258:
          }
            uint64_t v211 = 1;
          unint64_t v62 = v211 + v246;
          if (v250 > v62) {
            unint64_t v62 = v250;
          }
          if (v62 <= 0x29) {
            unint64_t v62 = 41;
          }
          char v63 = 2;
LABEL_283:
          v49[v62] = v63;
          return v49;
        case 9u:
          unint64_t v95 = __dsta;
          uint64_t v117 = v267;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v276 + 16))(__dsta, v65, v256);
          char v118 = 9;
LABEL_199:
          *(unsigned char *)(v95 + v117) = v118;
          goto LABEL_251;
        default:
          unint64_t v95 = __dsta;
          memcpy((void *)__dsta, v65, __n);
          goto LABEL_251;
      }
    case 3u:
      uint64_t v247 = v33;
      unint64_t v249 = (v29 + (v13 & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v241 = v19 + 7;
      uint64_t v243 = ~v6;
      uint64_t v237 = v17;
      size_t v239 = v19;
      unint64_t v251 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      size_t __na = v29 + 1;
      char v245 = 8 * v33;
      uint64_t v70 = v266;
      uint64_t v49 = a1;
      uint64_t v268 = v29;
      ((void (*)(char *, unsigned __int8 *, uint64_t))__dst[2])(a1, a2, v70);
      uint64_t v71 = v268;
      unint64_t __dstb = (unint64_t)&a1[v13] & v45;
      unsigned int v72 = (unsigned __int8 *)((unint64_t)&a2[v13] & v45);
      unsigned int v73 = v72[v268];
      unsigned int v74 = v73 - 10;
      if (v73 >= 0xA)
      {
        if (v268 <= 3) {
          uint64_t v75 = v268;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *v72;
            goto LABEL_147;
          case 2:
            int v76 = *(unsigned __int16 *)v72;
            goto LABEL_147;
          case 3:
            int v76 = *(unsigned __int16 *)v72 | (v72[2] << 16);
            goto LABEL_147;
          case 4:
            int v76 = *(_DWORD *)v72;
LABEL_147:
            if (v268 < 4) {
              unsigned int v73 = (v76 | (v74 << (8 * v268))) + 10;
            }
            else {
              unsigned int v73 = v76 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v73)
      {
        case 0u:
          unint64_t v96 = __dstb;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(__dstb, v72, v260);
          *(unsigned char *)(__dstb + v268) = 0;
          goto LABEL_269;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(__dstb, v72, v260);
          *(void *)((v280 + __dstb) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v72[v280] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(__dstb + v268) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v96 = __dstb;
          *(void *)unint64_t __dstb = *(void *)v72;
          *(void *)(__dstb + 8) = *((void *)v72 + 1);
          *(void *)(__dstb + 16) = *((void *)v72 + 2);
          *(unsigned char *)(__dstb + v268) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_236;
        case 3u:
          unint64_t v96 = __dstb;
          *(void *)unint64_t __dstb = *(void *)v72;
          *(unsigned char *)(__dstb + v268) = 3;
          swift_unknownObjectRetain();
          goto LABEL_269;
        case 4u:
          unint64_t v96 = __dstb;
          uint64_t v134 = v268;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v257 + 16))(__dstb, v72, v258);
          char v135 = 4;
          goto LABEL_211;
        case 5u:
          uint64_t v136 = *(void **)v72;
          unint64_t v96 = __dstb;
          *(void *)unint64_t __dstb = *(void *)v72;
          char v137 = 5;
          goto LABEL_268;
        case 6u:
          unint64_t v96 = __dstb;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v285 + 16))(__dstb, v72, v261);
          size_t v138 = (void *)((v283 + __dstb) & v243);
          uint64_t v139 = (const void *)((unint64_t)&v72[v283] & v243);
          if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v262))
          {
            memcpy(v138, v139, v239);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v270 + 16))(v138, v139, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v138, 0, 1, v262);
          }
          uint64_t v168 = (void *)(((unint64_t)v138 + v241) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v169 = (void *)(((unint64_t)v139 + v241) & 0xFFFFFFFFFFFFFFF8);
          void *v168 = *v169;
          v168[1] = v169[1];
          unint64_t v170 = ((unint64_t)v168 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v171 = ((unint64_t)v169 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v172 = *(_DWORD *)v171;
          *(unsigned char *)(v170 + 4) = *(unsigned char *)(v171 + 4);
          *(_DWORD *)unint64_t v170 = v172;
          *(unsigned char *)(__dstb + v268) = 6;
          goto LABEL_236;
        case 7u:
          unint64_t v96 = __dstb;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v285 + 16))(__dstb, v72, v261);
          char v140 = (void *)((v283 + __dstb) & v243);
          BOOL v141 = (const void *)((unint64_t)&v72[v283] & v243);
          if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v262))
          {
            memcpy(v140, v141, v239);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v270 + 16))(v140, v141, v262);
            __swift_storeEnumTagSinglePayload((uint64_t)v140, 0, 1, v262);
          }
          unint64_t v173 = (void *)(((unint64_t)v140 + v241) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v174 = (void *)(((unint64_t)v141 + v241) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v173 = *v174;
          v173[1] = v174[1];
          unint64_t v175 = ((unint64_t)v173 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v176 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v177 = *(_DWORD *)v176;
          *(unsigned char *)(v175 + 4) = *(unsigned char *)(v176 + 4);
          *(_DWORD *)unint64_t v175 = v177;
          unint64_t v178 = (void *)(((__dstb | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v179 = (void *)((((unint64_t)v72 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v178 = *v179;
          v178[1] = v179[1];
          int v180 = (void *)(((unint64_t)v178 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v181 = (void *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v180 = *v181;
          v180[1] = v181[1];
          unint64_t v182 = (void *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v183 = (void *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v182 = *v183;
          v182[1] = v183[1];
          *(unsigned char *)(__dstb + v268) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_236:
          swift_bridgeObjectRetain();
          goto LABEL_269;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v254 + 16))(__dstb, v72, v255);
          id v142 = (void *)(((__dstb | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v143 = (void *)((((unint64_t)v72 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          *id v142 = *v143;
          v142[1] = v143[1];
          unint64_t v144 = ((unint64_t)v142 + v274) & v46;
          uint64_t v145 = ((unint64_t)v143 + v274) & v46;
          swift_bridgeObjectRetain();
          uint64_t v146 = v72;
          if (v24 == v278)
          {
            uint64_t v147 = v24;
            uint64_t v148 = v261;
            uint64_t v149 = v262;
            if (!__swift_getEnumTagSinglePayload(v145, v147, v261))
            {
              uint64_t v150 = (const void *)((v283 + v145) & v243);
              goto LABEL_245;
            }
          }
          else
          {
            uint64_t v150 = (const void *)((v283 + v145) & v243);
            if (v25 == v278)
            {
              uint64_t v148 = v261;
              uint64_t v149 = v262;
              if (v18 < 2 || __swift_getEnumTagSinglePayload((v283 + v145) & v243, v18, v262) < 2) {
                goto LABEL_245;
              }
            }
            else
            {
              unint64_t v186 = *(void *)((((unint64_t)v150 + v241) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v186 >= 0xFFFFFFFF) {
                LODWORD(v186) = -1;
              }
              uint64_t v148 = v261;
              uint64_t v149 = v262;
              if ((v186 + 1) < 2)
              {
LABEL_245:
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v285 + 16))(v144, v145, v148);
                uint64_t v187 = (void *)((v283 + v144) & v243);
                if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v149))
                {
                  memcpy(v187, v150, v239);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v270 + 16))(v187, v150, v149);
                  __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v149);
                }
                unint64_t v96 = __dstb;
                unint64_t v212 = (void *)(((unint64_t)v187 + v241) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v213 = (void *)(((unint64_t)v150 + v241) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v212 = *v213;
                v212[1] = v213[1];
                unint64_t v214 = ((unint64_t)v212 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v215 = ((unint64_t)v213 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v216 = *(_DWORD *)v215;
                *(unsigned char *)(v214 + 4) = *(unsigned char *)(v215 + 4);
                *(_DWORD *)unint64_t v214 = v216;
                swift_bridgeObjectRetain();
                uint64_t v49 = a1;
                uint64_t v71 = v268;
                uint64_t v151 = v237;
                size_t v217 = v272;
                unsigned int v72 = v146;
                if (v18)
                {
LABEL_267:
                  unint64_t v218 = (((v151 + v217 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  unint64_t v219 = (void *)(((v144 | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v136 = *(void **)(((v145 | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v219 = v136;
                  char v137 = 8;
LABEL_268:
                  *(unsigned char *)(v96 + v71) = v137;
                  id v220 = v136;
LABEL_269:
                  size_t v133 = __na;
LABEL_270:
                  long long v221 = (void *)((((unint64_t)v72 | 7) + v133) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v222 = (void *)(((v96 | 7) + v133) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v222 = *v221;
                  unint64_t v223 = ((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v224 = ((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v225 = *(void *)(v224 + 24);
                  swift_bridgeObjectRetain();
                  if (v225 < 0xFFFFFFFF)
                  {
                    long long v226 = *(_OWORD *)v224;
                    long long v227 = *(_OWORD *)(v224 + 16);
                    *(void *)(v223 + 32) = *(void *)(v224 + 32);
                    *(_OWORD *)unint64_t v223 = v226;
                    *(_OWORD *)(v223 + 16) = v227;
                  }
                  else
                  {
                    *(void *)(v223 + 24) = v225;
                    *(void *)(v223 + 32) = *(void *)(v224 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v225 - 8))(v223, v224, v225);
                  }
                  *(unsigned char *)(v223 + 40) = *(unsigned char *)(v224 + 40);
                  unint64_t v228 = ((v249 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
                  unint64_t v229 = (unint64_t)&v49[v228 + 7] & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v230 = (unint64_t)&a2[v228 + 7] & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v229 = *(void *)v230;
                  long long v231 = *(_OWORD *)(v230 + 8);
                  *(unsigned char *)(v229 + 24) = *(unsigned char *)(v230 + 24);
                  *(_OWORD *)(v229 + 8) = v231;
                  uint64_t v232 = *(void *)(v230 + 32);
                  *(unsigned char *)(v229 + 40) = *(unsigned char *)(v230 + 40);
                  *(void *)(v229 + 32) = v232;
                  swift_bridgeObjectRetain();
                  if (v247 > 3) {
                    goto LABEL_277;
                  }
                  unsigned int v233 = ((1 << v245) + 1) >> v245;
                  uint64_t v234 = 2;
                  if (v233 > 0xFFFD) {
                    uint64_t v234 = 4;
                  }
                  if (v233 <= 0xFD) {
LABEL_277:
                  }
                    uint64_t v234 = 1;
                  unint64_t v62 = v234 + v247;
                  if (v251 > v62) {
                    unint64_t v62 = v251;
                  }
                  if (v62 <= 0x29) {
                    unint64_t v62 = 41;
                  }
                  char v63 = 3;
                  goto LABEL_283;
                }
LABEL_266:
                size_t v217 = v239;
                goto LABEL_267;
              }
            }
          }
          memcpy((void *)v144, (const void *)v145, v21);
          unint64_t v96 = __dstb;
          uint64_t v71 = v268;
          uint64_t v151 = v237;
          unsigned int v72 = v146;
          goto LABEL_266;
        case 9u:
          unint64_t v96 = __dstb;
          uint64_t v134 = v268;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v276 + 16))(__dstb, v72, v256);
          char v135 = 9;
LABEL_211:
          *(unsigned char *)(v96 + v134) = v135;
          goto LABEL_269;
        default:
          unint64_t v96 = __dstb;
          size_t v133 = __na;
          memcpy((void *)__dstb, v72, __na);
          goto LABEL_270;
      }
    case 4u:
      char v77 = 8 * v33;
      unint64_t v78 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      uint64_t v49 = a1;
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      a1[40] = a2[40];
      uint64_t v79 = v33;
      swift_bridgeObjectRetain();
      if (v79 > 3) {
        goto LABEL_107;
      }
      unsigned int v80 = ((1 << v77) + 1) >> v77;
      uint64_t v81 = 2;
      if (v80 > 0xFFFD) {
        uint64_t v81 = 4;
      }
      if (v80 <= 0xFD) {
LABEL_107:
      }
        uint64_t v81 = 1;
      unint64_t v62 = v81 + v79;
      if (v78 > v62) {
        unint64_t v62 = v78;
      }
      if (v62 <= 0x29) {
        unint64_t v62 = 41;
      }
      char v63 = 4;
      goto LABEL_283;
    case 5u:
      if (v33 > 3) {
        goto LABEL_116;
      }
      unsigned int v82 = ((1 << v34) + 1) >> v34;
      if (v82 > 0xFFFD)
      {
        unsigned int v83 = *(_DWORD *)&a2[v33];
      }
      else if (v82 > 0xFD)
      {
        unsigned int v83 = *(unsigned __int16 *)&a2[v33];
      }
      else
      {
LABEL_116:
        unsigned int v83 = a2[v33];
      }
      unsigned int v92 = v83 - 2;
      if (v83 < 2)
      {
        uint64_t v49 = a1;
      }
      else
      {
        if (v33 <= 3) {
          uint64_t v93 = v33;
        }
        else {
          uint64_t v93 = 4;
        }
        uint64_t v49 = a1;
        switch(v93)
        {
          case 1:
            int v94 = *a2;
            goto LABEL_155;
          case 2:
            int v94 = *(unsigned __int16 *)a2;
            goto LABEL_155;
          case 3:
            int v94 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_155;
          case 4:
            int v94 = *(_DWORD *)a2;
LABEL_155:
            if (v33 < 4) {
              v94 |= v92 << v34;
            }
            unsigned int v83 = v94 + 2;
            break;
          default:
            break;
        }
      }
      if (v83 == 1)
      {
        uint64_t v104 = *(void *)a2;
        char v105 = 8 * v33;
        unint64_t v106 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        uint64_t v107 = v33;
        id v108 = *(id *)a2;
        uint64_t v100 = v107;
        char v101 = v105;
        unint64_t v102 = v106;
        *(void *)uint64_t v49 = v104;
        v49[8] = a2[8];
        if (v107 <= 3)
        {
          unsigned int v109 = ((1 << v105) + 1) >> v105;
          if (v109 > 0xFFFD)
          {
            *(_DWORD *)&v49[v107] = 1;
            goto LABEL_176;
          }
          if (v109 > 0xFD)
          {
            *(_WORD *)&v49[v107] = 1;
            goto LABEL_176;
          }
        }
        v49[v107] = 1;
      }
      else
      {
        if (!v83)
        {
          char v97 = 8 * v33;
          unint64_t v98 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
          uint64_t v99 = v33;
          (*(void (**)(char *))(v32 + 16))(v49);
          uint64_t v100 = v99;
          char v101 = v97;
          unint64_t v102 = v98;
          if (v99 > 3)
          {
LABEL_163:
            v49[v99] = 0;
            goto LABEL_175;
          }
          unsigned int v103 = ((1 << v97) + 1) >> v97;
          if (v103 > 0xFFFD)
          {
            *(_DWORD *)&v49[v99] = 0;
          }
          else
          {
            if (v103 <= 0xFD) {
              goto LABEL_163;
            }
            *(_WORD *)&v49[v99] = 0;
          }
LABEL_176:
          unsigned int v115 = ((1 << v101) + 1) >> v101;
          uint64_t v116 = 2;
          if (v115 > 0xFFFD) {
            uint64_t v116 = 4;
          }
          if (v115 > 0xFD)
          {
LABEL_180:
            unint64_t v62 = v116 + v100;
            if (v102 > v62) {
              unint64_t v62 = v102;
            }
            if (v62 <= 0x29) {
              unint64_t v62 = 41;
            }
            char v63 = 5;
            goto LABEL_283;
          }
LABEL_179:
          uint64_t v116 = 1;
          goto LABEL_180;
        }
        if (v33 > 3) {
          goto LABEL_173;
        }
        unsigned int v110 = ((1 << v34) + 1) >> v34;
        uint64_t v111 = 2;
        if (v110 > 0xFFFD) {
          uint64_t v111 = 4;
        }
        if (v110 <= 0xFD)
        {
LABEL_173:
          char v112 = 8 * v33;
          unint64_t v113 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
          uint64_t v111 = 1;
        }
        else
        {
          char v112 = 8 * v33;
          unint64_t v113 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        }
        uint64_t v114 = v33;
        memcpy(v49, a2, v111 + v33);
        uint64_t v100 = v114;
        unint64_t v102 = v113;
        char v101 = v112;
      }
LABEL_175:
      if (v100 > 3) {
        goto LABEL_179;
      }
      goto LABEL_176;
    case 6u:
      char v84 = 8 * v33;
      unint64_t v85 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      id v86 = *(id *)a2;
      uint64_t v87 = v33;
      id v88 = *(id *)a2;
      uint64_t v89 = v87;
      uint64_t v49 = a1;
      *(void *)a1 = v86;
      a1[8] = a2[8];
      if (v89 > 3) {
        goto LABEL_121;
      }
      unsigned int v90 = ((1 << v84) + 1) >> v84;
      uint64_t v91 = 2;
      if (v90 > 0xFFFD) {
        uint64_t v91 = 4;
      }
      if (v90 <= 0xFD) {
LABEL_121:
      }
        uint64_t v91 = 1;
      unint64_t v62 = v91 + v89;
      if (v85 > v62) {
        unint64_t v62 = v85;
      }
      if (v62 <= 0x29) {
        unint64_t v62 = 41;
      }
      char v63 = 6;
      goto LABEL_283;
    default:
      if (v33 > 3) {
        goto LABEL_75;
      }
      unsigned int v54 = ((1 << v34) + 1) >> v34;
      uint64_t v55 = 2;
      if (v54 > 0xFFFD) {
        uint64_t v55 = 4;
      }
      if (v54 <= 0xFD) {
LABEL_75:
      }
        uint64_t v55 = 1;
      uint64_t v49 = a1;
      unint64_t v56 = v55 + v33;
      if (v31 > v56) {
        unint64_t v56 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v56 <= 0x29) {
        unint64_t v56 = 41;
      }
      memcpy(a1, a2, v56 + 1);
      return v49;
  }
}

unsigned __int8 *sub_1C9991474(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = sub_1C9BEAB08();
    uint64_t v267 = *(void *)(v4 - 8);
    uint64_t v268 = v4;
    uint64_t v284 = *(void *)(v267 + 64);
    uint64_t v264 = sub_1C9BEC028();
    uint64_t v280 = *(void *)(v264 - 8);
    uint64_t v263 = v280;
    int v5 = *(_DWORD *)(v280 + 80);
    uint64_t v262 = sub_1C9BEAC48();
    uint64_t v282 = *(void *)(v262 - 8);
    uint64_t v261 = v282;
    int v270 = *(_DWORD *)(v282 + 80) | v5;
    uint64_t v266 = sub_1C9BEAF18();
    uint64_t v276 = *(void *)(v266 - 8);
    uint64_t v294 = v276;
    int v6 = *(_DWORD *)(v276 + 80) & 0xF8;
    uint64_t v265 = sub_1C9BEAE48();
    uint64_t v7 = *(void *)(v265 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 | v8 | 7;
    uint64_t v256 = sub_1C9BEC928();
    uint64_t v272 = *(void *)(v256 - 8);
    uint64_t v255 = v272;
    int v10 = *(_DWORD *)(v272 + 80);
    uint64_t v11 = sub_1C9BEC8F8();
    uint64_t v12 = v9;
    uint64_t v260 = v11;
    uint64_t v13 = v11;
    uint64_t v14 = v8;
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t v259 = v15;
    uint64_t v16 = (v270 | (v10 | *(_DWORD *)(v15 + 80))) & 0xF8 | v9;
    uint64_t v285 = v284 + v16;
    unint64_t v17 = *(void *)(v280 + 64);
    unint64_t v258 = v17 + 7;
    if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17) {
      unint64_t v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v17 <= *(void *)(v282 + 64)) {
      unint64_t v17 = *(void *)(v282 + 64);
    }
    uint64_t v283 = *(void *)(v276 + 64) + v8;
    uint64_t v249 = v7;
    int v18 = *(_DWORD *)(v7 + 84);
    size_t v19 = *(void *)(v7 + 64);
    size_t v248 = v19;
    if (!v18) {
      ++v19;
    }
    size_t v271 = v19;
    size_t v281 = v19 + 7;
    uint64_t v257 = v283 & ~v8;
    unint64_t v20 = (v19 + 7 + v257) & 0xFFFFFFFFFFFFFFF8;
    size_t v21 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    if (v17 <= v21) {
      unint64_t v17 = (v20 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    }
    unint64_t v22 = v20 + 31;
    if (v17 <= (((((v22 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v17 = (((((v22 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    uint64_t v252 = *(void *)(v272 + 64);
    uint64_t v253 = v9 + 16;
    uint64_t v23 = *(unsigned int *)(v276 + 84);
    unsigned int v250 = *(_DWORD *)(v7 + 84);
    BOOL v24 = v18 != 0;
    unsigned int v25 = v18 - 1;
    if (!v24) {
      unsigned int v25 = 0;
    }
    unsigned int v247 = v25;
    if (v25 <= v23) {
      unsigned int v25 = *(_DWORD *)(v276 + 84);
    }
    if (v25 <= 0x7FFFFFFE) {
      unsigned int v25 = 2147483646;
    }
    unsigned int v254 = v25;
    unint64_t v26 = ((v22 + ((v9 + 16 + ((v252 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v17 <= v26) {
      unint64_t v17 = v26;
    }
    unint64_t v27 = *(void *)(v15 + 64);
    if (v17 > v27) {
      unint64_t v27 = v17;
    }
    if (v27 <= 0x18) {
      uint64_t v28 = 24;
    }
    else {
      uint64_t v28 = v27;
    }
    unint64_t v29 = (v28 + (v285 & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = ((v29 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    uint64_t v277 = *(void *)(a3 + 24);
    uint64_t v273 = *(void *)(v277 - 8);
    if (*(void *)(v273 + 64) <= 9uLL) {
      uint64_t v31 = 9;
    }
    else {
      uint64_t v31 = *(void *)(*(void *)(v277 - 8) + 64);
    }
    char v32 = 8 * v31;
    if (v31 > 3) {
      goto LABEL_32;
    }
    unsigned int v33 = ((1 << v32) + 1) >> v32;
    uint64_t v34 = 2;
    if (v33 > 0xFFFD) {
      uint64_t v34 = 4;
    }
    if (v33 <= 0xFD) {
LABEL_32:
    }
      uint64_t v34 = 1;
    uint64_t v3 = a1;
    unsigned int v35 = a2;
    unint64_t v36 = v34 + v31;
    if (v30 > v36) {
      unint64_t v36 = ((v29 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v36 <= 0x29) {
      unint64_t v36 = 41;
    }
    unsigned int v37 = a1[v36];
    unsigned int v38 = v37 - 7;
    if (v37 >= 7)
    {
      if (v31 > 3) {
        goto LABEL_42;
      }
      unsigned int v39 = ((1 << v32) + 1) >> v32;
      uint64_t v40 = 2;
      if (v39 > 0xFFFD) {
        uint64_t v40 = 4;
      }
      if (v39 <= 0xFD) {
LABEL_42:
      }
        uint64_t v40 = 1;
      unint64_t v41 = v40 + v31;
      if (v30 > v41) {
        unint64_t v41 = ((v29 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v41 <= 0x29) {
        LODWORD(v41) = 41;
      }
      if (v41 <= 3) {
        uint64_t v42 = v41;
      }
      else {
        uint64_t v42 = 4;
      }
      switch(v42)
      {
        case 1:
          int v43 = *a1;
          goto LABEL_55;
        case 2:
          int v43 = *(unsigned __int16 *)a1;
          goto LABEL_55;
        case 3:
          int v43 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_55;
        case 4:
          int v43 = *(_DWORD *)a1;
LABEL_55:
          if (v41 < 4) {
            v43 |= v38 << (8 * v41);
          }
          unsigned int v37 = v43 + 7;
          break;
        default:
          break;
      }
    }
    uint64_t v44 = ~v16;
    uint64_t v290 = ~v14;
    size_t v292 = v28 + 1;
    uint64_t v251 = ~v12;
    switch(v37)
    {
      case 0u:
      case 1u:
      case 4u:
        goto LABEL_141;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v267 + 8))(v3, v268);
        uint64_t v45 = (id *)((unint64_t)&v3[v285] & v44);
        unsigned int v46 = *((unsigned __int8 *)v45 + v28);
        unsigned int v47 = v46 - 10;
        if (v46 >= 0xA)
        {
          if (v28 <= 3) {
            uint64_t v48 = v28;
          }
          else {
            uint64_t v48 = 4;
          }
          switch(v48)
          {
            case 1:
              int v49 = *(unsigned __int8 *)v45;
              goto LABEL_86;
            case 2:
              int v49 = *(unsigned __int16 *)v45;
              goto LABEL_86;
            case 3:
              int v49 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&v3[v285] & v44) + 2) << 16);
              goto LABEL_86;
            case 4:
              int v49 = *(_DWORD *)v45;
LABEL_86:
              if (v28 < 4) {
                unsigned int v46 = (v49 | (v47 << (8 * v28))) + 10;
              }
              else {
                unsigned int v46 = v49 + 10;
              }
              break;
            default:
              break;
          }
        }
        unint64_t v245 = v29;
        switch(v46)
        {
          case 0u:
            goto LABEL_97;
          case 1u:
            goto LABEL_98;
          case 2u:
            goto LABEL_99;
          case 3u:
            goto LABEL_100;
          case 4u:
            goto LABEL_101;
          case 5u:
            goto LABEL_102;
          case 6u:
            goto LABEL_103;
          case 7u:
            goto LABEL_106;
          case 8u:
            goto LABEL_110;
          case 9u:
            goto LABEL_113;
          default:
            goto LABEL_138;
        }
        goto LABEL_138;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v267 + 8))(v3, v268);
        uint64_t v45 = (id *)((unint64_t)&v3[v285] & v44);
        unsigned int v50 = *((unsigned __int8 *)v45 + v28);
        unsigned int v51 = v50 - 10;
        if (v50 >= 0xA)
        {
          if (v28 <= 3) {
            uint64_t v52 = v28;
          }
          else {
            uint64_t v52 = 4;
          }
          switch(v52)
          {
            case 1:
              int v53 = *(unsigned __int8 *)v45;
              goto LABEL_93;
            case 2:
              int v53 = *(unsigned __int16 *)v45;
              goto LABEL_93;
            case 3:
              int v53 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&v3[v285] & v44) + 2) << 16);
              goto LABEL_93;
            case 4:
              int v53 = *(_DWORD *)v45;
LABEL_93:
              if (v28 < 4) {
                unsigned int v50 = (v53 | (v51 << (8 * v28))) + 10;
              }
              else {
                unsigned int v50 = v53 + 10;
              }
              break;
            default:
              goto LABEL_96;
          }
        }
        break;
      case 5u:
        if (v31 > 3) {
          goto LABEL_72;
        }
        unsigned int v55 = ((1 << v32) + 1) >> v32;
        if (v55 > 0xFFFD)
        {
          unsigned int v54 = *(_DWORD *)&v3[v31];
        }
        else if (v55 <= 0xFD)
        {
LABEL_72:
          unsigned int v54 = v3[v31];
        }
        else
        {
          unsigned int v54 = *(unsigned __int16 *)&v3[v31];
        }
        unsigned int v56 = v54 - 2;
        if (v54 >= 2)
        {
          if (v31 <= 3) {
            uint64_t v57 = v31;
          }
          else {
            uint64_t v57 = 4;
          }
          switch(v57)
          {
            case 1:
              int v58 = *v3;
              goto LABEL_119;
            case 2:
              int v58 = *(unsigned __int16 *)v3;
              goto LABEL_119;
            case 3:
              int v58 = *(unsigned __int16 *)v3 | (v3[2] << 16);
              goto LABEL_119;
            case 4:
              int v58 = *(_DWORD *)v3;
LABEL_119:
              if (v31 < 4) {
                v58 |= v56 << v32;
              }
              unsigned int v54 = v58 + 2;
              break;
            default:
              break;
          }
        }
        if (v54 == 1)
        {
LABEL_125:
        }
        else if (!v54)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v273 + 8))(v3, v277);
        }
        goto LABEL_142;
      case 6u:
        goto LABEL_125;
      default:
        goto LABEL_142;
    }
LABEL_96:
    unint64_t v245 = v29;
    switch(v50)
    {
      case 0u:
LABEL_97:
        uint64_t v60 = v263;
        uint64_t v59 = v264;
        goto LABEL_114;
      case 1u:
LABEL_98:
        uint64_t v61 = v45;
        (*(void (**)(id *, uint64_t))(v263 + 8))(v45, v264);
        swift_release();
        goto LABEL_115;
      case 2u:
LABEL_99:
        uint64_t v61 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_115;
      case 3u:
LABEL_100:
        uint64_t v61 = v45;
        swift_unknownObjectRelease();
        goto LABEL_115;
      case 4u:
LABEL_101:
        uint64_t v60 = v261;
        uint64_t v59 = v262;
        goto LABEL_114;
      case 5u:
LABEL_102:
        uint64_t v61 = v45;

        goto LABEL_115;
      case 6u:
LABEL_103:
        unint64_t v62 = v45;
        (*(void (**)(id *, uint64_t))(v294 + 8))(v45, v266);
        char v244 = v62;
        if (!__swift_getEnumTagSinglePayload(((unint64_t)v62 + v283) & v290, 1, v265)) {
          (*(void (**)(unint64_t, uint64_t))(v249 + 8))(((unint64_t)v62 + v283) & v290, v265);
        }
        goto LABEL_109;
      case 7u:
LABEL_106:
        char v63 = v45;
        (*(void (**)(id *, uint64_t))(v294 + 8))(v45, v266);
        char v244 = v63;
        if (!__swift_getEnumTagSinglePayload(((unint64_t)v63 + v283) & v290, 1, v265)) {
          (*(void (**)(unint64_t, uint64_t))(v249 + 8))(((unint64_t)v63 + v283) & v290, v265);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_109:
        swift_bridgeObjectRelease();
        goto LABEL_137;
      case 8u:
LABEL_110:
        uint64_t v64 = v45;
        (*(void (**)(id *, uint64_t))(v255 + 8))(v45, v256);
        char v244 = v64;
        swift_bridgeObjectRelease();
        unint64_t v65 = (v253 + ((((unint64_t)v64 | 7) + v252) & 0xFFFFFFFFFFFFFFF8)) & v251;
        if (v23 == v254)
        {
          if (__swift_getEnumTagSinglePayload(v65, v23, v266)) {
            goto LABEL_136;
          }
          uint64_t v243 = (v283 + v65) & v290;
          goto LABEL_133;
        }
        uint64_t v243 = (v283 + v65) & v290;
        if (v247 == v254)
        {
          if (v250 >= 2 && __swift_getEnumTagSinglePayload((v283 + v65) & v290, v250, v265) >= 2) {
            goto LABEL_136;
          }
          goto LABEL_133;
        }
        unint64_t v66 = *(void *)(((v281 + ((v283 + v65) & v290)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v66 >= 0xFFFFFFFF) {
          LODWORD(v66) = -1;
        }
        if ((v66 + 1) < 2)
        {
LABEL_133:
          (*(void (**)(unint64_t, uint64_t))(v294 + 8))(v65, v266);
          if (!__swift_getEnumTagSinglePayload(v243, 1, v265)) {
            (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v243, v265);
          }
          swift_bridgeObjectRelease();
        }
LABEL_136:

LABEL_137:
        uint64_t v45 = v244;
LABEL_138:
        unint64_t v67 = ((((unint64_t)v45 | 7) + v292) & 0xFFFFFFFFFFFFFFF8) + 15;
        swift_bridgeObjectRelease();
        if (*(void *)((v67 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v67 & 0xFFFFFFFFFFFFFFF8);
        }
        unint64_t v29 = v245;
LABEL_141:
        swift_bridgeObjectRelease();
LABEL_142:
        if (v31 > 3) {
          goto LABEL_146;
        }
        unsigned int v68 = ((1 << v32) + 1) >> v32;
        uint64_t v69 = 2;
        if (v68 > 0xFFFD) {
          uint64_t v69 = 4;
        }
        if (v68 <= 0xFD) {
LABEL_146:
        }
          uint64_t v69 = 1;
        unint64_t v70 = v69 + v31;
        if (v30 > v70) {
          unint64_t v70 = v30;
        }
        if (v70 <= 0x29) {
          unint64_t v70 = 41;
        }
        unsigned int v71 = a2[v70];
        unsigned int v72 = v71 - 7;
        if (v71 >= 7)
        {
          if (v31 > 3) {
            goto LABEL_156;
          }
          unsigned int v73 = ((1 << v32) + 1) >> v32;
          uint64_t v74 = 2;
          if (v73 > 0xFFFD) {
            uint64_t v74 = 4;
          }
          if (v73 <= 0xFD) {
LABEL_156:
          }
            uint64_t v74 = 1;
          unint64_t v75 = v74 + v31;
          if (v30 > v75) {
            unint64_t v75 = v30;
          }
          if (v75 <= 0x29) {
            LODWORD(v75) = 41;
          }
          if (v75 <= 3) {
            uint64_t v76 = v75;
          }
          else {
            uint64_t v76 = 4;
          }
          switch(v76)
          {
            case 1:
              int v77 = *a2;
              goto LABEL_169;
            case 2:
              int v77 = *(unsigned __int16 *)a2;
              goto LABEL_169;
            case 3:
              int v77 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_169;
            case 4:
              int v77 = *(_DWORD *)a2;
LABEL_169:
              if (v75 < 4) {
                unsigned int v71 = (v77 | (v72 << (8 * v75))) + 7;
              }
              else {
                unsigned int v71 = v77 + 7;
              }
              break;
            default:
              goto LABEL_172;
          }
        }
        break;
      case 9u:
LABEL_113:
        uint64_t v60 = v259;
        uint64_t v59 = v260;
LABEL_114:
        uint64_t v61 = v45;
        (*(void (**)(id *, uint64_t))(v60 + 8))(v45, v59);
LABEL_115:
        uint64_t v45 = v61;
        goto LABEL_138;
      default:
        goto LABEL_138;
    }
LABEL_172:
    switch(v71)
    {
      case 0u:
        *(void *)uint64_t v3 = *(void *)a2;
        long long v78 = *(_OWORD *)(a2 + 8);
        v3[24] = a2[24];
        *(_OWORD *)(v3 + 8) = v78;
        uint64_t v79 = *((void *)a2 + 4);
        v3[40] = a2[40];
        *((void *)v3 + 4) = v79;
        swift_bridgeObjectRetain();
        if (v31 > 3) {
          goto LABEL_177;
        }
        unsigned int v80 = ((1 << v32) + 1) >> v32;
        uint64_t v81 = 2;
        if (v80 > 0xFFFD) {
          uint64_t v81 = 4;
        }
        if (v80 <= 0xFD) {
LABEL_177:
        }
          uint64_t v81 = 1;
        unint64_t v82 = v81 + v31;
        if (v30 > v82) {
          unint64_t v82 = v30;
        }
        if (v82 <= 0x29) {
          unint64_t v82 = 41;
        }
        v3[v82] = 0;
        return v3;
      case 1u:
        *(void *)uint64_t v3 = *(void *)a2;
        long long v86 = *(_OWORD *)(a2 + 8);
        v3[24] = a2[24];
        *(_OWORD *)(v3 + 8) = v86;
        uint64_t v87 = *((void *)a2 + 4);
        v3[40] = a2[40];
        *((void *)v3 + 4) = v87;
        swift_bridgeObjectRetain();
        if (v31 > 3) {
          goto LABEL_197;
        }
        unsigned int v88 = ((1 << v32) + 1) >> v32;
        uint64_t v89 = 2;
        if (v88 > 0xFFFD) {
          uint64_t v89 = 4;
        }
        if (v88 <= 0xFD) {
LABEL_197:
        }
          uint64_t v89 = 1;
        unint64_t v90 = v89 + v31;
        if (v30 > v90) {
          unint64_t v90 = v30;
        }
        if (v90 <= 0x29) {
          unint64_t v90 = 41;
        }
        char v91 = 1;
        goto LABEL_391;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v267 + 16))(v3, a2, v268);
        unint64_t v278 = (unint64_t)&v3[v285] & v44;
        unsigned int v92 = (unsigned __int8 *)((unint64_t)&a2[v285] & v44);
        unsigned int v93 = v92[v28];
        unsigned int v94 = v93 - 10;
        if (v93 >= 0xA)
        {
          if (v28 <= 3) {
            uint64_t v95 = v28;
          }
          else {
            uint64_t v95 = 4;
          }
          switch(v95)
          {
            case 1:
              int v96 = *v92;
              goto LABEL_250;
            case 2:
              int v96 = *(unsigned __int16 *)v92;
              goto LABEL_250;
            case 3:
              int v96 = *(unsigned __int16 *)v92 | (v92[2] << 16);
              goto LABEL_250;
            case 4:
              int v96 = *(_DWORD *)v92;
LABEL_250:
              if (v28 < 4) {
                unsigned int v93 = (v96 | (v94 << (8 * v28))) + 10;
              }
              else {
                unsigned int v93 = v96 + 10;
              }
              break;
            default:
              break;
          }
        }
        unint64_t v246 = v29;
        switch(v93)
        {
          case 0u:
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(v278, v92, v264);
            *(unsigned char *)(v278 + v28) = 0;
            goto LABEL_360;
          case 1u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(v278, v92, v264);
            *(void *)((v258 + v278) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v92[v258] & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v278 + v28) = 1;
            sub_1C9BEC838();
          case 2u:
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            *(void *)unint64_t v278 = *(void *)v92;
            *(void *)(v278 + 8) = *((void *)v92 + 1);
            *(void *)(v278 + 16) = *((void *)v92 + 2);
            *(unsigned char *)(v278 + v28) = 2;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_360;
          case 3u:
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            *(void *)unint64_t v278 = *(void *)v92;
            *(unsigned char *)(v278 + v28) = 3;
            swift_unknownObjectRetain();
            goto LABEL_360;
          case 4u:
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v261 + 16))(v278, v92, v262);
            char v129 = 4;
            goto LABEL_309;
          case 5u:
            char v115 = 8 * v31;
            uint64_t v130 = *(void **)v92;
            unint64_t v116 = v278;
            *(void *)unint64_t v278 = *(void *)v92;
            char v131 = 5;
            goto LABEL_359;
          case 6u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v294 + 16))(v278, v92, v266);
            unint64_t v132 = (void *)((v283 + v278) & v290);
            size_t v133 = (const void *)((unint64_t)&v92[v283] & v290);
            if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v265))
            {
              memcpy(v132, v133, v271);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v249 + 16))(v132, v133, v265);
              __swift_storeEnumTagSinglePayload((uint64_t)v132, 0, 1, v265);
            }
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            unint64_t v158 = (void *)(((unint64_t)v132 + v281) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v159 = (void *)(((unint64_t)v133 + v281) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v158 = *v159;
            v158[1] = v159[1];
            unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v161 = ((unint64_t)v159 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v162 = *(_DWORD *)v161;
            *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
            *(_DWORD *)unint64_t v160 = v162;
            *(unsigned char *)(v278 + v28) = 6;
            swift_bridgeObjectRetain();
            goto LABEL_360;
          case 7u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v294 + 16))(v278, v92, v266);
            uint64_t v134 = (void *)((v283 + v278) & v290);
            char v135 = (const void *)((unint64_t)&v92[v283] & v290);
            char v115 = 8 * v31;
            if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v265))
            {
              memcpy(v134, v135, v271);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v249 + 16))(v134, v135, v265);
              __swift_storeEnumTagSinglePayload((uint64_t)v134, 0, 1, v265);
            }
            unint64_t v116 = v278;
            unint64_t v163 = (void *)(((unint64_t)v134 + v281) & 0xFFFFFFFFFFFFFFF8);
            int v164 = (void *)(((unint64_t)v135 + v281) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v163 = *v164;
            v163[1] = v164[1];
            unint64_t v165 = ((unint64_t)v163 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v166 = ((unint64_t)v164 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v167 = *(_DWORD *)v166;
            *(unsigned char *)(v165 + 4) = *(unsigned char *)(v166 + 4);
            *(_DWORD *)unint64_t v165 = v167;
            uint64_t v168 = (void *)(((v278 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v169 = (void *)((((unint64_t)v92 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
            void *v168 = *v169;
            v168[1] = v169[1];
            unint64_t v170 = (void *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v171 = (void *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v170 = *v171;
            v170[1] = v171[1];
            int v172 = (void *)(((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v173 = (void *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
            *int v172 = *v173;
            v172[1] = v173[1];
            *(unsigned char *)(v278 + v28) = 7;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unsigned int v35 = a2;
            goto LABEL_360;
          case 8u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v255 + 16))(v278, v92, v256);
            uint64_t v136 = (void *)(((v278 | 7) + v252) & 0xFFFFFFFFFFFFFFF8);
            char v137 = (void *)((((unint64_t)v92 | 7) + v252) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v136 = *v137;
            v136[1] = v137[1];
            unint64_t v274 = ((unint64_t)v136 + v253) & v251;
            uint64_t v286 = ((unint64_t)v137 + v253) & v251;
            swift_bridgeObjectRetain();
            if (v23 == v254)
            {
              int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v286, v23, v266);
              uint64_t v139 = (const void *)v286;
              if (!EnumTagSinglePayload)
              {
                char v140 = (const void *)((v283 + v286) & v290);
                goto LABEL_348;
              }
            }
            else
            {
              char v140 = (const void *)((v283 + v286) & v290);
              uint64_t v139 = (const void *)v286;
              if (v247 == v254)
              {
                if (v250 < 2
                  || (unsigned int v155 = __swift_getEnumTagSinglePayload((v283 + v286) & v290, v250, v265),
                      uint64_t v139 = (const void *)v286,
                      v155 < 2))
                {
LABEL_348:
                  (*(void (**)(unint64_t, const void *, uint64_t))(v294 + 16))(v274, v139, v266);
                  unint64_t v191 = (void *)((v283 + v274) & v290);
                  char v115 = 8 * v31;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v140, 1, v265))
                  {
                    memcpy(v191, v140, v271);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v249 + 16))(v191, v140, v265);
                    __swift_storeEnumTagSinglePayload((uint64_t)v191, 0, 1, v265);
                  }
                  unint64_t v195 = (void *)(((unint64_t)v191 + v281) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v196 = (void *)(((unint64_t)v140 + v281) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v195 = *v196;
                  v195[1] = v196[1];
                  unint64_t v197 = ((unint64_t)v195 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v198 = ((unint64_t)v196 + 19) & 0xFFFFFFFFFFFFFFF8;
                  int v199 = *(_DWORD *)v198;
                  *(unsigned char *)(v197 + 4) = *(unsigned char *)(v198 + 4);
                  *(_DWORD *)unint64_t v197 = v199;
                  swift_bridgeObjectRetain();
                  size_t v200 = v248;
                  unint64_t v116 = v278;
                  if (!v250) {
                    goto LABEL_357;
                  }
LABEL_358:
                  unint64_t v201 = (((v257 + v200 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  unint64_t v202 = (void *)(((v274 | 7) + v201) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v130 = *(void **)(((v286 | 7) + v201) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v202 = v130;
                  char v131 = 8;
LABEL_359:
                  *(unsigned char *)(v116 + v28) = v131;
                  id v203 = v130;
LABEL_360:
                  long long v204 = (void *)((((unint64_t)v92 | 7) + v292) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v205 = (void *)(((v116 | 7) + v292) & 0xFFFFFFFFFFFFFFF8);
                  void *v205 = *v204;
                  unint64_t v206 = ((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v207 = ((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v208 = *(void *)(v207 + 24);
                  swift_bridgeObjectRetain();
                  if (v208 < 0xFFFFFFFF)
                  {
                    long long v209 = *(_OWORD *)v207;
                    long long v210 = *(_OWORD *)(v207 + 16);
                    *(void *)(v206 + 32) = *(void *)(v207 + 32);
                    *(_OWORD *)unint64_t v206 = v209;
                    *(_OWORD *)(v206 + 16) = v210;
                  }
                  else
                  {
                    *(void *)(v206 + 24) = v208;
                    *(void *)(v206 + 32) = *(void *)(v207 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v208 - 8))(v206, v207, v208);
                  }
                  *(unsigned char *)(v206 + 40) = *(unsigned char *)(v207 + 40);
                  unint64_t v211 = ((v246 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
                  unint64_t v212 = (unint64_t)&v3[v211 + 7] & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v213 = (unint64_t)&v35[v211 + 7] & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v212 = *(void *)v213;
                  long long v214 = *(_OWORD *)(v213 + 8);
                  *(unsigned char *)(v212 + 24) = *(unsigned char *)(v213 + 24);
                  *(_OWORD *)(v212 + 8) = v214;
                  uint64_t v215 = *(void *)(v213 + 32);
                  *(unsigned char *)(v212 + 40) = *(unsigned char *)(v213 + 40);
                  *(void *)(v212 + 32) = v215;
                  swift_bridgeObjectRetain();
                  if (v31 > 3) {
                    goto LABEL_367;
                  }
                  unsigned int v216 = ((1 << v115) + 1) >> v115;
                  uint64_t v217 = 2;
                  if (v216 > 0xFFFD) {
                    uint64_t v217 = 4;
                  }
                  if (v216 <= 0xFD) {
LABEL_367:
                  }
                    uint64_t v217 = 1;
                  unint64_t v90 = v217 + v31;
                  if (v30 > v90) {
                    unint64_t v90 = v30;
                  }
                  if (v90 <= 0x29) {
                    unint64_t v90 = 41;
                  }
                  char v91 = 2;
                  goto LABEL_391;
                }
              }
              else
              {
                unint64_t v190 = *(void *)((((unint64_t)v140 + v281) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v190 >= 0xFFFFFFFF) {
                  LODWORD(v190) = -1;
                }
                if ((v190 + 1) < 2) {
                  goto LABEL_348;
                }
              }
            }
            char v115 = 8 * v31;
            memcpy((void *)v274, v139, v21);
            unint64_t v116 = v278;
LABEL_357:
            size_t v200 = v271;
            goto LABEL_358;
          case 9u:
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(v278, v92, v260);
            char v129 = 9;
LABEL_309:
            *(unsigned char *)(v116 + v28) = v129;
            goto LABEL_360;
          default:
            char v115 = 8 * v31;
            unint64_t v116 = v278;
            memcpy((void *)v278, v92, v292);
            goto LABEL_360;
        }
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v267 + 16))(v3, a2, v268);
        unint64_t v279 = (unint64_t)&v3[v285] & v44;
        char v97 = (unsigned __int8 *)((unint64_t)&a2[v285] & v44);
        unsigned int v98 = v97[v28];
        unsigned int v99 = v98 - 10;
        if (v98 >= 0xA)
        {
          if (v28 <= 3) {
            uint64_t v100 = v28;
          }
          else {
            uint64_t v100 = 4;
          }
          switch(v100)
          {
            case 1:
              int v101 = *v97;
              goto LABEL_258;
            case 2:
              int v101 = *(unsigned __int16 *)v97;
              goto LABEL_258;
            case 3:
              int v101 = *(unsigned __int16 *)v97 | (*(unsigned __int8 *)(((unint64_t)&a2[v285] & v44) + 2) << 16);
              goto LABEL_258;
            case 4:
              int v101 = *(_DWORD *)v97;
LABEL_258:
              if (v28 < 4) {
                unsigned int v98 = (v101 | (v99 << (8 * v28))) + 10;
              }
              else {
                unsigned int v98 = v101 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v98)
        {
          case 0u:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v119 = v279;
            unint64_t v120 = (unint64_t)v97;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(v279, v97, v264);
            *(unsigned char *)(v279 + v28) = 0;
            goto LABEL_378;
          case 1u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v263 + 16))(v279, v97, v264);
            *(void *)((v258 + v279) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v258 + ((unint64_t)&a2[v285] & v44)) & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v279 + v28) = 1;
            sub_1C9BEC838();
          case 2u:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v119 = v279;
            *(void *)unint64_t v279 = *(void *)v97;
            *(void *)(v279 + 8) = *((void *)v97 + 1);
            *(void *)(v279 + 16) = *((void *)v97 + 2);
            *(unsigned char *)(v279 + v28) = 2;
            BOOL v141 = v97;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v120 = (unint64_t)v141;
            goto LABEL_378;
          case 3u:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v119 = v279;
            *(void *)unint64_t v279 = *(void *)v97;
            *(unsigned char *)(v279 + v28) = 3;
            unint64_t v120 = (unint64_t)v97;
            swift_unknownObjectRetain();
            goto LABEL_378;
          case 4u:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v119 = v279;
            unint64_t v120 = (unint64_t)v97;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v261 + 16))(v279, v97, v262);
            char v142 = 4;
            goto LABEL_321;
          case 5u:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            uint64_t v143 = *(void **)v97;
            unint64_t v119 = v279;
            *(void *)unint64_t v279 = *(void *)v97;
            *(unsigned char *)(v279 + v28) = 5;
            unint64_t v120 = (unint64_t)v97;
            id v144 = v143;
            goto LABEL_378;
          case 6u:
            unint64_t v117 = v29;
            uint64_t v145 = v97;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v294 + 16))(v279, v97, v266);
            uint64_t v146 = (void *)((v283 + v279) & v290);
            unint64_t v287 = (unint64_t)v145;
            uint64_t v147 = (const void *)((unint64_t)&v145[v283] & v290);
            char v118 = 8 * v31;
            if (__swift_getEnumTagSinglePayload((uint64_t)v147, 1, v265))
            {
              memcpy(v146, v147, v271);
            }
            else
            {
              (*(void (**)(void *, const void *))(v249 + 16))(v146, v147);
              __swift_storeEnumTagSinglePayload((uint64_t)v146, 0, 1, v265);
            }
            unint64_t v119 = v279;
            unint64_t v174 = (void *)(((unint64_t)v146 + v281) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v175 = (void *)(((unint64_t)v147 + v281) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v174 = *v175;
            v174[1] = v175[1];
            unint64_t v176 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v177 = ((unint64_t)v175 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v178 = *(_DWORD *)v177;
            *(unsigned char *)(v176 + 4) = *(unsigned char *)(v177 + 4);
            *(_DWORD *)unint64_t v176 = v178;
            *(unsigned char *)(v279 + v28) = 6;
            swift_bridgeObjectRetain();
            goto LABEL_377;
          case 7u:
            unint64_t v117 = v29;
            uint64_t v148 = v97;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v294 + 16))(v279, v97, v266);
            uint64_t v149 = (void *)((v283 + v279) & v290);
            unint64_t v288 = (unint64_t)v148;
            uint64_t v150 = (const void *)((unint64_t)&v148[v283] & v290);
            char v118 = 8 * v31;
            if (__swift_getEnumTagSinglePayload((uint64_t)v150, 1, v265))
            {
              memcpy(v149, v150, v271);
            }
            else
            {
              (*(void (**)(void *, const void *))(v249 + 16))(v149, v150);
              __swift_storeEnumTagSinglePayload((uint64_t)v149, 0, 1, v265);
            }
            unint64_t v119 = v279;
            unint64_t v179 = (void *)(((unint64_t)v149 + v281) & 0xFFFFFFFFFFFFFFF8);
            int v180 = (void *)(((unint64_t)v150 + v281) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v179 = *v180;
            v179[1] = v180[1];
            unint64_t v181 = ((unint64_t)v179 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v182 = ((unint64_t)v180 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v183 = *(_DWORD *)v182;
            *(unsigned char *)(v181 + 4) = *(unsigned char *)(v182 + 4);
            *(_DWORD *)unint64_t v181 = v183;
            unint64_t v184 = (void *)(((v279 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v185 = (void *)(((v288 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v184 = *v185;
            v184[1] = v185[1];
            unint64_t v186 = (void *)(((unint64_t)v184 + 23) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v187 = (void *)(((unint64_t)v185 + 23) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v186 = *v187;
            v186[1] = v187[1];
            uint64_t v188 = (void *)(((unint64_t)v186 + 23) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v189 = (void *)(((unint64_t)v187 + 23) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v188 = *v189;
            v188[1] = v189[1];
            *(unsigned char *)(v279 + v28) = 7;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            unint64_t v120 = v288;
            unsigned int v35 = a2;
            goto LABEL_378;
          case 8u:
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v255 + 16))(v279, v97, v256);
            uint64_t v151 = (void *)(((v279 | 7) + v252) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v287 = (unint64_t)&a2[v285] & v44;
            uint64_t v152 = (void *)(((v287 | 7) + v252) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v151 = *v152;
            v151[1] = v152[1];
            uint64_t v275 = (void *)(((unint64_t)v151 + v253) & v251);
            uint64_t v153 = ((unint64_t)v152 + v253) & v251;
            swift_bridgeObjectRetain();
            uint64_t v269 = v153;
            if (v23 == v254)
            {
              if (!__swift_getEnumTagSinglePayload(v153, v23, v266))
              {
                unint64_t v154 = (const void *)((v283 + v153) & v290);
                goto LABEL_353;
              }
            }
            else
            {
              unint64_t v154 = (const void *)((v283 + v153) & v290);
              if (v247 == v254)
              {
                if (v250 < 2 || __swift_getEnumTagSinglePayload((v283 + v153) & v290, v250, v265) < 2)
                {
LABEL_353:
                  uint64_t v193 = v153;
                  unint64_t v117 = v29;
                  (*(void (**)(void *, uint64_t, uint64_t))(v294 + 16))(v275, v193, v266);
                  unint64_t v194 = (void *)(((unint64_t)v275 + v283) & v290);
                  char v118 = 8 * v31;
                  if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v265))
                  {
                    memcpy(v194, v154, v271);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *))(v249 + 16))(v194, v154);
                    __swift_storeEnumTagSinglePayload((uint64_t)v194, 0, 1, v265);
                  }
                  unint64_t v218 = (void *)(((unint64_t)v194 + v281) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v219 = (void *)(((unint64_t)v154 + v281) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v218 = *v219;
                  v218[1] = v219[1];
                  unint64_t v220 = ((unint64_t)v218 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v221 = ((unint64_t)v219 + 19) & 0xFFFFFFFFFFFFFFF8;
                  int v222 = *(_DWORD *)v221;
                  *(unsigned char *)(v220 + 4) = *(unsigned char *)(v221 + 4);
                  *(_DWORD *)unint64_t v220 = v222;
                  swift_bridgeObjectRetain();
                  size_t v223 = v248;
                  unint64_t v157 = (unint64_t)v275;
                  unint64_t v119 = v279;
                  if (!v250) {
                    goto LABEL_375;
                  }
LABEL_376:
                  unint64_t v224 = (((v257 + v223 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  unint64_t v225 = (void *)(((v157 | 7) + v224) & 0xFFFFFFFFFFFFFFF8);
                  long long v226 = *(void **)(((v269 | 7) + v224) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v225 = v226;
                  *(unsigned char *)(v119 + v28) = 8;
                  id v227 = v226;
LABEL_377:
                  unint64_t v120 = v287;
LABEL_378:
                  unint64_t v228 = (void *)(((v120 | 7) + v292) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v229 = (void *)(((v119 | 7) + v292) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v229 = *v228;
                  unint64_t v230 = ((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v231 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v232 = *(void *)(v231 + 24);
                  swift_bridgeObjectRetain();
                  if (v232 < 0xFFFFFFFF)
                  {
                    long long v233 = *(_OWORD *)v231;
                    long long v234 = *(_OWORD *)(v231 + 16);
                    *(void *)(v230 + 32) = *(void *)(v231 + 32);
                    *(_OWORD *)unint64_t v230 = v233;
                    *(_OWORD *)(v230 + 16) = v234;
                  }
                  else
                  {
                    *(void *)(v230 + 24) = v232;
                    *(void *)(v230 + 32) = *(void *)(v231 + 32);
                    (**(void (***)(unint64_t, unint64_t, unint64_t))(v232 - 8))(v230, v231, v232);
                  }
                  *(unsigned char *)(v230 + 40) = *(unsigned char *)(v231 + 40);
                  unint64_t v235 = ((v117 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
                  unint64_t v236 = (unint64_t)&v3[v235 + 7] & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v237 = (unint64_t)&v35[v235 + 7] & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v236 = *(void *)v237;
                  long long v238 = *(_OWORD *)(v237 + 8);
                  *(unsigned char *)(v236 + 24) = *(unsigned char *)(v237 + 24);
                  *(_OWORD *)(v236 + 8) = v238;
                  uint64_t v239 = *(void *)(v237 + 32);
                  *(unsigned char *)(v236 + 40) = *(unsigned char *)(v237 + 40);
                  *(void *)(v236 + 32) = v239;
                  swift_bridgeObjectRetain();
                  if (v31 > 3) {
                    goto LABEL_385;
                  }
                  unsigned int v240 = ((1 << v118) + 1) >> v118;
                  uint64_t v241 = 2;
                  if (v240 > 0xFFFD) {
                    uint64_t v241 = 4;
                  }
                  if (v240 <= 0xFD) {
LABEL_385:
                  }
                    uint64_t v241 = 1;
                  unint64_t v90 = v241 + v31;
                  if (v30 > v90) {
                    unint64_t v90 = v30;
                  }
                  if (v90 <= 0x29) {
                    unint64_t v90 = 41;
                  }
                  char v91 = 3;
LABEL_391:
                  v3[v90] = v91;
                  return v3;
                }
              }
              else
              {
                unint64_t v192 = *(void *)((((unint64_t)v154 + v281) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v192 >= 0xFFFFFFFF) {
                  LODWORD(v192) = -1;
                }
                if ((v192 + 1) < 2) {
                  goto LABEL_353;
                }
              }
            }
            int v156 = (const void *)v153;
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v157 = (unint64_t)v275;
            memcpy(v275, v156, v21);
            unint64_t v119 = v279;
LABEL_375:
            size_t v223 = v271;
            goto LABEL_376;
          case 9u:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v119 = v279;
            unint64_t v120 = (unint64_t)v97;
            (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v259 + 16))(v279, v97, v260);
            char v142 = 9;
LABEL_321:
            *(unsigned char *)(v119 + v28) = v142;
            goto LABEL_378;
          default:
            unint64_t v117 = v29;
            char v118 = 8 * v31;
            unint64_t v119 = v279;
            unint64_t v120 = (unint64_t)v97;
            memcpy((void *)v279, v97, v292);
            goto LABEL_378;
        }
      case 4u:
        *(void *)uint64_t v3 = *(void *)a2;
        long long v102 = *(_OWORD *)(a2 + 8);
        v3[24] = a2[24];
        *(_OWORD *)(v3 + 8) = v102;
        uint64_t v103 = *((void *)a2 + 4);
        v3[40] = a2[40];
        *((void *)v3 + 4) = v103;
        swift_bridgeObjectRetain();
        if (v31 > 3) {
          goto LABEL_219;
        }
        unsigned int v104 = ((1 << v32) + 1) >> v32;
        uint64_t v105 = 2;
        if (v104 > 0xFFFD) {
          uint64_t v105 = 4;
        }
        if (v104 <= 0xFD) {
LABEL_219:
        }
          uint64_t v105 = 1;
        unint64_t v90 = v105 + v31;
        if (v30 > v90) {
          unint64_t v90 = v30;
        }
        if (v90 <= 0x29) {
          unint64_t v90 = 41;
        }
        char v91 = 4;
        goto LABEL_391;
      case 5u:
        if (v31 > 3) {
          goto LABEL_228;
        }
        unsigned int v106 = ((1 << v32) + 1) >> v32;
        if (v106 > 0xFFFD)
        {
          unsigned int v107 = *(_DWORD *)&a2[v31];
        }
        else if (v106 > 0xFD)
        {
          unsigned int v107 = *(unsigned __int16 *)&a2[v31];
        }
        else
        {
LABEL_228:
          unsigned int v107 = a2[v31];
        }
        unsigned int v112 = v107 - 2;
        if (v107 >= 2)
        {
          if (v31 <= 3) {
            uint64_t v113 = v31;
          }
          else {
            uint64_t v113 = 4;
          }
          switch(v113)
          {
            case 1:
              int v114 = *a2;
              goto LABEL_266;
            case 2:
              int v114 = *(unsigned __int16 *)a2;
              goto LABEL_266;
            case 3:
              int v114 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_266;
            case 4:
              int v114 = *(_DWORD *)a2;
LABEL_266:
              if (v31 < 4) {
                v114 |= v112 << v32;
              }
              unsigned int v107 = v114 + 2;
              break;
            default:
              break;
          }
        }
        if (v107 == 1)
        {
          uint64_t v122 = *(void *)a2;
          id v123 = *(id *)a2;
          *(void *)uint64_t v3 = v122;
          v3[8] = a2[8];
          if (v31 <= 3)
          {
            unsigned int v124 = ((1 << v32) + 1) >> v32;
            if (v124 > 0xFFFD)
            {
              *(_DWORD *)&v3[v31] = 1;
              goto LABEL_286;
            }
            if (v124 > 0xFD)
            {
              *(_WORD *)&v3[v31] = 1;
              goto LABEL_286;
            }
          }
          v3[v31] = 1;
        }
        else
        {
          if (!v107)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v273 + 16))(v3, a2, v277);
            if (v31 > 3)
            {
LABEL_274:
              v3[v31] = 0;
              goto LABEL_285;
            }
            unsigned int v121 = ((1 << v32) + 1) >> v32;
            if (v121 > 0xFFFD)
            {
              *(_DWORD *)&v3[v31] = 0;
            }
            else
            {
              if (v121 <= 0xFD) {
                goto LABEL_274;
              }
              *(_WORD *)&v3[v31] = 0;
            }
LABEL_286:
            unsigned int v127 = ((1 << v32) + 1) >> v32;
            uint64_t v128 = 2;
            if (v127 > 0xFFFD) {
              uint64_t v128 = 4;
            }
            if (v127 > 0xFD)
            {
LABEL_290:
              unint64_t v90 = v128 + v31;
              if (v30 > v90) {
                unint64_t v90 = v30;
              }
              if (v90 <= 0x29) {
                unint64_t v90 = 41;
              }
              char v91 = 5;
              goto LABEL_391;
            }
LABEL_289:
            uint64_t v128 = 1;
            goto LABEL_290;
          }
          if (v31 > 3) {
            goto LABEL_283;
          }
          unsigned int v125 = ((1 << v32) + 1) >> v32;
          uint64_t v126 = 2;
          if (v125 > 0xFFFD) {
            uint64_t v126 = 4;
          }
          if (v125 <= 0xFD) {
LABEL_283:
          }
            uint64_t v126 = 1;
          memcpy(v3, a2, v126 + v31);
        }
LABEL_285:
        if (v31 > 3) {
          goto LABEL_289;
        }
        goto LABEL_286;
      case 6u:
        id v108 = *(id *)a2;
        id v109 = *(id *)a2;
        *(void *)uint64_t v3 = v108;
        v3[8] = a2[8];
        if (v31 > 3) {
          goto LABEL_233;
        }
        unsigned int v110 = ((1 << v32) + 1) >> v32;
        uint64_t v111 = 2;
        if (v110 > 0xFFFD) {
          uint64_t v111 = 4;
        }
        if (v110 <= 0xFD) {
LABEL_233:
        }
          uint64_t v111 = 1;
        unint64_t v90 = v111 + v31;
        if (v30 > v90) {
          unint64_t v90 = v30;
        }
        if (v90 <= 0x29) {
          unint64_t v90 = 41;
        }
        char v91 = 6;
        goto LABEL_391;
      default:
        if (v31 > 3) {
          goto LABEL_187;
        }
        unsigned int v83 = ((1 << v32) + 1) >> v32;
        uint64_t v84 = 2;
        if (v83 > 0xFFFD) {
          uint64_t v84 = 4;
        }
        if (v83 <= 0xFD) {
LABEL_187:
        }
          uint64_t v84 = 1;
        unint64_t v85 = v84 + v31;
        if (v30 > v85) {
          unint64_t v85 = v30;
        }
        if (v85 <= 0x29) {
          unint64_t v85 = 41;
        }
        memcpy(v3, a2, v85 + 1);
        return v3;
    }
  }
  return v3;
}

char *sub_1C9993938(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v261 = sub_1C9BEAB08();
  uint64_t v260 = *(void *)(v261 - 8);
  uint64_t v276 = *(void *)(v260 + 64);
  uint64_t v257 = sub_1C9BEC028();
  uint64_t v268 = *(void *)(v257 - 8);
  uint64_t v256 = v268;
  int v3 = *(_DWORD *)(v268 + 80);
  uint64_t v255 = sub_1C9BEAC48();
  uint64_t v274 = *(void *)(v255 - 8);
  uint64_t v254 = v274;
  int v264 = *(_DWORD *)(v274 + 80) | v3;
  uint64_t v258 = sub_1C9BEAF18();
  uint64_t v272 = *(void *)(v258 - 8);
  uint64_t v281 = v272;
  int v4 = *(_DWORD *)(v272 + 80) & 0xF8;
  uint64_t v259 = sub_1C9BEAE48();
  uint64_t v266 = *(void *)(v259 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v266 + 80);
  uint64_t v6 = v4 | v5 | 7;
  uint64_t v7 = sub_1C9BEC928();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v251 = v8;
  uint64_t v252 = v7;
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v253 = sub_1C9BEC8F8();
  uint64_t v10 = *(void *)(v253 - 8);
  uint64_t v11 = v268;
  uint64_t v269 = v10;
  uint64_t v12 = (v264 | (v9 | *(_DWORD *)(v10 + 80))) & 0xF8 | v6;
  uint64_t v13 = v276 + v12;
  unint64_t v14 = *(void *)(v11 + 64);
  unint64_t v265 = v14 + 7;
  if (((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v14) {
    unint64_t v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v14 <= *(void *)(v274 + 64)) {
    unint64_t v14 = *(void *)(v274 + 64);
  }
  if (v14 <= 0x18) {
    unint64_t v15 = 24;
  }
  else {
    unint64_t v15 = v14;
  }
  uint64_t v277 = *(void *)(v272 + 64) + v5;
  uint64_t v250 = v266;
  int v16 = *(_DWORD *)(v266 + 84);
  size_t v249 = *(void *)(v266 + 64);
  if (v16) {
    uint64_t v17 = *(void *)(v266 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v266 + 64) + 1;
  }
  unint64_t v18 = (v17 + 7 + (v277 & ~v5)) & 0xFFFFFFFFFFFFFFF8;
  size_t v19 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v19 <= v15) {
    unint64_t v20 = v15;
  }
  else {
    unint64_t v20 = (v18 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v21 = v18 + 31;
  unint64_t v22 = ((((v21 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v22 + 16;
  if (v22 + 16 > v20) {
    unint64_t v20 = v22 + 16;
  }
  uint64_t v24 = *(void *)(v8 + 64);
  uint64_t v273 = v6 + 16;
  uint64_t v25 = v6;
  unint64_t v26 = (v6 + 16 + ((v24 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  uint64_t v27 = *(unsigned int *)(v281 + 84);
  unsigned int v267 = *(_DWORD *)(v266 + 84);
  BOOL v28 = v16 != 0;
  unsigned int v29 = v16 - 1;
  if (v28) {
    unsigned int v30 = v29;
  }
  else {
    unsigned int v30 = 0;
  }
  if (v30 <= v27) {
    unsigned int v31 = *(_DWORD *)(v281 + 84);
  }
  else {
    unsigned int v31 = v30;
  }
  if (v31 <= 0x7FFFFFFE) {
    unsigned int v31 = 2147483646;
  }
  unsigned int v275 = v31;
  unint64_t v32 = (v21 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = v32 + 8;
  if (v32 + 8 <= v20) {
    unint64_t v34 = v20;
  }
  else {
    unint64_t v34 = v32 + 8;
  }
  unint64_t v35 = *(void *)(v10 + 64);
  if (v35 <= v34) {
    unint64_t v36 = v34;
  }
  else {
    unint64_t v36 = *(void *)(v10 + 64);
  }
  unint64_t v37 = (v36 + (v13 & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v39 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v39 + 64) <= 9uLL) {
    uint64_t v40 = 9;
  }
  else {
    uint64_t v40 = *(void *)(v39 + 64);
  }
  char v41 = 8 * v40;
  if (v40 > 3) {
    goto LABEL_37;
  }
  unsigned int v42 = ((1 << v41) + 1) >> v41;
  uint64_t v43 = 2;
  if (v42 > 0xFFFD) {
    uint64_t v43 = 4;
  }
  if (v42 <= 0xFD) {
LABEL_37:
  }
    uint64_t v43 = 1;
  unint64_t v44 = v43 + v40;
  if (v38 > v44) {
    unint64_t v44 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v44 <= 0x29) {
    unint64_t v44 = 41;
  }
  unsigned int v45 = a2[v44];
  unsigned int v46 = v45 - 7;
  uint64_t v279 = v40;
  if (v45 >= 7)
  {
    if (v40 > 3) {
      goto LABEL_47;
    }
    unsigned int v47 = ((1 << v41) + 1) >> v41;
    uint64_t v48 = 2;
    if (v47 > 0xFFFD) {
      uint64_t v48 = 4;
    }
    if (v47 <= 0xFD) {
LABEL_47:
    }
      uint64_t v48 = 1;
    unint64_t v49 = v48 + v40;
    if (v38 > v49) {
      unint64_t v49 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v49 <= 0x29) {
      LODWORD(v49) = 41;
    }
    if (v49 <= 3) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 4;
    }
    switch(v50)
    {
      case 1:
        int v51 = *a2;
        goto LABEL_60;
      case 2:
        int v51 = *(unsigned __int16 *)a2;
        goto LABEL_60;
      case 3:
        int v51 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_60;
      case 4:
        int v51 = *(_DWORD *)a2;
LABEL_60:
        if (v49 < 4) {
          v51 |= v46 << (8 * v49);
        }
        unsigned int v45 = v51 + 7;
        break;
      default:
        break;
    }
  }
  uint64_t v247 = v277 & ~v5;
  unint64_t v248 = v35;
  uint64_t v52 = ~v12;
  uint64_t v53 = ~v25;
  switch(v45)
  {
    case 0u:
      long long v54 = *((_OWORD *)a2 + 1);
      unsigned int v55 = a1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v54;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      if (v40 > 3) {
        goto LABEL_68;
      }
      unsigned int v56 = ((1 << v41) + 1) >> v41;
      uint64_t v57 = 2;
      if (v56 > 0xFFFD) {
        uint64_t v57 = 4;
      }
      if (v56 <= 0xFD) {
LABEL_68:
      }
        uint64_t v57 = 1;
      unint64_t v58 = v57 + v40;
      if (v38 > v58) {
        unint64_t v58 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v58 <= 0x29) {
        unint64_t v58 = 41;
      }
      a1[v58] = 0;
      return v55;
    case 1u:
      long long v62 = *((_OWORD *)a2 + 1);
      unsigned int v55 = a1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v62;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      if (v40 > 3) {
        goto LABEL_88;
      }
      unsigned int v63 = ((1 << v41) + 1) >> v41;
      uint64_t v64 = 2;
      if (v63 > 0xFFFD) {
        uint64_t v64 = 4;
      }
      if (v63 <= 0xFD) {
LABEL_88:
      }
        uint64_t v64 = 1;
      unint64_t v65 = v64 + v40;
      if (v38 > v65) {
        unint64_t v65 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v65 <= 0x29) {
        unint64_t v65 = 41;
      }
      char v66 = 1;
      goto LABEL_266;
    case 2u:
      uint64_t v235 = v17 + 7;
      uint64_t v237 = ~v5;
      unint64_t v229 = v15;
      unint64_t v231 = v33;
      size_t v233 = v17;
      unint64_t v243 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      size_t __n = v36 + 1;
      unint64_t v239 = (v36 + (v13 & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
      char v241 = 8 * v40;
      unsigned int v55 = a1;
      uint64_t v67 = v261;
      unint64_t v262 = v36;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v260 + 32))(a1, a2, v67);
      unsigned int v68 = a2;
      unint64_t v69 = (unint64_t)&a1[v13] & v52;
      unint64_t v70 = (unint64_t)&a2[v13] & v52;
      unsigned int v71 = *(unsigned __int8 *)(v70 + v262);
      unsigned int v72 = v71 - 10;
      if (v71 >= 0xA)
      {
        if (v262 <= 3) {
          uint64_t v73 = v262;
        }
        else {
          uint64_t v73 = 4;
        }
        switch(v73)
        {
          case 1:
            int v74 = *(unsigned __int8 *)v70;
            goto LABEL_142;
          case 2:
            int v74 = *(unsigned __int16 *)v70;
            goto LABEL_142;
          case 3:
            int v74 = *(unsigned __int16 *)v70 | (*(unsigned __int8 *)(((unint64_t)&a2[v13] & v52) + 2) << 16);
            goto LABEL_142;
          case 4:
            int v74 = *(_DWORD *)v70;
LABEL_142:
            if (v262 < 4) {
              unsigned int v71 = (v74 | (v72 << (8 * v262))) + 10;
            }
            else {
              unsigned int v71 = v74 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v71)
      {
        case 0u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v256 + 32))(v69, (unint64_t)&a2[v13] & v52, v257);
          unint64_t v69 = (unint64_t)&a1[v13] & v52;
          unsigned int v68 = a2;
          *(unsigned char *)(v69 + v262) = 0;
          goto LABEL_204;
        case 1u:
          uint64_t v105 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          unint64_t v106 = v262;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v256 + 32))(v69, (unint64_t)&a2[v13] & v52, v257);
          unint64_t v69 = (unint64_t)v105;
          unsigned int v68 = a2;
          *(void *)(((unint64_t)v105 + v265) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v265 + v70) & 0xFFFFFFFFFFFFFFF8);
          char v107 = 1;
          goto LABEL_203;
        case 2u:
          long long v108 = *(_OWORD *)v70;
          *(void *)(((unint64_t)&a1[v13] & v52) + 0x10) = *(void *)(((unint64_t)&a2[v13] & v52) + 0x10);
          *(_OWORD *)unint64_t v69 = v108;
          char v109 = 2;
          goto LABEL_194;
        case 3u:
          *(void *)unint64_t v69 = *(void *)v70;
          char v109 = 3;
          goto LABEL_194;
        case 4u:
          uint64_t v105 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          unint64_t v106 = v262;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v254 + 32))(v69, (unint64_t)&a2[v13] & v52, v255);
          unint64_t v69 = (unint64_t)v105;
          unsigned int v68 = a2;
          char v107 = 4;
          goto LABEL_203;
        case 5u:
          *(void *)unint64_t v69 = *(void *)v70;
          char v109 = 5;
LABEL_194:
          *(unsigned char *)(v69 + v262) = v109;
          goto LABEL_204;
        case 6u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 32))(v69, (unint64_t)&a2[v13] & v52, v258);
          unsigned int v110 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          uint64_t v111 = (void *)(((unint64_t)v110 + v277) & v237);
          unsigned int v112 = (const void *)((v277 + v70) & v237);
          if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v259))
          {
            memcpy(v111, v112, v233);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v111, v112, v259);
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v259);
          }
          uint64_t v153 = (_OWORD *)(((unint64_t)v111 + v235) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v154 = (_OWORD *)(((unint64_t)v112 + v235) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v153 = *v154;
          unint64_t v155 = ((unint64_t)v153 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v156 = ((unint64_t)v154 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v157 = *(_DWORD *)v156;
          *(unsigned char *)(v155 + 4) = *(unsigned char *)(v156 + 4);
          *(_DWORD *)unint64_t v155 = v157;
          unint64_t v69 = (unint64_t)v110;
          *((unsigned char *)v110 + v262) = 6;
          goto LABEL_238;
        case 7u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v281 + 32))(v69, (unint64_t)&a2[v13] & v52, v258);
          unint64_t v113 = (unint64_t)&a1[v13] & v52;
          int v114 = (void *)((v277 + v113) & v237);
          char v115 = (const void *)((v277 + v70) & v237);
          if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v259))
          {
            memcpy(v114, v115, v233);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v114, v115, v259);
            __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v259);
          }
          unint64_t v158 = (_OWORD *)(((unint64_t)v114 + v235) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v159 = (_OWORD *)(((unint64_t)v115 + v235) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v158 = *v159;
          unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v161 = ((unint64_t)v159 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v162 = *(_DWORD *)v161;
          *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
          *(_DWORD *)unint64_t v160 = v162;
          unint64_t v69 = v113;
          unint64_t v163 = (_OWORD *)(((v113 | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          int v164 = (_OWORD *)(((v70 | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v163 = *v164;
          unint64_t v165 = (_OWORD *)(((unint64_t)v163 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v166 = (_OWORD *)(((unint64_t)v164 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v165 = *v166;
          *(_OWORD *)(((unint64_t)v165 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v166 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v113 + v262) = 7;
LABEL_238:
          unint64_t v123 = v243;
          unsigned int v68 = a2;
          goto LABEL_239;
        case 8u:
          unint64_t v270 = (unint64_t)&a1[v13] & v52;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v251 + 32))(v69, (unint64_t)&a2[v13] & v52, v252);
          unint64_t v116 = (_OWORD *)(((v270 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v117 = (_OWORD *)(((v70 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v116 = *v117;
          unint64_t v118 = ((unint64_t)v116 + v273) & v53;
          uint64_t v119 = ((unint64_t)v117 + v273) & v53;
          if (v27 == v275)
          {
            uint64_t v120 = v258;
            uint64_t v121 = v259;
            if (!__swift_getEnumTagSinglePayload(v119, v27, v258))
            {
              uint64_t v122 = (const void *)((v277 + v119) & v237);
              goto LABEL_271;
            }
LABEL_227:
            memcpy((void *)v118, (const void *)v119, v19);
            unint64_t v123 = v243;
            unsigned int v68 = a2;
            char v143 = v241;
            unint64_t v144 = v239;
            size_t v145 = v233;
            unint64_t v146 = v229;
LABEL_280:
            size_t v217 = v145;
            goto LABEL_281;
          }
          uint64_t v122 = (const void *)((v277 + v119) & v237);
          if (v30 != v275)
          {
            unint64_t v208 = *(void *)((((unint64_t)v122 + v235) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v208 >= 0xFFFFFFFF) {
              LODWORD(v208) = -1;
            }
            uint64_t v120 = v258;
            uint64_t v121 = v259;
            if ((v208 + 1) < 2) {
              goto LABEL_271;
            }
            goto LABEL_227;
          }
          uint64_t v120 = v258;
          uint64_t v121 = v259;
          if (v267 >= 2 && __swift_getEnumTagSinglePayload((v277 + v119) & v237, v267, v259) >= 2) {
            goto LABEL_227;
          }
LABEL_271:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v281 + 32))(v118, v119, v120);
          long long v209 = (void *)((v277 + v118) & v237);
          if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v121))
          {
            memcpy(v209, v122, v233);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v209, v122, v121);
            __swift_storeEnumTagSinglePayload((uint64_t)v209, 0, 1, v121);
          }
          size_t v145 = v233;
          unint64_t v212 = (_OWORD *)(((unint64_t)v209 + v235) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v213 = (_OWORD *)(((unint64_t)v122 + v235) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v212 = *v213;
          unint64_t v214 = ((unint64_t)v213 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v215 = *(_DWORD *)v214;
          unint64_t v216 = ((unint64_t)v212 + 19) & 0xFFFFFFFFFFFFFFF8;
          *(unsigned char *)(v216 + 4) = *(unsigned char *)(v214 + 4);
          *(_DWORD *)unint64_t v216 = v215;
          unint64_t v123 = v243;
          unsigned int v68 = a2;
          char v143 = v241;
          unint64_t v144 = v239;
          unint64_t v146 = v229;
          size_t v217 = v249;
          if (!v267) {
            goto LABEL_280;
          }
LABEL_281:
          unint64_t v218 = (((v247 + 7 + v217) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          *(void *)(((v118 | 7) + v218) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v119 | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v219 = (((v247 + 7 + v145) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          if (v219 <= v146) {
            unint64_t v219 = v146;
          }
          if (v23 > v219) {
            unint64_t v219 = v23;
          }
          if (v231 > v219) {
            unint64_t v219 = v231;
          }
          if (v248 > v219) {
            unint64_t v219 = v248;
          }
          unint64_t v69 = v270;
          *(unsigned char *)(v270 + v219) = 8;
LABEL_240:
          int v167 = (void *)(((v69 | 7) + __n) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v168 = (void *)(((v70 | 7) + __n) & 0xFFFFFFFFFFFFFFF8);
          *int v167 = *v168;
          unint64_t v169 = ((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v171 = *(_OWORD *)v170;
          long long v172 = *(_OWORD *)(v170 + 16);
          *(void *)(v169 + 32) = *(void *)(v170 + 32);
          *(_OWORD *)unint64_t v169 = v171;
          *(_OWORD *)(v169 + 16) = v172;
          *(unsigned char *)(v169 + 40) = *(unsigned char *)(v170 + 40);
          unint64_t v173 = ((v144 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
          unint64_t v174 = (_OWORD *)((unint64_t)&a1[v173 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v175 = (long long *)((unint64_t)&v68[v173 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v176 = *v175;
          long long v177 = v175[1];
          *(_OWORD *)((char *)v174 + 25) = *(long long *)((char *)v175 + 25);
          *unint64_t v174 = v176;
          v174[1] = v177;
          if (v279 > 3) {
            goto LABEL_244;
          }
          unsigned int v178 = ((1 << v143) + 1) >> v143;
          uint64_t v179 = 2;
          if (v178 > 0xFFFD) {
            uint64_t v179 = 4;
          }
          if (v178 <= 0xFD) {
LABEL_244:
          }
            uint64_t v179 = 1;
          unint64_t v65 = v179 + v279;
          if (v123 > v65) {
            unint64_t v65 = v123;
          }
          if (v65 <= 0x29) {
            unint64_t v65 = 41;
          }
          char v66 = 2;
LABEL_266:
          v55[v65] = v66;
          return v55;
        case 9u:
          uint64_t v105 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          unint64_t v106 = v262;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v269 + 32))(v69, (unint64_t)&a2[v13] & v52, v253);
          unint64_t v69 = (unint64_t)v105;
          unsigned int v68 = a2;
          char v107 = 9;
LABEL_203:
          *((unsigned char *)v105 + v106) = v107;
          goto LABEL_204;
        default:
          memcpy((void *)v69, (const void *)((unint64_t)&a2[v13] & v52), __n);
          unint64_t v69 = (unint64_t)&a1[v13] & v52;
          unsigned int v68 = a2;
LABEL_204:
          unint64_t v123 = v243;
LABEL_239:
          char v143 = v241;
          unint64_t v144 = v239;
          goto LABEL_240;
      }
    case 3u:
      uint64_t v236 = v17 + 7;
      uint64_t v238 = ~v5;
      unint64_t v230 = v15;
      unint64_t v232 = v33;
      size_t v234 = v17;
      unint64_t v244 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      size_t __na = v36 + 1;
      unint64_t v240 = (v36 + (v13 & ~v12) + 8) & 0xFFFFFFFFFFFFFFF8;
      char v242 = 8 * v40;
      unsigned int v55 = a1;
      uint64_t v75 = v261;
      unint64_t v263 = v36;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v260 + 32))(a1, a2, v75);
      uint64_t v76 = a2;
      unint64_t v77 = (unint64_t)&a1[v13] & v52;
      unint64_t v78 = (unint64_t)&a2[v13] & v52;
      unsigned int v79 = *(unsigned __int8 *)(v78 + v263);
      unsigned int v80 = v79 - 10;
      if (v79 >= 0xA)
      {
        if (v263 <= 3) {
          uint64_t v81 = v263;
        }
        else {
          uint64_t v81 = 4;
        }
        switch(v81)
        {
          case 1:
            int v82 = *(unsigned __int8 *)v78;
            goto LABEL_150;
          case 2:
            int v82 = *(unsigned __int16 *)v78;
            goto LABEL_150;
          case 3:
            int v82 = *(unsigned __int16 *)v78 | (*(unsigned __int8 *)(((unint64_t)&a2[v13] & v52) + 2) << 16);
            goto LABEL_150;
          case 4:
            int v82 = *(_DWORD *)v78;
LABEL_150:
            if (v263 < 4) {
              unsigned int v79 = (v82 | (v80 << (8 * v263))) + 10;
            }
            else {
              unsigned int v79 = v82 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v79)
      {
        case 0u:
          (*(void (**)(void))(v256 + 32))();
          unint64_t v77 = (unint64_t)&a1[v13] & v52;
          uint64_t v76 = a2;
          *(unsigned char *)(v77 + v263) = 0;
          goto LABEL_218;
        case 1u:
          unsigned int v124 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          unint64_t v125 = v263;
          (*(void (**)(void))(v256 + 32))();
          unint64_t v77 = (unint64_t)v124;
          uint64_t v76 = a2;
          *(void *)(((unint64_t)v124 + v265) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v265 + v78) & 0xFFFFFFFFFFFFFFF8);
          char v126 = 1;
          goto LABEL_217;
        case 2u:
          long long v127 = *(_OWORD *)v78;
          *(void *)(((unint64_t)&a1[v13] & v52) + 0x10) = *(void *)(((unint64_t)&a2[v13] & v52) + 0x10);
          *(_OWORD *)unint64_t v77 = v127;
          char v128 = 2;
          goto LABEL_211;
        case 3u:
          *(void *)unint64_t v77 = *(void *)v78;
          char v128 = 3;
          goto LABEL_211;
        case 4u:
          unsigned int v124 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          unint64_t v125 = v263;
          (*(void (**)(void))(v254 + 32))();
          unint64_t v77 = (unint64_t)v124;
          uint64_t v76 = a2;
          char v126 = 4;
          goto LABEL_217;
        case 5u:
          *(void *)unint64_t v77 = *(void *)v78;
          char v128 = 5;
LABEL_211:
          *(unsigned char *)(v77 + v263) = v128;
          goto LABEL_218;
        case 6u:
          (*(void (**)(void))(v281 + 32))();
          char v129 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          uint64_t v130 = (void *)(((unint64_t)v129 + v277) & v238);
          char v131 = (const void *)((v277 + v78) & v238);
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v259))
          {
            memcpy(v130, v131, v234);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v130, v131, v259);
            __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v259);
          }
          int v180 = (_OWORD *)(((unint64_t)v130 + v236) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v181 = (_OWORD *)(((unint64_t)v131 + v236) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v180 = *v181;
          unint64_t v182 = ((unint64_t)v180 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v183 = ((unint64_t)v181 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v184 = *(_DWORD *)v183;
          *(unsigned char *)(v182 + 4) = *(unsigned char *)(v183 + 4);
          *(_DWORD *)unint64_t v182 = v184;
          unint64_t v77 = (unint64_t)v129;
          *((unsigned char *)v129 + v263) = 6;
          goto LABEL_254;
        case 7u:
          (*(void (**)(void))(v281 + 32))();
          unint64_t v132 = (unint64_t)&a1[v13] & v52;
          size_t v133 = (void *)((v277 + v132) & v238);
          uint64_t v134 = (const void *)((v277 + v78) & v238);
          if (__swift_getEnumTagSinglePayload((uint64_t)v134, 1, v259))
          {
            memcpy(v133, v134, v234);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v133, v134, v259);
            __swift_storeEnumTagSinglePayload((uint64_t)v133, 0, 1, v259);
          }
          uint64_t v185 = (_OWORD *)(((unint64_t)v133 + v236) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v186 = (_OWORD *)(((unint64_t)v134 + v236) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v185 = *v186;
          unint64_t v187 = ((unint64_t)v185 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v188 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v189 = *(_DWORD *)v188;
          *(unsigned char *)(v187 + 4) = *(unsigned char *)(v188 + 4);
          *(_DWORD *)unint64_t v187 = v189;
          unint64_t v77 = v132;
          unint64_t v190 = (_OWORD *)(((v132 | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v191 = (_OWORD *)(((v78 | 7) + v19) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v190 = *v191;
          unint64_t v192 = (_OWORD *)(((unint64_t)v190 + 23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v193 = (_OWORD *)(((unint64_t)v191 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v192 = *v193;
          *(_OWORD *)(((unint64_t)v192 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v193 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v132 + v263) = 7;
LABEL_254:
          unint64_t v135 = v244;
          uint64_t v76 = a2;
          goto LABEL_255;
        case 8u:
          unint64_t v271 = (unint64_t)&a1[v13] & v52;
          (*(void (**)(void))(v251 + 32))();
          uint64_t v136 = (_OWORD *)(((v271 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          char v137 = (_OWORD *)(((v78 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v136 = *v137;
          unint64_t v138 = ((unint64_t)v136 + v273) & v53;
          uint64_t v139 = ((unint64_t)v137 + v273) & v53;
          if (v27 == v275)
          {
            uint64_t v140 = v258;
            uint64_t v141 = v259;
            if (!__swift_getEnumTagSinglePayload(v139, v27, v258))
            {
              char v142 = (const void *)((v277 + v139) & v238);
              goto LABEL_276;
            }
          }
          else
          {
            char v142 = (const void *)((v277 + v139) & v238);
            if (v30 == v275)
            {
              uint64_t v140 = v258;
              uint64_t v141 = v259;
              if (v267 < 2 || __swift_getEnumTagSinglePayload((v277 + v139) & v238, v267, v259) < 2) {
                goto LABEL_276;
              }
            }
            else
            {
              unint64_t v210 = *(void *)((((unint64_t)v142 + v236) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v210 >= 0xFFFFFFFF) {
                LODWORD(v210) = -1;
              }
              uint64_t v140 = v258;
              uint64_t v141 = v259;
              if ((v210 + 1) < 2)
              {
LABEL_276:
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v281 + 32))(v138, v139, v140);
                unint64_t v211 = (void *)((v277 + v138) & v238);
                if (__swift_getEnumTagSinglePayload((uint64_t)v142, 1, v141))
                {
                  size_t v149 = v234;
                  memcpy(v211, v142, v234);
                  unint64_t v135 = v244;
                  uint64_t v76 = a2;
                  char v147 = v242;
                  unint64_t v148 = v240;
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v250 + 32))(v211, v142, v141);
                  __swift_storeEnumTagSinglePayload((uint64_t)v211, 0, 1, v141);
                  unint64_t v135 = v244;
                  uint64_t v76 = a2;
                  char v147 = v242;
                  unint64_t v148 = v240;
                  size_t v149 = v234;
                }
                unint64_t v150 = v230;
                unint64_t v151 = v248;
                size_t v220 = v249;
                unint64_t v77 = v271;
                unint64_t v221 = (_OWORD *)(((unint64_t)v211 + v236) & 0xFFFFFFFFFFFFFFF8);
                int v222 = (_OWORD *)(((unint64_t)v142 + v236) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v221 = *v222;
                unint64_t v223 = ((unint64_t)v222 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v224 = *(_DWORD *)v223;
                unint64_t v225 = ((unint64_t)v221 + 19) & 0xFFFFFFFFFFFFFFF8;
                *(unsigned char *)(v225 + 4) = *(unsigned char *)(v223 + 4);
                *(_DWORD *)unint64_t v225 = v224;
                uint64_t v152 = v247;
                if (v267)
                {
LABEL_293:
                  uint64_t v226 = v152 + 7;
                  unint64_t v227 = (((v226 + v220) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  *(void *)(((v138 | 7) + v227) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v139 | 7) + v227) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v228 = (((v226 + v149) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  if (v228 <= v150) {
                    unint64_t v228 = v150;
                  }
                  if (v23 > v228) {
                    unint64_t v228 = v23;
                  }
                  if (v232 > v228) {
                    unint64_t v228 = v232;
                  }
                  if (v151 > v228) {
                    unint64_t v228 = v151;
                  }
                  *(unsigned char *)(v77 + v228) = 8;
LABEL_256:
                  unint64_t v194 = (void *)(((v77 | 7) + __na) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v195 = (void *)(((v78 | 7) + __na) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v194 = *v195;
                  unint64_t v196 = ((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v197 = ((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8;
                  long long v198 = *(_OWORD *)v197;
                  long long v199 = *(_OWORD *)(v197 + 16);
                  *(void *)(v196 + 32) = *(void *)(v197 + 32);
                  *(_OWORD *)unint64_t v196 = v198;
                  *(_OWORD *)(v196 + 16) = v199;
                  *(unsigned char *)(v196 + 40) = *(unsigned char *)(v197 + 40);
                  unint64_t v200 = ((v148 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
                  unint64_t v201 = (_OWORD *)((unint64_t)&a1[v200 + 7] & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v202 = (long long *)((unint64_t)&v76[v200 + 7] & 0xFFFFFFFFFFFFFFF8);
                  long long v203 = *v202;
                  long long v204 = v202[1];
                  *(_OWORD *)((char *)v201 + 25) = *(long long *)((char *)v202 + 25);
                  _OWORD *v201 = v203;
                  v201[1] = v204;
                  if (v279 > 3) {
                    goto LABEL_260;
                  }
                  unsigned int v205 = ((1 << v147) + 1) >> v147;
                  uint64_t v206 = 2;
                  if (v205 > 0xFFFD) {
                    uint64_t v206 = 4;
                  }
                  if (v205 <= 0xFD) {
LABEL_260:
                  }
                    uint64_t v206 = 1;
                  unint64_t v65 = v206 + v279;
                  if (v135 > v65) {
                    unint64_t v65 = v135;
                  }
                  if (v65 <= 0x29) {
                    unint64_t v65 = 41;
                  }
                  char v66 = 3;
                  goto LABEL_266;
                }
LABEL_292:
                size_t v220 = v149;
                goto LABEL_293;
              }
            }
          }
          memcpy((void *)v138, (const void *)v139, v19);
          unint64_t v135 = v244;
          uint64_t v76 = a2;
          char v147 = v242;
          unint64_t v148 = v240;
          size_t v149 = v234;
          unint64_t v150 = v230;
          uint64_t v152 = v247;
          unint64_t v151 = v248;
          unint64_t v77 = v271;
          goto LABEL_292;
        case 9u:
          unsigned int v124 = (_OWORD *)((unint64_t)&a1[v13] & v52);
          unint64_t v125 = v263;
          (*(void (**)(void))(v269 + 32))();
          unint64_t v77 = (unint64_t)v124;
          uint64_t v76 = a2;
          char v126 = 9;
LABEL_217:
          *((unsigned char *)v124 + v125) = v126;
          goto LABEL_218;
        default:
          memcpy((void *)v77, (const void *)((unint64_t)&a2[v13] & v52), __na);
          unint64_t v77 = (unint64_t)&a1[v13] & v52;
          uint64_t v76 = a2;
LABEL_218:
          unint64_t v135 = v244;
LABEL_255:
          char v147 = v242;
          unint64_t v148 = v240;
          goto LABEL_256;
      }
    case 4u:
      long long v83 = *((_OWORD *)a2 + 1);
      unsigned int v55 = a1;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v83;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      if (v40 > 3) {
        goto LABEL_110;
      }
      unsigned int v84 = ((1 << v41) + 1) >> v41;
      uint64_t v85 = 2;
      if (v84 > 0xFFFD) {
        uint64_t v85 = 4;
      }
      if (v84 <= 0xFD) {
LABEL_110:
      }
        uint64_t v85 = 1;
      unint64_t v65 = v85 + v40;
      if (v38 > v65) {
        unint64_t v65 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v65 <= 0x29) {
        unint64_t v65 = 41;
      }
      char v66 = 4;
      goto LABEL_266;
    case 5u:
      if (v40 > 3) {
        goto LABEL_119;
      }
      unsigned int v86 = ((1 << v41) + 1) >> v41;
      if (v86 > 0xFFFD)
      {
        unsigned int v87 = *(_DWORD *)&a2[v40];
      }
      else if (v86 > 0xFD)
      {
        unsigned int v87 = *(unsigned __int16 *)&a2[v40];
      }
      else
      {
LABEL_119:
        unsigned int v87 = a2[v40];
      }
      unsigned int v90 = v87 - 2;
      if (v87 < 2)
      {
        uint64_t v92 = v40;
        unsigned int v55 = a1;
      }
      else
      {
        if (v40 <= 3) {
          uint64_t v91 = v40;
        }
        else {
          uint64_t v91 = 4;
        }
        uint64_t v92 = v40;
        unsigned int v55 = a1;
        switch(v91)
        {
          case 1:
            int v93 = *a2;
            goto LABEL_158;
          case 2:
            int v93 = *(unsigned __int16 *)a2;
            goto LABEL_158;
          case 3:
            int v93 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_158;
          case 4:
            int v93 = *(_DWORD *)a2;
LABEL_158:
            if (v40 < 4) {
              v93 |= v90 << v41;
            }
            unsigned int v87 = v93 + 2;
            break;
          default:
            break;
        }
      }
      if (v87 == 1)
      {
        *(void *)unsigned int v55 = *(void *)a2;
        v55[8] = a2[8];
        uint64_t v96 = v92;
        if (v92 <= 3)
        {
          unsigned int v98 = ((1 << v41) + 1) >> v41;
          if (v98 > 0xFFFD)
          {
            *(_DWORD *)&v55[v92] = 1;
            goto LABEL_179;
          }
          if (v98 > 0xFD)
          {
            *(_WORD *)&v55[v92] = 1;
            goto LABEL_179;
          }
        }
        v55[v92] = 1;
      }
      else
      {
        if (!v87)
        {
          char v94 = 8 * v40;
          unint64_t v95 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
          (*(void (**)(char *))(v39 + 32))(v55);
          char v41 = v94;
          unint64_t v38 = v95;
          uint64_t v96 = v92;
          if (v92 > 3)
          {
LABEL_166:
            v55[v92] = 0;
            goto LABEL_178;
          }
          unsigned int v97 = ((1 << v94) + 1) >> v94;
          if (v97 > 0xFFFD)
          {
            *(_DWORD *)&v55[v92] = 0;
          }
          else
          {
            if (v97 <= 0xFD) {
              goto LABEL_166;
            }
            *(_WORD *)&v55[v92] = 0;
          }
LABEL_179:
          unsigned int v103 = ((1 << v41) + 1) >> v41;
          uint64_t v104 = 2;
          if (v103 > 0xFFFD) {
            uint64_t v104 = 4;
          }
          if (v103 > 0xFD)
          {
LABEL_183:
            unint64_t v65 = v104 + v96;
            if (v38 > v65) {
              unint64_t v65 = v38;
            }
            if (v65 <= 0x29) {
              unint64_t v65 = 41;
            }
            char v66 = 5;
            goto LABEL_266;
          }
LABEL_182:
          uint64_t v104 = 1;
          goto LABEL_183;
        }
        if (v92 > 3) {
          goto LABEL_176;
        }
        unsigned int v99 = ((1 << v41) + 1) >> v41;
        uint64_t v100 = 2;
        if (v99 > 0xFFFD) {
          uint64_t v100 = 4;
        }
        if (v99 <= 0xFD)
        {
LABEL_176:
          char v101 = 8 * v40;
          unint64_t v102 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
          uint64_t v100 = 1;
        }
        else
        {
          char v101 = 8 * v40;
          unint64_t v102 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
        }
        memcpy(v55, a2, v100 + v92);
        uint64_t v96 = v92;
        unint64_t v38 = v102;
        char v41 = v101;
      }
LABEL_178:
      if (v96 > 3) {
        goto LABEL_182;
      }
      goto LABEL_179;
    case 6u:
      unsigned int v55 = a1;
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      if (v40 > 3) {
        goto LABEL_124;
      }
      unsigned int v88 = ((1 << v41) + 1) >> v41;
      uint64_t v89 = 2;
      if (v88 > 0xFFFD) {
        uint64_t v89 = 4;
      }
      if (v88 <= 0xFD) {
LABEL_124:
      }
        uint64_t v89 = 1;
      unint64_t v65 = v89 + v40;
      if (v38 > v65) {
        unint64_t v65 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v65 <= 0x29) {
        unint64_t v65 = 41;
      }
      char v66 = 6;
      goto LABEL_266;
    default:
      if (v40 > 3) {
        goto LABEL_78;
      }
      unsigned int v59 = ((1 << v41) + 1) >> v41;
      uint64_t v60 = 2;
      if (v59 > 0xFFFD) {
        uint64_t v60 = 4;
      }
      if (v59 <= 0xFD) {
LABEL_78:
      }
        uint64_t v60 = 1;
      unsigned int v55 = a1;
      unint64_t v61 = v60 + v40;
      if (v38 > v61) {
        unint64_t v61 = ((v37 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v61 <= 0x29) {
        unint64_t v61 = 41;
      }
      memcpy(a1, a2, v61 + 1);
      return v55;
  }
}

unsigned __int8 *sub_1C99953C8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = sub_1C9BEAB08();
    uint64_t v259 = *(void *)(v4 - 8);
    uint64_t v260 = v4;
    uint64_t v272 = *(void *)(v259 + 64);
    uint64_t v256 = sub_1C9BEC028();
    uint64_t v265 = *(void *)(v256 - 8);
    uint64_t v255 = v265;
    int v5 = *(_DWORD *)(v265 + 80);
    uint64_t v254 = sub_1C9BEAC48();
    uint64_t v270 = *(void *)(v254 - 8);
    uint64_t v253 = v270;
    int v261 = *(_DWORD *)(v270 + 80) | v5;
    uint64_t v257 = sub_1C9BEAF18();
    uint64_t v268 = *(void *)(v257 - 8);
    uint64_t v287 = v268;
    int v6 = *(_DWORD *)(v268 + 80) & 0xF8;
    uint64_t v258 = sub_1C9BEAE48();
    uint64_t v7 = *(void *)(v258 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 | v8 | 7;
    uint64_t v248 = sub_1C9BEC928();
    uint64_t v263 = *(void *)(v248 - 8);
    uint64_t v247 = v263;
    int v10 = *(_DWORD *)(v263 + 80);
    uint64_t v11 = sub_1C9BEC8F8();
    uint64_t v12 = v9;
    uint64_t v252 = v11;
    uint64_t v13 = v11;
    uint64_t v14 = v8;
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t v251 = v15;
    uint64_t v16 = (v261 | (v10 | *(_DWORD *)(v15 + 80))) & 0xF8 | v9;
    uint64_t v273 = v272 + v16;
    unint64_t v17 = *(void *)(v265 + 64);
    unint64_t v250 = v17 + 7;
    if (((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v17) {
      unint64_t v17 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v17 <= *(void *)(v270 + 64)) {
      unint64_t v17 = *(void *)(v270 + 64);
    }
    if (v17 <= 0x18) {
      unint64_t v18 = 24;
    }
    else {
      unint64_t v18 = v17;
    }
    uint64_t v271 = *(void *)(v268 + 64) + v8;
    uint64_t v241 = v7;
    int v19 = *(_DWORD *)(v7 + 84);
    size_t v20 = *(void *)(v7 + 64);
    size_t v240 = v20;
    if (!v19) {
      ++v20;
    }
    size_t v262 = v20;
    size_t v269 = v20 + 7;
    uint64_t v249 = v271 & ~v8;
    unint64_t v21 = (v20 + 7 + v249) & 0xFFFFFFFFFFFFFFF8;
    size_t v22 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    unint64_t v236 = v18;
    if (v22 <= v18) {
      unint64_t v23 = v18;
    }
    else {
      unint64_t v23 = (v21 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
    }
    unint64_t v24 = v21 + 31;
    unint64_t v235 = (((((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v235 > v23) {
      unint64_t v23 = (((((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    uint64_t v244 = *(void *)(v263 + 64);
    uint64_t v245 = v9 + 16;
    uint64_t v25 = *(unsigned int *)(v287 + 84);
    unsigned int v242 = *(_DWORD *)(v7 + 84);
    BOOL v205 = v19 != 0;
    unsigned int v26 = v19 - 1;
    if (!v205) {
      unsigned int v26 = 0;
    }
    unsigned int v233 = v26;
    if (v26 <= v25) {
      unsigned int v26 = *(_DWORD *)(v287 + 84);
    }
    if (v26 <= 0x7FFFFFFE) {
      unsigned int v26 = 2147483646;
    }
    unsigned int v246 = v26;
    unint64_t v27 = ((v24 + ((v9 + 16 + ((v244 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unint64_t v234 = v27;
    if (v27 <= v23) {
      unint64_t v27 = v23;
    }
    unint64_t v28 = *(void *)(v15 + 64);
    unint64_t v232 = v28;
    if (v28 <= v27) {
      unint64_t v29 = v27;
    }
    else {
      unint64_t v29 = v28;
    }
    unint64_t v30 = (v29 + (v273 & ~v16) + 8) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    uint64_t v266 = *(void *)(a3 + 24);
    uint64_t v264 = *(void *)(v266 - 8);
    if (*(void *)(v264 + 64) <= 9uLL) {
      uint64_t v32 = 9;
    }
    else {
      uint64_t v32 = *(void *)(*(void *)(v266 - 8) + 64);
    }
    char v33 = 8 * v32;
    if (v32 > 3) {
      goto LABEL_34;
    }
    unsigned int v34 = ((1 << v33) + 1) >> v33;
    uint64_t v35 = 2;
    if (v34 > 0xFFFD) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFD) {
LABEL_34:
    }
      uint64_t v35 = 1;
    int v3 = a1;
    unint64_t v36 = v35 + v32;
    if (v31 > v36) {
      unint64_t v36 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v36 <= 0x29) {
      unint64_t v36 = 41;
    }
    unsigned int v37 = a1[v36];
    unsigned int v38 = v37 - 7;
    if (v37 >= 7)
    {
      if (v32 > 3) {
        goto LABEL_44;
      }
      unsigned int v39 = ((1 << v33) + 1) >> v33;
      uint64_t v40 = 2;
      if (v39 > 0xFFFD) {
        uint64_t v40 = 4;
      }
      if (v39 <= 0xFD) {
LABEL_44:
      }
        uint64_t v40 = 1;
      unint64_t v41 = v40 + v32;
      if (v31 > v41) {
        unint64_t v41 = ((v30 + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v41 <= 0x29) {
        LODWORD(v41) = 41;
      }
      if (v41 <= 3) {
        uint64_t v42 = v41;
      }
      else {
        uint64_t v42 = 4;
      }
      switch(v42)
      {
        case 1:
          int v43 = *a1;
          goto LABEL_57;
        case 2:
          int v43 = *(unsigned __int16 *)a1;
          goto LABEL_57;
        case 3:
          int v43 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_57;
        case 4:
          int v43 = *(_DWORD *)a1;
LABEL_57:
          if (v41 < 4) {
            v43 |= v38 << (8 * v41);
          }
          unsigned int v37 = v43 + 7;
          break;
        default:
          break;
      }
    }
    size_t v44 = v29 + 1;
    uint64_t v280 = ~v16;
    uint64_t v277 = ~v14;
    uint64_t v243 = ~v12;
    switch(v37)
    {
      case 0u:
      case 1u:
      case 4u:
        goto LABEL_142;
      case 2u:
        size_t __n = v29 + 1;
        (*(void (**)(unsigned __int8 *, uint64_t))(v259 + 8))(v3, v260);
        unsigned int v45 = (unsigned __int8 *)((unint64_t)&v3[v273] & v280);
        unsigned int v46 = v45[v29];
        unsigned int v47 = v46 - 10;
        if (v46 >= 0xA)
        {
          if (v29 <= 3) {
            uint64_t v48 = v29;
          }
          else {
            uint64_t v48 = 4;
          }
          switch(v48)
          {
            case 1:
              int v49 = *v45;
              goto LABEL_88;
            case 2:
              int v49 = *(unsigned __int16 *)v45;
              goto LABEL_88;
            case 3:
              int v49 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&v3[v273] & v280) + 2) << 16);
              goto LABEL_88;
            case 4:
              int v49 = *(_DWORD *)v45;
LABEL_88:
              if (v29 < 4) {
                unsigned int v46 = (v49 | (v47 << (8 * v29))) + 10;
              }
              else {
                unsigned int v46 = v49 + 10;
              }
              break;
            default:
              break;
          }
        }
        unint64_t v231 = v30;
        switch(v46)
        {
          case 0u:
            goto LABEL_99;
          case 1u:
            goto LABEL_100;
          case 2u:
            goto LABEL_101;
          case 3u:
            goto LABEL_102;
          case 4u:
            goto LABEL_103;
          case 5u:
            goto LABEL_104;
          case 6u:
            goto LABEL_105;
          case 7u:
            goto LABEL_108;
          case 8u:
            goto LABEL_112;
          case 9u:
            goto LABEL_115;
          default:
            goto LABEL_139;
        }
        goto LABEL_139;
      case 3u:
        size_t __n = v29 + 1;
        (*(void (**)(unsigned __int8 *, uint64_t))(v259 + 8))(v3, v260);
        unsigned int v45 = (unsigned __int8 *)((unint64_t)&v3[v273] & v280);
        unsigned int v50 = v45[v29];
        unsigned int v51 = v50 - 10;
        if (v50 >= 0xA)
        {
          if (v29 <= 3) {
            uint64_t v52 = v29;
          }
          else {
            uint64_t v52 = 4;
          }
          switch(v52)
          {
            case 1:
              int v53 = *v45;
              goto LABEL_95;
            case 2:
              int v53 = *(unsigned __int16 *)v45;
              goto LABEL_95;
            case 3:
              int v53 = *(unsigned __int16 *)v45 | (*(unsigned __int8 *)(((unint64_t)&v3[v273] & v280) + 2) << 16);
              goto LABEL_95;
            case 4:
              int v53 = *(_DWORD *)v45;
LABEL_95:
              if (v29 < 4) {
                unsigned int v50 = (v53 | (v51 << (8 * v29))) + 10;
              }
              else {
                unsigned int v50 = v53 + 10;
              }
              break;
            default:
              goto LABEL_98;
          }
        }
        break;
      case 5u:
        if (v32 > 3) {
          goto LABEL_74;
        }
        unsigned int v55 = ((1 << v33) + 1) >> v33;
        if (v55 > 0xFFFD)
        {
          unsigned int v54 = *(_DWORD *)&v3[v32];
        }
        else if (v55 <= 0xFD)
        {
LABEL_74:
          unsigned int v54 = v3[v32];
        }
        else
        {
          unsigned int v54 = *(unsigned __int16 *)&v3[v32];
        }
        unsigned int v56 = v54 - 2;
        if (v54 >= 2)
        {
          if (v32 <= 3) {
            uint64_t v57 = v32;
          }
          else {
            uint64_t v57 = 4;
          }
          switch(v57)
          {
            case 1:
              int v58 = *v3;
              goto LABEL_120;
            case 2:
              int v58 = *(unsigned __int16 *)v3;
              goto LABEL_120;
            case 3:
              int v58 = *(unsigned __int16 *)v3 | (v3[2] << 16);
              goto LABEL_120;
            case 4:
              int v58 = *(_DWORD *)v3;
LABEL_120:
              if (v32 < 4) {
                v58 |= v56 << v33;
              }
              unsigned int v54 = v58 + 2;
              break;
            default:
              break;
          }
        }
        if (v54 == 1)
        {
LABEL_126:
        }
        else if (!v54)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v264 + 8))(v3, v266);
        }
        goto LABEL_143;
      case 6u:
        goto LABEL_126;
      default:
        goto LABEL_143;
    }
LABEL_98:
    unint64_t v231 = v30;
    switch(v50)
    {
      case 0u:
LABEL_99:
        uint64_t v60 = v255;
        uint64_t v59 = v256;
        goto LABEL_116;
      case 1u:
LABEL_100:
        (*(void (**)(unsigned __int8 *, uint64_t))(v255 + 8))(v45, v256);
        swift_release();
        goto LABEL_139;
      case 2u:
LABEL_101:
        swift_bridgeObjectRelease();
        goto LABEL_111;
      case 3u:
LABEL_102:
        swift_unknownObjectRelease();
        goto LABEL_139;
      case 4u:
LABEL_103:
        uint64_t v60 = v253;
        uint64_t v59 = v254;
        goto LABEL_116;
      case 5u:
LABEL_104:
        unint64_t v61 = *(void **)v45;
        goto LABEL_138;
      case 6u:
LABEL_105:
        (*(void (**)(unsigned __int8 *, uint64_t))(v287 + 8))(v45, v257);
        if (!__swift_getEnumTagSinglePayload((unint64_t)&v45[v271] & v277, 1, v258)) {
          (*(void (**)(unint64_t, uint64_t))(v241 + 8))((unint64_t)&v45[v271] & v277, v258);
        }
        goto LABEL_111;
      case 7u:
LABEL_108:
        (*(void (**)(unsigned __int8 *, uint64_t))(v287 + 8))(v45, v257);
        if (!__swift_getEnumTagSinglePayload((unint64_t)&v45[v271] & v277, 1, v258)) {
          (*(void (**)(unint64_t, uint64_t))(v241 + 8))((unint64_t)&v45[v271] & v277, v258);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_111:
        swift_bridgeObjectRelease();
        goto LABEL_139;
      case 8u:
LABEL_112:
        (*(void (**)(unsigned __int8 *, uint64_t))(v247 + 8))(v45, v248);
        swift_bridgeObjectRelease();
        unint64_t v62 = (v245 + ((((unint64_t)v45 | 7) + v244) & 0xFFFFFFFFFFFFFFF8)) & v243;
        if (v25 == v246)
        {
          if (__swift_getEnumTagSinglePayload(v62, v25, v257)) {
            goto LABEL_137;
          }
          uint64_t v230 = (v271 + v62) & v277;
          goto LABEL_134;
        }
        uint64_t v230 = (v271 + v62) & v277;
        if (v233 == v246)
        {
          if (v242 >= 2 && __swift_getEnumTagSinglePayload((v271 + v62) & v277, v242, v258) >= 2) {
            goto LABEL_137;
          }
          goto LABEL_134;
        }
        unint64_t v63 = *(void *)(((v269 + ((v271 + v62) & v277)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v63 >= 0xFFFFFFFF) {
          LODWORD(v63) = -1;
        }
        if ((v63 + 1) < 2)
        {
LABEL_134:
          (*(void (**)(unint64_t, uint64_t))(v287 + 8))(v62, v257);
          if (!__swift_getEnumTagSinglePayload(v230, 1, v258)) {
            (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v230, v258);
          }
          swift_bridgeObjectRelease();
        }
LABEL_137:
        unint64_t v61 = *(void **)(((v62 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
LABEL_138:

LABEL_139:
        uint64_t v64 = (unint64_t)v45 | 7;
        size_t v44 = __n;
        unint64_t v65 = ((v64 + __n) & 0xFFFFFFFFFFFFFFF8) + 15;
        swift_bridgeObjectRelease();
        if (*(void *)((v65 & 0xFFFFFFFFFFFFFFF8) + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v65 & 0xFFFFFFFFFFFFFFF8);
        }
        unint64_t v30 = v231;
LABEL_142:
        swift_bridgeObjectRelease();
LABEL_143:
        if (v32 > 3) {
          goto LABEL_147;
        }
        unsigned int v66 = ((1 << v33) + 1) >> v33;
        uint64_t v67 = 2;
        if (v66 > 0xFFFD) {
          uint64_t v67 = 4;
        }
        if (v66 <= 0xFD) {
LABEL_147:
        }
          uint64_t v67 = 1;
        unint64_t v68 = v67 + v32;
        if (v31 > v68) {
          unint64_t v68 = v31;
        }
        if (v68 <= 0x29) {
          unint64_t v68 = 41;
        }
        unsigned int v69 = a2[v68];
        unsigned int v70 = v69 - 7;
        if (v69 >= 7)
        {
          if (v32 > 3) {
            goto LABEL_157;
          }
          unsigned int v71 = ((1 << v33) + 1) >> v33;
          uint64_t v72 = 2;
          if (v71 > 0xFFFD) {
            uint64_t v72 = 4;
          }
          if (v71 <= 0xFD) {
LABEL_157:
          }
            uint64_t v72 = 1;
          unint64_t v73 = v72 + v32;
          if (v31 > v73) {
            unint64_t v73 = v31;
          }
          if (v73 <= 0x29) {
            LODWORD(v73) = 41;
          }
          if (v73 <= 3) {
            uint64_t v74 = v73;
          }
          else {
            uint64_t v74 = 4;
          }
          switch(v74)
          {
            case 1:
              int v75 = *a2;
              goto LABEL_170;
            case 2:
              int v75 = *(unsigned __int16 *)a2;
              goto LABEL_170;
            case 3:
              int v75 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_170;
            case 4:
              int v75 = *(_DWORD *)a2;
LABEL_170:
              if (v73 < 4) {
                unsigned int v69 = (v75 | (v70 << (8 * v73))) + 7;
              }
              else {
                unsigned int v69 = v75 + 7;
              }
              break;
            default:
              goto LABEL_173;
          }
        }
        break;
      case 9u:
LABEL_115:
        uint64_t v60 = v251;
        uint64_t v59 = v252;
LABEL_116:
        (*(void (**)(unsigned __int8 *, uint64_t))(v60 + 8))(v45, v59);
        goto LABEL_139;
      default:
        goto LABEL_139;
    }
LABEL_173:
    switch(v69)
    {
      case 0u:
        long long v76 = *((_OWORD *)a2 + 1);
        *(_OWORD *)int v3 = *(_OWORD *)a2;
        *((_OWORD *)v3 + 1) = v76;
        *(_OWORD *)(v3 + 25) = *(_OWORD *)(a2 + 25);
        if (v32 > 3) {
          goto LABEL_178;
        }
        unsigned int v77 = ((1 << v33) + 1) >> v33;
        uint64_t v78 = 2;
        if (v77 > 0xFFFD) {
          uint64_t v78 = 4;
        }
        if (v77 <= 0xFD) {
LABEL_178:
        }
          uint64_t v78 = 1;
        unint64_t v79 = v78 + v32;
        if (v31 > v79) {
          unint64_t v79 = v31;
        }
        if (v79 <= 0x29) {
          unint64_t v79 = 41;
        }
        v3[v79] = 0;
        return v3;
      case 1u:
        long long v83 = *((_OWORD *)a2 + 1);
        *(_OWORD *)int v3 = *(_OWORD *)a2;
        *((_OWORD *)v3 + 1) = v83;
        *(_OWORD *)(v3 + 25) = *(_OWORD *)(a2 + 25);
        if (v32 > 3) {
          goto LABEL_198;
        }
        unsigned int v84 = ((1 << v33) + 1) >> v33;
        uint64_t v85 = 2;
        if (v84 > 0xFFFD) {
          uint64_t v85 = 4;
        }
        if (v84 <= 0xFD) {
LABEL_198:
        }
          uint64_t v85 = 1;
        unint64_t v86 = v85 + v32;
        if (v31 > v86) {
          unint64_t v86 = v31;
        }
        if (v86 <= 0x29) {
          unint64_t v86 = 41;
        }
        char v87 = 1;
        goto LABEL_367;
      case 2u:
        size_t __na = v44;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v259 + 32))(v3, a2, v260);
        unint64_t v88 = (unint64_t)&v3[v273] & v280;
        unint64_t v89 = (unint64_t)&a2[v273] & v280;
        unsigned int v90 = *(unsigned __int8 *)(v89 + v29);
        unsigned int v91 = v90 - 10;
        if (v90 >= 0xA)
        {
          if (v29 <= 3) {
            uint64_t v92 = v29;
          }
          else {
            uint64_t v92 = 4;
          }
          switch(v92)
          {
            case 1:
              int v93 = *(unsigned __int8 *)v89;
              goto LABEL_251;
            case 2:
              int v93 = *(unsigned __int16 *)v89;
              goto LABEL_251;
            case 3:
              int v93 = *(unsigned __int16 *)v89 | (*(unsigned __int8 *)(((unint64_t)&a2[v273] & v280) + 2) << 16);
              goto LABEL_251;
            case 4:
              int v93 = *(_DWORD *)v89;
LABEL_251:
              if (v29 < 4) {
                unsigned int v90 = (v93 | (v91 << (8 * v29))) + 10;
              }
              else {
                unsigned int v90 = v93 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v90)
        {
          case 0u:
            (*(void (**)(void))(v255 + 32))();
            unint64_t v88 = (unint64_t)&v3[v273] & v280;
            *(unsigned char *)(v88 + v29) = 0;
            goto LABEL_342;
          case 1u:
            unint64_t v116 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            (*(void (**)(void))(v255 + 32))();
            unint64_t v88 = (unint64_t)v116;
            *(void *)(((unint64_t)v116 + v250) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v250 + v89) & 0xFFFFFFFFFFFFFFF8);
            char v117 = 1;
            goto LABEL_310;
          case 2u:
            long long v118 = *(_OWORD *)v89;
            *(void *)(((unint64_t)&v3[v273] & v280) + 0x10) = *(void *)(((unint64_t)&a2[v273] & v280)
                                                                                 + 0x10);
            *(_OWORD *)unint64_t v88 = v118;
            char v119 = 2;
            goto LABEL_341;
          case 3u:
            *(void *)unint64_t v88 = *(void *)v89;
            char v119 = 3;
            goto LABEL_341;
          case 4u:
            unint64_t v116 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            (*(void (**)(void))(v253 + 32))();
            unint64_t v88 = (unint64_t)v116;
            char v117 = 4;
            goto LABEL_310;
          case 5u:
            *(void *)unint64_t v88 = *(void *)v89;
            char v119 = 5;
            goto LABEL_341;
          case 6u:
            (*(void (**)(void))(v287 + 32))();
            uint64_t v281 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            unint64_t v288 = (void *)(((unint64_t)v281 + v271) & v277);
            uint64_t v120 = (const void *)((v271 + v89) & v277);
            if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v258))
            {
              unint64_t v121 = ((unint64_t)v281 + v271) & v277;
              memcpy(v288, v120, v262);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v241 + 32))(v288, v120, v258);
              unint64_t v121 = ((unint64_t)v281 + v271) & v277;
              __swift_storeEnumTagSinglePayload((uint64_t)v288, 0, 1, v258);
            }
            char v147 = (_OWORD *)((v269 + v121) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v148 = (_OWORD *)(((unint64_t)v120 + v269) & 0xFFFFFFFFFFFFFFF8);
            *char v147 = *v148;
            unint64_t v149 = ((unint64_t)v147 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v150 = ((unint64_t)v148 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v151 = *(_DWORD *)v150;
            *(unsigned char *)(v149 + 4) = *(unsigned char *)(v150 + 4);
            *(_DWORD *)unint64_t v149 = v151;
            char v119 = 6;
            unint64_t v88 = (unint64_t)v281;
            goto LABEL_341;
          case 7u:
            (*(void (**)(void))(v287 + 32))();
            unint64_t v282 = (unint64_t)&v3[v273] & v280;
            size_t v289 = (void *)((v271 + v282) & v277);
            uint64_t v122 = (const void *)((v271 + v89) & v277);
            if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v258))
            {
              memcpy(v289, v122, v262);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v241 + 32))(v289, v122, v258);
              __swift_storeEnumTagSinglePayload((uint64_t)v289, 0, 1, v258);
            }
            unint64_t v88 = v282;
            uint64_t v152 = (_OWORD *)(((unint64_t)v289 + v269) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v153 = (_OWORD *)(((unint64_t)v122 + v269) & 0xFFFFFFFFFFFFFFF8);
            _OWORD *v152 = *v153;
            unint64_t v154 = ((unint64_t)v152 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v155 = ((unint64_t)v153 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v156 = *(_DWORD *)v155;
            *(unsigned char *)(v154 + 4) = *(unsigned char *)(v155 + 4);
            *(_DWORD *)unint64_t v154 = v156;
            int v157 = (_OWORD *)(((v282 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v158 = (_OWORD *)(((v89 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            _OWORD *v157 = *v158;
            unint64_t v159 = (_OWORD *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v160 = (_OWORD *)(((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v159 = *v160;
            *(_OWORD *)(((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8);
            char v119 = 7;
LABEL_341:
            *(unsigned char *)(v88 + v29) = v119;
            goto LABEL_342;
          case 8u:
            (*(void (**)(void))(v247 + 32))();
            unint64_t v283 = (unint64_t)&v3[v273] & v280;
            unint64_t v123 = (_OWORD *)(((v283 | 7) + v244) & 0xFFFFFFFFFFFFFFF8);
            unsigned int v124 = (_OWORD *)(((v89 | 7) + v244) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v123 = *v124;
            unint64_t v125 = ((unint64_t)v123 + v245) & v243;
            char v126 = (const void *)(((unint64_t)v124 + v245) & v243);
            unint64_t v274 = (unint64_t)v126;
            if (v25 == v246)
            {
              int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v126, v25, v257);
              char v126 = (const void *)v274;
              if (!EnumTagSinglePayload)
              {
                char v128 = (const void *)((v271 + v274) & v277);
                goto LABEL_372;
              }
            }
            else
            {
              char v128 = (const void *)(((unint64_t)v126 + v271) & v277);
              if (v233 == v246)
              {
                if (v242 < 2
                  || (unsigned int v142 = __swift_getEnumTagSinglePayload(((unint64_t)v126 + v271) & v277, v242, v258),
                      char v126 = (const void *)v274,
                      v142 < 2))
                {
LABEL_372:
                  (*(void (**)(unint64_t, const void *, uint64_t))(v287 + 32))(v125, v126, v257);
                  long long v203 = (void *)((v271 + v125) & v277);
                  if (__swift_getEnumTagSinglePayload((uint64_t)v128, 1, v258))
                  {
                    memcpy(v203, v128, v262);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v241 + 32))(v203, v128, v258);
                    __swift_storeEnumTagSinglePayload((uint64_t)v203, 0, 1, v258);
                  }
                  uint64_t v206 = (_OWORD *)(((unint64_t)v203 + v269) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v207 = (_OWORD *)(((unint64_t)v128 + v269) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v206 = *v207;
                  unint64_t v208 = ((unint64_t)v207 + 19) & 0xFFFFFFFFFFFFFFF8;
                  int v209 = *(_DWORD *)v208;
                  unint64_t v210 = ((unint64_t)v206 + 19) & 0xFFFFFFFFFFFFFFF8;
                  *(unsigned char *)(v210 + 4) = *(unsigned char *)(v208 + 4);
                  *(_DWORD *)unint64_t v210 = v209;
                  unint64_t v144 = v235;
                  unint64_t v143 = v236;
                  unint64_t v145 = v234;
                  size_t v211 = v240;
                  size_t v146 = v262;
                  if (!v242) {
                    goto LABEL_379;
                  }
LABEL_380:
                  unint64_t v212 = (((v249 + 7 + v211) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  *(void *)(((v125 | 7) + v212) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v274 | 7) + v212) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v213 = (((v249 + 7 + v146) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                  if (v213 <= v143) {
                    unint64_t v213 = v143;
                  }
                  if (v144 > v213) {
                    unint64_t v213 = v144;
                  }
                  if (v145 > v213) {
                    unint64_t v213 = v145;
                  }
                  if (v232 > v213) {
                    unint64_t v213 = v232;
                  }
                  unint64_t v88 = v283;
                  *(unsigned char *)(v283 + v213) = 8;
LABEL_342:
                  unint64_t v161 = (void *)(((v88 | 7) + __na) & 0xFFFFFFFFFFFFFFF8);
                  int v162 = (void *)(((v89 | 7) + __na) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v161 = *v162;
                  unint64_t v163 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v164 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
                  long long v165 = *(_OWORD *)v164;
                  long long v166 = *(_OWORD *)(v164 + 16);
                  *(void *)(v163 + 32) = *(void *)(v164 + 32);
                  *(_OWORD *)unint64_t v163 = v165;
                  *(_OWORD *)(v163 + 16) = v166;
                  *(unsigned char *)(v163 + 40) = *(unsigned char *)(v164 + 40);
                  unint64_t v167 = ((v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
                  uint64_t v168 = (_OWORD *)((unint64_t)&v3[v167 + 7] & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v169 = (long long *)((unint64_t)&a2[v167 + 7] & 0xFFFFFFFFFFFFFFF8);
                  long long v170 = *v169;
                  long long v171 = v169[1];
                  *(_OWORD *)((char *)v168 + 25) = *(long long *)((char *)v169 + 25);
                  _OWORD *v168 = v170;
                  v168[1] = v171;
                  if (v32 > 3) {
                    goto LABEL_346;
                  }
                  unsigned int v172 = ((1 << v33) + 1) >> v33;
                  uint64_t v173 = 2;
                  if (v172 > 0xFFFD) {
                    uint64_t v173 = 4;
                  }
                  if (v172 <= 0xFD) {
LABEL_346:
                  }
                    uint64_t v173 = 1;
                  unint64_t v86 = v173 + v32;
                  if (v31 > v86) {
                    unint64_t v86 = v31;
                  }
                  if (v86 <= 0x29) {
                    unint64_t v86 = 41;
                  }
                  char v87 = 2;
                  goto LABEL_367;
                }
              }
              else
              {
                unint64_t v202 = *(void *)((((unint64_t)v128 + v269) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v202 >= 0xFFFFFFFF) {
                  LODWORD(v202) = -1;
                }
                if ((v202 + 1) < 2) {
                  goto LABEL_372;
                }
              }
            }
            memcpy((void *)v125, v126, v22);
            unint64_t v144 = v235;
            unint64_t v143 = v236;
            unint64_t v145 = v234;
            size_t v146 = v262;
LABEL_379:
            size_t v211 = v146;
            goto LABEL_380;
          case 9u:
            unint64_t v116 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            (*(void (**)(void))(v251 + 32))();
            unint64_t v88 = (unint64_t)v116;
            char v117 = 9;
LABEL_310:
            *((unsigned char *)v116 + v29) = v117;
            goto LABEL_342;
          default:
            memcpy((void *)v88, (const void *)((unint64_t)&a2[v273] & v280), __na);
            unint64_t v88 = (unint64_t)&v3[v273] & v280;
            goto LABEL_342;
        }
      case 3u:
        size_t __nb = v44;
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v259 + 32))(v3, a2, v260);
        unint64_t v94 = (unint64_t)&v3[v273] & v280;
        unint64_t v95 = (unint64_t)&a2[v273] & v280;
        unsigned int v96 = *(unsigned __int8 *)(v95 + v29);
        unsigned int v97 = v96 - 10;
        if (v96 >= 0xA)
        {
          if (v29 <= 3) {
            uint64_t v98 = v29;
          }
          else {
            uint64_t v98 = 4;
          }
          switch(v98)
          {
            case 1:
              int v99 = *(unsigned __int8 *)v95;
              goto LABEL_259;
            case 2:
              int v99 = *(unsigned __int16 *)v95;
              goto LABEL_259;
            case 3:
              int v99 = *(unsigned __int16 *)v95 | (*(unsigned __int8 *)(((unint64_t)&a2[v273] & v280) + 2) << 16);
              goto LABEL_259;
            case 4:
              int v99 = *(_DWORD *)v95;
LABEL_259:
              if (v29 < 4) {
                unsigned int v96 = (v99 | (v97 << (8 * v29))) + 10;
              }
              else {
                unsigned int v96 = v99 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v96)
        {
          case 0u:
            (*(void (**)(void))(v255 + 32))();
            unint64_t v94 = (unint64_t)&v3[v273] & v280;
            *(unsigned char *)(v94 + v29) = 0;
            goto LABEL_357;
          case 1u:
            char v129 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            (*(void (**)(void))(v255 + 32))();
            unint64_t v94 = (unint64_t)v129;
            *(void *)(((unint64_t)v129 + v250) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v250 + v95) & 0xFFFFFFFFFFFFFFF8);
            char v130 = 1;
            goto LABEL_322;
          case 2u:
            long long v131 = *(_OWORD *)v95;
            *(void *)(((unint64_t)&v3[v273] & v280) + 0x10) = *(void *)(((unint64_t)&a2[v273] & v280)
                                                                                 + 0x10);
            *(_OWORD *)unint64_t v94 = v131;
            char v132 = 2;
            goto LABEL_356;
          case 3u:
            *(void *)unint64_t v94 = *(void *)v95;
            char v132 = 3;
            goto LABEL_356;
          case 4u:
            char v129 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            (*(void (**)(void))(v253 + 32))();
            unint64_t v94 = (unint64_t)v129;
            char v130 = 4;
            goto LABEL_322;
          case 5u:
            *(void *)unint64_t v94 = *(void *)v95;
            char v132 = 5;
            goto LABEL_356;
          case 6u:
            (*(void (**)(void))(v287 + 32))();
            uint64_t v284 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            uint64_t v290 = (void *)(((unint64_t)v284 + v271) & v277);
            size_t v133 = (const void *)((v271 + v95) & v277);
            if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v258))
            {
              unint64_t v134 = ((unint64_t)v284 + v271) & v277;
              memcpy(v290, v133, v262);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v241 + 32))(v290, v133, v258);
              unint64_t v134 = ((unint64_t)v284 + v271) & v277;
              __swift_storeEnumTagSinglePayload((uint64_t)v290, 0, 1, v258);
            }
            unint64_t v174 = (_OWORD *)((v269 + v134) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v175 = (_OWORD *)(((unint64_t)v133 + v269) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v174 = *v175;
            unint64_t v176 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v177 = ((unint64_t)v175 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v178 = *(_DWORD *)v177;
            *(unsigned char *)(v176 + 4) = *(unsigned char *)(v177 + 4);
            *(_DWORD *)unint64_t v176 = v178;
            char v132 = 6;
            unint64_t v94 = (unint64_t)v284;
            goto LABEL_356;
          case 7u:
            (*(void (**)(void))(v287 + 32))();
            unint64_t v285 = (unint64_t)&v3[v273] & v280;
            unsigned int v291 = (void *)((v271 + v285) & v277);
            unint64_t v135 = (const void *)((v271 + v95) & v277);
            if (__swift_getEnumTagSinglePayload((uint64_t)v135, 1, v258))
            {
              memcpy(v291, v135, v262);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v241 + 32))(v291, v135, v258);
              __swift_storeEnumTagSinglePayload((uint64_t)v291, 0, 1, v258);
            }
            unint64_t v94 = v285;
            uint64_t v179 = (_OWORD *)(((unint64_t)v291 + v269) & 0xFFFFFFFFFFFFFFF8);
            int v180 = (_OWORD *)(((unint64_t)v135 + v269) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v179 = *v180;
            unint64_t v181 = ((unint64_t)v179 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v182 = ((unint64_t)v180 + 19) & 0xFFFFFFFFFFFFFFF8;
            int v183 = *(_DWORD *)v182;
            *(unsigned char *)(v181 + 4) = *(unsigned char *)(v182 + 4);
            *(_DWORD *)unint64_t v181 = v183;
            int v184 = (_OWORD *)(((v285 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v185 = (_OWORD *)(((v95 | 7) + v22) & 0xFFFFFFFFFFFFFFF8);
            *int v184 = *v185;
            unint64_t v186 = (_OWORD *)(((unint64_t)v184 + 23) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v187 = (_OWORD *)(((unint64_t)v185 + 23) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v186 = *v187;
            *(_OWORD *)(((unint64_t)v186 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v187 + 23) & 0xFFFFFFFFFFFFFFF8);
            char v132 = 7;
LABEL_356:
            *(unsigned char *)(v94 + v29) = v132;
            goto LABEL_357;
          case 8u:
            (*(void (**)(void))(v247 + 32))();
            unint64_t v286 = (unint64_t)&v3[v273] & v280;
            uint64_t v136 = (_OWORD *)(((v286 | 7) + v244) & 0xFFFFFFFFFFFFFFF8);
            char v137 = (_OWORD *)(((v95 | 7) + v244) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v136 = *v137;
            unint64_t v267 = ((unint64_t)v136 + v245) & v243;
            unint64_t v138 = (const void *)(((unint64_t)v137 + v245) & v243);
            unsigned int v275 = v138;
            if (v25 == v246)
            {
              int v139 = __swift_getEnumTagSinglePayload((uint64_t)v138, v25, v257);
              unint64_t v138 = v275;
              unint64_t v140 = v267;
              if (!v139)
              {
                uint64_t v141 = (const void *)(((unint64_t)v275 + v271) & v277);
LABEL_391:
                (*(void (**)(unint64_t, const void *, uint64_t))(v287 + 32))(v140, v138, v257);
                int v215 = (void *)((v271 + v140) & v277);
                if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v258))
                {
                  memcpy(v215, v141, v262);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v241 + 32))(v215, v141, v258);
                  __swift_storeEnumTagSinglePayload((uint64_t)v215, 0, 1, v258);
                }
                unint64_t v220 = v232;
                unint64_t v140 = v267;
                int v222 = (_OWORD *)(((unint64_t)v215 + v269) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v223 = (_OWORD *)(((unint64_t)v141 + v269) & 0xFFFFFFFFFFFFFFF8);
                *int v222 = *v223;
                unint64_t v224 = ((unint64_t)v223 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v225 = *(_DWORD *)v224;
                unint64_t v226 = ((unint64_t)v222 + 19) & 0xFFFFFFFFFFFFFFF8;
                *(unsigned char *)(v226 + 4) = *(unsigned char *)(v224 + 4);
                *(_DWORD *)unint64_t v226 = v225;
                unint64_t v218 = v235;
                unint64_t v217 = v236;
                unint64_t v219 = v234;
                size_t v227 = v240;
                unint64_t v216 = (unint64_t)v275;
                size_t v221 = v262;
                if (!v242) {
                  goto LABEL_396;
                }
LABEL_397:
                unint64_t v228 = (((v249 + 7 + v227) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                *(void *)(((v140 | 7) + v228) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v216 | 7) + v228) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v229 = (((v249 + 7 + v221) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                if (v229 <= v217) {
                  unint64_t v229 = v217;
                }
                if (v218 > v229) {
                  unint64_t v229 = v218;
                }
                if (v219 > v229) {
                  unint64_t v229 = v219;
                }
                if (v220 > v229) {
                  unint64_t v229 = v220;
                }
                unint64_t v94 = v286;
                *(unsigned char *)(v286 + v229) = 8;
LABEL_357:
                unint64_t v188 = (void *)(((v94 | 7) + __nb) & 0xFFFFFFFFFFFFFFF8);
                int v189 = (void *)(((v95 | 7) + __nb) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v188 = *v189;
                unint64_t v190 = ((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v191 = ((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8;
                long long v192 = *(_OWORD *)v191;
                long long v193 = *(_OWORD *)(v191 + 16);
                *(void *)(v190 + 32) = *(void *)(v191 + 32);
                *(_OWORD *)unint64_t v190 = v192;
                *(_OWORD *)(v190 + 16) = v193;
                *(unsigned char *)(v190 + 40) = *(unsigned char *)(v191 + 40);
                unint64_t v194 = ((v30 + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
                unint64_t v195 = (_OWORD *)((unint64_t)&v3[v194 + 7] & 0xFFFFFFFFFFFFFFF8);
                unint64_t v196 = (long long *)((unint64_t)&a2[v194 + 7] & 0xFFFFFFFFFFFFFFF8);
                long long v197 = *v196;
                long long v198 = v196[1];
                *(_OWORD *)((char *)v195 + 25) = *(long long *)((char *)v196 + 25);
                *unint64_t v195 = v197;
                v195[1] = v198;
                if (v32 > 3) {
                  goto LABEL_361;
                }
                unsigned int v199 = ((1 << v33) + 1) >> v33;
                uint64_t v200 = 2;
                if (v199 > 0xFFFD) {
                  uint64_t v200 = 4;
                }
                if (v199 <= 0xFD) {
LABEL_361:
                }
                  uint64_t v200 = 1;
                unint64_t v86 = v200 + v32;
                if (v31 > v86) {
                  unint64_t v86 = v31;
                }
                if (v86 <= 0x29) {
                  unint64_t v86 = 41;
                }
                char v87 = 3;
LABEL_367:
                v3[v86] = v87;
                return v3;
              }
            }
            else
            {
              uint64_t v141 = (const void *)(((unint64_t)v138 + v271) & v277);
              if (v233 == v246)
              {
                if (v242 < 2)
                {
                  unint64_t v140 = ((unint64_t)v136 + v245) & v243;
                  goto LABEL_391;
                }
                unsigned int v214 = __swift_getEnumTagSinglePayload(((unint64_t)v138 + v271) & v277, v242, v258);
                unint64_t v138 = v275;
                BOOL v205 = v214 >= 2;
              }
              else
              {
                unint64_t v204 = *(void *)((((unint64_t)v141 + v269) & 0xFFFFFFFFFFFFFFF8) + 8);
                if (v204 >= 0xFFFFFFFF) {
                  LODWORD(v204) = -1;
                }
                BOOL v205 = (v204 + 1) >= 2;
              }
              unint64_t v140 = v267;
              if (!v205) {
                goto LABEL_391;
              }
            }
            memcpy((void *)v140, v138, v22);
            unint64_t v216 = (unint64_t)v275;
            unint64_t v218 = v235;
            unint64_t v217 = v236;
            unint64_t v219 = v234;
            unint64_t v220 = v232;
            size_t v221 = v262;
LABEL_396:
            size_t v227 = v221;
            goto LABEL_397;
          case 9u:
            char v129 = (_OWORD *)((unint64_t)&v3[v273] & v280);
            (*(void (**)(void))(v251 + 32))();
            unint64_t v94 = (unint64_t)v129;
            char v130 = 9;
LABEL_322:
            *((unsigned char *)v129 + v29) = v130;
            goto LABEL_357;
          default:
            memcpy((void *)v94, (const void *)((unint64_t)&a2[v273] & v280), __nb);
            unint64_t v94 = (unint64_t)&v3[v273] & v280;
            goto LABEL_357;
        }
      case 4u:
        long long v100 = *((_OWORD *)a2 + 1);
        *(_OWORD *)int v3 = *(_OWORD *)a2;
        *((_OWORD *)v3 + 1) = v100;
        *(_OWORD *)(v3 + 25) = *(_OWORD *)(a2 + 25);
        if (v32 > 3) {
          goto LABEL_220;
        }
        unsigned int v101 = ((1 << v33) + 1) >> v33;
        uint64_t v102 = 2;
        if (v101 > 0xFFFD) {
          uint64_t v102 = 4;
        }
        if (v101 <= 0xFD) {
LABEL_220:
        }
          uint64_t v102 = 1;
        unint64_t v86 = v102 + v32;
        if (v31 > v86) {
          unint64_t v86 = v31;
        }
        if (v86 <= 0x29) {
          unint64_t v86 = 41;
        }
        char v87 = 4;
        goto LABEL_367;
      case 5u:
        if (v32 > 3) {
          goto LABEL_229;
        }
        unsigned int v103 = ((1 << v33) + 1) >> v33;
        if (v103 > 0xFFFD)
        {
          unsigned int v104 = *(_DWORD *)&a2[v32];
        }
        else if (v103 > 0xFD)
        {
          unsigned int v104 = *(unsigned __int16 *)&a2[v32];
        }
        else
        {
LABEL_229:
          unsigned int v104 = a2[v32];
        }
        unsigned int v107 = v104 - 2;
        if (v104 >= 2)
        {
          if (v32 <= 3) {
            uint64_t v108 = v32;
          }
          else {
            uint64_t v108 = 4;
          }
          switch(v108)
          {
            case 1:
              int v109 = *a2;
              goto LABEL_267;
            case 2:
              int v109 = *(unsigned __int16 *)a2;
              goto LABEL_267;
            case 3:
              int v109 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_267;
            case 4:
              int v109 = *(_DWORD *)a2;
LABEL_267:
              if (v32 < 4) {
                v109 |= v107 << v33;
              }
              unsigned int v104 = v109 + 2;
              break;
            default:
              break;
          }
        }
        if (v104 == 1)
        {
          *(void *)int v3 = *(void *)a2;
          v3[8] = a2[8];
          if (v32 <= 3)
          {
            unsigned int v111 = ((1 << v33) + 1) >> v33;
            if (v111 > 0xFFFD)
            {
              *(_DWORD *)&v3[v32] = 1;
              goto LABEL_287;
            }
            if (v111 > 0xFD)
            {
              *(_WORD *)&v3[v32] = 1;
              goto LABEL_287;
            }
          }
          v3[v32] = 1;
        }
        else
        {
          if (!v104)
          {
            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v264 + 32))(v3, a2, v266);
            if (v32 > 3)
            {
LABEL_275:
              v3[v32] = 0;
              goto LABEL_286;
            }
            unsigned int v110 = ((1 << v33) + 1) >> v33;
            if (v110 > 0xFFFD)
            {
              *(_DWORD *)&v3[v32] = 0;
            }
            else
            {
              if (v110 <= 0xFD) {
                goto LABEL_275;
              }
              *(_WORD *)&v3[v32] = 0;
            }
LABEL_287:
            unsigned int v114 = ((1 << v33) + 1) >> v33;
            uint64_t v115 = 2;
            if (v114 > 0xFFFD) {
              uint64_t v115 = 4;
            }
            if (v114 > 0xFD)
            {
LABEL_291:
              unint64_t v86 = v115 + v32;
              if (v31 > v86) {
                unint64_t v86 = v31;
              }
              if (v86 <= 0x29) {
                unint64_t v86 = 41;
              }
              char v87 = 5;
              goto LABEL_367;
            }
LABEL_290:
            uint64_t v115 = 1;
            goto LABEL_291;
          }
          if (v32 > 3) {
            goto LABEL_284;
          }
          unsigned int v112 = ((1 << v33) + 1) >> v33;
          uint64_t v113 = 2;
          if (v112 > 0xFFFD) {
            uint64_t v113 = 4;
          }
          if (v112 <= 0xFD) {
LABEL_284:
          }
            uint64_t v113 = 1;
          memcpy(v3, a2, v113 + v32);
        }
LABEL_286:
        if (v32 > 3) {
          goto LABEL_290;
        }
        goto LABEL_287;
      case 6u:
        *(void *)int v3 = *(void *)a2;
        v3[8] = a2[8];
        if (v32 > 3) {
          goto LABEL_234;
        }
        unsigned int v105 = ((1 << v33) + 1) >> v33;
        uint64_t v106 = 2;
        if (v105 > 0xFFFD) {
          uint64_t v106 = 4;
        }
        if (v105 <= 0xFD) {
LABEL_234:
        }
          uint64_t v106 = 1;
        unint64_t v86 = v106 + v32;
        if (v31 > v86) {
          unint64_t v86 = v31;
        }
        if (v86 <= 0x29) {
          unint64_t v86 = 41;
        }
        char v87 = 6;
        goto LABEL_367;
      default:
        if (v32 > 3) {
          goto LABEL_188;
        }
        unsigned int v80 = ((1 << v33) + 1) >> v33;
        uint64_t v81 = 2;
        if (v80 > 0xFFFD) {
          uint64_t v81 = 4;
        }
        if (v80 <= 0xFD) {
LABEL_188:
        }
          uint64_t v81 = 1;
        unint64_t v82 = v81 + v32;
        if (v31 > v82) {
          unint64_t v82 = v31;
        }
        if (v82 <= 0x29) {
          unint64_t v82 = 41;
        }
        memcpy(v3, a2, v82 + 1);
        return v3;
    }
  }
  return v3;
}

uint64_t sub_1C9997528(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v45 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v43 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v43 + 80);
  uint64_t v44 = *(void *)(sub_1C9BEAC48() - 8);
  int v40 = *(_DWORD *)(v44 + 80) | v3;
  uint64_t v42 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v42 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v41 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v41 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v40 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v45 + v10) & ~v10;
  unint64_t v12 = *(void *)(v43 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v44 + 64)) {
    unint64_t v12 = *(void *)(v44 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v42 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v41 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v41 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_23;
  }
  unsigned int v21 = ((1 << v20) + 1) >> v20;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
LABEL_23:
  }
    uint64_t v22 = 1;
  unint64_t v23 = v22 + v19;
  if (v18 > v23) {
    unint64_t v23 = v18;
  }
  if (v23 <= 0x29) {
    unint64_t v23 = 41;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_49;
  }
  unint64_t v24 = v23 + 1;
  char v25 = 8 * v24;
  if (v24 <= 3)
  {
    unsigned int v28 = ((a2 + ~(-1 << v25) - 248) >> v25) + 1;
    if (HIWORD(v28))
    {
      int v26 = *(_DWORD *)((char *)a1 + v24);
      if (!v26) {
        goto LABEL_49;
      }
      goto LABEL_39;
    }
    if (v28 > 0xFF)
    {
      int v26 = *(unsigned __int16 *)((char *)a1 + v24);
      if (!*(unsigned __int16 *)((char *)a1 + v24)) {
        goto LABEL_49;
      }
      goto LABEL_39;
    }
    if (v28 < 2)
    {
LABEL_49:
      if (v19 > 3) {
        goto LABEL_53;
      }
      unsigned int v32 = ((1 << v20) + 1) >> v20;
      uint64_t v33 = 2;
      if (v32 > 0xFFFD) {
        uint64_t v33 = 4;
      }
      if (v32 <= 0xFD) {
LABEL_53:
      }
        uint64_t v33 = 1;
      unint64_t v34 = v33 + v19;
      if (v18 <= v34) {
        unint64_t v18 = v34;
      }
      if (v18 <= 0x29) {
        unint64_t v18 = 41;
      }
      int v35 = *((unsigned __int8 *)a1 + v18);
      unsigned int v36 = v35 ^ 0xF8;
      unsigned int v37 = 256 - v35;
      if (v36 <= 0xF7) {
        return v37;
      }
      else {
        return 0;
      }
    }
  }
  int v26 = *((unsigned __int8 *)a1 + v24);
  if (!*((unsigned char *)a1 + v24)) {
    goto LABEL_49;
  }
LABEL_39:
  int v29 = (v26 - 1) << v25;
  if (v24 > 3) {
    int v29 = 0;
  }
  if (v24)
  {
    if (v24 <= 3) {
      int v30 = v24;
    }
    else {
      int v30 = 4;
    }
    switch(v30)
    {
      case 2:
        int v31 = *a1;
        break;
      case 3:
        int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v31 = *(_DWORD *)a1;
        break;
      default:
        int v31 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v31 = 0;
  }
  return (v31 | v29) + 249;
}

void sub_1C9997A70(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v40 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v38 = *(void *)(sub_1C9BEC028() - 8);
  int v4 = *(_DWORD *)(v38 + 80);
  uint64_t v39 = *(void *)(sub_1C9BEAC48() - 8);
  int v35 = *(_DWORD *)(v39 + 80) | v4;
  uint64_t v37 = *(void *)(sub_1C9BEAF18() - 8);
  int v5 = *(_DWORD *)(v37 + 80) & 0xF8;
  uint64_t v6 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v36 = *(void *)(sub_1C9BEC928() - 8);
  int v9 = *(_DWORD *)(v36 + 80);
  uint64_t v10 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v11 = (v35 | (v9 | *(_DWORD *)(v10 + 80))) & 0xF8 | v8;
  uint64_t v12 = (v40 + v11) & ~v11;
  unint64_t v13 = *(void *)(v38 + 64);
  if (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v13) {
    unint64_t v13 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v13 <= *(void *)(v39 + 64)) {
    unint64_t v13 = *(void *)(v39 + 64);
  }
  uint64_t v14 = *(void *)(v6 + 64) + ((*(void *)(v37 + 64) + v7) & ~v7);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  unint64_t v15 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v13 <= v16) {
    unint64_t v13 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v17 = ((((((v15 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 <= v17) {
    unint64_t v13 = v17;
  }
  if (v13 <= ((v16 + ((v8 + ((*(void *)(v36 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v13 = ((v16 + ((v8 + ((*(void *)(v36 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v18 = *(void *)(v10 + 64);
  if (v13 > v18) {
    unint64_t v18 = v13;
  }
  if (v18 <= 0x18) {
    unint64_t v18 = 24;
  }
  unint64_t v19 = ((((v12 + v18 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v20 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v20 <= 9) {
    unint64_t v20 = 9;
  }
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_23;
  }
  unsigned int v22 = ((1 << v21) + 1) >> v21;
  uint64_t v23 = 2;
  if (v22 > 0xFFFD) {
    uint64_t v23 = 4;
  }
  if (v22 <= 0xFD) {
LABEL_23:
  }
    uint64_t v23 = 1;
  unint64_t v24 = v23 + v20;
  if (v19 > v24) {
    unint64_t v24 = v19;
  }
  if (v24 <= 0x29) {
    unint64_t v24 = 41;
  }
  size_t v25 = v24 + 1;
  char v26 = 8 * (v24 + 1);
  if (a3 < 0xF9)
  {
    int v27 = 0;
  }
  else if (v25 <= 3)
  {
    unsigned int v30 = ((a3 + ~(-1 << v26) - 248) >> v26) + 1;
    if (HIWORD(v30))
    {
      int v27 = 4;
    }
    else if (v30 >= 0x100)
    {
      int v27 = 2;
    }
    else
    {
      int v27 = v30 > 1;
    }
  }
  else
  {
    int v27 = 1;
  }
  if (a2 > 0xF8)
  {
    unsigned int v28 = a2 - 249;
    if (v25 < 4)
    {
      int v29 = (v28 >> v26) + 1;
      if (v25)
      {
        int v31 = v28 & ~(-1 << v26);
        bzero(a1, v25);
        if (v25 == 3)
        {
          *(_WORD *)a1 = v31;
          a1[2] = BYTE2(v31);
        }
        else if (v25 == 2)
        {
          *(_WORD *)a1 = v31;
        }
        else
        {
          *a1 = v31;
        }
      }
    }
    else
    {
      bzero(a1, v25);
      *(_DWORD *)a1 = v28;
      int v29 = 1;
    }
    switch(v27)
    {
      case 1:
        a1[v25] = v29;
        break;
      case 2:
        *(_WORD *)&a1[v25] = v29;
        break;
      case 3:
LABEL_68:
        __break(1u);
        JUMPOUT(0x1C9997FF0);
      case 4:
        *(_DWORD *)&a1[v25] = v29;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v27)
    {
      case 1:
        a1[v25] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_48;
      case 2:
        *(_WORD *)&a1[v25] = 0;
        goto LABEL_47;
      case 3:
        goto LABEL_68;
      case 4:
        *(_DWORD *)&a1[v25] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_48;
      default:
LABEL_47:
        if (a2)
        {
LABEL_48:
          if (v20 > 3) {
            goto LABEL_52;
          }
          unsigned int v32 = ((1 << v21) + 1) >> v21;
          uint64_t v33 = 2;
          if (v32 > 0xFFFD) {
            uint64_t v33 = 4;
          }
          if (v32 <= 0xFD) {
LABEL_52:
          }
            uint64_t v33 = 1;
          unint64_t v34 = v33 + v20;
          if (v19 <= v34) {
            unint64_t v19 = v34;
          }
          if (v19 <= 0x29) {
            unint64_t v19 = 41;
          }
          a1[v19] = -(char)a2;
        }
        break;
    }
  }
}

uint64_t sub_1C9998018(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v35 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v33 = *(void *)(sub_1C9BEC028() - 8);
  int v2 = *(_DWORD *)(v33 + 80);
  uint64_t v34 = *(void *)(sub_1C9BEAC48() - 8);
  int v30 = *(_DWORD *)(v34 + 80) | v2;
  uint64_t v32 = *(void *)(sub_1C9BEAF18() - 8);
  int v3 = *(_DWORD *)(v32 + 80) & 0xF8;
  uint64_t v4 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 | v5 | 7;
  uint64_t v31 = *(void *)(sub_1C9BEC928() - 8);
  int v7 = *(_DWORD *)(v31 + 80);
  uint64_t v8 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v9 = (v30 | (v7 | *(_DWORD *)(v8 + 80))) & 0xF8 | v6;
  uint64_t v10 = (v35 + v9) & ~v9;
  unint64_t v11 = *(void *)(v33 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v34 + 64)) {
    unint64_t v11 = *(void *)(v34 + 64);
  }
  uint64_t v12 = *(void *)(v4 + 64) + ((*(void *)(v32 + 64) + v5) & ~v5);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v11 <= v14) {
    unint64_t v11 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v15 = ((((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v11 <= v15) {
    unint64_t v11 = v15;
  }
  if (v11 <= ((v14 + ((v6 + ((*(void *)(v31 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v11 = ((v14 + ((v6 + ((*(void *)(v31 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v16 = *(void *)(v8 + 64);
  if (v11 > v16) {
    unint64_t v16 = v11;
  }
  if (v16 <= 0x18) {
    unint64_t v16 = 24;
  }
  unint64_t v17 = ((((v10 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v18 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v19 = 9;
  if (*(void *)(v18 + 64) > 9uLL) {
    uint64_t v19 = *(void *)(v18 + 64);
  }
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_23;
  }
  unsigned int v21 = ((1 << v20) + 1) >> v20;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
LABEL_23:
  }
    uint64_t v22 = 1;
  unint64_t v23 = v22 + v19;
  if (v17 > v23) {
    unint64_t v23 = v17;
  }
  if (v23 <= 0x29) {
    unint64_t v23 = 41;
  }
  uint64_t result = a1[v23];
  if (result >= 7)
  {
    if (v19 > 3) {
      goto LABEL_33;
    }
    unsigned int v25 = ((1 << v20) + 1) >> v20;
    uint64_t v26 = 2;
    if (v25 > 0xFFFD) {
      uint64_t v26 = 4;
    }
    if (v25 <= 0xFD) {
LABEL_33:
    }
      uint64_t v26 = 1;
    unint64_t v27 = v26 + v19;
    if (v17 <= v27) {
      unint64_t v17 = v27;
    }
    if (v17 <= 0x29) {
      LODWORD(v17) = 41;
    }
    if (v17 <= 3) {
      uint64_t v28 = v17;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a1;
        goto LABEL_46;
      case 2:
        int v29 = *(unsigned __int16 *)a1;
        goto LABEL_46;
      case 3:
        int v29 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_46;
      case 4:
        int v29 = *(_DWORD *)a1;
LABEL_46:
        if (v17 < 4) {
          uint64_t result = (v29 | ((result - 7) << (8 * v17))) + 7;
        }
        else {
          uint64_t result = (v29 + 7);
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C99984AC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v46 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v43 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v43 + 80);
  uint64_t v44 = *(void *)(sub_1C9BEAC48() - 8);
  int v40 = *(_DWORD *)(v44 + 80) | v3;
  uint64_t v42 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v42 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v41 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v41 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v40 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v46 + v10) & ~v10;
  unint64_t v12 = *(void *)(v43 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v44 + 64)) {
    unint64_t v12 = *(void *)(v44 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v42 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v41 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v41 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  if (a2 > 6)
  {
    char v23 = 8 * v19;
    if (v19 > 3) {
      goto LABEL_34;
    }
    unsigned int v24 = ((1 << v23) + 1) >> v23;
    uint64_t v25 = 2;
    if (v24 > 0xFFFD) {
      uint64_t v25 = 4;
    }
    if (v24 <= 0xFD) {
LABEL_34:
    }
      uint64_t v25 = 1;
    unint64_t v26 = v25 + v19;
    if (v18 > v26) {
      unint64_t v26 = v18;
    }
    if (v26 <= 0x29) {
      LODWORD(v26) = 41;
    }
    BOOL v27 = v26 > 3;
    char v28 = 8 * v26;
    int v29 = (a2 - 7) & ~(-1 << v28);
    unsigned int v30 = ((a2 - 7) >> v28) + 7;
    if (v27)
    {
      LOBYTE(v30) = 7;
      int v31 = a2 - 7;
    }
    else
    {
      int v31 = v29;
    }
    if (v19 > 3) {
      goto LABEL_46;
    }
    unsigned int v32 = ((1 << v23) + 1) >> v23;
    uint64_t v33 = 2;
    if (v32 > 0xFFFD) {
      uint64_t v33 = 4;
    }
    if (v32 <= 0xFD) {
LABEL_46:
    }
      uint64_t v33 = 1;
    unint64_t v34 = v33 + v19;
    if (v18 > v34) {
      unint64_t v34 = v18;
    }
    if (v34 <= 0x29) {
      unint64_t v34 = 41;
    }
    a1[v34] = v30;
    if (v19 > 3) {
      goto LABEL_55;
    }
    unsigned int v35 = ((1 << v23) + 1) >> v23;
    uint64_t v36 = 2;
    if (v35 > 0xFFFD) {
      uint64_t v36 = 4;
    }
    if (v35 <= 0xFD) {
LABEL_55:
    }
      uint64_t v36 = 1;
    unint64_t v37 = v36 + v19;
    if (v18 <= v37) {
      unint64_t v18 = v37;
    }
    if (v18 <= 0x29) {
      size_t v38 = 41;
    }
    else {
      size_t v38 = v18;
    }
    if (v38 >= 4) {
      int v39 = 4;
    }
    else {
      int v39 = v38;
    }
    bzero(a1, v38);
    switch(v39)
    {
      case 2:
        *(_WORD *)a1 = v31;
        break;
      case 3:
        *(_WORD *)a1 = v31;
        a1[2] = BYTE2(v31);
        break;
      case 4:
        *(_DWORD *)a1 = v31;
        break;
      default:
        *a1 = v31;
        break;
    }
  }
  else
  {
    if (v19 > 3) {
      goto LABEL_24;
    }
    unsigned int v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
    uint64_t v21 = 2;
    if (v20 > 0xFFFD) {
      uint64_t v21 = 4;
    }
    if (v20 <= 0xFD) {
LABEL_24:
    }
      uint64_t v21 = 1;
    unint64_t v22 = v21 + v19;
    if (v18 <= v22) {
      unint64_t v18 = v22;
    }
    if (v18 <= 0x29) {
      unint64_t v18 = 41;
    }
    a1[v18] = a2;
  }
}

uint64_t sub_1C9998A0C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C9998AA0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) <= 9uLL) {
    uint64_t v5 = 9;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if ((*(_DWORD *)(v4 + 80) & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  unsigned int v7 = a2[v5];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_19;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_19:
        int v11 = (v10 | (v8 << (8 * v5))) + 2;
        unsigned int v7 = v10 + 2;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v7 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    *(unsigned char *)(a1 + v5) = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    *(unsigned char *)(a1 + v5) = 0;
  }
  return a1;
}

unsigned __int8 *sub_1C9998C20(unsigned __int8 *result, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= 9) {
    unint64_t v2 = 9;
  }
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 != 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  }
  return result;
}

uint64_t sub_1C9998D1C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 9uLL) {
    uint64_t v4 = 9;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    char v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C9998E5C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 9uLL) {
      uint64_t v7 = 9;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      uint64_t v18 = *(void *)a2;
      a1[8] = a2[8];
      *(void *)a1 = v18;
      char v19 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v19 = 0;
    }
    a1[v7] = v19;
  }
  return a1;
}

uint64_t sub_1C9999070(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 9uLL) {
    uint64_t v4 = 9;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = a2[8];
    char v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C99991B0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 9uLL) {
      uint64_t v7 = 9;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 != 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_27;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_27;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_27;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_27:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C99993C4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v4 = 9;
  if (*(void *)(v3 + 64) > 9uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C99994F8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= 9) {
    unint64_t v5 = 9;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C99996BCLL);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C99996E4(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v3 = 9;
  if (*(void *)(v2 + 64) > 9uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C999979C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 9uLL) {
    size_t v4 = 9;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C9999874()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_10();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_57_15();
  return sub_1C99893D4(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C9999914()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9989904(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C99999A4()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9989CE0(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9999A34()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C998A0E4(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9999AC4()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_45_18();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_24_33();
  return sub_1C998A360(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9999B5C()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  unint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C998A5C0(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9999BEC(uint64_t a1)
{
  return sub_1C998A6C4(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C9999C04(uint64_t a1)
{
  return sub_1C998A458(a1, v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C9999C18(uint64_t a1)
{
  return sub_1C9999C68(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1C998A1DC);
}

uint64_t sub_1C9999C34(uint64_t a1)
{
  return sub_1C9999C68(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1C9989ED8);
}

uint64_t sub_1C9999C50(uint64_t a1)
{
  return sub_1C9999C68(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_1C9989B5C);
}

uint64_t sub_1C9999C68(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C9999C84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  OUTLINED_FUNCTION_2_4(v2);
  return sub_1C998A05C(a1);
}

uint64_t sub_1C9999CCC(uint64_t a1)
{
  return sub_1C9989670(a1, *(void *)(v1 + 48), *(void *)(v1 + 56), *(long long **)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1C9999CE0()
{
  type metadata accessor for DisambiguationResult();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEDA18();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C9999D90(uint64_t a1)
{
  type metadata accessor for DisambiguationResult();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = sub_1C9BEDA18();
  OUTLINED_FUNCTION_2_4(v2);

  return sub_1C9989898(a1);
}

uint64_t sub_1C9999E3C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C9999E74()
{
  OUTLINED_FUNCTION_80_10();
  return v0();
}

uint64_t sub_1C9999E9C()
{
  uint64_t v0 = OUTLINED_FUNCTION_102_3();
  return v1(v0);
}

uint64_t sub_1C9999EC4()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9989058(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9999F54()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_45_18();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_24_33();
  return sub_1C9988EC4(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9999FEC()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9988D00(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C999A07C()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9988B3C(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C999A10C()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_20_37();
  OUTLINED_FUNCTION_44();
  return sub_1C9988978(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C999A19C()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_87_10();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_57_15();
  return sub_1C99886AC(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1C999A23C()
{
  OUTLINED_FUNCTION_80_10();
  return v0();
}

uint64_t sub_1C999A264()
{
  uint64_t v0 = OUTLINED_FUNCTION_102_3();
  return v1(v0);
}

uint64_t sub_1C999A28C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  return sub_1C9987DC8(v2, v0);
}

uint64_t sub_1C999A31C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C9987E74(v3, v4, v5);
}

uint64_t sub_1C999A3AC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C9987A44(v3, v4, v5);
}

uint64_t sub_1C999A43C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C9987C14(v3, v4, v5);
}

uint64_t sub_1C999A4CC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1C999A52C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v4 = OUTLINED_FUNCTION_228();
  v5(v4);
  return a2;
}

uint64_t sub_1C999A580(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

uint64_t OUTLINED_FUNCTION_20_47()
{
  uint64_t v3 = *(void *)(v1 + 296);
  *(void *)uint64_t v3 = v0;
  *(unsigned char *)(v3 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_49_16()
{
  return swift_task_dealloc();
}

__n128 OUTLINED_FUNCTION_54_18@<Q0>(uint64_t a1@<X8>)
{
  return *(__n128 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_57_15()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_60_16(uint64_t a1)
{
  *(void *)(v3 + 112) = a1;
  __n128 result = *(__n128 *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 96);
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)(a1 + 48) = v2;
  *(void *)(a1 + 56) = v1;
  return result;
}

void OUTLINED_FUNCTION_61_16()
{
  uint64_t v2 = *(void *)(v1 - 208);
  *(void *)uint64_t v0 = *(void *)(v1 - 176);
  *(void *)(v0 + 8) = v2;
  *(void *)(v0 + 16) = *(void *)(v1 - 200);
  *(unsigned char *)(v0 + 24) = *(_DWORD *)(v1 - 188);
  *(void *)(v0 + 32) = *(void *)(v1 - 184);
}

void OUTLINED_FUNCTION_73_10()
{
  sub_1C963C340();
}

uint64_t OUTLINED_FUNCTION_74_12()
{
  return *(void *)(v0 + 64);
}

__n128 OUTLINED_FUNCTION_75_11()
{
  uint64_t v1 = *(void *)(v0 + 80);
  __n128 result = *(__n128 *)(v1 + 25);
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 32) = v3;
  *(__n128 *)(v0 + 41) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_76_10()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_94_7(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v3;
  __n128 result = *(__n128 *)(v1 + 25);
  *(__n128 *)(v2 + 41) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_95_9()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_98_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 192) = (char *)&a9 - v9;
  return 0;
}

BOOL OUTLINED_FUNCTION_100_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_102_3()
{
  return *(void *)(v0 + 32);
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_111_4()
{
  return type metadata accessor for DisambiguationResult.DisambiguationResultType();
}

uint64_t OUTLINED_FUNCTION_122_1@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 280) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_126_0(__n128 a1)
{
  *(__n128 *)(v4 + 8) = a1;
  *(unsigned char *)(v4 + 24) = v1;
  *(void *)(v4 + 32) = v2;
  *(unsigned char *)(v4 + 40) = v3;
}

void OUTLINED_FUNCTION_133_1(char a1@<W8>, __n128 a2@<Q0>)
{
  *(__n128 *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 40) = v3;
  *(void *)(v4 + 48) = v2;
  *(unsigned char *)(v4 + 56) = a1;
}

void sub_1C999A93C()
{
}

void PromptForValueFlowStrategy.makeRepromptOnLowConfidence(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  long long v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA593C40;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C999AAD8()
{
}

void PromptForValueFlowStrategy.makeFlowCancelledResponse(_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  long long v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA593C48;
  OUTLINED_FUNCTION_12_1(v5);
}

void sub_1C999AC74()
{
}

void PromptForValueFlowStrategy.makeErrorResponse(_:_:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = swift_allocObject();
  long long v5 = (void *)OUTLINED_FUNCTION_40_2(v4);
  v5[3] = 0;
  v5[4] = &unk_1EA593C50;
  OUTLINED_FUNCTION_12_1(v5);
}

uint64_t sub_1C999AE10()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()();
}

uint64_t PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_58_15(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  uint64_t v6 = OUTLINED_FUNCTION_52_12();
  return v7(v6);
}

uint64_t sub_1C999AF98()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()();
}

uint64_t PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D5F14();
}

uint64_t sub_1C999B0B8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return PromptForValueFlowStrategyAsync.makeFlowCancelledResponse()();
}

uint64_t PromptForValueFlowStrategyAsync.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6D18();
}

uint64_t sub_1C999B1D8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return PromptForValueFlowStrategyAsync.makeErrorResponse(_:)();
}

uint64_t PromptForValueFlowStrategyAsync.makeErrorResponse(_:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6734();
}

uint64_t PromptForValueFlowStrategyAsync.actionForInputWrapper(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999B318);
}

uint64_t sub_1C999B318()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void, void))(v0[5] + 16))(v0[3], v0[4]);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t PromptForValueFlow.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  return PromptForValueFlowAsync.exitValue.getter(a1);
}

uint64_t PromptForValueFlowAsync.exitValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PromptForValueFlowAsync.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v14 - v7;
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_82_2();
  v9();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    char v13 = v8[8];
    *(void *)a1 = *(void *)v8;
    *(unsigned char *)(a1 + 8) = v13;
    OUTLINED_FUNCTION_103();
    return swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    OUTLINED_FUNCTION_103();
    OUTLINED_FUNCTION_8_4();
    return (*(uint64_t (**)(uint64_t, char *))(v11 + 32))(a1, v8);
  }
  else
  {
    *(void *)a1 = sub_1C999B98C();
    *(unsigned char *)(a1 + 8) = 0;
    OUTLINED_FUNCTION_103();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v2);
  }
}

uint64_t PromptForValueFlow.__allocating_init(strategy:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  PromptForValueFlow.init(strategy:outputPublisher:)(a1, a2);
  return v4;
}

uint64_t PromptForValueFlow.init(strategy:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_getAssociatedTypeWitness();
  type metadata accessor for PromptForValueFlowAsync();
  type metadata accessor for AnyPromptForValueFlowStrategy();
  swift_unknownObjectRetain();
  uint64_t v5 = sub_1C999B6F8();
  sub_1C95FD5F0(a2, (uint64_t)&v10);
  uint64_t v6 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v7 = swift_allocObject();
  sub_1C95FD5D8(&v10, v7 + 16);
  uint64_t v11 = v6;
  uint64_t v12 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(void *)&long long v10 = v7;
  swift_getWitnessTable();
  uint64_t v8 = PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)(v5, &v10);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a2);
  *(void *)(v3 + 16) = v8;
  return v3;
}

uint64_t sub_1C999B6F8()
{
  OUTLINED_FUNCTION_57_16();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  sub_1C96584C8(v1, v2, v3);
  return v0;
}

uint64_t PromptForValueFlow.on(input:)(uint64_t a1)
{
  return PromptForValueFlowAsync.on(input:)(a1) & 1;
}

void PromptForValueFlow.execute(completion:)(uint64_t a1, uint64_t a2)
{
}

uint64_t PromptForValueFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999B784);
}

uint64_t sub_1C999B784()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_91_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9618A08;
  OUTLINED_FUNCTION_60_1();
  return PromptForValueFlowAsync.execute()();
}

uint64_t PromptForValueFlow.deinit()
{
  swift_release();
  return v0;
}

uint64_t PromptForValueFlow.__deallocating_deinit()
{
  PromptForValueFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C999B880(uint64_t a1)
{
  return PromptForValueFlow.on(input:)(a1) & 1;
}

void sub_1C999B8A8(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C999B8CC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615010;
  return PromptForValueFlow.execute()(a1);
}

uint64_t sub_1C999B968@<X0>(uint64_t a1@<X8>)
{
  return PromptForValueFlow.exitValue.getter(a1);
}

uint64_t sub_1C999B98C()
{
  uint64_t v1 = type metadata accessor for PromptForValueFlowAsync.State();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_1C9BEE188();
  uint64_t v15 = v13;
  unint64_t v16 = v14;
  sub_1C9BED6B8();
  uint64_t v6 = v0 + *(void *)(*(void *)v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v5, v6, v1);
  swift_getWitnessTable();
  sub_1C9BEE5F8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  uint64_t v7 = v15;
  uint64_t v8 = v16;
  type metadata accessor for CommandFailure();
  swift_allocObject();
  uint64_t v9 = CommandFailure.init(errorCode:reason:)(-1, v7, v8);
  sub_1C97740B8();
  uint64_t result = swift_allocError();
  *uint64_t v11 = v9;
  return result;
}

uint64_t sub_1C999BB74()
{
  OUTLINED_FUNCTION_57_16();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  sub_1C96583FC(v1, v2, v3);
  return v0;
}

void PromptForValueFlowAsync.execute(completion:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C999BBC0()
{
  OUTLINED_FUNCTION_24();
  v1[7] = v2;
  v1[8] = v0;
  OUTLINED_FUNCTION_74();
  v1[9] = *(void *)(v3 + 80);
  uint64_t v4 = type metadata accessor for PromptForValueFlowAsync.State();
  v1[10] = v4;
  OUTLINED_FUNCTION_22(v4);
  v1[11] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C999BC54()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_28_2();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C999BD00;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C999BD00()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C999BDE4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 56);
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1C9661F24(v1);
  static ExecuteResponse.complete()(v2);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v3();
}

uint64_t sub_1C999BE88()
{
  OUTLINED_FUNCTION_24();
  v1[8] = v2;
  v1[9] = v0;
  v1[7] = v3;
  OUTLINED_FUNCTION_74();
  uint64_t v5 = *(void *)(v4 + 80);
  v1[10] = v5;
  uint64_t v6 = type metadata accessor for PromptForValueFlowAsync.State();
  v1[11] = v6;
  OUTLINED_FUNCTION_22(v6);
  v1[12] = OUTLINED_FUNCTION_16();
  uint64_t v7 = sub_1C9BEDEE8();
  v1[13] = v7;
  OUTLINED_FUNCTION_5_0(v7);
  v1[14] = v8;
  v1[15] = OUTLINED_FUNCTION_16();
  v1[16] = *(void *)(v5 - 8);
  v1[17] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C999BFA0()
{
  OUTLINED_FUNCTION_24();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[18] = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C999C038;
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[8];
  return sub_1C999E0C8(v3, v4);
}

uint64_t sub_1C999C038()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C999C114()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[10];
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v1, 1, v2);
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[7];
  if (EnumTagSinglePayload == 1)
  {
    (*(void (**)(uint64_t, void))(v0[14] + 8))(v1, v0[13]);
    OUTLINED_FUNCTION_103();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1C9661F24(v4);
  }
  else
  {
    uint64_t v7 = v0[16];
    uint64_t v6 = v0[17];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v6, v1, v2);
    OUTLINED_FUNCTION_82_2();
    v8();
    OUTLINED_FUNCTION_103();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1C9661F24(v4);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v2);
  }
  static ExecuteResponse.complete()(v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v9();
}

uint64_t sub_1C999C29C()
{
  OUTLINED_FUNCTION_42_0();
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[9];
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 24), *(void *)(v2 + 48));
  uint64_t v3 = swift_task_alloc();
  v0[20] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C999C388;
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_44();
  return sub_1C962F1B0(v5, v6, v7, v8, v9);
}

uint64_t sub_1C999C388()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C999C478()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[7];
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v4 = v1;
  sub_1C9661F24(v2);

  static ExecuteResponse.complete()(v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_128();
  return v6(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1C999C554()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void **)(v0 + 152);
  swift_task_dealloc();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_128();
  return v3(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C999C5EC()
{
  OUTLINED_FUNCTION_24();
  v1[7] = v2;
  v1[8] = v0;
  OUTLINED_FUNCTION_74();
  uint64_t v3 = type metadata accessor for PromptForValueFlowAsync.State();
  v1[9] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[10] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C999C67C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_28_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_55_3(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C999C724;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C999C724()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C999C808()
{
  OUTLINED_FUNCTION_24();
  v1[7] = v2;
  v1[8] = v0;
  OUTLINED_FUNCTION_74();
  uint64_t v3 = type metadata accessor for PromptForValueFlowAsync.State();
  v1[9] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[10] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C999C898()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_28_2();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_55_3(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C999C724;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C999C940(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C999C960, 0, 0);
}

uint64_t sub_1C999C960()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_91_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  uint64_t v3 = OUTLINED_FUNCTION_60_1();
  return sub_1C999E1AC(v3);
}

uint64_t sub_1C999C9E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C999CA08, 0, 0);
}

uint64_t sub_1C999CA08()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_91_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  uint64_t v3 = OUTLINED_FUNCTION_60_1();
  return sub_1C999E284(v3);
}

uint64_t sub_1C999CA90(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C999CAB0, 0, 0);
}

uint64_t sub_1C999CAB0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_91_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  uint64_t v3 = OUTLINED_FUNCTION_60_1();
  return sub_1C999E35C(v3);
}

uint64_t sub_1C999CB38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  long long v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C999CB5C, 0, 0);
}

uint64_t sub_1C999CB5C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_91_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96DD284;
  uint64_t v3 = OUTLINED_FUNCTION_60_1();
  return sub_1C999E434(v3, v4);
}

void sub_1C999CC0C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C999CC30@<X0>(uint64_t a1@<X8>)
{
  return PromptForValueFlowAsync.exitValue.getter(a1);
}

uint64_t sub_1C999CC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 24) + **(int **)(a6 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_1C9615888;
  return v13(a1, a2, a5, a6);
}

uint64_t sub_1C999CD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 40) + **(int **)(a5 + 40));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1C9615888;
  return v11(a1, a4, a5);
}

uint64_t sub_1C999CE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 48) + **(int **)(a5 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1C9615888;
  return v11(a1, a4, a5);
}

uint64_t sub_1C999CF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 56) + **(int **)(a5 + 56));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_1C9615888;
  return v11(a1, a4, a5);
}

uint64_t sub_1C999D08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 64) + **(int **)(a6 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_1C9615888;
  return v13(a1, a2, a5, a6);
}

uint64_t sub_1C999D1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C999D1C8, 0, 0);
}

uint64_t sub_1C999D1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = *(void *)(v14 + 56);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 64) = v16;
  int8x16_t v17 = *(int8x16_t *)(v14 + 24);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 40);
  *(void *)(v16 + 32) = v15;
  *(int8x16_t *)(v16 + 40) = vextq_s8(v17, v17, 8uLL);
  char v18 = (void *)swift_task_alloc();
  *(void *)(v14 + 72) = v18;
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_21_2();
  *char v18 = v19;
  v18[1] = sub_1C99720E0;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C999D2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = sub_1C999D348(a1, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a6 + 24))(a3, v9, v10, a5, a6);

  return swift_release();
}

uint64_t (*sub_1C999D348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  sub_1C9BEDEE8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v8 = sub_1C9BEDA18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v16 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v16 - v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v12, v8);
  return sub_1C99A6D84;
}

uint64_t sub_1C999D4B8(uint64_t a1)
{
  sub_1C9BEDEE8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = sub_1C9BEDA18();
  return sub_1C969F194(a1, v2);
}

uint64_t sub_1C999D524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C999D54C, 0, 0);
}

uint64_t sub_1C999D54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_25_34(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C979EA20;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C999D608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 32))(sub_1C97A2B40, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C999D770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C999D798, 0, 0);
}

uint64_t sub_1C999D798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_25_34(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C969A9D8;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C999D854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 40))(sub_1C97A2B40, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C999D9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C999D9E4, 0, 0);
}

uint64_t sub_1C999D9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_25_34(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C969A9D8;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C999DAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 48))(sub_1C97A2B40, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C999DC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x1F4188298](sub_1C999DC30, 0, 0);
}

uint64_t sub_1C999DC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_33();
  uint64_t v15 = (__n128 *)OUTLINED_FUNCTION_50_17();
  OUTLINED_FUNCTION_25_34(v15);
  uint64_t v16 = swift_task_alloc();
  OUTLINED_FUNCTION_59_6(v16);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v14 = v17;
  v14[1] = sub_1C969A9D8;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v18, v19, v20, v21, v22, v23, v24, v25, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C999DCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v13 + v12, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 56))(sub_1C97A2B40, v13, a4, a5);
  return swift_release();
}

uint64_t sub_1C999DE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_1C999DE7C, 0, 0);
}

uint64_t sub_1C999DE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = *(void *)(v14 + 56);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v14 + 64) = v16;
  int8x16_t v17 = *(int8x16_t *)(v14 + 24);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v14 + 40);
  *(void *)(v16 + 32) = v15;
  *(int8x16_t *)(v16 + 40) = vextq_s8(v17, v17, 8uLL);
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v14 + 72) = v18;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  OUTLINED_FUNCTION_21_2();
  *uint64_t v18 = v19;
  v18[1] = sub_1C979EE40;
  OUTLINED_FUNCTION_9_54();
  return MEMORY[0x1F4188160](v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C999DF58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a6 + 64))(a3, sub_1C97A2B40, v15, a5, a6);
  return swift_release();
}

uint64_t sub_1C999E0C8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999E0E4);
}

uint64_t sub_1C999E0E4()
{
  OUTLINED_FUNCTION_24();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 32) + **(int **)(v0[4] + 32));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_35_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C96ED14C;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return v7(v4, v5);
}

uint64_t sub_1C999E1AC(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999E1C4);
}

uint64_t sub_1C999E1C4()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  uint64_t v3 = OUTLINED_FUNCTION_21_0();
  return v4(v3);
}

uint64_t sub_1C999E284(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999E29C);
}

uint64_t sub_1C999E29C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  uint64_t v3 = OUTLINED_FUNCTION_21_0();
  return v4(v3);
}

uint64_t sub_1C999E35C(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999E374);
}

uint64_t sub_1C999E374()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_20_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C962CEA4;
  uint64_t v3 = OUTLINED_FUNCTION_21_0();
  return v4(v3);
}

uint64_t sub_1C999E434(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  long long v3[2] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C999E450);
}

uint64_t sub_1C999E450()
{
  OUTLINED_FUNCTION_24();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[4] + 112) + **(int **)(v0[4] + 112));
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_35_1(v1);
  *uint64_t v2 = v3;
  v2[1] = sub_1C96ED14C;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return v7(v4, v5);
}

uint64_t sub_1C999E518()
{
  if (*(void *)(v0 + 128))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58F860);
    sub_1C9BED5D8();
  }
  sub_1C9BEE188();
  sub_1C9BED6B8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  return 0;
}

uint64_t sub_1C999E5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C999E0C8(a1, a2);
}

uint64_t sub_1C999E6A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C965BC14(a1);
}

uint64_t sub_1C999E738(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C999E1AC(a1);
}

uint64_t sub_1C999E7D0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C999E284(a1);
}

uint64_t sub_1C999E868(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C999E35C(a1);
}

uint64_t sub_1C999E900(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return sub_1C999E434(a1, a2);
}

uint64_t sub_1C999E9A8()
{
  return sub_1C999E518();
}

uint64_t sub_1C999E9CC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()();
}

uint64_t sub_1C999EA70()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()();
}

uint64_t sub_1C999EAFC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C999EB38(uint64_t a1)
{
  return sub_1C9973494(a1);
}

uint64_t sub_1C999EB64(uint64_t a1)
{
  return sub_1C9973494(a1);
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.actionForInput(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.parseResponseValue(input:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeRepromptOnEmptyParse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeRepromptOnLowConfidence(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeFlowCancelledResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategy.makeErrorResponse(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.actionForInput(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.parseValueResponse(input:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makePromptForValue()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_58_15(v0, v1, v2);
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  uint64_t v6 = OUTLINED_FUNCTION_52_12();
  return v7(v6);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeRepromptOnEmptyParse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeRepromptOnLowConfidence()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of PromptForValueFlowStrategyAsync.makeErrorResponse(_:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t type metadata accessor for PromptForValueFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for PromptForValueFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForValueFlow);
}

uint64_t dispatch thunk of PromptForValueFlow.__allocating_init(strategy:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for PromptForValueFlowAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PromptForValueFlowAsync);
}

uint64_t dispatch thunk of PromptForValueFlowAsync.__allocating_init<A>(strategy:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *sub_1C999F1C8(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v273 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v263 = *(void *)(v273 + 64);
  uint64_t v245 = sub_1C9BEC028();
  uint64_t v257 = *(void *)(v245 - 8);
  uint64_t v244 = v257;
  int v3 = *(_DWORD *)(v257 + 80);
  uint64_t v243 = sub_1C9BEAC48();
  uint64_t v259 = *(void *)(v243 - 8);
  uint64_t v242 = v259;
  int __n = *(_DWORD *)(v259 + 80) | v3;
  uint64_t v246 = sub_1C9BEAF18();
  uint64_t v255 = *(void *)(v246 - 8);
  uint64_t v272 = v255;
  int v269 = *(_DWORD *)(v255 + 80);
  uint64_t v247 = sub_1C9BEAE48();
  uint64_t v251 = *(void *)(v247 - 8);
  int v4 = *(_DWORD *)(v251 + 80);
  uint64_t v5 = v4;
  uint64_t v6 = v269 & 0xF8 | v4 | 7u;
  uint64_t v7 = sub_1C9BEC928();
  uint64_t v253 = *(void *)(v7 - 8);
  uint64_t v239 = v253;
  uint64_t v240 = v7;
  int v8 = *(_DWORD *)(v253 + 80);
  uint64_t v9 = sub_1C9BEC8F8();
  uint64_t v10 = v257;
  int v11 = *(_DWORD *)(*(void *)(v9 - 8) + 80);
  int v12 = v8;
  uint64_t v13 = (__n | (v8 | v11)) & 0xF8 | v6;
  uint64_t v258 = v263 + v13;
  uint64_t v14 = (v263 + v13) & ~v13;
  unint64_t v15 = *(void *)(v10 + 64);
  unint64_t v241 = v15 + 7;
  if (((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v15) {
    unint64_t v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v15 <= *(void *)(v259 + 64)) {
    unint64_t v15 = *(void *)(v259 + 64);
  }
  int v16 = v4;
  uint64_t v17 = *(void *)(v255 + 64) + v4;
  uint64_t v260 = v5;
  uint64_t v18 = v17 & ~v5;
  uint64_t v238 = v251;
  unsigned int v19 = *(_DWORD *)(v251 + 84);
  size_t v20 = *(void *)(v251 + 64);
  if (v19) {
    size_t v21 = *(void *)(v251 + 64);
  }
  else {
    size_t v21 = v20 + 1;
  }
  unint64_t v22 = (v21 + 7 + v18) & 0xFFFFFFFFFFFFFFF8;
  size_t v23 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v15 <= v23) {
    unint64_t v15 = (v22 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v24 = v22 + 31;
  if (v15 <= (((((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v15 = (((((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v254 = *(void *)(v253 + 64);
  uint64_t v25 = *(unsigned int *)(v255 + 84);
  unsigned int v26 = v19 - 1;
  if (!v19) {
    unsigned int v26 = 0;
  }
  unsigned int v252 = v26;
  if (v26 <= v25) {
    unsigned int v26 = *(_DWORD *)(v255 + 84);
  }
  if (v26 <= 0x7FFFFFFE) {
    unsigned int v26 = 2147483646;
  }
  unsigned int v256 = v26;
  uint64_t v27 = v6 + 16;
  uint64_t v264 = v6;
  unint64_t v28 = ((v24 + ((v6 + 16 + ((v254 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v15 <= v28) {
    unint64_t v15 = v28;
  }
  unint64_t v29 = *(void *)(*(void *)(v9 - 8) + 64);
  if (v15 > v29) {
    unint64_t v29 = v15;
  }
  if (v29 <= 0x18) {
    uint64_t v30 = 24;
  }
  else {
    uint64_t v30 = v29;
  }
  unint64_t v31 = ((((v30 + v14 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v32 = *(void *)(a3 + 16);
  uint64_t v33 = *(void *)(v32 - 8);
  if (*(void *)(v33 + 64) <= 9uLL) {
    uint64_t v34 = 9;
  }
  else {
    uint64_t v34 = *(void *)(v33 + 64);
  }
  char v35 = 8 * v34;
  if (v34 > 3) {
    goto LABEL_32;
  }
  unsigned int v36 = ((1 << v35) + 1) >> v35;
  uint64_t v37 = 2;
  if (v36 > 0xFFFD) {
    uint64_t v37 = 4;
  }
  if (v36 <= 0xFD) {
LABEL_32:
  }
    uint64_t v37 = 1;
  unint64_t v38 = v37 + v34;
  if (v38 <= v31) {
    unint64_t v38 = v31;
  }
  if (v38 <= 9) {
    unint64_t v38 = 9;
  }
  if (v38 > 3) {
    goto LABEL_41;
  }
  unsigned int v39 = ((1 << (8 * v38)) + 3) >> (8 * v38);
  uint64_t v40 = 2;
  if (v39 > 0xFFFB) {
    uint64_t v40 = 4;
  }
  if (v39 <= 0xFB) {
LABEL_41:
  }
    uint64_t v40 = 1;
  int v41 = *(_DWORD *)(v273 + 80);
  int v42 = *(_DWORD *)(v33 + 80);
  int v43 = (__n | v269 | v16 | v12 | v11 | v41 | v42) & 0x100000;
  if (v40 + v38 > 0x18 || v43 != 0 || ((v42 | v41) & 0xF8 | v13) != 7)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  uint64_t v268 = v27;
  uint64_t v270 = v9;
  uint64_t v46 = *(void *)(v9 - 8);
  if (v34 > 3) {
    goto LABEL_54;
  }
  unsigned int v47 = ((1 << v35) + 1) >> v35;
  uint64_t v48 = 2;
  if (v47 > 0xFFFD) {
    uint64_t v48 = 4;
  }
  if (v47 <= 0xFD) {
LABEL_54:
  }
    uint64_t v48 = 1;
  unint64_t v49 = v48 + v34;
  if (v49 <= v31) {
    unint64_t v49 = v31;
  }
  if (v49 <= 9) {
    unint64_t v49 = 9;
  }
  if (v49 > 3) {
    goto LABEL_60;
  }
  unsigned int v51 = ((1 << (8 * v49)) + 3) >> (8 * v49);
  if (v51 > 0xFFFB)
  {
    unsigned int v50 = *(_DWORD *)&a2[v49];
  }
  else
  {
    if (v51 <= 0xFB)
    {
LABEL_60:
      unsigned int v50 = a2[v49];
      goto LABEL_65;
    }
    unsigned int v50 = *(unsigned __int16 *)&a2[v49];
  }
LABEL_65:
  unsigned int v52 = v50 - 4;
  if (v50 >= 4)
  {
    if (v34 > 3) {
      goto LABEL_70;
    }
    unsigned int v53 = ((1 << v35) + 1) >> v35;
    uint64_t v54 = 2;
    if (v53 > 0xFFFD) {
      uint64_t v54 = 4;
    }
    if (v53 <= 0xFD) {
LABEL_70:
    }
      uint64_t v54 = 1;
    unint64_t v55 = v54 + v34;
    if (v55 <= v31) {
      unint64_t v55 = v31;
    }
    if (v55 <= 9) {
      LODWORD(v55) = 9;
    }
    if (v55 <= 3) {
      uint64_t v56 = v55;
    }
    else {
      uint64_t v56 = 4;
    }
    switch(v56)
    {
      case 1:
        int v57 = *a2;
        goto LABEL_83;
      case 2:
        int v57 = *(unsigned __int16 *)a2;
        goto LABEL_83;
      case 3:
        int v57 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_83;
      case 4:
        int v57 = *(_DWORD *)a2;
LABEL_83:
        if (v55 < 4) {
          v57 |= v52 << (8 * v55);
        }
        unsigned int v50 = v57 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v58 = v17;
  uint64_t v59 = ~v13;
  switch(v50)
  {
    case 0u:
      uint64_t v60 = ~v264;
      uint64_t v234 = ~v260;
      uint64_t v236 = v58;
      unsigned int v226 = v19;
      size_t v224 = v20;
      uint64_t v228 = v18;
      size_t v230 = v21;
      size_t v232 = v21 + 7;
      size_t __na = v30 + 1;
      char v261 = 8 * v34;
      uint64_t v265 = v34;
      unint64_t v61 = *(void (**)(unsigned char *))(v273 + 16);
      uint64_t v274 = v30;
      v61(a1);
      uint64_t v62 = v30;
      unint64_t v63 = (unint64_t)&a1[v258] & v59;
      uint64_t v64 = (unsigned __int8 *)((unint64_t)&a2[v258] & v59);
      unsigned int v65 = v64[v62];
      unsigned int v66 = v65 - 10;
      if (v65 >= 0xA)
      {
        if (v274 <= 3) {
          uint64_t v67 = v274;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            int v68 = *v64;
            goto LABEL_144;
          case 2:
            int v68 = *(unsigned __int16 *)v64;
            goto LABEL_144;
          case 3:
            int v68 = *(unsigned __int16 *)((unint64_t)&a2[v258] & v59) | (*(unsigned __int8 *)(((unint64_t)&a2[v258] & v59)
                                                                                                 + 2) << 16);
            goto LABEL_144;
          case 4:
            int v68 = *(_DWORD *)v64;
LABEL_144:
            if (v274 < 4) {
              unsigned int v65 = (v68 | (v66 << (8 * v274))) + 10;
            }
            else {
              unsigned int v65 = v68 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 0u:
          unint64_t v97 = v31;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v244 + 16))((unint64_t)&a1[v258] & v59, v64, v245);
          *(unsigned char *)(v63 + v274) = 0;
          goto LABEL_206;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v244 + 16))((unint64_t)&a1[v258] & v59, v64, v245);
          *(void *)((v241 + v63) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v64[v241] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v63 + v274) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v97 = v31;
          *(void *)unint64_t v63 = *(void *)v64;
          *(void *)(((unint64_t)&a1[v258] & v59) + 8) = *(void *)(((unint64_t)&a2[v258] & v59) + 8);
          *(void *)(((unint64_t)&a1[v258] & v59) + 0x10) = *(void *)(((unint64_t)&a2[v258] & v59)
                                                                              + 0x10);
          *(unsigned char *)(v63 + v62) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_206;
        case 3u:
          unint64_t v97 = v31;
          *(void *)unint64_t v63 = *(void *)v64;
          *(unsigned char *)(v63 + v62) = 3;
          swift_unknownObjectRetain();
          goto LABEL_206;
        case 4u:
          unint64_t v97 = v31;
          uint64_t v109 = v274;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v242 + 16))((unint64_t)&a1[v258] & v59, v64, v243);
          char v110 = 4;
          goto LABEL_205;
        case 5u:
          unint64_t v97 = v31;
          unsigned int v111 = *(void **)v64;
          *(void *)unint64_t v63 = *(void *)v64;
          *(unsigned char *)(v63 + v62) = 5;
          id v112 = v111;
          goto LABEL_206;
        case 6u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v272 + 16))((unint64_t)&a1[v258] & v59, v64, v246);
          uint64_t v113 = (void *)((v236 + v63) & v234);
          unsigned int v114 = (const void *)((unint64_t)&v64[v236] & v234);
          unint64_t v97 = v31;
          if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v247))
          {
            memcpy(v113, v114, v230);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v238 + 16))(v113, v114, v247);
            __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v247);
          }
          size_t v146 = (void *)(((unint64_t)v113 + v232) & 0xFFFFFFFFFFFFFFF8);
          char v147 = (void *)(((unint64_t)v114 + v232) & 0xFFFFFFFFFFFFFFF8);
          *size_t v146 = *v147;
          v146[1] = v147[1];
          unint64_t v148 = ((unint64_t)v146 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v149 = ((unint64_t)v147 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v150 = *(_DWORD *)v149;
          *(unsigned char *)(v148 + 4) = *(unsigned char *)(v149 + 4);
          *(_DWORD *)unint64_t v148 = v150;
          uint64_t v78 = a1;
          *(unsigned char *)(v63 + v274) = 6;
          goto LABEL_244;
        case 7u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v272 + 16))((unint64_t)&a1[v258] & v59, v64, v246);
          uint64_t v115 = (void *)((v236 + v63) & v234);
          unint64_t v116 = (const void *)((unint64_t)&v64[v236] & v234);
          unint64_t v97 = v31;
          if (__swift_getEnumTagSinglePayload((uint64_t)v116, 1, v247))
          {
            memcpy(v115, v116, v230);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v238 + 16))(v115, v116, v247);
            __swift_storeEnumTagSinglePayload((uint64_t)v115, 0, 1, v247);
          }
          uint64_t v78 = a1;
          int v151 = (void *)(((unint64_t)v115 + v232) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v152 = (void *)(((unint64_t)v116 + v232) & 0xFFFFFFFFFFFFFFF8);
          *int v151 = *v152;
          v151[1] = v152[1];
          unint64_t v153 = ((unint64_t)v151 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v154 = ((unint64_t)v152 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v155 = *(_DWORD *)v154;
          *(unsigned char *)(v153 + 4) = *(unsigned char *)(v154 + 4);
          *(_DWORD *)unint64_t v153 = v155;
          int v156 = (void *)(((v63 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          int v157 = (void *)((((unint64_t)v64 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          *int v156 = *v157;
          v156[1] = v157[1];
          unint64_t v158 = (void *)(((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v159 = (void *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v158 = *v159;
          v158[1] = v159[1];
          unint64_t v160 = (void *)(((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v161 = (void *)(((unint64_t)v159 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v160 = *v161;
          v160[1] = v161[1];
          *(unsigned char *)(v63 + v274) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_244:
          swift_bridgeObjectRetain();
          goto LABEL_264;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v239 + 16))(v63, v64, v240);
          char v126 = (void *)(((v63 | 7) + v254) & 0xFFFFFFFFFFFFFFF8);
          long long v127 = (void *)((((unint64_t)v64 | 7) + v254) & 0xFFFFFFFFFFFFFFF8);
          *char v126 = *v127;
          v126[1] = v127[1];
          unint64_t v128 = ((unint64_t)v126 + v268) & v60;
          uint64_t v129 = ((unint64_t)v127 + v268) & v60;
          swift_bridgeObjectRetain();
          unint64_t v97 = v31;
          if (v25 == v256)
          {
            uint64_t v130 = v25;
            uint64_t v131 = v246;
            uint64_t v132 = v247;
            uint64_t v78 = a1;
            if (!__swift_getEnumTagSinglePayload(v129, v130, v246))
            {
              size_t v133 = (const void *)((v236 + v129) & v234);
              goto LABEL_253;
            }
LABEL_233:
            memcpy((void *)v128, (const void *)v129, v23);
            uint64_t v142 = v274;
            uint64_t v143 = v228;
LABEL_262:
            size_t v187 = v230;
            goto LABEL_263;
          }
          size_t v133 = (const void *)((v236 + v129) & v234);
          if (v252 == v256)
          {
            uint64_t v131 = v246;
            uint64_t v132 = v247;
            uint64_t v78 = a1;
            if (v226 < 2 || __swift_getEnumTagSinglePayload((v236 + v129) & v234, v226, v247) < 2) {
              goto LABEL_253;
            }
            goto LABEL_233;
          }
          unint64_t v178 = *(void *)((((unint64_t)v133 + v232) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v178 >= 0xFFFFFFFF) {
            LODWORD(v178) = -1;
          }
          uint64_t v131 = v246;
          uint64_t v132 = v247;
          uint64_t v78 = a1;
          if ((v178 + 1) >= 2) {
            goto LABEL_233;
          }
LABEL_253:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v272 + 16))(v128, v129, v131);
          uint64_t v179 = (void *)((v236 + v128) & v234);
          if (__swift_getEnumTagSinglePayload((uint64_t)v133, 1, v132))
          {
            memcpy(v179, v133, v230);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v238 + 16))(v179, v133, v132);
            __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v132);
          }
          unint64_t v182 = (void *)(((unint64_t)v179 + v232) & 0xFFFFFFFFFFFFFFF8);
          int v183 = (void *)(((unint64_t)v133 + v232) & 0xFFFFFFFFFFFFFFF8);
          void *v182 = *v183;
          v182[1] = v183[1];
          unint64_t v184 = ((unint64_t)v182 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v185 = ((unint64_t)v183 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v186 = *(_DWORD *)v185;
          *(unsigned char *)(v184 + 4) = *(unsigned char *)(v185 + 4);
          *(_DWORD *)unint64_t v184 = v186;
          swift_bridgeObjectRetain();
          uint64_t v142 = v274;
          uint64_t v143 = v228;
          size_t v187 = v224;
          if (!v226) {
            goto LABEL_262;
          }
LABEL_263:
          unint64_t v188 = (((v143 + v187 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          int v189 = (void *)(((v128 | 7) + v188) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v190 = *(void **)(((v129 | 7) + v188) & 0xFFFFFFFFFFFFFFF8);
          *int v189 = v190;
          *(unsigned char *)(v63 + v142) = 8;
          id v191 = v190;
LABEL_264:
          size_t v108 = __na;
LABEL_265:
          long long v192 = (void *)((((unint64_t)v64 | 7) + v108) & 0xFFFFFFFFFFFFFFF8);
          long long v193 = (void *)(((v63 | 7) + v108) & 0xFFFFFFFFFFFFFFF8);
          *long long v193 = *v192;
          unint64_t v194 = ((unint64_t)v193 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v195 = ((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v196 = *(void *)(v195 + 24);
          swift_bridgeObjectRetain();
          if (v196 < 0xFFFFFFFF)
          {
            long long v197 = *(_OWORD *)v195;
            long long v198 = *(_OWORD *)(v195 + 16);
            *(void *)(v194 + 32) = *(void *)(v195 + 32);
            *(_OWORD *)unint64_t v194 = v197;
            *(_OWORD *)(v194 + 16) = v198;
          }
          else
          {
            *(void *)(v194 + 24) = v196;
            *(void *)(v194 + 32) = *(void *)(v195 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v196 - 8))(v194, v195, v196);
          }
          *(unsigned char *)(v194 + 40) = *(unsigned char *)(v195 + 40);
          if (v265 > 3) {
            goto LABEL_272;
          }
          unsigned int v199 = ((1 << v261) + 1) >> v261;
          uint64_t v200 = 2;
          if (v199 > 0xFFFD) {
            uint64_t v200 = 4;
          }
          if (v199 <= 0xFD) {
LABEL_272:
          }
            uint64_t v200 = 1;
          unint64_t v201 = v200 + v265;
          if (v201 <= v97) {
            unint64_t v201 = v97;
          }
          if (v201 <= 9) {
            unint64_t v201 = 9;
          }
          if (v201 <= 3)
          {
            unsigned int v202 = ((1 << (8 * v201)) + 3) >> (8 * v201);
            if (v202 > 0xFFFB)
            {
              *(_DWORD *)&v78[v201] = 0;
              return v78;
            }
            if (v202 > 0xFB)
            {
              *(_WORD *)&v78[v201] = 0;
              return v78;
            }
          }
          v78[v201] = 0;
          return v78;
        case 9u:
          unint64_t v97 = v31;
          uint64_t v109 = v274;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v46 + 16))((unint64_t)&a1[v258] & v59, v64, v270);
          char v110 = 9;
LABEL_205:
          *(unsigned char *)(v63 + v109) = v110;
LABEL_206:
          size_t v108 = __na;
          goto LABEL_207;
        default:
          unint64_t v97 = v31;
          size_t v108 = __na;
          memcpy((void *)((unint64_t)&a1[v258] & v59), v64, __na);
LABEL_207:
          uint64_t v78 = a1;
          goto LABEL_265;
      }
    case 1u:
      uint64_t v69 = ~v264;
      uint64_t v235 = ~v260;
      uint64_t v237 = v58;
      unsigned int v227 = v19;
      size_t v225 = v20;
      uint64_t v229 = v18;
      size_t v231 = v21;
      size_t v233 = v21 + 7;
      size_t __nb = v30 + 1;
      char v262 = 8 * v34;
      uint64_t v266 = v34;
      unsigned int v70 = *(void (**)(unsigned char *))(v273 + 16);
      uint64_t v275 = v30;
      v70(a1);
      uint64_t v71 = v30;
      unint64_t v72 = (unint64_t)&a1[v258] & v59;
      unint64_t v73 = (unsigned __int8 *)((unint64_t)&a2[v258] & v59);
      unsigned int v74 = v73[v71];
      unsigned int v75 = v74 - 10;
      if (v74 >= 0xA)
      {
        if (v275 <= 3) {
          uint64_t v76 = v275;
        }
        else {
          uint64_t v76 = 4;
        }
        switch(v76)
        {
          case 1:
            int v77 = *v73;
            goto LABEL_152;
          case 2:
            int v77 = *(unsigned __int16 *)v73;
            goto LABEL_152;
          case 3:
            int v77 = *(unsigned __int16 *)((unint64_t)&a2[v258] & v59) | (*(unsigned __int8 *)(((unint64_t)&a2[v258] & v59)
                                                                                                 + 2) << 16);
            goto LABEL_152;
          case 4:
            int v77 = *(_DWORD *)v73;
LABEL_152:
            if (v275 < 4) {
              unsigned int v74 = (v77 | (v75 << (8 * v275))) + 10;
            }
            else {
              unsigned int v74 = v77 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v74)
      {
        case 0u:
          unint64_t v98 = v31;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v244 + 16))((unint64_t)&a1[v258] & v59, v73, v245);
          *(unsigned char *)(v72 + v275) = 0;
          goto LABEL_220;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v244 + 16))((unint64_t)&a1[v258] & v59, v73, v245);
          *(void *)((v241 + v72) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v73[v241] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v72 + v275) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v98 = v31;
          *(void *)unint64_t v72 = *(void *)v73;
          *(void *)(((unint64_t)&a1[v258] & v59) + 8) = *(void *)(((unint64_t)&a2[v258] & v59) + 8);
          *(void *)(((unint64_t)&a1[v258] & v59) + 0x10) = *(void *)(((unint64_t)&a2[v258] & v59)
                                                                              + 0x10);
          *(unsigned char *)(v72 + v71) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_220;
        case 3u:
          unint64_t v98 = v31;
          *(void *)unint64_t v72 = *(void *)v73;
          *(unsigned char *)(v72 + v71) = 3;
          swift_unknownObjectRetain();
          goto LABEL_220;
        case 4u:
          unint64_t v98 = v31;
          uint64_t v118 = v275;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v242 + 16))((unint64_t)&a1[v258] & v59, v73, v243);
          char v119 = 4;
          goto LABEL_219;
        case 5u:
          unint64_t v98 = v31;
          uint64_t v120 = *(void **)v73;
          *(void *)unint64_t v72 = *(void *)v73;
          *(unsigned char *)(v72 + v71) = 5;
          id v121 = v120;
          goto LABEL_220;
        case 6u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v272 + 16))((unint64_t)&a1[v258] & v59, v73, v246);
          uint64_t v122 = (void *)((v237 + v72) & v235);
          unint64_t v123 = (const void *)((unint64_t)&v73[v237] & v235);
          unint64_t v98 = v31;
          if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v247))
          {
            memcpy(v122, v123, v231);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v238 + 16))(v122, v123, v247);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v247);
          }
          int v162 = (void *)(((unint64_t)v122 + v233) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v163 = (void *)(((unint64_t)v123 + v233) & 0xFFFFFFFFFFFFFFF8);
          void *v162 = *v163;
          v162[1] = v163[1];
          unint64_t v164 = ((unint64_t)v162 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v165 = ((unint64_t)v163 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v166 = *(_DWORD *)v165;
          *(unsigned char *)(v164 + 4) = *(unsigned char *)(v165 + 4);
          *(_DWORD *)unint64_t v164 = v166;
          uint64_t v78 = a1;
          *(unsigned char *)(v72 + v275) = 6;
          goto LABEL_249;
        case 7u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v272 + 16))((unint64_t)&a1[v258] & v59, v73, v246);
          unsigned int v124 = (void *)((v237 + v72) & v235);
          unint64_t v125 = (const void *)((unint64_t)&v73[v237] & v235);
          unint64_t v98 = v31;
          if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v247))
          {
            memcpy(v124, v125, v231);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v238 + 16))(v124, v125, v247);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v247);
          }
          uint64_t v78 = a1;
          unint64_t v167 = (void *)(((unint64_t)v124 + v233) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v168 = (void *)(((unint64_t)v125 + v233) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v167 = *v168;
          v167[1] = v168[1];
          unint64_t v169 = ((unint64_t)v167 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = ((unint64_t)v168 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v171 = *(_DWORD *)v170;
          *(unsigned char *)(v169 + 4) = *(unsigned char *)(v170 + 4);
          *(_DWORD *)unint64_t v169 = v171;
          unsigned int v172 = (void *)(((v72 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v173 = (void *)((((unint64_t)v73 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v172 = *v173;
          v172[1] = v173[1];
          unint64_t v174 = (void *)(((unint64_t)v172 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v175 = (void *)(((unint64_t)v173 + 23) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v174 = *v175;
          v174[1] = v175[1];
          unint64_t v176 = (void *)(((unint64_t)v174 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v177 = (void *)(((unint64_t)v175 + 23) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v176 = *v177;
          v176[1] = v177[1];
          *(unsigned char *)(v72 + v275) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_249:
          swift_bridgeObjectRetain();
          goto LABEL_287;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v239 + 16))(v72, v73, v240);
          unint64_t v134 = (void *)(((v72 | 7) + v254) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v135 = (void *)((((unint64_t)v73 | 7) + v254) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v134 = *v135;
          v134[1] = v135[1];
          unint64_t v136 = ((unint64_t)v134 + v268) & v69;
          uint64_t v137 = ((unint64_t)v135 + v268) & v69;
          swift_bridgeObjectRetain();
          unint64_t v98 = v31;
          if (v25 == v256)
          {
            uint64_t v138 = v25;
            uint64_t v139 = v246;
            uint64_t v140 = v247;
            uint64_t v78 = a1;
            if (!__swift_getEnumTagSinglePayload(v137, v138, v246))
            {
              uint64_t v141 = (const void *)((v237 + v137) & v235);
              goto LABEL_258;
            }
          }
          else
          {
            uint64_t v141 = (const void *)((v237 + v137) & v235);
            if (v252 == v256)
            {
              uint64_t v139 = v246;
              uint64_t v140 = v247;
              uint64_t v78 = a1;
              if (v227 < 2 || __swift_getEnumTagSinglePayload((v237 + v137) & v235, v227, v247) < 2) {
                goto LABEL_258;
              }
            }
            else
            {
              unint64_t v180 = *(void *)((((unint64_t)v141 + v233) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v180 >= 0xFFFFFFFF) {
                LODWORD(v180) = -1;
              }
              uint64_t v139 = v246;
              uint64_t v140 = v247;
              uint64_t v78 = a1;
              if ((v180 + 1) < 2)
              {
LABEL_258:
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v272 + 16))(v136, v137, v139);
                unint64_t v181 = (void *)((v237 + v136) & v235);
                if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v140))
                {
                  memcpy(v181, v141, v231);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v238 + 16))(v181, v141, v140);
                  __swift_storeEnumTagSinglePayload((uint64_t)v181, 0, 1, v140);
                }
                long long v203 = (void *)(((unint64_t)v181 + v233) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v204 = (void *)(((unint64_t)v141 + v233) & 0xFFFFFFFFFFFFFFF8);
                *long long v203 = *v204;
                v203[1] = v204[1];
                unint64_t v205 = ((unint64_t)v203 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v206 = ((unint64_t)v204 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v207 = *(_DWORD *)v206;
                *(unsigned char *)(v205 + 4) = *(unsigned char *)(v206 + 4);
                *(_DWORD *)unint64_t v205 = v207;
                swift_bridgeObjectRetain();
                uint64_t v144 = v275;
                uint64_t v145 = v229;
                size_t v208 = v225;
                if (!v227) {
                  goto LABEL_285;
                }
LABEL_286:
                unint64_t v209 = (((v145 + v208 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                unint64_t v210 = (void *)(((v136 | 7) + v209) & 0xFFFFFFFFFFFFFFF8);
                size_t v211 = *(void **)(((v137 | 7) + v209) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v210 = v211;
                *(unsigned char *)(v72 + v144) = 8;
                id v212 = v211;
LABEL_287:
                size_t v117 = __nb;
LABEL_288:
                unint64_t v213 = (void *)((((unint64_t)v73 | 7) + v117) & 0xFFFFFFFFFFFFFFF8);
                unsigned int v214 = (void *)(((v72 | 7) + v117) & 0xFFFFFFFFFFFFFFF8);
                *unsigned int v214 = *v213;
                unint64_t v215 = ((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v216 = ((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v217 = *(void *)(v216 + 24);
                swift_bridgeObjectRetain();
                if (v217 < 0xFFFFFFFF)
                {
                  long long v218 = *(_OWORD *)v216;
                  long long v219 = *(_OWORD *)(v216 + 16);
                  *(void *)(v215 + 32) = *(void *)(v216 + 32);
                  *(_OWORD *)unint64_t v215 = v218;
                  *(_OWORD *)(v215 + 16) = v219;
                }
                else
                {
                  *(void *)(v215 + 24) = v217;
                  *(void *)(v215 + 32) = *(void *)(v216 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v217 - 8))(v215, v216, v217);
                }
                *(unsigned char *)(v215 + 40) = *(unsigned char *)(v216 + 40);
                if (v266 > 3) {
                  goto LABEL_295;
                }
                unsigned int v220 = ((1 << v262) + 1) >> v262;
                uint64_t v221 = 2;
                if (v220 > 0xFFFD) {
                  uint64_t v221 = 4;
                }
                if (v220 <= 0xFD) {
LABEL_295:
                }
                  uint64_t v221 = 1;
                unint64_t v85 = v221 + v266;
                if (v85 <= v98) {
                  unint64_t v85 = v98;
                }
                if (v85 <= 9) {
                  unint64_t v85 = 9;
                }
                if (v85 > 3) {
                  goto LABEL_303;
                }
                int v93 = 1;
                unsigned int v222 = ((1 << (8 * v85)) + 3) >> (8 * v85);
                if (v222 <= 0xFFFB)
                {
                  if (v222 <= 0xFB)
                  {
LABEL_303:
                    char v87 = 1;
                    goto LABEL_304;
                  }
LABEL_306:
                  *(_WORD *)&v78[v85] = v93;
                  return v78;
                }
LABEL_305:
                *(_DWORD *)&v78[v85] = v93;
                return v78;
              }
            }
          }
          memcpy((void *)v136, (const void *)v137, v23);
          uint64_t v144 = v275;
          uint64_t v145 = v229;
LABEL_285:
          size_t v208 = v231;
          goto LABEL_286;
        case 9u:
          unint64_t v98 = v31;
          uint64_t v118 = v275;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v46 + 16))((unint64_t)&a1[v258] & v59, v73, v270);
          char v119 = 9;
LABEL_219:
          *(unsigned char *)(v72 + v118) = v119;
LABEL_220:
          size_t v117 = __nb;
          goto LABEL_221;
        default:
          unint64_t v98 = v31;
          size_t v117 = __nb;
          memcpy((void *)((unint64_t)&a1[v258] & v59), v73, __nb);
LABEL_221:
          uint64_t v78 = a1;
          goto LABEL_288;
      }
    case 2u:
      uint64_t v78 = a1;
      if (v34 > 3) {
        goto LABEL_102;
      }
      unsigned int v79 = ((1 << v35) + 1) >> v35;
      if (v79 > 0xFFFD)
      {
        unsigned int v80 = *(_DWORD *)&a2[v34];
      }
      else if (v79 > 0xFD)
      {
        unsigned int v80 = *(unsigned __int16 *)&a2[v34];
      }
      else
      {
LABEL_102:
        unsigned int v80 = a2[v34];
      }
      unsigned int v94 = v80 - 2;
      if (v80 >= 2)
      {
        if (v34 <= 3) {
          uint64_t v95 = v34;
        }
        else {
          uint64_t v95 = 4;
        }
        switch(v95)
        {
          case 1:
            int v96 = *a2;
            goto LABEL_160;
          case 2:
            int v96 = *(unsigned __int16 *)a2;
            goto LABEL_160;
          case 3:
            int v96 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_160;
          case 4:
            int v96 = *(_DWORD *)a2;
LABEL_160:
            if (v34 < 4) {
              v96 |= v94 << v35;
            }
            unsigned int v80 = v96 + 2;
            break;
          default:
            break;
        }
      }
      if (v80 == 1)
      {
        uint64_t v100 = *(void *)a2;
        id v101 = *(id *)a2;
        *(void *)a1 = v100;
        a1[8] = a2[8];
        if (v34 <= 3)
        {
          unsigned int v102 = ((1 << v35) + 1) >> v35;
          if (v102 > 0xFFFD)
          {
            *(_DWORD *)&a1[v34] = 1;
            goto LABEL_180;
          }
          if (v102 > 0xFD)
          {
            *(_WORD *)&a1[v34] = 1;
            goto LABEL_180;
          }
        }
        a1[v34] = 1;
      }
      else
      {
        if (!v80)
        {
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v33 + 16))(a1, a2, v32);
          if (v34 > 3)
          {
LABEL_168:
            a1[v34] = 0;
            goto LABEL_179;
          }
          unsigned int v99 = ((1 << v35) + 1) >> v35;
          if (v99 > 0xFFFD)
          {
            *(_DWORD *)&a1[v34] = 0;
          }
          else
          {
            if (v99 <= 0xFD) {
              goto LABEL_168;
            }
            *(_WORD *)&a1[v34] = 0;
          }
LABEL_180:
          unsigned int v105 = ((1 << v35) + 1) >> v35;
          uint64_t v106 = 2;
          if (v105 > 0xFFFD) {
            uint64_t v106 = 4;
          }
          if (v105 > 0xFD)
          {
LABEL_184:
            unint64_t v85 = v106 + v34;
            if (v85 <= v31) {
              unint64_t v85 = v31;
            }
            if (v85 <= 9) {
              unint64_t v85 = 9;
            }
            if (v85 <= 3)
            {
              unsigned int v107 = ((1 << (8 * v85)) + 3) >> (8 * v85);
              if (v107 > 0xFFFB)
              {
                int v93 = 2;
                goto LABEL_305;
              }
              if (v107 > 0xFB)
              {
                LOWORD(v93) = 2;
                goto LABEL_306;
              }
            }
            char v87 = 2;
LABEL_304:
            v78[v85] = v87;
            return v78;
          }
LABEL_183:
          uint64_t v106 = 1;
          goto LABEL_184;
        }
        if (v34 > 3) {
          goto LABEL_177;
        }
        unsigned int v103 = ((1 << v35) + 1) >> v35;
        uint64_t v104 = 2;
        if (v103 > 0xFFFD) {
          uint64_t v104 = 4;
        }
        if (v103 <= 0xFD) {
LABEL_177:
        }
          uint64_t v104 = 1;
        memcpy(a1, a2, v104 + v34);
      }
LABEL_179:
      if (v34 > 3) {
        goto LABEL_183;
      }
      goto LABEL_180;
    case 3u:
      id v81 = *(id *)a2;
      id v82 = *(id *)a2;
      uint64_t v78 = a1;
      *(void *)a1 = v81;
      a1[8] = a2[8];
      if (v34 > 3) {
        goto LABEL_107;
      }
      unsigned int v83 = ((1 << (8 * v34)) + 1) >> (8 * v34);
      uint64_t v84 = 2;
      if (v83 > 0xFFFD) {
        uint64_t v84 = 4;
      }
      if (v83 <= 0xFD) {
LABEL_107:
      }
        uint64_t v84 = 1;
      unint64_t v85 = v84 + v34;
      if (v85 <= v31) {
        unint64_t v85 = v31;
      }
      if (v85 <= 9) {
        unint64_t v85 = 9;
      }
      if (v85 > 3) {
        goto LABEL_115;
      }
      unsigned int v86 = ((1 << (8 * v85)) + 3) >> (8 * v85);
      if (v86 > 0xFFFB)
      {
        int v93 = 3;
        goto LABEL_305;
      }
      if (v86 <= 0xFB)
      {
LABEL_115:
        char v87 = 3;
        goto LABEL_304;
      }
      LOWORD(v93) = 3;
      goto LABEL_306;
    default:
      if (v34 > 3) {
        goto LABEL_120;
      }
      unsigned int v88 = ((1 << v35) + 1) >> v35;
      uint64_t v89 = 2;
      if (v88 > 0xFFFD) {
        uint64_t v89 = 4;
      }
      if (v88 <= 0xFD) {
LABEL_120:
      }
        uint64_t v89 = 1;
      uint64_t v78 = a1;
      unint64_t v90 = v89 + v34;
      if (v90 <= v31) {
        unint64_t v90 = v31;
      }
      if (v90 <= 9) {
        unint64_t v90 = 9;
      }
      if (v90 > 3) {
        goto LABEL_129;
      }
      unsigned int v91 = ((1 << (8 * v90)) + 3) >> (8 * v90);
      uint64_t v92 = 2;
      if (v91 > 0xFFFB) {
        uint64_t v92 = 4;
      }
      if (v91 <= 0xFB) {
LABEL_129:
      }
        uint64_t v92 = 1;
      memcpy(a1, a2, v92 + v90);
      return v78;
  }
}

unsigned char *sub_1C99A10CC(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v243 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v255 = *(void *)(v243 + 64);
  uint64_t v240 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v240 + 80);
  uint64_t v253 = *(void *)(sub_1C9BEAC48() - 8);
  uint64_t v239 = v253;
  int v244 = *(_DWORD *)(v253 + 80) | v3;
  uint64_t v242 = sub_1C9BEAF18();
  uint64_t v251 = *(void *)(v242 - 8);
  uint64_t v260 = v251;
  int v4 = *(_DWORD *)(v251 + 80) & 0xF8;
  uint64_t v241 = sub_1C9BEAE48();
  uint64_t v5 = *(void *)(v241 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v246 = *(void *)(sub_1C9BEC928() - 8);
  uint64_t v238 = v246;
  int v8 = *(_DWORD *)(v246 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v248 = v9;
  uint64_t v10 = (v244 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = v255 + v10;
  unint64_t v12 = *(void *)(v240 + 64);
  unint64_t v245 = v12 + 7;
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v253 + 64)) {
    unint64_t v12 = *(void *)(v253 + 64);
  }
  if (v12 <= 0x18) {
    unint64_t v13 = 24;
  }
  else {
    unint64_t v13 = v12;
  }
  uint64_t v256 = *(void *)(v251 + 64) + v6;
  uint64_t v14 = v6;
  uint64_t v15 = v256 & ~v6;
  uint64_t v237 = v5;
  unsigned int v16 = *(_DWORD *)(v5 + 84);
  size_t v17 = *(void *)(v5 + 64);
  if (v16) {
    size_t v18 = *(void *)(v5 + 64);
  }
  else {
    size_t v18 = v17 + 1;
  }
  unint64_t v19 = (v18 + 7 + v15) & 0xFFFFFFFFFFFFFFF8;
  size_t v20 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v20 <= v13) {
    unint64_t v21 = v13;
  }
  else {
    unint64_t v21 = (v19 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v22 = v19 + 31;
  unint64_t v23 = ((((v22 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v23 + 16;
  if (v23 + 16 > v21) {
    unint64_t v21 = v23 + 16;
  }
  uint64_t v247 = *(void *)(v246 + 64);
  uint64_t v252 = v7 + 16;
  uint64_t v25 = v4 | v6 | 7;
  unint64_t v26 = (v7 + 16 + ((v247 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  uint64_t v27 = *(unsigned int *)(v260 + 84);
  if (v16) {
    unsigned int v28 = v16 - 1;
  }
  else {
    unsigned int v28 = 0;
  }
  if (v28 <= v27) {
    unsigned int v29 = *(_DWORD *)(v260 + 84);
  }
  else {
    unsigned int v29 = v28;
  }
  if (v29 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  unsigned int v254 = v29;
  unint64_t v30 = (v22 + v26) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = v30 + 8;
  if (v30 + 8 <= v21) {
    unint64_t v32 = v21;
  }
  else {
    unint64_t v32 = v30 + 8;
  }
  unint64_t v33 = *(void *)(v9 + 64);
  if (v33 <= v32) {
    unint64_t v34 = v32;
  }
  else {
    unint64_t v34 = *(void *)(v9 + 64);
  }
  unint64_t v35 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v36 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v36 + 64) <= 9uLL) {
    uint64_t v37 = 9;
  }
  else {
    uint64_t v37 = *(void *)(v36 + 64);
  }
  char v38 = 8 * v37;
  if (v37 > 3) {
    goto LABEL_37;
  }
  unsigned int v39 = ((1 << v38) + 1) >> v38;
  uint64_t v40 = 2;
  if (v39 > 0xFFFD) {
    uint64_t v40 = 4;
  }
  if (v39 <= 0xFD) {
LABEL_37:
  }
    uint64_t v40 = 1;
  unint64_t v41 = v40 + v37;
  if (v41 <= v35) {
    unint64_t v41 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v41 <= 9) {
    unint64_t v41 = 9;
  }
  int v42 = a2;
  if (v41 > 3) {
    goto LABEL_43;
  }
  unsigned int v44 = ((1 << (8 * v41)) + 3) >> (8 * v41);
  if (v44 > 0xFFFB)
  {
    unsigned int v43 = *(_DWORD *)&a2[v41];
  }
  else
  {
    if (v44 <= 0xFB)
    {
LABEL_43:
      unsigned int v43 = a2[v41];
      goto LABEL_48;
    }
    unsigned int v43 = *(unsigned __int16 *)&a2[v41];
  }
LABEL_48:
  unsigned int v45 = v43 - 4;
  if (v43 >= 4)
  {
    if (v37 > 3) {
      goto LABEL_53;
    }
    unsigned int v46 = ((1 << v38) + 1) >> v38;
    uint64_t v47 = 2;
    if (v46 > 0xFFFD) {
      uint64_t v47 = 4;
    }
    int v42 = a2;
    if (v46 <= 0xFD) {
LABEL_53:
    }
      uint64_t v47 = 1;
    unint64_t v48 = v47 + v37;
    if (v48 <= v35) {
      unint64_t v48 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v48 <= 9) {
      LODWORD(v48) = 9;
    }
    if (v48 <= 3) {
      uint64_t v49 = v48;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *v42;
        goto LABEL_66;
      case 2:
        int v50 = *(unsigned __int16 *)v42;
        goto LABEL_66;
      case 3:
        int v50 = *(unsigned __int16 *)v42 | (v42[2] << 16);
        goto LABEL_66;
      case 4:
        int v50 = *(_DWORD *)v42;
LABEL_66:
        if (v48 < 4) {
          v50 |= v45 << (8 * v48);
        }
        unsigned int v43 = v50 + 4;
        break;
      default:
        break;
    }
  }
  size_t v262 = v17;
  uint64_t v51 = ~v10;
  uint64_t v52 = ~v25;
  switch(v43)
  {
    case 0u:
      uint64_t v53 = v37;
      size_t v229 = v18 + 7;
      uint64_t v231 = ~v14;
      uint64_t v217 = v15;
      unint64_t v219 = v33;
      unint64_t v221 = v31;
      unint64_t v223 = v24;
      unint64_t v225 = v13;
      size_t v227 = v18;
      size_t __n = v34 + 1;
      char v235 = 8 * v37;
      unint64_t v258 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      uint64_t v54 = v42;
      (*(void (**)(unsigned char *))(v243 + 32))(a1);
      unint64_t v55 = (unint64_t)&a1[v11] & v51;
      unint64_t v56 = (unint64_t)&v54[v11] & v51;
      unsigned int v57 = *(unsigned __int8 *)(v56 + v34);
      unsigned int v58 = v57 - 10;
      if (v57 >= 0xA)
      {
        if (v34 <= 3) {
          uint64_t v59 = v34;
        }
        else {
          uint64_t v59 = 4;
        }
        switch(v59)
        {
          case 1:
            int v60 = *(unsigned __int8 *)v56;
            goto LABEL_127;
          case 2:
            int v60 = *(unsigned __int16 *)v56;
            goto LABEL_127;
          case 3:
            int v60 = *(unsigned __int16 *)v56 | (*(unsigned __int8 *)(((unint64_t)&v54[v11] & v51) + 2) << 16);
            goto LABEL_127;
          case 4:
            int v60 = *(_DWORD *)v56;
LABEL_127:
            if (v34 < 4) {
              unsigned int v57 = (v60 | (v58 << (8 * v34))) + 10;
            }
            else {
              unsigned int v57 = v60 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v57)
      {
        case 0u:
          (*(void (**)(void))(v240 + 32))();
          unint64_t v55 = (unint64_t)&a1[v11] & v51;
          *(unsigned char *)(v55 + v34) = 0;
          goto LABEL_191;
        case 1u:
          unsigned int v99 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          (*(void (**)(void))(v240 + 32))();
          unint64_t v55 = (unint64_t)v99;
          *(void *)(((unint64_t)v99 + v245) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v245 + v56) & 0xFFFFFFFFFFFFFFF8);
          char v100 = 1;
          goto LABEL_190;
        case 2u:
          long long v101 = *(_OWORD *)v56;
          *(void *)(((unint64_t)&a1[v11] & v51) + 0x10) = *(void *)(((unint64_t)&v54[v11] & v51) + 0x10);
          *(_OWORD *)unint64_t v55 = v101;
          char v102 = 2;
          goto LABEL_184;
        case 3u:
          *(void *)unint64_t v55 = *(void *)v56;
          char v102 = 3;
          goto LABEL_184;
        case 4u:
          unsigned int v99 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          (*(void (**)(void))(v239 + 32))();
          unint64_t v55 = (unint64_t)v99;
          char v100 = 4;
          goto LABEL_190;
        case 5u:
          *(void *)unint64_t v55 = *(void *)v56;
          char v102 = 5;
LABEL_184:
          *(unsigned char *)(v55 + v34) = v102;
          goto LABEL_191;
        case 6u:
          (*(void (**)(void))(v260 + 32))();
          unsigned int v103 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          uint64_t v104 = (void *)(((unint64_t)v103 + v256) & v231);
          unsigned int v105 = (const void *)((v256 + v56) & v231);
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v241))
          {
            memcpy(v104, v105, v227);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v237 + 32))(v104, v105, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v241);
          }
          uint64_t v69 = a1;
          unint64_t v167 = (_OWORD *)(((unint64_t)v104 + v229) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v168 = (_OWORD *)(((unint64_t)v105 + v229) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v167 = *v168;
          unint64_t v169 = ((unint64_t)v167 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = ((unint64_t)v168 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v171 = *(_DWORD *)v170;
          *(unsigned char *)(v169 + 4) = *(unsigned char *)(v170 + 4);
          *(_DWORD *)unint64_t v169 = v171;
          unint64_t v55 = (unint64_t)v103;
          *((unsigned char *)v103 + v34) = 6;
          goto LABEL_192;
        case 7u:
          (*(void (**)(void))(v260 + 32))();
          unint64_t v106 = (unint64_t)&a1[v11] & v51;
          unsigned int v107 = (void *)((v256 + v106) & v231);
          size_t v108 = (const void *)((v256 + v56) & v231);
          if (__swift_getEnumTagSinglePayload((uint64_t)v108, 1, v241))
          {
            memcpy(v107, v108, v227);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v237 + 32))(v107, v108, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v241);
          }
          uint64_t v69 = a1;
          unsigned int v172 = (_OWORD *)(((unint64_t)v107 + v229) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v173 = (_OWORD *)(((unint64_t)v108 + v229) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v172 = *v173;
          unint64_t v174 = ((unint64_t)v172 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v175 = ((unint64_t)v173 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v176 = *(_DWORD *)v175;
          *(unsigned char *)(v174 + 4) = *(unsigned char *)(v175 + 4);
          *(_DWORD *)unint64_t v174 = v176;
          unint64_t v55 = v106;
          unint64_t v177 = (_OWORD *)(((v106 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v178 = (_OWORD *)(((v56 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v177 = *v178;
          uint64_t v179 = (_OWORD *)(((unint64_t)v177 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v180 = (_OWORD *)(((unint64_t)v178 + 23) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v179 = *v180;
          *(_OWORD *)(((unint64_t)v179 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v106 + v34) = 7;
          goto LABEL_192;
        case 8u:
          unint64_t v249 = (unint64_t)&a1[v11] & v51;
          (*(void (**)(void))(v238 + 32))();
          uint64_t v141 = (_OWORD *)(((v249 | 7) + v247) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v142 = (_OWORD *)(((v56 | 7) + v247) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v141 = *v142;
          unint64_t v143 = ((unint64_t)v141 + v252) & v52;
          uint64_t v144 = ((unint64_t)v142 + v252) & v52;
          if (v27 == v254)
          {
            int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v144, v27, v242);
            uint64_t v69 = a1;
            uint64_t v146 = v241;
            if (!EnumTagSinglePayload)
            {
              char v147 = (const void *)((v256 + v144) & v231);
              goto LABEL_269;
            }
LABEL_251:
            memcpy((void *)v143, (const void *)v144, v20);
            char v98 = v235;
            size_t v97 = __n;
            unint64_t v156 = v225;
            size_t v155 = v227;
            unint64_t v158 = v221;
            unint64_t v157 = v223;
            uint64_t v160 = v217;
            unint64_t v159 = v219;
            unint64_t v55 = v249;
LABEL_278:
            size_t v199 = v155;
            goto LABEL_279;
          }
          char v147 = (const void *)((v256 + v144) & v231);
          uint64_t v69 = a1;
          uint64_t v146 = v241;
          if (v28 == v254)
          {
            if (v16 < 2 || __swift_getEnumTagSinglePayload((v256 + v144) & v231, v16, v241) < 2) {
              goto LABEL_269;
            }
            goto LABEL_251;
          }
          unint64_t v195 = *(void *)((((unint64_t)v147 + v229) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v195 >= 0xFFFFFFFF) {
            LODWORD(v195) = -1;
          }
          if ((v195 + 1) >= 2) {
            goto LABEL_251;
          }
LABEL_269:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v260 + 32))(v143, v144, v242);
          unint64_t v196 = (void *)((v256 + v143) & v231);
          if (__swift_getEnumTagSinglePayload((uint64_t)v147, 1, v146))
          {
            memcpy(v196, v147, v227);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v237 + 32))(v196, v147, v146);
            __swift_storeEnumTagSinglePayload((uint64_t)v196, 0, 1, v146);
          }
          size_t v199 = v262;
          size_t v155 = v227;
          uint64_t v200 = (_OWORD *)(((unint64_t)v196 + v229) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v201 = (_OWORD *)(((unint64_t)v147 + v229) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v200 = *v201;
          unint64_t v202 = ((unint64_t)v201 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v203 = *(_DWORD *)v202;
          unint64_t v204 = ((unint64_t)v200 + 19) & 0xFFFFFFFFFFFFFFF8;
          *(unsigned char *)(v204 + 4) = *(unsigned char *)(v202 + 4);
          *(_DWORD *)unint64_t v204 = v203;
          char v98 = v235;
          size_t v97 = __n;
          unint64_t v157 = v223;
          unint64_t v156 = v225;
          unint64_t v159 = v219;
          unint64_t v158 = v221;
          uint64_t v160 = v217;
          unint64_t v55 = v249;
          if (!v16) {
            goto LABEL_278;
          }
LABEL_279:
          uint64_t v205 = v160 + 7;
          unint64_t v206 = (((v205 + v199) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          *(void *)(((v143 | 7) + v206) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v144 | 7) + v206) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v207 = (((v205 + v155) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          if (v207 <= v156) {
            unint64_t v207 = v156;
          }
          if (v157 > v207) {
            unint64_t v207 = v157;
          }
          if (v158 > v207) {
            unint64_t v207 = v158;
          }
          if (v159 > v207) {
            unint64_t v207 = v159;
          }
          *(unsigned char *)(v55 + v207) = 8;
LABEL_193:
          uint64_t v109 = (void *)(((v55 | 7) + v97) & 0xFFFFFFFFFFFFFFF8);
          char v110 = (void *)(((v56 | 7) + v97) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v109 = *v110;
          unint64_t v111 = ((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v112 = ((unint64_t)v110 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v113 = *(_OWORD *)v112;
          long long v114 = *(_OWORD *)(v112 + 16);
          *(void *)(v111 + 32) = *(void *)(v112 + 32);
          *(_OWORD *)unint64_t v111 = v113;
          *(_OWORD *)(v111 + 16) = v114;
          *(unsigned char *)(v111 + 40) = *(unsigned char *)(v112 + 40);
          if (v53 > 3) {
            goto LABEL_197;
          }
          unsigned int v115 = ((1 << v98) + 1) >> v98;
          uint64_t v116 = 2;
          if (v115 > 0xFFFD) {
            uint64_t v116 = 4;
          }
          if (v115 <= 0xFD) {
LABEL_197:
          }
            uint64_t v116 = 1;
          unint64_t v117 = v116 + v53;
          if (v117 <= v258) {
            unint64_t v117 = v258;
          }
          if (v117 <= 9) {
            unint64_t v117 = 9;
          }
          if (v117 <= 3)
          {
            unsigned int v118 = ((1 << (8 * v117)) + 3) >> (8 * v117);
            if (v118 > 0xFFFB)
            {
              *(_DWORD *)&v69[v117] = 0;
              return v69;
            }
            if (v118 > 0xFB)
            {
              *(_WORD *)&v69[v117] = 0;
              return v69;
            }
          }
          v69[v117] = 0;
          return v69;
        case 9u:
          unsigned int v99 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          (*(void (**)(void))(v248 + 32))();
          unint64_t v55 = (unint64_t)v99;
          char v100 = 9;
LABEL_190:
          *((unsigned char *)v99 + v34) = v100;
LABEL_191:
          uint64_t v69 = a1;
LABEL_192:
          char v98 = v235;
          size_t v97 = v34 + 1;
          goto LABEL_193;
        default:
          size_t v97 = v34 + 1;
          memcpy((void *)v55, (const void *)((unint64_t)&v54[v11] & v51), __n);
          unint64_t v55 = (unint64_t)&a1[v11] & v51;
          uint64_t v69 = a1;
          char v98 = v235;
          goto LABEL_193;
      }
    case 1u:
      uint64_t v61 = v37;
      size_t v230 = v18 + 7;
      uint64_t v232 = ~v14;
      uint64_t v218 = v15;
      unint64_t v220 = v33;
      unint64_t v222 = v31;
      unint64_t v224 = v24;
      unint64_t v226 = v13;
      size_t v228 = v18;
      size_t __na = v34 + 1;
      char v236 = 8 * v37;
      unint64_t v259 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      uint64_t v62 = v42;
      (*(void (**)(unsigned char *))(v243 + 32))(a1);
      unint64_t v63 = (unint64_t)&a1[v11] & v51;
      unint64_t v64 = (unint64_t)&v62[v11] & v51;
      unsigned int v65 = *(unsigned __int8 *)(v64 + v34);
      unsigned int v66 = v65 - 10;
      if (v65 >= 0xA)
      {
        if (v34 <= 3) {
          uint64_t v67 = v34;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            int v68 = *(unsigned __int8 *)v64;
            goto LABEL_135;
          case 2:
            int v68 = *(unsigned __int16 *)v64;
            goto LABEL_135;
          case 3:
            int v68 = *(unsigned __int16 *)v64 | (*(unsigned __int8 *)(((unint64_t)&v62[v11] & v51) + 2) << 16);
            goto LABEL_135;
          case 4:
            int v68 = *(_DWORD *)v64;
LABEL_135:
            if (v34 < 4) {
              unsigned int v65 = (v68 | (v66 << (8 * v34))) + 10;
            }
            else {
              unsigned int v65 = v68 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 0u:
          (*(void (**)(void))(v240 + 32))();
          unint64_t v63 = (unint64_t)&a1[v11] & v51;
          *(unsigned char *)(v63 + v34) = 0;
          goto LABEL_221;
        case 1u:
          id v121 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          (*(void (**)(void))(v240 + 32))();
          unint64_t v63 = (unint64_t)v121;
          *(void *)(((unint64_t)v121 + v245) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v245 + v64) & 0xFFFFFFFFFFFFFFF8);
          char v122 = 1;
          goto LABEL_220;
        case 2u:
          long long v123 = *(_OWORD *)v64;
          *(void *)(((unint64_t)&a1[v11] & v51) + 0x10) = *(void *)(((unint64_t)&v62[v11] & v51) + 0x10);
          *(_OWORD *)unint64_t v63 = v123;
          char v124 = 2;
          goto LABEL_214;
        case 3u:
          *(void *)unint64_t v63 = *(void *)v64;
          char v124 = 3;
          goto LABEL_214;
        case 4u:
          id v121 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          (*(void (**)(void))(v239 + 32))();
          unint64_t v63 = (unint64_t)v121;
          char v122 = 4;
          goto LABEL_220;
        case 5u:
          *(void *)unint64_t v63 = *(void *)v64;
          char v124 = 5;
LABEL_214:
          *(unsigned char *)(v63 + v34) = v124;
          goto LABEL_221;
        case 6u:
          (*(void (**)(void))(v260 + 32))();
          unint64_t v125 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          char v126 = (void *)(((unint64_t)v125 + v256) & v232);
          long long v127 = (const void *)((v256 + v64) & v232);
          if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v241))
          {
            memcpy(v126, v127, v228);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v237 + 32))(v126, v127, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v126, 0, 1, v241);
          }
          uint64_t v69 = a1;
          unint64_t v181 = (_OWORD *)(((unint64_t)v126 + v230) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v182 = (_OWORD *)(((unint64_t)v127 + v230) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v181 = *v182;
          unint64_t v183 = ((unint64_t)v181 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v184 = ((unint64_t)v182 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v185 = *(_DWORD *)v184;
          *(unsigned char *)(v183 + 4) = *(unsigned char *)(v184 + 4);
          *(_DWORD *)unint64_t v183 = v185;
          unint64_t v63 = (unint64_t)v125;
          *((unsigned char *)v125 + v34) = 6;
          goto LABEL_222;
        case 7u:
          (*(void (**)(void))(v260 + 32))();
          unint64_t v128 = (unint64_t)&a1[v11] & v51;
          uint64_t v129 = (void *)((v256 + v128) & v232);
          uint64_t v130 = (const void *)((v256 + v64) & v232);
          if (__swift_getEnumTagSinglePayload((uint64_t)v130, 1, v241))
          {
            memcpy(v129, v130, v228);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v237 + 32))(v129, v130, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v241);
          }
          uint64_t v69 = a1;
          int v186 = (_OWORD *)(((unint64_t)v129 + v230) & 0xFFFFFFFFFFFFFFF8);
          size_t v187 = (_OWORD *)(((unint64_t)v130 + v230) & 0xFFFFFFFFFFFFFFF8);
          *int v186 = *v187;
          unint64_t v188 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v189 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v190 = *(_DWORD *)v189;
          *(unsigned char *)(v188 + 4) = *(unsigned char *)(v189 + 4);
          *(_DWORD *)unint64_t v188 = v190;
          unint64_t v63 = v128;
          id v191 = (_OWORD *)(((v128 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          long long v192 = (_OWORD *)(((v64 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
          *id v191 = *v192;
          long long v193 = (_OWORD *)(((unint64_t)v191 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v194 = (_OWORD *)(((unint64_t)v192 + 23) & 0xFFFFFFFFFFFFFFF8);
          *long long v193 = *v194;
          *(_OWORD *)(((unint64_t)v193 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v194 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v128 + v34) = 7;
          goto LABEL_222;
        case 8u:
          unint64_t v250 = (unint64_t)&a1[v11] & v51;
          (*(void (**)(void))(v238 + 32))();
          unint64_t v148 = (_OWORD *)(((v250 | 7) + v247) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v149 = (_OWORD *)(((v64 | 7) + v247) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v148 = *v149;
          unint64_t v150 = ((unint64_t)v148 + v252) & v52;
          uint64_t v151 = ((unint64_t)v149 + v252) & v52;
          if (v27 == v254)
          {
            int v152 = __swift_getEnumTagSinglePayload(v151, v27, v242);
            uint64_t v69 = a1;
            uint64_t v153 = v241;
            if (!v152)
            {
              unint64_t v154 = (const void *)((v256 + v151) & v232);
              goto LABEL_274;
            }
          }
          else
          {
            unint64_t v154 = (const void *)((v256 + v151) & v232);
            uint64_t v69 = a1;
            uint64_t v153 = v241;
            if (v28 == v254)
            {
              if (v16 < 2 || __swift_getEnumTagSinglePayload((v256 + v151) & v232, v16, v241) < 2) {
                goto LABEL_274;
              }
            }
            else
            {
              unint64_t v197 = *(void *)((((unint64_t)v154 + v230) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v197 >= 0xFFFFFFFF) {
                LODWORD(v197) = -1;
              }
              if ((v197 + 1) < 2)
              {
LABEL_274:
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v260 + 32))(v150, v151, v242);
                long long v198 = (void *)((v256 + v150) & v232);
                if (__swift_getEnumTagSinglePayload((uint64_t)v154, 1, v153))
                {
                  memcpy(v198, v154, v228);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v237 + 32))(v198, v154, v153);
                  __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v153);
                }
                size_t v208 = v262;
                size_t v161 = v228;
                unint64_t v209 = (_OWORD *)(((unint64_t)v198 + v230) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v210 = (_OWORD *)(((unint64_t)v154 + v230) & 0xFFFFFFFFFFFFFFF8);
                _OWORD *v209 = *v210;
                unint64_t v211 = ((unint64_t)v210 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v212 = *(_DWORD *)v211;
                unint64_t v213 = ((unint64_t)v209 + 19) & 0xFFFFFFFFFFFFFFF8;
                *(unsigned char *)(v213 + 4) = *(unsigned char *)(v211 + 4);
                *(_DWORD *)unint64_t v213 = v212;
                char v120 = v236;
                size_t v119 = __na;
                unint64_t v163 = v224;
                unint64_t v162 = v226;
                unint64_t v165 = v220;
                unint64_t v164 = v222;
                uint64_t v166 = v218;
                unint64_t v63 = v250;
                if (!v16) {
                  goto LABEL_290;
                }
LABEL_291:
                uint64_t v214 = v166 + 7;
                unint64_t v215 = (((v214 + v208) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                *(void *)(((v150 | 7) + v215) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v151 | 7) + v215) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v216 = (((v214 + v161) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                if (v216 <= v162) {
                  unint64_t v216 = v162;
                }
                if (v163 > v216) {
                  unint64_t v216 = v163;
                }
                if (v164 > v216) {
                  unint64_t v216 = v164;
                }
                if (v165 > v216) {
                  unint64_t v216 = v165;
                }
                *(unsigned char *)(v63 + v216) = 8;
LABEL_223:
                uint64_t v131 = (void *)(((v63 | 7) + v119) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v132 = (void *)(((v64 | 7) + v119) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v131 = *v132;
                unint64_t v133 = ((unint64_t)v131 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v134 = ((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8;
                long long v135 = *(_OWORD *)v134;
                long long v136 = *(_OWORD *)(v134 + 16);
                *(void *)(v133 + 32) = *(void *)(v134 + 32);
                *(_OWORD *)unint64_t v133 = v135;
                *(_OWORD *)(v133 + 16) = v136;
                *(unsigned char *)(v133 + 40) = *(unsigned char *)(v134 + 40);
                if (v61 > 3) {
                  goto LABEL_227;
                }
                unsigned int v137 = ((1 << v120) + 1) >> v120;
                uint64_t v138 = 2;
                if (v137 > 0xFFFD) {
                  uint64_t v138 = 4;
                }
                if (v137 <= 0xFD) {
LABEL_227:
                }
                  uint64_t v138 = 1;
                unint64_t v74 = v138 + v61;
                if (v74 <= v259) {
                  unint64_t v74 = v259;
                }
                if (v74 <= 9) {
                  unint64_t v74 = 9;
                }
                if (v74 > 3) {
                  goto LABEL_235;
                }
                int v82 = 1;
                unsigned int v139 = ((1 << (8 * v74)) + 3) >> (8 * v74);
                if (v139 <= 0xFFFB)
                {
                  if (v139 <= 0xFB)
                  {
LABEL_235:
                    char v76 = 1;
                    goto LABEL_236;
                  }
LABEL_238:
                  *(_WORD *)&v69[v74] = v82;
                  return v69;
                }
LABEL_237:
                *(_DWORD *)&v69[v74] = v82;
                return v69;
              }
            }
          }
          memcpy((void *)v150, (const void *)v151, v20);
          char v120 = v236;
          size_t v119 = __na;
          unint64_t v162 = v226;
          size_t v161 = v228;
          unint64_t v164 = v222;
          unint64_t v163 = v224;
          uint64_t v166 = v218;
          unint64_t v165 = v220;
          unint64_t v63 = v250;
LABEL_290:
          size_t v208 = v161;
          goto LABEL_291;
        case 9u:
          id v121 = (_OWORD *)((unint64_t)&a1[v11] & v51);
          (*(void (**)(void))(v248 + 32))();
          unint64_t v63 = (unint64_t)v121;
          char v122 = 9;
LABEL_220:
          *((unsigned char *)v121 + v34) = v122;
LABEL_221:
          uint64_t v69 = a1;
LABEL_222:
          char v120 = v236;
          size_t v119 = v34 + 1;
          goto LABEL_223;
        default:
          size_t v119 = v34 + 1;
          memcpy((void *)v63, (const void *)((unint64_t)&v62[v11] & v51), __na);
          unint64_t v63 = (unint64_t)&a1[v11] & v51;
          uint64_t v69 = a1;
          char v120 = v236;
          goto LABEL_223;
      }
    case 2u:
      uint64_t v69 = a1;
      if (v37 > 3) {
        goto LABEL_85;
      }
      unsigned int v70 = ((1 << v38) + 1) >> v38;
      if (v70 > 0xFFFD)
      {
        unsigned int v71 = *(_DWORD *)&v42[v37];
      }
      else if (v70 > 0xFD)
      {
        unsigned int v71 = *(unsigned __int16 *)&v42[v37];
      }
      else
      {
LABEL_85:
        unsigned int v71 = v42[v37];
      }
      unsigned int v83 = v71 - 2;
      if (v71 >= 2)
      {
        if (v37 <= 3) {
          uint64_t v84 = v37;
        }
        else {
          uint64_t v84 = 4;
        }
        switch(v84)
        {
          case 1:
            int v85 = *v42;
            goto LABEL_143;
          case 2:
            int v85 = *(unsigned __int16 *)v42;
            goto LABEL_143;
          case 3:
            int v85 = *(unsigned __int16 *)v42 | (v42[2] << 16);
            goto LABEL_143;
          case 4:
            int v85 = *(_DWORD *)v42;
LABEL_143:
            if (v37 < 4) {
              v85 |= v83 << v38;
            }
            unsigned int v71 = v85 + 2;
            break;
          default:
            break;
        }
      }
      if (v71 == 1)
      {
        *(void *)a1 = *(void *)v42;
        a1[8] = v42[8];
        if (v37 <= 3)
        {
          unsigned int v89 = ((1 << v38) + 1) >> v38;
          if (v89 > 0xFFFD)
          {
            *(_DWORD *)&a1[v37] = 1;
            goto LABEL_164;
          }
          if (v89 > 0xFD)
          {
            *(_WORD *)&a1[v37] = 1;
            goto LABEL_164;
          }
        }
        a1[v37] = 1;
      }
      else
      {
        if (!v71)
        {
          char v86 = 8 * v37;
          uint64_t v87 = v37;
          (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
          uint64_t v37 = v87;
          char v38 = v86;
          if (v87 > 3)
          {
LABEL_151:
            a1[v87] = 0;
            goto LABEL_163;
          }
          unsigned int v88 = ((1 << v86) + 1) >> v86;
          if (v88 > 0xFFFD)
          {
            *(_DWORD *)&a1[v87] = 0;
          }
          else
          {
            if (v88 <= 0xFD) {
              goto LABEL_151;
            }
            *(_WORD *)&a1[v87] = 0;
          }
LABEL_164:
          unsigned int v94 = ((1 << v38) + 1) >> v38;
          uint64_t v95 = 2;
          if (v94 > 0xFFFD) {
            uint64_t v95 = 4;
          }
          if (v94 > 0xFD)
          {
LABEL_168:
            unint64_t v74 = v95 + v37;
            if (v74 <= v35) {
              unint64_t v74 = v35;
            }
            if (v74 <= 9) {
              unint64_t v74 = 9;
            }
            if (v74 <= 3)
            {
              unsigned int v96 = ((1 << (8 * v74)) + 3) >> (8 * v74);
              if (v96 > 0xFFFB)
              {
                int v82 = 2;
                goto LABEL_237;
              }
              if (v96 > 0xFB)
              {
                LOWORD(v82) = 2;
                goto LABEL_238;
              }
            }
            char v76 = 2;
LABEL_236:
            v69[v74] = v76;
            return v69;
          }
LABEL_167:
          uint64_t v95 = 1;
          goto LABEL_168;
        }
        if (v37 > 3) {
          goto LABEL_161;
        }
        unsigned int v90 = ((1 << v38) + 1) >> v38;
        uint64_t v91 = 2;
        if (v90 > 0xFFFD) {
          uint64_t v91 = 4;
        }
        if (v90 <= 0xFD)
        {
LABEL_161:
          char v92 = 8 * v37;
          uint64_t v91 = 1;
        }
        else
        {
          char v92 = 8 * v37;
        }
        uint64_t v93 = v37;
        memcpy(a1, v42, v91 + v37);
        uint64_t v37 = v93;
        char v38 = v92;
      }
LABEL_163:
      if (v37 > 3) {
        goto LABEL_167;
      }
      goto LABEL_164;
    case 3u:
      uint64_t v69 = a1;
      *(void *)a1 = *(void *)v42;
      a1[8] = v42[8];
      if (v37 > 3) {
        goto LABEL_90;
      }
      unsigned int v72 = ((1 << v38) + 1) >> v38;
      uint64_t v73 = 2;
      if (v72 > 0xFFFD) {
        uint64_t v73 = 4;
      }
      if (v72 <= 0xFD) {
LABEL_90:
      }
        uint64_t v73 = 1;
      unint64_t v74 = v73 + v37;
      if (v74 <= v35) {
        unint64_t v74 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v74 <= 9) {
        unint64_t v74 = 9;
      }
      if (v74 > 3) {
        goto LABEL_98;
      }
      unsigned int v75 = ((1 << (8 * v74)) + 3) >> (8 * v74);
      if (v75 > 0xFFFB)
      {
        int v82 = 3;
        goto LABEL_237;
      }
      if (v75 <= 0xFB)
      {
LABEL_98:
        char v76 = 3;
        goto LABEL_236;
      }
      LOWORD(v82) = 3;
      goto LABEL_238;
    default:
      if (v37 > 3) {
        goto LABEL_103;
      }
      unsigned int v77 = ((1 << v38) + 1) >> v38;
      uint64_t v78 = 2;
      if (v77 > 0xFFFD) {
        uint64_t v78 = 4;
      }
      if (v77 <= 0xFD) {
LABEL_103:
      }
        uint64_t v78 = 1;
      uint64_t v69 = a1;
      unint64_t v79 = v78 + v37;
      if (v79 <= v35) {
        unint64_t v79 = ((((v34 + (v11 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v79 <= 9) {
        unint64_t v79 = 9;
      }
      if (v79 > 3) {
        goto LABEL_112;
      }
      unsigned int v80 = ((1 << (8 * v79)) + 3) >> (8 * v79);
      uint64_t v81 = 2;
      if (v80 > 0xFFFB) {
        uint64_t v81 = 4;
      }
      if (v80 <= 0xFB) {
LABEL_112:
      }
        uint64_t v81 = 1;
      memcpy(a1, v42, v81 + v79);
      return v69;
  }
}

unsigned __int8 *sub_1C99A2A3C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v3 = a1;
  if (a1 == a2) {
    return v3;
  }
  uint64_t v4 = sub_1C9BEAB08();
  uint64_t v251 = *(void *)(v4 - 8);
  uint64_t v252 = v4;
  uint64_t v262 = *(void *)(v251 + 64);
  uint64_t v248 = sub_1C9BEC028();
  uint64_t v247 = *(void *)(v248 - 8);
  int v5 = *(_DWORD *)(v247 + 80);
  uint64_t v246 = sub_1C9BEAC48();
  uint64_t v260 = *(void *)(v246 - 8);
  uint64_t v245 = v260;
  int v253 = *(_DWORD *)(v260 + 80) | v5;
  uint64_t v249 = sub_1C9BEAF18();
  uint64_t v258 = *(void *)(v249 - 8);
  uint64_t v274 = v258;
  int v6 = *(_DWORD *)(v258 + 80) & 0xF8;
  uint64_t v250 = sub_1C9BEAE48();
  uint64_t v7 = *(void *)(v250 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  uint64_t v240 = sub_1C9BEC928();
  uint64_t v255 = *(void *)(v240 - 8);
  uint64_t v239 = v255;
  int v10 = *(_DWORD *)(v255 + 80);
  uint64_t v11 = sub_1C9BEC8F8();
  uint64_t v12 = v9;
  uint64_t v244 = v11;
  uint64_t v13 = v11;
  uint64_t v14 = v8;
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v243 = v15;
  uint64_t v16 = (v253 | (v10 | *(_DWORD *)(v15 + 80))) & 0xF8 | v9;
  uint64_t v263 = v262 + v16;
  unint64_t v18 = *(void *)(v247 + 64);
  unint64_t v242 = v18 + 7;
  if (((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
    unint64_t v18 = ((v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v18 <= *(void *)(v260 + 64)) {
    unint64_t v18 = *(void *)(v260 + 64);
  }
  if (v18 <= 0x18) {
    unint64_t v19 = 24;
  }
  else {
    unint64_t v19 = v18;
  }
  uint64_t v261 = *(void *)(v258 + 64) + v8;
  uint64_t v233 = v7;
  int v20 = *(_DWORD *)(v7 + 84);
  size_t v21 = *(void *)(v7 + 64);
  size_t v232 = v21;
  if (!v20) {
    ++v21;
  }
  size_t v254 = v21;
  size_t v22 = v21 + 7;
  uint64_t v241 = v261 & ~v8;
  unint64_t v23 = (v21 + 7 + v241) & 0xFFFFFFFFFFFFFFF8;
  size_t v24 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  unint64_t v231 = v19;
  if (v24 <= v19) {
    unint64_t v25 = v19;
  }
  else {
    unint64_t v25 = (v23 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v26 = v23 + 31;
  unint64_t v27 = ((((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = v27 + 16;
  if (v27 + 16 > v25) {
    unint64_t v25 = v27 + 16;
  }
  uint64_t v235 = *(void *)(v255 + 64);
  uint64_t v236 = v9 + 16;
  unsigned int v256 = *(_DWORD *)(v7 + 84);
  BOOL v29 = v20 != 0;
  unsigned int v30 = v20 - 1;
  if (!v29) {
    unsigned int v30 = 0;
  }
  unsigned int v238 = *(_DWORD *)(v258 + 84);
  unsigned int v228 = v30;
  if (v30 <= v238) {
    unsigned int v30 = *(_DWORD *)(v258 + 84);
  }
  if (v30 <= 0x7FFFFFFE) {
    unsigned int v30 = 2147483646;
  }
  unsigned int v237 = v30;
  unint64_t v31 = ((v26 + ((v9 + 16 + ((v235 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v230 = v31;
  if (v31 <= v25) {
    unint64_t v31 = v25;
  }
  unint64_t v32 = *(void *)(v15 + 64);
  if (v32 <= v31) {
    unint64_t v33 = v31;
  }
  else {
    unint64_t v33 = *(void *)(v15 + 64);
  }
  uint64_t v17 = v263 & ~v16;
  unint64_t v34 = ((((v33 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v35 = *(void *)(a3 + 16);
  uint64_t v257 = *(void *)(v35 - 8);
  if (*(void *)(v257 + 64) <= 9uLL) {
    uint64_t v36 = 9;
  }
  else {
    uint64_t v36 = *(void *)(v257 + 64);
  }
  char v37 = 8 * v36;
  if (v36 > 3) {
    goto LABEL_34;
  }
  unsigned int v38 = ((1 << v37) + 1) >> v37;
  uint64_t v39 = 2;
  if (v38 > 0xFFFD) {
    uint64_t v39 = 4;
  }
  if (v38 <= 0xFD) {
LABEL_34:
  }
    uint64_t v39 = 1;
  unint64_t v40 = v39 + v36;
  if (v40 <= v34) {
    unint64_t v40 = ((((v33 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v40 <= 9) {
    unint64_t v40 = 9;
  }
  int v3 = a1;
  if (v40 > 3) {
    goto LABEL_40;
  }
  unsigned int v42 = ((1 << (8 * v40)) + 3) >> (8 * v40);
  if (v42 > 0xFFFB)
  {
    unsigned int v41 = *(_DWORD *)&a1[v40];
  }
  else
  {
    if (v42 <= 0xFB)
    {
LABEL_40:
      unsigned int v41 = a1[v40];
      goto LABEL_45;
    }
    unsigned int v41 = *(unsigned __int16 *)&a1[v40];
  }
LABEL_45:
  unsigned int v43 = v41 - 4;
  if (v41 >= 4)
  {
    if (v36 > 3) {
      goto LABEL_50;
    }
    unsigned int v44 = ((1 << v37) + 1) >> v37;
    uint64_t v45 = 2;
    if (v44 > 0xFFFD) {
      uint64_t v45 = 4;
    }
    if (v44 <= 0xFD) {
LABEL_50:
    }
      uint64_t v45 = 1;
    unint64_t v46 = v45 + v36;
    if (v46 <= v34) {
      unint64_t v46 = v34;
    }
    if (v46 <= 9) {
      LODWORD(v46) = 9;
    }
    if (v46 <= 3) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 4;
    }
    switch(v47)
    {
      case 1:
        int v48 = *a1;
        goto LABEL_63;
      case 2:
        int v48 = *(unsigned __int16 *)a1;
        goto LABEL_63;
      case 3:
        int v48 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_63;
      case 4:
        int v48 = *(_DWORD *)a1;
LABEL_63:
        if (v46 < 4) {
          v48 |= v43 << (8 * v46);
        }
        unsigned int v41 = v48 + 4;
        break;
      default:
        break;
    }
  }
  unint64_t v229 = v32;
  unint64_t v49 = v33 + 1;
  uint64_t v267 = ~v16;
  uint64_t v259 = ~v14;
  uint64_t v234 = ~v12;
  switch(v41)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v251 + 8))(a1, v252);
      int v50 = (unsigned __int8 *)((unint64_t)&a1[v263] & v267);
      unsigned int v51 = v50[v33];
      unsigned int v52 = v51 - 10;
      if (v51 >= 0xA)
      {
        if (v33 <= 3) {
          uint64_t v53 = v33;
        }
        else {
          uint64_t v53 = 4;
        }
        switch(v53)
        {
          case 1:
            int v54 = *v50;
            goto LABEL_94;
          case 2:
            int v54 = *(unsigned __int16 *)v50;
            goto LABEL_94;
          case 3:
            int v54 = *(unsigned __int16 *)v50 | (*(unsigned __int8 *)(((unint64_t)&a1[v263] & v267) + 2) << 16);
            goto LABEL_94;
          case 4:
            int v54 = *(_DWORD *)v50;
LABEL_94:
            if (v33 < 4) {
              unsigned int v51 = (v54 | (v52 << (8 * v33))) + 10;
            }
            else {
              unsigned int v51 = v54 + 10;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v227 = v28;
      switch(v51)
      {
        case 0u:
          goto LABEL_105;
        case 1u:
          goto LABEL_106;
        case 2u:
          goto LABEL_107;
        case 3u:
          goto LABEL_108;
        case 4u:
          goto LABEL_109;
        case 5u:
          goto LABEL_110;
        case 6u:
          goto LABEL_111;
        case 7u:
          goto LABEL_114;
        case 8u:
          goto LABEL_120;
        case 9u:
          goto LABEL_118;
        default:
          goto LABEL_145;
      }
      goto LABEL_145;
    case 1u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v251 + 8))(a1, v252);
      int v50 = (unsigned __int8 *)((unint64_t)&a1[v263] & v267);
      unsigned int v55 = v50[v33];
      unsigned int v56 = v55 - 10;
      if (v55 >= 0xA)
      {
        if (v33 <= 3) {
          uint64_t v57 = v33;
        }
        else {
          uint64_t v57 = 4;
        }
        switch(v57)
        {
          case 1:
            int v58 = *v50;
            goto LABEL_101;
          case 2:
            int v58 = *(unsigned __int16 *)v50;
            goto LABEL_101;
          case 3:
            int v58 = *(unsigned __int16 *)v50 | (*(unsigned __int8 *)(((unint64_t)&a1[v263] & v267) + 2) << 16);
            goto LABEL_101;
          case 4:
            int v58 = *(_DWORD *)v50;
LABEL_101:
            if (v33 < 4) {
              unsigned int v55 = (v58 | (v56 << (8 * v33))) + 10;
            }
            else {
              unsigned int v55 = v58 + 10;
            }
            break;
          default:
            goto LABEL_104;
        }
      }
      break;
    case 2u:
      if (v36 > 3) {
        goto LABEL_82;
      }
      unsigned int v59 = ((1 << v37) + 1) >> v37;
      if (v59 > 0xFFFD)
      {
        unsigned int v60 = *(_DWORD *)&a1[v36];
      }
      else if (v59 > 0xFD)
      {
        unsigned int v60 = *(unsigned __int16 *)&a1[v36];
      }
      else
      {
LABEL_82:
        unsigned int v60 = a1[v36];
      }
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v36 <= 3) {
          uint64_t v62 = v36;
        }
        else {
          uint64_t v62 = 4;
        }
        switch(v62)
        {
          case 1:
            int v63 = *a1;
            goto LABEL_126;
          case 2:
            int v63 = *(unsigned __int16 *)a1;
            goto LABEL_126;
          case 3:
            int v63 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_126;
          case 4:
            int v63 = *(_DWORD *)a1;
LABEL_126:
            if (v36 < 4) {
              v63 |= v61 << v37;
            }
            unsigned int v60 = v63 + 2;
            break;
          default:
            break;
        }
      }
      if (v60 == 1)
      {
LABEL_132:
      }
      else if (!v60)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v257 + 8))(a1, v35);
      }
      goto LABEL_147;
    case 3u:
      goto LABEL_132;
    default:
      goto LABEL_147;
  }
LABEL_104:
  unint64_t v227 = v28;
  switch(v55)
  {
    case 0u:
LABEL_105:
      uint64_t v65 = v247;
      uint64_t v64 = v248;
      goto LABEL_119;
    case 1u:
LABEL_106:
      (*(void (**)(unsigned __int8 *, uint64_t))(v247 + 8))(v50, v248);
      swift_release();
      goto LABEL_145;
    case 2u:
LABEL_107:
      swift_bridgeObjectRelease();
      goto LABEL_117;
    case 3u:
LABEL_108:
      swift_unknownObjectRelease();
      goto LABEL_145;
    case 4u:
LABEL_109:
      uint64_t v65 = v245;
      uint64_t v64 = v246;
      goto LABEL_119;
    case 5u:
LABEL_110:
      unsigned int v66 = *(void **)v50;
      goto LABEL_144;
    case 6u:
LABEL_111:
      (*(void (**)(unsigned __int8 *, uint64_t))(v274 + 8))(v50, v249);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v50[v261] & v259, 1, v250)) {
        (*(void (**)(unint64_t, uint64_t))(v233 + 8))((unint64_t)&v50[v261] & v259, v250);
      }
      goto LABEL_117;
    case 7u:
LABEL_114:
      (*(void (**)(unsigned __int8 *, uint64_t))(v274 + 8))(v50, v249);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v50[v261] & v259, 1, v250)) {
        (*(void (**)(unint64_t, uint64_t))(v233 + 8))((unint64_t)&v50[v261] & v259, v250);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_117:
      swift_bridgeObjectRelease();
      goto LABEL_145;
    case 8u:
LABEL_120:
      (*(void (**)(unsigned __int8 *, uint64_t))(v239 + 8))(v50, v240);
      swift_bridgeObjectRelease();
      unint64_t v67 = (v236 + ((((unint64_t)v50 | 7) + v235) & 0xFFFFFFFFFFFFFFF8)) & v234;
      if (v238 == v237)
      {
        if (__swift_getEnumTagSinglePayload(v67, v238, v249)) {
          goto LABEL_143;
        }
        uint64_t v224 = (v261 + v67) & v259;
        goto LABEL_140;
      }
      uint64_t v68 = (v261 + v67) & v259;
      uint64_t v224 = v68;
      if (v228 == v237)
      {
        if (v256 >= 2 && __swift_getEnumTagSinglePayload(v68, v256, v250) >= 2) {
          goto LABEL_143;
        }
        goto LABEL_140;
      }
      unint64_t v69 = *(void *)(((v22 + v68) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v69 >= 0xFFFFFFFF) {
        LODWORD(v69) = -1;
      }
      if ((v69 + 1) < 2)
      {
LABEL_140:
        (*(void (**)(unint64_t, uint64_t))(v274 + 8))(v67, v249);
        if (!__swift_getEnumTagSinglePayload(v224, 1, v250)) {
          (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v224, v250);
        }
        swift_bridgeObjectRelease();
      }
LABEL_143:
      unsigned int v66 = *(void **)(((v67 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
LABEL_144:

LABEL_145:
      swift_bridgeObjectRelease();
      unint64_t v70 = (((((unint64_t)v50 | 7) + v49) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = v227;
      if (*(void *)(v70 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v70);
      }
LABEL_147:
      if (v36 > 3) {
        goto LABEL_151;
      }
      unsigned int v71 = ((1 << v37) + 1) >> v37;
      uint64_t v72 = 2;
      if (v71 > 0xFFFD) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFD) {
LABEL_151:
      }
        uint64_t v72 = 1;
      uint64_t v73 = a2;
      unint64_t v74 = v72 + v36;
      if (v74 <= v34) {
        unint64_t v74 = v34;
      }
      if (v74 <= 9) {
        unint64_t v74 = 9;
      }
      if (v74 > 3) {
        goto LABEL_157;
      }
      unsigned int v76 = ((1 << (8 * v74)) + 3) >> (8 * v74);
      if (v76 > 0xFFFB)
      {
        unsigned int v75 = *(_DWORD *)&a2[v74];
      }
      else if (v76 <= 0xFB)
      {
LABEL_157:
        unsigned int v75 = a2[v74];
      }
      else
      {
        unsigned int v75 = *(unsigned __int16 *)&a2[v74];
      }
      unsigned int v77 = v75 - 4;
      if (v75 >= 4)
      {
        if (v36 > 3) {
          goto LABEL_167;
        }
        unsigned int v78 = ((1 << v37) + 1) >> v37;
        uint64_t v79 = 2;
        if (v78 > 0xFFFD) {
          uint64_t v79 = 4;
        }
        if (v78 <= 0xFD) {
LABEL_167:
        }
          uint64_t v79 = 1;
        unint64_t v80 = v79 + v36;
        if (v80 <= v34) {
          unint64_t v80 = v34;
        }
        if (v80 <= 9) {
          LODWORD(v80) = 9;
        }
        if (v80 <= 3) {
          uint64_t v81 = v80;
        }
        else {
          uint64_t v81 = 4;
        }
        switch(v81)
        {
          case 1:
            int v82 = *a2;
            goto LABEL_180;
          case 2:
            int v82 = *(unsigned __int16 *)a2;
            goto LABEL_180;
          case 3:
            int v82 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_180;
          case 4:
            int v82 = *(_DWORD *)a2;
LABEL_180:
            if (v80 < 4) {
              v82 |= v77 << (8 * v80);
            }
            unsigned int v75 = v82 + 4;
            break;
          default:
            goto LABEL_183;
        }
      }
      break;
    case 9u:
LABEL_118:
      uint64_t v65 = v243;
      uint64_t v64 = v244;
LABEL_119:
      (*(void (**)(unsigned __int8 *, uint64_t))(v65 + 8))(v50, v64);
      goto LABEL_145;
    default:
      goto LABEL_145;
  }
LABEL_183:
  switch(v75)
  {
    case 0u:
      size_t v271 = v22;
      unsigned int v83 = v73;
      (*(void (**)(unsigned __int8 *))(v251 + 32))(a1);
      unint64_t v84 = (unint64_t)&a1[v263] & v267;
      int v85 = (unsigned __int8 *)((unint64_t)&v83[v263] & v267);
      unsigned int v86 = v85[v33];
      unsigned int v87 = v86 - 10;
      if (v86 >= 0xA)
      {
        if (v33 <= 3) {
          uint64_t v88 = v33;
        }
        else {
          uint64_t v88 = 4;
        }
        switch(v88)
        {
          case 1:
            int v89 = *v85;
            goto LABEL_241;
          case 2:
            int v89 = *(unsigned __int16 *)v85;
            goto LABEL_241;
          case 3:
            int v89 = *(unsigned __int16 *)v85 | (v85[2] << 16);
            goto LABEL_241;
          case 4:
            int v89 = *(_DWORD *)v85;
LABEL_241:
            if (v33 < 4) {
              unsigned int v86 = (v89 | (v87 << (8 * v33))) + 10;
            }
            else {
              unsigned int v86 = v89 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v86)
      {
        case 0u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v247 + 32))(v84, v85, v248);
          *(unsigned char *)(v84 + v33) = 0;
          goto LABEL_364;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v247 + 32))(v84, v85, v248);
          *(void *)((v242 + v84) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v85[v242] & 0xFFFFFFFFFFFFFFF8);
          char v120 = 1;
          goto LABEL_302;
        case 2u:
          long long v121 = *(_OWORD *)v85;
          *(void *)(((unint64_t)&a1[v263] & v267) + 0x10) = *((void *)v85 + 2);
          *(_OWORD *)unint64_t v84 = v121;
          char v120 = 2;
          goto LABEL_302;
        case 3u:
          *(void *)unint64_t v84 = *(void *)v85;
          char v120 = 3;
          goto LABEL_302;
        case 4u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v245 + 32))(v84, v85, v246);
          char v120 = 4;
          goto LABEL_302;
        case 5u:
          *(void *)unint64_t v84 = *(void *)v85;
          char v120 = 5;
          goto LABEL_302;
        case 6u:
          unint64_t v225 = v33 + 1;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v274 + 32))(v84, v85, v249);
          char v122 = (void *)((v261 + v84) & v259);
          long long v123 = (const void *)((unint64_t)&v85[v261] & v259);
          if (__swift_getEnumTagSinglePayload((uint64_t)v123, 1, v250))
          {
            memcpy(v122, v123, v254);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v122, v123, v250);
            __swift_storeEnumTagSinglePayload((uint64_t)v122, 0, 1, v250);
          }
          unint64_t v156 = (_OWORD *)(((unint64_t)v122 + v271) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v157 = (_OWORD *)(((unint64_t)v123 + v271) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v156 = *v157;
          unint64_t v158 = ((unint64_t)v156 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v159 = ((unint64_t)v157 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v160 = *(_DWORD *)v159;
          *(unsigned char *)(v158 + 4) = *(unsigned char *)(v159 + 4);
          *(_DWORD *)unint64_t v158 = v160;
          *(unsigned char *)(v84 + v33) = 6;
          goto LABEL_363;
        case 7u:
          unint64_t v225 = v33 + 1;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v274 + 32))(v84, v85, v249);
          char v124 = (void *)((v261 + v84) & v259);
          unint64_t v125 = (const void *)((unint64_t)&v85[v261] & v259);
          if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v250))
          {
            memcpy(v124, v125, v254);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v124, v125, v250);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v250);
          }
          size_t v161 = (_OWORD *)(((unint64_t)v124 + v271) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v162 = (_OWORD *)(((unint64_t)v125 + v271) & 0xFFFFFFFFFFFFFFF8);
          *size_t v161 = *v162;
          unint64_t v163 = ((unint64_t)v161 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v164 = ((unint64_t)v162 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v165 = *(_DWORD *)v164;
          *(unsigned char *)(v163 + 4) = *(unsigned char *)(v164 + 4);
          *(_DWORD *)unint64_t v163 = v165;
          uint64_t v166 = (_OWORD *)(((v84 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v167 = (_OWORD *)((((unint64_t)v85 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v166 = *v167;
          uint64_t v168 = (_OWORD *)(((unint64_t)v166 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v169 = (_OWORD *)(((unint64_t)v167 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v168 = *v169;
          *(_OWORD *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v84 + v33) = 7;
          int v3 = a1;
          goto LABEL_363;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v239 + 32))(v84, v85, v240);
          uint64_t v132 = (_OWORD *)(((v84 | 7) + v235) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v133 = (_OWORD *)((((unint64_t)v85 | 7) + v235) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v132 = *v133;
          unint64_t v268 = ((unint64_t)v132 + v236) & v234;
          unint64_t v134 = (const void *)(((unint64_t)v133 + v236) & v234);
          uint64_t v264 = v134;
          unint64_t v225 = v33 + 1;
          if (v238 == v237)
          {
            int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v134, v238, v249);
            unint64_t v134 = v264;
            uint64_t v136 = v250;
            if (!EnumTagSinglePayload)
            {
              unsigned int v137 = (const void *)(((unint64_t)v264 + v261) & v259);
              goto LABEL_344;
            }
LABEL_326:
            memcpy((void *)v268, v134, v24);
            unint64_t v145 = (unint64_t)v264;
            size_t v146 = v254;
            unint64_t v148 = v230;
            unint64_t v147 = v231;
            unint64_t v149 = v229;
LABEL_353:
            size_t v188 = v146;
            goto LABEL_354;
          }
          unsigned int v137 = (const void *)(((unint64_t)v134 + v261) & v259);
          uint64_t v136 = v250;
          if (v228 != v237)
          {
            unint64_t v184 = *(void *)((((unint64_t)v137 + v271) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v184 >= 0xFFFFFFFF) {
              LODWORD(v184) = -1;
            }
            if ((v184 + 1) < 2) {
              goto LABEL_344;
            }
            goto LABEL_326;
          }
          if (v256 >= 2)
          {
            unsigned int v144 = __swift_getEnumTagSinglePayload(((unint64_t)v134 + v261) & v259, v256, v250);
            unint64_t v134 = v264;
            if (v144 >= 2) {
              goto LABEL_326;
            }
          }
LABEL_344:
          (*(void (**)(unint64_t, const void *, uint64_t))(v274 + 32))(v268, v134, v249);
          int v185 = (void *)((v261 + v268) & v259);
          if (__swift_getEnumTagSinglePayload((uint64_t)v137, 1, v136))
          {
            size_t v146 = v254;
            memcpy(v185, v137, v254);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v185, v137, v136);
            __swift_storeEnumTagSinglePayload((uint64_t)v185, 0, 1, v136);
            size_t v146 = v254;
          }
          unint64_t v148 = v230;
          unint64_t v147 = v231;
          unint64_t v149 = v229;
          size_t v188 = v232;
          unint64_t v145 = (unint64_t)v264;
          unint64_t v189 = (_OWORD *)(((unint64_t)v185 + v271) & 0xFFFFFFFFFFFFFFF8);
          int v190 = (_OWORD *)(((unint64_t)v137 + v271) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v189 = *v190;
          unint64_t v191 = ((unint64_t)v190 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v192 = *(_DWORD *)v191;
          unint64_t v193 = ((unint64_t)v189 + 19) & 0xFFFFFFFFFFFFFFF8;
          *(unsigned char *)(v193 + 4) = *(unsigned char *)(v191 + 4);
          *(_DWORD *)unint64_t v193 = v192;
          if (!v256) {
            goto LABEL_353;
          }
LABEL_354:
          unint64_t v194 = (((v241 + 7 + v188) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          *(void *)(((v268 | 7) + v194) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v145 | 7) + v194) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v195 = (((v241 + 7 + v146) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          if (v195 <= v147) {
            unint64_t v195 = v147;
          }
          if (v28 > v195) {
            unint64_t v195 = v28;
          }
          if (v148 > v195) {
            unint64_t v195 = v148;
          }
          if (v149 > v195) {
            unint64_t v195 = v149;
          }
          *(unsigned char *)(v84 + v195) = 8;
LABEL_363:
          unint64_t v49 = v225;
LABEL_364:
          unint64_t v196 = (void *)(((v84 | 7) + v49) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v197 = (void *)((((unint64_t)v85 | 7) + v49) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v196 = *v197;
          unint64_t v198 = ((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v199 = ((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v200 = *(_OWORD *)v199;
          long long v201 = *(_OWORD *)(v199 + 16);
          *(void *)(v198 + 32) = *(void *)(v199 + 32);
          *(_OWORD *)unint64_t v198 = v200;
          *(_OWORD *)(v198 + 16) = v201;
          *(unsigned char *)(v198 + 40) = *(unsigned char *)(v199 + 40);
          if (v36 > 3) {
            goto LABEL_368;
          }
          unsigned int v202 = ((1 << v37) + 1) >> v37;
          uint64_t v203 = 2;
          if (v202 > 0xFFFD) {
            uint64_t v203 = 4;
          }
          if (v202 <= 0xFD) {
LABEL_368:
          }
            uint64_t v203 = 1;
          unint64_t v204 = v203 + v36;
          if (v204 <= v34) {
            unint64_t v204 = v34;
          }
          if (v204 <= 9) {
            unint64_t v204 = 9;
          }
          if (v204 <= 3)
          {
            unsigned int v205 = ((1 << (8 * v204)) + 3) >> (8 * v204);
            if (v205 > 0xFFFB)
            {
              *(_DWORD *)&v3[v204] = 0;
              return v3;
            }
            if (v205 > 0xFB)
            {
              *(_WORD *)&v3[v204] = 0;
              return v3;
            }
          }
          v3[v204] = 0;
          return v3;
        case 9u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v243 + 32))(v84, v85, v244);
          char v120 = 9;
LABEL_302:
          *(unsigned char *)(v84 + v33) = v120;
          goto LABEL_364;
        default:
          memcpy((void *)v84, v85, v33 + 1);
          goto LABEL_364;
      }
    case 1u:
      size_t v272 = v22;
      unsigned int v90 = v73;
      (*(void (**)(unsigned __int8 *))(v251 + 32))(a1);
      unint64_t v91 = (unint64_t)&a1[v263] & v267;
      char v92 = (unsigned __int8 *)((unint64_t)&v90[v263] & v267);
      unsigned int v93 = v92[v33];
      unsigned int v94 = v93 - 10;
      if (v93 >= 0xA)
      {
        if (v33 <= 3) {
          uint64_t v95 = v33;
        }
        else {
          uint64_t v95 = 4;
        }
        switch(v95)
        {
          case 1:
            int v96 = *v92;
            goto LABEL_249;
          case 2:
            int v96 = *(unsigned __int16 *)v92;
            goto LABEL_249;
          case 3:
            int v96 = *(unsigned __int16 *)v92 | (v92[2] << 16);
            goto LABEL_249;
          case 4:
            int v96 = *(_DWORD *)v92;
LABEL_249:
            if (v33 < 4) {
              unsigned int v93 = (v96 | (v94 << (8 * v33))) + 10;
            }
            else {
              unsigned int v93 = v96 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v93)
      {
        case 0u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v247 + 32))(v91, v92, v248);
          *(unsigned char *)(v91 + v33) = 0;
          goto LABEL_392;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v247 + 32))(v91, v92, v248);
          *(void *)((v242 + v91) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v92[v242] & 0xFFFFFFFFFFFFFFF8);
          char v126 = 1;
          goto LABEL_314;
        case 2u:
          long long v127 = *(_OWORD *)v92;
          *(void *)(((unint64_t)&a1[v263] & v267) + 0x10) = *((void *)v92 + 2);
          *(_OWORD *)unint64_t v91 = v127;
          char v126 = 2;
          goto LABEL_314;
        case 3u:
          *(void *)unint64_t v91 = *(void *)v92;
          char v126 = 3;
          goto LABEL_314;
        case 4u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v245 + 32))(v91, v92, v246);
          char v126 = 4;
          goto LABEL_314;
        case 5u:
          *(void *)unint64_t v91 = *(void *)v92;
          char v126 = 5;
          goto LABEL_314;
        case 6u:
          unint64_t v226 = v33 + 1;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v274 + 32))(v91, v92, v249);
          unint64_t v128 = (void *)((v261 + v91) & v259);
          uint64_t v129 = (const void *)((unint64_t)&v92[v261] & v259);
          if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v250))
          {
            memcpy(v128, v129, v254);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v128, v129, v250);
            __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v250);
          }
          unint64_t v170 = (_OWORD *)(((unint64_t)v128 + v272) & 0xFFFFFFFFFFFFFFF8);
          int v171 = (_OWORD *)(((unint64_t)v129 + v272) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v170 = *v171;
          unint64_t v172 = ((unint64_t)v170 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v173 = ((unint64_t)v171 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v174 = *(_DWORD *)v173;
          *(unsigned char *)(v172 + 4) = *(unsigned char *)(v173 + 4);
          *(_DWORD *)unint64_t v172 = v174;
          *(unsigned char *)(v91 + v33) = 6;
          goto LABEL_391;
        case 7u:
          unint64_t v226 = v33 + 1;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v274 + 32))(v91, v92, v249);
          uint64_t v130 = (void *)((v261 + v91) & v259);
          uint64_t v131 = (const void *)((unint64_t)&v92[v261] & v259);
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v250))
          {
            memcpy(v130, v131, v254);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v130, v131, v250);
            __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v250);
          }
          unint64_t v175 = (_OWORD *)(((unint64_t)v130 + v272) & 0xFFFFFFFFFFFFFFF8);
          int v176 = (_OWORD *)(((unint64_t)v131 + v272) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v175 = *v176;
          unint64_t v177 = ((unint64_t)v175 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v178 = ((unint64_t)v176 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v179 = *(_DWORD *)v178;
          *(unsigned char *)(v177 + 4) = *(unsigned char *)(v178 + 4);
          *(_DWORD *)unint64_t v177 = v179;
          unint64_t v180 = (_OWORD *)(((v91 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v181 = (_OWORD *)((((unint64_t)v92 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v180 = *v181;
          unint64_t v182 = (_OWORD *)(((unint64_t)v180 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v183 = (_OWORD *)(((unint64_t)v181 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v182 = *v183;
          *(_OWORD *)(((unint64_t)v182 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v183 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v91 + v33) = 7;
          int v3 = a1;
          goto LABEL_391;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v239 + 32))(v91, v92, v240);
          uint64_t v138 = (_OWORD *)(((v91 | 7) + v235) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v139 = (_OWORD *)((((unint64_t)v92 | 7) + v235) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v138 = *v139;
          unint64_t v269 = ((unint64_t)v138 + v236) & v234;
          uint64_t v140 = (const void *)(((unint64_t)v139 + v236) & v234);
          uint64_t v265 = v140;
          unint64_t v226 = v33 + 1;
          if (v238 == v237)
          {
            int v141 = __swift_getEnumTagSinglePayload((uint64_t)v140, v238, v249);
            uint64_t v140 = v265;
            uint64_t v142 = v250;
            if (!v141)
            {
              unint64_t v143 = (const void *)(((unint64_t)v265 + v261) & v259);
              goto LABEL_349;
            }
          }
          else
          {
            unint64_t v143 = (const void *)(((unint64_t)v140 + v261) & v259);
            uint64_t v142 = v250;
            if (v228 == v237)
            {
              if (v256 < 2) {
                goto LABEL_349;
              }
              unsigned int v150 = __swift_getEnumTagSinglePayload(((unint64_t)v140 + v261) & v259, v256, v250);
              uint64_t v140 = v265;
              if (v150 < 2) {
                goto LABEL_349;
              }
            }
            else
            {
              unint64_t v186 = *(void *)((((unint64_t)v143 + v272) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v186 >= 0xFFFFFFFF) {
                LODWORD(v186) = -1;
              }
              if ((v186 + 1) < 2)
              {
LABEL_349:
                (*(void (**)(unint64_t, const void *, uint64_t))(v274 + 32))(v269, v140, v249);
                size_t v187 = (void *)((v261 + v269) & v259);
                if (__swift_getEnumTagSinglePayload((uint64_t)v143, 1, v142))
                {
                  size_t v152 = v254;
                  memcpy(v187, v143, v254);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v233 + 32))(v187, v143, v142);
                  __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v142);
                  size_t v152 = v254;
                }
                unint64_t v154 = v230;
                unint64_t v153 = v231;
                unint64_t v155 = v229;
                size_t v206 = v232;
                unint64_t v151 = (unint64_t)v265;
                unint64_t v207 = (_OWORD *)(((unint64_t)v187 + v272) & 0xFFFFFFFFFFFFFFF8);
                size_t v208 = (_OWORD *)(((unint64_t)v143 + v272) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v207 = *v208;
                unint64_t v209 = ((unint64_t)v208 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v210 = *(_DWORD *)v209;
                unint64_t v211 = ((unint64_t)v207 + 19) & 0xFFFFFFFFFFFFFFF8;
                *(unsigned char *)(v211 + 4) = *(unsigned char *)(v209 + 4);
                *(_DWORD *)unint64_t v211 = v210;
                if (!v256) {
                  goto LABEL_381;
                }
LABEL_382:
                unint64_t v212 = (((v241 + 7 + v206) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                *(void *)(((v269 | 7) + v212) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v151 | 7) + v212) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v213 = (((v241 + 7 + v152) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                if (v213 <= v153) {
                  unint64_t v213 = v153;
                }
                if (v28 > v213) {
                  unint64_t v213 = v28;
                }
                if (v154 > v213) {
                  unint64_t v213 = v154;
                }
                if (v155 > v213) {
                  unint64_t v213 = v155;
                }
                *(unsigned char *)(v91 + v213) = 8;
LABEL_391:
                unint64_t v49 = v226;
LABEL_392:
                uint64_t v214 = (void *)(((v91 | 7) + v49) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v215 = (void *)((((unint64_t)v92 | 7) + v49) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v214 = *v215;
                unint64_t v216 = ((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v217 = ((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8;
                long long v218 = *(_OWORD *)v217;
                long long v219 = *(_OWORD *)(v217 + 16);
                *(void *)(v216 + 32) = *(void *)(v217 + 32);
                *(_OWORD *)unint64_t v216 = v218;
                *(_OWORD *)(v216 + 16) = v219;
                *(unsigned char *)(v216 + 40) = *(unsigned char *)(v217 + 40);
                if (v36 > 3) {
                  goto LABEL_396;
                }
                unsigned int v220 = ((1 << v37) + 1) >> v37;
                uint64_t v221 = 2;
                if (v220 > 0xFFFD) {
                  uint64_t v221 = 4;
                }
                if (v220 <= 0xFD) {
LABEL_396:
                }
                  uint64_t v221 = 1;
                unint64_t v101 = v221 + v36;
                if (v101 <= v34) {
                  unint64_t v101 = v34;
                }
                if (v101 <= 9) {
                  unint64_t v101 = 9;
                }
                if (v101 > 3) {
                  goto LABEL_404;
                }
                int v109 = 1;
                unsigned int v222 = ((1 << (8 * v101)) + 3) >> (8 * v101);
                if (v222 <= 0xFFFB)
                {
                  if (v222 <= 0xFB)
                  {
LABEL_404:
                    char v103 = 1;
                    goto LABEL_405;
                  }
LABEL_407:
                  *(_WORD *)&v3[v101] = v109;
                  return v3;
                }
LABEL_406:
                *(_DWORD *)&v3[v101] = v109;
                return v3;
              }
            }
          }
          memcpy((void *)v269, v140, v24);
          unint64_t v151 = (unint64_t)v265;
          size_t v152 = v254;
          unint64_t v154 = v230;
          unint64_t v153 = v231;
          unint64_t v155 = v229;
LABEL_381:
          size_t v206 = v152;
          goto LABEL_382;
        case 9u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v243 + 32))(v91, v92, v244);
          char v126 = 9;
LABEL_314:
          *(unsigned char *)(v91 + v33) = v126;
          goto LABEL_392;
        default:
          memcpy((void *)v91, v92, v33 + 1);
          goto LABEL_392;
      }
    case 2u:
      if (v36 > 3) {
        goto LABEL_199;
      }
      unsigned int v97 = ((1 << v37) + 1) >> v37;
      if (v97 > 0xFFFD)
      {
        unsigned int v98 = *(_DWORD *)&a2[v36];
      }
      else if (v97 > 0xFD)
      {
        unsigned int v98 = *(unsigned __int16 *)&a2[v36];
      }
      else
      {
LABEL_199:
        unsigned int v98 = a2[v36];
      }
      unsigned int v110 = v98 - 2;
      if (v98 >= 2)
      {
        if (v36 <= 3) {
          uint64_t v111 = v36;
        }
        else {
          uint64_t v111 = 4;
        }
        switch(v111)
        {
          case 1:
            int v112 = *a2;
            goto LABEL_257;
          case 2:
            int v112 = *(unsigned __int16 *)a2;
            goto LABEL_257;
          case 3:
            int v112 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_257;
          case 4:
            int v112 = *(_DWORD *)a2;
LABEL_257:
            if (v36 < 4) {
              v112 |= v110 << v37;
            }
            unsigned int v98 = v112 + 2;
            break;
          default:
            break;
        }
      }
      if (v98 == 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        if (v36 <= 3)
        {
          unsigned int v114 = ((1 << v37) + 1) >> v37;
          if (v114 > 0xFFFD)
          {
            *(_DWORD *)&a1[v36] = 1;
            goto LABEL_277;
          }
          if (v114 > 0xFD)
          {
            *(_WORD *)&a1[v36] = 1;
            goto LABEL_277;
          }
        }
        a1[v36] = 1;
      }
      else
      {
        if (!v98)
        {
          (*(void (**)(unsigned __int8 *))(v257 + 32))(a1);
          if (v36 > 3)
          {
LABEL_265:
            a1[v36] = 0;
            goto LABEL_276;
          }
          unsigned int v113 = ((1 << v37) + 1) >> v37;
          if (v113 > 0xFFFD)
          {
            *(_DWORD *)&a1[v36] = 0;
          }
          else
          {
            if (v113 <= 0xFD) {
              goto LABEL_265;
            }
            *(_WORD *)&a1[v36] = 0;
          }
LABEL_277:
          unsigned int v117 = ((1 << v37) + 1) >> v37;
          uint64_t v118 = 2;
          if (v117 > 0xFFFD) {
            uint64_t v118 = 4;
          }
          if (v117 > 0xFD)
          {
LABEL_281:
            unint64_t v101 = v118 + v36;
            if (v101 <= v34) {
              unint64_t v101 = v34;
            }
            if (v101 <= 9) {
              unint64_t v101 = 9;
            }
            if (v101 <= 3)
            {
              unsigned int v119 = ((1 << (8 * v101)) + 3) >> (8 * v101);
              if (v119 > 0xFFFB)
              {
                int v109 = 2;
                goto LABEL_406;
              }
              if (v119 > 0xFB)
              {
                LOWORD(v109) = 2;
                goto LABEL_407;
              }
            }
            char v103 = 2;
LABEL_405:
            v3[v101] = v103;
            return v3;
          }
LABEL_280:
          uint64_t v118 = 1;
          goto LABEL_281;
        }
        if (v36 > 3) {
          goto LABEL_274;
        }
        unsigned int v115 = ((1 << v37) + 1) >> v37;
        uint64_t v116 = 2;
        if (v115 > 0xFFFD) {
          uint64_t v116 = 4;
        }
        if (v115 <= 0xFD) {
LABEL_274:
        }
          uint64_t v116 = 1;
        memcpy(a1, a2, v116 + v36);
      }
LABEL_276:
      if (v36 > 3) {
        goto LABEL_280;
      }
      goto LABEL_277;
    case 3u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      if (v36 > 3) {
        goto LABEL_204;
      }
      unsigned int v99 = ((1 << v37) + 1) >> v37;
      uint64_t v100 = 2;
      if (v99 > 0xFFFD) {
        uint64_t v100 = 4;
      }
      if (v99 <= 0xFD) {
LABEL_204:
      }
        uint64_t v100 = 1;
      unint64_t v101 = v100 + v36;
      if (v101 <= v34) {
        unint64_t v101 = v34;
      }
      if (v101 <= 9) {
        unint64_t v101 = 9;
      }
      if (v101 > 3) {
        goto LABEL_212;
      }
      unsigned int v102 = ((1 << (8 * v101)) + 3) >> (8 * v101);
      if (v102 > 0xFFFB)
      {
        int v109 = 3;
        goto LABEL_406;
      }
      if (v102 <= 0xFB)
      {
LABEL_212:
        char v103 = 3;
        goto LABEL_405;
      }
      LOWORD(v109) = 3;
      goto LABEL_407;
    default:
      if (v36 > 3) {
        goto LABEL_217;
      }
      unsigned int v104 = ((1 << v37) + 1) >> v37;
      uint64_t v105 = 2;
      if (v104 > 0xFFFD) {
        uint64_t v105 = 4;
      }
      if (v104 <= 0xFD) {
LABEL_217:
      }
        uint64_t v105 = 1;
      unint64_t v106 = v105 + v36;
      if (v106 <= v34) {
        unint64_t v106 = v34;
      }
      if (v106 <= 9) {
        unint64_t v106 = 9;
      }
      if (v106 > 3) {
        goto LABEL_226;
      }
      unsigned int v107 = ((1 << (8 * v106)) + 3) >> (8 * v106);
      uint64_t v108 = 2;
      if (v107 > 0xFFFB) {
        uint64_t v108 = 4;
      }
      if (v107 <= 0xFB) {
LABEL_226:
      }
        uint64_t v108 = 1;
      memcpy(a1, a2, v108 + v106);
      return v3;
  }
}

uint64_t sub_1C99A4ACC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v67 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v65 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v65 + 80);
  uint64_t v66 = *(void *)(sub_1C9BEAC48() - 8);
  int v62 = *(_DWORD *)(v66 + 80) | v3;
  uint64_t v64 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v64 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v63 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v63 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v62 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v67 + v10) & ~v10;
  unint64_t v12 = *(void *)(v65 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v66 + 64)) {
    unint64_t v12 = *(void *)(v66 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v64 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v63 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v63 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_23;
  }
  unsigned int v21 = ((1 << v20) + 1) >> v20;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
LABEL_23:
  }
    uint64_t v22 = 1;
  unint64_t v23 = v22 + v19;
  if (v23 <= v18) {
    unint64_t v23 = v18;
  }
  unsigned int v24 = 9;
  if (v23 > 9) {
    unsigned int v24 = v23;
  }
  char v25 = 8;
  if (v24 > 3)
  {
    int v26 = 5;
    goto LABEL_38;
  }
  unsigned int v27 = ((1 << (8 * v24)) + 3) >> (8 * v24);
  if (v27 >= 0xFFFC) {
    char v28 = 32;
  }
  else {
    char v28 = 16;
  }
  if (v27 >= 0xFC) {
    char v25 = v28;
  }
  else {
    char v25 = 8;
  }
  if (v27 <= 0xFFFB)
  {
    int v26 = v27 + 4;
LABEL_38:
    unsigned int v29 = (1 << v25) - v26;
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_40;
    }
  }
  unsigned int v29 = 0x7FFFFFFF;
LABEL_40:
  if (v19 > 3) {
    goto LABEL_44;
  }
  unsigned int v30 = ((1 << v20) + 1) >> v20;
  uint64_t v31 = 2;
  if (v30 > 0xFFFD) {
    uint64_t v31 = 4;
  }
  if (v30 <= 0xFD) {
LABEL_44:
  }
    uint64_t v31 = 1;
  unint64_t v32 = v31 + v19;
  if (v32 <= v18) {
    unint64_t v32 = v18;
  }
  if (v32 <= 9) {
    unint64_t v32 = 9;
  }
  if (v32 > 3) {
    goto LABEL_53;
  }
  unsigned int v33 = ((1 << (8 * v32)) + 3) >> (8 * v32);
  uint64_t v34 = 2;
  if (v33 > 0xFFFB) {
    uint64_t v34 = 4;
  }
  if (v33 <= 0xFB) {
LABEL_53:
  }
    uint64_t v34 = 1;
  if (!a2) {
    return 0;
  }
  if (a2 <= v29) {
    goto LABEL_74;
  }
  unint64_t v35 = v34 + v32;
  char v36 = 8 * v35;
  if (v35 <= 3)
  {
    unsigned int v38 = ((a2 - v29 + ~(-1 << v36)) >> v36) + 1;
    if (HIWORD(v38))
    {
      int v37 = *(_DWORD *)((char *)a1 + v35);
      if (!v37) {
        goto LABEL_74;
      }
      goto LABEL_64;
    }
    if (v38 > 0xFF)
    {
      int v37 = *(unsigned __int16 *)((char *)a1 + v35);
      if (!*(unsigned __int16 *)((char *)a1 + v35)) {
        goto LABEL_74;
      }
      goto LABEL_64;
    }
    if (v38 < 2)
    {
LABEL_74:
      if (v29)
      {
        if (v19 > 3) {
          goto LABEL_79;
        }
        unsigned int v42 = ((1 << v20) + 1) >> v20;
        uint64_t v43 = 2;
        if (v42 > 0xFFFD) {
          uint64_t v43 = 4;
        }
        if (v42 <= 0xFD) {
LABEL_79:
        }
          uint64_t v43 = 1;
        unint64_t v44 = v43 + v19;
        if (v44 <= v18) {
          unint64_t v44 = v18;
        }
        if (v44 <= 9) {
          unint64_t v44 = 9;
        }
        if (v44 > 3) {
          goto LABEL_87;
        }
        unsigned int v45 = ((1 << (8 * v44)) + 3) >> (8 * v44);
        if (v45 > 0xFFFB)
        {
          int v48 = 0;
          int v46 = *(_DWORD *)((char *)a1 + v44);
          goto LABEL_91;
        }
        if (v45 > 0xFB)
        {
          int v46 = *(unsigned __int16 *)((char *)a1 + v44);
          char v47 = 16;
        }
        else
        {
LABEL_87:
          int v46 = *((unsigned __int8 *)a1 + v44);
          char v47 = 8;
        }
        int v48 = -1 << v47;
LABEL_91:
        int v50 = v48 | v46;
        if (v19 > 3) {
          goto LABEL_95;
        }
        unsigned int v51 = ((1 << v20) + 1) >> v20;
        uint64_t v52 = 2;
        if (v51 > 0xFFFD) {
          uint64_t v52 = 4;
        }
        if (v51 <= 0xFD) {
LABEL_95:
        }
          uint64_t v52 = 1;
        unint64_t v53 = v52 + v19;
        if (v53 > v18) {
          unint64_t v18 = v53;
        }
        unsigned int v54 = 9;
        if (v18 > 9) {
          unsigned int v54 = v18;
        }
        char v55 = 8;
        if (v54 <= 3)
        {
          unsigned int v57 = ((1 << (8 * v54)) + 3) >> (8 * v54);
          if (v57 >= 0xFFFC) {
            char v58 = 32;
          }
          else {
            char v58 = 16;
          }
          if (v57 >= 0xFC) {
            char v55 = v58;
          }
          else {
            char v55 = 8;
          }
          if (v57 > 0xFFFB)
          {
LABEL_111:
            unsigned int v59 = 0x7FFFFFFF;
LABEL_112:
            if (v59 > ~v50) {
              return -v50;
            }
            else {
              return 0;
            }
          }
          int v56 = v57 + 4;
        }
        else
        {
          int v56 = 5;
        }
        unsigned int v59 = (1 << v55) - v56;
        if ((v59 & 0x80000000) == 0) {
          goto LABEL_112;
        }
        goto LABEL_111;
      }
      return 0;
    }
  }
  int v37 = *((unsigned __int8 *)a1 + v35);
  if (!*((unsigned char *)a1 + v35)) {
    goto LABEL_74;
  }
LABEL_64:
  int v39 = (v37 - 1) << v36;
  if (v35 > 3) {
    int v39 = 0;
  }
  if (v35)
  {
    if (v35 <= 3) {
      int v40 = v35;
    }
    else {
      int v40 = 4;
    }
    switch(v40)
    {
      case 2:
        int v41 = *a1;
        break;
      case 3:
        int v41 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v41 = *(_DWORD *)a1;
        break;
      default:
        int v41 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v41 = 0;
  }
  return v29 + (v41 | v39) + 1;
}

void sub_1C99A521C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v53 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v51 = *(void *)(sub_1C9BEC028() - 8);
  int v4 = *(_DWORD *)(v51 + 80);
  uint64_t v52 = *(void *)(sub_1C9BEAC48() - 8);
  int v48 = *(_DWORD *)(v52 + 80) | v4;
  uint64_t v50 = *(void *)(sub_1C9BEAF18() - 8);
  int v5 = *(_DWORD *)(v50 + 80) & 0xF8;
  uint64_t v6 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v49 = *(void *)(sub_1C9BEC928() - 8);
  int v9 = *(_DWORD *)(v49 + 80);
  uint64_t v10 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v11 = (v48 | (v9 | *(_DWORD *)(v10 + 80))) & 0xF8 | v8;
  uint64_t v12 = (v53 + v11) & ~v11;
  unint64_t v13 = *(void *)(v51 + 64);
  if (((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v13) {
    unint64_t v13 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v13 <= *(void *)(v52 + 64)) {
    unint64_t v13 = *(void *)(v52 + 64);
  }
  uint64_t v14 = *(void *)(v6 + 64) + ((*(void *)(v50 + 64) + v7) & ~v7);
  if (!*(_DWORD *)(v6 + 84)) {
    ++v14;
  }
  unint64_t v15 = (v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v13 <= v16) {
    unint64_t v13 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v17 = ((((((v15 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 <= v17) {
    unint64_t v13 = v17;
  }
  if (v13 <= ((v16 + ((v8 + ((*(void *)(v49 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v13 = ((v16 + ((v8 + ((*(void *)(v49 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v18 = *(void *)(v10 + 64);
  if (v13 > v18) {
    unint64_t v18 = v13;
  }
  if (v18 <= 0x18) {
    unint64_t v18 = 24;
  }
  unint64_t v19 = ((((v12 + v18 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v20 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v20 <= 9) {
    unint64_t v20 = 9;
  }
  char v21 = 8 * v20;
  if (v20 > 3) {
    goto LABEL_23;
  }
  unsigned int v22 = ((1 << v21) + 1) >> v21;
  uint64_t v23 = 2;
  if (v22 > 0xFFFD) {
    uint64_t v23 = 4;
  }
  if (v22 <= 0xFD) {
LABEL_23:
  }
    uint64_t v23 = 1;
  unint64_t v24 = v23 + v20;
  if (v24 <= v19) {
    unint64_t v24 = v19;
  }
  unsigned int v25 = 9;
  if (v24 > 9) {
    unsigned int v25 = v24;
  }
  char v26 = 8;
  if (v25 <= 3)
  {
    unsigned int v28 = ((1 << (8 * v25)) + 3) >> (8 * v25);
    if (v28 >= 0xFFFC) {
      char v29 = 32;
    }
    else {
      char v29 = 16;
    }
    if (v28 >= 0xFC) {
      char v26 = v29;
    }
    else {
      char v26 = 8;
    }
    if (v28 > 0xFFFB) {
      goto LABEL_39;
    }
    int v27 = v28 + 4;
  }
  else
  {
    int v27 = 5;
  }
  unsigned int v30 = (1 << v26) - v27;
  if ((v30 & 0x80000000) != 0) {
LABEL_39:
  }
    unsigned int v30 = 0x7FFFFFFF;
  if (v20 > 3) {
    goto LABEL_44;
  }
  unsigned int v31 = ((1 << v21) + 1) >> v21;
  uint64_t v32 = 2;
  if (v31 > 0xFFFD) {
    uint64_t v32 = 4;
  }
  if (v31 <= 0xFD) {
LABEL_44:
  }
    uint64_t v32 = 1;
  unint64_t v33 = v32 + v20;
  if (v33 <= v19) {
    unint64_t v33 = v19;
  }
  if (v33 <= 9) {
    unint64_t v33 = 9;
  }
  if (v33 > 3) {
    goto LABEL_53;
  }
  unsigned int v34 = ((1 << (8 * v33)) + 3) >> (8 * v33);
  uint64_t v35 = 2;
  if (v34 > 0xFFFB) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFB) {
LABEL_53:
  }
    uint64_t v35 = 1;
  size_t v36 = v35 + v33;
  char v37 = 8 * (v35 + v33);
  if (a3 <= v30)
  {
    int v38 = 0;
  }
  else if (v36 <= 3)
  {
    unsigned int v41 = ((a3 - v30 + ~(-1 << v37)) >> v37) + 1;
    if (HIWORD(v41))
    {
      int v38 = 4;
    }
    else if (v41 >= 0x100)
    {
      int v38 = 2;
    }
    else
    {
      int v38 = v41 > 1;
    }
  }
  else
  {
    int v38 = 1;
  }
  if (v30 < a2)
  {
    unsigned int v39 = ~v30 + a2;
    if (v36 < 4)
    {
      int v40 = (v39 >> v37) + 1;
      if (v36)
      {
        int v42 = v39 & ~(-1 << v37);
        bzero(a1, v36);
        if (v36 == 3)
        {
          *(_WORD *)a1 = v42;
          a1[2] = BYTE2(v42);
        }
        else if (v36 == 2)
        {
          *(_WORD *)a1 = v42;
        }
        else
        {
          *a1 = v42;
        }
      }
    }
    else
    {
      bzero(a1, v36);
      *(_DWORD *)a1 = v39;
      int v40 = 1;
    }
    switch(v38)
    {
      case 1:
        a1[v36] = v40;
        return;
      case 2:
        *(_WORD *)&a1[v36] = v40;
        return;
      case 3:
        goto LABEL_99;
      case 4:
        *(_DWORD *)&a1[v36] = v40;
        return;
      default:
        return;
    }
  }
  switch(v38)
  {
    case 1:
      a1[v36] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_74;
    case 2:
      *(_WORD *)&a1[v36] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_74;
    case 3:
LABEL_99:
      __break(1u);
      JUMPOUT(0x1C99A58D4);
    case 4:
      *(_DWORD *)&a1[v36] = 0;
      goto LABEL_73;
    default:
LABEL_73:
      if (!a2) {
        return;
      }
LABEL_74:
      if (v20 > 3) {
        goto LABEL_78;
      }
      unsigned int v43 = ((1 << v21) + 1) >> v21;
      uint64_t v44 = 2;
      if (v43 > 0xFFFD) {
        uint64_t v44 = 4;
      }
      if (v43 <= 0xFD) {
LABEL_78:
      }
        uint64_t v44 = 1;
      int v45 = -a2;
      unint64_t v46 = v44 + v20;
      if (v46 > v19) {
        unint64_t v19 = v46;
      }
      if (v19 <= 9) {
        unint64_t v19 = 9;
      }
      if (v19 > 3) {
        goto LABEL_84;
      }
      unsigned int v47 = ((1 << (8 * v19)) + 3) >> (8 * v19);
      if (v47 > 0xFFFB)
      {
        *(_DWORD *)&a1[v19] = v45;
      }
      else if (v47 <= 0xFB)
      {
LABEL_84:
        a1[v19] = v45;
      }
      else
      {
        *(_WORD *)&a1[v19] = v45;
      }
      return;
  }
}

uint64_t sub_1C99A58FC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v35 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v33 = *(void *)(sub_1C9BEC028() - 8);
  int v2 = *(_DWORD *)(v33 + 80);
  uint64_t v34 = *(void *)(sub_1C9BEAC48() - 8);
  int v30 = *(_DWORD *)(v34 + 80) | v2;
  uint64_t v32 = *(void *)(sub_1C9BEAF18() - 8);
  int v3 = *(_DWORD *)(v32 + 80) & 0xF8;
  uint64_t v4 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 | v5 | 7;
  uint64_t v31 = *(void *)(sub_1C9BEC928() - 8);
  int v7 = *(_DWORD *)(v31 + 80);
  uint64_t v8 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v9 = (v30 | (v7 | *(_DWORD *)(v8 + 80))) & 0xF8 | v6;
  uint64_t v10 = (v35 + v9) & ~v9;
  unint64_t v11 = *(void *)(v33 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v34 + 64)) {
    unint64_t v11 = *(void *)(v34 + 64);
  }
  uint64_t v12 = *(void *)(v4 + 64) + ((*(void *)(v32 + 64) + v5) & ~v5);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v11 <= v14) {
    unint64_t v11 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v15 = ((((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v11 <= v15) {
    unint64_t v11 = v15;
  }
  if (v11 <= ((v14 + ((v6 + ((*(void *)(v31 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v11 = ((v14 + ((v6 + ((*(void *)(v31 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v16 = *(void *)(v8 + 64);
  if (v11 > v16) {
    unint64_t v16 = v11;
  }
  if (v16 <= 0x18) {
    unint64_t v16 = 24;
  }
  unint64_t v17 = ((((v10 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v18 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v18 <= 9) {
    unint64_t v18 = 9;
  }
  char v19 = 8 * v18;
  if (v18 > 3) {
    goto LABEL_23;
  }
  unsigned int v20 = ((1 << v19) + 1) >> v19;
  uint64_t v21 = 2;
  if (v20 > 0xFFFD) {
    uint64_t v21 = 4;
  }
  if (v20 <= 0xFD) {
LABEL_23:
  }
    uint64_t v21 = 1;
  unint64_t v22 = v21 + v18;
  if (v22 <= v17) {
    unint64_t v22 = v17;
  }
  if (v22 <= 9) {
    unint64_t v22 = 9;
  }
  if (v22 > 3) {
    goto LABEL_29;
  }
  unsigned int v24 = ((1 << (8 * v22)) + 3) >> (8 * v22);
  if (v24 > 0xFFFB)
  {
    uint64_t result = *(unsigned int *)&a1[v22];
  }
  else
  {
    if (v24 <= 0xFB)
    {
LABEL_29:
      uint64_t result = a1[v22];
      goto LABEL_34;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v22];
  }
LABEL_34:
  if (result >= 4)
  {
    if (v18 > 3) {
      goto LABEL_39;
    }
    unsigned int v25 = ((1 << v19) + 1) >> v19;
    uint64_t v26 = 2;
    if (v25 > 0xFFFD) {
      uint64_t v26 = 4;
    }
    if (v25 <= 0xFD) {
LABEL_39:
    }
      uint64_t v26 = 1;
    unint64_t v27 = v26 + v18;
    if (v27 > v17) {
      unint64_t v17 = v27;
    }
    if (v17 <= 9) {
      LODWORD(v17) = 9;
    }
    if (v17 <= 3) {
      uint64_t v28 = v17;
    }
    else {
      uint64_t v28 = 4;
    }
    switch(v28)
    {
      case 1:
        int v29 = *a1;
        goto LABEL_52;
      case 2:
        int v29 = *(unsigned __int16 *)a1;
        goto LABEL_52;
      case 3:
        int v29 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_52;
      case 4:
        int v29 = *(_DWORD *)a1;
LABEL_52:
        if (v17 < 4) {
          uint64_t result = (v29 | ((result - 4) << (8 * v17))) + 4;
        }
        else {
          uint64_t result = (v29 + 4);
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C99A5DD0(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v49 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v46 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v46 + 80);
  uint64_t v47 = *(void *)(sub_1C9BEAC48() - 8);
  int v43 = *(_DWORD *)(v47 + 80) | v3;
  uint64_t v45 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v45 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v44 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v44 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v43 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v49 + v10) & ~v10;
  unint64_t v12 = *(void *)(v46 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v47 + 64)) {
    unint64_t v12 = *(void *)(v47 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v45 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v44 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v44 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v19 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  if (a2 > 3)
  {
    char v23 = 8 * v19;
    if (v19 > 3) {
      goto LABEL_35;
    }
    unsigned int v24 = ((1 << v23) + 1) >> v23;
    uint64_t v25 = 2;
    if (v24 > 0xFFFD) {
      uint64_t v25 = 4;
    }
    if (v24 <= 0xFD) {
LABEL_35:
    }
      uint64_t v25 = 1;
    unint64_t v26 = v25 + v19;
    if (v26 <= v18) {
      unint64_t v26 = v18;
    }
    if (v26 <= 9) {
      LODWORD(v26) = 9;
    }
    BOOL v27 = v26 > 3;
    char v28 = 8 * v26;
    int v29 = (a2 - 4) & ~(-1 << v28);
    if (v27) {
      unsigned int v30 = 4;
    }
    else {
      unsigned int v30 = ((a2 - 4) >> v28) + 4;
    }
    if (v27) {
      int v31 = a2 - 4;
    }
    else {
      int v31 = v29;
    }
    if (v19 > 3) {
      goto LABEL_50;
    }
    unsigned int v32 = ((1 << v23) + 1) >> v23;
    uint64_t v33 = 2;
    if (v32 > 0xFFFD) {
      uint64_t v33 = 4;
    }
    if (v32 <= 0xFD) {
LABEL_50:
    }
      uint64_t v33 = 1;
    unint64_t v34 = v33 + v19;
    if (v34 <= v18) {
      unint64_t v34 = v18;
    }
    if (v34 <= 9) {
      unint64_t v34 = 9;
    }
    if (v34 > 3) {
      goto LABEL_56;
    }
    unsigned int v36 = ((1 << (8 * v34)) + 3) >> (8 * v34);
    if (v36 > 0xFFFB)
    {
      *(_DWORD *)&a1[v34] = v30;
    }
    else
    {
      if (v36 <= 0xFB)
      {
LABEL_56:
        a1[v34] = v30;
        goto LABEL_65;
      }
      *(_WORD *)&a1[v34] = v30;
    }
LABEL_65:
    if (v19 > 3) {
      goto LABEL_69;
    }
    unsigned int v37 = ((1 << v23) + 1) >> v23;
    uint64_t v38 = 2;
    if (v37 > 0xFFFD) {
      uint64_t v38 = 4;
    }
    if (v37 <= 0xFD) {
LABEL_69:
    }
      uint64_t v38 = 1;
    unint64_t v39 = v38 + v19;
    if (v39 > v18) {
      unint64_t v18 = v39;
    }
    if (v18 <= 9) {
      size_t v40 = 9;
    }
    else {
      size_t v40 = v18;
    }
    if (v40 >= 4) {
      int v41 = 4;
    }
    else {
      int v41 = v40;
    }
    bzero(a1, v40);
    switch(v41)
    {
      case 2:
        *(_WORD *)a1 = v31;
        break;
      case 3:
        *(_WORD *)a1 = v31;
        a1[2] = BYTE2(v31);
        break;
      case 4:
        *(_DWORD *)a1 = v31;
        break;
      default:
        *a1 = v31;
        break;
    }
    return;
  }
  if (v19 > 3) {
    goto LABEL_24;
  }
  unsigned int v20 = ((1 << (8 * v19)) + 1) >> (8 * v19);
  uint64_t v21 = 2;
  if (v20 > 0xFFFD) {
    uint64_t v21 = 4;
  }
  if (v20 <= 0xFD) {
LABEL_24:
  }
    uint64_t v21 = 1;
  unint64_t v22 = v21 + v19;
  if (v22 > v18) {
    unint64_t v18 = v22;
  }
  if (v18 <= 9) {
    unint64_t v18 = 9;
  }
  if (v18 > 3) {
    goto LABEL_30;
  }
  unsigned int v35 = ((1 << (8 * v18)) + 3) >> (8 * v18);
  if (v35 > 0xFFFB)
  {
    *(_DWORD *)&a1[v18] = a2;
  }
  else
  {
    if (v35 <= 0xFB)
    {
LABEL_30:
      a1[v18] = a2;
      return;
    }
    *(_WORD *)&a1[v18] = a2;
  }
}

uint64_t sub_1C99A63B4()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_31_28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_14_54();
  return sub_1C999D08C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C99A644C()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999CF80(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A64DC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C99A6514()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999CE74(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A65A4()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999CD68(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A6634()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_31_28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_14_54();
  return sub_1C999CC54(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C99A66CC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C999CA90(v3, v4);
}

uint64_t sub_1C99A6754()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_100();
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  return sub_1C999CB38(v0, v2, v1);
}

uint64_t sub_1C99A67F0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C999C9E8(v3, v4);
}

uint64_t sub_1C99A6878()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C999C940(v3, v4);
}

uint64_t sub_1C99A6900()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_31_28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_14_54();
  return sub_1C999D1A0(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C99A6998()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999D524(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A6A28()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999D770(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A6AB8()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999D9BC(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A6B48()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_128();
  return sub_1C999DC08(v3, v4, v5, v6, v7);
}

uint64_t sub_1C99A6BD8()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_31_28();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_14_54();
  return sub_1C999DE54(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C99A6C70(uint64_t a1)
{
  return sub_1C999DF58(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C99A6C84(uint64_t a1)
{
  return sub_1C999DCEC(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C99A6C94(uint64_t a1)
{
  return sub_1C999DAA0(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C99A6CA4(uint64_t a1)
{
  return sub_1C999D854(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C99A6CB4(uint64_t a1)
{
  return sub_1C999D608(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C99A6CC4(uint64_t a1)
{
  return sub_1C999D2B4(a1, v1[5], v1[6], v1[2], v1[3], v1[4]);
}

uint64_t sub_1C99A6CD4()
{
  sub_1C9BEDEE8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEDA18();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C99A6D84(uint64_t a1)
{
  sub_1C9BEDEE8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v2 = sub_1C9BEDA18();
  OUTLINED_FUNCTION_2_4(v2);

  return sub_1C999D4B8(a1);
}

uint64_t OUTLINED_FUNCTION_10_57()
{
  uint64_t v3 = *(void *)(v1 + 104);
  *(void *)uint64_t v3 = v0;
  *(unsigned char *)(v3 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_14_54()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_43()
{
  return v0;
}

__n128 OUTLINED_FUNCTION_25_34(__n128 *a1)
{
  v3[3].n128_u64[1] = (unint64_t)a1;
  __n128 result = v3[2];
  a1[1] = result;
  a1[2].n128_u64[0] = v1;
  a1[2].n128_u64[1] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_38_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t OUTLINED_FUNCTION_39_28()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_50_17()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_57_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_58_15(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 + 32;
}

void *OUTLINED_FUNCTION_61_17(void *result)
{
  result[2] = v4;
  result[3] = v3;
  result[4] = v2;
  result[5] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_75_12()
{
  return *(void *)(v0 + 112);
}

uint64_t OUTLINED_FUNCTION_85_7()
{
  return v0;
}

uint64_t sub_1C99A6FAC(uint64_t a1)
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_2_70();
  MEMORY[0x1F4188790](v3, v4);
  uint64_t v5 = OUTLINED_FUNCTION_0_53();
  sub_1C97D1F40(a1 + *(int *)(v5 + 20), v1);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = OUTLINED_FUNCTION_3_72();
    if (v6 == v7 && a1 == 0x80000001C9C19740)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    char v8 = OUTLINED_FUNCTION_1_68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      return 1;
    }
  }
  else
  {
    sub_1C97F25EC(v1);
  }
  return 0;
}

uint64_t OUTLINED_FUNCTION_0_53()
{
  return type metadata accessor for Input(0);
}

uint64_t OUTLINED_FUNCTION_1_68()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_3_72()
{
  return *(void *)v0;
}

uint64_t sub_1C99A7110()
{
  uint64_t result = type metadata accessor for USOKeyPath();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C99A71A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0
    && ((((*(void *)(v4 + 64) + 7 + ((v5 + 48) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x18)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v10 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v9 = *v10;
    v9[1] = v10[1];
    uint64_t v11 = (void *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C9BEC838();
  }
  *a1 = *a2;
  sub_1C9BEC838();
}

uint64_t sub_1C99A7354(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  swift_release();

  return swift_release();
}

void sub_1C99A741C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  v4[1] = v5[1];
  uint64_t v6 = (void *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

void sub_1C99A7540(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  v4[1] = v5[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v7[1];
  *uint64_t v6 = *v7;
  v6[1] = v8;
  sub_1C9BEC838();
}

_OWORD *sub_1C99A7698(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  uint64_t v13 = *(void *)(v9 + 32) + 7;
  unint64_t v14 = (_OWORD *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (_OWORD *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v14 = *v15;
  *(_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1C99A7770(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  swift_release();
  uint64_t v11 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v12 = v11 + 40;
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = ((unint64_t)v9 + v13 + 16) & ~v13;
  uint64_t v15 = ((unint64_t)v10 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v14, v15);
  uint64_t v16 = *(void *)(v12 + 24) + 7;
  unint64_t v17 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = v16 + v15;
  unint64_t v19 = (v18 & 0xFFFFFFFFFFFFFFF8) + 23;
  _OWORD *v17 = *(_OWORD *)(v18 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C99A7894(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 48) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *(unsigned __int8 *)(a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)(a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C99A79F4);
      case 4:
        int v15 = *(_DWORD *)(a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *(_DWORD *)a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v6 & 0x80000000) != 0) {
    return __swift_getEnumTagSinglePayload((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 16) & ~v7, v6, v4);
  }
  unint64_t v18 = *(void *)(a1 + 8);
  if (v18 >= 0xFFFFFFFF) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_1C99A7A08(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v16 = a2 - v9;
    }
    else {
      int v16 = 1;
    }
    if (((((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 48) & ~v10) + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v17 = ~v9 + a2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C99A7C00);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v18 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10;
          __swift_storeEnumTagSinglePayload(v18, a2, v8, v6);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for PromptInputResolver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99A7C40()
{
  type metadata accessor for USOKeyPath();
  OUTLINED_FUNCTION_8_4();
  uint64_t v0 = OUTLINED_FUNCTION_33_1();

  return v1(v0);
}

uint64_t sub_1C99A7CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v180 = a3;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v162 = sub_1C9BEB458();
  OUTLINED_FUNCTION_0();
  uint64_t v161 = v6;
  uint64_t v9 = MEMORY[0x1F4188790](v7, v8);
  int v160 = (char *)&v153 - v10;
  uint64_t v175 = a2;
  uint64_t v159 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v9, v11);
  OUTLINED_FUNCTION_33_0();
  unint64_t v158 = v12;
  uint64_t v13 = *(void *)(a2 + 24);
  OUTLINED_FUNCTION_0();
  uint64_t v163 = v14;
  MEMORY[0x1F4188790](v15, v16);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v19, v20);
  OUTLINED_FUNCTION_29_9();
  MEMORY[0x1F4188790](v21, v22);
  unint64_t v169 = (char *)&v153 - v23;
  uint64_t v174 = v5;
  uint64_t v24 = sub_1C9BEB4F8();
  uint64_t v165 = sub_1C9BEDEE8();
  OUTLINED_FUNCTION_0();
  uint64_t v164 = v25;
  uint64_t v28 = MEMORY[0x1F4188790](v26, v27);
  unint64_t v182 = (uint8_t *)&v153 - v29;
  uint64_t v176 = v24;
  uint64_t v30 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v28, v31);
  uint64_t v33 = (char *)&v153 - v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58FA88);
  MEMORY[0x1F4188790](v34 - 8, v35);
  OUTLINED_FUNCTION_33_0();
  uint64_t v179 = v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58B3F0);
  OUTLINED_FUNCTION_0();
  uint64_t v39 = v38;
  MEMORY[0x1F4188790](v40, v41);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_9();
  uint64_t v44 = MEMORY[0x1F4188790](v42, v43);
  unint64_t v173 = (char *)&v153 - v45;
  MEMORY[0x1F4188790](v44, v46);
  unint64_t v177 = (char *)&v153 - v47;
  type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v48, v49);
  uint64_t v51 = (char *)&v153 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_1C9BECF88();
  uint64_t v53 = __swift_project_value_buffer(v52, (uint64_t)qword_1EBC7A520);
  unint64_t v181 = (void (*)(char *, uint64_t, uint64_t))a1;
  sub_1C962C9D4(a1, (uint64_t)v51);
  uint64_t v178 = v53;
  unsigned int v54 = sub_1C9BECF78();
  os_log_type_t v55 = sub_1C9BEDC78();
  BOOL v56 = os_log_type_enabled(v54, v55);
  int v171 = v33;
  uint64_t v170 = v30;
  if (v56)
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v168 = v13;
    char v58 = (uint8_t *)v57;
    int v185 = (uint8_t *)swift_slowAlloc();
    uint64_t v172 = v39;
    *(_DWORD *)char v58 = 136315138;
    uint64_t v59 = Input.description.getter();
    *(void *)&v183[0] = sub_1C95FF228(v59, v60, (uint64_t *)&v185);
    uint64_t v39 = v172;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9706570((uint64_t)v51);
    _os_log_impl(&dword_1C95F9000, v54, v55, "[PromptInputResolver] Resolving user input %s", v58, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v13 = v168;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C9706570((uint64_t)v51);
  }

  char v61 = sub_1C9939A54();
  int v62 = v182;
  if (v61)
  {
    sub_1C97962E8();
    uint64_t v63 = swift_allocError();
    uint64_t v64 = v180;
    uint64_t *v180 = v63;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
    uint64_t v65 = sub_1C9BEE788();
    OUTLINED_FUNCTION_33_1();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    uint64_t v66 = (uint64_t)v64;
    uint64_t v67 = 0;
    uint64_t v68 = 1;
    uint64_t v69 = v65;
    return __swift_storeEnumTagSinglePayload(v66, v67, v68, v69);
  }
  if (!sub_1C993A3B0())
  {
    uint64_t v71 = v179;
    __swift_storeEnumTagSinglePayload(v179, 1, 1, v37);
    goto LABEL_15;
  }
  uint64_t v70 = sub_1C9BEBE88();
  swift_release();
  uint64_t v71 = v179;
  sub_1C9612D1C(v70);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v71, 1, v37) == 1)
  {
LABEL_15:
    sub_1C95FE81C(v71, &qword_1EA58FA88);
    unsigned int v93 = (void *)sub_1C9BECF78();
    os_log_type_t v94 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_4(v94))
    {
      *(_WORD *)swift_slowAlloc() = 0;
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v95, v96, "[PromptInputResolver] Could not extract task from input.");
      OUTLINED_FUNCTION_11_4();
    }

    goto LABEL_18;
  }
  uint64_t v72 = v177;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v177, v71, v37);
  uint64_t v73 = OUTLINED_FUNCTION_33_1();
  unint64_t v181 = v74;
  ((void (*)(uint64_t))v74)(v73);
  uint64_t v75 = v37;
  uint64_t v76 = *(void *)(v175 + 32);
  sub_1C9BEB4E8();
  uint64_t v77 = v176;
  if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v176) == 1)
  {
    uint64_t v179 = v76;
    uint64_t v172 = v39;
    OUTLINED_FUNCTION_35_7();
    OUTLINED_FUNCTION_37();
    v78();
    uint64_t v79 = v166;
    unint64_t v80 = v181;
    v181(v166, (uint64_t)v72, v37);
    int v81 = v178;
    int v82 = v72;
    unsigned int v83 = sub_1C9BECF78();
    os_log_type_t v84 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_4(v84))
    {
      uint64_t v85 = swift_slowAlloc();
      unsigned int v86 = (uint8_t *)swift_slowAlloc();
      uint64_t v168 = v13;
      int v185 = v86;
      *(_DWORD *)uint64_t v85 = 136315394;
      LODWORD(v182) = v81;
      v80(v173, (uint64_t)v79, v75);
      uint64_t v87 = sub_1C9BED5D8();
      *(void *)&v183[0] = sub_1C95FF228(v87, v88, (uint64_t *)&v185);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      uint64_t v154 = v75;
      unint64_t v181 = *(void (**)(char *, uint64_t, uint64_t))(v172 + 8);
      ((void (*)(char *, uint64_t))v181)(v79, v75);
      *(_WORD *)(v85 + 12) = 2080;
      sub_1C9BEB588();
      uint64_t v89 = sub_1C9BEB438();
      unint64_t v91 = v90;
      OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_37();
      v92();
      *(void *)&v183[0] = sub_1C95FF228(v89, v91, (uint64_t *)&v185);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v83, (os_log_type_t)v182, "[PromptInputResolver] Could not cast %s to DynamicTask<%s>).", (uint8_t *)v85, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      ((void (*)(char *, uint64_t))v181)(v177, v154);
    }
    else
    {

      char v122 = *(void (**)(uint64_t, uint64_t))(v172 + 8);
      v122((uint64_t)v79, v75);
      v122((uint64_t)v82, v75);
    }
LABEL_18:
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
    sub_1C9BEE788();
    uint64_t v66 = OUTLINED_FUNCTION_15_45();
    return __swift_storeEnumTagSinglePayload(v66, v67, v68, v69);
  }
  uint64_t v154 = v37;
  uint64_t v98 = v170;
  uint64_t v99 = (uint64_t)v171;
  (*(void (**)(char *, uint8_t *, uint64_t))(v170 + 32))(v171, v62, v77);
  uint64_t v100 = type metadata accessor for USOKeyPath();
  uint64_t v101 = v167;
  if ((USOKeyPath.nodeExists(_:)() & 1) == 0)
  {
    uint64_t v123 = v159;
    char v124 = v158;
    uint64_t v125 = v175;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v159 + 16))(v158, v101, v175);
    char v126 = sub_1C9BECF78();
    os_log_type_t v127 = sub_1C9BEDC88();
    if (os_log_type_enabled(v126, v127))
    {
      unint64_t v128 = (uint8_t *)swift_slowAlloc();
      int v185 = (uint8_t *)swift_slowAlloc();
      uint64_t v172 = v39;
      unint64_t v182 = v128;
      *(_DWORD *)unint64_t v128 = 136315138;
      unint64_t v181 = (void (*)(char *, uint64_t, uint64_t))(v128 + 4);
      uint64_t v129 = *v124;
      unint64_t v130 = v124[1];
      swift_bridgeObjectRetain();
      uint64_t v131 = sub_1C95FF228(v129, v130, (uint64_t *)&v185);
      OUTLINED_FUNCTION_5_67(v131);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v123 + 8))(v124, v175);
      _os_log_impl(&dword_1C95F9000, v126, v127, "[PromptInputResolver] No node found for input and USOKeyPath %s.", v182, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_37();
      v132();
      OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_37();
      v133();
    }
    else
    {

      (*(void (**)(uint64_t *, uint64_t))(v123 + 8))(v124, v125);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v99, v176);
      uint64_t v134 = OUTLINED_FUNCTION_14_55();
      v135(v134);
    }
    goto LABEL_18;
  }
  unsigned int v102 = v169;
  USOKeyPath.getValue(_:)(v99, v100);
  uint64_t v103 = v13;
  unint64_t v104 = v163 + 16;
  uint64_t v105 = *(void (**)(uint64_t, char *, uint64_t))(v163 + 16);
  v105(v157, v102, v103);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA594118);
  uint64_t v106 = v103;
  char v107 = swift_dynamicCast();
  uint64_t v108 = v154;
  if ((v107 & 1) == 0)
  {
    uint64_t v184 = 0;
    memset(v183, 0, sizeof(v183));
    sub_1C95FE81C((uint64_t)v183, qword_1EA594120);
LABEL_32:
    uint64_t v136 = v156;
    v105((uint64_t)v156, v169, v106);
    unsigned int v137 = sub_1C9BECF78();
    os_log_type_t v138 = sub_1C9BEDC78();
    if (os_log_type_enabled(v137, v138))
    {
      unsigned int v139 = (uint8_t *)swift_slowAlloc();
      unint64_t v182 = (uint8_t *)swift_slowAlloc();
      int v185 = v182;
      *(_DWORD *)unsigned int v139 = 136315138;
      unint64_t v181 = (void (*)(char *, uint64_t, uint64_t))(v139 + 4);
      v105(v155, v136, v106);
      uint64_t v140 = sub_1C9BED5D8();
      unint64_t v104 = v141;
      uint64_t v142 = sub_1C95FF228(v140, v141, (uint64_t *)&v185);
      OUTLINED_FUNCTION_5_67(v142);
      swift_bridgeObjectRelease();
      uint64_t v143 = OUTLINED_FUNCTION_2_71();
      v144(v143);
      _os_log_impl(&dword_1C95F9000, v137, v138, "[PromptInputResolver] Resolved input to value: %s", v139, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      OUTLINED_FUNCTION_35_7();
      OUTLINED_FUNCTION_37();
      v145();
      uint64_t v146 = OUTLINED_FUNCTION_14_55();
    }
    else
    {

      uint64_t v149 = OUTLINED_FUNCTION_2_71();
      v150(v149);
      uint64_t v151 = OUTLINED_FUNCTION_6_61();
      v152(v151);
      unint64_t v148 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      uint64_t v146 = (uint64_t)v177;
      uint64_t v147 = v108;
    }
    v148(v146, v147);
    uint64_t v64 = v180;
    (*(void (**)(uint64_t *, char *, uint64_t))(v104 + 32))(v180, v169, v106);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
    uint64_t v65 = sub_1C9BEE788();
    OUTLINED_FUNCTION_33_1();
    goto LABEL_8;
  }
  sub_1C95FD5D8(v183, (uint64_t)&v185);
  uint64_t v109 = v186;
  uint64_t v110 = v187;
  __swift_project_boxed_opaque_existential_1(&v185, v186);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v109, v110) & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v185);
    goto LABEL_32;
  }
  uint64_t v111 = (void *)sub_1C9BECF78();
  os_log_type_t v112 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_4(v112))
  {
    *(_WORD *)swift_slowAlloc() = 0;
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v113, v114, "[PromptInputResolver] No value was found for this input.");
    OUTLINED_FUNCTION_11_4();
  }

  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_37();
  v115();
  uint64_t v116 = OUTLINED_FUNCTION_6_61();
  v117(v116);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v177, v108);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BEE788();
  uint64_t v118 = OUTLINED_FUNCTION_15_45();
  __swift_storeEnumTagSinglePayload(v118, v119, v120, v121);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v185);
}

uint64_t OUTLINED_FUNCTION_2_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_5_67(uint64_t a1)
{
  *(void *)(v1 - 176) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_6_61()
{
  return *(void *)(v0 - 272);
}

uint64_t OUTLINED_FUNCTION_14_55()
{
  return *(void *)(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return *(void *)(v0 - 200);
}

uint64_t sub_1C99A8CA0(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C99A8CE8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v7;
  *(void *)(a1 + 104) = v8;
  sub_1C9BEC838();
}

void sub_1C99A8DB0(void *a1, void *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  uint64_t v4 = a2[11];
  a1[10] = a2[10];
  a1[11] = v4;
  sub_1C9BEC838();
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t sub_1C99A8E30(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C99A8EAC(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C99A8EEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for PromptOutputGenerator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99A8F60@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, void *a6@<X8>)
{
  uint64_t v10 = *a5;
  uint64_t v11 = a5[1];
  sub_1C95FD5D8(a1, (uint64_t)a6);
  uint64_t result = sub_1C95FD5D8(a2, (uint64_t)(a6 + 5));
  a6[10] = a3;
  a6[11] = a4;
  a6[12] = v10;
  a6[13] = v11;
  return result;
}

uint64_t sub_1C99A8FBC()
{
  OUTLINED_FUNCTION_24();
  v1[57] = v2;
  v1[58] = v0;
  v1[56] = v3;
  uint64_t v4 = type metadata accessor for NLContextUpdate();
  v1[59] = v4;
  OUTLINED_FUNCTION_22(v4);
  v1[60] = OUTLINED_FUNCTION_16();
  uint64_t v5 = sub_1C9BEB148();
  v1[61] = v5;
  OUTLINED_FUNCTION_5_0(v5);
  v1[62] = v6;
  v1[63] = OUTLINED_FUNCTION_16();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v7);
  v1[64] = OUTLINED_FUNCTION_16();
  uint64_t v8 = sub_1C9BEAB08();
  v1[65] = v8;
  OUTLINED_FUNCTION_5_0(v8);
  v1[66] = v9;
  v1[67] = OUTLINED_FUNCTION_16();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5941B8);
  OUTLINED_FUNCTION_22(v10);
  v1[68] = OUTLINED_FUNCTION_16();
  uint64_t v11 = type metadata accessor for OutputGenerationManifest();
  v1[69] = v11;
  OUTLINED_FUNCTION_22(v11);
  v1[70] = swift_task_alloc();
  v1[71] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ResponseBundle();
  v1[72] = v12;
  OUTLINED_FUNCTION_22(v12);
  v1[73] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v13, v14, v15);
}

uint64_t sub_1C99A9148()
{
  uint64_t v1 = (void *)v0[58];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[74] = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_1C99A924C;
  uint64_t v6 = v0[73];
  return v8(v6, v2, v3);
}

uint64_t sub_1C99A924C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  *(void *)(v4 + 600) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C99A932C()
{
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 464);
  sub_1C95FE5B0(*(void *)(v0 + 584) + *(int *)(*(void *)(v0 + 576) + 28), v2, &qword_1EA5941B8);
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v0 + 16, v3, v4);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 1, v1);
  uint64_t v7 = *(void *)(v0 + 568);
  if (EnumTagSinglePayload == 1)
  {
    uint64_t v8 = *(void **)(v0 + 560);
    uint64_t v9 = *(int **)(v0 + 552);
    uint64_t v10 = *(void *)(v0 + 472);
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 120);
    *((unsigned char *)v8 + v9[6]) = 0;
    *((unsigned char *)v8 + v9[7]) = 0;
    uint64_t v63 = v11;
    *((unsigned char *)v8 + v9[10]) = 0;
    __swift_storeEnumTagSinglePayload((uint64_t)v8 + v9[11], 1, 1, v10);
    *(void *)((char *)v8 + v9[12]) = 0;
    uint64_t v13 = (void *)((char *)v8 + v9[13]);
    *uint64_t v13 = 0;
    v13[1] = 0;
    uint64_t v14 = (void *)((char *)v8 + v9[14]);
    *uint64_t v14 = 0;
    v14[1] = 0;
    *((unsigned char *)v8 + v9[15]) = 0;
    *(void *)((char *)v8 + v9[17]) = 0;
    uint64_t v15 = (char *)v8 + v9[18];
    *(void *)uint64_t v15 = 0;
    *((_WORD *)v15 + 4) = 512;
    *((unsigned char *)v8 + v9[19]) = 0;
    *((unsigned char *)v8 + v9[20]) = 0;
    *((unsigned char *)v8 + v9[21]) = 0;
    *((unsigned char *)v8 + v9[22]) = 0;
    *((unsigned char *)v8 + v9[23]) = 0;
    uint64_t v16 = (void *)((char *)v8 + v9[24]);
    *uint64_t v16 = 0;
    v16[1] = 0;
    *(void *)((char *)v8 + v9[25]) = 0;
    *(void *)((char *)v8 + v9[26]) = MEMORY[0x1E4FBC860];
    uint64_t v17 = (char *)v8 + v9[27];
    uint64_t v18 = *MEMORY[0x1E4FA24B8];
    sub_1C9BEC958();
    OUTLINED_FUNCTION_8_4();
    (*(void (**)(char *, uint64_t))(v19 + 104))(v17, v18);
    uint64_t v20 = (uint64_t)v8 + v9[28];
    uint64_t v21 = sub_1C9BEC908();
    __swift_storeEnumTagSinglePayload(v20, 1, 1, v21);
    *uint64_t v8 = v63;
    v8[1] = v12;
    swift_bridgeObjectRetain();
    sub_1C965C4EC();
  }
  uint64_t v22 = *(void *)(v0 + 544);
  (*(void (**)(uint64_t, void))(v5 + 8))(v0 + 16, *(void *)(v0 + 456));
  sub_1C965C7D4(v22, v7);
  uint64_t v23 = *(void *)(v0 + 512);
  uint64_t v24 = *(void *)(v0 + 472);
  uint64_t v25 = *(void *)(v0 + 568) + *(int *)(*(void *)(v0 + 552) + 44);
  sub_1C95FE5B0(v25, v23, &qword_1EBC77C70);
  LODWORD(v24) = __swift_getEnumTagSinglePayload(v23, 1, v24);
  uint64_t v26 = sub_1C95FE76C(v23, &qword_1EBC77C70);
  if (v24 == 1)
  {
    uint64_t v27 = *(void *)(v0 + 600);
    (*(void (**)(uint64_t))(*(void *)(v0 + 464) + 80))(v26);
    if (v27)
    {
      uint64_t v28 = *(void *)(v0 + 568);
      sub_1C99AA5CC(*(void *)(v0 + 584), (void (*)(void))type metadata accessor for ResponseBundle);
      sub_1C99AA5CC(v28, (void (*)(void))type metadata accessor for OutputGenerationManifest);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_34_1();
      __asm { BRAA            X1, X16 }
    }
    uint64_t v32 = *(void *)(v0 + 496);
    uint64_t v31 = *(void *)(v0 + 504);
    uint64_t v33 = *(void *)(v0 + 480);
    uint64_t v34 = *(void *)(v0 + 488);
    uint64_t v35 = *(void *)(v0 + 472);
    NLContextUpdate.init()(v33);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA588540);
    unint64_t v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C9BEF570;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32))(v37 + v36, v31, v34);
    swift_bridgeObjectRelease();
    *(void *)(v33 + 216) = v37;
    sub_1C95FE76C(v25, &qword_1EBC77C70);
    sub_1C9652F6C(v33, v25);
    __swift_storeEnumTagSinglePayload(v25, 0, 1, v35);
    sub_1C99AA5CC(v33, (void (*)(void))type metadata accessor for NLContextUpdate);
  }
  uint64_t v38 = *(void *)(v0 + 584) + 8;
  sub_1C95FE5B0(v38, v0 + 168, &qword_1EA588570);
  if (*(void *)(v0 + 192))
  {
    uint64_t v39 = *(void *)(v0 + 584);
    sub_1C95FD5D8((long long *)(v0 + 168), v0 + 128);
    sub_1C95FE5B0(v39 + 48, v0 + 408, &qword_1EA588570);
    if (*(void *)(v0 + 432))
    {
      uint64_t v40 = *(void **)(v0 + 584);
      uint64_t v41 = *(void *)(v0 + 464);
      sub_1C95FD5D8((long long *)(v0 + 408), v0 + 368);
      __swift_project_boxed_opaque_existential_1((void *)(v41 + 40), *(void *)(v41 + 64));
      *(void *)(v0 + 608) = *v40;
      swift_bridgeObjectRetain();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 616) = v42;
      void *v42 = v43;
      v42[1] = sub_1C99A9D60;
      OUTLINED_FUNCTION_34_1();
      __asm { BRAA            X8, X16 }
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 128);
    uint64_t v46 = v0 + 408;
  }
  else
  {
    uint64_t v46 = v0 + 168;
  }
  sub_1C95FE76C(v46, &qword_1EA588570);
  sub_1C95FE5B0(v38, v0 + 248, &qword_1EA588570);
  uint64_t v47 = *(void **)(v0 + 584);
  if (*(void *)(v0 + 272))
  {
    uint64_t v48 = *(void *)(v0 + 464);
    sub_1C95FD5D8((long long *)(v0 + 248), v0 + 208);
    __swift_project_boxed_opaque_existential_1((void *)(v48 + 40), *(void *)(v48 + 64));
    *(void *)(v0 + 624) = *v47;
    swift_bridgeObjectRetain();
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    *(void *)(v0 + 632) = v49;
    void *v49 = v50;
    v49[1] = sub_1C99A9F34;
    OUTLINED_FUNCTION_5_68();
    OUTLINED_FUNCTION_34_1();
    __asm { BRAA            X7, X16 }
  }
  sub_1C95FE76C(v0 + 248, &qword_1EA588570);
  sub_1C95FE5B0((uint64_t)(v47 + 6), v0 + 328, &qword_1EA588570);
  uint64_t v53 = *(void **)(v0 + 584);
  uint64_t v54 = *(void *)(v0 + 464);
  if (*(void *)(v0 + 352))
  {
    sub_1C95FD5D8((long long *)(v0 + 328), v0 + 288);
    __swift_project_boxed_opaque_existential_1((void *)(v54 + 40), *(void *)(v54 + 64));
    *(void *)(v0 + 640) = *v53;
    swift_bridgeObjectRetain();
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    *(void *)(v0 + 648) = v55;
    void *v55 = v56;
    v55[1] = sub_1C99AA0FC;
    OUTLINED_FUNCTION_5_68();
    OUTLINED_FUNCTION_34_1();
    __asm { BRAA            X7, X16 }
  }
  sub_1C95FE76C(v0 + 328, &qword_1EA588570);
  __swift_project_boxed_opaque_existential_1((void *)(v54 + 40), *(void *)(v54 + 64));
  *(void *)(v0 + 656) = *v53;
  swift_bridgeObjectRetain();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 664) = v59;
  *uint64_t v59 = v60;
  v59[1] = sub_1C99AA2C4;
  OUTLINED_FUNCTION_34_1();
  __asm { BRAA            X6, X16 }
}

uint64_t sub_1C99A9D60()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99A9E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_70();
  uint64_t v11 = *(void *)(v10 + 584);
  __swift_destroy_boxed_opaque_existential_1(v10 + 368);
  __swift_destroy_boxed_opaque_existential_1(v10 + 128);
  sub_1C99AA5CC(v11, (void (*)(void))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_1_69();
  sub_1C99AA5CC(v11, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_60_8();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_1C99A9F34()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99AA018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_70();
  uint64_t v12 = *(void *)(v11 + 584);
  __swift_destroy_boxed_opaque_existential_1(v11 + 208);
  sub_1C99AA5CC(v12, (void (*)(void))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_1_69();
  sub_1C99AA5CC(v10, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_60_8();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1C99AA0FC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99AA1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_70();
  uint64_t v12 = *(void *)(v11 + 584);
  __swift_destroy_boxed_opaque_existential_1(v11 + 288);
  sub_1C99AA5CC(v12, (void (*)(void))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_1_69();
  sub_1C99AA5CC(v10, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_60_8();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_1C99AA2C4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99AA3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_70();
  sub_1C99AA5CC(*(void *)(v11 + 584), (void (*)(void))type metadata accessor for ResponseBundle);
  OUTLINED_FUNCTION_1_69();
  sub_1C99AA5CC(v10, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_60_8();
  return v13(v12, v13, v14, v15, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_1C99AA480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  OUTLINED_FUNCTION_54_8();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_1_69();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_60_8();
  return v11(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

uint64_t sub_1C99AA524()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C973D55C;
  return sub_1C99A8FBC();
}

uint64_t sub_1C99AA5CC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t OUTLINED_FUNCTION_5_68()
{
  return *(void *)(v0 + 448);
}

uint64_t PromptResult.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (void **)((char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  (*(void (**)(void **))(v12 + 16))(v11);
  uint64_t v13 = 0x6C6C65636E61632ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *v11;
      v17[0] = 0;
      v17[1] = 0xE000000000000000;
      sub_1C9BEE188();
      swift_bridgeObjectRelease();
      strcpy((char *)v17, ".error error: ");
      HIBYTE(v17[1]) = -18;
      swift_getErrorValue();
      sub_1C9BEE6E8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();

      uint64_t v13 = v17[0];
      break;
    case 2u:
      return v13;
    case 3u:
      uint64_t v13 = 0x6577736E616E752ELL;
      break;
    default:
      (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v7, v11, v1);
      v17[0] = 0;
      v17[1] = 0xE000000000000000;
      sub_1C9BEE188();
      sub_1C9BED6B8();
      sub_1C9BEE5E8();
      uint64_t v13 = v17[0];
      (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v1);
      break;
  }
  return v13;
}

id *sub_1C99AA96C(id *__dst, id *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 9uLL) {
    uint64_t v7 = 9;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    unsigned int v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      unsigned int v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    unsigned int v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  unsigned int v11 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)__dst;
        goto LABEL_20;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        goto LABEL_20;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_20:
        if (v7 < 4) {
          v13 |= v11 << v8;
        }
        unsigned int v9 = v13 + 2;
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
  }
  else if (!v9)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
  }
  if (v7 > 3) {
    goto LABEL_28;
  }
  unsigned int v15 = ((1 << v8) + 1) >> v8;
  if (v15 > 0xFFFD)
  {
    unsigned int v14 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v15 <= 0xFD)
    {
LABEL_28:
      unsigned int v14 = *((unsigned __int8 *)__src + v7);
      goto LABEL_33;
    }
    unsigned int v14 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_33:
  unsigned int v16 = v14 - 2;
  if (v14 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v17 = v7;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *(unsigned __int8 *)__src;
        goto LABEL_42;
      case 2:
        int v18 = *(unsigned __int16 *)__src;
        goto LABEL_42;
      case 3:
        int v18 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_42;
      case 4:
        int v18 = *(_DWORD *)__src;
LABEL_42:
        if (v7 < 4) {
          v18 |= v16 << v8;
        }
        unsigned int v14 = v18 + 2;
        break;
      default:
        break;
    }
  }
  if (v14 == 1)
  {
    id v20 = *__src;
    id v21 = *__src;
    void *__dst = v20;
    *((unsigned char *)__dst + 8) = *((unsigned char *)__src + 8);
    if (v7 > 3) {
      goto LABEL_52;
    }
    unsigned int v24 = ((1 << v8) + 1) >> v8;
    if (v24 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v24 <= 0xFD) {
LABEL_52:
    }
      *((unsigned char *)__dst + v7) = 1;
    else {
      *(_WORD *)((char *)__dst + v7) = 1;
    }
  }
  else if (v14)
  {
    if (v7 > 3) {
      goto LABEL_57;
    }
    unsigned int v22 = ((1 << v8) + 1) >> v8;
    uint64_t v23 = 2;
    if (v22 > 0xFFFD) {
      uint64_t v23 = 4;
    }
    if (v22 <= 0xFD) {
LABEL_57:
    }
      uint64_t v23 = 1;
    memcpy(__dst, __src, v23 + v7);
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v19 = ((1 << v8) + 1) >> v8;
      if (v19 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v19 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((unsigned char *)__dst + v7) = 0;
  }
  return __dst;
}

char *sub_1C99AACCC(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 9uLL) {
    uint64_t v4 = 9;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  char v5 = 8 * v4;
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v7 = ((1 << v5) + 1) >> v5;
  if (v7 > 0xFFFD)
  {
    unsigned int v6 = *(_DWORD *)&a2[v4];
  }
  else
  {
    if (v7 <= 0xFD)
    {
LABEL_5:
      unsigned int v6 = a2[v4];
      goto LABEL_10;
    }
    unsigned int v6 = *(unsigned __int16 *)&a2[v4];
  }
LABEL_10:
  unsigned int v8 = v6 - 2;
  if (v6 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_19;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_19:
        int v11 = (v10 | (v8 << v5)) + 2;
        unsigned int v6 = v10 + 2;
        if (v4 < 4) {
          unsigned int v6 = v11;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    *(void *)__dst = *(void *)a2;
    __dst[8] = a2[8];
    if (v4 > 3) {
      goto LABEL_28;
    }
    unsigned int v15 = ((1 << v5) + 1) >> v5;
    if (v15 > 0xFFFD)
    {
      *(_DWORD *)&__dst[v4] = 1;
      return __dst;
    }
    if (v15 <= 0xFD) {
LABEL_28:
    }
      __dst[v4] = 1;
    else {
      *(_WORD *)&__dst[v4] = 1;
    }
  }
  else if (v6)
  {
    if (v4 > 3) {
      goto LABEL_33;
    }
    unsigned int v13 = ((1 << v5) + 1) >> v5;
    uint64_t v14 = 2;
    if (v13 > 0xFFFD) {
      uint64_t v14 = 4;
    }
    if (v13 <= 0xFD) {
LABEL_33:
    }
      uint64_t v14 = 1;
    memcpy(__dst, a2, v14 + v4);
  }
  else
  {
    (*(void (**)(char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
    if (v4 <= 3)
    {
      unsigned int v12 = ((1 << v5) + 1) >> v5;
      if (v12 > 0xFFFD)
      {
        *(_DWORD *)&__dst[v4] = 0;
        return __dst;
      }
      if (v12 > 0xFD)
      {
        *(_WORD *)&__dst[v4] = 0;
        return __dst;
      }
    }
    __dst[v4] = 0;
  }
  return __dst;
}

id *sub_1C99AAF14(id *__dst, id *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 9uLL) {
    uint64_t v7 = 9;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_6;
  }
  unsigned int v10 = ((1 << v8) + 1) >> v8;
  if (v10 > 0xFFFD)
  {
    unsigned int v9 = *(_DWORD *)((char *)__dst + v7);
  }
  else
  {
    if (v10 <= 0xFD)
    {
LABEL_6:
      unsigned int v9 = *((unsigned __int8 *)__dst + v7);
      goto LABEL_11;
    }
    unsigned int v9 = *(unsigned __int16 *)((char *)__dst + v7);
  }
LABEL_11:
  unsigned int v11 = v9 - 2;
  if (v9 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *(unsigned __int8 *)__dst;
        goto LABEL_20;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_20;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (*((unsigned __int8 *)__dst + 2) << 16);
        goto LABEL_20;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_20:
        int v14 = (v13 | (v11 << v8)) + 2;
        unsigned int v9 = v13 + 2;
        if (v7 < 4) {
          unsigned int v9 = v14;
        }
        break;
      default:
        break;
    }
  }
  if (v9 == 1)
  {
  }
  else if (!v9)
  {
    (*(void (**)(id *, uint64_t))(v6 + 8))(__dst, v5);
  }
  if (v7 > 3) {
    goto LABEL_27;
  }
  unsigned int v16 = ((1 << v8) + 1) >> v8;
  if (v16 > 0xFFFD)
  {
    unsigned int v15 = *(_DWORD *)((char *)__src + v7);
  }
  else
  {
    if (v16 <= 0xFD)
    {
LABEL_27:
      unsigned int v15 = *((unsigned __int8 *)__src + v7);
      goto LABEL_32;
    }
    unsigned int v15 = *(unsigned __int16 *)((char *)__src + v7);
  }
LABEL_32:
  unsigned int v17 = v15 - 2;
  if (v15 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v18 = v7;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *(unsigned __int8 *)__src;
        goto LABEL_41;
      case 2:
        int v19 = *(unsigned __int16 *)__src;
        goto LABEL_41;
      case 3:
        int v19 = *(unsigned __int16 *)__src | (*((unsigned __int8 *)__src + 2) << 16);
        goto LABEL_41;
      case 4:
        int v19 = *(_DWORD *)__src;
LABEL_41:
        int v20 = (v19 | (v17 << v8)) + 2;
        unsigned int v15 = v19 + 2;
        if (v7 < 4) {
          unsigned int v15 = v20;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    void *__dst = *__src;
    *((unsigned char *)__dst + 8) = *((unsigned char *)__src + 8);
    if (v7 > 3) {
      goto LABEL_50;
    }
    unsigned int v24 = ((1 << v8) + 1) >> v8;
    if (v24 > 0xFFFD)
    {
      *(_DWORD *)((char *)__dst + v7) = 1;
      return __dst;
    }
    if (v24 <= 0xFD) {
LABEL_50:
    }
      *((unsigned char *)__dst + v7) = 1;
    else {
      *(_WORD *)((char *)__dst + v7) = 1;
    }
  }
  else if (v15)
  {
    if (v7 > 3) {
      goto LABEL_55;
    }
    unsigned int v22 = ((1 << v8) + 1) >> v8;
    uint64_t v23 = 2;
    if (v22 > 0xFFFD) {
      uint64_t v23 = 4;
    }
    if (v22 <= 0xFD) {
LABEL_55:
    }
      uint64_t v23 = 1;
    memcpy(__dst, __src, v23 + v7);
  }
  else
  {
    (*(void (**)(id *, id *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v21 = ((1 << v8) + 1) >> v8;
      if (v21 > 0xFFFD)
      {
        *(_DWORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
      if (v21 > 0xFD)
      {
        *(_WORD *)((char *)__dst + v7) = 0;
        return __dst;
      }
    }
    *((unsigned char *)__dst + v7) = 0;
  }
  return __dst;
}

uint64_t sub_1C99AB274(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 9;
  if (*(void *)(v3 + 64) > 9uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  char v5 = 8;
  char v6 = 8 * v4;
  if (v4 > 3)
  {
    int v7 = 3;
    goto LABEL_13;
  }
  unsigned int v8 = ((1 << v6) + 1) >> v6;
  if (v8 >= 0xFFFE) {
    char v9 = 32;
  }
  else {
    char v9 = 16;
  }
  if (v8 >= 0xFE) {
    char v5 = v9;
  }
  else {
    char v5 = 8;
  }
  if (v8 <= 0xFFFD)
  {
    int v7 = v8 + 2;
LABEL_13:
    unsigned int v10 = (1 << v5) - v7;
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  unsigned int v10 = 0x7FFFFFFF;
LABEL_15:
  if (v4 > 3) {
    goto LABEL_19;
  }
  unsigned int v11 = ((1 << v6) + 1) >> v6;
  uint64_t v12 = 2;
  if (v11 > 0xFFFD) {
    uint64_t v12 = 4;
  }
  if (v11 <= 0xFD) {
LABEL_19:
  }
    uint64_t v12 = 1;
  if (!a2) {
    return 0;
  }
  if (a2 <= v10) {
    goto LABEL_40;
  }
  uint64_t v13 = v12 + v4;
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((a2 - v10 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
    if (v16 < 2)
    {
LABEL_40:
      if (v10)
      {
        if (v4 > 3) {
          goto LABEL_44;
        }
        unsigned int v20 = ((1 << v6) + 1) >> v6;
        if (v20 > 0xFFFD)
        {
          unsigned int v22 = *(_DWORD *)((char *)a1 + v4);
          unsigned int v23 = ~v22;
          goto LABEL_58;
        }
        if (v20 >= 0xFE)
        {
          int v26 = *(unsigned __int16 *)((char *)a1 + v4);
          unsigned int v22 = v26 | 0xFFFF0000;
          unsigned int v23 = v26 ^ 0xFFFF;
        }
        else
        {
LABEL_44:
          int v21 = *((unsigned __int8 *)a1 + v4);
          unsigned int v22 = v21 | 0xFFFFFF00;
          unsigned int v23 = v21 ^ 0xFF;
          if (v4 > 3)
          {
            int v24 = 3;
            goto LABEL_51;
          }
        }
        unsigned int v27 = ((1 << v6) + 1) >> v6;
        if (v27 <= 0xFFFD)
        {
          int v24 = v27 + 2;
          if (v27 > 0xFD)
          {
            char v28 = 16;
LABEL_57:
            unsigned int v29 = (1 << v28) - v24;
            if ((v29 & 0x80000000) == 0) {
              goto LABEL_59;
            }
            goto LABEL_58;
          }
LABEL_51:
          char v28 = 8;
          goto LABEL_57;
        }
LABEL_58:
        unsigned int v29 = 0x7FFFFFFF;
LABEL_59:
        if (v29 > v23) {
          return -v22;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_40;
  }
LABEL_30:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1C99AB4F4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 9) {
    unint64_t v5 = 9;
  }
  char v6 = 8;
  char v7 = 8 * v5;
  if (v5 <= 3)
  {
    unsigned int v9 = ((1 << v7) + 1) >> v7;
    if (v9 >= 0xFFFE) {
      char v10 = 32;
    }
    else {
      char v10 = 16;
    }
    if (v9 >= 0xFE) {
      char v6 = v10;
    }
    else {
      char v6 = 8;
    }
    if (v9 > 0xFFFD) {
      goto LABEL_14;
    }
    int v8 = v9 + 2;
  }
  else
  {
    int v8 = 3;
  }
  unsigned int v11 = (1 << v6) - v8;
  if ((v11 & 0x80000000) != 0) {
LABEL_14:
  }
    unsigned int v11 = 0x7FFFFFFF;
  if (v5 > 3) {
    goto LABEL_19;
  }
  unsigned int v12 = ((1 << v7) + 1) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFD) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFD) {
LABEL_19:
  }
    uint64_t v13 = 1;
  size_t v14 = v13 + v5;
  char v15 = 8 * (v13 + v5);
  if (a3 <= v11)
  {
    int v16 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v19 = ((a3 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v11 < a2)
  {
    unsigned int v17 = ~v11 + a2;
    if (v14 < 4)
    {
      int v18 = (v17 >> v15) + 1;
      if (v14)
      {
        int v20 = v17 & ~(-1 << v15);
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v14] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v18;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v14] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1C99AB794);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (!a2) {
        return;
      }
LABEL_40:
      int v21 = -a2;
      if (v5 > 3) {
        goto LABEL_41;
      }
      unsigned int v22 = ((1 << v7) + 1) >> v7;
      if (v22 > 0xFFFD)
      {
        *(_DWORD *)&a1[v5] = v21;
      }
      else if (v22 <= 0xFD)
      {
LABEL_41:
        a1[v5] = v21;
      }
      else
      {
        *(_WORD *)&a1[v5] = v21;
      }
      return;
  }
}

uint64_t sub_1C99AB7BC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 9;
  if (*(void *)(v2 + 64) > 9uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  char v4 = 8 * v3;
  if (v3 > 3) {
    goto LABEL_4;
  }
  unsigned int v6 = ((1 << v4) + 1) >> v4;
  if (v6 > 0xFFFD)
  {
    uint64_t v5 = *(unsigned int *)&a1[v3];
  }
  else
  {
    if (v6 <= 0xFD)
    {
LABEL_4:
      uint64_t v5 = a1[v3];
      goto LABEL_9;
    }
    uint64_t v5 = *(unsigned __int16 *)&a1[v3];
  }
LABEL_9:
  int v7 = v5 - 2;
  if (v5 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v8 = v3;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_18;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v10 = (v9 | (v7 << v4)) + 2;
        LODWORD(v5) = v9 + 2;
        if (v3 >= 4) {
          uint64_t v5 = v5;
        }
        else {
          uint64_t v5 = v10;
        }
        break;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_1C99AB8B0(char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 9uLL) {
    size_t v5 = 9;
  }
  else {
    size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v6 = a2 - 2;
    if (v5 < 4)
    {
      int v8 = (v6 >> (8 * v5)) + 2;
      v6 &= ~(-1 << (8 * v5));
      int v7 = (int *)&a1[v5];
      unsigned int v10 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v10 > 0xFFFD)
      {
        *int v7 = v8;
        goto LABEL_18;
      }
      if (v10 > 0xFD)
      {
        *(_WORD *)int v7 = v8;
        goto LABEL_18;
      }
    }
    else
    {
      int v7 = (int *)&a1[v5];
      LOBYTE(v8) = 2;
    }
    *(unsigned char *)int v7 = v8;
LABEL_18:
    if (v5 <= 3) {
      int v11 = v5;
    }
    else {
      int v11 = 4;
    }
    bzero(a1, v5);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v6;
        break;
      case 3:
        *(_WORD *)a1 = v6;
        a1[2] = BYTE2(v6);
        break;
      case 4:
        *(_DWORD *)a1 = v6;
        break;
      default:
        *a1 = v6;
        break;
    }
    return;
  }
  if (v5 > 3)
  {
LABEL_6:
    a1[v5] = a2;
    return;
  }
  unsigned int v9 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v9 > 0xFFFD)
  {
    *(_DWORD *)&a1[v5] = a2;
  }
  else
  {
    if (v9 <= 0xFD) {
      goto LABEL_6;
    }
    *(_WORD *)&a1[v5] = a2;
  }
}

uint64_t sub_1C99ABA24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C963C340();
    uint64_t v2 = v11;
    char v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_1C963C340();
      }
      v4 += 3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *static ProtectedAppCheck.clientForExecutionDevice.getter@<X0>(void *a1@<X8>)
{
  a1[3] = &type metadata for AppInstallationCheckingClient;
  a1[4] = &off_1F23EBD00;
  uint64_t result = (void *)swift_allocObject();
  *a1 = result;
  result[5] = &type metadata for AppProtectionFrameworkClient;
  result[6] = &off_1F23EBCE8;
  result[2] = 0xD000000000000012;
  result[3] = 0x80000001C9C17DE0;
  return result;
}

uint64_t sub_1C99ABB78()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C99ABBB0()
{
  return OUTLINED_FUNCTION_9_48();
}

uint64_t sub_1C99ABBD8()
{
  return OUTLINED_FUNCTION_4_7() & 1;
}

uint64_t ProtectedAppCheckStrategy.protectedAppCheckShouldProduceOutputForHiddenApps(_:)()
{
  return 1;
}

uint64_t sub_1C99ABC08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C99ABC2C(a1, a2, a3);
}

uint64_t sub_1C99ABC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_allocWithZone(MEMORY[0x1E4F223C8]);
  swift_bridgeObjectRetain();
  id v5 = sub_1C99B4CD4(a2, a3, 0);
  unint64_t v7 = v5;
  if (!v5) {
    return 0;
  }
  id v8 = objc_msgSend(v5, sel_localizedName);
  uint64_t v6 = sub_1C9BED568();

  return v6;
}

uint64_t ProtectedAppCheckStrategy.protectedAppCheck(_:needsAppNameForAppID:)()
{
  objc_allocWithZone(MEMORY[0x1E4F223C8]);
  swift_bridgeObjectRetain();
  uint64_t v0 = OUTLINED_FUNCTION_33_1();
  id v2 = sub_1C99B4CD4(v0, v1, 0);
  char v4 = v2;
  if (!v2) {
    return 0;
  }
  id v5 = objc_msgSend(v2, sel_localizedName);
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

uint64_t ProtectedAppCheck.__allocating_init(appIDs:strategy:client:deviceState:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  ProtectedAppCheck.init(appIDs:strategy:client:deviceState:outputPublisher:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1C99ABE10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)(*(void *)(a1 + 64) + 40);
  *uint64_t v3 = a2;
  v3[1] = a3;
  return swift_continuation_throwingResume();
}

uint64_t sub_1C99ABE30(uint64_t a1, uint64_t a2)
{
  **(void **)(*(void *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

void sub_1C99ABE50(uint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23)
  {
    unint64_t v3 = 0;
    int v20 = a2 + 7;
    uint64_t v21 = a1 + 32;
    uint64_t v4 = MEMORY[0x1E4FBC860];
    while (v3 < *(void *)(v2 + 16))
    {
      uint64_t v5 = v3++;
      uint64_t v6 = a2;
      uint64_t v7 = a2[2];
      if (v7)
      {
        id v8 = (uint64_t *)(v21 + 16 * v5);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        uint64_t v11 = a2[4];
        uint64_t v12 = a2[5];
        BOOL v13 = v11 == *v8 && v12 == v10;
        if (v13 || (sub_1C9BEE618() & 1) != 0)
        {
LABEL_20:
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C963C340();
          }
          unint64_t v18 = *(void *)(v4 + 16);
          if (v18 >= *(void *)(v4 + 24) >> 1) {
            sub_1C963C340();
          }
          *(void *)(v4 + 16) = v18 + 1;
          uint64_t v19 = v4 + 16 * v18;
          *(void *)(v19 + 32) = v9;
          *(void *)(v19 + 40) = v10;
        }
        else if (v7 != 1)
        {
          size_t v14 = v20;
          uint64_t v15 = 1;
          while (1)
          {
            uint64_t v16 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            BOOL v17 = *(v14 - 1) == v9 && *v14 == v10;
            if (v17 || (sub_1C9BEE618() & 1) != 0) {
              goto LABEL_20;
            }
            v14 += 2;
            ++v15;
            if (v16 == v7) {
              goto LABEL_25;
            }
          }
          __break(1u);
          break;
        }
      }
LABEL_25:
      uint64_t v2 = a1;
      a2 = v6;
      if (v3 == v23) {
        goto LABEL_26;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t ProtectedAppCheck.__allocating_init(appID:strategy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C9608D98(a3, (uint64_t)&v9, (uint64_t *)&unk_1EA5941C0);
  if (v10)
  {
    sub_1C95FD5D8(&v9, (uint64_t)v11);
  }
  else
  {
    uint64_t v12 = &unk_1F23EBB78;
    BOOL v13 = &off_1F23EBCB8;
    sub_1C95FE76C((uint64_t)&v9, (uint64_t *)&unk_1EA5941C0);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  *(void *)(inited + 32) = a1;
  *(void *)(inited + 40) = a2;
  sub_1C95FD5F0((uint64_t)v11, (uint64_t)&v9);
  uint64_t v7 = ProtectedAppCheck.__allocating_init(appIDs:strategy:)(inited, (uint64_t)&v9);
  sub_1C95FE76C(a3, (uint64_t *)&unk_1EA5941C0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v7;
}

uint64_t ProtectedAppCheck.__allocating_init(appIDs:strategy:)(uint64_t a1, uint64_t a2)
{
  sub_1C95FD5F0(a2, (uint64_t)v12);
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  type metadata accessor for ProtectedAppCheck(0);
  memset(v6, 0, sizeof(v6));
  uint64_t v7 = 0;
  uint64_t v4 = swift_allocObject();
  ProtectedAppCheck.init(appIDs:strategy:client:deviceState:outputPublisher:)(a1, (uint64_t)v12, (uint64_t)v10, (uint64_t)v8, (uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v4;
}

id sub_1C99AC198()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30B50]), sel_init);
  unsigned int v1 = objc_msgSend(v0, sel_canEvaluatePolicy_error_, 1, 0);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v0;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC68();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v14 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    if (v1)
    {
      sub_1C9BED6B8();
      id v12 = objc_msgSend(v3, sel_biometryType);
      type metadata accessor for LABiometryType(0);
      sub_1C9BEE348();
      uint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
    }
    else
    {
      unint64_t v9 = 0x80000001C9C23E40;
      uint64_t v8 = 0xD000000000000010;
    }
    uint64_t v13 = sub_1C95FF228(v8, v9, &v14);
    sub_1C9BEDF68();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v4, v5, "DeviceState: biometric policy %s.", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v7, -1, -1);
    MEMORY[0x1CB78C440](v6, -1, -1);

    if (v1) {
      goto LABEL_10;
    }
  }
  else
  {

    if (v1)
    {
LABEL_10:
      id v10 = objc_msgSend(v3, sel_biometryType, v12, v13);
      goto LABEL_11;
    }
  }
  id v10 = 0;
LABEL_11:

  return v10;
}

uint64_t sub_1C99AC408(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C99AC430()
{
  return ProtectedAppCheckStrategy.protectedAppCheck(_:needsAppNameForAppID:)();
}

uint64_t static ProtectedAppStatus.uninstalled(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_WORD *)(a3 + 16) = 0;
  return OUTLINED_FUNCTION_9_48();
}

uint64_t static ProtectedAppStatus.hidden(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_WORD *)(a3 + 16) = 256;
  return OUTLINED_FUNCTION_9_48();
}

uint64_t static ProtectedAppStatus.locked(_:isAccessible:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 17) = 2;
  *(unsigned char *)(a4 + 16) = a3;
  return OUTLINED_FUNCTION_9_48();
}

Swift::Void __swiftcall ProtectedAppStatus.markAccessible(_:)(Swift::Bool a1)
{
  *(unsigned char *)(v1 + 16) = a1;
}

uint64_t static ProtectedAppStatus.normal(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_WORD *)(a3 + 16) = 769;
  return OUTLINED_FUNCTION_9_48();
}

SiriKitFlow::ProtectedAppStatus::AppState_optional __swiftcall ProtectedAppStatus.AppState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C9BEE428();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ProtectedAppStatus.AppState.rawValue.getter()
{
  uint64_t result = 0x6C6174736E696E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = OUTLINED_FUNCTION_49_17();
      break;
    case 2:
      uint64_t result = OUTLINED_FUNCTION_48_21();
      break;
    case 3:
      uint64_t result = 0x6C616D726F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C99AC578(unsigned __int8 *a1, char *a2)
{
  return sub_1C990BF24(*a1, *a2);
}

uint64_t sub_1C99AC584()
{
  return sub_1C96A6B50();
}

uint64_t sub_1C99AC58C()
{
  return sub_1C98A47E8();
}

uint64_t sub_1C99AC594()
{
  return sub_1C96A6FB4();
}

SiriKitFlow::ProtectedAppStatus::AppState_optional sub_1C99AC59C(Swift::String *a1)
{
  return ProtectedAppStatus.AppState.init(rawValue:)(*a1);
}

uint64_t sub_1C99AC5A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ProtectedAppStatus.AppState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ProtectedAppStatus.appID.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t ProtectedAppStatus.isAccessible.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

void ProtectedAppStatus.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 17);
}

uint64_t ProtectedAppStatus.debugDescription.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 17);
  sub_1C9BEE188();
  sub_1C9BED6B8();
  swift_bridgeObjectRetain();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  OUTLINED_FUNCTION_40_22();
  switch(v1)
  {
    case 1:
      OUTLINED_FUNCTION_49_17();
      break;
    case 2:
      OUTLINED_FUNCTION_48_21();
      break;
    default:
      break;
  }
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  return 0;
}

unint64_t static ProtectedAppCheck.unlockAppCompleteIdentifier.getter()
{
  return 0xD000000000000038;
}

void static ProtectedAppCheck.client(for:)()
{
}

uint64_t sub_1C99AC8B0()
{
  OUTLINED_FUNCTION_84_1();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1C99AC8DC(char a1)
{
  char v2 = a1 & 1;
  uint64_t result = OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 16) = v2;
  return result;
}

uint64_t ProtectedAppCheck.appIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1C99AC91C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ProtectedAppCheck.State(0);
  MEMORY[0x1F4188790](v2, v3);
  char v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C9BECF88();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  v14[0] = (os_log_t)sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v14[0], v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v15 = v9;
    uint64_t v10 = v1 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
    swift_beginAccess();
    sub_1C99B4DF0(v10, (uint64_t)v5);
    uint64_t v11 = sub_1C9BED5D8();
    v14[1] = (os_log_t)sub_1C95FF228(v11, v12, &v15);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C95F9000, v14[0], v7, "PAC: ProtectedAppCheck flow transitioned to state %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v9, -1, -1);
    MEMORY[0x1CB78C440](v8, -1, -1);
  }
  else
  {
    swift_release_n();
    os_log_t v13 = v14[0];
  }
}

uint64_t sub_1C99ACB8C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
  swift_beginAccess();
  sub_1C99B64D4(a1, v3);
  swift_endAccess();
  sub_1C99AC91C();
  return sub_1C99B4E40(a1, (void (*)(void))type metadata accessor for ProtectedAppCheck.State);
}

void sub_1C99ACC10(uint64_t a1, char a2)
{
  uint64_t v3 = v2 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult);
  *(void *)uint64_t v3 = a1;
  unsigned __int8 v5 = *(unsigned char *)(v3 + 8);
  *(unsigned char *)(v3 + 8) = a2;
  sub_1C978EF64(v4, v5);
}

uint64_t ProtectedAppCheck.init(appIDs:strategy:client:deviceState:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  OUTLINED_FUNCTION_31_7();
  type metadata accessor for ResponseFactory();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 40) = &type metadata for DialogUsageProvider;
  *(void *)(v10 + 48) = &protocol witness table for DialogUsageProvider;
  *(void *)(v5 + 192) = v10;
  uint64_t v11 = v5 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
  uint64_t v12 = sub_1C9BEAB08();
  __swift_storeEnumTagSinglePayload(v11, 1, 4, v12);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) = 0;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_noAppsRequireUnlock) = 0;
  uint64_t v13 = v5 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 8) = -1;
  *(void *)(v5 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses) = MEMORY[0x1E4FBC860];
  uint64_t v14 = sub_1C99ACEE8(v5);
  swift_bridgeObjectRelease();
  *(void *)(v5 + 24) = v14;
  sub_1C95FD5F0(a2, v5 + 32);
  *(unsigned char *)(v5 + 16) = 0;
  sub_1C9608D98(a3, v5 + 72, &qword_1EA58A828);
  sub_1C9608D98(a4, (uint64_t)&v17, &qword_1EBC789E0);
  if (!v18)
  {
    if (qword_1EBC760D8 != -1) {
      swift_once();
    }
    sub_1C960E058((uint64_t)&v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    uint64_t v15 = qword_1EBC74538;
    uint64_t v20 = type metadata accessor for RefreshableDeviceState();
    uint64_t v21 = &protocol witness table for RefreshableDeviceState;
    *(void *)&long long v19 = v15;
    sub_1C9BEC838();
  }
  sub_1C95FD5D8(&v17, (uint64_t)&v19);
  sub_1C95FD5D8(&v19, v5 + 112);
  sub_1C9608D98(a5, (uint64_t)&v17, &qword_1EA58F490);
  if (!v18) {
    sub_1C992A3B0();
  }
  sub_1C95FE76C(a5, &qword_1EA58F490);
  sub_1C95FE76C(a4, &qword_1EBC789E0);
  sub_1C95FE76C(a3, &qword_1EA58A828);
  __swift_destroy_boxed_opaque_existential_1(a2);
  sub_1C95FD5D8(&v17, (uint64_t)&v19);
  sub_1C95FD5D8(&v19, v5 + 152);
  return v5;
}

uint64_t sub_1C99ACEE8(uint64_t a1)
{
  uint64_t v14 = MEMORY[0x1E4FBC870];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(a1 + 40);
    uint64_t v4 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v6 = *(v3 - 1);
      uint64_t v5 = *v3;
      swift_bridgeObjectRetain_n();
      char v7 = sub_1C9840750((uint64_t)v13, v6, v5);
      swift_bridgeObjectRelease();
      if (v7)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C965519C();
          uint64_t v4 = v10;
        }
        unint64_t v8 = *(void *)(v4 + 16);
        if (v8 >= *(void *)(v4 + 24) >> 1)
        {
          sub_1C965519C();
          uint64_t v4 = v11;
        }
        *(void *)(v4 + 16) = v8 + 1;
        uint64_t v9 = v4 + 16 * v8;
        *(void *)(v9 + 32) = v6;
        *(void *)(v9 + 40) = v5;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C99AD028(uint64_t a1)
{
  uint64_t v56 = a1;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = (void *)(v5 - v4);
  uint64_t v7 = sub_1C9BEAB08();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9);
  OUTLINED_FUNCTION_6_0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = OUTLINED_FUNCTION_13_60();
  uint64_t v15 = MEMORY[0x1F4188790](v13, v14);
  uint64_t v54 = (uint64_t)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15, v17);
  uint64_t v20 = (char *)&v53 - v19;
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v23 = (char *)&v53 - v22;
  uint64_t v55 = v1;
  uint64_t v24 = v1 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state;
  OUTLINED_FUNCTION_84_1();
  sub_1C99B4DF0(v24, (uint64_t)v23);
  uint64_t EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v23, 4, v7);
  sub_1C99B4E40((uint64_t)v23, (void (*)(void))type metadata accessor for ProtectedAppCheck.State);
  if (EnumTagSinglePayload == 1) {
    return 1;
  }
  sub_1C99B4DF0(v24, (uint64_t)v20);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v20, 4, v7))
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12, v20, v7);
    uint64_t v29 = type metadata accessor for Input(0);
    sub_1C99B4DF0(v56 + *(int *)(v29 + 20), (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      uint64_t v40 = OUTLINED_FUNCTION_5_39();
      v41(v40);
      unsigned int v27 = type metadata accessor for Parse;
      uint64_t v28 = (uint64_t)v6;
      goto LABEL_22;
    }
    uint64_t v30 = v6[1];
    uint64_t v31 = v6[2];
    if ((*v6 != 0xD000000000000038 || v30 != 0x80000001C9C23CB0) && (sub_1C9BEE618() & 1) == 0)
    {
      uint64_t v48 = OUTLINED_FUNCTION_5_39();
      v49(v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    if (v31)
    {
      sub_1C9606B08();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v60 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v32 = v57;
          uint64_t v30 = v58;
          if (v32 == sub_1C9BEAAB8() && v30 == v33)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t EnumTagSinglePayload = sub_1C9BEE618();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((EnumTagSinglePayload & 1) == 0)
            {
              if (qword_1EBC7A3B8 != -1) {
                swift_once();
              }
              uint64_t v35 = sub_1C9BECF88();
              __swift_project_value_buffer(v35, (uint64_t)qword_1EBC7A520);
              unint64_t v36 = sub_1C9BECF78();
              os_log_type_t v37 = sub_1C9BEDC88();
              if (!OUTLINED_FUNCTION_96(v37)) {
                goto LABEL_31;
              }
              uint64_t v38 = (_WORD *)OUTLINED_FUNCTION_19();
              OUTLINED_FUNCTION_49(v38);
              uint64_t v39 = "PAC: received unlock DI for another request? Unsure how to proceed; resetting";
LABEL_30:
              _os_log_impl(&dword_1C95F9000, v36, (os_log_type_t)v30, v39, (uint8_t *)EnumTagSinglePayload, 2u);
              OUTLINED_FUNCTION_11_4();
LABEL_31:

              uint64_t v45 = v54;
              __swift_storeEnumTagSinglePayload(v54, 1, 4, v7);
              sub_1C99ACB8C(v45);
              uint64_t v46 = OUTLINED_FUNCTION_5_39();
              v47(v46);
              return 0;
            }
          }
          uint64_t v50 = v54;
          __swift_storeEnumTagSinglePayload(v54, 3, 4, v7);
          sub_1C99ACB8C(v50);
          uint64_t v51 = OUTLINED_FUNCTION_5_39();
          v52(v51);
          return 1;
        }
LABEL_26:
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v42 = sub_1C9BECF88();
        __swift_project_value_buffer(v42, (uint64_t)qword_1EBC7A520);
        unint64_t v36 = sub_1C9BECF78();
        os_log_type_t v43 = sub_1C9BEDC88();
        if (!OUTLINED_FUNCTION_96(v43)) {
          goto LABEL_31;
        }
        uint64_t v44 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v44);
        uint64_t v39 = "PAC: received unlock DI that is missing an id; resetting the flow";
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v59 = 0u;
      long long v60 = 0u;
    }
    sub_1C95FE76C((uint64_t)&v59, &qword_1EBC78700);
    goto LABEL_26;
  }
  unsigned int v27 = type metadata accessor for ProtectedAppCheck.State;
  uint64_t v28 = (uint64_t)v20;
LABEL_22:
  sub_1C99B4E40(v28, (void (*)(void))v27);
  return 0;
}

uint64_t sub_1C99AD5AC()
{
  OUTLINED_FUNCTION_24();
  v1[5] = v2;
  v1[6] = v0;
  OUTLINED_FUNCTION_13_60();
  v1[7] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99AD620()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = v0[7];
  OUTLINED_FUNCTION_84_1();
  uint64_t v2 = OUTLINED_FUNCTION_134_0();
  sub_1C99B4DF0(v2, v3);
  uint64_t v4 = sub_1C9BEAB08();
  switch(__swift_getEnumTagSinglePayload(v1, 4, v4))
  {
    case 1u:
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[8] = v14;
      *uint64_t v14 = v15;
      v14[1] = sub_1C99AD980;
      uint64_t result = sub_1C99AE4D8();
      break;
    case 2u:
      goto LABEL_3;
    case 3u:
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[9] = v16;
      *uint64_t v16 = v17;
      v16[1] = sub_1C99ADAA0;
      uint64_t result = sub_1C99B2464();
      break;
    case 4u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1C9BECF88();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EBC7A520);
      uint64_t v19 = (void *)sub_1C9BECF78();
      os_log_type_t v20 = sub_1C9BEDC98();
      if (OUTLINED_FUNCTION_13(v20))
      {
        uint64_t v21 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v21);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v22, v23, "PAC: invoking execute() on a flow that has already completed!?");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[10] = v24;
      *uint64_t v24 = v25;
      v24[1] = sub_1C99ADB68;
      uint64_t v26 = v0[5];
      uint64_t result = sub_1C99B3350(v26);
      break;
    default:
      sub_1C99B4E40(v0[7], (void (*)(void))type metadata accessor for ProtectedAppCheck.State);
LABEL_3:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1C9BECF88();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
      uint64_t v6 = (void *)sub_1C9BECF78();
      os_log_type_t v7 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_13(v7))
      {
        uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v8);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v9, v10, "PAC: invoking execute() while still waiting for an unlock response");
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v11 = v0[5];

      static ExecuteResponse.ongoing(requireInput:)(1, v11);
      swift_task_dealloc();
      OUTLINED_FUNCTION_22_0();
      uint64_t result = v12();
      break;
  }
  return result;
}

uint64_t sub_1C99AD980()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99ADA48()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99ADAA0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99ADB68()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99ADC30()
{
  *(void *)(v1 + 240) = v0;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99ADC48);
}

uint64_t sub_1C99ADC48(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint8_t *a10, uint8_t *buf, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_25_1();
  a25 = v27;
  a26 = v28;
  OUTLINED_FUNCTION_46();
  a24 = v26;
  uint64_t v29 = (void *)(v26 + 16);
  sub_1C9608D98(*(void *)(v26 + 240) + 72, v26 + 56, &qword_1EA58A828);
  if (!*(void *)(v26 + 80))
  {
    type metadata accessor for ProtectedAppCheck(0);
    sub_1C99B62F4(&qword_1EA594238, (void (*)(uint64_t))type metadata accessor for ProtectedAppCheck);
    sub_1C9BEC3C8();
  }
  sub_1C95FD5D8((long long *)(v26 + 56), v26 + 16);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C9BECF88();
  *(void *)(v26 + 248) = __swift_project_value_buffer(v30, (uint64_t)qword_1EBC7A520);
  sub_1C95FD5F0(v26 + 16, v26 + 96);
  uint64_t v31 = sub_1C9BECF78();
  os_log_type_t v32 = sub_1C9BEDC78();
  if (os_log_type_enabled(v31, v32))
  {
    a12 = v26 + 232;
    uint64_t v33 = (uint8_t *)OUTLINED_FUNCTION_67();
    a13 = OUTLINED_FUNCTION_35_0();
    a14 = v26 + 16;
    a15 = a13;
    *(_DWORD *)uint64_t v33 = 136315138;
    a10 = v33 + 4;
    buf = v33;
    uint64_t v34 = *(void *)(v26 + 120);
    uint64_t v35 = *(void *)(v26 + 128);
    __swift_project_boxed_opaque_existential_1((void *)(v26 + 96), v34);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
    *(void *)(v26 + 232) = sub_1C95FF228(v36, v37, &a15);
    uint64_t v29 = (void *)(v26 + 16);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v26 + 96);
    _os_log_impl(&dword_1C95F9000, v31, v32, "PAC: rebuilding statuses using %s", buf, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v26 + 96);
  }

  uint64_t v38 = *(void *)(v26 + 240);
  uint64_t v39 = OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  *(void *)(v26 + 256) = OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  uint64_t v40 = (void *)(v38 + v39);
  OUTLINED_FUNCTION_1_0();
  *uint64_t v40 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void **)(v38 + 24);
  *(void *)(v26 + 264) = v41;
  uint64_t v42 = v41[2];
  *(void *)(v26 + 272) = v42;
  if (v42)
  {
    *(void *)(v26 + 280) = 0;
    *(void *)(v26 + 288) = v41[4];
    *(void *)(v26 + 296) = v41[5];
    uint64_t v43 = *(void *)(v26 + 40);
    uint64_t v44 = *(void *)(v26 + 48);
    swift_bridgeObjectRetain();
    __swift_project_boxed_opaque_existential_1(v29, v43);
    uint64_t v65 = *(void *)(v44 + 8) + **(int **)(v44 + 8);
    swift_bridgeObjectRetain();
    uint64_t v45 = swift_task_alloc();
    uint64_t v46 = (void *)OUTLINED_FUNCTION_26_34(v45);
    void *v46 = v47;
    v46[1] = sub_1C99AE040;
    OUTLINED_FUNCTION_6_11();
    return v54(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, buf, a12, v65, v44 + 8, a15, a16, a17, a18);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_6_11();
    return v58(v57, v58, v59, v60, v61, v62, v63, v64, a9, a10, buf, a12, a13, a14, a15, a16, a17, a18);
  }
}

uint64_t sub_1C99AE040()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99AE108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_25_1();
  a25 = v27;
  a26 = v28;
  OUTLINED_FUNCTION_46();
  a24 = v26;
  uint64_t v29 = *(void *)(v26 + 184);
  uint64_t v30 = *(void *)(v26 + 192);
  int v31 = *(unsigned __int8 *)(v26 + 200);
  int v32 = *(unsigned __int8 *)(v26 + 201);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C9BECF78();
  os_log_type_t v34 = sub_1C9BEDC78();
  uint64_t v77 = v29;
  HIDWORD(a12) = v32;
  LODWORD(a13) = v31;
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v35 = *(void *)(v26 + 296);
    a9 = *(void *)(v26 + 288);
    a10 = v26 + 160;
    uint64_t v36 = v29;
    uint64_t v37 = swift_slowAlloc();
    a11 = v30;
    a15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315394;
    swift_bridgeObjectRetain();
    *(void *)(v37 + 4) = sub_1C95FF228(a9, v35, &a15);
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2080;
    *(void *)(v26 + 208) = v36;
    *(void *)(v26 + 216) = v30;
    *(unsigned char *)(v26 + 224) = v31;
    *(unsigned char *)(v26 + 225) = v32;
    uint64_t v38 = ProtectedAppStatus.debugDescription.getter();
    *(void *)(v37 + 14) = sub_1C95FF228(v38, v39, &a15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v33, v34, "PAC: status for %s: %s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v40 = (uint64_t *)(*(void *)(v26 + 240) + *(void *)(v26 + 256));
  swift_beginAccess();
  uint64_t v41 = *v40;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v40 = v41;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v70 = *(void *)(v26 + 256);
    uint64_t v71 = *(void *)(v26 + 240);
    sub_1C99220C8();
    uint64_t v41 = v72;
    *(void *)(v71 + v70) = v72;
  }
  unint64_t v43 = *(void *)(v41 + 16);
  if (v43 >= *(void *)(v41 + 24) >> 1)
  {
    uint64_t v73 = *(void *)(v26 + 256);
    uint64_t v74 = *(void *)(v26 + 240);
    sub_1C99220C8();
    uint64_t v41 = v75;
    *(void *)(v74 + v73) = v75;
  }
  uint64_t v44 = *(void *)(v26 + 272);
  uint64_t v45 = *(void *)(v26 + 280) + 1;
  *(void *)(v41 + 16) = v43 + 1;
  uint64_t v46 = v41 + 24 * v43;
  *(void *)(v46 + 32) = v77;
  *(void *)(v46 + 40) = v30;
  *(unsigned char *)(v46 + 48) = a13;
  *(unsigned char *)(v46 + 49) = BYTE4(a12);
  swift_endAccess();
  if (v45 == v44)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v26 + 16);
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_6_11();
    return v48(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, v77, a15, a16, a17, a18);
  }
  else
  {
    uint64_t v56 = *(void *)(v26 + 280) + 1;
    *(void *)(v26 + 280) = v56;
    uint64_t v57 = *(void *)(v26 + 264) + 16 * v56;
    *(void *)(v26 + 288) = *(void *)(v57 + 32);
    *(void *)(v26 + 296) = *(void *)(v57 + 40);
    uint64_t v58 = *(void *)(v26 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v26 + 16), *(void *)(v26 + 40));
    uint64_t v76 = *(void *)(v58 + 8) + **(int **)(v58 + 8);
    swift_bridgeObjectRetain();
    uint64_t v59 = swift_task_alloc();
    uint64_t v60 = (void *)OUTLINED_FUNCTION_26_34(v59);
    *uint64_t v60 = v61;
    v60[1] = sub_1C99AE040;
    OUTLINED_FUNCTION_6_11();
    return v68(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, v76, v58 + 8, a15, a16, a17, a18);
  }
}

uint64_t sub_1C99AE4D8()
{
  OUTLINED_FUNCTION_24();
  v1[21] = v2;
  v1[22] = v0;
  OUTLINED_FUNCTION_13_60();
  v1[23] = OUTLINED_FUNCTION_16();
  uint64_t v3 = type metadata accessor for SiriKitEventPayload(0);
  v1[24] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[25] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

void sub_1C99AE570()
{
  OUTLINED_FUNCTION_26_0();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  *(void *)(v0 + 208) = __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

uint64_t sub_1C99AE700()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

void sub_1C99AE7C8()
{
  OUTLINED_FUNCTION_84_1();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C99AF778(v0);
}

uint64_t sub_1C99AED0C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C99AEDF0()
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  *(void *)(v0 + 256) = qword_1EBC7A4A0;
  sub_1C9BEC9C8();
  sub_1C9BEC838();
}

uint64_t sub_1C99AEFC0()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 16;
  uint64_t v4 = v1 + 56;
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_release();
  sub_1C95FE76C(v3, (uint64_t *)&unk_1EBC789D0);
  sub_1C95FE76C(v4, &qword_1EBC78700);
  swift_release();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99AF118()
{
  OUTLINED_FUNCTION_24();
  static ExecuteResponse.ongoing(requireInput:)(1, *(void *)(v0 + 168));
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99AF188()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 296) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99AF264()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_5_69(v1);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_26_34(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C99AF2FC;
  uint64_t v5 = *(void *)(v0 + 168);
  return sub_1C99B3350(v5);
}

uint64_t sub_1C99AF2FC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1C99AF41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_142();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_135();
  a18 = v20;
  uint64_t v23 = (void *)v20[31];
  id v24 = v23;
  id v25 = v23;
  uint64_t v26 = (void *)sub_1C9BECF78();
  os_log_type_t v27 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_105(v27))
  {
    uint64_t v28 = (void *)v20[31];
    uint64_t v29 = (_DWORD *)OUTLINED_FUNCTION_67();
    uint64_t v30 = OUTLINED_FUNCTION_35_0();
    *uint64_t v29 = 136315138;
    a10 = v30;
    v20[16] = v28;
    id v31 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v32 = sub_1C9BED5D8();
    v20[14] = sub_1C95FF228(v32, v33, &a10);
    OUTLINED_FUNCTION_37_25();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v34, v35, "PAC: Error sending unlock request: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v36 = (void *)v20[31];
  }
  uint64_t v37 = (void *)v20[31];
  uint64_t v38 = v20[23];
  uint64_t v39 = v20[21];
  uint64_t v40 = sub_1C9BEAB08();
  __swift_storeEnumTagSinglePayload(v38, 4, 4, v40);
  sub_1C99ACB8C(v38);

  static ExecuteResponse.complete()(v39);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_139();
  return v42(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12);
}

uint64_t sub_1C99AF5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_142();
  a19 = v22;
  a20 = v23;
  OUTLINED_FUNCTION_135();
  a18 = v20;
  id v24 = *(void **)(v20 + 296);
  id v25 = v24;
  id v26 = v24;
  os_log_type_t v27 = (void *)sub_1C9BECF78();
  os_log_type_t v28 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_65_0(v28))
  {
    uint64_t v29 = *(void **)(v20 + 296);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_60_17(4.8149e-34);
    *(void *)(v21 + 144) = v29;
    id v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v31 = sub_1C9BED5D8();
    *(void *)(v20 + 152) = sub_1C95FF228(v31, v32, &a10);
    OUTLINED_FUNCTION_37_25();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_12(&dword_1C95F9000, v33, v34, "PAC: Could not produce unlock dialog: %s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v35 = *(void **)(v20 + 296);
  }
  uint64_t v36 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_5_69(v36);
  uint64_t v37 = swift_task_alloc();
  uint64_t v38 = (void *)OUTLINED_FUNCTION_26_34(v37);
  void *v38 = v39;
  v38[1] = sub_1C99AF2FC;
  OUTLINED_FUNCTION_139();
  return sub_1C99B3350(v40);
}

void sub_1C99AF778(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v2 = (unsigned __int8 *)(v25 + 49);
    uint64_t v3 = MEMORY[0x1E4FBC860];
    uint64_t v4 = v1;
    while (2)
    {
      uint64_t v5 = *(void *)(v2 - 17);
      uint64_t v6 = *(void *)(v2 - 9);
      char v7 = *(v2 - 1);
      int v9 = *v2;
      v2 += 24;
      char v8 = v9;
      OUTLINED_FUNCTION_40_22();
      switch(v9)
      {
        case 1:
          OUTLINED_FUNCTION_49_17();
          goto LABEL_7;
        case 2:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_8;
        case 3:
          OUTLINED_FUNCTION_24_34();
          goto LABEL_7;
        default:
LABEL_7:
          char v10 = OUTLINED_FUNCTION_42_15();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((v10 & 1) == 0) {
            goto LABEL_9;
          }
LABEL_8:
          if (v7)
          {
LABEL_9:
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              OUTLINED_FUNCTION_73_11();
            }
            unint64_t v11 = *(void *)(v3 + 16);
            if (v11 >= *(void *)(v3 + 24) >> 1) {
              sub_1C9801E84();
            }
            *(void *)(v3 + 16) = v11 + 1;
            uint64_t v12 = v3 + 24 * v11;
            *(void *)(v12 + 32) = v5;
            *(void *)(v12 + 40) = v6;
            *(unsigned char *)(v12 + 48) = 0;
            *(unsigned char *)(v12 + 49) = v8;
          }
          if (--v4) {
            continue;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          uint64_t v13 = (unsigned __int8 *)(v25 + 49);
          uint64_t v14 = MEMORY[0x1E4FBC860];
          while (2)
          {
            uint64_t v15 = *(void *)(v13 - 17);
            uint64_t v16 = *(void *)(v13 - 9);
            char v17 = *(v13 - 1);
            int v19 = *v13;
            v13 += 24;
            char v18 = v19;
            OUTLINED_FUNCTION_40_22();
            switch(v19)
            {
              case 1:
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_22;
              case 2:
                OUTLINED_FUNCTION_48_21();
                goto LABEL_21;
              case 3:
                OUTLINED_FUNCTION_24_34();
                goto LABEL_21;
              default:
LABEL_21:
                char v20 = OUTLINED_FUNCTION_41_19();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                if (v20)
                {
LABEL_22:
                  char v26 = v17;
                  uint64_t v21 = v15;
                  uint64_t v22 = v3;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    OUTLINED_FUNCTION_73_11();
                  }
                  unint64_t v23 = *(void *)(v14 + 16);
                  if (v23 >= *(void *)(v14 + 24) >> 1) {
                    sub_1C9801E84();
                  }
                  *(void *)(v14 + 16) = v23 + 1;
                  uint64_t v24 = v14 + 24 * v23;
                  *(void *)(v24 + 32) = v21;
                  *(void *)(v24 + 40) = v16;
                  *(unsigned char *)(v24 + 48) = v26;
                  *(unsigned char *)(v24 + 49) = v18;
                  uint64_t v3 = v22;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                if (--v1) {
                  continue;
                }
                swift_bridgeObjectRelease();
                break;
            }
            break;
          }
          break;
      }
      break;
    }
  }
  type metadata accessor for ProtectedAppCheck(0);
  sub_1C99B62F4(&qword_1EA594238, (void (*)(uint64_t))type metadata accessor for ProtectedAppCheck);
  sub_1C9BEC3C8();
}

uint64_t sub_1C99AFAF0()
{
  OUTLINED_FUNCTION_24();
  v1[43] = v2;
  v1[44] = v0;
  v1[42] = v3;
  uint64_t v4 = type metadata accessor for OutputGenerationManifest();
  OUTLINED_FUNCTION_22(v4);
  v1[45] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_13_60();
  v1[46] = OUTLINED_FUNCTION_16();
  uint64_t v5 = sub_1C9BEAB08();
  v1[47] = v5;
  OUTLINED_FUNCTION_5_0(v5);
  v1[48] = v6;
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C99AFBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26)
{
  OUTLINED_FUNCTION_25_1();
  a25 = v27;
  a26 = v28;
  OUTLINED_FUNCTION_46();
  a24 = v26;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1C9BECF88();
  v26[51] = __swift_project_value_buffer(v29, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  id v30 = (void *)sub_1C9BECF78();
  os_log_type_t v31 = sub_1C9BEDC78();
  BOOL v32 = OUTLINED_FUNCTION_105(v31);
  unint64_t v33 = v26[43];
  if (v32)
  {
    uint64_t v34 = v26[42];
    uint64_t v35 = (_DWORD *)OUTLINED_FUNCTION_67();
    a12 = OUTLINED_FUNCTION_35_0();
    *uint64_t v35 = 136315138;
    swift_bridgeObjectRetain();
    v26[41] = sub_1C95FF228(v34, v33, &a12);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v36, v37, "PAC: Pushing sendUnlockRequest for app: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v38 = v26[50];
  uint64_t v39 = v26[47];
  uint64_t v40 = v26[48];
  uint64_t v41 = v26[46];
  uint64_t v43 = v26[43];
  uint64_t v42 = (void *)v26[44];
  uint64_t v44 = v26[42];
  sub_1C9BEAAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v41, v38, v39);
  __swift_storeEnumTagSinglePayload(v41, 0, 4, v39);
  sub_1C99ACB8C(v41);
  uint64_t v45 = MEMORY[0x1E4FBB1A0];
  v26[38] = sub_1C9BED458();
  uint64_t v46 = v42[7];
  uint64_t v47 = v42[8];
  __swift_project_boxed_opaque_existential_1(v42 + 4, v46);
  uint64_t v48 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 40))(v42, v44, v43, v46, v47);
  if (v49)
  {
    a15 = v45;
    a12 = v48;
    a13 = v49;
    sub_1C9803FC8();
  }
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)(v26 + 24));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v26 + 24));
  sub_1C9BEC838();
}

uint64_t sub_1C99AFFD0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v7 + 432) = v6;
  *(void *)(v7 + 440) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void sub_1C99B00CC()
{
  uint64_t v1 = v0[44];
  uint64_t v9 = v0[43];
  uint64_t v2 = v0[42];
  sub_1C98ACD50();
  id v3 = sub_1C98105D8();
  v0[56] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA594300);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BF0BB0;
  v0[36] = 25705;
  v0[37] = 0xE200000000000000;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  sub_1C9BEE138();
  uint64_t v6 = sub_1C9BEAAB8();
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 72) = v6;
  *(void *)(inited + 80) = v7;
  v0[34] = 7368801;
  v0[35] = 0xE300000000000000;
  sub_1C9BEE138();
  *(void *)(inited + 168) = v5;
  *(void *)(inited + 144) = v2;
  *(void *)(inited + 152) = v9;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C9BED458();
  sub_1C9811C24(v8, v3);
  self;
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 112), *(void *)(v1 + 136));
  OUTLINED_FUNCTION_11_30();
  DeviceState.asInvocationContext.getter();
}

uint64_t sub_1C99B04B8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *id v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 504) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99B0594()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_55_17(*(void **)(v0 + 352));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C99B0678;
  uint64_t v2 = OUTLINED_FUNCTION_44_0();
  return v3(v2);
}

uint64_t sub_1C99B0678()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *id v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 520) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99B0754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 480);
  uint64_t v30 = *(void *)(v12 + 488);
  uint64_t v15 = *(void **)(v12 + 464);
  uint64_t v14 = *(void **)(v12 + 472);
  uint64_t v16 = *(void **)(v12 + 456);
  char v17 = *(void **)(v12 + 432);
  uint64_t v18 = *(void *)(v12 + 400);
  uint64_t v19 = *(void *)(v12 + 376);
  uint64_t v20 = *(void *)(v12 + 360);

  __swift_destroy_boxed_opaque_existential_1(v12 + 232);
  sub_1C99B4E40(v20, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  v13(v18, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_25_0();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, v30, a10, a11, a12);
}

uint64_t sub_1C99B083C()
{
  OUTLINED_FUNCTION_33();
  (*(void (**)(void, void))(v0[48] + 8))(v0[50], v0[47]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99B08D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  uint64_t v13 = *(void (**)(uint64_t))(v12 + 480);
  uint64_t v15 = *(void **)(v12 + 464);
  uint64_t v14 = *(void **)(v12 + 472);
  uint64_t v16 = *(void **)(v12 + 456);
  char v17 = *(void **)(v12 + 432);
  uint64_t v18 = *(void *)(v12 + 360);

  sub_1C99B4E40(v18, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  uint64_t v19 = OUTLINED_FUNCTION_33_1();
  v13(v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v21(v20, v21, v22, v23, v24, v25, v26, v27, a9, a10, a11, a12);
}

uint64_t sub_1C99B09A8()
{
  uint64_t v34 = v0;
  uint64_t v32 = v0 + 232;
  uint64_t v1 = *(void **)(v0 + 520);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC78();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 520);
    os_log_type_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
    uint64_t v25 = *(void **)(v0 + 464);
    uint64_t v26 = *(void **)(v0 + 472);
    uint64_t v23 = *(void **)(v0 + 448);
    uint64_t v24 = *(void **)(v0 + 432);
    uint64_t v29 = *(void *)(v0 + 376);
    uint64_t v30 = *(void *)(v0 + 400);
    uint64_t v27 = *(void **)(v0 + 456);
    uint64_t v28 = *(void *)(v0 + 360);
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v33 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v7 = 136315138;
    *(void *)(v0 + 312) = v6;
    id v8 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v9 = sub_1C9BED5D8();
    *(void *)(v0 + 320) = sub_1C95FF228(v9, v10, &v33);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v4, v5, "PAC: Error caught while publishing unlock output: %s. Ignoring and continuing with ProtectedAppCheck flow.", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();

    __swift_destroy_boxed_opaque_existential_1(v32);
    sub_1C99B4E40(v28, (void (*)(void))type metadata accessor for OutputGenerationManifest);
    uint64_t v12 = v29;
    uint64_t v11 = v30;
  }
  else
  {
    uint64_t v13 = *(void **)(v0 + 520);
    uint64_t v14 = *(void **)(v0 + 472);
    os_log_type_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
    uint64_t v15 = *(void **)(v0 + 456);
    uint64_t v16 = *(void **)(v0 + 464);
    char v17 = *(void **)(v0 + 432);
    uint64_t v18 = *(void *)(v0 + 400);
    uint64_t v19 = *(void *)(v0 + 376);
    uint64_t v20 = *(void *)(v0 + 360);

    __swift_destroy_boxed_opaque_existential_1(v32);
    sub_1C99B4E40(v20, (void (*)(void))type metadata accessor for OutputGenerationManifest);
    uint64_t v11 = v18;
    uint64_t v12 = v19;
  }
  v31(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v21();
}

uint64_t sub_1C99B0C8C()
{
  OUTLINED_FUNCTION_33();
  *(unsigned char *)(v0 + 152) = v1;
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = type metadata accessor for AceOutput();
  *(void *)(v0 + 80) = v5;
  OUTLINED_FUNCTION_22(v5);
  *(void *)(v0 + 88) = OUTLINED_FUNCTION_16();
  uint64_t v6 = sub_1C9BEC958();
  *(void *)(v0 + 96) = v6;
  OUTLINED_FUNCTION_5_0(v6);
  *(void *)(v0 + 104) = v7;
  *(void *)(v0 + 112) = OUTLINED_FUNCTION_16();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC786C0);
  OUTLINED_FUNCTION_22(v8);
  *(void *)(v0 + 120) = OUTLINED_FUNCTION_16();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v9);
  *(void *)(v0 + 128) = OUTLINED_FUNCTION_16();
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *unint64_t v10 = v0;
  v10[1] = sub_1C99B0DD4;
  return sub_1C9A6A2C4();
}

uint64_t sub_1C99B0DD4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_0_1();
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v9();
  }
  else
  {
    *(void *)(v5 + 144) = v3;
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
}

uint64_t sub_1C99B0F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  OUTLINED_FUNCTION_25_1();
  OUTLINED_FUNCTION_46();
  uint64_t v20 = *(void *)(v18 + 120);
  uint64_t v19 = *(void *)(v18 + 128);
  uint64_t v42 = *(void *)(v18 + 144);
  uint64_t v22 = *(void *)(v18 + 104);
  uint64_t v21 = *(void *)(v18 + 112);
  uint64_t v23 = *(void *)(v18 + 88);
  uint64_t v39 = *(void *)(v18 + 96);
  uint64_t v25 = *(void *)(v18 + 72);
  uint64_t v24 = *(int **)(v18 + 80);
  uint64_t v26 = *(uint64_t **)(v18 + 56);
  uint64_t v41 = *(void **)(v18 + 64);
  HIDWORD(a13) = *(unsigned char *)(v18 + 152) & 1;
  uint64_t v27 = type metadata accessor for OutputGenerationManifest();
  *(_OWORD *)(v18 + 32) = 0u;
  *(void *)(v18 + 48) = 0;
  *(_OWORD *)(v18 + 16) = 0u;
  sub_1C9608D98(v25 + *(int *)(v27 + 44), v19, &qword_1EBC77C70);
  uint64_t v28 = sub_1C9BEC908();
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v28);
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v21, *MEMORY[0x1E4FA24B8], v39);
  v26[3] = (uint64_t)v24;
  v26[4] = (uint64_t)&protocol witness table for AceOutput;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v26);
  *(_OWORD *)(v23 + 104) = 0u;
  *(void *)(v23 + 120) = 0;
  *(_OWORD *)(v23 + 88) = 0u;
  id v29 = v41;
  sub_1C962F434(v18 + 16, v23 + 88);
  *(unsigned char *)(v23 + v24[10]) = BYTE4(a13);
  *(void *)uint64_t v23 = v42;
  sub_1C985A8C0(v19, v23 + v24[7], &qword_1EBC77C70);
  *(void *)(v23 + 8) = v41;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)(v23 + 64) = 0u;
  *(unsigned char *)(v23 + 80) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v23 + v24[8], v21, v39);
  sub_1C985A8C0(v20, v23 + v24[9], &qword_1EBC786C0);
  sub_1C965C608(v23, (uint64_t)boxed_opaque_existential_0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_6_11();
  return v31(v30, v31, v32, v33, v34, v35, v36, v37, v39, v21, boxed_opaque_existential_0, v41, a13, v20, v42, a16, a17, a18);
}

void sub_1C99B1110()
{
  uint64_t v1 = OUTLINED_FUNCTION_13_60();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_6_0();
  type metadata accessor for ProtectedAppDeviceUnlockStrategy();
  uint64_t v3 = swift_allocObject();
  sub_1C95FD5F0(v0 + 112, (uint64_t)v6);
  sub_1C95FD5F0(v0 + 152, (uint64_t)v5);
  type metadata accessor for UnlockDeviceFlowAsync(0);
  uint64_t v4 = (void *)swift_allocObject();
  sub_1C99B60DC(v3, (uint64_t)v6, (uint64_t)v5, v4);
}

uint64_t sub_1C99B1228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProtectedAppCheck.State(0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)a1;
  int v9 = *(unsigned __int8 *)(a1 + 8);
  if (v9 == 1)
  {
    id v10 = v8;
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C9BECF88();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
    id v12 = v8;
    id v13 = v8;
    uint64_t v14 = sub_1C9BECF78();
    os_log_type_t v15 = sub_1C9BEDC88();
    if (os_log_type_enabled(v14, v15))
    {
      v22[0] = a2;
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      char v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 138412290;
      id v18 = v8;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      v22[1] = v19;
      sub_1C9BEDF68();
      void *v17 = v19;
      sub_1C97183F4(v8, 1);
      sub_1C97183F4(v8, 1);
      _os_log_impl(&dword_1C95F9000, v14, v15, "PAC: Failed device unlock with error: %@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v17, -1, -1);
      MEMORY[0x1CB78C440](v16, -1, -1);

      sub_1C97183F4(v8, 1);
    }
    else
    {
      sub_1C97183F4(v8, 1);
      sub_1C97183F4(v8, 1);
    }
  }
  sub_1C96E5998(v8, v9);
  sub_1C99ACC10((uint64_t)v8, v9);
  uint64_t v20 = sub_1C9BEAB08();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 4, v20);
  return sub_1C99ACB8C((uint64_t)v7);
}

uint64_t sub_1C99B14AC()
{
  OUTLINED_FUNCTION_24();
  v1[16] = v0;
  uint64_t v2 = type metadata accessor for SiriKitEventPayload(0);
  v1[17] = v2;
  OUTLINED_FUNCTION_22(v2);
  v1[18] = OUTLINED_FUNCTION_16();
  uint64_t v3 = sub_1C9BEAB08();
  v1[19] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v1[20] = v4;
  v1[21] = OUTLINED_FUNCTION_16();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v1[22] = v5;
  OUTLINED_FUNCTION_22(v5);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C99B1598()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  __swift_project_boxed_opaque_existential_1(v1 + 4, v2);
  if ((*(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 24))(v1, v2, v3))
  {
    *(unsigned char *)(v0[16] + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) = 1;
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v4 = OUTLINED_FUNCTION_71_12();
    v0[25] = v4;
    uint64_t v5 = OUTLINED_FUNCTION_71_12();
    v0[26] = v5;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[27] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1C99B1758;
    return sub_1C9768CC0(18, v4, 0, v5);
  }
  else
  {
    OUTLINED_FUNCTION_59_13();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    return v8();
  }
}

uint64_t sub_1C99B1758()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 224) = v5;
  *(void *)(v3 + 232) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1C99B184C()
{
  if (qword_1EBC78230 != -1) {
    swift_once();
  }
  uint64_t v1 = *(uint64_t **)(v0 + 184);
  uint64_t v2 = *(int **)(v0 + 176);
  uint64_t v3 = qword_1EBC78220;
  uint64_t v4 = *(void *)algn_1EBC78228;
  *((unsigned char *)v1 + v2[6]) = 0;
  *((unsigned char *)v1 + v2[7]) = 0;
  uint64_t v14 = v3;
  *((unsigned char *)v1 + v2[10]) = 0;
  type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_4_1();
  *(uint64_t *)((char *)v1 + v2[12]) = 0;
  uint64_t v5 = (uint64_t *)((char *)v1 + v2[13]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (uint64_t *)((char *)v1 + v2[14]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v2[15]) = 0;
  *(uint64_t *)((char *)v1 + v2[17]) = 0;
  uint64_t v7 = (char *)v1 + v2[18];
  *(void *)uint64_t v7 = 0;
  *((_WORD *)v7 + 4) = 512;
  *((unsigned char *)v1 + v2[19]) = 0;
  *((unsigned char *)v1 + v2[20]) = 0;
  *((unsigned char *)v1 + v2[21]) = 0;
  *((unsigned char *)v1 + v2[22]) = 0;
  *((unsigned char *)v1 + v2[23]) = 0;
  uint64_t v8 = (uint64_t *)((char *)v1 + v2[24]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(uint64_t *)((char *)v1 + v2[25]) = 0;
  *(uint64_t *)((char *)v1 + v2[26]) = MEMORY[0x1E4FBC860];
  uint64_t v9 = (char *)v1 + v2[27];
  uint64_t v10 = *MEMORY[0x1E4FA24B8];
  sub_1C9BEC958();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(char *, uint64_t))(v11 + 104))(v9, v10);
  uint64_t v12 = (uint64_t)v1 + v2[28];
  uint64_t v13 = sub_1C9BEC908();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  *uint64_t v1 = v14;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  sub_1C965C4EC();
}

uint64_t sub_1C99B1BA4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99B1C88()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_55_17(*(void **)(v0 + 128));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C99B1D6C;
  uint64_t v2 = OUTLINED_FUNCTION_44_0();
  return v3(v2);
}

uint64_t sub_1C99B1D6C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 264) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99B1E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C9BECF88();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBC7A520);
  os_log_type_t v15 = sub_1C9BECF78();
  os_log_type_t v16 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_105(v16))
  {
    char v17 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)char v17 = 0;
    _os_log_impl(&dword_1C95F9000, v15, v12, "PAC: produceOutputForHiddenAppIfNecessary: showing app not found", v17, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  id v18 = (void *)OUTLINED_FUNCTION_134_0();
  __swift_project_boxed_opaque_existential_1(v18, v19);
  OUTLINED_FUNCTION_11_30();
  if (sub_1C9632DB0())
  {
    if (qword_1EBC78750 != -1) {
      swift_once();
    }
    *(void *)(v13 + 272) = qword_1EBC7A4A0;
    *(_OWORD *)(v13 + 112) = 0u;
    *(_OWORD *)(v13 + 96) = 0u;
    __swift_project_boxed_opaque_existential_1((void *)(v13 + 16), *(void *)(v13 + 40));
    sub_1C9BEC838();
  }
  uint64_t v20 = *(void **)(v13 + 224);
  sub_1C99B4E40(*(void *)(v13 + 192), (void (*)(void))type metadata accessor for OutputGenerationManifest);

  __swift_destroy_boxed_opaque_existential_1(v13 + 16);
  OUTLINED_FUNCTION_59_13();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_25_0();
  return v22(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

uint64_t sub_1C99B213C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 56;
  uint64_t v4 = v1 + 96;
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  swift_release();
  swift_release();
  sub_1C95FE76C(v3, (uint64_t *)&unk_1EBC789D0);
  sub_1C95FE76C(v4, &qword_1EBC78700);
  swift_release();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99B2270()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 192);

  sub_1C99B4E40(v1, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_59_13();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t sub_1C99B2318()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99B23AC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 192);

  sub_1C99B4E40(v1, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t sub_1C99B2464()
{
  OUTLINED_FUNCTION_24();
  v1[14] = v2;
  v1[15] = v0;
  OUTLINED_FUNCTION_13_60();
  v1[16] = OUTLINED_FUNCTION_16();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[17] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C99B2508;
  return sub_1C99ADC30();
}

uint64_t sub_1C99B2508()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99B25D0()
{
  unint64_t v81 = i;
  if (qword_1EBC7A3B8 != -1) {
LABEL_83:
  }
    swift_once();
  uint64_t v2 = sub_1C9BECF88();
  *(void *)(i + 144) = __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  BOOL v5 = os_log_type_enabled(v3, v4);
  uint64_t v6 = *(void *)(i + 120);
  unint64_t v76 = i;
  if (v5)
  {
    os_log_type_t v73 = v4;
    log = v3;
    uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v79 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses);
    OUTLINED_FUNCTION_84_1();
    uint64_t v9 = *v8;
    uint64_t v10 = *(void *)(*v8 + 16);
    uint64_t v11 = MEMORY[0x1E4FBC860];
    if (v10)
    {
      uint64_t v80 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      sub_1C963C340();
      uint64_t v11 = v80;
      uint64_t v12 = v9 + 49;
      do
      {
        uint64_t v13 = ProtectedAppStatus.debugDescription.getter();
        uint64_t v15 = v14;
        uint64_t v80 = v11;
        unint64_t v16 = *(void *)(v11 + 16);
        if (v16 >= *(void *)(v11 + 24) >> 1)
        {
          sub_1C963C340();
          uint64_t v11 = v80;
        }
        v12 += 24;
        *(void *)(v11 + 16) = v16 + 1;
        uint64_t v17 = v11 + 16 * v16;
        *(void *)(v17 + 32) = v13;
        *(void *)(v17 + 40) = v15;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
    unint64_t i = v76;
    *(void *)(v76 + 96) = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786E0);
    sub_1C963D18C();
    uint64_t v18 = sub_1C9BED518();
    unint64_t v1 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v76 + 104) = sub_1C95FF228(v18, v1, &v79);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, log, v73, "PAC: handleUnlockResponse: statuses=%s", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v20 = *(void *)(i + 120) + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  OUTLINED_FUNCTION_84_1();
  uint64_t v21 = *(void *)(*(void *)v20 + 16);
  if (v21)
  {
    uint64_t v22 = swift_bridgeObjectRetain() + 49;
    uint64_t v23 = MEMORY[0x1E4FBC860];
    while (2)
    {
      uint64_t v24 = *(void *)(v22 - 17);
      uint64_t v25 = *(void *)(v22 - 9);
      char v26 = *(unsigned char *)(v22 - 1);
      OUTLINED_FUNCTION_25_35();
      switch(v27)
      {
        case 1:
          OUTLINED_FUNCTION_49_17();
          goto LABEL_17;
        case 2:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        case 3:
          OUTLINED_FUNCTION_24_34();
          goto LABEL_17;
        default:
LABEL_17:
          char v28 = OUTLINED_FUNCTION_42_15();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0) {
            goto LABEL_19;
          }
LABEL_18:
          if (v26)
          {
LABEL_19:
            swift_bridgeObjectRelease();
          }
          else
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              OUTLINED_FUNCTION_72_17();
            }
            unint64_t v29 = *(void *)(v23 + 16);
            if (v29 >= *(void *)(v23 + 24) >> 1) {
              OUTLINED_FUNCTION_57_17();
            }
            *(void *)(v23 + 16) = v29 + 1;
            uint64_t v30 = v23 + 24 * v29;
            *(void *)(v30 + 32) = v24;
            *(void *)(v30 + 40) = v25;
            *(unsigned char *)(v30 + 48) = 0;
            *(unsigned char *)(v30 + 49) = v1;
          }
          if (--v21) {
            continue;
          }
          uint64_t v74 = v23;
          swift_bridgeObjectRelease();
          uint64_t v31 = *(void *)(*(void *)v20 + 16);
          if (v31)
          {
            uint64_t v32 = swift_bridgeObjectRetain() + 49;
            uint64_t v33 = MEMORY[0x1E4FBC860];
            do
            {
              uint64_t v34 = *(void *)(v32 - 17);
              uint64_t v35 = *(void *)(v32 - 9);
              char v36 = *(unsigned char *)(v32 - 1);
              OUTLINED_FUNCTION_25_35();
              switch(v37)
              {
                case 1:
                  swift_bridgeObjectRetain();
LABEL_34:
                  swift_bridgeObjectRelease();
                  goto LABEL_36;
                case 2:
                  OUTLINED_FUNCTION_48_21();
                  break;
                case 3:
                  OUTLINED_FUNCTION_24_34();
                  break;
                default:
                  break;
              }
              char v38 = OUTLINED_FUNCTION_41_19();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              if (v38)
              {
LABEL_36:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  OUTLINED_FUNCTION_72_17();
                }
                unint64_t v40 = *(void *)(v33 + 16);
                if (v40 >= *(void *)(v33 + 24) >> 1) {
                  OUTLINED_FUNCTION_57_17();
                }
                *(void *)(v33 + 16) = v40 + 1;
                uint64_t v41 = v33 + 24 * v40;
                *(void *)(v41 + 32) = v34;
                *(void *)(v41 + 40) = v35;
                *(unsigned char *)(v41 + 48) = v36;
                *(unsigned char *)(v41 + 49) = v1;
              }
              else
              {
                switch((int)v1)
                {
                  case 1:
                  case 2:
                  case 3:
                    char v39 = sub_1C9BEE618();
                    swift_bridgeObjectRelease();
                    if (v39) {
                      goto LABEL_36;
                    }
                    swift_bridgeObjectRelease();
                    break;
                  default:
                    goto LABEL_34;
                }
              }
              --v31;
            }
            while (v31);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v33 = MEMORY[0x1E4FBC860];
          }
          unint64_t i = v76;
          uint64_t v42 = v74;
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v42 = MEMORY[0x1E4FBC860];
    uint64_t v33 = MEMORY[0x1E4FBC860];
  }
  uint64_t v43 = *(void **)(i + 120);
  uint64_t v44 = sub_1C99ABA24(v42);
  uint64_t v45 = sub_1C98A5224(v44);
  uint64_t v46 = v43[7];
  unint64_t v1 = v43[8];
  __swift_project_boxed_opaque_existential_1(v43 + 4, v46);
  uint64_t v47 = sub_1C99ABA24(v42);
  swift_release();
  uint64_t v48 = (*(uint64_t (**)(void *, uint64_t, uint64_t, unint64_t))(v1 + 16))(v43, v47, v46, v1);
  swift_bridgeObjectRelease();
  uint64_t v78 = *(void *)(v48 + 16);
  if (v78)
  {
    unint64_t v49 = 0;
    uint64_t v77 = v45 + 56;
    uint64_t v50 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v49 >= *(void *)(v48 + 16))
      {
        __break(1u);
        goto LABEL_83;
      }
      if (*(void *)(v45 + 16))
      {
        uint64_t v51 = (unint64_t *)(v48 + 32 + 16 * v49);
        unint64_t v1 = *v51;
        unint64_t v52 = v51[1];
        sub_1C9BEE738();
        swift_bridgeObjectRetain();
        sub_1C9BED4E8();
        uint64_t v53 = sub_1C9BEE768();
        unint64_t i = -1 << *(unsigned char *)(v45 + 32);
        unint64_t v54 = v53 & ~i;
        if ((*(void *)(v77 + ((v54 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v54))
        {
          uint64_t v55 = *(void *)(v45 + 48);
          uint64_t v56 = (void *)(v55 + 16 * v54);
          BOOL v57 = *v56 == v1 && v56[1] == v52;
          if (v57 || (sub_1C9BEE618() & 1) != 0)
          {
LABEL_57:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C965519C();
              uint64_t v50 = v63;
            }
            unint64_t i = *(void *)(v50 + 16);
            if (i >= *(void *)(v50 + 24) >> 1)
            {
              sub_1C965519C();
              uint64_t v50 = v64;
            }
            *(void *)(v50 + 16) = i + 1;
            uint64_t v58 = v50 + 16 * i;
            *(void *)(v58 + 32) = v1;
            *(void *)(v58 + 40) = v52;
            goto LABEL_71;
          }
          unint64_t v59 = v54 + 1;
          unint64_t v60 = ~i;
          for (unint64_t i = v59 & ~i; ((*(void *)(v77 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v60)
          {
            uint64_t v61 = (void *)(v55 + 16 * i);
            BOOL v62 = *v61 == v1 && v61[1] == v52;
            if (v62 || (sub_1C9BEE618() & 1) != 0) {
              goto LABEL_57;
            }
          }
        }
        swift_bridgeObjectRelease();
      }
LABEL_71:
      if (++v49 == v78)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t i = v76;
        goto LABEL_74;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = MEMORY[0x1E4FBC860];
LABEL_74:
  uint64_t v65 = *(void *)(v50 + 16);
  swift_bridgeObjectRelease();
  if (v65 && *(void *)(v33 + 16))
  {
    *(unsigned char *)(*(void *)(i + 120) + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) = 1;
    swift_release();
    uint64_t v66 = (void *)swift_task_alloc();
    *(void *)(i + 152) = v66;
    void *v66 = i;
    v66[1] = sub_1C99B2F5C;
    return sub_1C99B14AC();
  }
  else
  {
    swift_release();
    uint64_t v68 = sub_1C9BEAB08();
    OUTLINED_FUNCTION_5_69(v68);
    uint64_t v69 = swift_task_alloc();
    uint64_t v70 = (void *)OUTLINED_FUNCTION_53_14(v69);
    void *v70 = v71;
    v70[1] = sub_1C99B30D0;
    uint64_t v72 = *(void *)(i + 112);
    return sub_1C99B3350(v72);
  }
}

uint64_t sub_1C99B2F5C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *BOOL v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99B3038()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_5_69(v1);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_53_14(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C99B30D0;
  uint64_t v5 = *(void *)(v0 + 112);
  return sub_1C99B3350(v5);
}

uint64_t sub_1C99B30D0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C99B31AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_142();
  a19 = v22;
  a20 = v23;
  OUTLINED_FUNCTION_135();
  a18 = v20;
  uint64_t v24 = *(void **)(v20 + 160);
  id v25 = v24;
  id v26 = v24;
  uint64_t v27 = (void *)sub_1C9BECF78();
  os_log_type_t v28 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_65_0(v28))
  {
    unint64_t v29 = *(void **)(v20 + 160);
    OUTLINED_FUNCTION_67();
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_60_17(4.8149e-34);
    *(void *)(v21 + 72) = v29;
    id v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v31 = sub_1C9BED5D8();
    *(void *)(v20 + 80) = sub_1C95FF228(v31, v32, &a10);
    OUTLINED_FUNCTION_37_25();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_12(&dword_1C95F9000, v33, v34, "PAC: Could not produce unlock dialog: %s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v35 = *(void **)(v20 + 160);
  }
  uint64_t v36 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_5_69(v36);
  uint64_t v37 = swift_task_alloc();
  char v38 = (void *)OUTLINED_FUNCTION_53_14(v37);
  void *v38 = v39;
  v38[1] = sub_1C99B30D0;
  OUTLINED_FUNCTION_139();
  return sub_1C99B3350(v40);
}

uint64_t sub_1C99B3350(uint64_t a1)
{
  *(void *)(v2 + 216) = a1;
  *(void *)(v2 + 224) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99B3368);
}

uint64_t sub_1C99B3368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_21();
  a19 = v21;
  a20 = v22;
  OUTLINED_FUNCTION_135();
  a18 = v20;
  uint64_t v23 = (void *)v20[28];
  uint64_t v24 = v23[7];
  uint64_t v25 = v23[8];
  __swift_project_boxed_opaque_existential_1(v23 + 4, v24);
  id v26 = (char *)v23 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_statuses;
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_84_1();
  uint64_t v27 = *(void *)v26;
  os_log_type_t v28 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v25 + 32);
  swift_bridgeObjectRetain();
  v28(v23, v27, v24, v25);
  swift_bridgeObjectRelease();
  if (*((unsigned char *)v23 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_appsRemainInaccessible) == 1)
  {
    uint64_t v29 = v20[28];
LABEL_14:
    OUTLINED_FUNCTION_1_0();
    *(unsigned char *)(v29 + 16) = 1;
    goto LABEL_15;
  }
  uint64_t v29 = v20[28];
  int v30 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult + 8);
  if (v30 != 255 && (v30 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v32 = *(void *)(*(void *)v26 + 16);
  if (v32)
  {
    uint64_t v33 = (unsigned char *)(*(void *)v26 + 48);
    while ((*v33 & 1) == 0)
    {
      v33 += 24;
      if (!--v32)
      {
        int v34 = *(unsigned __int8 *)(v29 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_noAppsRequireUnlock);
        uint64_t v35 = (unsigned char *)(v29 + 16);
        if (v34 == 1)
        {
          OUTLINED_FUNCTION_1_0();
          *uint64_t v35 = 0;
        }
        else
        {
          OUTLINED_FUNCTION_1_0();
          *uint64_t v35 = 1;
        }
        goto LABEL_15;
      }
    }
  }
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v29 + 16) = 0;
LABEL_15:
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_1C9BECF88();
  os_log_type_t v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  char v38 = sub_1C9BECF78();
  os_log_type_t v39 = sub_1C9BEDC78();
  BOOL v40 = OUTLINED_FUNCTION_13(v39);
  uint64_t v41 = v20[28];
  if (v40)
  {
    uint64_t v42 = (uint8_t *)OUTLINED_FUNCTION_67();
    a9 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v42 = 136315138;
    OUTLINED_FUNCTION_84_1();
    if (*(unsigned char *)(v41 + 16)) {
      uint64_t v43 = 1818845542;
    }
    else {
      uint64_t v43 = 1936941424;
    }
    v20[26] = sub_1C95FF228(v43, 0xE400000000000000, &a9);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C95F9000, v38, v37, "PAC: Exiting flow with exitValue: %s", v42, 0xCu);
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    swift_release_n();
  }

  static ExecuteResponse.complete()(v20[27]);
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v45(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12);
}

uint64_t ProtectedAppCheck.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1C95FE76C(v0 + 72, &qword_1EA58A828);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_release();
  sub_1C99B4E40(v0 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_state, (void (*)(void))type metadata accessor for ProtectedAppCheck.State);
  sub_1C978EF64(*(void **)(v0 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult), *(unsigned char *)(v0 + OBJC_IVAR____TtC11SiriKitFlow17ProtectedAppCheck_deviceUnlockResult + 8));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProtectedAppCheck.__deallocating_deinit()
{
  ProtectedAppCheck.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C99B376C(uint64_t a1)
{
  return sub_1C99AD028(a1) & 1;
}

uint64_t sub_1C99B3794()
{
  return sub_1C99AD5A8();
}

uint64_t sub_1C99B37B8()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C99AD5AC();
}

uint64_t sub_1C99B3848@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C99AC8B0();
  *a1 = result;
  return result;
}

uint64_t ProtectedAppCheckClient.loggingDescription.getter()
{
  return 0;
}

void sub_1C99B38C4(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *a2 = &unk_1EA594328;
  a2[1] = v5;

  sub_1C9BEC838();
}

uint64_t sub_1C99B3930(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9615888;
  return v9(a1, v5, v6);
}

void sub_1C99B3A20(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  sub_1C9BEC838();
}

uint64_t sub_1C99B3A90(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  long long v4[2] = a2;
  v4[3] = a3;
  uint64_t v8 = (int *)((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C9618A08;
  return ((uint64_t (*)(uint64_t, void *))v8)(a1, v4 + 2);
}

void CustomProtectedAppCheckClient.status.getter()
{
}

uint64_t CustomProtectedAppCheckClient.status.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*CustomProtectedAppCheckClient.status.modify())(void)
{
  return nullsub_1;
}

uint64_t CustomProtectedAppCheckClient.init(status:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *a3 = &unk_1EA594220;
  a3[1] = result;
  a3[2] = 0x6D6F74737543;
  a3[3] = 0xE600000000000000;
  return result;
}

uint64_t sub_1C99B3C74(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  a4(a2, a3);
  uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
  return sub_1C99B64CC(v5);
}

uint64_t CustomProtectedAppCheckClient.status(for:)()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*v0 + *(int *)*v0);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_17_0(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_1C9615888;
  return v11(v6, v4, v2);
}

uint64_t CustomProtectedAppCheckClient.loggingDescription.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C99B3E14()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return CustomProtectedAppCheckClient.status(for:)();
}

uint64_t sub_1C99B3EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  long long v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C99B3EEC, 0, 0);
}

uint64_t sub_1C99B3EEC()
{
  objc_allocWithZone(MEMORY[0x1E4F223C8]);
  swift_bridgeObjectRetain();
  uint64_t v1 = OUTLINED_FUNCTION_134_0();
  id v3 = sub_1C99B4CD4(v1, v2, 0);
  v0[6] = v3;
  uint64_t v8 = v3;
  if (v3)
  {
    id v9 = objc_msgSend(v3, sel_applicationState);
    unsigned __int8 v10 = objc_msgSend(v9, sel_isInstalled);

    if (v10)
    {
      uint64_t v11 = (void *)v0[5];
      uint64_t v12 = v11[3];
      uint64_t v13 = v11[4];
      __swift_project_boxed_opaque_existential_1(v11, v12);
      uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 + 8)
                                                                                + **(int **)(v13 + 8));
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[7] = v14;
      *uint64_t v14 = v15;
      v14[1] = sub_1C99B40DC;
      uint64_t v16 = v0[3];
      uint64_t v17 = v0[4];
      uint64_t v18 = v0[2];
      return v20(v18, v16, v17, v12, v13);
    }
    uint64_t v19 = v0[3];
    uint64_t v4 = v0[4];
    uint64_t v5 = v0[2];

    *(void *)uint64_t v5 = v19;
  }
  else
  {
    uint64_t v4 = v0[4];
    uint64_t v5 = v0[2];
    *(void *)uint64_t v5 = v0[3];
  }
  *(void *)(v5 + 8) = v4;
  *(_WORD *)(v5 + 16) = 0;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_22_0();
  return v6();
}

uint64_t sub_1C99B40DC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C99B41A4()
{
  OUTLINED_FUNCTION_24();

  OUTLINED_FUNCTION_22_0();
  return v1();
}

unint64_t sub_1C99B41FC()
{
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t sub_1C99B42AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9615888;
  return sub_1C99B3EC8(a1, a2, a3);
}

uint64_t sub_1C99B4360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  long long v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C99B4384, 0, 0);
}

uint64_t sub_1C99B4384()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  *(void *)uint64_t v2 = v0[3];
  *(void *)(v2 + 8) = v1;
  *(_WORD *)(v2 + 16) = 769;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  swift_bridgeObjectRetain();
  return v4();
}

uint64_t sub_1C99B43F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9615888;
  return sub_1C99B4360(a1, a2, a3);
}

uint64_t sub_1C99B44BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[18] = a2;
  v3[19] = a3;
  v3[17] = a1;
  uint64_t v4 = sub_1C9BEC0D8();
  v3[20] = v4;
  v3[21] = *(void *)(v4 - 8);
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C99B4580, 0, 0);
}

uint64_t sub_1C99B4580()
{
  OUTLINED_FUNCTION_26_0();
  (*(void (**)(void, void, void))(v0[21] + 104))(v0[22], *MEMORY[0x1E4F4B798], v0[20]);
  char v1 = sub_1C9BEC0C8();
  uint64_t v2 = OUTLINED_FUNCTION_33_1();
  v3(v2);
  if ((v1 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v4 = self;
  OUTLINED_FUNCTION_134_0();
  uint64_t v5 = (void *)sub_1C9BED538();
  id v6 = objc_msgSend(v4, sel_applicationWithBundleIdentifier_, v5);
  v0[23] = v6;

  if (objc_msgSend(v6, sel_isHidden))
  {
    uint64_t v8 = v0[18];
    uint64_t v7 = v0[19];
    uint64_t v9 = v0[17];

    char v10 = 0;
    *(void *)uint64_t v9 = v8;
    char v11 = 1;
LABEL_10:
    *(void *)(v9 + 8) = v7;
    *(unsigned char *)(v9 + 16) = v10;
    *(unsigned char *)(v9 + 17) = v11;
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v14();
  }
  if (!objc_msgSend(v6, sel_isLocked))
  {

LABEL_9:
    uint64_t v7 = v0[19];
    uint64_t v9 = v0[17];
    *(void *)uint64_t v9 = v0[18];
    char v11 = 3;
    char v10 = 1;
    goto LABEL_10;
  }
  id v12 = objc_msgSend(self, sel_sharedGuard);
  v0[24] = v12;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C99B47F0;
  uint64_t v13 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C99B4B88;
  v0[13] = &block_descriptor_5;
  v0[14] = v13;
  objc_msgSend(v12, sel_getIsChallengeCurrentlyRequiredForSubject_completion_, v6, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C99B47F0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 200) = *(void *)(v3 + 48);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C99B48D0()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = (void *)v0[23];
  uint64_t v1 = (void *)v0[24];
  uint64_t v3 = (void *)v0[15];
  unsigned __int8 v4 = objc_msgSend(v3, sel_BOOLValue);

  uint64_t v5 = v0[19];
  uint64_t v6 = v0[17];
  *(void *)uint64_t v6 = v0[18];
  *(void *)(v6 + 8) = v5;
  *(unsigned char *)(v6 + 17) = 2;
  *(unsigned char *)(v6 + 16) = v4 ^ 1;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v7();
}

void sub_1C99B4980()
{
  uint64_t v1 = (void *)v0[24];
  swift_willThrow();

  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[25];
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = (void *)sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC88();
  BOOL v8 = OUTLINED_FUNCTION_65_0(v7);
  uint64_t v9 = (void *)v0[25];
  char v10 = (void *)v0[23];
  if (v8)
  {
    uint64_t v21 = (void *)v0[23];
    char v11 = (_DWORD *)OUTLINED_FUNCTION_67();
    id v12 = (void *)swift_slowAlloc();
    *char v11 = 138412290;
    id v13 = v9;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[16] = v14;
    sub_1C9BEDF68();
    *id v12 = v14;

    OUTLINED_FUNCTION_12(&dword_1C95F9000, v15, v16, "PAC: Error during getIsChallengeCurrentlyRequired: %@");
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v17 = v0[19];
  uint64_t v18 = v0[17];
  *(void *)uint64_t v18 = v0[18];
  *(void *)(v18 + 8) = v17;
  *(_WORD *)(v18 + 16) = 513;
  swift_bridgeObjectRetain();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_10_1();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C99B4B88(uint64_t result, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 32);
  if (a3) {
    return sub_1C9690CC0(v3, (uint64_t)a3);
  }
  if (a2) {
    return sub_1C99ABE30(v3, (uint64_t)a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C99B4BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *os_log_type_t v7 = v3;
  v7[1] = sub_1C9615888;
  return sub_1C99B44BC(a1, a2, a3);
}

void sub_1C99B4C9C(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 32) = &type metadata for FeatureFlagDefinitions.Core;
  *(void *)(a1 + 40) = &off_1F23DF470;
  *(unsigned char *)(a1 + 8) = 0;
}

void sub_1C99B4CBC(uint64_t a1@<X8>)
{
}

id sub_1C99B4CD4(uint64_t a1, uint64_t a2, char a3)
{
  v10[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  id v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    id v7 = v10[0];
  }
  else
  {
    id v8 = v10[0];
    sub_1C9BEA8C8();

    swift_willThrow();
  }
  return v6;
}

uint64_t type metadata accessor for ProtectedAppCheck(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA594258);
}

uint64_t type metadata accessor for ProtectedAppCheck.State(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA594298);
}

uint64_t sub_1C99B4DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_31_7();
  v4(v3);
  OUTLINED_FUNCTION_8_4();
  uint64_t v5 = OUTLINED_FUNCTION_228();
  v6(v5);
  return a2;
}

uint64_t sub_1C99B4E40(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1C99B4E98()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_69_15();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_32_31();
  return v4(v3);
}

unint64_t sub_1C99B4F38()
{
  unint64_t result = qword_1EA594230;
  if (!qword_1EA594230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA594230);
  }
  return result;
}

uint64_t sub_1C99B4F84(uint64_t a1)
{
  uint64_t result = sub_1C99B62F4(&qword_1EA594238, (void (*)(uint64_t))type metadata accessor for ProtectedAppCheck);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C99B4FDC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C99AC8B0();
  *a1 = result;
  return result;
}

uint64_t sub_1C99B5008(char *a1)
{
  return sub_1C99AC8DC(*a1);
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:appsToBeUnlocked:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:appsToIncludeInLockedAppDialog:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheckShouldProduceOutputForHiddenApps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:didProduce:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ProtectedAppCheckStrategy.protectedAppCheck(_:needsAppNameForAppID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_1C99B50A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProtectedAppStatus(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ProtectedAppStatus(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtectedAppStatus(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 18))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProtectedAppStatus(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ProtectedAppStatus()
{
}

unsigned char *storeEnumTagSinglePayload for ProtectedAppStatus.AppState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C99B52ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ProtectedAppStatus.AppState()
{
}

uint64_t sub_1C99B5320()
{
  return type metadata accessor for ProtectedAppCheck(0);
}

uint64_t sub_1C99B5328()
{
  uint64_t result = type metadata accessor for ProtectedAppCheck.State(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ProtectedAppCheck(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProtectedAppCheck);
}

uint64_t dispatch thunk of ProtectedAppCheck.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))() & 1;
}

uint64_t dispatch thunk of ProtectedAppCheck.__allocating_init(appIDs:strategy:client:deviceState:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t dispatch thunk of ProtectedAppCheck.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of ProtectedAppCheck.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of ProtectedAppCheck.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  id v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 344) + **(int **)(*(void *)v0 + 344));
  uint64_t v3 = swift_task_alloc();
  unsigned int v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *unsigned int v4 = v5;
  v4[1] = sub_1C9615010;
  return v7(v2);
}

uint64_t dispatch thunk of ProtectedAppCheckClient.status(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v10 = swift_task_alloc();
  char v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *char v11 = v12;
  v11[1] = sub_1C9615888;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of ProtectedAppCheckClient.loggingDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t destroy for CustomProtectedAppCheckClient()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void initializeWithCopy for CustomProtectedAppCheckClient(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_1C9BEC838();
}

void assignWithCopy for CustomProtectedAppCheckClient(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_1C9BEC838();
}

uint64_t assignWithTake for CustomProtectedAppCheckClient(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CustomProtectedAppCheckClient(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CustomProtectedAppCheckClient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for CustomProtectedAppCheckClient()
{
}

uint64_t type metadata accessor for ProtectedAppDeviceUnlockStrategy()
{
  return self;
}

void *sub_1C99B58E0(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = sub_1C9BEAB08();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

uint64_t sub_1C99B59DC(uint64_t a1)
{
  uint64_t v2 = sub_1C9BEAB08();
  uint64_t result = __swift_getEnumTagSinglePayload(a1, 4, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_1C99B5A64(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1C99B5B24(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 4, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  return a1;
}

void *sub_1C99B5C6C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1C99B5D2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 4, v6);
  int v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 4, v6);
  if (!EnumTagSinglePayload)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1C99B5E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C99B5E88);
}

uint64_t sub_1C99B5E88(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_31_7();
  uint64_t v4 = sub_1C9BEAB08();
  unsigned int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, a2, v4);
  if (EnumTagSinglePayload >= 5) {
    return EnumTagSinglePayload - 4;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C99B5ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C99B5EE0);
}

uint64_t sub_1C99B5EE0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 4);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C9BEAB08();

  return __swift_storeEnumTagSinglePayload(a1, v5, a3, v6);
}

uint64_t sub_1C99B5F40(uint64_t a1)
{
  uint64_t v2 = sub_1C9BEAB08();

  return __swift_getEnumTagSinglePayload(a1, 4, v2);
}

uint64_t sub_1C99B5F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAB08();

  return __swift_storeEnumTagSinglePayload(a1, a2, 4, v4);
}

uint64_t sub_1C99B5FD0()
{
  uint64_t result = sub_1C9BEAB08();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnconditionalSuccessClient()
{
  return &type metadata for UnconditionalSuccessClient;
}

void type metadata accessor for EmptyProtectedAppCheckStrategy()
{
}

ValueMetadata *type metadata accessor for AppProtectionFrameworkClient()
{
  return &type metadata for AppProtectionFrameworkClient;
}

ValueMetadata *type metadata accessor for AppInstallationCheckingClient()
{
  return &type metadata for AppInstallationCheckingClient;
}

void sub_1C99B6084(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setAppBundleId_, v4);
}

void sub_1C99B60DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = sub_1C9BEAB08();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEAAF8();
  sub_1C9BEAAB8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  a4[15] = sub_1C9658304(8);
  a4[16] = v10;
  a4[17] = v11;
  a4[18] = v12;
  sub_1C9BEC838();
}

uint64_t sub_1C99B62EC(uint64_t a1)
{
  return sub_1C99B1228(a1, v1);
}

uint64_t sub_1C99B62F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C99B633C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C99B6374()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_69_15();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_32_31();
  return v4(v3);
}

uint64_t sub_1C99B6410()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = *(int **)(v0 + 16);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_17_0(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1C9615888;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_1EA594320 + dword_1EA594320);
  return v9(v4, v2, v5);
}

uint64_t sub_1C99B64CC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C99B64D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ProtectedAppCheck.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_5_69(uint64_t a1)
{
  __swift_storeEnumTagSinglePayload(v1, 4, 4, a1);
  return sub_1C99ACB8C(v1);
}

uint64_t OUTLINED_FUNCTION_13_60()
{
  return type metadata accessor for ProtectedAppCheck.State(0) - 8;
}

uint64_t OUTLINED_FUNCTION_24_34()
{
  return 0x6C616D726F6ELL;
}

uint64_t OUTLINED_FUNCTION_25_35()
{
  return 0x6C6174736E696E75;
}

uint64_t OUTLINED_FUNCTION_26_34(uint64_t result)
{
  *(void *)(v1 + 304) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_31()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_40_22()
{
  return 0x6C6174736E696E75;
}

uint64_t OUTLINED_FUNCTION_41_19()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_49_17()
{
  return 0x6E6564646968;
}

uint64_t OUTLINED_FUNCTION_55_17@<X0>(void *a1@<X8>)
{
  uint64_t v1 = a1[23];
  __swift_project_boxed_opaque_existential_1(a1 + 19, a1[22]);
  return v1 + 8;
}

void OUTLINED_FUNCTION_57_17()
{
  sub_1C9801E84();
}

uint64_t OUTLINED_FUNCTION_59_13()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_60_17(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_71_12()
{
  return sub_1C9BED458();
}

void OUTLINED_FUNCTION_73_11()
{
  sub_1C9801E84();
}

uint64_t dispatch thunk of ProtectedAppCheckClientOverridable.protectedAppClientOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProtectedAppCheckClientOverridable.protectedAppClientOverride.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ProtectedAppCheckClientOverridable.protectedAppClientOverride.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t ProtoJsonCoder.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t ProtoJsonCoder.init()()
{
  return v0;
}

void sub_1C99B67A0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD00000000000002ELL;
  *(void *)(a1 + 8) = 0x80000001C9C23E60;
  *(unsigned char *)(a1 + 16) = 1;
}

uint64_t ProtoJsonCoder.deinit()
{
  return v0;
}

uint64_t ProtoJsonCoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1C99B67E0(uint64_t a1@<X8>)
{
}

uint64_t type metadata accessor for ProtoJsonCoder()
{
  return self;
}

uint64_t method lookup function for ProtoJsonCoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProtoJsonCoder);
}

uint64_t dispatch thunk of ProtoJsonCoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ProtoJsonCoder.toJsonDictionary(data:typeName:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t ProtoJsonCoding.makeSlotDescriptionForEncoding(parameterName:intentSlotDescription:selectionItem:typeNamesByValueType:)(uint64_t a1, uint64_t a2, void *a3, id a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v60 = a5;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v15 = MEMORY[0x1F4188790](v13 - 8, v14);
  uint64_t v59 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15, v17);
  uint64_t v58 = (char *)&v57 - v19;
  uint64_t v20 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](v18, v21);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC764D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  *(void *)(inited + 32) = 1701667182;
  *(void *)(inited + 40) = 0xE400000000000000;
  uint64_t v57 = a1;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1C9BED458();
  if (a4)
  {
    id v26 = objc_msgSend(a4, sel_value);
    if (v26)
    {
      uint64_t v27 = v26;
      a4 = objc_msgSend(v26, sel_type);

      int v28 = 0;
      goto LABEL_6;
    }
    a4 = 0;
  }
  int v28 = 1;
LABEL_6:
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v7, a6);
  if (v28) {
    a4 = (id)sub_1C99B7468((uint64_t)objc_msgSend(a3, sel_valueType));
  }
  (*(void (**)(char *, uint64_t))(v20 + 8))(v23, a6);
  switch((int)a4)
  {
    case 1:
      uint64_t v29 = @"String";
      goto LABEL_53;
    case 2:
      uint64_t v29 = @"Double";
      goto LABEL_53;
    case 3:
      uint64_t v29 = @"Integer";
      goto LABEL_53;
    case 4:
      uint64_t v29 = @"Contact";
      goto LABEL_53;
    case 5:
      uint64_t v29 = @"DateTimeRange";
      goto LABEL_53;
    case 6:
      uint64_t v29 = @"Location";
      goto LABEL_53;
    case 7:
      uint64_t v29 = @"DataString";
      goto LABEL_53;
    case 8:
      uint64_t v29 = @"Long";
      goto LABEL_53;
    case 9:
      uint64_t v29 = @"PaymentMethod";
      goto LABEL_53;
    case 10:
      uint64_t v29 = @"Temperature";
      goto LABEL_53;
    case 11:
      uint64_t v29 = @"Distance";
      goto LABEL_53;
    case 12:
      uint64_t v29 = @"FinancialAccount";
      goto LABEL_53;
    case 13:
      uint64_t v29 = @"BillType";
      goto LABEL_53;
    case 14:
      uint64_t v29 = @"Mass";
      goto LABEL_53;
    case 15:
      uint64_t v29 = @"Volume";
      goto LABEL_53;
    case 16:
      uint64_t v29 = @"Speed";
      goto LABEL_53;
    case 17:
      uint64_t v29 = @"Energy";
      goto LABEL_53;
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
LABEL_14:
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", a4);
      uint64_t v29 = (__CFString *)objc_claimAutoreleasedReturnValue();
      goto LABEL_54;
    case 50:
      uint64_t v29 = @"StringList";
      goto LABEL_53;
    case 51:
      uint64_t v29 = @"DoubleList";
      goto LABEL_53;
    case 52:
      uint64_t v29 = @"IntegerList";
      goto LABEL_53;
    case 53:
      uint64_t v29 = @"ContactList";
      goto LABEL_53;
    case 54:
      uint64_t v29 = @"DateTimeRangeList";
      goto LABEL_53;
    case 55:
      uint64_t v29 = @"LocationList";
      goto LABEL_53;
    case 56:
      uint64_t v29 = @"DataStringList";
      goto LABEL_53;
    case 57:
      uint64_t v29 = @"LongList";
      goto LABEL_53;
    case 58:
      uint64_t v29 = @"PaymentMethodList";
      goto LABEL_53;
    case 59:
      uint64_t v29 = @"TemperatureList";
      goto LABEL_53;
    case 60:
      uint64_t v29 = @"DistanceList";
      goto LABEL_53;
    default:
      switch((int)a4)
      {
        case 'd':
          uint64_t v29 = @"PrimitiveBool";
          break;
        case 'e':
          uint64_t v29 = @"PrimitiveInt";
          break;
        case 'f':
          uint64_t v29 = @"PrimitiveLong";
          break;
        case 'g':
          uint64_t v29 = @"PrimitiveDouble";
          break;
        case 'h':
          uint64_t v29 = @"PrimitiveString";
          break;
        case 'i':
          uint64_t v29 = @"DateTime";
          break;
        case 'j':
          goto LABEL_14;
        case 'k':
          uint64_t v29 = @"Intent";
          break;
        case 'l':
          uint64_t v29 = @"ModifyRelationship";
          break;
        case 'm':
          uint64_t v29 = @"ModifyNickname";
          break;
        case 'n':
          uint64_t v29 = @"CalendarEvent";
          break;
        case 'o':
          uint64_t v29 = @"EventParticipant";
          break;
        case 'p':
          uint64_t v29 = @"EventAttribute";
          break;
        default:
          if (a4 != 1000) {
            goto LABEL_14;
          }
          uint64_t v29 = @"Extension";
          break;
      }
LABEL_53:
      int v30 = v29;
LABEL_54:
      uint64_t v31 = v29;
      uint64_t v32 = sub_1C9BED568();
      uint64_t v34 = v33;

      swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v61[0] = v25;
      sub_1C9919E00(v32, v34, 0x70795465756C6176, 0xE900000000000065);
      uint64_t v35 = *(void *)&v61[0];
      swift_bridgeObjectRelease();
      if (a4 == 1000)
      {
        id v36 = objc_msgSend(a3, (SEL)&selRef_int64ValueType);
        uint64_t v37 = sub_1C960685C((uint64_t)v36, v60);
        if (!v38)
        {
          *(void *)&v61[0] = 0;
          *((void *)&v61[0] + 1) = 0xE000000000000000;
          sub_1C9BEE188();
          sub_1C9BED6B8();
          sub_1C9BED6B8();
          sub_1C9BED6B8();
          *(void *)&long long v63 = objc_msgSend(a3, (SEL)&selRef_int64ValueType);
          sub_1C9BEE5A8();
          sub_1C9BED6B8();
          swift_bridgeObjectRelease();
          sub_1C9BED6B8();
          long long v44 = v61[0];
          if (qword_1EBC7A3B8 != -1) {
            swift_once();
          }
          uint64_t v45 = sub_1C9BECF88();
          uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EBC7A520);
          uint64_t v47 = *(void *)(v45 - 8);
          uint64_t v48 = (uint64_t)v58;
          (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v58, v46, v45);
          __swift_storeEnumTagSinglePayload(v48, 0, 1, v45);
          uint64_t v49 = v48;
          uint64_t v50 = v59;
          sub_1C96C26E8(v49, v59);
          if (__swift_getEnumTagSinglePayload(v50, 1, v45) == 1)
          {
            sub_1C95FE7C0(v59, &qword_1EBC7A230);
          }
          else
          {
            swift_bridgeObjectRetain_n();
            uint64_t v51 = sub_1C9BECF78();
            os_log_type_t v52 = sub_1C9BEDC88();
            if (os_log_type_enabled(v51, v52))
            {
              uint64_t v53 = swift_slowAlloc();
              uint64_t v60 = swift_slowAlloc();
              *(void *)&v61[0] = v60;
              *(_DWORD *)uint64_t v53 = 136315650;
              uint64_t v54 = sub_1C9BEE1B8();
              *(void *)&long long v63 = sub_1C95FF228(v54, v55, (uint64_t *)v61);
              sub_1C9BEDF68();
              swift_bridgeObjectRelease();
              *(_WORD *)(v53 + 12) = 2048;
              *(void *)&long long v63 = 28;
              sub_1C9BEDF68();
              *(_WORD *)(v53 + 22) = 2080;
              swift_bridgeObjectRetain();
              *(void *)&long long v63 = sub_1C95FF228(v44, *((unint64_t *)&v44 + 1), (uint64_t *)v61);
              sub_1C9BEDF68();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1C95F9000, v51, v52, "FatalError at %s:%lu - %s", (uint8_t *)v53, 0x20u);
              uint64_t v56 = v60;
              swift_arrayDestroy();
              MEMORY[0x1CB78C440](v56, -1, -1);
              MEMORY[0x1CB78C440](v53, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v59, v45);
          }
          if (qword_1EBC78750 != -1) {
            swift_once();
          }
          long long v63 = 0u;
          long long v64 = 0u;
          uint64_t v62 = 0;
          memset(v61, 0, sizeof(v61));
          swift_bridgeObjectRetain();
          sub_1C9BEC838();
        }
        uint64_t v39 = v37;
        uint64_t v40 = v38;
        swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v61[0] = v35;
        sub_1C9919E00(v39, v40, 0xD000000000000021, 0x80000001C9C24000);
        uint64_t v35 = *(void *)&v61[0];
        swift_bridgeObjectRelease();
      }
      sub_1C9668E20(v35);
      uint64_t v42 = v41;
      swift_bridgeObjectRelease();
      return v42;
  }
}

uint64_t sub_1C99B7468(uint64_t a1)
{
  uint64_t v1 = a1 - 10;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
      uint64_t result = 4;
      break;
    case 2:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 105;
      break;
    case 6:
      uint64_t result = 5;
      break;
    case 11:
      uint64_t result = 2;
      break;
    case 14:
      uint64_t result = 3;
      break;
    case 16:
      uint64_t result = 8;
      break;
    case 17:
      uint64_t result = 6;
      break;
    case 20:
      return result;
    case 22:
      uint64_t result = 10;
      break;
    default:
      uint64_t result = 1000;
      break;
  }
  return result;
}

uint64_t ProtoJsonCoding.makeSelectionItemForEncoding(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(a3 + 8))(a1, 0xD00000000000001CLL, 0x80000001C9C24030, a2, a3);
}

uint64_t ProtoJsonCoding.makeIntentForEncoding(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_msgSend(a1, sel_backingStore);
  id v7 = objc_msgSend(a1, sel_typeName);
  uint64_t v8 = sub_1C9BED568();
  uint64_t v10 = v9;

  (*(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(v6, v8, v10, a2, a3);

  return swift_bridgeObjectRelease();
}

void ProtoJsonCoding.makeIntentResponseForEncoding(_:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!a1) {
    goto LABEL_11;
  }
  id v7 = a1;
  id v8 = objc_msgSend(v7, sel__payloadResponseMessageData);
  if (!v8)
  {

LABEL_11:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(unsigned char *)(a4 + 16) = 0;
    return;
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1C9BEA9E8();
  unint64_t v12 = v11;

  id v13 = objc_msgSend(v7, sel__payloadResponseTypeName);
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = sub_1C9BED568();
    uint64_t v17 = v16;

    (*(void (**)(void *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 16))(v20, v10, v12, v15, v17, a2, a3);
    swift_bridgeObjectRelease();
    char v18 = v21;
    if (v21) {
      uint64_t v19 = v20[1];
    }
    else {
      uint64_t v19 = 0;
    }
    *(void *)a4 = v20[0];
    *(void *)(a4 + 8) = v19;
    *(unsigned char *)(a4 + 16) = v18;
    sub_1C99B77CC();
    sub_1C960B0D8(v10, v12);

    sub_1C99B77D8();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C99B77CC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C99B77D8()
{
  return swift_bridgeObjectRelease();
}

uint64_t ProtoJsonCoding.toJsonDictionary(pbObject:typeName:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v12 = MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15);
  uint64_t v17 = (char *)&v34 - v16;
  id v18 = objc_msgSend(a1, sel_data);
  if (!v18)
  {
    *(void *)&v36[0] = 0;
    *((void *)&v36[0] + 1) = 0xE000000000000000;
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    *(void *)&v36[0] = 0xD000000000000028;
    *((void *)&v36[0] + 1) = 0x80000001C9C24240;
    sub_1C9BED6B8();
    unint64_t v24 = *((void *)&v36[0] + 1);
    uint64_t v35 = *(void *)&v36[0];
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C9BECF88();
    uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
    uint64_t v27 = *(void *)(v25 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v17, v26, v25);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v25);
    sub_1C96C26E8((uint64_t)v17, (uint64_t)v14);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v25) == 1)
    {
      sub_1C95FE7C0((uint64_t)v14, &qword_1EBC7A230);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      int v28 = sub_1C9BECF78();
      os_log_type_t v29 = sub_1C9BEDC88();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        *(void *)&v36[0] = v34;
        *(_DWORD *)uint64_t v30 = 136315650;
        uint64_t v31 = sub_1C9BEE1B8();
        *(void *)&long long v38 = sub_1C95FF228(v31, v32, (uint64_t *)v36);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        *(_WORD *)(v30 + 12) = 2048;
        *(void *)&long long v38 = 62;
        sub_1C9BEDF68();
        *(_WORD *)(v30 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&long long v38 = sub_1C95FF228(v35, v24, (uint64_t *)v36);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C95F9000, v28, v29, "FatalError at %s:%lu - %s", (uint8_t *)v30, 0x20u);
        uint64_t v33 = v34;
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v33, -1, -1);
        MEMORY[0x1CB78C440](v30, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v25);
    }
    if (qword_1EBC78750 != -1) {
      swift_once();
    }
    long long v38 = 0u;
    long long v39 = 0u;
    uint64_t v37 = 0;
    memset(v36, 0, sizeof(v36));
    swift_bridgeObjectRetain();
    sub_1C9BEC838();
  }
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C9BEA9E8();
  unint64_t v22 = v21;

  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(v20, v22, a2, a3, a4, a5);

  return sub_1C960B0D8(v20, v22);
}

ValueMetadata *type metadata accessor for ProtoJsonEncodingError()
{
  return &type metadata for ProtoJsonEncodingError;
}

uint64_t dispatch thunk of ProtoJsonCoding.toJsonDictionary(pbObject:typeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of ProtoJsonCoding.toJsonDictionary(data:typeName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

void ReactiveFlowPlan.pushIfNil<A>(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v4);
  v15[0] = a1;
  v15[1] = a2;
  uint64_t v14 = type metadata accessor for OptionalFlowMappingModifier();
  swift_getWitnessTable();
  sub_1C98E0184((uint64_t)v12, (uint64_t)v15, a3, v14, a4);
  sub_1C9BEC838();
}

uint64_t type metadata accessor for OptionalFlowMappingModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99B7EA4()
{
  type metadata accessor for OptionalFlowMappingModifier();
  swift_getWitnessTable();
  type metadata accessor for ModifiedPlan();

  return swift_getWitnessTable();
}

uint64_t sub_1C99B7F30()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C99B7F7C()
{
  OUTLINED_FUNCTION_3_73();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v0, v1);
  (*(void (**)(char *))(v3 + 16))((char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C99B8040();
  sub_1C9BEC838();
}

uint64_t sub_1C99B8040()
{
  OUTLINED_FUNCTION_3_73();
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 32))(v2);
  uint64_t result = type metadata accessor for OptionalFlowMappingPlan();
  uint64_t v5 = (void *)(v2 + *(int *)(result + 44));
  *uint64_t v5 = v1;
  v5[1] = v0;
  return result;
}

void sub_1C99B80C0()
{
}

uint64_t type metadata accessor for OptionalFlowMappingPlan()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99B80EC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C99B8188(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 80) & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    *a1 = *a2;
  }
  else
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    id v8 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v9 = v8[1];
    uint64_t v10 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v8;
    v10[1] = v9;
  }
  sub_1C9BEC838();
}

uint64_t sub_1C99B8280(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

void sub_1C99B82F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  id v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *id v7 = *v8;
  v7[1] = v9;
  sub_1C9BEC838();
}

void sub_1C99B8370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  id v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  id v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *id v7 = *v8;
  v7[1] = v9;
  sub_1C9BEC838();
}

uint64_t sub_1C99B83FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C99B8478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C99B84FC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C99B8638);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C99B864C(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C99B881CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_1C99B8844()
{
  type metadata accessor for OptionalFlowMappingPlan();

  return swift_getWitnessTable();
}

uint64_t sub_1C99B8890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v52 = type metadata accessor for OptionalFlowMappingPlan();
  OUTLINED_FUNCTION_0();
  uint64_t v9 = v8;
  uint64_t v51 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v47 = a3;
  sub_1C9BEDEE8();
  type metadata accessor for _FlowPlanEvent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v49 = sub_1C9BED178();
  type metadata accessor for _FlowPlanEvent();
  uint64_t v15 = sub_1C9BED178();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v41 = v15;
  uint64_t v16 = sub_1C9BED128();
  OUTLINED_FUNCTION_0();
  uint64_t v50 = v17;
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v45 = (char *)&v39 - v20;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v43 = v21;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v53 = v15;
  uint64_t v54 = v16;
  uint64_t v55 = v21;
  uint64_t v56 = v42;
  uint64_t v44 = sub_1C9BED108();
  OUTLINED_FUNCTION_0();
  uint64_t v46 = v22;
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v26 = (char *)&v39 - v25;
  uint64_t v27 = a4;
  uint64_t v28 = a2;
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(a1, a2, a4);
  uint64_t v53 = v40;
  uint64_t v29 = v9;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v31 = v52;
  v30(v14, a1, v52);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  uint64_t v34 = v47;
  *((void *)v33 + 2) = v28;
  *((void *)v33 + 3) = v34;
  *((void *)v33 + 4) = v27;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v33[v32], v14, v31);
  uint64_t v35 = v45;
  sub_1C9BED2C8();
  swift_release();
  MEMORY[0x1CB78A430](v16, v42, v43);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v16);
  uint64_t v36 = v44;
  swift_getWitnessTable();
  uint64_t v37 = sub_1C9BED288();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v36);
  return v37;
}

uint64_t sub_1C99B8C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v119 = a6;
  uint64_t v120 = a1;
  uint64_t v116 = a3;
  uint64_t v117 = a5;
  uint64_t v7 = type metadata accessor for OptionalFlowMappingPlan();
  uint64_t v114 = *(void *)(v7 - 8);
  uint64_t v115 = v7;
  uint64_t v111 = *(void *)(v114 + 64);
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v113 = (char *)&v88 - v9;
  uint64_t v10 = sub_1C9BEDEE8();
  uint64_t v11 = type metadata accessor for _FlowPlanEvent();
  uint64_t v12 = sub_1C9BED238();
  uint64_t v106 = *(void *)(v12 - 8);
  uint64_t v107 = v12;
  MEMORY[0x1F4188790](v12, v13);
  uint64_t v105 = (char *)&v88 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v16 = sub_1C9BEE778();
  uint64_t v109 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v17);
  uint64_t v108 = (char *)&v88 - v18;
  uint64_t v19 = type metadata accessor for _FlowPlanEvent();
  uint64_t v20 = sub_1C9BEE778();
  uint64_t v118 = v15;
  uint64_t v21 = sub_1C9BED1B8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v121 = v20;
  uint64_t v122 = v21;
  uint64_t v97 = WitnessTable;
  uint64_t v123 = WitnessTable;
  uint64_t v124 = v23;
  uint64_t v24 = sub_1C9BED148();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v110 = v16;
  uint64_t v104 = v25;
  uint64_t v26 = sub_1C9BED128();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v121 = v24;
  uint64_t v122 = v26;
  uint64_t v123 = v27;
  uint64_t v124 = v28;
  uint64_t v103 = sub_1C9BED108();
  uint64_t v102 = *(void *)(v103 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v103, v29);
  uint64_t v101 = (char *)&v88 - v31;
  MEMORY[0x1F4188790](v30, v32);
  unsigned int v93 = (char *)&v88 - v33;
  uint64_t v98 = v19;
  uint64_t v96 = sub_1C9BED238();
  uint64_t v95 = *(void *)(v96 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v96, v34);
  unint64_t v91 = (char *)&v88 - v36;
  uint64_t v99 = v20;
  uint64_t v94 = *(void *)(v20 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v35, v37);
  unint64_t v90 = (char *)&v88 - v39;
  uint64_t v92 = *(void *)(a4 - 8);
  uint64_t v41 = MEMORY[0x1F4188790](v38, v40);
  uint64_t v89 = (char *)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v45 = MEMORY[0x1F4188790](v41, v44);
  uint64_t v47 = (char *)&v88 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x1F4188790](v45, v48);
  uint64_t v51 = (char *)&v88 - v50;
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v54 = MEMORY[0x1F4188790](v49, v53);
  uint64_t v56 = (char *)&v88 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v54, v57);
  uint64_t v59 = (char *)&v88 - v58;
  uint64_t v100 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v100(v51, v120, v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v51, v11);
LABEL_5:
    if (qword_1EA5881B0 != -1) {
      swift_once();
    }
    uint64_t v62 = sub_1C9BECF88();
    __swift_project_value_buffer(v62, (uint64_t)qword_1EA5C2910);
    long long v63 = sub_1C9BECF78();
    os_log_type_t v64 = sub_1C9BEDC78();
    uint64_t v65 = a4;
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v66 = 0;
      _os_log_impl(&dword_1C95F9000, v63, v64, "#OptionalFlowMappingPlan: upstream value is nil, interrupting for a resolution", v66, 2u);
      MEMORY[0x1CB78C440](v66, -1, -1);
    }

    v100(v47, v120, v11);
    uint64_t v67 = v105;
    sub_1C9BED248();
    uint64_t v68 = v107;
    sub_1C9BED228();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v67, v68);
    uint64_t v70 = v113;
    uint64_t v69 = v114;
    uint64_t v71 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v113, v112, v115);
    unint64_t v72 = (*(unsigned __int8 *)(v69 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    os_log_type_t v73 = (char *)swift_allocObject();
    *((void *)v73 + 2) = v116;
    *((void *)v73 + 3) = v65;
    *((void *)v73 + 4) = v117;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v73[v72], v70, v71);
    sub_1C98AB018((uint64_t)sub_1C99B9A58, (uint64_t)v73, v110, v10, v65, v104);
  }
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v59, v51, v10);
  (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v56, v59, v10);
  uint64_t v60 = v10;
  if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, a4) == 1)
  {
    uint64_t v61 = *(void (**)(char *, uint64_t))(v52 + 8);
    v61(v59, v10);
    v61(v56, v10);
    goto LABEL_5;
  }
  uint64_t v74 = v92;
  uint64_t v75 = v89;
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v89, v56, a4);
  if (qword_1EA5881B0 != -1) {
    swift_once();
  }
  uint64_t v76 = sub_1C9BECF88();
  __swift_project_value_buffer(v76, (uint64_t)qword_1EA5C2910);
  uint64_t v77 = sub_1C9BECF78();
  os_log_type_t v78 = sub_1C9BEDC78();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = v60;
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v80 = 0;
    _os_log_impl(&dword_1C95F9000, v77, v78, "#OptionalFlowMappingPlan: upstream value not nil, sending completed message", v80, 2u);
    unint64_t v81 = v80;
    uint64_t v60 = v79;
    MEMORY[0x1CB78C440](v81, -1, -1);
  }

  (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v93, v75, a4);
  swift_storeEnumTagMultiPayload();
  uint64_t v82 = v91;
  sub_1C9BED248();
  unsigned int v83 = v90;
  uint64_t v84 = v96;
  sub_1C9BED228();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v82, v84);
  uint64_t v85 = v99;
  uint64_t v86 = sub_1C9BED288();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v83, v85);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v75, a4);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v59, v60);
  *uint64_t v119 = v86;
  return result;
}

uint64_t sub_1C99B9818(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for OptionalFlowMappingPlan();
  return (*(uint64_t (**)(void))(a2 + *(int *)(v3 + 44)))();
}

uint64_t sub_1C99B9870(uint64_t a1, uint64_t *a2)
{
  return sub_1C99B8890(a1, a2[2], a2[3], a2[4]);
}

unint64_t sub_1C99B9880()
{
  swift_getWitnessTable();

  return ReactiveFlowPlan.description.getter();
}

uint64_t sub_1C99B98D4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C99B9914()
{
  OUTLINED_FUNCTION_1_70();
  uint64_t v0 = OUTLINED_FUNCTION_2_72();

  return sub_1C99B8C40(v0, v1, v2, v3, v4, v5);
}

uint64_t objectdestroyTm_16()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OptionalFlowMappingPlan() - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + ((v2 + 40) & ~v2), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C99B9A58()
{
  OUTLINED_FUNCTION_1_70();
  uint64_t v0 = OUTLINED_FUNCTION_2_72();

  return sub_1C99B9818(v0, v1);
}

uint64_t OUTLINED_FUNCTION_1_70()
{
  return type metadata accessor for OptionalFlowMappingPlan() - 8;
}

uint64_t OUTLINED_FUNCTION_2_72()
{
  return v0;
}

void ReactiveFlowPlan.push<A>(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, v4);
  v15[0] = a1;
  v15[1] = a2;
  uint64_t v14 = type metadata accessor for FlowMappingModifier();
  swift_getWitnessTable();
  sub_1C98E0184((uint64_t)v12, (uint64_t)v15, a3, v14, a4);
  sub_1C9BEC838();
}

void ReactiveFlowPlan.push<A>(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_1();
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v6, v16);
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = a3;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = a1;
  v17[6] = a2;
  v19[0] = sub_1C99B9E94;
  v19[1] = v17;
  uint64_t v18 = type metadata accessor for FlowMappingModifier();
  swift_getWitnessTable();
  sub_1C98E0184(v6, (uint64_t)v19, a3, v18, a6);
  sub_1C9BEC838();
}

uint64_t sub_1C99B9D6C@<X0>(uint64_t a1@<X0>, void (*a2)(long long *__return_ptr, uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ResultUpcastingFlow();
  a2(v9, a1);
  uint64_t v7 = sub_1C99B9E08(v9);
  a3[3] = v6;
  uint64_t result = swift_getWitnessTable();
  a3[4] = result;
  *a3 = v7;
  return result;
}

uint64_t sub_1C99B9E08(long long *a1)
{
  return sub_1C99BA4F0(a1);
}

uint64_t type metadata accessor for FlowMappingModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99B9E5C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C99B9E94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C99B9D6C(a1, *(void (**)(long long *__return_ptr, uint64_t))(v2 + 40), a2);
}

uint64_t sub_1C99B9EA4()
{
  uint64_t result = type metadata accessor for ResultUpcastingFlow.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1C99B9F38()
{
  OUTLINED_FUNCTION_3_73();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_1();
  (*(void (**)(uint64_t))(v3 + 16))(v0);
  sub_1C99B9FEC();
  sub_1C9BEC838();
}

uint64_t sub_1C99B9FEC()
{
  OUTLINED_FUNCTION_3_73();
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 32))(v2);
  uint64_t result = type metadata accessor for FlowMappingPlan();
  uint64_t v5 = (void *)(v2 + *(int *)(result + 44));
  *uint64_t v5 = v1;
  v5[1] = v0;
  return result;
}

void sub_1C99BA06C()
{
}

void sub_1C99BA080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _FlowPlanEvent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_3_74();
  sub_1C9BEE778();
  OUTLINED_FUNCTION_3_74();
  sub_1C9BED1B8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C9BED148();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for _FlowPlanEvent();
  uint64_t v7 = sub_1C9BED178();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C9BED128();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C9BED108();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8, v9);
  swift_getWitnessTable();
  sub_1C9BED0E8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(a1, a2, a4);
  uint64_t v12 = type metadata accessor for FlowMappingPlan();
  sub_1C98AB018(*(void *)(a1 + *(int *)(v12 + 44)), *(void *)(a1 + *(int *)(v12 + 44) + 8), v7, AssociatedTypeWitness, a3, WitnessTable);
}

void sub_1C99BA48C(uint64_t a1, uint64_t *a2)
{
}

unint64_t sub_1C99BA49C()
{
  swift_getWitnessTable();

  return ReactiveFlowPlan.description.getter();
}

uint64_t sub_1C99BA4F0(long long *a1)
{
  sub_1C95FD5D8(a1, v1 + *(void *)(*(void *)v1 + 88));
  type metadata accessor for ResultUpcastingFlow.State();
  swift_storeEnumTagMultiPayload();
  return v1;
}

uint64_t sub_1C99BA568@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(v3 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  uint64_t v5 = sub_1C9BEE788();
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v29 = type metadata accessor for Conclude();
  uint64_t v28 = *(void *)(v29 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v29, v9);
  uint64_t v27 = (uint64_t)&v26 - v11;
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = type metadata accessor for ResultUpcastingFlow.State();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v18);
  uint64_t v20 = (long long *)((char *)&v26 - v19);
  uint64_t v21 = (char *)v2 + *(void *)(v3 + 88);
  swift_beginAccess();
  (*(void (**)(long long *, char *, uint64_t))(v17 + 16))(v20, v21, v16);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1C95FD5D8(v20, (uint64_t)&v34);
    __swift_project_boxed_opaque_existential_1(&v34, v35);
    uint64_t v32 = type metadata accessor for LifeCycleModifierFlow();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_1C9BEC838();
  }
  (*(void (**)(char *, long long *, uint64_t))(v12 + 32))(v15, v20, v4);
  *(void *)&long long v34 = v2;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v15, v4);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ResultUpcastingFlow();
  swift_getWitnessTable();
  uint64_t v22 = v27;
  ActingFlow.conclude(with:)((uint64_t)v8, v27);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v5);
  uint64_t v23 = v29;
  uint64_t v35 = v29;
  uint64_t v36 = &protocol witness table for Conclude<A>;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v28 + 32))(boxed_opaque_existential_0, v22, v23);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v4);
  return sub_1C95FD5D8(&v34, v31);
}

uint64_t sub_1C99BAAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)a2 + 80);
  uint64_t v5 = type metadata accessor for ResultUpcastingFlow.State();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5, v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8, v11);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))((char *)&v16 - v12, a1, v4);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v13, v5);
  uint64_t v14 = a2 + *(void *)(*(void *)a2 + 88);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v14, v10, v5);
  return swift_endAccess();
}

uint64_t sub_1C99BAC54()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = type metadata accessor for ResultUpcastingFlow.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1C99BACDC()
{
  sub_1C99BAC54();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResultUpcastingFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ResultUpcastingFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99BAD60()
{
  type metadata accessor for FlowMappingModifier();
  swift_getWitnessTable();
  type metadata accessor for ModifiedPlan();

  return swift_getWitnessTable();
}

uint64_t sub_1C99BADEC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C99BAE84(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x28) {
    unint64_t v2 = 40;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

uint64_t sub_1C99BAF80(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x28uLL) {
    uint64_t v4 = 40;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t))(v11 - 8))(a1);
    char v10 = 0;
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C99BB0E8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x28uLL) {
      uint64_t v7 = 40;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      uint64_t v19 = *((void *)a2 + 3);
      *((void *)a1 + 3) = v19;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v19 - 8))(a1, a2);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C99BB338(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x28uLL) {
    uint64_t v4 = 40;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    long long v11 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
  }
  *(unsigned char *)(a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C99BB478(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x28uLL) {
      uint64_t v7 = 40;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      long long v19 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v19;
      *((void *)a1 + 4) = *((void *)a2 + 4);
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C99BB698(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 40;
  if (*(void *)(v3 + 64) > 0x28uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C99BB7CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x28) {
    unint64_t v5 = 40;
  }
  size_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    int v8 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v9 = a2 - 255;
    if (v6 < 4)
    {
      int v10 = (v9 >> v7) + 1;
      if (v5 != -1)
      {
        int v12 = v9 & ~(-1 << v7);
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v6] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v10;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C99BB990);
      case 4:
        *(_DWORD *)&a1[v6] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C99BB9B8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 40;
  if (*(void *)(v2 + 64) > 0x28uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t sub_1C99BBA70@<X0>(uint64_t a1@<X8>)
{
  return sub_1C99BA568(a1);
}

uint64_t sub_1C99BBA94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for FlowMappingPlan()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99BBAF8(uint64_t a1)
{
  return sub_1C99BAAAC(a1, v1);
}

uint64_t sub_1C99BBB00(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C99BBC3CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C99BBC50(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C99BBE20);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_1C99BBE48()
{
  type metadata accessor for FlowMappingPlan();

  return swift_getWitnessTable();
}

uint64_t sub_1C99BBE94(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  return 255;
}

void ReactiveFlowPlan.pushOnError(flowProducer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_20_0();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v4, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  v15[0] = sub_1C99BC0DC;
  v15[1] = v13;
  uint64_t v14 = type metadata accessor for ErrorReportingFlowModifier();
  swift_getWitnessTable();
  sub_1C98E0184(v4, (uint64_t)v15, a3, v14, a4);
  sub_1C9BEC838();
}

uint64_t sub_1C99BC000@<X0>(void (*a1)(void *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(v8);
  long long v7 = v9;
  uint64_t v3 = v9;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v8, v9);
  *(_OWORD *)(a2 + 24) = v7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_0, v4, v3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t sub_1C99BC0A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C99BC0DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C99BC000(*(void (**)(void *__return_ptr))(v1 + 16), a1);
}

uint64_t type metadata accessor for ErrorReportingFlowModifier()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99BC0FC()
{
  type metadata accessor for ErrorReportingFlowModifier();
  swift_getWitnessTable();
  type metadata accessor for ModifiedPlan();

  return swift_getWitnessTable();
}

uint64_t sub_1C99BC184()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1C99BC1C8()
{
  OUTLINED_FUNCTION_2_73();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_20_0();
  (*(void (**)(uint64_t))(v3 + 16))(v0);
  sub_1C99BC270();
  sub_1C9BEC838();
}

uint64_t sub_1C99BC270()
{
  OUTLINED_FUNCTION_2_73();
  (*(void (**)(uint64_t))(*(void *)(v3 - 8) + 32))(v2);
  uint64_t result = type metadata accessor for ErrorReportingFlowPlan();
  uint64_t v5 = (void *)(v2 + *(int *)(result + 36));
  *uint64_t v5 = v1;
  v5[1] = v0;
  return result;
}

void sub_1C99BC2EC()
{
}

uint64_t type metadata accessor for ErrorReportingFlowPlan()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C99BC314()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C99BC3B0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C99BC4ECLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C99BC500(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C99BC6D0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v17 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v18 = a2 ^ 0x80000000;
            v17[1] = 0;
          }
          else
          {
            uint64_t v18 = (a2 - 1);
          }
          void *v17 = v18;
        }
        else
        {
          __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
        }
      }
      return;
  }
}

uint64_t sub_1C99BC6F8()
{
  type metadata accessor for ErrorReportingFlowPlan();

  return swift_getWitnessTable();
}

void sub_1C99BC740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for _FlowPlanEvent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  OUTLINED_FUNCTION_1_71();
  sub_1C9BEE778();
  OUTLINED_FUNCTION_1_71();
  sub_1C9BED178();
  OUTLINED_FUNCTION_1_71();
  sub_1C9BED1B8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C9BED148();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C9BED138();
  swift_getWitnessTable();
  sub_1C9BED128();
  swift_getWitnessTable();
  sub_1C9BED108();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v6, v7);
  swift_getWitnessTable();
  sub_1C9BED0E8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(a1, a2, a3);
  unint64_t v10 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ErrorReportingFlowPlan() + 36));
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = v11;
  sub_1C9BEC838();
}

void sub_1C99BCB74(uint64_t a1, uint64_t a2)
{
}

unint64_t sub_1C99BCB80()
{
  swift_getWitnessTable();

  return ReactiveFlowPlan.description.getter();
}

uint64_t sub_1C99BCBD4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C99BCC10(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t OUTLINED_FUNCTION_1_71()
{
  return 255;
}

uint64_t RawDucTemplatingParameter.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9608C88(v1 + 16, a1);
}

uint64_t RawDucTemplatingParameter.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RawDucTemplatingParameter.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  OUTLINED_FUNCTION_0_54();
  *(void *)(v3 + 48) = v4;
  *(void *)(v3 + 56) = v5;
  sub_1C978294C(a1, v3 + 16);
  return v2;
}

uint64_t RawDucTemplatingParameter.init(_:)()
{
  OUTLINED_FUNCTION_0_54();
  *(void *)(v0 + 48) = v1;
  *(void *)(v0 + 56) = v2;
  sub_1C978294C(v3, v0 + 16);
  return v0;
}

uint64_t RawDucTemplatingParameter.deinit()
{
  sub_1C9782A58(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RawDucTemplatingParameter.__deallocating_deinit()
{
  sub_1C9782A58(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C99BCD88()
{
  return RawDucTemplatingParameter.conceptType.getter();
}

uint64_t type metadata accessor for RawDucTemplatingParameter()
{
  return self;
}

uint64_t method lookup function for RawDucTemplatingParameter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RawDucTemplatingParameter);
}

uint64_t dispatch thunk of RawDucTemplatingParameter.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RawDucTemplatingParameter.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t sub_1C99BCE38()
{
  OUTLINED_FUNCTION_24();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_1C9BECAA8();
  v0[4] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v0[5] = v4;
  v0[6] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C99BCEC4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = (void *)v0[6];
  (*(void (**)(void *, void, void))(v0[5] + 16))(v1, v0[3], v0[4]);
  uint64_t v2 = OUTLINED_FUNCTION_33_1();
  int v4 = v3(v2);
  if (v4 == *MEMORY[0x1E4F9F9F0])
  {
    uint64_t v5 = OUTLINED_FUNCTION_58_16();
    v6(v5);
    v0[11] = *v1;
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    v0[12] = v7;
    *uint64_t v7 = v8;
    v7[1] = sub_1C99BD344;
    OUTLINED_FUNCTION_60_1();
    return sub_1C99BE78C();
  }
  else if (v4 == *MEMORY[0x1E4F9F9F8])
  {
    uint64_t v10 = OUTLINED_FUNCTION_58_16();
    v11(v10);
    swift_release();
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    v0[7] = v12;
    *uint64_t v12 = v13;
    v12[1] = sub_1C99BD12C;
    OUTLINED_FUNCTION_60_1();
    return sub_1C99BE344();
  }
  else if (v4 == *MEMORY[0x1E4F9F9E8])
  {
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    v0[9] = v14;
    *uint64_t v14 = v15;
    v14[1] = sub_1C99BD264;
    OUTLINED_FUNCTION_60_1();
    OUTLINED_FUNCTION_15();
    return sub_1C99BD754();
  }
  else
  {
    int v16 = (void *)swift_task_alloc();
    v0[14] = v16;
    *int v16 = v0;
    v16[1] = sub_1C99BD484;
    OUTLINED_FUNCTION_60_1();
    return sub_1C97D6734();
  }
}

uint64_t sub_1C99BD12C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 64) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99BD20C()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t sub_1C99BD264()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99BD344()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99BD424()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t sub_1C99BD484()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99BD564()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_22_1();
  v0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C99BD5CC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_22_1();
  v0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99BD638()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99BD694()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99BD6F0()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99BD754()
{
  OUTLINED_FUNCTION_24();
  v0[121] = v1;
  v0[120] = v2;
  v0[119] = v3;
  uint64_t v4 = sub_1C9BEAB08();
  v0[122] = v4;
  OUTLINED_FUNCTION_5_0(v4);
  v0[123] = v5;
  v0[124] = OUTLINED_FUNCTION_16();
  uint64_t v6 = type metadata accessor for OutputGenerationManifest();
  v0[125] = v6;
  OUTLINED_FUNCTION_22(v6);
  v0[126] = OUTLINED_FUNCTION_67_0();
  v0[127] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  OUTLINED_FUNCTION_22(v7);
  v0[128] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void sub_1C99BD83C()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  if (qword_1EA588138 != -1) {
    swift_once();
  }
  sub_1C99C544C((uint64_t)&qword_1EA5C2870, (uint64_t)(v0 + 107));
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)(v0 + 97));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 97));
  uint64_t v1 = qword_1EBC74538;
  v0[90] = type metadata accessor for RefreshableDeviceState();
  v0[91] = &protocol witness table for RefreshableDeviceState;
  v0[87] = v1;
  sub_1C9BEC838();
}

uint64_t sub_1C99BD9C8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v7 = v6 + 696;
  uint64_t v8 = v6 + 856;
  *(void *)(v6 + 1048) = v9;
  *(void *)(v6 + 1056) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1C9673A74(v7, &qword_1EBC789E0);
  sub_1C99C54A8(v8);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

void sub_1C99BDAF4()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = v0[121];
  swift_asyncLet_begin();
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA588D80);
    uint64_t v2 = sub_1C9BEA5D8();
    OUTLINED_FUNCTION_5_0(v2);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C9BEF570;
    swift_bridgeObjectRetain();
    sub_1C9BEA5C8();
    swift_bridgeObjectRelease();
  }
  sub_1C96044C4(0, (unint64_t *)&unk_1EA594838);
  static SAUIAppPunchOut.makeAppStorePunchOutURL(queryItems:)();
  swift_bridgeObjectRelease();
  if (qword_1EA588130 != -1) {
    swift_once();
  }
  v0[133] = qword_1EA5C2868;
  uint64_t v3 = type metadata accessor for SiriKitSnippets(0);
  v0[134] = v3;
  v0[115] = v3;
  v0[116] = sub_1C99C2C44();
  v0[135] = (uint64_t)__swift_allocate_boxed_opaque_existential_0(v0 + 112);
  OUTLINED_FUNCTION_244();
  JUMPOUT(0x1C9BEEDE8);
}

uint64_t sub_1C99BDCE0()
{
  *(void *)(v1 + 1088) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99BE220);
  }
  else {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99BDD0C);
  }
}

void sub_1C99BDD0C()
{
  uint64_t v2 = (void *)v0[135];
  uint64_t v3 = (void *)v0[131];
  uint64_t v4 = v0[128];
  uint64_t v5 = v0[117];
  uint64_t v6 = v0[118];
  uint64_t v7 = type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0);
  sub_1C99C54FC(v4, (uint64_t)v2 + *(int *)(v7 + 20), qword_1EBC7A190);
  *uint64_t v2 = v5;
  v2[1] = v6;
  OUTLINED_FUNCTION_33_1();
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_83_8(v8, (__n128)xmmword_1C9BF02F0);
  v0[137] = v26;
  uint64_t v9 = qword_1EBC79618;
  swift_bridgeObjectRetain();
  id v10 = v3;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[126];
  uint64_t v12 = v0[125];
  uint64_t v13 = OUTLINED_FUNCTION_19_44();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v13);
  *(void *)(v11 + *(int *)(v12 + 48)) = 0;
  OUTLINED_FUNCTION_7_55();
  OUTLINED_FUNCTION_72_18(v14);
  sub_1C9BEC958();
  OUTLINED_FUNCTION_0_33();
  uint64_t v15 = OUTLINED_FUNCTION_48_22();
  v16(v15);
  uint64_t v17 = OUTLINED_FUNCTION_70_15();
  OUTLINED_FUNCTION_33_24(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  sub_1C965C4EC();
}

uint64_t sub_1C99BDF64()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v2 = v1;
  uint64_t v3 = v1 + 896;
  OUTLINED_FUNCTION_60_11();
  uint64_t v5 = *(void *)(v4 + 1016);
  uint64_t v6 = *v0;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_1C99C5230(v5, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C99BE088()
{
  OUTLINED_FUNCTION_33();
  sub_1C9673A74(*(void *)(v0 + 1024), qword_1EBC7A190);
  uint64_t v1 = OUTLINED_FUNCTION_54_19();
  return MEMORY[0x1F41881D0](v1);
}

uint64_t sub_1C99BE104()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99BE118);
}

uint64_t sub_1C99BE118()
{
  OUTLINED_FUNCTION_33();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C99BE1A8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_89_7();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C99BE220()
{
  OUTLINED_FUNCTION_33();
  sub_1C9673A74(*(void *)(v0 + 1024), qword_1EBC7A190);
  __swift_deallocate_boxed_opaque_existential_1(v0 + 896);
  return MEMORY[0x1F41881D0](v0 + 16);
}

uint64_t sub_1C99BE2B0()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99BE2C4);
}

uint64_t sub_1C99BE2C4()
{
  OUTLINED_FUNCTION_33();

  OUTLINED_FUNCTION_89_7();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C99BE344()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = OUTLINED_FUNCTION_88_7(v1);
  v0[3] = v2;
  OUTLINED_FUNCTION_5_0(v2);
  v0[4] = v3;
  uint64_t v4 = OUTLINED_FUNCTION_16();
  uint64_t v5 = OUTLINED_FUNCTION_87_11(v4);
  v0[6] = v5;
  OUTLINED_FUNCTION_22(v5);
  uint64_t v6 = OUTLINED_FUNCTION_67_0();
  v0[8] = OUTLINED_FUNCTION_90_7(v6);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = (void *)OUTLINED_FUNCTION_139_0(v7);
  *uint64_t v8 = v9;
  v8[1] = sub_1C99BE414;
  return sub_1C9A71FF0();
}

uint64_t sub_1C99BE414()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  OUTLINED_FUNCTION_86(v5);
  if (v0)
  {
    OUTLINED_FUNCTION_85_8();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v6();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
}

#error "1C99BE5C4: call analysis failed (funcsize=89)"

uint64_t sub_1C99BE6AC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C99BE78C()
{
  OUTLINED_FUNCTION_24();
  v0[118] = v1;
  v0[117] = v2;
  uint64_t v3 = sub_1C9BEAB08();
  v0[119] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v0[120] = v4;
  v0[121] = OUTLINED_FUNCTION_16();
  uint64_t v5 = type metadata accessor for OutputGenerationManifest();
  v0[122] = v5;
  OUTLINED_FUNCTION_22(v5);
  v0[123] = OUTLINED_FUNCTION_67_0();
  v0[124] = swift_task_alloc();
  uint64_t v6 = sub_1C9BEAB58();
  v0[125] = v6;
  OUTLINED_FUNCTION_5_0(v6);
  v0[126] = v7;
  v0[127] = OUTLINED_FUNCTION_16();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v8);
  v0[128] = v9;
  v0[129] = *(void *)(v10 + 64);
  v0[130] = OUTLINED_FUNCTION_67_0();
  v0[131] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

void sub_1C99BE8C0()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_79_10();
  OUTLINED_FUNCTION_62_16();
}

uint64_t sub_1C99BEB14()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v7 + 1072) = v6;
  *(void *)(v7 + 1080) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void sub_1C99BEC18()
{
  OUTLINED_FUNCTION_103_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = v0[130];
  uint64_t v2 = v0[128];
  sub_1C99C54FC(v0[131], v1, &qword_1EA58DC18);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  v0[136] = v4;
  sub_1C98AF790(v1, v4 + v3);
  sub_1C9BEC838();
}

uint64_t sub_1C99BED78()
{
  *(void *)(v1 + 1120) = v0;
  if (v0) {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99BF294);
  }
  else {
    return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C99BEDA4);
  }
}

void sub_1C99BEDA4()
{
  uint64_t v2 = (void *)v0[139];
  unint64_t v3 = (void *)v0[134];
  uint64_t v4 = v0[111];
  uint64_t v5 = v0[112];
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C9BEC988();
  *uint64_t v2 = v4;
  v2[1] = v5;
  void v2[2] = v6;
  v2[3] = v7;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v8 = (__n128 *)OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_83_8(v8, (__n128)xmmword_1C9BF02F0);
  v0[141] = v26;
  uint64_t v9 = qword_1EBC78230;
  id v10 = v3;
  if (v9 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[123];
  uint64_t v12 = v0[122];
  uint64_t v13 = OUTLINED_FUNCTION_19_44();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v13);
  *(void *)(v11 + *(int *)(v12 + 48)) = 0;
  OUTLINED_FUNCTION_7_55();
  OUTLINED_FUNCTION_72_18(v14);
  sub_1C9BEC958();
  OUTLINED_FUNCTION_0_33();
  uint64_t v15 = OUTLINED_FUNCTION_48_22();
  v16(v15);
  uint64_t v17 = OUTLINED_FUNCTION_70_15();
  OUTLINED_FUNCTION_33_24(v17, v18, v19, v20, v21, v22, v23, v24, v25);
  sub_1C965C4EC();
}