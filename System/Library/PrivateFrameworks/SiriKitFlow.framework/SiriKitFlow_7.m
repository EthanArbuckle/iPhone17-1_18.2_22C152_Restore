uint64_t dispatch thunk of ResponseGenerating.makeResponseOutput(conversationModel:outputGenerationManifest:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72_0();
  v13 = *(void *)(v0 + 96) + **(int **)(v0 + 96);
  v14 = v0 + 96;
  v1 = swift_task_alloc();
  v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  *v2 = v3;
  v2[1] = sub_1C9615888;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ResponseGenerating.makeSuccessOutput(resultModel:conversationModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_142();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_7_51();
  uint64_t v27 = *(void *)(v12 + 104) + **(int **)(v12 + 104);
  uint64_t v28 = v12 + 104;
  uint64_t v13 = swift_task_alloc();
  v14 = (void *)OUTLINED_FUNCTION_17_0(v13);
  void *v14 = v15;
  v14[1] = sub_1C9615888;
  OUTLINED_FUNCTION_19_21();
  OUTLINED_FUNCTION_139();
  return v24(v16, v17, v18, v19, v20, v21, v22, v23, v27, v28, a11, a12);
}

uint64_t dispatch thunk of ResponseGenerating.makeSuccessOutput(resultModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_49_12();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_73_6();
  uint64_t v26 = *(void *)(v12 + 112) + **(int **)(v12 + 112);
  uint64_t v27 = v12 + 112;
  uint64_t v13 = swift_task_alloc();
  v14 = (void *)OUTLINED_FUNCTION_17_0(v13);
  void *v14 = v15;
  v14[1] = sub_1C9615888;
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_36_1();
  return v23(v16, v17, v18, v19, v20, v21, v22, v23, a9, v26, v27, a12);
}

uint64_t dispatch thunk of ResponseGenerating.makeSuccessOutput(conversationModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_49_12();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_73_6();
  uint64_t v26 = *(void *)(v12 + 120) + **(int **)(v12 + 120);
  uint64_t v27 = v12 + 120;
  uint64_t v13 = swift_task_alloc();
  v14 = (void *)OUTLINED_FUNCTION_17_0(v13);
  void *v14 = v15;
  v14[1] = sub_1C9615888;
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_36_1();
  return v23(v16, v17, v18, v19, v20, v21, v22, v23, a9, v26, v27, a12);
}

uint64_t dispatch thunk of ResponseGenerating.makeSuccessOutput(dialog:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_72_0();
  uint64_t v13 = *(void *)(v0 + 128) + **(int **)(v0 + 128);
  uint64_t v14 = v0 + 128;
  uint64_t v1 = swift_task_alloc();
  v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  void *v2 = v3;
  v2[1] = sub_1C9615888;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ResponseGenerating.makeResponseUpdateOutput(viewId:update:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t method lookup function for ResponseFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ResponseFactory);
}

uint64_t dispatch thunk of ResponseFactory.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ResponseFactory.__allocating_init(dialogUsageProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(resultModel:conversationModel:dialog:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_74();
  uint64_t v14 = v0 + 120;
  uint64_t v13 = *(void *)(v0 + 120) + **(int **)(v0 + 120);
  uint64_t v1 = swift_task_alloc();
  v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  void *v2 = v3;
  v2[1] = sub_1C9615888;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_74();
  uint64_t v14 = v0 + 176;
  uint64_t v13 = *(void *)(v0 + 176) + **(int **)(v0 + 176);
  uint64_t v1 = swift_task_alloc();
  v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  void *v2 = v3;
  v2[1] = sub_1C9615888;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(resultModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 128) + **(int **)(v9 + 128);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 184) + **(int **)(v9 + 184);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(conversationModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 136) + **(int **)(v9 + 136);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 192) + **(int **)(v9 + 192);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(dialog:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_17_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_17_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(resultModel:conversationModel:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 152) + **(int **)(v9 + 152);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615010;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(resultModel:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_17_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseOutput(conversationModel:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_17_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ResponseFactory.makeSuccessOutput(resultModel:conversationModel:dialog:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_127();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_74();
  uint64_t v14 = v0 + 208;
  uint64_t v13 = *(void *)(v0 + 208) + **(int **)(v0 + 208);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  void *v2 = v3;
  v2[1] = sub_1C9615888;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_14_0();
  return v10(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
}

uint64_t dispatch thunk of ResponseFactory.makeSuccessOutput(resultModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 216) + **(int **)(v9 + 216);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ResponseFactory.makeSuccessOutput(conversationModel:dialog:outputGenerationManifest:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  OUTLINED_FUNCTION_57();
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_9_63();
  uint64_t v22 = *(void *)(v9 + 224) + **(int **)(v9 + 224);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_68();
  return v18(v13, v14, v15, v16, v17, v18, v19, v20, a9, v22);
}

uint64_t dispatch thunk of ResponseFactory.makeSuccessOutput(dialog:outputGenerationManifest:)()
{
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_17_53();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_52_12();
  OUTLINED_FUNCTION_62_1();
  return v7(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t dispatch thunk of ResponseFactory.makeResponseUpdateOutput(viewId:update:)()
{
  OUTLINED_FUNCTION_74();
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1C9A6FA68(uint64_t a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_76()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_6_71()
{
  return sub_1C9BEE398();
}

uint64_t OUTLINED_FUNCTION_7_64()
{
  return sub_1C9BEE188();
}

uint64_t OUTLINED_FUNCTION_12_62()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_14_62()
{
  return sub_1C9BED6B8();
}

void OUTLINED_FUNCTION_26_41(__n128 a1)
{
  *(__n128 *)(v1 + 72) = a1;
  *(void *)(v1 + 88) = 0;
  *(__n128 *)(v1 + 56) = a1;
}

uint64_t OUTLINED_FUNCTION_32_36()
{
  uint64_t v2 = *(void *)(v0 + 104);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  return sub_1C95FD5F0(v2, v0 + 56);
}

unint64_t OUTLINED_FUNCTION_50_23()
{
  return 0xD00000000000003FLL;
}

uint64_t OUTLINED_FUNCTION_57_25()
{
  return v0 - 112;
}

uint64_t OUTLINED_FUNCTION_58_22()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_61_24()
{
  uint64_t v2 = *(void *)(v0 + 104);
  return sub_1C95FD5F0(v2, v0 + 16);
}

uint64_t OUTLINED_FUNCTION_64_17()
{
  return swift_bridgeObjectRetain_n();
}

BOOL OUTLINED_FUNCTION_65_19(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_1C9A6FCE4()
{
  OUTLINED_FUNCTION_24();
  v1[57] = v2;
  v1[58] = v0;
  v1[55] = v3;
  v1[56] = v4;
  v1[59] = type metadata accessor for OutputGenerationManifest();
  v1[60] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A6FD74()
{
  uint64_t v39 = v0;
  sub_1C95FE60C(*(void *)(v0 + 448) + 40, v0 + 136, &qword_1EA588560);
  if (*(void *)(v0 + 136) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 448);
    sub_1C95FE7C0(v0 + 136, &qword_1EA588560);
    sub_1C95FE60C(v1 + 160, v0 + 312, &qword_1EA588568);
    if (*(void *)(v0 + 320))
    {
      long long v2 = *(_OWORD *)(v0 + 328);
      *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 312);
      *(_OWORD *)(v0 + 272) = v2;
      *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 344);
      *(void *)(v0 + 304) = *(void *)(v0 + 360);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v3 = sub_1C9BECF88();
      __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
      sub_1C9962F8C(v0 + 256, v0 + 368);
      uint64_t v4 = sub_1C9BECF78();
      os_log_type_t v5 = sub_1C9BEDC78();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        v38[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136315138;
        uint64_t v7 = *(void *)(v0 + 368);
        unint64_t v8 = *(void *)(v0 + 376);
        swift_bridgeObjectRetain();
        *(void *)(v0 + 424) = sub_1C95FF228(v7, v8, v38);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C96A89DC(v0 + 368);
        _os_log_impl(&dword_1C95F9000, v4, v5, "Generating a Response Framework Update Output command for viewId: %s", v6, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        sub_1C96A89DC(v0 + 368);
      }

      v31 = *(void **)(v0 + 464);
      uint64_t v32 = v31[5];
      uint64_t v33 = v31[6];
      __swift_project_boxed_opaque_existential_1(v31 + 2, v32);
      uint64_t v34 = *(void *)(v0 + 256);
      uint64_t v35 = *(void *)(v0 + 264);
      v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 136);
      swift_bridgeObjectRetain();
      v36(v34, v35, v0 + 272, v32, v33);
      sub_1C96A89DC(v0 + 256);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 440);
      sub_1C95FE7C0(v0 + 312, &qword_1EA588568);
      *(_OWORD *)uint64_t v30 = 0u;
      *(_OWORD *)(v30 + 16) = 0u;
      *(void *)(v30 + 32) = 0;
    }
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    return v37();
  }
  else
  {
    uint64_t v9 = v0 + 16;
    memcpy((void *)(v0 + 16), (const void *)(v0 + 136), 0x78uLL);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v10 = *(void *)(v0 + 480);
    uint64_t v11 = *(void *)(v0 + 456);
    uint64_t v12 = sub_1C9BECF88();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBC7A520);
    sub_1C965D8AC(v11, v10);
    uint64_t v13 = sub_1C9BECF78();
    os_log_type_t v14 = sub_1C9BEDC78();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void *)(v0 + 480);
    if (v15)
    {
      uint64_t v17 = *(void *)(v0 + 472);
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v19 = (uint64_t *)(v16 + *(int *)(v17 + 64));
      uint64_t v20 = *v19;
      unint64_t v21 = v19[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 432) = sub_1C95FF228(v20, v21, v38);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C965EA78(v16);
      _os_log_impl(&dword_1C95F9000, v13, v14, "Generating a Response Framework Output command with viewId: %s", v18, 0xCu);
      swift_arrayDestroy();
      uint64_t v9 = v0 + 16;
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C965EA78(*(void *)(v0 + 480));
    }

    uint64_t v22 = *(void **)(v0 + 464);
    uint64_t v24 = v22[5];
    uint64_t v23 = v22[6];
    __swift_project_boxed_opaque_existential_1(v22 + 2, v24);
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    *(void *)(v0 + 488) = v25;
    *uint64_t v25 = v26;
    v25[1] = sub_1C9A702AC;
    uint64_t v27 = *(void *)(v0 + 456);
    uint64_t v28 = *(void *)(v0 + 440);
    return sub_1C9A70450(v28, v9, v27, v24, v23);
  }
}

uint64_t sub_1C9A702AC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  *(void *)(v4 + 496) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A7038C()
{
  OUTLINED_FUNCTION_24();
  sub_1C96A8A30(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A703EC()
{
  OUTLINED_FUNCTION_24();
  sub_1C96A8A30(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9A70450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[73] = v5;
  v6[72] = a5;
  v6[71] = a4;
  v6[70] = a3;
  v6[69] = a2;
  v6[68] = a1;
  return MEMORY[0x1F4188298](sub_1C9A70484, 0, 0);
}

void sub_1C9A70484()
{
  uint64_t v1 = *(uint64_t **)(v0 + 552);
  uint64_t v2 = *v1;
  sub_1C95FE60C((uint64_t)(v1 + 1), v0 + 16, &qword_1EA588570);
  sub_1C95FE60C((uint64_t)(v1 + 6), v0 + 56, &qword_1EA588570);
  *(void *)(v0 + 96) = v2;
  if (*(void *)(v0 + 40))
  {
    sub_1C95FE60C(v0 + 16, v0 + 224, &qword_1EA588570);
    if (*(void *)(v0 + 80))
    {
      sub_1C95FE60C(v0 + 56, v0 + 264, &qword_1EA588570);
      if (v2)
      {
        OUTLINED_FUNCTION_15_51();
        swift_bridgeObjectRetain();
        swift_task_alloc();
        OUTLINED_FUNCTION_90_0();
        *(void *)(v0 + 608) = v3;
        *uint64_t v3 = v4;
        v3[1] = sub_1C9A70E34;
        OUTLINED_FUNCTION_1_29();
        __asm { BRAA            X8, X16 }
      }
      OUTLINED_FUNCTION_15_51();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 616) = v15;
      *BOOL v15 = v16;
      v15[1] = sub_1C9A70F7C;
      OUTLINED_FUNCTION_12_63();
      OUTLINED_FUNCTION_1_29();
      __asm { BRAA            X7, X16 }
    }
    if (v2)
    {
      sub_1C95FD5D8((long long *)(v0 + 224), v0 + 464);
      swift_bridgeObjectRetain();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 592) = v11;
      *uint64_t v11 = v12;
      v11[1] = sub_1C9A70BBC;
      OUTLINED_FUNCTION_1_29();
      __asm { BRAA            X7, X16 }
    }
    sub_1C95FD5D8((long long *)(v0 + 224), v0 + 504);
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    *(void *)(v0 + 600) = v27;
    *uint64_t v27 = v28;
    v27[1] = sub_1C9A70CF8;
    OUTLINED_FUNCTION_5_77();
    OUTLINED_FUNCTION_1_29();
    __asm { BRAA            X6, X16 }
  }
  if (*(void *)(v0 + 80))
  {
    sub_1C95FE60C(v0 + 56, v0 + 104, &qword_1EA588570);
    if (v2)
    {
      sub_1C95FD5D8((long long *)(v0 + 104), v0 + 144);
      swift_bridgeObjectRetain();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 624) = v7;
      *uint64_t v7 = v8;
      v7[1] = sub_1C9A710C4;
      OUTLINED_FUNCTION_12_63();
      OUTLINED_FUNCTION_1_29();
      __asm { BRAA            X7, X16 }
    }
    sub_1C95FD5D8((long long *)(v0 + 104), v0 + 184);
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    *(void *)(v0 + 632) = v23;
    *uint64_t v23 = v24;
    v23[1] = sub_1C9A71200;
    OUTLINED_FUNCTION_5_77();
    OUTLINED_FUNCTION_1_29();
    __asm { BRAA            X6, X16 }
  }
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_task_alloc();
    OUTLINED_FUNCTION_90_0();
    *(void *)(v0 + 640) = v19;
    *uint64_t v19 = v20;
    v19[1] = sub_1C9A7133C;
    OUTLINED_FUNCTION_5_77();
    OUTLINED_FUNCTION_1_29();
    __asm { BRAA            X6, X16 }
  }
  sub_1C9A71574();
  swift_allocError();
  swift_willThrow();
  sub_1C95FE7C0(v0 + 16, &qword_1EA597CE0);
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_1_29();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C9A70BBC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A70C84()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_7_65(v0 + 464);
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A70CF8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A70DC0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_7_65(v0 + 504);
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A70E34()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A70EFC()
{
  OUTLINED_FUNCTION_33();
  __swift_destroy_boxed_opaque_existential_1(v0 + 344);
  OUTLINED_FUNCTION_7_65(v0 + 304);
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A70F7C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A71044()
{
  OUTLINED_FUNCTION_33();
  __swift_destroy_boxed_opaque_existential_1(v0 + 424);
  OUTLINED_FUNCTION_7_65(v0 + 384);
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A710C4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A7118C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_7_65(v0 + 144);
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A71200()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A712C8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_7_65(v0 + 184);
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A7133C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9A71404()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_10_63();
  OUTLINED_FUNCTION_9_64();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t type metadata accessor for ResponseFrameworkOutputElementConverter()
{
  return self;
}

uint64_t sub_1C9A714A0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C9A6FCE4();
}

unint64_t sub_1C9A71554()
{
  return 0xD000000000000010;
}

unint64_t sub_1C9A71574()
{
  unint64_t result = qword_1EA597CD8;
  if (!qword_1EA597CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA597CD8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResponseComponentError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9A7165CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseComponentError()
{
  return &type metadata for ResponseComponentError;
}

unint64_t sub_1C9A7169C()
{
  unint64_t result = qword_1EA597CE8;
  if (!qword_1EA597CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA597CE8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_77()
{
  return *(void *)(v0 + 544);
}

uint64_t OUTLINED_FUNCTION_7_65(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_9_64()
{
  return sub_1C95FE7C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_63()
{
  return sub_1C95FE7C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_12_63()
{
  return *(void *)(v0 + 544);
}

uint64_t OUTLINED_FUNCTION_15_51()
{
  sub_1C95FD5D8(v2, v1);
  return sub_1C95FD5D8(v0, v3);
}

void sub_1C9A717AC()
{
}

char *OUTLINED_FUNCTION_3_86(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (char *)&a9 - v9;
}

uint64_t sub_1C9A71990()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A719A4);
}

void sub_1C9A719A4()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_1EA5C2788;
  OUTLINED_FUNCTION_33_12();
}

uint64_t sub_1C9A71A78()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 32) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 40) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9A71B64()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_81_0();
  uint64_t v2 = *(void *)(v0 + 40);
  return v1(v2);
}

uint64_t sub_1C9A71BC4()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9A71C20(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 152) = a2;
  *(void *)(v2 + 104) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A71C3C);
}

void sub_1C9A71C3C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = sub_1C9BED458();
  sub_1C95FE60C(v1, v0 + 56, &qword_1EBC789E0);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_1C97D87D8();
  }
  sub_1C95FE7C0(v0 + 56, &qword_1EBC789E0);
  *(void *)(v0 + 96) = v2;
  sub_1C9803FC8();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void *)(v0 + 96);
  *(void *)(v0 + 112) = qword_1EA5C2788;
  *(void *)(v0 + 120) = v3;
  sub_1C9BEC838();
}

uint64_t sub_1C9A71E38()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 144) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9A71F2C()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_81_0();
  uint64_t v2 = *(void *)(v0 + 144);
  return v1(v2);
}

uint64_t sub_1C9A71F8C()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9A71FF0()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A72004);
}

void sub_1C9A72004()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_1EA5C2788;
  OUTLINED_FUNCTION_33_12();
}

uint64_t sub_1C9A720D8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 32) = v0;
  swift_task_dealloc();
  if (!v0) {
    *(void *)(v4 + 40) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9A721C4()
{
  OUTLINED_FUNCTION_24();
  v0[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  v0[4] = swift_task_alloc();
  uint64_t v2 = sub_1C9BECA08();
  v0[5] = v2;
  v0[6] = *(void *)(v2 - 8);
  v0[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A722B0, 0, 0);
}

void sub_1C9A722B0()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  v0[2] = sub_1C9BED458();
  sub_1C95FE60C(v3, v2, &qword_1EA58DC18);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C95FE7C0(v0[4], &qword_1EA58DC18);
  }
  else
  {
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v6 = v0[5];
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v4, v0[4], v6);
    sub_1C9BEC9E8();
    sub_1C9803FC8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  uint64_t v7 = v0[2];
  v0[8] = qword_1EA5C2788;
  v0[9] = v7;
  sub_1C9BEC838();
}

uint64_t sub_1C9A72490()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 96) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9A72584()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_81_0();
  uint64_t v2 = *(void *)(v0 + 96);
  return v1(v2);
}

uint64_t static ResponsePatterns.taskComplete()()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A7260C);
}

void sub_1C9A7260C()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_1EA5C2788;
  OUTLINED_FUNCTION_33_12();
}

uint64_t sub_1C9A726E0(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A726F8);
}

void sub_1C9A726F8()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = sub_1C9BED458();
  sub_1C95FE60C(v1, v0 + 56, &qword_1EBC789E0);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_1C97D87D8();
  }
  sub_1C95FE7C0(v0 + 56, &qword_1EBC789E0);
  *(void *)(v0 + 104) = v2;
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 112) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9A728B0()
{
  OUTLINED_FUNCTION_0_22();
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  uint64_t v6 = *v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v7 = v6;
  *(void *)(v4 + 128) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v0) {
    *(void *)(v4 + 136) = v1;
  }
  OUTLINED_FUNCTION_5_37();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9A729C4()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_81_0();
  uint64_t v2 = *(void *)(v0 + 136);
  return v1(v2);
}

uint64_t sub_1C9A72A24()
{
  OUTLINED_FUNCTION_24();
  swift_release();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t static ResponsePatterns.unsupportedOperation()()
{
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A72A94);
}

void sub_1C9A72A94()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_1EA5C2788;
  OUTLINED_FUNCTION_33_12();
}

ValueMetadata *type metadata accessor for ResponsePatterns()
{
  return &type metadata for ResponsePatterns;
}

uint64_t OUTLINED_FUNCTION_9_65()
{
  return sub_1C9803FC8();
}

uint64_t static ResponseTemplates.unsupportedDuringActiveCall()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A72BB8);
}

uint64_t sub_1C9A72BB8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_39_34();
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v1 + 80))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_20_54(v2, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_17_54();
  uint64_t v3 = sub_1C9BED458();
  OUTLINED_FUNCTION_37_29(v3);
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_35();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_78_8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C96667AC;
  OUTLINED_FUNCTION_35_33();
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v7, v8, v9, v10, v11);
}

uint64_t sub_1C9A72D7C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 112) = a4;
  *(void *)(v5 + 120) = v4;
  *(unsigned char *)(v5 + 152) = a2;
  *(void *)(v5 + 96) = a1;
  *(void *)(v5 + 104) = a3;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A72D9C);
}

uint64_t sub_1C9A72D9C()
{
  OUTLINED_FUNCTION_24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  strcpy((char *)(inited + 32), "responseMode");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  uint64_t v2 = sub_1C9BED458();
  *(void *)(v0 + 128) = v2;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 136) = v3;
  *uint64_t v3 = v4;
  v3[1] = sub_1C9A72EAC;
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v7 = *(void *)(v0 + 104);
  char v8 = *(unsigned char *)(v0 + 152);
  return sub_1C96672B8(v6, v8, v7, v5, v2);
}

uint64_t sub_1C9A72EAC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A72F88()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_90();
  return v0();
}

uint64_t sub_1C9A72FE0()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void static ResponseTemplates.taskAborted(_:)(uint64_t a1, uint64_t a2)
{
}

void static ResponseTemplates.continueInApp(appDisplayInfo:deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v9 = OUTLINED_FUNCTION_5_0(v8);
  uint64_t v11 = v10;
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v9, v14);
  BOOL v15 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v17 = OUTLINED_FUNCTION_22(v16);
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  sub_1C9608D38(a1, (uint64_t)v15, &qword_1EA58DC18);
  sub_1C9608D38(a2, (uint64_t)v28, &qword_1EBC789E0);
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v24 = (v13 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = 0;
  *(void *)(v25 + 24) = 0;
  sub_1C9685268((uint64_t)v15, v25 + v23, &qword_1EA58DC18);
  sub_1C9685268((uint64_t)v28, v25 + v24, &qword_1EBC789E0);
  uint64_t v26 = (void *)(v25 + ((v24 + 47) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v26 = a3;
  v26[1] = a4;
  sub_1C9BEC838();
}

void static ResponseTemplates.taskInProgress(appDisplayInfo:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  uint64_t v7 = OUTLINED_FUNCTION_5_0(v6);
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v7, v12);
  uint64_t v13 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v15 = OUTLINED_FUNCTION_22(v14);
  MEMORY[0x1F4188790](v15, v16);
  OUTLINED_FUNCTION_6_0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v19, 1, 1, v20);
  sub_1C9608D38(a1, (uint64_t)v13, &qword_1EA58DC18);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v22 = (v11 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  *(void *)(v23 + 24) = 0;
  sub_1C9685268((uint64_t)v13, v23 + v21, &qword_1EA58DC18);
  unint64_t v24 = (void *)(v23 + v22);
  *unint64_t v24 = a2;
  v24[1] = a3;
  sub_1C9BEC838();
}

void static ResponseTemplates.appDisabledByScreenTime(_:)(uint64_t a1, uint64_t a2)
{
}

void sub_1C9A733E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = a2;
  __swift_getEnumTagSinglePayload(v9, 1, v10);
  sub_1C9BEC838();
}

void static ResponseTemplates.continueOnCompanion(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void static ResponseTemplates.unlockDeviceSegue(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C9A7361C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v7 = OUTLINED_FUNCTION_22(v6);
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  sub_1C9608D38(a1, (uint64_t)v14, &qword_1EBC789E0);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  sub_1C9685268((uint64_t)v14, (uint64_t)(v13 + 4), &qword_1EBC789E0);
  v13[9] = a2;
  v13[10] = a3;
  sub_1C9BEC838();
}

uint64_t static ResponseTemplates.continueOnCompanion(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A7373C);
}

uint64_t sub_1C9A7373C()
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v4 = sub_1C9BED458();
  uint64_t v5 = OUTLINED_FUNCTION_15_52(v4);
  OUTLINED_FUNCTION_29_32(v5, v6, &qword_1EBC789E0);
  if (*(void *)(v2 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v1, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v3 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v7, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_13_66();
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_34_31();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_23_38(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A7394C;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_44_30();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t sub_1C9A7394C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t static ResponseTemplates.unsupportedSecuredRequestSetting(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A73A50);
}

uint64_t sub_1C9A73A50()
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v4 = sub_1C9BED458();
  uint64_t v5 = OUTLINED_FUNCTION_15_52(v4);
  OUTLINED_FUNCTION_29_32(v5, v6, &qword_1EBC789E0);
  if (*(void *)(v2 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v1, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v3 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v7, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_13_66();
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_34_31();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_23_38(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A7394C;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_44_30();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t static ResponseTemplates.continueInApp(appDisplayInfo:deviceState:)()
{
  OUTLINED_FUNCTION_24();
  v0[24] = v1;
  v0[25] = v2;
  v0[23] = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_22(v4);
  v0[26] = OUTLINED_FUNCTION_16();
  uint64_t v5 = sub_1C9BECA08();
  v0[27] = v5;
  OUTLINED_FUNCTION_5_0(v5);
  v0[28] = v6;
  v0[29] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A73D14()
{
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 192);
  *(void *)(v0 + 176) = sub_1C9BED458();
  sub_1C9608D38(v3, v2, &qword_1EA58DC18);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C95FD924(*(void *)(v0 + 208), &qword_1EA58DC18);
  }
  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_33_30();
    v5(v4);
    sub_1C9BEC9F8();
    sub_1C9803FC8();
    sub_1C9BEC9E8();
    OUTLINED_FUNCTION_32_37();
    sub_1C9803FC8();
    uint64_t v6 = OUTLINED_FUNCTION_50_24();
    v7(v6);
  }
  sub_1C9608D38(*(void *)(v0 + 200), v0 + 56, &qword_1EBC789E0);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_1C97D87D8();
  }
  sub_1C95FD924(v0 + 56, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0 + 136, &qword_1EA591E20);
  if (!*(void *)(v0 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_1EA5C2788;
    *(void *)(v0 + 120) = type metadata accessor for CATTemplateExecutor();
    *(void *)(v0 + 128) = &off_1F23D6490;
    *(void *)(v0 + 96) = v8;
    sub_1C9BEC838();
  }
  sub_1C95FD5D8((long long *)(v0 + 136), v0 + 96);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 96), *(void *)(v0 + 120));
  *(void *)(v0 + 240) = *(void *)(v0 + 176);
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  *(void *)(v0 + 248) = qword_1EA597D28;
  swift_bridgeObjectRetain();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 256) = v9;
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A74090;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t sub_1C9A74090()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 264) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A7417C()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A741EC()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

double sub_1C9A7427C()
{
  qword_1EA5C28E8 = 0;
  double result = 0.0;
  xmmword_1EA5C28C8 = 0u;
  unk_1EA5C28D8 = 0u;
  return result;
}

uint64_t sub_1C9A74294()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  strcpy((char *)(inited + 32), "responseMode");
  *(unsigned char *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = 0;
  *(void *)(inited + 56) = 0xE000000000000000;
  uint64_t result = sub_1C9BED458();
  qword_1EA597D28 = result;
  return result;
}

uint64_t sub_1C9A74324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[14] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9A743C0;
  return static ResponseTemplates.taskAborted()((uint64_t)(v5 + 2));
}

uint64_t sub_1C9A743C0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A7449C()
{
  uint64_t v17 = v0;
  uint64_t v1 = v0[3];
  uint64_t v13 = v1;
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];
  unint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v9 = (void (*)(void *))v0[12];
  char v10 = v0[15] != 0;
  v15[0] = v0[2];
  uint64_t v14 = (void *)v15[0];
  v15[1] = v1;
  v15[2] = v2;
  v15[3] = v3;
  v15[4] = v4;
  v15[5] = v5;
  v15[6] = v6;
  v15[7] = v7;
  v15[8] = v8;
  char v16 = v10;
  v9(v15);
  sub_1C9669B5C(v14, v13, v2, v3, v4, v5, v6, v7, v8, v10);
  OUTLINED_FUNCTION_22_0();
  return v11();
}

uint64_t sub_1C9A74584()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void (**)(uint64_t *))(v0 + 96);
  char v2 = *(void *)(v0 + 120) != 0;
  uint64_t v8 = *(void *)(v0 + 120);
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  char v13 = v2;
  v1(&v8);
  OUTLINED_FUNCTION_15();
  sub_1C9669B5C(v3, v4, v5, 0, 0, 0, 0, 0, 0, v2);
  OUTLINED_FUNCTION_22_0();
  return v6();
}

uint64_t sub_1C9A7463C()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9A74324(v3, v4, v5, v6, v7);
}

uint64_t static ResponseTemplates.taskAborted()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A746EC);
}

uint64_t sub_1C9A746EC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_39_34();
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v1 + 80))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_20_54(v2, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_17_54();
  uint64_t v3 = sub_1C9BED458();
  OUTLINED_FUNCTION_37_29(v3);
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_35();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_78_8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C9A748B0;
  OUTLINED_FUNCTION_35_33();
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v7, v8, v9, v10, v11);
}

uint64_t sub_1C9A748B0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 128) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A7499C()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

void static ResponseTemplates.taskComplete(_:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9A74A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[14] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9A74AE4;
  return static ResponseTemplates.taskComplete()((uint64_t)(v5 + 2));
}

uint64_t sub_1C9A74AE4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t static ResponseTemplates.taskComplete()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A74BD8);
}

uint64_t sub_1C9A74BD8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_39_34();
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v1 + 80))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_20_54(v2, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_17_54();
  uint64_t v3 = sub_1C9BED458();
  OUTLINED_FUNCTION_37_29(v3);
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_35();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_78_8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C96667AC;
  OUTLINED_FUNCTION_35_33();
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v7, v8, v9, v10, v11);
}

uint64_t sub_1C9A74D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[14] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_1C9A74AE4;
  return static ResponseTemplates.taskInProgress(appDisplayInfo:)();
}

uint64_t static ResponseTemplates.taskInProgress(appDisplayInfo:)()
{
  OUTLINED_FUNCTION_24();
  v0[13] = v1;
  v0[14] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_22(v3);
  v0[15] = OUTLINED_FUNCTION_16();
  uint64_t v4 = sub_1C9BECA08();
  v0[16] = v4;
  OUTLINED_FUNCTION_5_0(v4);
  v0[17] = v5;
  v0[18] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9A74EF0()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  v0[12] = sub_1C9BED458();
  sub_1C9608D38(v3, v2, &qword_1EA58DC18);
  if (__swift_getEnumTagSinglePayload(v2, 1, v1) == 1)
  {
    sub_1C95FD924(v0[15], &qword_1EA58DC18);
  }
  else
  {
    uint64_t v4 = OUTLINED_FUNCTION_33_30();
    v5(v4);
    sub_1C9BEC9E8();
    OUTLINED_FUNCTION_32_37();
    sub_1C9803FC8();
    uint64_t v6 = OUTLINED_FUNCTION_50_24();
    v7(v6);
  }
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, (uint64_t)(v0 + 7), &qword_1EA591E20);
  if (!v0[10])
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_20_54(v8, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_17_54();
  v0[19] = v0[12];
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  v0[20] = qword_1EA597D28;
  swift_bridgeObjectRetain();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[21] = v9;
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A75164;
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t sub_1C9A75164()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A75250()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A752C0()
{
  OUTLINED_FUNCTION_33();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9A75350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[12] = a6;
  v7[13] = a7;
  uint64_t v8 = (void *)swift_task_alloc();
  v7[14] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.continueInApp(appDisplayInfo:deviceState:)();
}

uint64_t sub_1C9A75404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.continueOnCompanion(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t sub_1C9A754A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[14] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9A74AE4;
  return static ResponseTemplates.appDisabledByScreenTime()((uint64_t)(v5 + 2));
}

uint64_t static ResponseTemplates.appDisabledByScreenTime()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A7555C);
}

uint64_t sub_1C9A7555C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_39_34();
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v1 + 80))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_20_54(v2, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_17_54();
  uint64_t v3 = sub_1C9BED458();
  OUTLINED_FUNCTION_37_29(v3);
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_35();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_78_8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C96667AC;
  OUTLINED_FUNCTION_35_33();
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v7, v8, v9, v10, v11);
}

void static ResponseTemplates.authenticateOnCompanion(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C9A75740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  char v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *char v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.authenticateOnCompanion(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ResponseTemplates.authenticateOnCompanion(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A757FC);
}

uint64_t sub_1C9A757FC()
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v4 = sub_1C9BED458();
  uint64_t v5 = OUTLINED_FUNCTION_15_52(v4);
  OUTLINED_FUNCTION_29_32(v5, v6, &qword_1EBC789E0);
  if (*(void *)(v2 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v1, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v3 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v7, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_13_66();
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_34_31();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_23_38(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A7394C;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_44_30();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

void static ResponseTemplates.authorizeOnCompanion(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C9A75A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.authorizeOnCompanion(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ResponseTemplates.authorizeOnCompanion(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A75AE8);
}

uint64_t sub_1C9A75AE8()
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v4 = sub_1C9BED458();
  uint64_t v5 = OUTLINED_FUNCTION_15_52(v4);
  OUTLINED_FUNCTION_29_32(v5, v6, &qword_1EBC789E0);
  if (*(void *)(v2 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v1, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v3 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v7, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_13_66();
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_34_31();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_23_38(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A7394C;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_44_30();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t sub_1C9A75CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.unlockDeviceSegue(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ResponseTemplates.unlockDeviceSegue(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A75DB4);
}

uint64_t sub_1C9A75DB4()
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v4 = sub_1C9BED458();
  uint64_t v5 = OUTLINED_FUNCTION_15_52(v4);
  OUTLINED_FUNCTION_29_32(v5, v6, &qword_1EBC789E0);
  if (*(void *)(v2 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v1, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v3 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v7, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_13_66();
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_34_31();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_23_38(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A75FC4;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_44_30();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t sub_1C9A75FC4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 224) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A760B0()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9A76108()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9A76178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[14] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9A74AE4;
  return static ResponseTemplates.unsupportedOperation()((uint64_t)(v5 + 2));
}

void static ResponseTemplates.unsupportedInRegion(_:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9A76250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  uint64_t v6 = (void *)swift_task_alloc();
  v5[14] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9A74AE4;
  return static ResponseTemplates.unsupportedInRegion()((uint64_t)(v5 + 2));
}

uint64_t static ResponseTemplates.unsupportedInRegion()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A76304);
}

uint64_t sub_1C9A76304()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_39_34();
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v1 + 80))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_20_54(v2, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_17_54();
  uint64_t v3 = sub_1C9BED458();
  OUTLINED_FUNCTION_37_29(v3);
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_35();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_78_8(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C96667AC;
  OUTLINED_FUNCTION_35_33();
  OUTLINED_FUNCTION_11_68();
  return sub_1C96672B8(v7, v8, v9, v10, v11);
}

void static ResponseTemplates.unsupportedOnDevice(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C9A764E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  char v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *char v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.unsupportedOnDevice(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ResponseTemplates.unsupportedOnDevice(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A765A4);
}

uint64_t sub_1C9A765A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v16 = sub_1C9BED458();
  uint64_t v17 = OUTLINED_FUNCTION_15_52(v16);
  OUTLINED_FUNCTION_29_32(v17, v18, &qword_1EBC789E0);
  if (*(void *)(v14 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v13, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v12, &qword_1EA591E20);
  if (!v15[20])
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v19, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  __swift_project_boxed_opaque_existential_1((void *)(v14 - 80), v15[15]);
  v15[25] = v15[22];
  v31 = (char *)&dword_1EA597E78 + dword_1EA597E78;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v15[26] = (uint64_t)v20;
  *uint64_t v20 = v21;
  v20[1] = sub_1C9A7679C;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_44_30();
  return v26(v22, v23, v24, v25, v26, v27, v28, v29, v31, a10, a11, a12);
}

uint64_t sub_1C9A7679C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 216) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A76880()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

void static ResponseTemplates.unsupportedSecuredRequestSetting(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C9A76908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.unsupportedSecuredRequestSetting(deviceState:)((uint64_t)(v6 + 2), a4);
}

void static ResponseTemplates.unsupportedWhileSharingPolicyIsRestricted(deviceState:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C9A769CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  uint64_t v8 = (void *)swift_task_alloc();
  v6[14] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_1C9A74AE4;
  return static ResponseTemplates.unsupportedWhileSharingPolicyIsRestricted(deviceState:)((uint64_t)(v6 + 2), a4);
}

uint64_t static ResponseTemplates.unsupportedWhileSharingPolicyIsRestricted(deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 184) = a1;
  *(void *)(v2 + 192) = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A76A88);
}

uint64_t sub_1C9A76A88()
{
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_135();
  uint64_t v4 = sub_1C9BED458();
  uint64_t v5 = OUTLINED_FUNCTION_15_52(v4);
  OUTLINED_FUNCTION_29_32(v5, v6, &qword_1EBC789E0);
  if (*(void *)(v2 - 96)) {
    OUTLINED_FUNCTION_2_90();
  }
  sub_1C95FD924(v1, &qword_1EBC789E0);
  if (qword_1EA588150 != -1) {
    swift_once();
  }
  sub_1C9608D38((uint64_t)&xmmword_1EA5C28C8, v0, &qword_1EA591E20);
  if (!*(void *)(v3 + 160))
  {
    if (qword_1EA588018 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for CATTemplateExecutor();
    OUTLINED_FUNCTION_19_52(v7, (uint64_t)&off_1F23D6490);
  }
  OUTLINED_FUNCTION_18_50();
  OUTLINED_FUNCTION_13_66();
  if (qword_1EA588158 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_34_31();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_23_38(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9A7394C;
  OUTLINED_FUNCTION_28_33();
  OUTLINED_FUNCTION_11_68();
  OUTLINED_FUNCTION_44_30();
  return sub_1C96672B8(v11, v12, v13, v14, v15);
}

uint64_t sub_1C9A76C98()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v7 = v0 + v4;
  uint64_t v8 = sub_1C9BECA08();
  if (!OUTLINED_FUNCTION_5_21(v8))
  {
    OUTLINED_FUNCTION_112();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v1);
  }
  if (*(void *)(v0 + v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v6);
  }
  OUTLINED_FUNCTION_43_30();

  return swift_deallocObject();
}

uint64_t sub_1C9A76D80()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v1);
  uint64_t v4 = *(void *)(v0
                 + ((((*(void *)(v3 + 64)
                     + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                     + 7) & 0xFFFFFFFFFFFFFFF8)
                   + 47) & 0xFFFFFFFFFFFFFFF8)
                 + 8);
  uint64_t v5 = swift_task_alloc();
  unint64_t v6 = (void *)OUTLINED_FUNCTION_17_0(v5);
  *unint64_t v6 = v7;
  v6[1] = sub_1C9615888;
  uint64_t v8 = OUTLINED_FUNCTION_93_0();
  return sub_1C9A75350(v8, v9, v10, v11, v12, v13, v4);
}

uint64_t sub_1C9A76E84()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  uint64_t v5 = sub_1C9BECA08();
  if (!OUTLINED_FUNCTION_5_21(v5))
  {
    OUTLINED_FUNCTION_112();
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v4, v1);
  }
  OUTLINED_FUNCTION_43_30();

  return swift_deallocObject();
}

uint64_t sub_1C9A76F54()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58DC18);
  OUTLINED_FUNCTION_5_0(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  void *v2 = v3;
  v2[1] = sub_1C9615888;
  OUTLINED_FUNCTION_106_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A74D9C(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9A7703C()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9A754A8(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A770D4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9A77110()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A75404(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9A771A4()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A75CF8(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9A77238()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9A74A48(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A772D4()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A75740(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9A77368()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A75A2C(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9A773FC()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9A76178(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A77498()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_43_14();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_106_0();
  return sub_1C9A76250(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A77534()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A764E8(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9A775C8()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A76908(v3, v4, v5, v6, v7, v8);
}

uint64_t sub_1C9A7765C()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_16_0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_244();
  return sub_1C9A769CC(v3, v4, v5, v6, v7, v8);
}

ValueMetadata *type metadata accessor for ResponseTemplates()
{
  return &type metadata for ResponseTemplates;
}

void OUTLINED_FUNCTION_2_90()
{
  sub_1C95FD5D8(v0, v1 - 160);
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 160), *(void *)(v2 + 40));
  sub_1C97D87D8();
}

uint64_t OUTLINED_FUNCTION_7_66()
{
  return sub_1C9803FC8();
}

void *OUTLINED_FUNCTION_13_66()
{
  uint64_t result = __swift_project_boxed_opaque_existential_1(v0, v1[15]);
  v1[25] = v1[22];
  return result;
}

uint64_t OUTLINED_FUNCTION_15_52(uint64_t result)
{
  *(void *)(v1 + 176) = result;
  return result;
}

void *OUTLINED_FUNCTION_17_54()
{
  return __swift_project_boxed_opaque_existential_1(v0, *(void *)(v1 + 40));
}

uint64_t OUTLINED_FUNCTION_18_50()
{
  return sub_1C95FD5D8(v0, v1);
}

void OUTLINED_FUNCTION_19_52(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v3[15] = a1;
  v3[16] = a2;
  v3[12] = v2;
  sub_1C9BEC838();
}

void OUTLINED_FUNCTION_20_54(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v3[5] = a1;
  v3[6] = a2;
  v3[2] = v2;
  sub_1C9BEC838();
}

uint64_t OUTLINED_FUNCTION_23_38(uint64_t result)
{
  *(void *)(v1 + 216) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_33()
{
  return *(void *)(v0 + 184);
}

uint64_t OUTLINED_FUNCTION_29_32(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1C9608D38(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_33_30()
{
  return v0;
}

void OUTLINED_FUNCTION_34_31()
{
  *(void *)(v1 + 208) = v0;
}

void OUTLINED_FUNCTION_36_35()
{
  *(void *)(v1 + 112) = v0;
}

uint64_t OUTLINED_FUNCTION_50_24()
{
  return v0;
}

uint64_t ResponseType.rawValue.getter()
{
  if (*v0) {
    return 0x6769626D61736964;
  }
  else {
    return 0x647261646E617473;
  }
}

SiriKitFlow::ResponseType_optional __swiftcall ResponseType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C9BEE428();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t sub_1C9A779C0(char *a1, char *a2)
{
  return sub_1C990C664(*a1, *a2);
}

unint64_t sub_1C9A779D0()
{
  unint64_t result = qword_1EA597EA8;
  if (!qword_1EA597EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA597EA8);
  }
  return result;
}

uint64_t sub_1C9A77A1C()
{
  return sub_1C96A6B68();
}

uint64_t sub_1C9A77A24()
{
  return sub_1C98A4C10();
}

uint64_t sub_1C9A77A2C()
{
  return sub_1C96A6DAC();
}

SiriKitFlow::ResponseType_optional sub_1C9A77A34(Swift::String *a1)
{
  return ResponseType.init(rawValue:)(*a1);
}

uint64_t sub_1C9A77A40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ResponseType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ResponseType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9A77B34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResponseType()
{
  return &type metadata for ResponseType;
}

uint64_t Result.tapError(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_6_0();
  uint64_t v13 = v12 - v11;
  uint64_t v15 = *(void *)(v14 + 24);
  OUTLINED_FUNCTION_0();
  uint64_t v17 = v16;
  MEMORY[0x1F4188790](v18, v19);
  OUTLINED_FUNCTION_6_0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v8 + 16);
  v23(v13, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v22, v13, v15);
    a1(v22);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, a2);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v23)(a3, v4, a2);
}

uint64_t Result.orElse(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  OUTLINED_FUNCTION_0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_6_0();
  uint64_t v12 = v11 - v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11 - v10, v13, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, a2);
    OUTLINED_FUNCTION_2_91();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(a3, a1);
  }
  else
  {
    OUTLINED_FUNCTION_2_91();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(a3, v12);
  }
}

uint64_t sub_1C9A77E24()
{
  return sub_1C9A78310(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded()()
{
  return 0;
}

uint64_t dispatch thunk of ResultSetFlowProvider.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ResultSetFlowProvider.bundle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ResultSetFlowProvider.patternId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ResultSetFlowProvider.makeNarrowingPromptFlowIfNeeded()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A78324;
  uint64_t v3 = OUTLINED_FUNCTION_100_0();
  return v4(v3);
}

uint64_t dispatch thunk of ResultSetFlowProvider.makeEmptyResultSetFlow()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A78324;
  uint64_t v3 = OUTLINED_FUNCTION_100_0();
  return v4(v3);
}

uint64_t dispatch thunk of ResultSetFlowProvider.makeSingleItemFlow()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A78324;
  uint64_t v3 = OUTLINED_FUNCTION_100_0();
  return v4(v3);
}

uint64_t dispatch thunk of ResultSetFlowProvider.makeAllResultsFlow()()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_5(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C97D7A18;
  uint64_t v3 = OUTLINED_FUNCTION_100_0();
  return v4(v3);
}

uint64_t dispatch thunk of ResultSetFlowProvider.makeWindowingConfiguration(promptType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 80) + **(int **)(a4 + 80));
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_17_5(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9608754;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_1C9A78310(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

void sub_1C9A78328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = &unk_1EA597EE0;
  v12[5] = 0;
  v12[6] = a4;
  v12[7] = a5;
  __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  sub_1C9BEC838();
}

uint64_t sub_1C9A78560()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9A785A8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)();
}

uint64_t RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C99C15EC();
}

uint64_t static ConfirmIntentResponseError.== infix(_:_:)()
{
  return 1;
}

uint64_t ConfirmIntentResponseError.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t ConfirmIntentResponseError.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C9A78740()
{
  return ConfirmIntentResponseError.hashValue.getter();
}

uint64_t sub_1C9A78758()
{
  return ConfirmIntentResponseError.hash(into:)();
}

void sub_1C9A78770(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v5 = v4;
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(a1, a2, v5, WitnessTable);
}

uint64_t sub_1C9A78820(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *a2;
  v4[6] = *a2;
  uint64_t v6 = *(void *)(v5 + 80);
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A7891C, 0, 0);
}

void sub_1C9A7891C()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0[4];
  (*(void (**)(void, void, void))(v0[8] + 16))(v0[9], v0[3] + *(void *)(*(void *)v0[3] + 104), v0[7]);
  v0[10] = *(void *)(v1 + 16);
  v0[11] = *(void *)(v1 + 24);
  sub_1C9BEC838();
}

uint64_t sub_1C9A78A80()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v6 = (void *)v5[11];
  uint64_t v7 = v5[9];
  uint64_t v8 = v5[8];
  uint64_t v9 = v5[7];
  uint64_t v10 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v11 = v10;
  *(void *)(v3 + 104) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);

  swift_release();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v12, v13, v14);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v10 + 8);
    return v15();
  }
}

uint64_t sub_1C9A78C38()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void sub_1C9A78C94()
{
}

void sub_1C9A78CD4(long long *a1)
{
  char v1 = *((unsigned char *)a1 + 16);
  long long v2 = *a1;
  char v3 = v1;
  sub_1C9A78D14((uint64_t)&v2);
}

void sub_1C9A78D14(uint64_t a1)
{
  uint64_t v2 = v1;
  unsigned __int8 v3 = *(unsigned char *)(v1 + 32);
  if ((v3 & 0xE0) == 0x40)
  {
    uint64_t v4 = *(void **)a1;
    uint64_t v5 = *(void **)(a1 + 8);
    char v6 = *(unsigned char *)(a1 + 16);
    uint64_t v7 = *(void **)(v1 + 16);
    uint64_t v8 = *(void *)(v2 + 24);
    if (!v6)
    {
      sub_1C9A796F4(*(id *)(v2 + 16), *(void **)(v2 + 24), v3);
      sub_1C97AB650(v4, v5, 0);
      sub_1C963DCC0(v5);
      sub_1C96750A4(v7, v8, v3);
      sub_1C97ABD08(v4, (uint64_t)v5, 0);
      uint64_t v7 = *(void **)(v2 + 16);
      uint64_t v8 = *(void *)(v2 + 24);
      unsigned __int8 v3 = *(unsigned char *)(v2 + 32);
    }
    *(void *)(v2 + 16) = v4;
    *(void *)(v2 + 24) = v5;
    *(unsigned char *)(v2 + 32) = v6 | 0x60;
    sub_1C97AB650(v4, v5, v6);
    sub_1C96750A4(v7, v8, v3);
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1C9BECF88();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EBC7A520);
    swift_retain_n();
    uint64_t v10 = sub_1C9BECF78();
    os_log_type_t v11 = sub_1C9BEDC88();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v24 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      sub_1C9A796F4(*(id *)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32));
      type metadata accessor for RouteConfirmIntentResponseFlow.State();
      uint64_t v14 = sub_1C9BED5D8();
      sub_1C95FF228(v14, v15, &v24);
      sub_1C9BEDF68();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v10, v11, "RouteConfirmIntentResponseFlow is being executed in an unexpected state %s. Transitioning to error", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v13, -1, -1);
      MEMORY[0x1CB78C440](v12, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t v16 = *(void **)(v2 + 16);
    uint64_t v17 = *(void **)(v2 + 24);
    unsigned __int8 v18 = *(unsigned char *)(v2 + 32);
    type metadata accessor for RouteConfirmIntentResponseFlow.RouteConfirmIntentError();
    swift_getWitnessTable();
    uint64_t v19 = swift_allocError();
    *(void *)uint64_t v20 = v16;
    *(void *)(v20 + 8) = v17;
    *(unsigned char *)(v20 + 16) = v18 | 8;
    uint64_t v21 = *(void **)(v2 + 16);
    uint64_t v22 = *(void *)(v2 + 24);
    *(void *)(v2 + 16) = v19;
    *(void *)(v2 + 24) = 0;
    unsigned __int8 v23 = *(unsigned char *)(v2 + 32);
    *(unsigned char *)(v2 + 32) = 0x80;
    sub_1C9A796F4(v16, v17, v18);
    sub_1C96750A4(v21, v22, v23);
  }
}

unint64_t sub_1C9A79070()
{
  uint64_t v1 = *(void **)v0;
  unsigned int v2 = *(unsigned __int8 *)(v0 + 16);
  unint64_t result = 0xD00000000000003DLL;
  switch((v2 >> 3) & 3)
  {
    case 1u:
      uint64_t v4 = *(void **)(v0 + 8);
      sub_1C9A796F4(v1, v4, v2 & 0xE7);
      sub_1C9BEE188();
      sub_1C9BED6B8();
      type metadata accessor for RouteConfirmIntentResponseFlow.State();
      sub_1C9A792C8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9A79AEC(v1, (uint64_t)v4, v2);
      unint64_t result = 0;
      break;
    case 2u:
      unint64_t v5 = 0;
      sub_1C9BEE188();
      sub_1C9BED6B8();
      type metadata accessor for INIntentResponseCode(0);
      sub_1C9BEE348();
      goto LABEL_5;
    case 3u:
      return result;
    default:
      sub_1C9BEE188();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000002FLL;
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
LABEL_5:
      unint64_t result = v5;
      break;
  }
  return result;
}

unint64_t sub_1C9A792C8()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  unint64_t result = 0x646574726174732ELL;
  switch(v1 >> 5)
  {
    case 1u:
      unint64_t result = 0x6D7269666E6F632ELL;
      break;
    case 2u:
      unint64_t result = 0xD000000000000020;
      break;
    case 3u:
      unint64_t result = 0x74656C706D6F632ELL;
      break;
    case 4u:
      if (*(void *)(v0 + 8)) {
        unint64_t result = 0x64656C646E61682ELL;
      }
      else {
        unint64_t result = 0x6C646E61686E752ELL;
      }
      break;
    case 5u:
      if (v1 == 160 && *(_OWORD *)v0 == 0) {
        unint64_t result = 0x6C616974696E692ELL;
      }
      else {
        unint64_t result = 0x6C6C65636E61632ELL;
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C9A79430(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9A79454()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1C9A79490()
{
  unint64_t result = qword_1EA597EF0;
  if (!qword_1EA597EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA597EF0);
  }
  return result;
}

uint64_t dispatch thunk of RouteConfirmIntentResponseFlowStrategy.makeFailureConfirmingIntentResponse(app:intent:intentResponse:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

void dispatch thunk of RouteConfirmIntentResponseFlowStrategyAsync.makeFailureConfirmingIntentResponse(app:intent:intentResponse:)()
{
  uint64_t v0 = swift_task_alloc();
  unsigned int v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *unsigned int v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_36_1();
  __asm { BRAA            X7, X16 }
}

unsigned char *storeEnumTagSinglePayload for ConfirmIntentResponseError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9A796A4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmIntentResponseError()
{
  return &type metadata for ConfirmIntentResponseError;
}

uint64_t sub_1C9A796DC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A79B04(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9A796F4);
}

id sub_1C9A796F4(id result, void *a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
      sub_1C9BEC838();
    case 2:
      sub_1C9BEC838();
    case 3:
      char v3 = a3 & 0x1F;
      unint64_t result = sub_1C97AB650(result, a2, v3);
      break;
    case 4:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C9A797D0(uint64_t a1)
{
}

uint64_t *sub_1C9A797F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A79B80(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9A796F4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C96750A4);
}

uint64_t *sub_1C9A79820(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A79C04(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C96750A4);
}

uint64_t sub_1C9A79838(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x3B && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 58;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 2) & 7))) ^ 0x3F;
      if (v2 >= 0x3A) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C9A79884(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3A)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 59;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3B) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3B) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1C9A798D8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 <= 0x9F) {
    return v1 >> 5;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_1C9A798F4(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_1C9A79904(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    char v2 = *(unsigned char *)(result + 16) & 3 | (32 * a2);
  }
  else
  {
    *(void *)unint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    char v2 = -96;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

uint64_t type metadata accessor for RouteConfirmIntentResponseFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9A79944(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for RouteConfirmIntentResponseFlow.RouteConfirmIntentError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9A799BC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  char v3 = (void *)OUTLINED_FUNCTION_17_0(v2);
  *char v3 = v4;
  v3[1] = sub_1C9615010;
  uint64_t v5 = OUTLINED_FUNCTION_80_13();
  return sub_1C9A78820(v5, v6, v7, v1);
}

unint64_t sub_1C9A79A58()
{
  unint64_t result = qword_1EA597FB8[0];
  if (!qword_1EA597FB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA597FB8);
  }
  return result;
}

void sub_1C9A79AA4(long long *a1)
{
}

uint64_t sub_1C9A79AAC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A79B04(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9A79AC4);
}

id sub_1C9A79AC4(id result, void *a2, char a3)
{
  if ((a3 & 0x18) == 8) {
    return sub_1C9A796F4(result, a2, a3 & 0xE7);
  }
  return result;
}

void sub_1C9A79ADC(uint64_t a1)
{
}

void sub_1C9A79AEC(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 0x18) == 8) {
    sub_1C96750A4(a1, a2, a3 & 0xE7);
  }
}

uint64_t sub_1C9A79B04(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *sub_1C9A79B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A79B80(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9A79AC4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9A79AEC);
}

uint64_t *sub_1C9A79B80(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *sub_1C9A79BEC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A79C04(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9A79AEC);
}

uint64_t *sub_1C9A79C04(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t sub_1C9A79C50(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 5 && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 4;
    }
    else
    {
      unsigned int v2 = (*(unsigned char *)(a1 + 16) & 4 | (*(unsigned __int8 *)(a1 + 16) >> 3) & 3) ^ 7;
      if (v2 >= 4) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C9A79C98(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 4)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    if (a3 >= 5) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 5) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = (8 * ((3 * a2) & 3)) | 4;
    }
  }
  return result;
}

uint64_t sub_1C9A79CE8(uint64_t a1)
{
  unsigned int v1 = (*(unsigned __int8 *)(a1 + 16) >> 3) & 3;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_1C9A79D04(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0xE7u;
  return result;
}

uint64_t sub_1C9A79D14(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    char v2 = *(unsigned char *)(result + 16) & 0xE3 | (8 * (a2 & 3));
  }
  else
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    char v2 = 24;
  }
  *(unsigned char *)(result + 16) = v2;
  return result;
}

uint64_t sub_1C9A79D40(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void OUTLINED_FUNCTION_10_64(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v6 = *(void **)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = 1;
  unsigned __int8 v7 = *(unsigned char *)(v3 + 32);
  *(unsigned char *)(v3 + 32) = 0x80;
  sub_1C96750A4(v6, v5, v7);
}

uint64_t OUTLINED_FUNCTION_22_40()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_1C9A79DC4()
{
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  int v5 = *(unsigned __int8 *)(v0 + 112);
  if (v5 == 2)
  {
    uint64_t v14 = (void *)OUTLINED_FUNCTION_17_55();
    sub_1C9A44E44(v14, v15, v16, v4);
  }
  else if (v5 == 3)
  {
    id v17 = v2;
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 96);
    uint64_t v7 = *(void *)(v0 + 104);
    if (v5 != 4 || v2 != (void *)1 || (v3 | v1 | v4 | v6 | v7) != 0)
    {
      type metadata accessor for RouteResolutionResultFlow.ResolutionResultProcessingError();
      swift_getWitnessTable();
      OUTLINED_FUNCTION_12_3();
      *(void *)uint64_t v10 = v2;
      *(void *)(v10 + 8) = v1;
      *(void *)(v10 + 16) = v3;
      *(void *)(v10 + 24) = v4;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = v7;
      *(unsigned char *)(v10 + 48) = v5 | 0x80;
      uint64_t v11 = (void *)OUTLINED_FUNCTION_17_55();
      sub_1C9A7B2C0(v11, v12, v13, v4, v6, v7, v5);
    }
  }
  return OUTLINED_FUNCTION_17_55();
}

void sub_1C9A79F20()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v0 - 8, v1);
  sub_1C9A7A034();
}

void sub_1C9A7A034()
{
}

uint64_t sub_1C9A7A074(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C964AEA8(a1);
}

void sub_1C9A7A13C()
{
}

void sub_1C9A7A17C()
{
}

void sub_1C9A7A1BC()
{
  unsigned __int8 v18 = *(void **)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 104);
  int v5 = *(unsigned __int8 *)(v0 + 112);
  if (v5 == 1) {
    sub_1C9BEC838();
  }
  uint64_t v6 = *(void **)(v0 + 72);
  type metadata accessor for RouteResolutionResultFlow.ResolutionResultProcessingError();
  swift_getWitnessTable();
  uint64_t v7 = swift_allocError();
  *(void *)uint64_t v8 = v18;
  *(void *)(v8 + 8) = v6;
  uint64_t v9 = v6;
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v2;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  *(unsigned char *)(v8 + 48) = v5 | 0x80;
  unsigned __int8 v10 = v2;
  uint64_t v11 = *(void **)(v0 + 64);
  id v12 = *(void **)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 104);
  uint64_t v17 = *(void *)(v0 + 80);
  *(void *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(void *)(v0 + 104) = 0;
  char v15 = *(unsigned char *)(v0 + 112);
  *(unsigned char *)(v0 + 112) = 3;
  sub_1C9A7B2C0(v18, v9, v1, v10, v3, v4, v5);

  sub_1C964A44C(v11, v12, v17, v13, v14, v16, v15);
}

void sub_1C9A7AB30()
{
}

void sub_1C9A7AB70()
{
  uint64_t v1 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  uint64_t v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (os_log_type_enabled(v3, v4))
  {
    int v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v5 = 0;
    _os_log_impl(&dword_1C95F9000, v3, v4, "RouteResolutionResultFlow received a result from a prompting flow", v5, 2u);
    MEMORY[0x1CB78C440](v5, -1, -1);
  }

  uint64_t v6 = *(void **)(v0 + 64);
  uint64_t v7 = (_OWORD *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 104);
  int v11 = *(unsigned __int8 *)(v0 + 112);
  if (v11 == 1) {
    sub_1C9BEC838();
  }
  id v12 = *(void **)(v0 + 72);
  uint64_t v13 = *(void *)(v1 + 96);
  uint64_t v14 = v6;
  type metadata accessor for RouteResolutionResultFlow.ResolutionResultProcessingError();
  swift_getWitnessTable();
  uint64_t v15 = swift_allocError();
  *(void *)uint64_t v16 = v14;
  *(void *)(v16 + 8) = v12;
  uint64_t v17 = v12;
  *(void *)(v16 + 16) = v8;
  *(void *)(v16 + 24) = v9;
  uint64_t v18 = v13;
  *(void *)(v16 + 32) = v13;
  *(void *)(v16 + 40) = v10;
  *(unsigned char *)(v16 + 48) = v11 | 0x80;
  uint64_t v19 = *(void **)(v1 + 64);
  uint64_t v20 = *(void **)(v1 + 72);
  uint64_t v21 = *(void *)(v1 + 80);
  uint64_t v22 = v14;
  uint64_t v23 = *(void *)(v1 + 96);
  uint64_t v25 = *(void *)(v1 + 104);
  uint64_t v26 = *(void *)(v1 + 88);
  *(void *)(v1 + 64) = v15;
  *uint64_t v7 = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(void *)(v1 + 104) = 0;
  char v24 = *(unsigned char *)(v1 + 112);
  *(unsigned char *)(v1 + 112) = 3;
  sub_1C9A7B2C0(v22, v17, v8, v9, v18, v10, v11);

  sub_1C964A44C(v19, v20, v21, v26, v23, v25, v24);
}

id sub_1C9A7B2C0(id result, id a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      sub_1C9BEC838();
    case 1:
      sub_1C9BEC838();
    case 2:
      uint64_t result = sub_1C9A44E44(result, a2, a3, a4);
      break;
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C9A7B3B0(uint64_t a1, uint64_t a2)
{
  return sub_1C9A7B6F4(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_1C964A44C);
}

uint64_t sub_1C9A7B3D8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A7B750(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9A7B2C0);
}

uint64_t *sub_1C9A7B3F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A7B800(a1, a2, a3, (uint64_t)sub_1C9A7B2C0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C964A44C);
}

uint64_t *sub_1C9A7B41C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7B8B4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C964A44C);
}

uint64_t sub_1C9A7B434(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 49))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C9A7B474(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C9A7B4C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 3u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C9A7B4E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

uint64_t type metadata accessor for RouteResolutionResultFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C9A7B520()
{
}

uint64_t sub_1C9A7B544@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1C9A79DC4();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1C9A7B578(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for RouteResolutionResultFlow.ResolutionResultProcessingError()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C9A7B5CC()
{
}

uint64_t sub_1C9A7B5D8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9A7B620()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C9615010;
  return sub_1C9A7A074(v2);
}

id sub_1C9A7B6B8(id result, void *a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 >> 6 == 2) {
    return sub_1C9A7B2C0(result, a2, a3, a4, a5, a6, a7 & 0x3F);
  }
  if (!(a7 >> 6)) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C9A7B6DC(uint64_t a1, uint64_t a2)
{
  return sub_1C9A7B6F4(a1, a2, (uint64_t (*)(void, void, void, void, void, void, void))sub_1C9A7B714);
}

uint64_t sub_1C9A7B6F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void, void, void))
{
  return a3(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

void sub_1C9A7B714(void *a1, void *a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 >> 6 == 2)
  {
    sub_1C964A44C(a1, a2, a3, a4, a5, a6, a7 & 0x3F);
  }
  else if (!(a7 >> 6))
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C9A7B738(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A7B750(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9A7B6B8);
}

uint64_t sub_1C9A7B750(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = *((unsigned __int8 *)a2 + 48);
  a4(*a2, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  *(unsigned char *)(a1 + 48) = v11;
  return a1;
}

uint64_t *sub_1C9A7B7D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9A7B800(a1, a2, a3, (uint64_t)sub_1C9A7B6B8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9A7B714);
}

uint64_t *sub_1C9A7B800(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = a2[5];
  char v13 = *((unsigned char *)a2 + 48);
  OUTLINED_FUNCTION_14_27();
  v14();
  uint64_t v15 = *a1;
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  uint64_t v20 = a1[5];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v11;
  a1[5] = v12;
  uint64_t v21 = *((unsigned __int8 *)a1 + 48);
  *((unsigned char *)a1 + 48) = v13;
  a5(v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

uint64_t *sub_1C9A7B89C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7B8B4(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C9A7B714);
}

uint64_t *sub_1C9A7B8B4(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  char v6 = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  uint64_t v12 = a1[5];
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v13;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  uint64_t v14 = *((unsigned __int8 *)a1 + 48);
  *((unsigned char *)a1 + 48) = v6;
  a4(v7, v9, v8, v10, v11, v12, v14);
  return a1;
}

uint64_t sub_1C9A7B914(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1E && *(unsigned char *)(a1 + 49))
    {
      unsigned int v2 = *(_DWORD *)a1 + 29;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 0x1C | (*(unsigned __int8 *)(a1 + 48) >> 6)) ^ 0x1F;
      if (v2 >= 0x1D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1C9A7B960(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 30;
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)uint64_t result = 0u;
      *(unsigned char *)(result + 48) = 8 * (((-a2 >> 2) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1C9A7B9CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 6;
}

uint64_t sub_1C9A7B9D8(uint64_t result)
{
  *(unsigned char *)(result + 48) &= 0x3Fu;
  return result;
}

uint64_t sub_1C9A7B9E8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 7 | (a2 << 6);
  return result;
}

void destroy for ResolutionProcessingOutcome(uint64_t a1)
{
}

uint64_t initializeWithCopy for ResolutionProcessingOutcome(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C9A44E44(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ResolutionProcessingOutcome(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_1C9A44E44(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1C9A44E6C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ResolutionProcessingOutcome(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1C9A44E6C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResolutionProcessingOutcome(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 25))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ResolutionProcessingOutcome(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C9A7BBB8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1C9A7BBD0(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(void *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

void OUTLINED_FUNCTION_1_84()
{
  static ExecuteResponse.ongoing<A>(next:childCompletion:)();
}

uint64_t OUTLINED_FUNCTION_4_78()
{
  return *(void *)(v0 + 344);
}

uint64_t OUTLINED_FUNCTION_6_72()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_17_55()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_51()
{
  return v0;
}

void OUTLINED_FUNCTION_24_37(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

void sub_1C9A7BC9C()
{
  qword_1EBC75578 = MEMORY[0x1E4FBC868];
}

id sub_1C9A7BCB0()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  qword_1EA5981F0 = (uint64_t)result;
  return result;
}

id sub_1C9A7BCE4(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96540]), sel_init);
  sub_1C965FD40(0, 0xE000000000000000, v4, (SEL *)&selRef_setAppName_);
  sub_1C965FD40(0, 0xE000000000000000, v4, (SEL *)&selRef_setDisplayAppName_);
  uint64_t v5 = sub_1C9BED458();
  sub_1C96348E8(v5, v4);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96A80]), sel_init);
  sub_1C9A7C1D4(a1, a2, v6);
  objc_msgSend(v4, sel_setAppIdentifyingInfo_, v6);

  return v4;
}

uint64_t sub_1C9A7BDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7BE90(a1, a2, a3, sub_1C99195C8);
}

uint64_t sub_1C9A7BDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C110(a1, a2, a3, sub_1C99196BC);
}

uint64_t sub_1C9A7BDF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C040(a1, a2, a3, sub_1C99196C8);
}

uint64_t sub_1C9A7BE10(_OWORD *a1, uint64_t a2)
{
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_7_67();
  id v4 = sub_1C99196FC(a1, a2);
  OUTLINED_FUNCTION_10_65((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9A7BE78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7BE90(a1, a2, a3, sub_1C991980C);
}

#error "1C9A7BEB8: call analysis failed (funcsize=20)"

#error "1C9A7BF28: call analysis failed (funcsize=28)"

#error "1C9A7BFB8: call analysis failed (funcsize=36)"

uint64_t sub_1C9A7BFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C110(a1, a2, a3, sub_1C9919B50);
}

uint64_t sub_1C9A7BFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C040(a1, a2, a3, sub_1C9919C2C);
}

uint64_t sub_1C9A7C010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C040(a1, a2, a3, sub_1C9919D98);
}

uint64_t sub_1C9A7C028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C040(a1, a2, a3, sub_1C9919DCC);
}

#error "1C9A7C068: call analysis failed (funcsize=20)"

uint64_t sub_1C9A7C090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C0C0(a1, a2, a3, sub_1C9919F0C);
}

uint64_t sub_1C9A7C0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9A7C0C0(a1, a2, a3, sub_1C9919F2C);
}

#error "1C9A7C0E8: call analysis failed (funcsize=20)"

#error "1C9A7C138: call analysis failed (funcsize=20)"

uint64_t sub_1C9A7C160(char a1, char a2)
{
  char v3 = a2 & 1;
  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_7_67();
  sub_1C991A144(a1, v3);
  OUTLINED_FUNCTION_10_65(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9A7C1C8(void *a1)
{
  return sub_1C963DC60(a1, (SEL *)&selRef_displayAppName);
}

void sub_1C9A7C1D4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setBundleId_, v4);
}

uint64_t sub_1C9A7C22C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_localizedName);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

ValueMetadata *type metadata accessor for SAAppInfoFactory()
{
  return &type metadata for SAAppInfoFactory;
}

uint64_t OUTLINED_FUNCTION_0_66()
{
  *uint64_t v0 = 0x8000000000000000;
  return v1;
}

uint64_t OUTLINED_FUNCTION_1_85()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_4_79()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_5_78(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_6_73(uint64_t a1)
{
  *(void *)(v1 - 112) = a1;
  return sub_1C9BEDF68();
}

void OUTLINED_FUNCTION_7_67()
{
  *uint64_t v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_9_66()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = *v10;
  *uint64_t v10 = a10;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_64()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_13_67(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_14_63()
{
  return sub_1C95FF228(v1, v0, (uint64_t *)(v2 - 112));
}

void OUTLINED_FUNCTION_15_53(uint64_t a1, uint64_t a2, os_signpost_type_t a3, os_signpost_id_t a4)
{
  _os_signpost_emit_with_name_impl(v6, v5, a3, a4, v7, v8, v4, 2u);
}

uint64_t OUTLINED_FUNCTION_16_50()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_18_52(uint64_t a1)
{
  *(void *)(v1 - 144) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_19_53(uint64_t a1, unint64_t a2)
{
  return sub_1C95FF228(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_21_41()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_23_39(uint64_t a1)
{
  return sub_1C95FF228(a1, v1, (uint64_t *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_24_38()
{
  return sub_1C9BED5D8();
}

uint64_t OUTLINED_FUNCTION_25_40()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_26_42()
{
  return sub_1C9BED538();
}

double OUTLINED_FUNCTION_27_37()
{
  double result = 0.0;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 128) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_33()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_30_30()
{
  return sub_1C978294C(v0 - 144, v0 - 112);
}

id OUTLINED_FUNCTION_32_38(uint64_t a1)
{
  return objc_msgSend(v2, (SEL)(v1 + 3224), a1);
}

id static SACardSnippet.makeFromCardSectionsWithIntentData(cardSections:intent:intentResponse:shouldGenerateAceId:)(uint64_t a1, void *a2, void *a3, char a4)
{
  uint64_t v9 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_22_2();
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F99F20]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v15 = sub_1C9BEAAB8();
  uint64_t v17 = v16;
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v9);
  sub_1C965FD40(v15, v17, v14, (SEL *)&selRef_setCardId_);
  sub_1C969C668(a1, v14);
  uint64_t v18 = sub_1C963F5A0(objc_msgSend(a2, sel_backingStore));
  uint64_t v20 = 0;
  if (v19 >> 60 != 15)
  {
    uint64_t v21 = v18;
    unint64_t v22 = v19;
    uint64_t v20 = (void *)sub_1C9BEA9B8();
    sub_1C963F610(v21, v22);
  }
  objc_msgSend(v14, sel_setIntentMessageData_, v20);

  id v23 = objc_msgSend(a2, sel_typeName);
  uint64_t v24 = sub_1C9BED568();
  uint64_t v26 = v25;

  sub_1C965FD40(v24, v26, v14, (SEL *)&selRef_setIntentMessageName_);
  if (!a3)
  {
    objc_msgSend(v14, sel_setIntentResponseMessageData_, 0);
    goto LABEL_11;
  }
  id result = objc_msgSend(a3, sel_backingStore);
  if (result)
  {
    uint64_t v28 = sub_1C963F5A0(result);
    if (v29 >> 60 == 15)
    {
      uint64_t v30 = 0;
    }
    else
    {
      uint64_t v31 = v28;
      unint64_t v32 = v29;
      uint64_t v30 = (void *)sub_1C9BEA9B8();
      sub_1C963F610(v31, v32);
    }
    objc_msgSend(v14, sel_setIntentResponseMessageData_, v30);

    sub_1C9A7D984(a3);
    if (v33)
    {
      uint64_t v34 = (void *)sub_1C9BED538();
      swift_bridgeObjectRelease();
LABEL_12:
      objc_msgSend(v14, sel_setIntentResponseMessageName_, v34);

      id v35 = static SACardSnippet.makeFromCard(card:shouldGenerateAceId:sash:referencedCommands:)((uint64_t)v14, a4 & 1, 0, MEMORY[0x1E4FBC860]);
      return v35;
    }
LABEL_11:
    uint64_t v34 = 0;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id static SACardSnippet.makeFromCard(card:shouldGenerateAceId:)(uint64_t a1, char a2)
{
  return static SACardSnippet.makeFromCard(card:shouldGenerateAceId:sash:referencedCommands:)(a1, a2, 0, MEMORY[0x1E4FBC860]);
}

void sub_1C9A7C82C(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA588DF0);
  id v3 = (id)sub_1C9BED868();
  objc_msgSend(a2, sel_setReferencedCommands_, v3);
}

void sub_1C9A7C89C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setApplicationBundleIdentifier_, v4);
}

id sub_1C9A7C8F4(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  v42[2] = a3;
  int v46 = a2;
  uint64_t v6 = sub_1C9BEAB08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v49 = *(void *)(a1 + 24);
  uint64_t v50 = v13;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  v42[3] = *(void *)(a1 + 32);
  uint64_t v43 = v15;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v47 = v14;
  uint64_t v48 = v16;
  v42[1] = *(void *)(a1 + 64);
  uint64_t v44 = *(void *)(a1 + 72);
  unsigned int v45 = *(unsigned __int8 *)(a1 + 80);
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F965F0]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v18 = sub_1C9BEAAB8();
  uint64_t v20 = v19;
  v51 = *(void (**)(char *, uint64_t))(v7 + 8);
  v51(v10, v6);
  sub_1C97BA8E8(v18, v20, v17);

  sub_1C9A7CC38(v11, v12, v17);
  if (a4) {
    uint64_t v21 = (void *)sub_1C9BED538();
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v23 = v47;
  uint64_t v22 = v48;
  uint64_t v25 = v45;
  char v24 = v46;
  objc_msgSend(v17, sel_setDialogCategory_, v21);

  objc_msgSend(v17, sel_setSpokenOnly_, v25);
  objc_msgSend(v17, sel_setCanUseServerTTS_, v24 & 1);
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96600]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v27 = sub_1C9BEAAB8();
  uint64_t v29 = v28;
  uint64_t v30 = OUTLINED_FUNCTION_0_67();
  v31(v30);
  sub_1C97BA8E8(v27, v29, v26);
  sub_1C975DEEC(v50, v49, v26);
  if (v23) {
    unint64_t v32 = (void *)sub_1C9BED538();
  }
  else {
    unint64_t v32 = 0;
  }
  objc_msgSend(v26, sel_setSpeakableTextOverride_, v32);

  objc_msgSend(v17, sel_setContent_, v26);
  if (v22)
  {
    id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96600]), sel_init);
    sub_1C9BEAAF8();
    uint64_t v34 = sub_1C9BEAAB8();
    uint64_t v36 = v35;
    uint64_t v37 = OUTLINED_FUNCTION_0_67();
    v38(v37);
    sub_1C97BA8E8(v34, v36, v33);

    sub_1C975DEEC(v43, v22, v33);
    if (v44) {
      uint64_t v39 = (void *)sub_1C9BED538();
    }
    else {
      uint64_t v39 = 0;
    }
    objc_msgSend(v33, sel_setSpeakableTextOverride_, v39);

    id v40 = v33;
    objc_msgSend(v17, sel_setCaption_, v40);
  }
  return v17;
}

void sub_1C9A7CC38(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setDialogIdentifier_, v4);
}

uint64_t OUTLINED_FUNCTION_0_67()
{
  return v0;
}

id sub_1C9A7CCA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v11 = &off_1E65A0000;
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F969F8]), sel_init);
  if (a4 >> 60 == 15) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = (void *)sub_1C9BEA9B8();
  }
  objc_msgSend(v12, sel_setSessionHandoffData_, v13);

  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F966D0]), sel_init);
  objc_msgSend(v14, sel_setHandoffPayload_, v12);
  sub_1C9A7D0A0(a1, a2, v14);
  sub_1C9A7D0F8(a1, a2, v14);
  if (a6)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1C9BECF88();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1C9BECF78();
    os_log_type_t v17 = sub_1C9BEDC78();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v24 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_1C95FF228(a5, a6, &v24);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v16, v17, "Making handoff command with MultiUser target device : %s", v18, 0xCu);
      swift_arrayDestroy();
      uint64_t v20 = v19;
      uint64_t v11 = &off_1E65A0000;
      MEMORY[0x1CB78C440](v20, -1, -1);
      MEMORY[0x1CB78C440](v18, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v21 = [objc_allocWithZone(MEMORY[0x1E4F96960]) (SEL)v11[228]];
    sub_1C9A7D150(a5, a6, v21);
    id v22 = v21;
    objc_msgSend(v14, sel_setTargetDevice_, v22);
  }
  return v14;
}

id sub_1C9A7CF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10 = sub_1C9BED5C8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  id v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BED5B8();
  uint64_t v15 = sub_1C9BED578();
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  id v18 = sub_1C9A7CCA8(a1, a2, v15, v17, a5, a6);
  sub_1C963F610(v15, v17);
  return v18;
}

void sub_1C9A7D0A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setLockScreenText_, v4);
}

void sub_1C9A7D0F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setNotificationText_, v4);
}

void sub_1C9A7D150(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setAssistantId_, v4);
}

char *static SAIntentGroupLaunchAppWithIntent.launchAppWithIntent(app:intent:intentResponse:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8, v6);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7, v10);
  uint64_t v12 = (char *)&v51 - v11;
  uint64_t v13 = sub_1C9BEAB08();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13, v15);
  unint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1C9BEC988();
  if (!v18) {
    goto LABEL_17;
  }
  uint64_t v19 = v18;
  uint64_t v9 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96708]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v20 = sub_1C9BEAAB8();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_1C97BA8E8(v20, v22, v9);

  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96720]), sel_init);
  uint64_t v12 = (char *)objc_msgSend(a2, sel_typeName);
  uint64_t v24 = sub_1C9BED568();
  uint64_t v26 = v25;

  sub_1C965FD40(v24, v26, v23, (SEL *)&selRef_setTypeName_);
  uint64_t v27 = sub_1C963F5A0(objc_msgSend(a2, sel_backingStore));
  if (v28 >> 60 == 15)
  {
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v12 = (char *)v27;
    unint64_t v30 = v28;
    uint64_t v29 = (void *)sub_1C9BEA9B8();
    sub_1C963F610((uint64_t)v12, v30);
  }
  objc_msgSend(v23, sel_setData_, v29);

  objc_msgSend(v9, sel_setHandledIntent_, v23);
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96720]), sel_init);
  if (!a3 || (unint64_t v32 = sub_1C9A7D984(a3), !v33))
  {
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xD00000000000001DLL;
    uint64_t v33 = 0x80000001C9C29680;
  }
  sub_1C965FD40(v32, v33, v31, (SEL *)&selRef_setTypeName_);
  if (a3)
  {
    id v34 = objc_msgSend(a3, sel_backingStore);
    if (v34)
    {
      uint64_t v35 = sub_1C963F5A0(v34);
      if (v36 >> 60 == 15)
      {
        a3 = 0;
      }
      else
      {
        uint64_t v37 = v35;
        unint64_t v38 = v36;
        a3 = (void *)sub_1C9BEA9B8();
        sub_1C963F610(v37, v38);
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_17:
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1C9BECF88();
    uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EBC7A520);
    uint64_t v44 = *(void *)(v42 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v12, v43, v42);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v42);
    sub_1C96C26E8((uint64_t)v12, (uint64_t)v9);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v42) == 1)
    {
      sub_1C95FE7C0((uint64_t)v9, &qword_1EBC7A230);
    }
    else
    {
      unsigned int v45 = sub_1C9BECF78();
      os_log_type_t v46 = sub_1C9BEDC88();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(void *)&v53[0] = v48;
        *(_DWORD *)uint64_t v47 = 136315650;
        uint64_t v49 = sub_1C9BEE1B8();
        *(void *)&long long v55 = sub_1C95FF228(v49, v50, (uint64_t *)v53);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2048;
        *(void *)&long long v55 = 21;
        sub_1C9BEDF68();
        *(_WORD *)(v47 + 22) = 2080;
        *(void *)&long long v55 = sub_1C95FF228(0xD000000000000022, 0x80000001C9C295C0, (uint64_t *)v53);
        sub_1C9BEDF68();
        _os_log_impl(&dword_1C95F9000, v45, v46, "FatalError at %s:%lu - %s", (uint8_t *)v47, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v48, -1, -1);
        MEMORY[0x1CB78C440](v47, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v42);
    }
    if (qword_1EBC78750 != -1) {
      swift_once();
    }
    long long v55 = 0u;
    long long v56 = 0u;
    uint64_t v54 = 0;
    memset(v53, 0, sizeof(v53));
    sub_1C9BEC838();
  }
LABEL_13:
  objc_msgSend(v31, sel_setData_, a3);

  objc_msgSend(v9, sel_setHandledIntentResponse_, v31);
  sub_1C965FD40(v52, v19, v9, (SEL *)&selRef_setAppId_);
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC68();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1C9BEF570;
  *(void *)(v39 + 56) = sub_1C9A7D9E8();
  *(void *)(v39 + 64) = sub_1C9A7DA28();
  *(void *)(v39 + 32) = v9;
  id v40 = v9;
  sub_1C9BECE78();

  swift_bridgeObjectRelease();
  return v40;
}

void sub_1C9A7D978(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_1C9A7D984(void *a1)
{
  id v1 = objc_msgSend(a1, sel__payloadResponseTypeName);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C9BED568();

  return v3;
}

unint64_t sub_1C9A7D9E8()
{
  unint64_t result = qword_1EA5947D8;
  if (!qword_1EA5947D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA5947D8);
  }
  return result;
}

unint64_t sub_1C9A7DA28()
{
  unint64_t result = qword_1EA598200;
  if (!qword_1EA598200)
  {
    sub_1C9A7D9E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598200);
  }
  return result;
}

id sub_1C9A7DA78(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  id v3 = objc_msgSend(a1, sel_givenName);
  sub_1C9BED568();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0_68(v4, v5, v6, (SEL *)&selRef_setFirstName_);
  id v7 = objc_msgSend(a1, sel_phoneticGivenName);
  sub_1C9BED568();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0_68(v8, v9, v10, (SEL *)&selRef_setFirstNamePhonetic_);
  id v11 = objc_msgSend(a1, sel_middleName);
  sub_1C9BED568();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0_68(v12, v13, v14, (SEL *)&selRef_setMiddleName_);
  id v15 = objc_msgSend(a1, sel_familyName);
  sub_1C9BED568();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0_68(v16, v17, v18, (SEL *)&selRef_setLastName_);
  id v19 = objc_msgSend(a1, sel_phoneticFamilyName);
  sub_1C9BED568();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0_68(v20, v21, v22, (SEL *)&selRef_setLastNamePhonetic_);
  id v23 = objc_msgSend(a1, sel_nickname);
  sub_1C9BED568();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0_68(v24, v25, v26, (SEL *)&selRef_setNickName_);

  return v2;
}

uint64_t sub_1C9A7DBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_1C9767660(v5);
  if (v11)
  {
    if (!a2)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      return a2 & 1;
    }
    if (v10 == a1 && v11 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      LOBYTE(a2) = 0;
      if ((v13 & 1) == 0) {
        return a2 & 1;
      }
    }
  }
  else if (a2)
  {
    LOBYTE(a2) = 0;
    return a2 & 1;
  }
  uint64_t v14 = sub_1C976766C(v5);
  LOBYTE(a2) = a4 == 0;
  if (v15)
  {
    if (a4)
    {
      if (v14 == a3 && v15 == a4) {
        LOBYTE(a2) = 1;
      }
      else {
        LOBYTE(a2) = sub_1C9BEE618();
      }
    }
    else
    {
      LOBYTE(a2) = 0;
    }
    goto LABEL_21;
  }
  return a2 & 1;
}

void OUTLINED_FUNCTION_0_68(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  sub_1C965FD40(v5, v6, v4, a4);
}

uint64_t sub_1C9A7DD1C(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (a3 >> 62) {
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_1C9BEE3C8())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1CB78B3A0](i - 4, a3) : *(id *)(a3 + 8 * i);
      uint64_t v9 = v8;
      uint64_t v10 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v8;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      sub_1C965F910();
      if (v10 == v6)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void sub_1C9A7DE70()
{
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_6_0();
  sub_1C9BEC4F8();
}

uint64_t sub_1C9A7F864()
{
  uint64_t v0 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_6_0();
  uint64_t v7 = v6 - v5;
  sub_1C9BEAAF8();
  uint64_t v8 = sub_1C9BEAAB8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v7, v0);
  return v8;
}

uint64_t sub_1C9A7F910@<X0>(char a1@<W1>, char a2@<W2>, char *a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t *a7@<X8>)
{
  char v8 = *a3;
  char v10 = a6 & 1;
  uint64_t result = sub_1C97E1B1C(a1, 0, a2, v8, a4, a5, &v10);
  *a7 = result;
  return result;
}

uint64_t sub_1C9A7F964@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C9A7F910(*(unsigned char *)(v1 + 16), *(unsigned char *)(v1 + 17), *(char **)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), a1);
}

void sub_1C9A7F994(uint64_t a1, void *a2)
{
  id v3 = (id)sub_1C9BED868();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setCoordinationOptions_, v3);
}

void sub_1C9A7FA04(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setCorrespondingSessionID_, v4);
}

void sub_1C9A7FA5C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6 = (id)sub_1C9BED538();
  swift_bridgeObjectRelease();
  objc_msgSend(a4, sel_setProperty_forKey_, a1, v6);
}

uint64_t OUTLINED_FUNCTION_6_74()
{
  uint64_t v3 = *(void *)(v2 - 96);
  __swift_project_boxed_opaque_existential_1((void *)(v2 - 128), v0);
  uint64_t v4 = *(void *)(v2 - 296);
  return MEMORY[0x1F415AFF8](v1, v4, v0, v3);
}

void OUTLINED_FUNCTION_7_68(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t OUTLINED_FUNCTION_12_65()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 128), v0);
  return sub_1C9BEACE8();
}

uint64_t OUTLINED_FUNCTION_14_64()
{
  return sub_1C9BED568();
}

uint64_t OUTLINED_FUNCTION_15_54()
{
  return sub_1C963F610(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_51()
{
  return sub_1C963F610(v1, v0);
}

uint64_t OUTLINED_FUNCTION_17_56(uint64_t a1)
{
  *(void *)(v1 - 200) = a1;
  return v1 - 200;
}

uint64_t static SAUIAppPunchOut.makeAppStorePunchOutURL(queryItems:)()
{
  uint64_t v1 = sub_1C9BEA638();
  OUTLINED_FUNCTION_0_2();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_221();
  sub_1C9BEA628();
  OUTLINED_FUNCTION_3_87();
  sub_1C9BEA618();
  MEMORY[0x1CB7877C0](0, 0xE000000000000000);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA588D80);
  uint64_t v6 = sub_1C9BEA5D8();
  OUTLINED_FUNCTION_5_0(v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C9BEF570;
  OUTLINED_FUNCTION_2_92();
  swift_bridgeObjectRetain();
  sub_1C96AC810();
  sub_1C9BEA5E8();
  sub_1C9BEA5F8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

id static SAUIAppPunchOut.makeForApp(app:)()
{
  uint64_t v1 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v3 = v2;
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_221();
  uint64_t v6 = sub_1C9BEC988();
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AC8]), sel_init);
    sub_1C9BEAAF8();
    uint64_t v11 = sub_1C9BEAAB8();
    uint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    sub_1C9A7D978(v11, v13, v10);

    sub_1C9A801C4(v8, v9, v10);
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1C9BECF88();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EBC7A520);
    uint64_t v15 = sub_1C9BECF78();
    os_log_type_t v16 = sub_1C9BEDC88();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_1C95F9000, v15, v16, "No appIdentifier provided. Cannot create punchout command", v17, 2u);
      MEMORY[0x1CB78C440](v17, -1, -1);
    }

    return 0;
  }
  return v10;
}

id static SAUIAppPunchOut.makeAppStoreSearch()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  MEMORY[0x1F4188790](v0 - 8, v1);
  OUTLINED_FUNCTION_6_0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_6_0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_1C9BEA638();
  OUTLINED_FUNCTION_0_2();
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_6_0();
  uint64_t v20 = v19 - v18;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AC8]), sel_init);
  sub_1C9BEA628();
  OUTLINED_FUNCTION_3_87();
  sub_1C9BEA618();
  MEMORY[0x1CB7877C0](0, 0xE000000000000000);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA588D80);
  uint64_t v22 = sub_1C9BEA5D8();
  OUTLINED_FUNCTION_5_0(v22);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C9BEF570;
  OUTLINED_FUNCTION_2_92();
  sub_1C9BEA5E8();
  id v23 = v21;
  sub_1C9BEAAF8();
  uint64_t v24 = sub_1C9BEAAB8();
  uint64_t v26 = v25;
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v5);
  sub_1C9A7D978(v24, v26, v23);

  sub_1C9BEA5F8();
  uint64_t v27 = sub_1C9BEA988();
  unint64_t v28 = 0;
  if (__swift_getEnumTagSinglePayload(v4, 1, v27) != 1)
  {
    unint64_t v28 = (void *)sub_1C9BEA928();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v4, v27);
  }
  objc_msgSend(v23, sel_setPunchOutUri_, v28);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v20, v13);
  return v23;
}

void sub_1C9A801C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setBundleId_, v4);
}

uint64_t OUTLINED_FUNCTION_2_92()
{
  return sub_1C9BEA5C8();
}

uint64_t OUTLINED_FUNCTION_3_87()
{
  return 0x7070612D736D7469;
}

uint64_t sub_1C9A80274(void *a1)
{
  return sub_1C963DC60(a1, (SEL *)&selRef_text);
}

uint64_t sub_1C9A80280(void *a1)
{
  return sub_1C963DC60(a1, (SEL *)&selRef_speakableText);
}

id sub_1C9A8028C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v8, sel_setRedValue_, a1);
  objc_msgSend(v8, sel_setGreenValue_, a2);
  objc_msgSend(v8, sel_setBlueValue_, a3);
  objc_msgSend(v8, sel_setAlpha_, a4);

  return v8;
}

id sub_1C9A80340(uint64_t a1)
{
  return sub_1C9A8038C(a1, 255, 20, &qword_1EA598208);
}

id static ColorFactory.emergencyRed.getter()
{
  return sub_1C98ACCC4(&qword_1EA588170, (void **)&qword_1EA598208);
}

id sub_1C9A80378(uint64_t a1)
{
  return sub_1C9A8038C(a1, 255, 255, &qword_1EA598210);
}

id sub_1C9A8038C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1C96044C4(0, (unint64_t *)&unk_1EA598220);
  sub_1C96044C4(0, (unint64_t *)&qword_1EBC76490);
  uint64_t v7 = (void *)sub_1C9BEDE48();
  id result = sub_1C9A8028C(a2, a3, a3, v7);
  *a4 = result;
  return result;
}

id static ColorFactory.white.getter()
{
  return sub_1C98ACCC4(&qword_1EA588178, (void **)&qword_1EA598210);
}

id sub_1C9A80444(uint64_t a1)
{
  return sub_1C9A8038C(a1, 0, 0, &qword_1EA598218);
}

id static ColorFactory.black.getter()
{
  return sub_1C98ACCC4(&qword_1EA588180, (void **)&qword_1EA598218);
}

ValueMetadata *type metadata accessor for ColorFactory()
{
  return &type metadata for ColorFactory;
}

uint64_t sub_1C9A8048C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  if (a1 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C9BEE288();
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v13 = v4;
    uint64_t v9 = 0;
    unint64_t v4 = a1 & 0xC000000000000001;
    while (1)
    {
      if (v7 == v9)
      {
        __break(1u);
        goto LABEL_14;
      }
      if (v4)
      {
        uint64_t v10 = (void *)MEMORY[0x1CB78B3A0](v9, a1);
        if (!a3) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v10 = *(void **)(a1 + 8 * v9 + 32);
        swift_unknownObjectRetain();
        if (!a3)
        {
LABEL_10:
          uint64_t v11 = 0;
          goto LABEL_11;
        }
      }
      uint64_t v11 = (void *)sub_1C9BED538();
LABEL_11:
      ++v9;
      objc_msgSend(v10, sel_setRefId_, v11, v13);

      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
      if (v7 == v9)
      {
        uint64_t v12 = v14;
        swift_bridgeObjectRelease();
        return v12;
      }
    }
  }
  __break(1u);
  return result;
}

id sub_1C9A8061C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96978]), sel_init);
  sub_1C9A80C8C(a1, a2, v10);
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v11 = OUTLINED_FUNCTION_7_2();
  *(_OWORD *)(v11 + 16) = xmmword_1C9BEF570;
  *(void *)(v11 + 56) = sub_1C96044C4(0, &qword_1EA598240);
  *(void *)(v11 + 64) = sub_1C9A80CE4((unint64_t *)&unk_1EA598248, &qword_1EA598240);
  *(void *)(v11 + 32) = v10;
  id v12 = v10;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C9BF02F0;
  *(void *)(v13 + 32) = v12;
  uint64_t v32 = v13;
  sub_1C9BED8A8();
  id v14 = objc_allocWithZone(MEMORY[0x1E4F96A78]);
  id v30 = v12;
  id v15 = objc_msgSend(v14, sel_init);
  if (a4) {
    uint64_t v16 = a3;
  }
  else {
    uint64_t v16 = 0xD000000000000015;
  }
  if (a4) {
    uint64_t v17 = a4;
  }
  else {
    uint64_t v17 = 0x80000001C9C29710;
  }
  swift_bridgeObjectRetain();
  sub_1C9A80D34(v16, v17, v15);
  uint64_t v18 = a5[3];
  uint64_t v19 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v18);
  objc_msgSend(v15, sel_setEyesFree_, (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 112))(v18, v19) & 1);
  sub_1C9BEDC78();
  uint64_t v20 = OUTLINED_FUNCTION_7_2();
  *(_OWORD *)(v20 + 16) = xmmword_1C9BEF570;
  *(void *)(v20 + 56) = sub_1C96044C4(0, &qword_1EA598258);
  *(void *)(v20 + 64) = sub_1C9A80CE4(&qword_1EA598260, &qword_1EA598258);
  *(void *)(v20 + 32) = v15;
  id v21 = v15;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  id v22 = v21;
  MEMORY[0x1CB78AA10]();
  if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C9BED8D8();
  }
  sub_1C9BED948();
  sub_1C9BED8A8();
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F969F0]), sel_init);
  sub_1C975DD08(v32, v23);
  sub_1C9BEDC78();
  uint64_t v24 = OUTLINED_FUNCTION_7_2();
  *(_OWORD *)(v24 + 16) = xmmword_1C9BEF570;
  *(void *)(v24 + 56) = sub_1C96044C4(0, &qword_1EA598268);
  *(void *)(v24 + 64) = sub_1C9A80CE4((unint64_t *)&unk_1EA598270, &qword_1EA598268);
  *(void *)(v24 + 32) = v23;
  id v25 = v23;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  sub_1C96044C4(0, (unint64_t *)&qword_1EA596128);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BF02F0;
  *(void *)(inited + 32) = v25;
  unint64_t v31 = inited;
  sub_1C9BED8A8();
  id v27 = v25;
  id v28 = sub_1C9A80A8C(v31, MEMORY[0x1E4FBC860], 0, 0);
  swift_bridgeObjectRelease();

  return v28;
}

id sub_1C9A80A8C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96B88]), sel_init);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C9A8048C(a1, a3, a4);
  sub_1C9A2522C(v9, v8);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C9A8048C(a2, a3, a4);
  sub_1C9A80C14(v10, v8);
  if (qword_1EBC7A3B0 != -1) {
    swift_once();
  }
  sub_1C9BEDC78();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
  uint64_t v11 = OUTLINED_FUNCTION_7_2();
  *(_OWORD *)(v11 + 16) = xmmword_1C9BEF570;
  *(void *)(v11 + 56) = sub_1C96044C4(0, (unint64_t *)&qword_1EA596128);
  *(void *)(v11 + 64) = sub_1C9A80CE4((unint64_t *)&unk_1EA598230, (unint64_t *)&qword_1EA596128);
  *(void *)(v11 + 32) = v8;
  id v12 = v8;
  sub_1C9BECE78();
  swift_bridgeObjectRelease();
  return v12;
}

void sub_1C9A80C14(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA588DF0);
  id v3 = (id)sub_1C9BED868();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setFailureCommands_, v3);
}

void sub_1C9A80C8C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  objc_msgSend(a3, sel_setRequestId_, v4);
}

uint64_t sub_1C9A80CE4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C96044C4(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C9A80D34(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = (id)sub_1C9BED538();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setUtterance_, v4);
}

id sub_1C9A80D98(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96B90]), sel_init);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C9A8048C(a1, a3, a4);
  sub_1C979C890(v9, v8, (SEL *)&selRef_setSuccessCommands_);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C9A8048C(a2, a3, a4);
  sub_1C979C890(v10, v8, (SEL *)&selRef_setFailureCommands_);
  return v8;
}

id static SAUIVisualResponseSnippet.makeVisualSnippet(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96BA0]), sel_init);
  sub_1C96836F0(v1, v2, v3);
  return v3;
}

uint64_t ScreentimeCheckFlow.__allocating_init(strategy:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  return sub_1C9A80EE0(a1, a2, (uint64_t (*)(uint64_t))sub_1C9A82B88);
}

{
  return sub_1C9A80EE0(a1, a2, (uint64_t (*)(uint64_t))sub_1C9A82CAC);
}

uint64_t sub_1C9A80EE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_allocObject();
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  OUTLINED_FUNCTION_4_80();
  MEMORY[0x1F4188790](v5, v6);
  id v8 = OUTLINED_FUNCTION_8_71(v7, v13);
  v9(v8);
  uint64_t v10 = OUTLINED_FUNCTION_12_66();
  uint64_t v11 = a3(v10);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v11;
}

void sub_1C9A80F98(uint64_t a1, uint64_t a2)
{
}

void ScreentimeCheckFlowStrategy.makeAppRestrictedByScreentimeResponse(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EA598280;
  v9[5] = 0;
  v9[6] = a1;
  v9[7] = a2;
  __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  sub_1C9BEC838();
}

uint64_t sub_1C9A811D0(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615888;
  return ScreentimeCheckFlowStrategy.makeAppRestrictedByScreentimeResponse()(a1);
}

uint64_t ScreentimeCheckFlowStrategy.makeAppRestrictedByScreentimeResponse()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A81280);
}

void sub_1C9A81280()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_59_8();
  v1[5] = OUTLINED_FUNCTION_25_36();
  v1[6] = &protocol witness table for RefreshableDeviceState;
  v1[2] = v0;
  sub_1C9BEC838();
}

uint64_t sub_1C9A81364()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  OUTLINED_FUNCTION_15_55();
  uint64_t v5 = *v2;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 112) = v1;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0);
  if (v1)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
}

uint64_t sub_1C9A81460(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return MEMORY[0x1F4188298](sub_1C9A81280, 0, 0);
}

uint64_t sub_1C9A81480(uint64_t a1, uint64_t a2)
{
  v2[18] = a1;
  v2[19] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  v2[20] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[21] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1C9A81550;
  return static ResponseTemplates.appDisabledByScreenTime()((uint64_t)(v2 + 2));
}

uint64_t sub_1C9A81550()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9A8162C()
{
  uint64_t v2 = *(void **)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v3 = *(uint64_t **)(v0 + 144);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  uint64_t v6 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v6);
  uint64_t v7 = type metadata accessor for AceOutput();
  *(_OWORD *)(v0 + 104) = 0u;
  *(void *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 88) = 0u;
  v3[3] = v7;
  v3[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_0(v3);
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_1C9A817EC()
{
  uint64_t v16 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[22];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    v0[16] = v8;
    id v10 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v11 = sub_1C9BED5D8();
    v0[17] = sub_1C95FF228(v11, v12, &v15);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "Error generating default makeAppRestrictedByScreentimeResponse: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v13();
}

uint64_t sub_1C9A81A04(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615010;
  return ScreentimeCheckFlowStrategyAsync.makeAppRestrictedByScreentimeResponse()(a1);
}

uint64_t ScreentimeCheckFlowStrategyAsync.makeAppRestrictedByScreentimeResponse()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A81AB4);
}

void sub_1C9A81AB4()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_59_8();
  v1[5] = OUTLINED_FUNCTION_25_36();
  v1[6] = &protocol witness table for RefreshableDeviceState;
  v1[2] = v0;
  sub_1C9BEC838();
}

uint64_t sub_1C9A81B98()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *id v4 = v3;
  OUTLINED_FUNCTION_15_55();
  uint64_t v5 = *v2;
  OUTLINED_FUNCTION_17_3();
  *os_log_type_t v6 = v5;
  *(void *)(v7 + 112) = v1;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0);
  if (v1)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
}

BOOL sub_1C9A81C94()
{
  return *(unsigned char *)(v0 + 16) != 1;
}

uint64_t ScreentimeCheckFlow.init(strategy:outputPublisher:)(uint64_t a1, uint64_t a2)
{
  return sub_1C9A81CD4(a1, a2, (uint64_t (*)(uint64_t))sub_1C9A82B88);
}

{
  return sub_1C9A81CD4(a1, a2, (uint64_t (*)(uint64_t))sub_1C9A82CAC);
}

uint64_t sub_1C9A81CD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  __swift_mutable_project_boxed_opaque_existential_1(a2, *(void *)(a2 + 24));
  OUTLINED_FUNCTION_4_80();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = OUTLINED_FUNCTION_8_71(v7, v13);
  v9(v8);
  uint64_t v10 = OUTLINED_FUNCTION_12_66();
  uint64_t v11 = a3(v10);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v11;
}

uint64_t sub_1C9A81D7C(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A81D94);
}

uint64_t sub_1C9A81D94()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v2);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3))
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C9BECF88();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
    uint64_t v5 = sub_1C9BECF78();
    os_log_type_t v6 = sub_1C9BEDC78();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_1C95F9000, v5, v6, "ScreentimeCheckFlow: App is allowed by screentime", v7, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v8 = v0[12];
    uint64_t v9 = v0[13];

    *(unsigned char *)(v9 + 16) = 1;
    static ExecuteResponse.complete()(v8);
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
  else
  {
    *(unsigned char *)(v0[13] + 16) = 2;
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C9BECF88();
    v0[14] = __swift_project_value_buffer(v12, (uint64_t)qword_1EBC7A520);
    uint64_t v13 = sub_1C9BECF78();
    os_log_type_t v14 = sub_1C9BEDC78();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_1C95F9000, v13, v14, "ScreentimeCheckFlow: App is disabled by screentime", v15, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v16 = v1[6];
    uint64_t v17 = v1[7];
    __swift_project_boxed_opaque_existential_1(v1 + 3, v16);
    uint64_t v19 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v17 + 8) + **(int **)(v17 + 8));
    uint64_t v18 = (void *)swift_task_alloc();
    v0[15] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1C9A82098;
    return v19(v0 + 2, v16, v17);
  }
}

uint64_t sub_1C9A82098()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A82174()
{
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C9A8228C;
  return v6(v0 + 16, v2, v3);
}

uint64_t sub_1C9A8228C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A82368()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  static ExecuteResponse.complete()(*(void *)(v0 + 96));
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9A823C8()
{
  uint64_t v14 = v0;
  uint64_t v1 = *(void **)(v0 + 128);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(v4, v5))
  {
    OUTLINED_FUNCTION_18_54();
    uint64_t v13 = swift_slowAlloc();
    OUTLINED_FUNCTION_45_24(4.8149e-34);
    uint64_t v6 = sub_1C9BEE6E8();
    uint64_t v8 = sub_1C95FF228(v6, v7, &v13);
    OUTLINED_FUNCTION_14_65(v8);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_118(&dword_1C95F9000, v9, v10, "Unable to make response for screentime-restricted app. Will ignore and Flow should exit. %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  static ExecuteResponse.complete()(*(void *)(v0 + 96));
  OUTLINED_FUNCTION_22_0();
  return v11();
}

uint64_t sub_1C9A82540()
{
  uint64_t v14 = v0;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(void **)(v0 + 144);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(v4, v5))
  {
    OUTLINED_FUNCTION_18_54();
    uint64_t v13 = swift_slowAlloc();
    OUTLINED_FUNCTION_45_24(4.8149e-34);
    uint64_t v6 = sub_1C9BEE6E8();
    uint64_t v8 = sub_1C95FF228(v6, v7, &v13);
    OUTLINED_FUNCTION_14_65(v8);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_118(&dword_1C95F9000, v9, v10, "Unable to make response for screentime-restricted app. Will ignore and Flow should exit. %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  static ExecuteResponse.complete()(*(void *)(v0 + 96));
  OUTLINED_FUNCTION_22_0();
  return v11();
}

uint64_t ScreentimeCheckFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  return v0;
}

uint64_t ScreentimeCheckFlow.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9A82728()
{
  return sub_1C9A81D78();
}

uint64_t sub_1C9A8274C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  id v3 = (void *)OUTLINED_FUNCTION_17_0(v2);
  *id v3 = v4;
  v3[1] = sub_1C9615888;
  return sub_1C9A81D7C(v1);
}

BOOL sub_1C9A827DC@<W0>(unsigned char *a1@<X8>)
{
  BOOL result = sub_1C9A81C94();
  *a1 = result;
  return result;
}

uint64_t sub_1C9A82808(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C9A82828, 0, 0);
}

uint64_t sub_1C9A82828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v14 + 32) = v15;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  *uint64_t v15 = v14;
  v15[1] = sub_1C97C9120;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v16, v17, v18, 0xD000000000000027, v19, v20, v21, v22, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9A828FC(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v8 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 2;
  uint64_t v11 = a2[5];
  uint64_t v10 = a2[6];
  __swift_project_boxed_opaque_existential_1(v9, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v8, v4);
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1C9A83424, v13, v11, v10);
  return swift_release();
}

uint64_t sub_1C9A82A6C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) & 1;
}

uint64_t sub_1C9A82AC4(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9A82808(a1);
}

uint64_t sub_1C9A82B60()
{
  return sub_1C9A82A6C() & 1;
}

uint64_t sub_1C9A82B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v18[3] = a4;
  v18[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  *(unsigned char *)(a3 + 16) = 0;
  sub_1C95FD654(a1, (uint64_t)&v15);
  uint64_t v10 = type metadata accessor for ScreentimeCheckFlowStrategyAsyncAdapter();
  uint64_t v11 = swift_allocObject();
  sub_1C95FD5D8(&v15, v11 + 16);
  *(void *)(a3 + 48) = v10;
  *(void *)(a3 + 56) = &off_1F23F45C0;
  *(void *)(a3 + 24) = v11;
  sub_1C95FD654((uint64_t)v18, (uint64_t)&v15);
  uint64_t v12 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v13 = swift_allocObject();
  sub_1C95FD5D8(&v15, v13 + 16);
  uint64_t v16 = v12;
  uint64_t v17 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(void *)&long long v15 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1C95FD5D8(&v15, a3 + 64);
  return a3;
}

uint64_t sub_1C9A82CAC(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a3 + 88) = a4;
  *(void *)(a3 + 96) = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(a3 + 64));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  *(unsigned char *)(a3 + 16) = 0;
  sub_1C95FD5D8(a1, a3 + 24);
  return a3;
}

uint64_t sub_1C9A82D30()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9A82D78()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1C9A82DB0(uint64_t a1)
{
  unint64_t result = sub_1C9A82DD8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C9A82DD8()
{
  unint64_t result = qword_1EA5982A8;
  if (!qword_1EA5982A8)
  {
    type metadata accessor for ScreentimeCheckFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5982A8);
  }
  return result;
}

uint64_t type metadata accessor for ScreentimeCheckFlow()
{
  return self;
}

uint64_t dispatch thunk of ScreentimeCheckFlowStrategy.makeAppRestrictedByScreentimeResponse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ScreentimeCheckFlowStrategy.makeAppRestrictedByScreentimeResponse()()
{
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of ScreentimeCheckFlowStrategy.isAppAllowedByScreentime()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ScreentimeCheckFlowStrategyAsync.makeAppRestrictedByScreentimeResponse()()
{
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t dispatch thunk of ScreentimeCheckFlowStrategyAsync.isAppAllowedByScreentime()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for ScreentimeCheckFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScreentimeCheckFlow);
}

uint64_t dispatch thunk of ScreentimeCheckFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))() & 1;
}

uint64_t dispatch thunk of ScreentimeCheckFlow.__allocating_init(strategy:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ScreentimeCheckFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ScreentimeCheckFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ScreentimeCheckFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 168) + **(int **)(*(void *)v0 + 168));
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615010;
  return v7(v2);
}

uint64_t type metadata accessor for ScreentimeCheckFlowStrategyAsyncAdapter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ScreentimeCheckFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9A83304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScreentimeCheckFlow.State()
{
  return &type metadata for ScreentimeCheckFlow.State;
}

unint64_t sub_1C9A83340()
{
  unint64_t result = qword_1EA5982E8;
  if (!qword_1EA5982E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5982E8);
  }
  return result;
}

uint64_t sub_1C9A8338C(uint64_t a1)
{
  return sub_1C9A828FC(a1, v1);
}

uint64_t sub_1C9A83394()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  OUTLINED_FUNCTION_112();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C9A83424(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);

  return sub_1C9701408(a1);
}

char *OUTLINED_FUNCTION_8_71@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_12_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_65(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_17_57()
{
  return *(void *)(v0 + 96);
}

uint64_t OUTLINED_FUNCTION_18_54()
{
  return swift_slowAlloc();
}

uint64_t sub_1C9A8356C(char a1, char a2)
{
  sub_1C9A83F1C(a1);
  char v3 = sub_1C9762628();
  swift_bridgeObjectRelease();
  if (v3 == 2) {
    char v4 = a2;
  }
  else {
    char v4 = v3;
  }
  return v4 & 1;
}

uint64_t sub_1C9A835BC(void *a1, void *a2)
{
  id v5 = objc_msgSend(a1, sel_nlParameters);
  uint64_t v6 = sub_1C9BED428();

  type metadata accessor for ParameterWrapper();
  *(void *)(swift_initStackObject() + 16) = v6;
  uint64_t v7 = OUTLINED_FUNCTION_0_69();
  uint64_t v9 = sub_1C97627C0(v7, v8);
  if (!v9)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C9BECF88();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
    uint64_t v12 = sub_1C9BECF78();
    os_log_type_t v13 = sub_1C9BEDC78();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v15 = OUTLINED_FUNCTION_0_69();
      sub_1C95FF228(v15, v16, v17);
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v12, v13, "No configuration defined for '%s'. Inferring SDA from available context", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v19, -1, -1);
      MEMORY[0x1CB78C440](v14, -1, -1);
    }

    uint64_t v10 = sub_1C9A83828(a1, a2);
    goto LABEL_9;
  }
  *(void *)(swift_initStackObject() + 16) = v9;
  uint64_t v10 = sub_1C9A83A38();
  swift_bridgeObjectRelease();
  if (!v2)
  {
LABEL_9:
    swift_release();
    return v10;
  }
  swift_setDeallocating();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C9A83828(void *a1, void *a2)
{
  uint64_t v3 = a2[3];
  uint64_t v4 = a2[4];
  id v5 = __swift_project_boxed_opaque_existential_1(a2, v3);
  uint64_t v6 = sub_1C97F2990((void (*)(uint64_t, uint64_t))sub_1C9A83EB4, 0, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], v4, MEMORY[0x1E4FBC278], (uint64_t)v5);
  if (objc_msgSend(a1, sel_listenAfterSpeaking))
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C9BECF88();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
    uint64_t v8 = sub_1C9BECF78();
    os_log_type_t v9 = sub_1C9BEDC78();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1C95F9000, v8, v9, "We are listening so SystemGaveOptions will be used.", v10, 2u);
LABEL_10:
      MEMORY[0x1CB78C440](v10, -1, -1);
    }
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C9BECF88();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
    uint64_t v8 = sub_1C9BECF78();
    os_log_type_t v12 = sub_1C9BEDC78();
    if (os_log_type_enabled(v8, v12))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_1C95F9000, v8, v12, "We are not listening so SystemInformed will be used.", v10, 2u);
      goto LABEL_10;
    }
  }

  return v6;
}

uint64_t sub_1C9A83A38()
{
  uint64_t result = sub_1C9BBE764();
  if (!v0)
  {
    uint64_t v3 = result;
    unint64_t v4 = v2;
    BOOL v5 = result == 0x6E496D6574737953 && v2 == 0xEE0064656D726F66;
    if (v5 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return sub_1C9BBE57C();
    }
    else if (v3 == 0xD000000000000011 && v4 == 0x80000001C9C29830 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return sub_1C9BBE57C();
    }
    else
    {
      BOOL v6 = v3 == 0x72506D6574737953 && v4 == 0xEE00646574706D6FLL;
      if (v6 || (sub_1C9BEE618() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return sub_1C9BBE764();
      }
      else
      {
        BOOL v7 = v3 == 0x664F6D6574737953 && v4 == 0xED00006465726566;
        if (v7 || (sub_1C9BEE618() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1C9A8356C(5, 0);
          return sub_1C9762470();
        }
        else
        {
          if (qword_1EBC7A3B8 != -1) {
            swift_once();
          }
          uint64_t v8 = sub_1C9BECF88();
          __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
          swift_bridgeObjectRetain_n();
          os_log_type_t v9 = sub_1C9BECF78();
          os_log_type_t v10 = sub_1C9BEDC88();
          if (os_log_type_enabled(v9, v10))
          {
            uint64_t v11 = (uint8_t *)swift_slowAlloc();
            uint64_t v12 = swift_slowAlloc();
            uint64_t v14 = v12;
            *(_DWORD *)uint64_t v11 = 136315138;
            swift_bridgeObjectRetain();
            sub_1C95FF228(v3, v4, &v14);
            sub_1C9BEDF68();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1C95F9000, v9, v10, "Unsupported SDA type provided: '%s'. Not sure what to build. Returning nil", v11, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1CB78C440](v12, -1, -1);
            MEMORY[0x1CB78C440](v11, -1, -1);
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          sub_1C9A84078();
          swift_allocError();
          *os_log_type_t v13 = v3;
          v13[1] = v4;
          return swift_willThrow();
        }
      }
    }
  }
  return result;
}

void sub_1C9A83EB4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_eventId);
  uint64_t v4 = sub_1C9BED568();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

unint64_t sub_1C9A83F1C(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746567726174;
      break;
    case 2:
      unint64_t result = 0x7365697469746E65;
      break;
    case 3:
      unint64_t result = 0x6465726566666FLL;
      break;
    case 4:
      unint64_t result = 0x736563696F6863;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C9A83FE0()
{
  return 0xD000000000000015;
}

unint64_t sub_1C9A84070()
{
  return sub_1C9A83FE0();
}

unint64_t sub_1C9A84078()
{
  unint64_t result = qword_1EA5982F8[0];
  if (!qword_1EA5982F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA5982F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SDAConfig.SDAConfigError()
{
  return &type metadata for SDAConfig.SDAConfigError;
}

uint64_t OUTLINED_FUNCTION_0_69()
{
  return 0x69446D6574737973;
}

uint64_t SemanticValueConcept.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SemanticValueConcept.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SemanticValueConcept.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SemanticValueConcept.conceptType.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1C9A841BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = 0x6369746E616D6553;
  v4[7] = 0xEF747065636E6F43;
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t SemanticValueConcept.__deallocating_deinit()
{
  SemanticValueConcept.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9A84224()
{
  return SemanticValueConcept.conceptType.getter();
}

uint64_t type metadata accessor for SemanticValueConcept()
{
  return self;
}

uint64_t method lookup function for SemanticValueConcept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SemanticValueConcept);
}

uint64_t dispatch thunk of SemanticValueConcept.encode(protoJsonCoding:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t _FlowPlanBody1<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1, a1);
  BOOL v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
}

uint64_t sub_1C9A84380()
{
  type metadata accessor for SequentialPlan1();

  return swift_getWitnessTable();
}

uint64_t type metadata accessor for SequentialPlan1()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9A843E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C9A84470(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (!a2) {
    return 0;
  }
  int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return __swift_getEnumTagSinglePayload((uint64_t)a1, v5, v4);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C9A845BC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  size_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  char v9 = 8 * v8;
  BOOL v10 = a3 >= v7;
  int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v8 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v8 < 4)
    {
      int v14 = (v13 >> v9) + 1;
      if (v8)
      {
        int v16 = v13 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v8] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C9A847C0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __swift_storeEnumTagSinglePayload((uint64_t)a1, a2, v7, v6);
      }
      return;
  }
}

uint64_t sub_1C9A847E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(a3 + 48))();
  swift_getAssociatedTypeWitness();
  type metadata accessor for _FlowPlanEvent();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBC78DD0);
  sub_1C9BED178();
  swift_getWitnessTable();
  uint64_t v3 = sub_1C9BED288();
  swift_release();
  return v3;
}

uint64_t sub_1C9A848CC(uint64_t a1, uint64_t a2)
{
  return sub_1C9A847E8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

unint64_t sub_1C9A848D8()
{
  swift_getWitnessTable();

  return ReactiveFlowPlan.description.getter();
}

uint64_t sub_1C9A8492C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1C9A84970(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C9A849AC()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for NeverPlan();

  return swift_getWitnessTable();
}

id FlowMessageOutput.message.getter()
{
  return *(id *)(v0 + 40);
}

uint64_t FlowMessageOutput.init(message:flowActivity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 40) = a1;
  return sub_1C96569A8(a2, a3);
}

uint64_t FlowMessageTransportableOutput.message.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD5F0(v1 + 40, a1);
}

uint64_t FlowMessageTransportableOutput.init(message:flowActivity:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C95FD5D8(a1, a3 + 40);

  return sub_1C96569A8(a2, a3);
}

void type metadata accessor for ExternalActivationRequest()
{
}

void destroy for FlowMessageOutput(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  unint64_t v2 = *(void **)(a1 + 40);
}

uint64_t _s11SiriKitFlow25ExternalActivationRequestVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = OUTLINED_FUNCTION_2_93();
    v7(v6);
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  char v9 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v9;
  id v10 = v9;
  return a1;
}

uint64_t _s11SiriKitFlow25ExternalActivationRequestVwca_0(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      uint64_t v5 = OUTLINED_FUNCTION_2_93();
      v6(v5);
      goto LABEL_8;
    }
LABEL_7:
    long long v7 = *a2;
    long long v8 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v7;
    *(_OWORD *)(a1 + 16) = v8;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((void *)a1, a2);
LABEL_8:
  char v9 = (void *)*((void *)a2 + 5);
  id v10 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v9;
  id v11 = v9;

  return a1;
}

uint64_t _s11SiriKitFlow25ExternalActivationRequestVwta_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;

  return a1;
}

uint64_t _s11SiriKitFlow25ExternalActivationRequestVwet_0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C9A84CA0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for FlowMessageOutput()
{
}

uint64_t destroy for FlowMessageTransportableOutput(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }

  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for FlowMessageTransportableOutput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t assignWithCopy for FlowMessageTransportableOutput(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      goto LABEL_8;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((void *)a1, a2);
LABEL_8:
  __swift_assign_boxed_opaque_existential_1((void *)(a1 + 40), (void *)a2 + 5);
  return a1;
}

uint64_t assignWithTake for FlowMessageTransportableOutput(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowMessageTransportableOutput(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 64);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowMessageTransportableOutput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for FlowMessageTransportableOutput()
{
}

uint64_t OUTLINED_FUNCTION_0_70@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9846638(v1, a1);
}

uint64_t OUTLINED_FUNCTION_2_93()
{
  return v0;
}

uint64_t sub_1C9A84FD8(uint64_t a1)
{
  sub_1C95FD5F0(a1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598390);
  uint64_t v1 = swift_dynamicCast();
  if (v1) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v3);
  }
  return v1;
}

uint64_t sub_1C9A8504C()
{
  OUTLINED_FUNCTION_24();
  *(void *)(v1 + 952) = v0;
  *(void *)(v1 + 944) = v2;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

void sub_1C9A850D8()
{
  sub_1C95FD5F0(*(void *)(v0 + 944), v0 + 576);
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598390);
  if (swift_dynamicCast())
  {
    sub_1C95FD5D8((long long *)(v0 + 776), v0 + 816);
    sub_1C95FD5F0(v0 + 816, v0 + 616);
    if (OUTLINED_FUNCTION_3_88())
    {
      long long v1 = *(_OWORD *)(v0 + 400);
      *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 384);
      *(_OWORD *)(v0 + 544) = v1;
      *(_OWORD *)(v0 + 560) = *(_OWORD *)(v0 + 416);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v2 = sub_1C9BECF88();
      *(void *)(v0 + 960) = __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
      uint64_t v3 = sub_1C9BECF78();
      os_log_type_t v4 = sub_1C9BEDC78();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl(&dword_1C95F9000, v3, v4, "Flow submitted an ExternalActivationRequest", v5, 2u);
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v6 = *(void *)(v0 + 952);

      __swift_project_boxed_opaque_existential_1((void *)(v6 + 16), *(void *)(v6 + 40));
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 968) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1C9A85B40;
      OUTLINED_FUNCTION_38_5();
      __asm { BRAA            X4, X16 }
    }
    if (OUTLINED_FUNCTION_3_88())
    {
      long long v13 = *(_OWORD *)(v0 + 448);
      *(_OWORD *)(v0 + 336) = *(_OWORD *)(v0 + 432);
      *(_OWORD *)(v0 + 352) = v13;
      *(_OWORD *)(v0 + 368) = *(_OWORD *)(v0 + 464);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v14 = v0 + 656;
      uint64_t v15 = sub_1C9BECF88();
      *(void *)(v0 + 984) = __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A520);
      sub_1C9A86708(v0 + 336, v0 + 480);
      int v16 = sub_1C9BECF78();
      os_log_type_t v17 = sub_1C9BEDC78();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_67();
        uint64_t v44 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 138412290;
        log = v16;
        uint64_t v19 = *(void **)(v0 + 520);
        *(void *)(v0 + 912) = v19;
        id v20 = v19;
        sub_1C9BEDF68();
        *uint64_t v44 = v19;
        sub_1C9A86764(v0 + 480);
        _os_log_impl(&dword_1C95F9000, log, v17, "Flow submitted a Message: %@", v18, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        uint64_t v14 = v0 + 656;
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        sub_1C9A86764(v0 + 480);
      }
      id v28 = *(void **)(v0 + 376);
      *(void *)(v0 + 880) = v28;
      sub_1C9BEC948();
      id v29 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5983A0);
      if (swift_dynamicCast())
      {
        uint64_t v30 = *(void *)(v0 + 952);
        sub_1C95FD5D8((long long *)v14, v0 + 736);
        __swift_project_boxed_opaque_existential_1((void *)(v30 + 16), *(void *)(v30 + 40));
        OUTLINED_FUNCTION_2_94();
        unint64_t v31 = (void *)swift_task_alloc();
        *(void *)(v0 + 992) = v31;
        void *v31 = v0;
        v31[1] = sub_1C9A85E6C;
        goto LABEL_41;
      }
      *(void *)(v14 + 32) = 0;
      *(_OWORD *)uint64_t v14 = 0u;
      *(_OWORD *)(v14 + 16) = 0u;
      sub_1C95FE7C0(v14, &qword_1EA5983A8);
      unint64_t v36 = sub_1C9BECF78();
      os_log_type_t v37 = sub_1C9BEDC88();
      if (os_log_type_enabled(v36, v37))
      {
        unint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v38 = 0;
        _os_log_impl(&dword_1C95F9000, v36, v37, "Message cannot be transported over XPC", v38, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      sub_1C9A86764(v0 + 336);
    }
    else
    {
      if (OUTLINED_FUNCTION_3_88())
      {
        memcpy((void *)(v0 + 16), (const void *)(v0 + 176), 0x50uLL);
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v21 = sub_1C9BECF88();
        *(void *)(v0 + 1008) = __swift_project_value_buffer(v21, (uint64_t)qword_1EBC7A520);
        sub_1C9A86658(v0 + 16, v0 + 96);
        uint64_t v22 = sub_1C9BECF78();
        os_log_type_t v23 = sub_1C9BEDC78();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint64_t *)(v0 + 872);
          id v25 = (uint8_t *)OUTLINED_FUNCTION_67();
          uint64_t v26 = (void *)swift_slowAlloc();
          *(_DWORD *)id v25 = 138412290;
          sub_1C95FD5F0(v0 + 136, v0 + 696);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5983A0);
          sub_1C9BEC948();
          if (swift_dynamicCast())
          {
            uint64_t v27 = *v24;
            *(void *)(v0 + 856) = *v24;
            sub_1C9BEDF68();
          }
          else
          {
            *(void *)(v0 + 864) = 0;
            sub_1C9BEDF68();
            uint64_t v27 = 0;
          }
          *uint64_t v26 = v27;
          sub_1C9A866B4(v0 + 96);
          _os_log_impl(&dword_1C95F9000, v22, v23, "Flow submitted a Message: %@", v25, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }
        else
        {
          sub_1C9A866B4(v0 + 96);
        }

        __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 952) + 16), *(void *)(*(void *)(v0 + 952) + 40));
        OUTLINED_FUNCTION_2_94();
        v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 1016) = v41;
        void *v41 = v0;
        v41[1] = sub_1C9A861B4;
LABEL_41:
        OUTLINED_FUNCTION_38_5();
        __asm { BRAA            X4, X16 }
      }
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_1C9BECF88();
      __swift_project_value_buffer(v32, (uint64_t)qword_1EBC7A520);
      uint64_t v33 = sub_1C9BECF78();
      os_log_type_t v34 = sub_1C9BEDC88();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_1C95F9000, v33, v34, "ServiceBridgeOutputHandler does not support this type of ServiceBridgeOutput yet", v35, 2u);
        OUTLINED_FUNCTION_11_4();
      }
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 816);
    __swift_destroy_boxed_opaque_existential_1(v0 + 616);
  }
  else
  {
    *(void *)(v0 + 808) = 0;
    *(_OWORD *)(v0 + 776) = 0u;
    *(_OWORD *)(v0 + 792) = 0u;
    sub_1C95FE7C0(v0 + 776, &qword_1EA598398);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77520);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
    *(void *)(inited + 32) = 0x6567617373654DLL;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 0xD000000000000041;
    *(void *)(inited + 56) = 0x80000001C9C29910;
    uint64_t v11 = sub_1C9BED458();
    id v12 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    sub_1C9A865A8(0xD00000000000001CLL, 0x80000001C9C298F0, 2000, v11);
    swift_willThrow();
  }
  OUTLINED_FUNCTION_38_5();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C9A85B40()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_15_5();
  void *v2 = v1;
  void *v2 = *v0;
  *(unsigned char *)(v1 + 1032) = v3;
  *(void *)(v1 + 976) = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A85C3C()
{
  uint64_t v14 = v0;
  v13[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 976);
  if (*(unsigned char *)(v0 + 1032))
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 816);
  }
  else
  {
    id v2 = v1;
    id v3 = v1;
    uint64_t v4 = sub_1C9BECF78();
    os_log_type_t v5 = sub_1C9BEDC78();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 976);
      uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_67();
      v13[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      *(void *)(v0 + 928) = v6;
      id v8 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589510);
      uint64_t v9 = sub_1C9BED5D8();
      *(void *)(v0 + 936) = sub_1C95FF228(v9, v10, v13);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C95F9000, v4, v5, "There was an error while submitting ExternalActivationRequest: %s", v7, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 816);
  }
  sub_1C9A867B8(v0 + 528);
  __swift_destroy_boxed_opaque_existential_1(v0 + 616);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1C9A85E6C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_15_5();
  void *v2 = v1;
  void *v2 = *v0;
  *(unsigned char *)(v1 + 1033) = v3;
  *(void *)(v1 + 1000) = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A85F68()
{
  uint64_t v15 = v0;
  v14[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 1000);
  if ((*(unsigned char *)(v0 + 1033) & 1) == 0)
  {
    id v2 = v1;
    id v3 = v1;
    uint64_t v4 = sub_1C9BECF78();
    os_log_type_t v5 = sub_1C9BEDC78();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 1000);
      uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_67();
      v14[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      *(void *)(v0 + 896) = v6;
      id v8 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589510);
      uint64_t v9 = sub_1C9BED5D8();
      *(void *)(v0 + 904) = sub_1C95FF228(v9, v10, v14);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C95F9000, v4, v5, "There was an error while posting BridgeMessage: %s", v7, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      __swift_destroy_boxed_opaque_existential_1(v0 + 736);
      sub_1C9A86764(v0 + 336);
      uint64_t v11 = v0 + 816;
      goto LABEL_6;
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 736);
  sub_1C9A86764(v0 + 336);
  uint64_t v11 = v0 + 816;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1(v11);
  __swift_destroy_boxed_opaque_existential_1(v0 + 616);
  id v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1C9A861B4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_15_5();
  void *v2 = v1;
  void *v2 = *v0;
  *(unsigned char *)(v1 + 1034) = v3;
  *(void *)(v1 + 1024) = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A862B0()
{
  uint64_t v14 = v0;
  v13[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void **)(v0 + 1024);
  if ((*(unsigned char *)(v0 + 1034) & 1) == 0)
  {
    id v2 = v1;
    id v3 = v1;
    uint64_t v4 = sub_1C9BECF78();
    os_log_type_t v5 = sub_1C9BEDC78();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 1024);
      uint64_t v7 = (uint8_t *)OUTLINED_FUNCTION_67();
      v13[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      *(void *)(v0 + 920) = v6;
      id v8 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589510);
      uint64_t v9 = sub_1C9BED5D8();
      *(void *)(v0 + 888) = sub_1C95FF228(v9, v10, v13);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C95F9000, v4, v5, "There was an error while posting BridgeMessage: %s", v7, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
    }
  }

  sub_1C9A866B4(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 816);
  __swift_destroy_boxed_opaque_existential_1(v0 + 616);
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t type metadata accessor for ServiceBridgeOutputHandler()
{
  return self;
}

uint64_t sub_1C9A864F4(uint64_t a1)
{
  return sub_1C9A84FD8(a1) & 1;
}

uint64_t sub_1C9A86510()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96EE41C;
  return sub_1C9A8504C();
}

id sub_1C9A865A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  if (a4)
  {
    id v8 = (void *)sub_1C9BED408();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = 0;
  }
  id v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t sub_1C9A86658(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C9A866B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C9A86708(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C9A86764(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C9A867B8(uint64_t a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_2_94()
{
  return v0 + 152;
}

uint64_t OUTLINED_FUNCTION_3_88()
{
  return swift_dynamicCast();
}

uint64_t static FlowLocator.findFlow(forInvocation:)()
{
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_8_0();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_0_71(v2, v6);
  uint64_t v3 = qword_1EBC79EB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1EBC79F10;
  sub_1C983B018();
  OUTLINED_FUNCTION_2_95();
  return v4;
}

uint64_t static FlowLocator.findFlow(supportingInvocation:)()
{
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_8_0();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_0_71(v3, v7);
  uint64_t v4 = qword_1EBC79EB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EBC79F10;
  sub_1C983C854(v0);
  OUTLINED_FUNCTION_2_95();
  return v5;
}

uint64_t static FlowLocator.findFlowFrame(forInvocation:)()
{
  OUTLINED_FUNCTION_3_89();
  OUTLINED_FUNCTION_8_0();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_0_71(v3, v7);
  uint64_t v4 = qword_1EBC79EB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EBC79F10;
  sub_1C983C854(v0);
  OUTLINED_FUNCTION_2_95();
  return v5;
}

uint64_t static FlowLocator.findFlowWrapper(forInvocation:)()
{
  *(void *)(v1 + 16) = OUTLINED_FUNCTION_3_89();
  *(void *)(v1 + 24) = swift_task_alloc();
  *(_OWORD *)(v1 + 32) = *(_OWORD *)v0;
  *(void *)(v1 + 48) = *(void *)(v0 + 16);
  return MEMORY[0x1F4188298](sub_1C9A86AE8, 0, 0);
}

uint64_t sub_1C9A86AE8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = (void *)v0[3];
  *uint64_t v3 = v0[4];
  v3[1] = v1;
  v3[2] = v2;
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = qword_1EBC79EB8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EBC79F10;
  sub_1C983B018();
  OUTLINED_FUNCTION_2_95();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

double static FlowLocator.findFlowPlugin(supportingTopic:)@<D0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  char v4 = a1[1];
  long long v5 = *(_OWORD *)(a1 + 8);
  long long v6 = *(_OWORD *)(a1 + 24);
  long long v7 = *(_OWORD *)(a1 + 40);
  char v8 = a1[56];
  if (qword_1EBC79EB8 != -1)
  {
    long long v11 = *(_OWORD *)(a1 + 24);
    long long v12 = *(_OWORD *)(a1 + 8);
    long long v10 = *(_OWORD *)(a1 + 40);
    swift_once();
    long long v7 = v10;
    long long v6 = v11;
    long long v5 = v12;
  }
  v13[0] = v3;
  v13[1] = v4;
  long long v14 = v5;
  long long v15 = v6;
  long long v16 = v7;
  char v17 = v8;
  return sub_1C983C740((uint64_t)v13, a2);
}

ValueMetadata *type metadata accessor for FlowLocator()
{
  return &type metadata for FlowLocator;
}

uint64_t OUTLINED_FUNCTION_0_71@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  char v4 = (uint64_t *)((char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  *char v4 = v5;
  v4[1] = v6;
  v4[2] = v7;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_2_95()
{
  return sub_1C97F25EC(v0);
}

uint64_t OUTLINED_FUNCTION_3_89()
{
  return type metadata accessor for Parse(0);
}

uint64_t SharingPolicyCheckFlow.__allocating_init(strategy:)(uint64_t a1)
{
  uint64_t v2 = OUTLINED_FUNCTION_23_40();
  SharingPolicyCheckFlow.init(strategy:)(a1);
  return v2;
}

{
  return sub_1C9A882CC(a1, sub_1C9A88BAC);
}

void sub_1C9A86D58(uint64_t a1, uint64_t a2)
{
}

void sub_1C9A86D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v4 - 8, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v8);
  id v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = &unk_1EA598418;
  v9[5] = 0;
  v9[6] = a1;
  v9[7] = a2;
  __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  sub_1C9BEC838();
}

void SharingPolicyCheckFlowStrategy.makeErrorDialog(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v5 - 8, v6);
  OUTLINED_FUNCTION_22_2();
  uint64_t v7 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = &unk_1EA598418;
  v8[5] = 0;
  v8[6] = a1;
  v8[7] = a2;
  __swift_getEnumTagSinglePayload(v2, 1, v7);
  sub_1C9BEC838();
}

uint64_t sub_1C9A871A0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return SharingPolicyCheckFlowStrategy.makeErrorDialog()(a1);
}

uint64_t sub_1C9A87238(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return MEMORY[0x1F4188298](sub_1C9A87258, 0, 0);
}

void sub_1C9A87258()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_59_8();
  uint64_t v0 = OUTLINED_FUNCTION_25_36();
  OUTLINED_FUNCTION_49_18(v0, (uint64_t)&protocol witness table for RefreshableDeviceState);
  sub_1C9BEC838();
}

uint64_t SharingPolicyCheckFlowStrategy.makeErrorDialog()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A87258);
}

uint64_t sub_1C9A87350(uint64_t a1, uint64_t a2)
{
  v2[26] = a1;
  v2[27] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  v2[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A873E4, 0, 0);
}

uint64_t sub_1C9A873E4()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FD5F0(*(void *)(v0 + 216), v0 + 88);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9A87490;
  return static ResponseTemplates.unsupportedWhileSharingPolicyIsRestricted(deviceState:)(v0 + 16, v0 + 88);
}

uint64_t sub_1C9A87490()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 88;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 240) = v0;
  swift_task_dealloc();
  sub_1C9673A74(v4, &qword_1EBC789E0);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

void sub_1C9A87580()
{
  uint64_t v2 = *(void **)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = *(uint64_t **)(v0 + 208);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 96))(v4, v5);
  uint64_t v6 = type metadata accessor for NLContextUpdate();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v6);
  uint64_t v7 = type metadata accessor for AceOutput();
  *(_OWORD *)(v0 + 144) = 0u;
  *(void *)(v0 + 160) = 0;
  *(_OWORD *)(v0 + 128) = 0u;
  v3[3] = v7;
  v3[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_0(v3);
  static AceOutputHelper.makeErrorOutput(templateResult:deviceState:ttsEnabled:snippetAceViews:listenAfterSpeaking:canUseServerTTS:nlContextUpdate:additionalCommands:flowActivity:)();
}

uint64_t sub_1C9A87740()
{
  uint64_t v15 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 240);
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 240);
  if (v7)
  {
    uint64_t v9 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v14 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1C9BEE6E8();
    *(void *)(v0 + 200) = sub_1C95FF228(v10, v11, &v14);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "Unable to generate default \"unsupported\" dialog due to error: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v12();
}

void sub_1C9A87948(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9A8796C(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA5984B8 + dword_1EA5984B8);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615888;
  return v5(a1);
}

uint64_t sub_1C9A87A20(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615010;
  return SharingPolicyCheckFlowStrategyAsync.makeErrorDialog()(a1);
}

uint64_t sub_1C9A87AB8(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return MEMORY[0x1F4188298](sub_1C9A87AD8, 0, 0);
}

void sub_1C9A87AD8()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_59_8();
  uint64_t v0 = OUTLINED_FUNCTION_25_36();
  OUTLINED_FUNCTION_49_18(v0, (uint64_t)&protocol witness table for RefreshableDeviceState);
  sub_1C9BEC838();
}

uint64_t SharingPolicyCheckFlowStrategyAsync.makeErrorDialog()(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A87258);
}

uint64_t sub_1C9A87BD0(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EA5984D0 + dword_1EA5984D0);
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615888;
  return v5(a1);
}

uint64_t sub_1C9A87C84(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1C9A87CA4, 0, 0);
}

uint64_t sub_1C9A87CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_24();
  uint64_t v15 = v14[3];
  uint64_t v16 = swift_task_alloc();
  v14[4] = v16;
  *(void *)(v16 + 16) = v15;
  char v17 = (void *)swift_task_alloc();
  v14[5] = v17;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  *char v17 = v14;
  v17[1] = sub_1C97C88CC;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188160](v18, v19, v20, 0xD000000000000017, v21, v22, v16, v23, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9A87D94(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v8 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, v8, v4);
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1C9A83424, v12, v9, v10);
  return swift_release();
}

uint64_t sub_1C9A87F04(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A87F1C);
}

uint64_t sub_1C9A87F1C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(v0[3] + 16) + **(int **)(v0[3] + 16));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9618A08;
  uint64_t v2 = v0[2];
  return v4(v2);
}

uint64_t sub_1C9A87FEC(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9A87F04(a1);
}

void sub_1C9A88088()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
  uint64_t v0 = qword_1EBC74538;
  qword_1EA5983E0 = type metadata accessor for RefreshableDeviceState();
  unk_1EA5983E8 = &protocol witness table for RefreshableDeviceState;
  qword_1EA5983C8 = v0;
  sub_1C9BEC838();
}

void sub_1C9A88120()
{
}

uint64_t SharingPolicyCheckFlow.init(strategy:)(uint64_t a1)
{
  *(unsigned char *)(v1 + 16) = 0;
  if (qword_1EA588190 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983C8, v1 + 24);
  if (qword_1EA588198 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983F0, v1 + 64);
  uint64_t v3 = type metadata accessor for DefaultSharingPolicyProvider();
  uint64_t inited = swift_initStaticObject();
  *(void *)(v1 + 128) = v3;
  *(void *)(v1 + 136) = &off_1F23F4A78;
  *(void *)(v1 + 104) = inited;
  sub_1C95FD5F0(a1, (uint64_t)&v9);
  uint64_t v5 = type metadata accessor for AnySharingPolicyCheckFlowStrategy();
  uint64_t v6 = OUTLINED_FUNCTION_60_0();
  uint64_t v7 = swift_allocObject();
  sub_1C95FD5D8(&v9, v7 + 16);
  *(void *)(v6 + 16) = &unk_1EA598440;
  *(void *)(v6 + 24) = v7;
  uint64_t v10 = v5;
  unint64_t v11 = &off_1F23F4A68;
  *(void *)&long long v9 = v6;
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1C95FD5D8(&v9, v1 + 144);
  return v1;
}

{
  return sub_1C9A882CC(a1, sub_1C9A88E74);
}

uint64_t sub_1C9A882CC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t))(v12 + 16))(v10 - v9);
  uint64_t v13 = a2(v11, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void SharingPolicyCheckFlow.__allocating_init(restrictedErrorOutputGenerator:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_60_0();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  sub_1C9BEC838();
}

uint64_t sub_1C9A885A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return MEMORY[0x1F4188298](sub_1C9A885C8, 0, 0);
}

void sub_1C9A885C8()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v1 = type metadata accessor for RefreshableDeviceState();
  OUTLINED_FUNCTION_49_18(v1, (uint64_t)&protocol witness table for RefreshableDeviceState);
  sub_1C9BEC838();
}

uint64_t sub_1C9A88720()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  OUTLINED_FUNCTION_15_55();
  uint64_t v5 = *v2;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 128) = v1;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v0);
  if (v1)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
}

uint64_t SharingPolicyCheckFlow.__allocating_init(restrictedErrorOutputGenerator:)(uint64_t a1, uint64_t a2)
{
  if (qword_1EA588190 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983C8, (uint64_t)v20);
  if (qword_1EA588198 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983F0, (uint64_t)v19);
  uint64_t v5 = type metadata accessor for DefaultSharingPolicyProvider();
  uint64_t inited = swift_initStaticObject();
  uint64_t v7 = type metadata accessor for AnySharingPolicyCheckFlowStrategy();
  uint64_t v8 = OUTLINED_FUNCTION_60_0();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v18[3] = v5;
  v18[4] = &off_1F23F4A78;
  char v17 = &off_1F23F4A68;
  v18[0] = inited;
  uint64_t v16 = v7;
  *(void *)&long long v15 = v8;
  uint64_t v9 = OUTLINED_FUNCTION_23_40();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_22_2();
  (*(void (**)(uint64_t *))(v12 + 16))(v2);
  uint64_t v13 = *v2;
  *(void *)(v9 + 128) = v5;
  *(void *)(v9 + 136) = &off_1F23F4A78;
  *(void *)(v9 + 104) = v13;
  *(unsigned char *)(v9 + 16) = 0;
  sub_1C95FD5D8(v20, v9 + 24);
  sub_1C95FD5D8(v19, v9 + 64);
  sub_1C95FD5D8(&v15, v9 + 144);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v9;
}

uint64_t SharingPolicyCheckFlow.on(input:)()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  uint64_t v1 = sub_1C9BECF78();
  os_log_type_t v2 = sub_1C9BEDC78();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v7 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v3 = 136315138;
    if (qword_1EA588188 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1EA5983B8;
    unint64_t v5 = qword_1EA5983C0;
    swift_bridgeObjectRetain();
    sub_1C95FF228(v4, v5, &v7);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v1, v2, "%s: This flow handles no input", v3, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }

  return 0;
}

uint64_t sub_1C9A88B6C()
{
  return 0;
}

uint64_t sub_1C9A88B88()
{
  return SharingPolicyCheckFlow.execute(completion:)();
}

uint64_t sub_1C9A88BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_6_0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = OUTLINED_FUNCTION_23_40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v13, a1, a3);
  uint64_t v15 = sub_1C9A88E74(v13, v14, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, a3);
  return v15;
}

uint64_t sub_1C9A88C88(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = type metadata accessor for DefaultSharingPolicyCheckFlowStrategy();
  uint64_t v9 = &off_1F23F4A88;
  *(void *)&long long v7 = a1;
  *(unsigned char *)(a2 + 16) = 0;
  if (qword_1EA588190 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983C8, a2 + 24);
  if (qword_1EA588198 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983F0, a2 + 64);
  uint64_t v4 = type metadata accessor for DefaultSharingPolicyProvider();
  uint64_t inited = swift_initStaticObject();
  *(void *)(a2 + 128) = v4;
  *(void *)(a2 + 136) = &off_1F23F4A78;
  *(void *)(a2 + 104) = inited;
  sub_1C95FD5D8(&v7, a2 + 144);
  return a2;
}

uint64_t type metadata accessor for AnySharingPolicyCheckFlowStrategy()
{
  return self;
}

uint64_t sub_1C9A88DA8()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C9A88DE0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v2 = v1;
  uint64_t v3 = swift_task_alloc();
  uint64_t v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *uint64_t v4 = v5;
  v4[1] = sub_1C9615888;
  return sub_1C9A87C84(v2, v0 + 16);
}

uint64_t sub_1C9A88E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  *(unsigned char *)(a2 + 16) = 0;
  if (qword_1EA588190 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983C8, a2 + 24);
  if (qword_1EA588198 != -1) {
    swift_once();
  }
  sub_1C95FD5F0((uint64_t)&qword_1EA5983F0, a2 + 64);
  uint64_t v8 = type metadata accessor for DefaultSharingPolicyProvider();
  uint64_t inited = swift_initStaticObject();
  *(void *)(a2 + 128) = v8;
  *(void *)(a2 + 136) = &off_1F23F4A78;
  *(void *)(a2 + 104) = inited;
  sub_1C95FD5D8(&v11, a2 + 144);
  return a2;
}

uint64_t sub_1C9A88FA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9A88FD8()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C9A885A4(v3, v4, v5);
}

unint64_t sub_1C9A8906C(uint64_t a1)
{
  unint64_t result = sub_1C9A89094();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C9A89094()
{
  unint64_t result = qword_1EA598460;
  if (!qword_1EA598460)
  {
    type metadata accessor for SharingPolicyCheckFlow();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598460);
  }
  return result;
}

uint64_t dispatch thunk of SharingPolicyCheckFlowStrategy.makeErrorDialog(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SharingPolicyCheckFlowStrategy.makeErrorDialog()()
{
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t type metadata accessor for DefaultSharingPolicyCheckFlowStrategySync()
{
  return self;
}

uint64_t dispatch thunk of SharingPolicyCheckFlowStrategyAsync.makeErrorDialog()()
{
  OUTLINED_FUNCTION_89();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_52_12();
  return v4(v3);
}

uint64_t method lookup function for SharingPolicyCheckFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingPolicyCheckFlow);
}

uint64_t dispatch thunk of SharingPolicyCheckFlow.__allocating_init(strategy:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for SharingPolicyCheckFlow.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9A893ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingPolicyCheckFlow.State()
{
  return &type metadata for SharingPolicyCheckFlow.State;
}

unint64_t sub_1C9A89428()
{
  unint64_t result = qword_1EA598498;
  if (!qword_1EA598498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598498);
  }
  return result;
}

uint64_t sub_1C9A89478()
{
  OUTLINED_FUNCTION_27_1();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_9_7();
  return sub_1C9705428(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9A8951C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return v4(v3);
}

uint64_t sub_1C9A895BC(uint64_t a1)
{
  return sub_1C9A87D94(a1, *(void **)(v1 + 16));
}

uint64_t sub_1C9A895C4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA599CE0);
  OUTLINED_FUNCTION_8_0();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_23_40()
{
  return swift_allocObject();
}

uint64_t sub_1C9A8966C(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1C9A8A908(a1, a2, a3);
  return v6;
}

uint64_t sub_1C9A896C4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return SimpleDisambiguationPromptStrategy.makeRepromptOnEmptyParse(items:)();
}

uint64_t SimpleDisambiguationPromptStrategy.makeRepromptOnEmptyParse(items:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_32_39(v0, v1, v2, v3);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_17_0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C9615888;
  uint64_t v7 = OUTLINED_FUNCTION_7_3();
  return v8(v7);
}

uint64_t sub_1C9A8985C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return SimpleDisambiguationPromptStrategy.makeRepromptOnLowConfidence(items:)();
}

uint64_t SimpleDisambiguationPromptStrategy.makeRepromptOnLowConfidence(items:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D5F14();
}

uint64_t sub_1C9A8997C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return SimpleDisambiguationPromptStrategy.makeFlowCancelledResponse()();
}

uint64_t SimpleDisambiguationPromptStrategy.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6D18();
}

uint64_t sub_1C9A89A9C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return SimpleDisambiguationPromptStrategy.makeErrorResponse(error:)();
}

uint64_t SimpleDisambiguationPromptStrategy.makeErrorResponse(error:)()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_246();
  return sub_1C97D6734();
}

uint64_t SimpleDisambiguationPromptStrategy.actionForInputWrapper(input:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9A89BE8()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void, void))(v0[5] + 24))(v0[3], v0[4]);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.actionForInput(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.parseDisambiguationResult(input:items:)()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 32) + **(int **)(v0 + 32));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  return v14(v9, v7, v5, v3, v1);
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.makePromptForDisambiguation(items:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_32_39(v0, v1, v2, v3);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_17_0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C9615888;
  uint64_t v7 = OUTLINED_FUNCTION_7_3();
  return v8(v7);
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.makeRepromptOnEmptyParse(items:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.makeRepromptOnLowConfidence(items:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.makeFlowCancelledResponse()()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 64) + **(int **)(v0 + 64));
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = (void *)OUTLINED_FUNCTION_17_0(v6);
  *uint64_t v7 = v8;
  v7[1] = sub_1C9615888;
  return v10(v5, v3, v1);
}

uint64_t dispatch thunk of SimpleDisambiguationPromptStrategy.makeErrorResponse(error:)()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_78();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_3();
  return v4(v3);
}

uint64_t sub_1C9A8A1F4()
{
  uint64_t result = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C9A8A2AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = (char *)v1 + *(void *)(v3 + 120);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v11, v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 7:
      OUTLINED_FUNCTION_30_31();
      OUTLINED_FUNCTION_35_34();
      return swift_storeEnumTagMultiPayload();
    case 3:
      char v15 = v10[8];
      *(void *)a1 = *(void *)v10;
      *(unsigned char *)(a1 + 8) = v15;
      OUTLINED_FUNCTION_30_31();
      OUTLINED_FUNCTION_35_34();
      return swift_storeEnumTagMultiPayload();
    case 2:
      OUTLINED_FUNCTION_30_31();
      OUTLINED_FUNCTION_35_34();
      OUTLINED_FUNCTION_8_4();
      return (*(uint64_t (**)(uint64_t, char *))(v13 + 32))(a1, v10);
    default:
      type metadata accessor for SimpleDisambiguationPromptFlow.SimpleDisambiguationPromptFlowError();
      swift_getWitnessTable();
      *(void *)a1 = swift_allocError();
      *(unsigned char *)(a1 + 8) = 0;
      OUTLINED_FUNCTION_30_31();
      OUTLINED_FUNCTION_35_34();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v4);
  }
}

void sub_1C9A8A514()
{
  uint64_t v0 = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  MEMORY[0x1F4188790](v0, v1);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

void sub_1C9A8A7FC(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a1, v4);
  swift_endAccess();
  sub_1C9A8A514();
}

uint64_t sub_1C9A8A908(uint64_t a1, uint64_t a2, long long *a3)
{
  type metadata accessor for SimpleDisambiguationPromptFlow.State();
  swift_storeEnumTagMultiPayload();
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a1;
  sub_1C95FD5D8(a3, v3 + 32);
  return v3;
}

uint64_t sub_1C9A8A9B0(uint8_t *a1)
{
  uint64_t v3 = (void *)*v1;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  uint64_t v10 = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v12 = v11;
  uint64_t v15 = MEMORY[0x1F4188790](v13, v14);
  uint64_t v53 = (uint64_t)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v17);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v20 = (char *)v1 + v3[15];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v20, v10);
  LODWORD(v20) = swift_getEnumCaseMultiPayload();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v10);
  if (v20 == 5)
  {
    uint64_t v21 = type metadata accessor for Input(0);
    sub_1C98C83FC((uint64_t)&a1[*(int *)(v21 + 20)], (uint64_t)v7, (void (*)(void))type metadata accessor for Parse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1C98C83A4((uint64_t)v7, (void (*)(void))type metadata accessor for Parse);
    if (EnumCaseMultiPayload == 10)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v23 = sub_1C9BECF88();
      uint64_t v24 = OUTLINED_FUNCTION_34(v23, (uint64_t)qword_1EBC7A520);
      os_log_type_t v25 = sub_1C9BEDC78();
      if (os_log_type_enabled(v24, v25))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_39_1(&dword_1C95F9000, v26, v27, "SimpleDisambiguationPromptFlow received empty parse. Will handle and re-prompt.");
        OUTLINED_FUNCTION_11_4();
      }
LABEL_7:

      uint64_t v28 = v53;
      OUTLINED_FUNCTION_55_14();
      goto LABEL_8;
    }
    if ((sub_1C966630C((uint64_t)a1) & 1) == 0)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C9BECF88();
      v41 = OUTLINED_FUNCTION_34(v40, (uint64_t)qword_1EBC7A520);
      os_log_type_t v42 = sub_1C9BEDC78();
      if (os_log_type_enabled(v41, v42))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_161(&dword_1C95F9000, v43, v44, "SimpleDisambiguationPromptFlow received low confidence input. Treating as misunderstood and will re-prompt.");
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v45 = v53;
      sub_1C98C83FC((uint64_t)a1, v53, (void (*)(void))type metadata accessor for Input);
      OUTLINED_FUNCTION_55_14();
      swift_storeEnumTagMultiPayload();
      sub_1C9A8A7FC(v45);
    }
    (*(void (**)(uint64_t *__return_ptr, uint8_t *, uint64_t, uint64_t))(v9 + 24))(&v54, a1, v8, v9);
    if (!(_BYTE)v54)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v46 = sub_1C9BECF88();
      uint64_t v24 = OUTLINED_FUNCTION_34(v46, (uint64_t)qword_1EBC7A520);
      os_log_type_t v47 = sub_1C9BEDC78();
      if (os_log_type_enabled(v24, v47))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_39_1(&dword_1C95F9000, v48, v49, "SimpleDisambiguationPromptFlow received cancel action from strategy. Transitioning to cancelled state.");
        OUTLINED_FUNCTION_11_4();
      }
      goto LABEL_7;
    }
    if (v54 == 1)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_1C9BECF88();
      unint64_t v36 = OUTLINED_FUNCTION_34(v35, (uint64_t)qword_1EBC7A520);
      os_log_type_t v37 = sub_1C9BEDC78();
      if (os_log_type_enabled(v36, v37))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_161(&dword_1C95F9000, v38, v39, "SimpleDisambiguationPromptFlow received handle action from strategy. Transitioning to responseReceived state.");
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v28 = v53;
      sub_1C98C83FC((uint64_t)a1, v53, (void (*)(void))type metadata accessor for Input);
      OUTLINED_FUNCTION_55_14();
LABEL_8:
      swift_storeEnumTagMultiPayload();
      sub_1C9A8A7FC(v28);
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1C9BECF88();
    uint64_t v30 = OUTLINED_FUNCTION_34(v50, (uint64_t)qword_1EBC7A520);
    os_log_type_t v31 = sub_1C9BEDC78();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v51 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v51);
      uint64_t v33 = "SimpleDisambiguationPromptFlow received ignore action from strategy. Ignoring.";
      goto LABEL_13;
    }
  }
  else
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1C9BECF88();
    uint64_t v30 = OUTLINED_FUNCTION_34(v29, (uint64_t)qword_1EBC7A520);
    os_log_type_t v31 = sub_1C9BEDC78();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v32);
      uint64_t v33 = "SimpleDisambiguationPromptFlow received input but is not in the promptSent state. Ignoring.";
LABEL_13:
      _os_log_impl(&dword_1C95F9000, v30, v31, v33, a1, 2u);
      OUTLINED_FUNCTION_11_4();
    }
  }

  return 0;
}

void sub_1C9A8AFFC(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v5 = v4;
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(a1, a2, v5, WitnessTable);
}

uint64_t sub_1C9A8B070()
{
  OUTLINED_FUNCTION_24();
  v1[6] = v2;
  v1[7] = v0;
  uint64_t v3 = *v0;
  type metadata accessor for Input(0);
  v1[8] = swift_task_alloc();
  v1[9] = *(void *)(v3 + 80);
  v1[10] = *(void *)(v3 + 88);
  uint64_t v4 = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A8B198()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 56) + *(void *)(**(void **)(v0 + 56) + 120);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C9BECF88();
      uint64_t v18 = (void *)OUTLINED_FUNCTION_34(v17, (uint64_t)qword_1EBC7A520);
      os_log_type_t v19 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v19))
      {
        uint64_t v20 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v20);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v21, v22, "SimpleDisambiguationPromptFlow could not make out user response. Re-prompting.");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 184) = v23;
      *uint64_t v23 = v24;
      v23[1] = sub_1C9A8BDD0;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_6_11();
      return sub_1C9A8D784(v25);
    case 2u:
      uint64_t v27 = OUTLINED_FUNCTION_75_12();
      v28(v27);
      goto LABEL_18;
    case 3u:

      goto LABEL_18;
    case 4u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C9BECF88();
      os_log_type_t v31 = (void *)OUTLINED_FUNCTION_34(v30, (uint64_t)qword_1EBC7A520);
      os_log_type_t v32 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v32))
      {
        uint64_t v33 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v33);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v34, v35, "SimpleDisambiguationPromptFlow sending prompt for disambiguation");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 120) = v36;
      *unint64_t v36 = v37;
      v36[1] = sub_1C9A8B97C;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_6_11();
      return sub_1C9A8C220(v38);
    case 5u:
LABEL_18:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1C9BECF88();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EBC7A520);
      sub_1C9BEC838();
    case 6u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C9BECF88();
      v41 = (void *)OUTLINED_FUNCTION_34(v40, (uint64_t)qword_1EBC7A520);
      os_log_type_t v42 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v42))
      {
        uint64_t v43 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v43);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v44, v45, "SimpleDisambiguationPromptFlow received an empty parse. Re-prompting.");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 168) = v46;
      *uint64_t v46 = v47;
      v46[1] = sub_1C9A8BCF4;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_6_11();
      uint64_t result = sub_1C9A8D538(v48);
      break;
    case 7u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v50 = sub_1C9BECF88();
      uint64_t v51 = (void *)OUTLINED_FUNCTION_34(v50, (uint64_t)qword_1EBC7A520);
      os_log_type_t v52 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v52))
      {
        uint64_t v53 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v53);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v54, v55, "SimpleDisambiguationPromptFlow sending cancellation response");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 136) = v56;
      *long long v56 = v57;
      v56[1] = sub_1C9A8BABC;
      OUTLINED_FUNCTION_194();
      OUTLINED_FUNCTION_6_11();
      uint64_t result = sub_1C9A8C4F4(v58);
      break;
    default:
      sub_1C9729480(*(void *)(v0 + 112), *(void *)(v0 + 64));
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1C9BECF88();
      uint64_t v6 = (void *)OUTLINED_FUNCTION_34(v5, (uint64_t)qword_1EBC7A520);
      os_log_type_t v7 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v7))
      {
        uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v8);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v9, v10, "SimpleDisambiguationPromptFlow parsing response from user");
        OUTLINED_FUNCTION_11_4();
      }

      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 152) = v11;
      *uint64_t v11 = v12;
      v11[1] = sub_1C9A8BB98;
      OUTLINED_FUNCTION_6_11();
      uint64_t result = sub_1C9A8C860(v13, v14);
      break;
  }
  return result;
}

uint64_t sub_1C9A8B97C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A8BA58()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_20_56();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9A8BABC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 144) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A8BB98()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 160) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A8BC74()
{
  OUTLINED_FUNCTION_24();
  sub_1C98C83A4(*(void *)(v0 + 64), (void (*)(void))type metadata accessor for Input);
  OUTLINED_FUNCTION_20_56();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9A8BCF4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 176) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A8BDD0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A8BEAC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = OUTLINED_FUNCTION_75_12();
  v1(v0);
  OUTLINED_FUNCTION_20_56();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

void sub_1C9A8BF18()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = *(void **)(v1 + 128);
  OUTLINED_FUNCTION_5_79();
  id v3 = v2;
  sub_1C9A8A7FC(v0);
}

void sub_1C9A8BFAC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = *(void **)(v1 + 144);
  OUTLINED_FUNCTION_5_79();
  id v3 = v2;
  sub_1C9A8A7FC(v0);
}

void sub_1C9A8C040()
{
  OUTLINED_FUNCTION_33();
  sub_1C98C83A4(*(void *)(v1 + 64), (void (*)(void))type metadata accessor for Input);
  uint64_t v2 = *(void **)(v1 + 160);
  OUTLINED_FUNCTION_5_79();
  id v3 = v2;
  sub_1C9A8A7FC(v0);
}

void sub_1C9A8C0F0()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = *(void **)(v1 + 176);
  OUTLINED_FUNCTION_5_79();
  id v3 = v2;
  sub_1C9A8A7FC(v0);
}

void sub_1C9A8C184()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = OUTLINED_FUNCTION_75_12();
  v3(v2);
  uint64_t v4 = *(void **)(v1 + 192);
  OUTLINED_FUNCTION_5_79();
  id v5 = v4;
  sub_1C9A8A7FC(v0);
}

uint64_t sub_1C9A8C220(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  v2[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A8C2E0, 0, 0);
}

uint64_t sub_1C9A8C2E0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9_68();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_55_3(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A8C388;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A8C388()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9A8C46C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 80);
  swift_storeEnumTagMultiPayload();
  sub_1C9A8A7FC(v1);
}

uint64_t sub_1C9A8C4F4(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = *v1;
  v2[9] = *(void *)(*v1 + 80);
  v2[10] = *(void *)(v3 + 88);
  v2[11] = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  v2[12] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A8C5BC, 0, 0);
}

uint64_t sub_1C9A8C5BC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9_68();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A8C668;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A8C668()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 112) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9A8C74C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 96);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_35_34();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1C9A8A7FC(v1);
}

uint64_t sub_1C9A8C804()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9A8C860(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  uint64_t v4 = *v2;
  v3[16] = *(void *)(*v2 + 80);
  v3[17] = *(void *)(v4 + 88);
  v3[18] = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  v3[19] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[20] = AssociatedTypeWitness;
  uint64_t v6 = sub_1C9BEDEE8();
  v3[21] = v6;
  v3[22] = *(void *)(v6 - 8);
  v3[23] = swift_task_alloc();
  v3[24] = *(void *)(AssociatedTypeWitness - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A8CA28, 0, 0);
}

uint64_t sub_1C9A8CA28()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0[15] + 24);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0[17] + 32)
                                                                           + **(int **)(v0[17] + 32));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[28] = v2;
  void *v2 = v3;
  v2[1] = sub_1C9A8CB20;
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[17];
  uint64_t v7 = v0[14];
  return v9(v4, v7, v1, v5, v6);
}

uint64_t sub_1C9A8CB20()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 232) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9A8CBFC()
{
  uint64_t v27 = v1;
  uint64_t v2 = v1[23];
  uint64_t v3 = v1[20];
  if (__swift_getEnumTagSinglePayload(v2, 1, v3) == 1)
  {
    (*(void (**)(uint64_t, void))(v1[22] + 8))(v2, v1[21]);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C9BECF88();
    uint64_t v5 = OUTLINED_FUNCTION_34(v4, (uint64_t)qword_1EBC7A520);
    os_log_type_t v6 = sub_1C9BEDC78();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v7);
      _os_log_impl(&dword_1C95F9000, v5, v6, "SimpleDisambiguationPromptFlow received no chosen item. Returning unanswered.", v0, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v8 = v1[19];

    type metadata accessor for PromptResult();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1C9A8A7FC(v8);
  }
  (*(void (**)(void, uint64_t, uint64_t))(v1[24] + 32))(v1[27], v2, v3);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v9 = v1[26];
  uint64_t v10 = v1[27];
  uint64_t v11 = v1[24];
  uint64_t v12 = v1[20];
  uint64_t v13 = sub_1C9BECF88();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v25(v9, v10, v12);
  uint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC78();
  BOOL v16 = OUTLINED_FUNCTION_13(v15);
  uint64_t v17 = v1[26];
  if (v16)
  {
    uint64_t v18 = v1[24];
    uint64_t v19 = v1[25];
    uint64_t v20 = v1[20];
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    v25(v19, v17, v20);
    uint64_t v22 = sub_1C9BED5D8();
    v1[12] = sub_1C95FF228(v22, v23, &v26);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v20);
    _os_log_impl(&dword_1C95F9000, v14, (os_log_type_t)v9, "SimpleDisambiguationPromptFlow received a chosen item from the user (%s). Returning with answer.", v21, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    (*(void (**)(void, void))(v1[24] + 8))(v1[26], v1[20]);
  }

  uint64_t v24 = v1[19];
  v25(v24, v1[27], v1[20]);
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1C9A8A7FC(v24);
}

uint64_t sub_1C9A8D010()
{
  unint64_t v23 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[29];
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[29];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1C9BEE6E8();
    v0[11] = sub_1C95FF228(v10, v11, &v22);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "SimpleDisambiguationPromptFlow encountered an error while trying to parse user input: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v12 = v0[29];
  uint64_t v13 = (void *)v0[15];
  uint64_t v14 = v13[7];
  uint64_t v15 = v13[8];
  __swift_project_boxed_opaque_existential_1(v13 + 4, v14);
  uint64_t v16 = swift_task_alloc();
  v0[30] = v16;
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v12;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[31] = v17;
  *uint64_t v17 = v18;
  v17[1] = sub_1C9A8D2A0;
  uint64_t v19 = OUTLINED_FUNCTION_246();
  return sub_1C962F1B0(v19, v20, v16, v14, v15);
}

uint64_t sub_1C9A8D2A0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *id v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 256) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9A8D390()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 152);
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 1;
  type metadata accessor for PromptResult();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  id v3 = v1;
  sub_1C9A8A7FC(v2);
}

uint64_t sub_1C9A8D47C()
{
  OUTLINED_FUNCTION_70();
  uint64_t v1 = *(void **)(v0 + 232);
  swift_task_dealloc();
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t sub_1C9A8D538(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  v2[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A8D5F8, 0, 0);
}

uint64_t sub_1C9A8D5F8()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9_68();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_55_3(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A8D6A0;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A8D6A0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (!v0) {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A8D784(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for SimpleDisambiguationPromptFlow.State();
  v2[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9A8D844, 0, 0);
}

uint64_t sub_1C9A8D844()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_9_68();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_55_3(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9A8D6A0;
  uint64_t v3 = OUTLINED_FUNCTION_27();
  return sub_1C962F1B0(v3, v4, v5, v6, v7);
}

uint64_t sub_1C9A8D8EC(uint64_t a1, void *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = *a2;
  return MEMORY[0x1F4188298](sub_1C9A8D934, 0, 0);
}

uint64_t sub_1C9A8D934()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_29_34();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96DD284;
  uint64_t v3 = OUTLINED_FUNCTION_16_52();
  return v4(v3);
}

uint64_t sub_1C9A8DA14(uint64_t a1, void *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = *a2;
  return MEMORY[0x1F4188298](sub_1C9A8DA5C, 0, 0);
}

uint64_t sub_1C9A8DA5C()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_29_34();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_16_52();
  return v4(v3);
}

uint64_t sub_1C9A8DB3C(uint64_t a1, void *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = *a2;
  return MEMORY[0x1F4188298](sub_1C9A8DB84, 0, 0);
}

uint64_t sub_1C9A8DB84()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_29_34();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_35_1(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C96ED14C;
  uint64_t v3 = OUTLINED_FUNCTION_16_52();
  return v4(v3);
}

uint64_t sub_1C9A8DC64(uint64_t a1, void *a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = *a2;
  return MEMORY[0x1F4188298](sub_1C9A8DCAC, 0, 0);
}

uint64_t sub_1C9A8DCAC()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 64) + **(int **)(v2 + 64));
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_35_1(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C96ED14C;
  uint64_t v7 = *(void *)(v0 + 16);
  return v9(v7, v3, v2);
}

uint64_t sub_1C9A8DDA0(uint64_t a1, void *a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = *a2;
  return MEMORY[0x1F4188298](sub_1C9A8DDEC, 0, 0);
}

uint64_t sub_1C9A8DDEC()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = v0[5];
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 72) + **(int **)(v2 + 72));
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[6] = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_1C9A8DEEC;
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  return v9(v7, v6, v3, v2);
}

uint64_t sub_1C9A8DEEC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

unint64_t sub_1C9A8DFAC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1, v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  unint64_t result = 0x646574726174732ELL;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t result = 0x65646E7573696D2ELL;
      break;
    case 2:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t result = 0x74656C706D6F632ELL;
      break;
    case 3:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t result = 0x726F7272652ELL;
      break;
    case 4:
      return result;
    case 5:
      unint64_t result = 0x5374706D6F72702ELL;
      break;
    case 6:
      unint64_t result = 0x61507974706D652ELL;
      break;
    case 7:
      unint64_t result = 0x6C6C65636E61632ELL;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t result = 0xD000000000000011;
      break;
  }
  return result;
}

uint64_t sub_1C9A8E1F8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 120);
  type metadata accessor for SimpleDisambiguationPromptFlow.State();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t))(v2 + 8))(v1);
  return v0;
}

uint64_t sub_1C9A8E2AC()
{
  sub_1C9A8E1F8();
  OUTLINED_FUNCTION_4_0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SimpleDisambiguationPromptFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SimpleDisambiguationPromptFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9A8E314()
{
  uint64_t result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = type metadata accessor for PromptResult();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *sub_1C9A8E400(unsigned char *a1, unsigned __int8 *a2)
{
  uint64_t v258 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v263 = *(void *)(v258 + 64);
  uint64_t v234 = sub_1C9BEC028();
  uint64_t v245 = *(void *)(v234 - 8);
  uint64_t v233 = v245;
  int v2 = *(_DWORD *)(v245 + 80);
  uint64_t v231 = sub_1C9BEAC48();
  uint64_t v243 = *(void *)(v231 - 8);
  uint64_t v230 = v243;
  int v252 = *(_DWORD *)(v243 + 80) | v2;
  uint64_t v237 = sub_1C9BEAF18();
  uint64_t v241 = *(void *)(v237 - 8);
  uint64_t v262 = v241;
  int v256 = *(_DWORD *)(v241 + 80);
  uint64_t v236 = sub_1C9BEAE48();
  uint64_t v3 = *(void *)(v236 - 8);
  int v4 = *(_DWORD *)(v3 + 80);
  uint64_t v5 = v4;
  uint64_t v6 = v256 & 0xF8 | v4 | 7u;
  uint64_t v7 = sub_1C9BEC928();
  uint64_t v239 = *(void *)(v7 - 8);
  uint64_t v225 = v239;
  uint64_t v226 = v7;
  int v249 = *(_DWORD *)(v239 + 80);
  uint64_t v229 = sub_1C9BEC8F8();
  uint64_t v228 = *(void *)(v229 - 8);
  unint64_t v8 = *(void *)(v245 + 64);
  unint64_t v227 = v8 + 7;
  if (((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v8) {
    unint64_t v8 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v8 <= *(void *)(v243 + 64)) {
    unint64_t v8 = *(void *)(v243 + 64);
  }
  int v9 = v4;
  uint64_t v242 = *(void *)(v241 + 64) + v4;
  uint64_t v246 = v4;
  uint64_t v220 = v3;
  int v10 = *(_DWORD *)(v3 + 84);
  size_t v11 = *(void *)(v3 + 64);
  if (v10) {
    size_t v12 = *(void *)(v3 + 64);
  }
  else {
    size_t v12 = v11 + 1;
  }
  size_t __n = v12;
  size_t v13 = v12 + 7;
  uint64_t v221 = v242 & ~v5;
  unint64_t v14 = (v12 + 7 + v221) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v232 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v8 <= v232) {
    unint64_t v8 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v15 = v14 + 31;
  if (v8 <= (((((v15 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v8 = (((((v15 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v223 = *(void *)(v239 + 64);
  unsigned int v219 = *(_DWORD *)(v3 + 84);
  BOOL v16 = v10 != 0;
  unsigned int v17 = v10 - 1;
  if (!v16) {
    unsigned int v17 = 0;
  }
  unsigned int v218 = v17;
  unsigned int v222 = *(_DWORD *)(v262 + 84);
  if (v17 <= v222) {
    unsigned int v17 = *(_DWORD *)(v262 + 84);
  }
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  unsigned int v240 = v17;
  uint64_t v224 = v6 + 16;
  unint64_t v18 = v15 + ((v6 + 16 + ((v223 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v6);
  int v19 = *(_DWORD *)(v228 + 80);
  uint64_t v244 = v6;
  uint64_t v20 = (v252 | (v249 | v19)) & 0xF8 | v6;
  uint64_t v21 = v263 + v20;
  unint64_t v22 = (v18 & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 <= v22) {
    unint64_t v8 = v22;
  }
  unint64_t v23 = *(void *)(*(void *)(v229 - 8) + 64);
  if (v8 > v23) {
    unint64_t v23 = v8;
  }
  if (v23 <= 0x18) {
    uint64_t v24 = 24;
  }
  else {
    uint64_t v24 = v23;
  }
  unint64_t v264 = ((((v24 + (v21 & ~v20) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v26 + 64) <= 9uLL) {
    uint64_t v27 = 9;
  }
  else {
    uint64_t v27 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v28 = 8 * v27;
  if (v27 > 3) {
    goto LABEL_32;
  }
  unsigned int v29 = ((1 << v28) + 1) >> v28;
  uint64_t v30 = 2;
  if (v29 > 0xFFFD) {
    uint64_t v30 = 4;
  }
  if (v29 <= 0xFD) {
LABEL_32:
  }
    uint64_t v30 = 1;
  unint64_t v31 = v30 + v27;
  if (v31 <= v264) {
    unint64_t v31 = ((((v24 + (v21 & ~v20) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v31 <= 9) {
    unint64_t v31 = 9;
  }
  if (v31 > 3) {
    goto LABEL_41;
  }
  unsigned int v32 = ((1 << (8 * v31)) + 3) >> (8 * v31);
  uint64_t v33 = 2;
  if (v32 > 0xFFFB) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFB) {
LABEL_41:
  }
    uint64_t v33 = 1;
  unint64_t v34 = v33 + v31;
  int v35 = *(_DWORD *)(v258 + 80);
  int v36 = *(_DWORD *)(v26 + 80);
  int v37 = (v36 | v35) & 0xF8 | v20;
  int v38 = (v252 | v256 | v9 | v249 | v19 | v35 | v36) & 0x100000;
  if (v34 > 0x18 || v38 != 0 || v37 != 7)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  if (v27 > 3) {
    goto LABEL_54;
  }
  unsigned int v41 = ((1 << v28) + 1) >> v28;
  uint64_t v42 = 2;
  if (v41 > 0xFFFD) {
    uint64_t v42 = 4;
  }
  if (v41 <= 0xFD) {
LABEL_54:
  }
    uint64_t v42 = 1;
  unint64_t v43 = v42 + v27;
  if (v43 <= v264) {
    unint64_t v43 = ((((v24 + (v21 & ~v20) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v43 <= 9) {
    unint64_t v43 = 9;
  }
  if (v43 > 3) {
    goto LABEL_60;
  }
  unsigned int v45 = ((1 << (8 * v43)) + 3) >> (8 * v43);
  if (v45 > 0xFFFB)
  {
    unsigned int v44 = *(_DWORD *)&a2[v43];
  }
  else
  {
    if (v45 <= 0xFB)
    {
LABEL_60:
      unsigned int v44 = a2[v43];
      goto LABEL_65;
    }
    unsigned int v44 = *(unsigned __int16 *)&a2[v43];
  }
LABEL_65:
  unsigned int v46 = v44 - 4;
  if (v44 >= 4)
  {
    if (v27 > 3) {
      goto LABEL_70;
    }
    unsigned int v47 = ((1 << v28) + 1) >> v28;
    uint64_t v48 = 2;
    if (v47 > 0xFFFD) {
      uint64_t v48 = 4;
    }
    if (v47 <= 0xFD) {
LABEL_70:
    }
      uint64_t v48 = 1;
    unint64_t v49 = v48 + v27;
    if (v49 <= v264) {
      unint64_t v49 = ((((v24 + (v21 & ~v20) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v49 <= 9) {
      LODWORD(v49) = 9;
    }
    if (v49 <= 3) {
      uint64_t v50 = v49;
    }
    else {
      uint64_t v50 = 4;
    }
    switch(v50)
    {
      case 1:
        int v51 = *a2;
        goto LABEL_83;
      case 2:
        int v51 = *(unsigned __int16 *)a2;
        goto LABEL_83;
      case 3:
        int v51 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_83;
      case 4:
        int v51 = *(_DWORD *)a2;
LABEL_83:
        if (v49 < 4) {
          v51 |= v46 << (8 * v49);
        }
        unsigned int v44 = v51 + 4;
        break;
      default:
        break;
    }
  }
  size_t v255 = v11;
  size_t v257 = v13;
  uint64_t v52 = ~v20;
  uint64_t v53 = ~v244;
  switch(v44)
  {
    case 0u:
      uint64_t v54 = v27;
      uint64_t v247 = ~v246;
      size_t v250 = v24 + 1;
      char v253 = 8 * v27;
      uint64_t v55 = a1;
      (*(void (**)(unsigned char *))(v258 + 16))(a1);
      unint64_t v259 = (unint64_t)&a1[v21] & v52;
      long long v56 = (unsigned __int8 *)((unint64_t)&a2[v21] & v52);
      unsigned int v57 = v56[v24];
      unsigned int v58 = v57 - 10;
      uint64_t v59 = v24;
      if (v57 < 0xA)
      {
        unint64_t v61 = v264;
      }
      else
      {
        if (v24 <= 3) {
          uint64_t v60 = v24;
        }
        else {
          uint64_t v60 = 4;
        }
        unint64_t v61 = v264;
        switch(v60)
        {
          case 1:
            int v62 = *v56;
            goto LABEL_146;
          case 2:
            int v62 = *(unsigned __int16 *)v56;
            goto LABEL_146;
          case 3:
            int v62 = *(unsigned __int16 *)v56 | (v56[2] << 16);
            goto LABEL_146;
          case 4:
            int v62 = *(_DWORD *)v56;
LABEL_146:
            if (v24 < 4) {
              unsigned int v57 = (v62 | (v58 << (8 * v24))) + 10;
            }
            else {
              unsigned int v57 = v62 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v57)
      {
        case 0u:
          unint64_t v90 = v259;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v233 + 16))(v259, v56, v234);
          *(unsigned char *)(v259 + v24) = 0;
          goto LABEL_263;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v233 + 16))(v259, v56, v234);
          *(void *)((v227 + v259) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v56[v227] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v259 + v24) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v90 = v259;
          *(void *)unint64_t v259 = *(void *)v56;
          *(void *)(v259 + 8) = *((void *)v56 + 1);
          *(void *)(v259 + 16) = *((void *)v56 + 2);
          *(unsigned char *)(v259 + v24) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_242;
        case 3u:
          unint64_t v90 = v259;
          *(void *)unint64_t v259 = *(void *)v56;
          *(unsigned char *)(v259 + v24) = 3;
          swift_unknownObjectRetain();
          goto LABEL_263;
        case 4u:
          unint64_t v90 = v259;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v230 + 16))(v259, v56, v231);
          char v107 = 4;
          goto LABEL_207;
        case 5u:
          v108 = *(void **)v56;
          unint64_t v90 = v259;
          *(void *)unint64_t v259 = *(void *)v56;
          char v109 = 5;
          goto LABEL_262;
        case 6u:
          uint64_t v110 = v24;
          unint64_t v90 = v259;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v262 + 16))(v259, v56, v237);
          v111 = (void *)((v242 + v259) & v247);
          v112 = (const void *)((unint64_t)&v56[v242] & v247);
          unint64_t v61 = v264;
          if (__swift_getEnumTagSinglePayload((uint64_t)v112, 1, v236))
          {
            memcpy(v111, v112, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v220 + 16))(v111, v112, v236);
            __swift_storeEnumTagSinglePayload((uint64_t)v111, 0, 1, v236);
          }
          v142 = (void *)(((unint64_t)v111 + v257) & 0xFFFFFFFFFFFFFFF8);
          v143 = (void *)(((unint64_t)v112 + v257) & 0xFFFFFFFFFFFFFFF8);
          void *v142 = *v143;
          v142[1] = v143[1];
          unint64_t v144 = ((unint64_t)v142 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v145 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v146 = *(_DWORD *)v145;
          *(unsigned char *)(v144 + 4) = *(unsigned char *)(v145 + 4);
          *(_DWORD *)unint64_t v144 = v146;
          *(unsigned char *)(v259 + v110) = 6;
          goto LABEL_242;
        case 7u:
          uint64_t v113 = v24;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v262 + 16))(v259, v56, v237);
          v114 = (void *)((v242 + v259) & v247);
          v115 = (const void *)((unint64_t)&v56[v242] & v247);
          unint64_t v61 = v264;
          if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v236))
          {
            memcpy(v114, v115, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v220 + 16))(v114, v115, v236);
            __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v236);
          }
          v147 = (void *)(((unint64_t)v114 + v257) & 0xFFFFFFFFFFFFFFF8);
          v148 = (void *)(((unint64_t)v115 + v257) & 0xFFFFFFFFFFFFFFF8);
          void *v147 = *v148;
          v147[1] = v148[1];
          unint64_t v149 = ((unint64_t)v147 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v150 = ((unint64_t)v148 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v151 = *(_DWORD *)v150;
          *(unsigned char *)(v149 + 4) = *(unsigned char *)(v150 + 4);
          *(_DWORD *)unint64_t v149 = v151;
          v152 = (void *)(((v259 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          v153 = (void *)((((unint64_t)v56 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          void *v152 = *v153;
          v152[1] = v153[1];
          v154 = (void *)(((unint64_t)v152 + 23) & 0xFFFFFFFFFFFFFFF8);
          v155 = (void *)(((unint64_t)v153 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v154 = *v155;
          v154[1] = v155[1];
          v156 = (void *)(((unint64_t)v154 + 23) & 0xFFFFFFFFFFFFFFF8);
          v157 = (void *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v156 = *v157;
          v156[1] = v157[1];
          *(unsigned char *)(v259 + v113) = 7;
          unint64_t v90 = v259;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_242:
          swift_bridgeObjectRetain();
          goto LABEL_263;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v225 + 16))(v259, v56, v226);
          v126 = (void *)(((v259 | 7) + v223) & 0xFFFFFFFFFFFFFFF8);
          v127 = (void *)((((unint64_t)v56 | 7) + v223) & 0xFFFFFFFFFFFFFFF8);
          void *v126 = *v127;
          v126[1] = v127[1];
          unint64_t v128 = ((unint64_t)v126 + v224) & v53;
          uint64_t v129 = ((unint64_t)v127 + v224) & v53;
          swift_bridgeObjectRetain();
          if (v222 == v240)
          {
            unint64_t v61 = v264;
            size_t v131 = __n;
            uint64_t v130 = v236;
            if (!__swift_getEnumTagSinglePayload(v129, v222, v237))
            {
              v132 = (const void *)((v242 + v129) & v247);
              goto LABEL_251;
            }
LABEL_231:
            memcpy((void *)v128, (const void *)v129, v232);
            uint64_t v140 = v221;
LABEL_260:
            size_t v178 = v131;
            goto LABEL_261;
          }
          unint64_t v61 = v264;
          v132 = (const void *)((v242 + v129) & v247);
          if (v218 == v240)
          {
            size_t v131 = __n;
            uint64_t v130 = v236;
            if (v219 < 2 || __swift_getEnumTagSinglePayload((v242 + v129) & v247, v219, v236) < 2) {
              goto LABEL_251;
            }
            goto LABEL_231;
          }
          unint64_t v174 = *(void *)((((unint64_t)v132 + v257) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v174 >= 0xFFFFFFFF) {
            LODWORD(v174) = -1;
          }
          size_t v131 = __n;
          uint64_t v130 = v236;
          if ((v174 + 1) >= 2) {
            goto LABEL_231;
          }
LABEL_251:
          uint64_t v265 = v59;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v262 + 16))(v128, v129, v237);
          v175 = (void *)((v242 + v128) & v247);
          if (__swift_getEnumTagSinglePayload((uint64_t)v132, 1, v130))
          {
            memcpy(v175, v132, v131);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v220 + 16))(v175, v132, v130);
            __swift_storeEnumTagSinglePayload((uint64_t)v175, 0, 1, v130);
          }
          size_t v178 = v255;
          v179 = (void *)(((unint64_t)v175 + v257) & 0xFFFFFFFFFFFFFFF8);
          v180 = (void *)(((unint64_t)v132 + v257) & 0xFFFFFFFFFFFFFFF8);
          void *v179 = *v180;
          v179[1] = v180[1];
          unint64_t v181 = ((unint64_t)v179 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v182 = ((unint64_t)v180 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v183 = *(_DWORD *)v182;
          *(unsigned char *)(v181 + 4) = *(unsigned char *)(v182 + 4);
          *(_DWORD *)unint64_t v181 = v183;
          swift_bridgeObjectRetain();
          uint64_t v59 = v265;
          uint64_t v140 = v221;
          if (!v219) {
            goto LABEL_260;
          }
LABEL_261:
          unint64_t v184 = (((v140 + v178 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          v185 = (void *)(((v128 | 7) + v184) & 0xFFFFFFFFFFFFFFF8);
          v108 = *(void **)(((v129 | 7) + v184) & 0xFFFFFFFFFFFFFFF8);
          void *v185 = v108;
          char v109 = 8;
          unint64_t v90 = v259;
LABEL_262:
          *(unsigned char *)(v90 + v59) = v109;
          id v186 = v108;
LABEL_263:
          size_t v106 = v250;
LABEL_264:
          v187 = (void *)((((unint64_t)v56 | 7) + v106) & 0xFFFFFFFFFFFFFFF8);
          v188 = (void *)(((v90 | 7) + v106) & 0xFFFFFFFFFFFFFFF8);
          void *v188 = *v187;
          unint64_t v189 = ((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v190 = ((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v191 = *(void *)(v190 + 24);
          swift_bridgeObjectRetain();
          if (v191 < 0xFFFFFFFF)
          {
            long long v192 = *(_OWORD *)v190;
            long long v193 = *(_OWORD *)(v190 + 16);
            *(void *)(v189 + 32) = *(void *)(v190 + 32);
            *(_OWORD *)unint64_t v189 = v192;
            *(_OWORD *)(v189 + 16) = v193;
          }
          else
          {
            *(void *)(v189 + 24) = v191;
            *(void *)(v189 + 32) = *(void *)(v190 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v191 - 8))(v189, v190, v191);
          }
          *(unsigned char *)(v189 + 40) = *(unsigned char *)(v190 + 40);
          if (v54 > 3) {
            goto LABEL_271;
          }
          unsigned int v194 = ((1 << v253) + 1) >> v253;
          uint64_t v195 = 2;
          if (v194 > 0xFFFD) {
            uint64_t v195 = 4;
          }
          if (v194 <= 0xFD) {
LABEL_271:
          }
            uint64_t v195 = 1;
          unint64_t v196 = v195 + v54;
          if (v196 <= v61) {
            unint64_t v196 = v61;
          }
          if (v196 <= 9) {
            unint64_t v196 = 9;
          }
          if (v196 <= 3)
          {
            unsigned int v197 = ((1 << (8 * v196)) + 3) >> (8 * v196);
            if (v197 > 0xFFFB)
            {
              *(_DWORD *)&a1[v196] = 0;
              return v55;
            }
            if (v197 > 0xFB)
            {
              *(_WORD *)&a1[v196] = 0;
              return v55;
            }
          }
          a1[v196] = 0;
          return v55;
        case 9u:
          unint64_t v90 = v259;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v228 + 16))(v259, v56, v229);
          char v107 = 9;
LABEL_207:
          *(unsigned char *)(v90 + v24) = v107;
          goto LABEL_263;
        default:
          unint64_t v90 = v259;
          size_t v106 = v24 + 1;
          memcpy((void *)v259, v56, v250);
          goto LABEL_264;
      }
    case 1u:
      uint64_t v63 = v27;
      uint64_t v248 = ~v246;
      size_t v251 = v24 + 1;
      char v254 = 8 * v27;
      uint64_t v55 = a1;
      (*(void (**)(unsigned char *))(v258 + 16))(a1);
      unint64_t v260 = (unint64_t)&a1[v21] & v52;
      v64 = (unsigned __int8 *)((unint64_t)&a2[v21] & v52);
      unsigned int v65 = v64[v24];
      unsigned int v66 = v65 - 10;
      uint64_t v67 = v24;
      if (v65 < 0xA)
      {
        unint64_t v69 = v264;
      }
      else
      {
        if (v24 <= 3) {
          uint64_t v68 = v24;
        }
        else {
          uint64_t v68 = 4;
        }
        unint64_t v69 = v264;
        switch(v68)
        {
          case 1:
            int v70 = *v64;
            goto LABEL_154;
          case 2:
            int v70 = *(unsigned __int16 *)v64;
            goto LABEL_154;
          case 3:
            int v70 = *(unsigned __int16 *)v64 | (v64[2] << 16);
            goto LABEL_154;
          case 4:
            int v70 = *(_DWORD *)v64;
LABEL_154:
            if (v24 < 4) {
              unsigned int v65 = (v70 | (v66 << (8 * v24))) + 10;
            }
            else {
              unsigned int v65 = v70 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 0u:
          unint64_t v91 = v260;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v233 + 16))(v260, v64, v234);
          *(unsigned char *)(v260 + v24) = 0;
          goto LABEL_287;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v233 + 16))(v260, v64, v234);
          *(void *)((v227 + v260) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v64[v227] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v260 + v24) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v91 = v260;
          *(void *)unint64_t v260 = *(void *)v64;
          *(void *)(v260 + 8) = *((void *)v64 + 1);
          *(void *)(v260 + 16) = *((void *)v64 + 2);
          *(unsigned char *)(v260 + v24) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_247;
        case 3u:
          unint64_t v91 = v260;
          *(void *)unint64_t v260 = *(void *)v64;
          *(unsigned char *)(v260 + v24) = 3;
          swift_unknownObjectRetain();
          goto LABEL_287;
        case 4u:
          unint64_t v91 = v260;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v230 + 16))(v260, v64, v231);
          char v117 = 4;
          goto LABEL_219;
        case 5u:
          v118 = *(void **)v64;
          unint64_t v91 = v260;
          *(void *)unint64_t v260 = *(void *)v64;
          char v119 = 5;
          goto LABEL_286;
        case 6u:
          uint64_t v120 = v24;
          unint64_t v91 = v260;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v262 + 16))(v260, v64, v237);
          v121 = (void *)((v242 + v260) & v248);
          v122 = (const void *)((unint64_t)&v64[v242] & v248);
          unint64_t v69 = v264;
          if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v236))
          {
            memcpy(v121, v122, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v220 + 16))(v121, v122, v236);
            __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v236);
          }
          v158 = (void *)(((unint64_t)v121 + v257) & 0xFFFFFFFFFFFFFFF8);
          v159 = (void *)(((unint64_t)v122 + v257) & 0xFFFFFFFFFFFFFFF8);
          void *v158 = *v159;
          v158[1] = v159[1];
          unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v161 = ((unint64_t)v159 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v162 = *(_DWORD *)v161;
          *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
          *(_DWORD *)unint64_t v160 = v162;
          *(unsigned char *)(v260 + v120) = 6;
          goto LABEL_247;
        case 7u:
          uint64_t v123 = v24;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v262 + 16))(v260, v64, v237);
          v124 = (void *)((v242 + v260) & v248);
          v125 = (const void *)((unint64_t)&v64[v242] & v248);
          unint64_t v69 = v264;
          if (__swift_getEnumTagSinglePayload((uint64_t)v125, 1, v236))
          {
            memcpy(v124, v125, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v220 + 16))(v124, v125, v236);
            __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v236);
          }
          v163 = (void *)(((unint64_t)v124 + v257) & 0xFFFFFFFFFFFFFFF8);
          v164 = (void *)(((unint64_t)v125 + v257) & 0xFFFFFFFFFFFFFFF8);
          void *v163 = *v164;
          v163[1] = v164[1];
          unint64_t v165 = ((unint64_t)v163 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v166 = ((unint64_t)v164 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v167 = *(_DWORD *)v166;
          *(unsigned char *)(v165 + 4) = *(unsigned char *)(v166 + 4);
          *(_DWORD *)unint64_t v165 = v167;
          v168 = (void *)(((v260 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          v169 = (void *)((((unint64_t)v64 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          void *v168 = *v169;
          v168[1] = v169[1];
          v170 = (void *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8);
          v171 = (void *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v170 = *v171;
          v170[1] = v171[1];
          v172 = (void *)(((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8);
          v173 = (void *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v172 = *v173;
          v172[1] = v173[1];
          *(unsigned char *)(v260 + v123) = 7;
          unint64_t v91 = v260;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_247:
          swift_bridgeObjectRetain();
          goto LABEL_287;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v225 + 16))(v260, v64, v226);
          v133 = (void *)(((v260 | 7) + v223) & 0xFFFFFFFFFFFFFFF8);
          v134 = (void *)((((unint64_t)v64 | 7) + v223) & 0xFFFFFFFFFFFFFFF8);
          void *v133 = *v134;
          v133[1] = v134[1];
          unint64_t v135 = ((unint64_t)v133 + v224) & v53;
          uint64_t v136 = ((unint64_t)v134 + v224) & v53;
          swift_bridgeObjectRetain();
          if (v222 == v240)
          {
            unint64_t v69 = v264;
            size_t v138 = __n;
            uint64_t v137 = v236;
            if (!__swift_getEnumTagSinglePayload(v136, v222, v237))
            {
              v139 = (const void *)((v242 + v136) & v248);
              goto LABEL_256;
            }
          }
          else
          {
            unint64_t v69 = v264;
            v139 = (const void *)((v242 + v136) & v248);
            if (v218 == v240)
            {
              size_t v138 = __n;
              uint64_t v137 = v236;
              if (v219 < 2 || __swift_getEnumTagSinglePayload((v242 + v136) & v248, v219, v236) < 2) {
                goto LABEL_256;
              }
            }
            else
            {
              unint64_t v176 = *(void *)((((unint64_t)v139 + v257) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v176 >= 0xFFFFFFFF) {
                LODWORD(v176) = -1;
              }
              size_t v138 = __n;
              uint64_t v137 = v236;
              if ((v176 + 1) < 2)
              {
LABEL_256:
                uint64_t v266 = v67;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v262 + 16))(v135, v136, v237);
                v177 = (void *)((v242 + v135) & v248);
                if (__swift_getEnumTagSinglePayload((uint64_t)v139, 1, v137))
                {
                  memcpy(v177, v139, v138);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v220 + 16))(v177, v139, v137);
                  __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v137);
                }
                size_t v198 = v255;
                v199 = (void *)(((unint64_t)v177 + v257) & 0xFFFFFFFFFFFFFFF8);
                v200 = (void *)(((unint64_t)v139 + v257) & 0xFFFFFFFFFFFFFFF8);
                void *v199 = *v200;
                v199[1] = v200[1];
                unint64_t v201 = ((unint64_t)v199 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v202 = ((unint64_t)v200 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v203 = *(_DWORD *)v202;
                *(unsigned char *)(v201 + 4) = *(unsigned char *)(v202 + 4);
                *(_DWORD *)unint64_t v201 = v203;
                swift_bridgeObjectRetain();
                uint64_t v67 = v266;
                uint64_t v141 = v221;
                if (!v219) {
                  goto LABEL_284;
                }
LABEL_285:
                unint64_t v204 = (((v141 + v198 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                v205 = (void *)(((v135 | 7) + v204) & 0xFFFFFFFFFFFFFFF8);
                v118 = *(void **)(((v136 | 7) + v204) & 0xFFFFFFFFFFFFFFF8);
                void *v205 = v118;
                char v119 = 8;
                unint64_t v91 = v260;
LABEL_286:
                *(unsigned char *)(v91 + v67) = v119;
                id v206 = v118;
LABEL_287:
                size_t v116 = v251;
LABEL_288:
                v207 = (void *)((((unint64_t)v64 | 7) + v116) & 0xFFFFFFFFFFFFFFF8);
                v208 = (void *)(((v91 | 7) + v116) & 0xFFFFFFFFFFFFFFF8);
                void *v208 = *v207;
                unint64_t v209 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v210 = ((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v211 = *(void *)(v210 + 24);
                swift_bridgeObjectRetain();
                if (v211 < 0xFFFFFFFF)
                {
                  long long v212 = *(_OWORD *)v210;
                  long long v213 = *(_OWORD *)(v210 + 16);
                  *(void *)(v209 + 32) = *(void *)(v210 + 32);
                  *(_OWORD *)unint64_t v209 = v212;
                  *(_OWORD *)(v209 + 16) = v213;
                }
                else
                {
                  *(void *)(v209 + 24) = v211;
                  *(void *)(v209 + 32) = *(void *)(v210 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v211 - 8))(v209, v210, v211);
                }
                *(unsigned char *)(v209 + 40) = *(unsigned char *)(v210 + 40);
                if (v63 > 3) {
                  goto LABEL_295;
                }
                unsigned int v214 = ((1 << v254) + 1) >> v254;
                uint64_t v215 = 2;
                if (v214 > 0xFFFD) {
                  uint64_t v215 = 4;
                }
                if (v214 <= 0xFD) {
LABEL_295:
                }
                  uint64_t v215 = 1;
                unint64_t v78 = v215 + v63;
                if (v78 <= v69) {
                  unint64_t v78 = v69;
                }
                if (v78 <= 9) {
                  unint64_t v78 = 9;
                }
                if (v78 > 3) {
                  goto LABEL_303;
                }
                int v86 = 1;
                unsigned int v216 = ((1 << (8 * v78)) + 3) >> (8 * v78);
                if (v216 <= 0xFFFB)
                {
                  if (v216 <= 0xFB)
                  {
LABEL_303:
                    char v80 = 1;
                    goto LABEL_304;
                  }
LABEL_306:
                  *(_WORD *)&v55[v78] = v86;
                  return v55;
                }
LABEL_305:
                *(_DWORD *)&v55[v78] = v86;
                return v55;
              }
            }
          }
          memcpy((void *)v135, (const void *)v136, v232);
          uint64_t v141 = v221;
LABEL_284:
          size_t v198 = v138;
          goto LABEL_285;
        case 9u:
          unint64_t v91 = v260;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v228 + 16))(v260, v64, v229);
          char v117 = 9;
LABEL_219:
          *(unsigned char *)(v91 + v24) = v117;
          goto LABEL_287;
        default:
          unint64_t v91 = v260;
          size_t v116 = v24 + 1;
          memcpy((void *)v260, v64, v251);
          goto LABEL_288;
      }
    case 2u:
      uint64_t v55 = a1;
      if (v27 > 3) {
        goto LABEL_102;
      }
      unsigned int v71 = ((1 << v28) + 1) >> v28;
      if (v71 > 0xFFFD)
      {
        unsigned int v72 = *(_DWORD *)&a2[v27];
      }
      else if (v71 > 0xFD)
      {
        unsigned int v72 = *(unsigned __int16 *)&a2[v27];
      }
      else
      {
LABEL_102:
        unsigned int v72 = a2[v27];
      }
      unsigned int v87 = v72 - 2;
      if (v72 >= 2)
      {
        if (v27 <= 3) {
          uint64_t v88 = v27;
        }
        else {
          uint64_t v88 = 4;
        }
        switch(v88)
        {
          case 1:
            int v89 = *a2;
            goto LABEL_162;
          case 2:
            int v89 = *(unsigned __int16 *)a2;
            goto LABEL_162;
          case 3:
            int v89 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_162;
          case 4:
            int v89 = *(_DWORD *)a2;
LABEL_162:
            if (v27 < 4) {
              v89 |= v87 << v28;
            }
            unsigned int v72 = v89 + 2;
            break;
          default:
            break;
        }
      }
      if (v72 == 1)
      {
        uint64_t v96 = *(void *)a2;
        uint64_t v97 = v27;
        id v98 = *(id *)a2;
        unint64_t v93 = v264;
        uint64_t v94 = v97;
        *(void *)a1 = v96;
        a1[8] = a2[8];
        if (v97 <= 3)
        {
          unsigned int v99 = ((1 << v28) + 1) >> v28;
          if (v99 > 0xFFFD)
          {
            *(_DWORD *)&a1[v97] = 1;
            goto LABEL_182;
          }
          if (v99 > 0xFD)
          {
            *(_WORD *)&a1[v97] = 1;
            goto LABEL_182;
          }
        }
        a1[v97] = 1;
      }
      else
      {
        if (!v72)
        {
          uint64_t v92 = v27;
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v26 + 16))(a1, a2, AssociatedTypeWitness);
          unint64_t v93 = v264;
          uint64_t v94 = v92;
          if (v92 > 3)
          {
LABEL_170:
            a1[v92] = 0;
            goto LABEL_181;
          }
          unsigned int v95 = ((1 << v28) + 1) >> v28;
          if (v95 > 0xFFFD)
          {
            *(_DWORD *)&a1[v92] = 0;
          }
          else
          {
            if (v95 <= 0xFD) {
              goto LABEL_170;
            }
            *(_WORD *)&a1[v92] = 0;
          }
LABEL_182:
          unsigned int v103 = ((1 << v28) + 1) >> v28;
          uint64_t v104 = 2;
          if (v103 > 0xFFFD) {
            uint64_t v104 = 4;
          }
          if (v103 > 0xFD)
          {
LABEL_186:
            unint64_t v78 = v104 + v94;
            if (v78 <= v93) {
              unint64_t v78 = v93;
            }
            if (v78 <= 9) {
              unint64_t v78 = 9;
            }
            if (v78 <= 3)
            {
              unsigned int v105 = ((1 << (8 * v78)) + 3) >> (8 * v78);
              if (v105 > 0xFFFB)
              {
                int v86 = 2;
                goto LABEL_305;
              }
              if (v105 > 0xFB)
              {
                LOWORD(v86) = 2;
                goto LABEL_306;
              }
            }
            char v80 = 2;
LABEL_304:
            v55[v78] = v80;
            return v55;
          }
LABEL_185:
          uint64_t v104 = 1;
          goto LABEL_186;
        }
        if (v27 > 3) {
          goto LABEL_179;
        }
        unsigned int v100 = ((1 << v28) + 1) >> v28;
        uint64_t v101 = 2;
        if (v100 > 0xFFFD) {
          uint64_t v101 = 4;
        }
        if (v100 <= 0xFD) {
LABEL_179:
        }
          uint64_t v101 = 1;
        uint64_t v102 = v27;
        memcpy(a1, a2, v101 + v27);
        uint64_t v94 = v102;
        unint64_t v93 = v264;
      }
LABEL_181:
      if (v94 > 3) {
        goto LABEL_185;
      }
      goto LABEL_182;
    case 3u:
      id v73 = *(id *)a2;
      uint64_t v74 = v27;
      id v75 = *(id *)a2;
      uint64_t v55 = a1;
      *(void *)a1 = v73;
      a1[8] = a2[8];
      if (v74 > 3) {
        goto LABEL_107;
      }
      unsigned int v76 = ((1 << v28) + 1) >> v28;
      uint64_t v77 = 2;
      if (v76 > 0xFFFD) {
        uint64_t v77 = 4;
      }
      if (v76 <= 0xFD) {
LABEL_107:
      }
        uint64_t v77 = 1;
      unint64_t v78 = v77 + v74;
      if (v78 <= v264) {
        unint64_t v78 = v264;
      }
      if (v78 <= 9) {
        unint64_t v78 = 9;
      }
      if (v78 > 3) {
        goto LABEL_115;
      }
      unsigned int v79 = ((1 << (8 * v78)) + 3) >> (8 * v78);
      if (v79 > 0xFFFB)
      {
        int v86 = 3;
        goto LABEL_305;
      }
      if (v79 <= 0xFB)
      {
LABEL_115:
        char v80 = 3;
        goto LABEL_304;
      }
      LOWORD(v86) = 3;
      goto LABEL_306;
    default:
      if (v27 > 3) {
        goto LABEL_120;
      }
      unsigned int v81 = ((1 << v28) + 1) >> v28;
      uint64_t v82 = 2;
      if (v81 > 0xFFFD) {
        uint64_t v82 = 4;
      }
      if (v81 <= 0xFD) {
LABEL_120:
      }
        uint64_t v82 = 1;
      uint64_t v55 = a1;
      unint64_t v83 = v82 + v27;
      if (v83 <= v264) {
        unint64_t v83 = v264;
      }
      if (v83 <= 9) {
        unint64_t v83 = 9;
      }
      if (v83 > 3) {
        goto LABEL_129;
      }
      unsigned int v84 = ((1 << (8 * v83)) + 3) >> (8 * v83);
      uint64_t v85 = 2;
      if (v84 > 0xFFFB) {
        uint64_t v85 = 4;
      }
      if (v84 <= 0xFB) {
LABEL_129:
      }
        uint64_t v85 = 1;
      memcpy(a1, a2, v85 + v83);
      return v55;
  }
}

void sub_1C9A9004C(unsigned __int8 *a1)
{
  uint64_t v81 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v89 = *(void *)(v81 + 64);
  uint64_t v78 = sub_1C9BEC028();
  uint64_t v86 = *(void *)(v78 - 8);
  uint64_t v77 = v86;
  int v1 = *(_DWORD *)(v86 + 80);
  uint64_t v76 = sub_1C9BEAC48();
  uint64_t v88 = *(void *)(v76 - 8);
  int v82 = *(_DWORD *)(v88 + 80) | v1;
  uint64_t v79 = sub_1C9BEAF18();
  uint64_t v85 = *(void *)(v79 - 8);
  int v2 = *(_DWORD *)(v85 + 80) & 0xF8;
  uint64_t v80 = sub_1C9BEAE48();
  uint64_t v3 = *(void *)(v80 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v2 | v4 | 7;
  uint64_t v6 = sub_1C9BEC928();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v72 = v83;
  uint64_t v73 = v6;
  int v7 = *(_DWORD *)(v83 + 80);
  uint64_t v75 = sub_1C9BEC8F8();
  uint64_t v8 = v86;
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v9 = (v82 | (v7 | *(_DWORD *)(v74 + 80))) & 0xF8 | v5;
  uint64_t v87 = v89 + v9;
  uint64_t v10 = (v89 + v9) & ~v9;
  unint64_t v11 = *(void *)(v8 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v88 + 64)) {
    unint64_t v11 = *(void *)(v88 + 64);
  }
  uint64_t v12 = *(void *)(v85 + 64) + v4;
  uint64_t v90 = v4;
  uint64_t v68 = v3;
  unsigned int v13 = *(_DWORD *)(v3 + 84);
  if (v13) {
    uint64_t v14 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v3 + 64) + 1;
  }
  unint64_t v15 = (v14 + 7 + (v12 & ~v4)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v11 <= v16) {
    unint64_t v11 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v17 = v15 + 31;
  if (v11 <= (((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v11 = (((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v70 = *(void *)(v83 + 64);
  uint64_t v71 = v5 + 16;
  uint64_t v18 = v5;
  if (v13) {
    unsigned int v19 = v13 - 1;
  }
  else {
    unsigned int v19 = 0;
  }
  unsigned int v69 = *(_DWORD *)(v85 + 84);
  if (v19 <= v69) {
    unsigned int v20 = *(_DWORD *)(v85 + 84);
  }
  else {
    unsigned int v20 = v19;
  }
  if (v20 <= 0x7FFFFFFE) {
    unsigned int v20 = 2147483646;
  }
  unsigned int v84 = v20;
  unint64_t v21 = ((v17 + ((v5 + 16 + ((v70 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v11 <= v21) {
    unint64_t v11 = v21;
  }
  unint64_t v22 = *(void *)(*(void *)(v75 - 8) + 64);
  if (v11 > v22) {
    unint64_t v22 = v11;
  }
  if (v22 <= 0x18) {
    uint64_t v23 = 24;
  }
  else {
    uint64_t v23 = v22;
  }
  unint64_t v24 = ((((v23 + v10 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = 9;
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 9uLL) {
    uint64_t v26 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v27 = 8 * v26;
  if (v26 > 3) {
    goto LABEL_33;
  }
  unsigned int v28 = ((1 << v27) + 1) >> v27;
  uint64_t v29 = 2;
  if (v28 > 0xFFFD) {
    uint64_t v29 = 4;
  }
  if (v28 <= 0xFD) {
LABEL_33:
  }
    uint64_t v29 = 1;
  unint64_t v30 = v29 + v26;
  if (v30 <= v24) {
    unint64_t v30 = v24;
  }
  if (v30 <= 9) {
    unint64_t v30 = 9;
  }
  if (v30 > 3) {
    goto LABEL_39;
  }
  unsigned int v32 = ((1 << (8 * v30)) + 3) >> (8 * v30);
  if (v32 > 0xFFFB)
  {
    unsigned int v31 = *(_DWORD *)&a1[v30];
    goto LABEL_44;
  }
  if (v32 <= 0xFB) {
LABEL_39:
  }
    unsigned int v31 = a1[v30];
  else {
    unsigned int v31 = *(unsigned __int16 *)&a1[v30];
  }
LABEL_44:
  unsigned int v33 = v31 - 4;
  if (v31 >= 4)
  {
    if (v26 > 3) {
      goto LABEL_49;
    }
    unsigned int v34 = ((1 << v27) + 1) >> v27;
    uint64_t v35 = 2;
    if (v34 > 0xFFFD) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFD) {
LABEL_49:
    }
      uint64_t v35 = 1;
    unint64_t v36 = v35 + v26;
    if (v36 <= v24) {
      unint64_t v36 = v24;
    }
    if (v36 <= 9) {
      LODWORD(v36) = 9;
    }
    if (v36 <= 3) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 4;
    }
    switch(v37)
    {
      case 1:
        int v38 = *a1;
        goto LABEL_62;
      case 2:
        int v38 = *(unsigned __int16 *)a1;
        goto LABEL_62;
      case 3:
        int v38 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_62;
      case 4:
        int v38 = *(_DWORD *)a1;
LABEL_62:
        if (v36 < 4) {
          v38 |= v33 << (8 * v36);
        }
        unsigned int v31 = v38 + 4;
        break;
      default:
        break;
    }
  }
  uint64_t v39 = ~v9;
  uint64_t v40 = ~v90;
  uint64_t v41 = v23 + 1;
  switch(v31)
  {
    case 0u:
      unsigned int v91 = v13;
      (*(void (**)(void))(v81 + 8))();
      uint64_t v42 = (unsigned __int8 *)((unint64_t)&a1[v87] & v39);
      unsigned int v43 = v42[v23];
      unsigned int v44 = v43 - 10;
      if (v43 >= 0xA)
      {
        if (v23 <= 3) {
          uint64_t v45 = v23;
        }
        else {
          uint64_t v45 = 4;
        }
        switch(v45)
        {
          case 1:
            int v46 = *v42;
            goto LABEL_93;
          case 2:
            int v46 = *(unsigned __int16 *)v42;
            goto LABEL_93;
          case 3:
            int v46 = *(unsigned __int16 *)((unint64_t)&a1[v87] & v39) | (*(unsigned __int8 *)(((unint64_t)&a1[v87] & v39)
                                                                                                + 2) << 16);
            goto LABEL_93;
          case 4:
            int v46 = *(_DWORD *)v42;
LABEL_93:
            if (v23 < 4) {
              unsigned int v43 = (v46 | (v44 << (8 * v23))) + 10;
            }
            else {
              unsigned int v43 = v46 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v43)
      {
        case 0u:
          goto LABEL_104;
        case 1u:
          goto LABEL_105;
        case 2u:
          goto LABEL_106;
        case 3u:
          goto LABEL_107;
        case 4u:
          goto LABEL_108;
        case 5u:
          goto LABEL_109;
        case 6u:
          goto LABEL_110;
        case 7u:
          goto LABEL_113;
        case 8u:
          goto LABEL_119;
        case 9u:
          goto LABEL_117;
        default:
          goto LABEL_148;
      }
      goto LABEL_148;
    case 1u:
      unsigned int v91 = v13;
      (*(void (**)(void))(v81 + 8))();
      uint64_t v42 = (unsigned __int8 *)((unint64_t)&a1[v87] & v39);
      unsigned int v47 = v42[v23];
      unsigned int v48 = v47 - 10;
      if (v47 >= 0xA)
      {
        if (v23 <= 3) {
          uint64_t v49 = v23;
        }
        else {
          uint64_t v49 = 4;
        }
        switch(v49)
        {
          case 1:
            int v50 = *v42;
            goto LABEL_100;
          case 2:
            int v50 = *(unsigned __int16 *)v42;
            goto LABEL_100;
          case 3:
            int v50 = *(unsigned __int16 *)((unint64_t)&a1[v87] & v39) | (*(unsigned __int8 *)(((unint64_t)&a1[v87] & v39)
                                                                                                + 2) << 16);
            goto LABEL_100;
          case 4:
            int v50 = *(_DWORD *)v42;
LABEL_100:
            if (v23 < 4) {
              unsigned int v47 = (v50 | (v48 << (8 * v23))) + 10;
            }
            else {
              unsigned int v47 = v50 + 10;
            }
            break;
          default:
            goto LABEL_103;
        }
      }
      break;
    case 2u:
      if (v26 > 3) {
        goto LABEL_81;
      }
      unsigned int v51 = ((1 << v27) + 1) >> v27;
      if (v51 > 0xFFFD)
      {
        unsigned int v52 = *(_DWORD *)&a1[v26];
      }
      else if (v51 > 0xFD)
      {
        unsigned int v52 = *(unsigned __int16 *)&a1[v26];
      }
      else
      {
LABEL_81:
        unsigned int v52 = a1[v26];
      }
      unsigned int v53 = v52 - 2;
      if (v52 >= 2)
      {
        if (v26 <= 3) {
          uint64_t v54 = v26;
        }
        else {
          uint64_t v54 = 4;
        }
        switch(v54)
        {
          case 1:
            int v55 = *a1;
            goto LABEL_125;
          case 2:
            int v55 = *(unsigned __int16 *)a1;
            goto LABEL_125;
          case 3:
            int v55 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_125;
          case 4:
            int v55 = *(_DWORD *)a1;
LABEL_125:
            if (v26 < 4) {
              unsigned int v52 = (v55 | (v53 << v27)) + 2;
            }
            else {
              unsigned int v52 = v55 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v52 == 1)
      {
LABEL_133:
        unsigned int v65 = *(void **)a1;
      }
      else if (!v52)
      {
        v64 = *(void (**)(unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
        v64(a1, AssociatedTypeWitness);
      }
      return;
    case 3u:
      goto LABEL_133;
    default:
      return;
  }
LABEL_103:
  switch(v47)
  {
    case 0u:
LABEL_104:
      uint64_t v57 = v77;
      uint64_t v56 = v78;
      goto LABEL_118;
    case 1u:
LABEL_105:
      (*(void (**)(unsigned __int8 *, uint64_t))(v77 + 8))(v42, v78);
      swift_release();
      goto LABEL_148;
    case 2u:
LABEL_106:
      swift_bridgeObjectRelease();
      goto LABEL_116;
    case 3u:
LABEL_107:
      swift_unknownObjectRelease();
      goto LABEL_148;
    case 4u:
LABEL_108:
      uint64_t v57 = v88;
      uint64_t v56 = v76;
      goto LABEL_118;
    case 5u:
LABEL_109:
      unsigned int v58 = *(void **)v42;
      goto LABEL_147;
    case 6u:
LABEL_110:
      (*(void (**)(unsigned __int8 *, uint64_t))(v85 + 8))(v42, v79);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v42[v12] & v40, 1, v80)) {
        (*(void (**)(unint64_t, uint64_t))(v68 + 8))((unint64_t)&v42[v12] & v40, v80);
      }
      goto LABEL_116;
    case 7u:
LABEL_113:
      (*(void (**)(unsigned __int8 *, uint64_t))(v85 + 8))(v42, v79);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v42[v12] & v40, 1, v80)) {
        (*(void (**)(unint64_t, uint64_t))(v68 + 8))((unint64_t)&v42[v12] & v40, v80);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_116:
      swift_bridgeObjectRelease();
      goto LABEL_148;
    case 8u:
LABEL_119:
      (*(void (**)(unsigned __int8 *, uint64_t))(v72 + 8))(v42, v73);
      unint64_t v59 = (((unint64_t)v42 | 7) + v70) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      unint64_t v60 = (v71 + v59) & ~v18;
      if (v69 == v84)
      {
        int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((v71 + v59) & ~v18, v69, v79);
        uint64_t v62 = v80;
        if (EnumTagSinglePayload) {
          goto LABEL_146;
        }
        uint64_t v63 = (v12 + v60) & v40;
        goto LABEL_143;
      }
      uint64_t v63 = (v12 + v60) & v40;
      uint64_t v62 = v80;
      if (v19 == v84)
      {
        if (v91 >= 2 && __swift_getEnumTagSinglePayload(v63, v91, v80) >= 2) {
          goto LABEL_146;
        }
        goto LABEL_143;
      }
      unint64_t v66 = *(void *)(((v14 + 7 + v63) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v66 >= 0xFFFFFFFF) {
        LODWORD(v66) = -1;
      }
      if ((v66 + 1) < 2)
      {
LABEL_143:
        (*(void (**)(unint64_t, uint64_t))(v85 + 8))(v60, v79);
        if (!__swift_getEnumTagSinglePayload(v63, 1, v62)) {
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v63, v62);
        }
        swift_bridgeObjectRelease();
      }
LABEL_146:
      unsigned int v58 = *(void **)(((v60 | 7) + v16) & 0xFFFFFFFFFFFFFFF8);
LABEL_147:

LABEL_148:
      swift_bridgeObjectRelease();
      unint64_t v67 = (((((unint64_t)v42 | 7) + v41) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v67 + 24) >= 0xFFFFFFFFuLL)
      {
        __swift_destroy_boxed_opaque_existential_1(v67);
      }
      return;
    case 9u:
LABEL_117:
      uint64_t v57 = v74;
      uint64_t v56 = v75;
LABEL_118:
      (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(v42, v56);
      goto LABEL_148;
    default:
      goto LABEL_148;
  }
}

unsigned char *sub_1C9A90D14(unsigned char *a1, unsigned __int8 *a2)
{
  uint64_t v230 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v243 = *(void *)(v230 + 64);
  uint64_t v227 = sub_1C9BEC028();
  uint64_t v239 = *(void *)(v227 - 8);
  uint64_t v226 = v239;
  int v2 = *(_DWORD *)(v239 + 80);
  uint64_t v225 = sub_1C9BEAC48();
  uint64_t v241 = *(void *)(v225 - 8);
  uint64_t v224 = v241;
  int v233 = *(_DWORD *)(v241 + 80) | v2;
  uint64_t v229 = sub_1C9BEAF18();
  uint64_t v237 = *(void *)(v229 - 8);
  uint64_t v249 = v237;
  int v3 = *(_DWORD *)(v237 + 80) & 0xF8;
  uint64_t v228 = sub_1C9BEAE48();
  uint64_t v4 = *(void *)(v228 - 8);
  uint64_t v5 = v4;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = v3 | v6 | 7;
  uint64_t v221 = sub_1C9BEC928();
  uint64_t v235 = *(void *)(v221 - 8);
  uint64_t v220 = v235;
  int v8 = *(_DWORD *)(v235 + 80);
  uint64_t v223 = sub_1C9BEC8F8();
  uint64_t v9 = v239;
  uint64_t v222 = *(void *)(v223 - 8);
  uint64_t v10 = (v233 | (v8 | *(_DWORD *)(v222 + 80))) & 0xF8 | v7;
  uint64_t v240 = v243 + v10;
  uint64_t v11 = (v243 + v10) & ~v10;
  unint64_t v12 = *(void *)(v9 + 64);
  unint64_t v234 = v12 + 7;
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v241 + 64)) {
    unint64_t v12 = *(void *)(v241 + 64);
  }
  uint64_t v242 = *(void *)(v237 + 64) + v6;
  uint64_t v244 = v6;
  uint64_t v216 = v4;
  int v13 = *(_DWORD *)(v4 + 84);
  size_t v14 = *(void *)(v4 + 64);
  size_t v214 = v14;
  if (!v13) {
    ++v14;
  }
  size_t v238 = v14;
  size_t v15 = v14 + 7;
  uint64_t v217 = v242 & ~v6;
  unint64_t v16 = (v14 + 7 + v217) & 0xFFFFFFFFFFFFFFF8;
  size_t v17 = (v16 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v17) {
    unint64_t v12 = (v16 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v18 = v16 + 31;
  if (v12 <= (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v12 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v218 = *(void *)(v235 + 64);
  uint64_t v219 = v7 + 16;
  uint64_t v19 = v3 | v6 | 7;
  uint64_t v20 = *(unsigned int *)(v249 + 84);
  unsigned int v215 = *(_DWORD *)(v5 + 84);
  BOOL v21 = v13 != 0;
  unsigned int v22 = v13 - 1;
  if (v21) {
    unsigned int v23 = v22;
  }
  else {
    unsigned int v23 = 0;
  }
  if (v23 <= v20) {
    unsigned int v24 = *(_DWORD *)(v249 + 84);
  }
  else {
    unsigned int v24 = v23;
  }
  if (v24 <= 0x7FFFFFFE) {
    unsigned int v24 = 2147483646;
  }
  unsigned int v236 = v24;
  unint64_t v25 = ((v18 + ((v7 + 16 + ((v218 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 <= v25) {
    unint64_t v12 = v25;
  }
  unint64_t v26 = *(void *)(*(void *)(v223 - 8) + 64);
  if (v12 > v26) {
    unint64_t v26 = v12;
  }
  if (v26 <= 0x18) {
    uint64_t v27 = 24;
  }
  else {
    uint64_t v27 = v26;
  }
  unint64_t v28 = ((((v27 + v11 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 9uLL) {
    uint64_t v30 = 9;
  }
  else {
    uint64_t v30 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v31 = 8 * v30;
  if (v30 > 3) {
    goto LABEL_33;
  }
  unsigned int v32 = ((1 << v31) + 1) >> v31;
  uint64_t v33 = 2;
  if (v32 > 0xFFFD) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFD) {
LABEL_33:
  }
    uint64_t v33 = 1;
  unint64_t v34 = v33 + v30;
  if (v34 <= v28) {
    unint64_t v34 = v28;
  }
  if (v34 <= 9) {
    unint64_t v34 = 9;
  }
  if (v34 > 3) {
    goto LABEL_39;
  }
  unsigned int v36 = ((1 << (8 * v34)) + 3) >> (8 * v34);
  if (v36 > 0xFFFB)
  {
    unsigned int v35 = *(_DWORD *)&a2[v34];
  }
  else
  {
    if (v36 <= 0xFB)
    {
LABEL_39:
      unsigned int v35 = a2[v34];
      goto LABEL_44;
    }
    unsigned int v35 = *(unsigned __int16 *)&a2[v34];
  }
LABEL_44:
  unsigned int v37 = v35 - 4;
  if (v35 >= 4)
  {
    if (v30 > 3) {
      goto LABEL_49;
    }
    unsigned int v38 = ((1 << v31) + 1) >> v31;
    uint64_t v39 = 2;
    if (v38 > 0xFFFD) {
      uint64_t v39 = 4;
    }
    if (v38 <= 0xFD) {
LABEL_49:
    }
      uint64_t v39 = 1;
    unint64_t v40 = v39 + v30;
    if (v40 <= v28) {
      unint64_t v40 = v28;
    }
    if (v40 <= 9) {
      LODWORD(v40) = 9;
    }
    if (v40 <= 3) {
      uint64_t v41 = v40;
    }
    else {
      uint64_t v41 = 4;
    }
    switch(v41)
    {
      case 1:
        int v42 = *a2;
        goto LABEL_62;
      case 2:
        int v42 = *(unsigned __int16 *)a2;
        goto LABEL_62;
      case 3:
        int v42 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_62;
      case 4:
        int v42 = *(_DWORD *)a2;
LABEL_62:
        if (v40 < 4) {
          v42 |= v37 << (8 * v40);
        }
        unsigned int v35 = v42 + 4;
        break;
      default:
        break;
    }
  }
  unint64_t v247 = v28;
  size_t v213 = v15;
  uint64_t v43 = ~v10;
  uint64_t v44 = ~v19;
  switch(v35)
  {
    case 0u:
      uint64_t v209 = ~v244;
      size_t __n = v27 + 1;
      char v245 = 8 * v30;
      (*(void (**)(unsigned char *))(v230 + 16))(a1);
      unint64_t __dst = (unint64_t)&a1[v240] & v43;
      uint64_t v45 = (unsigned __int8 *)((unint64_t)&a2[v240] & v43);
      unsigned int v46 = v45[v27];
      unsigned int v47 = v46 - 10;
      uint64_t v48 = v27;
      if (v46 >= 0xA)
      {
        if (v27 <= 3) {
          uint64_t v49 = v27;
        }
        else {
          uint64_t v49 = 4;
        }
        switch(v49)
        {
          case 1:
            int v50 = *v45;
            goto LABEL_124;
          case 2:
            int v50 = *(unsigned __int16 *)v45;
            goto LABEL_124;
          case 3:
            int v50 = *(unsigned __int16 *)v45 | (v45[2] << 16);
            goto LABEL_124;
          case 4:
            int v50 = *(_DWORD *)v45;
LABEL_124:
            if (v27 < 4) {
              unsigned int v46 = (v50 | (v47 << (8 * v27))) + 10;
            }
            else {
              unsigned int v46 = v50 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v46)
      {
        case 0u:
          unint64_t v77 = __dst;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v226 + 16))(__dst, v45, v227);
          *(unsigned char *)(__dst + v27) = 0;
          goto LABEL_186;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v226 + 16))(__dst, v45, v227);
          *(void *)((v234 + __dst) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v45[v234] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(__dst + v27) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v77 = __dst;
          *(void *)unint64_t __dst = *(void *)v45;
          *(void *)(__dst + 8) = *((void *)v45 + 1);
          *(void *)(__dst + 16) = *((void *)v45 + 2);
          *(unsigned char *)(__dst + v27) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_186;
        case 3u:
          unint64_t v77 = __dst;
          *(void *)unint64_t __dst = *(void *)v45;
          *(unsigned char *)(__dst + v27) = 3;
          swift_unknownObjectRetain();
          goto LABEL_186;
        case 4u:
          unint64_t v77 = __dst;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v224 + 16))(__dst, v45, v225);
          char v89 = 4;
          goto LABEL_185;
        case 5u:
          uint64_t v90 = *(void **)v45;
          unint64_t v77 = __dst;
          *(void *)unint64_t __dst = *(void *)v45;
          *(unsigned char *)(__dst + v27) = 5;
          id v91 = v90;
          goto LABEL_186;
        case 6u:
          uint64_t v92 = v27;
          unint64_t v77 = __dst;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v249 + 16))(__dst, v45, v229);
          unint64_t v93 = (void *)((v242 + __dst) & v209);
          uint64_t v94 = (const void *)((unint64_t)&v45[v242] & v209);
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v228))
          {
            memcpy(v93, v94, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v216 + 16))(v93, v94, v228);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v228);
          }
          uint64_t v57 = a1;
          uint64_t v129 = (void *)(((unint64_t)v93 + v213) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v130 = (void *)(((unint64_t)v94 + v213) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v129 = *v130;
          v129[1] = v130[1];
          unint64_t v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v133 = *(_DWORD *)v132;
          *(unsigned char *)(v131 + 4) = *(unsigned char *)(v132 + 4);
          *(_DWORD *)unint64_t v131 = v133;
          *(unsigned char *)(__dst + v92) = 6;
          swift_bridgeObjectRetain();
          goto LABEL_187;
        case 7u:
          uint64_t v95 = v30;
          uint64_t v96 = v27;
          unint64_t v77 = __dst;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v249 + 16))(__dst, v45, v229);
          uint64_t v97 = (void *)((v242 + __dst) & v209);
          id v98 = (const void *)((unint64_t)&v45[v242] & v209);
          if (__swift_getEnumTagSinglePayload((uint64_t)v98, 1, v228))
          {
            memcpy(v97, v98, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v216 + 16))(v97, v98, v228);
            __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v228);
          }
          uint64_t v57 = a1;
          v134 = (void *)(((unint64_t)v97 + v213) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v135 = (void *)(((unint64_t)v98 + v213) & 0xFFFFFFFFFFFFFFF8);
          void *v134 = *v135;
          v134[1] = v135[1];
          unint64_t v136 = ((unint64_t)v134 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v137 = ((unint64_t)v135 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v138 = *(_DWORD *)v137;
          *(unsigned char *)(v136 + 4) = *(unsigned char *)(v137 + 4);
          *(_DWORD *)unint64_t v136 = v138;
          v139 = (void *)(((__dst | 7) + v17) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v140 = (void *)((((unint64_t)v45 | 7) + v17) & 0xFFFFFFFFFFFFFFF8);
          void *v139 = *v140;
          v139[1] = v140[1];
          uint64_t v141 = (void *)(((unint64_t)v139 + 23) & 0xFFFFFFFFFFFFFFF8);
          v142 = (void *)(((unint64_t)v140 + 23) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v141 = *v142;
          v141[1] = v142[1];
          v143 = (void *)(((unint64_t)v141 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v144 = (void *)(((unint64_t)v142 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v143 = *v144;
          v143[1] = v144[1];
          *(unsigned char *)(__dst + v96) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_244;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v220 + 16))(__dst, v45, v221);
          uint64_t v110 = (void *)(((__dst | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
          v111 = (void *)((((unint64_t)v45 | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v110 = *v111;
          v110[1] = v111[1];
          unint64_t v112 = ((unint64_t)v110 + v219) & v44;
          uint64_t v113 = ((unint64_t)v111 + v219) & v44;
          swift_bridgeObjectRetain();
          uint64_t v95 = v30;
          uint64_t v114 = v48;
          if (v20 == v236)
          {
            int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v113, v20, v229);
            uint64_t v57 = a1;
            uint64_t v116 = v228;
            uint64_t v117 = v217;
            if (!EnumTagSinglePayload)
            {
              v118 = (const void *)((v242 + v113) & v209);
              goto LABEL_233;
            }
LABEL_214:
            memcpy((void *)v112, (const void *)v113, v17);
LABEL_242:
            size_t v172 = v238;
            goto LABEL_243;
          }
          v118 = (const void *)((v242 + v113) & v209);
          BOOL v128 = v23 == v236;
          uint64_t v57 = a1;
          uint64_t v116 = v228;
          uint64_t v117 = v217;
          if (v128)
          {
            if (v215 < 2 || __swift_getEnumTagSinglePayload((v242 + v113) & v209, v215, v228) < 2) {
              goto LABEL_233;
            }
            goto LABEL_214;
          }
          unint64_t v161 = *(void *)((((unint64_t)v118 + v213) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v161 >= 0xFFFFFFFF) {
            LODWORD(v161) = -1;
          }
          if ((v161 + 1) >= 2) {
            goto LABEL_214;
          }
LABEL_233:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v249 + 16))(v112, v113, v229);
          unint64_t v162 = v112;
          v163 = (void *)((v242 + v112) & v209);
          if (__swift_getEnumTagSinglePayload((uint64_t)v118, 1, v116))
          {
            memcpy(v163, v118, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v216 + 16))(v163, v118, v116);
            __swift_storeEnumTagSinglePayload((uint64_t)v163, 0, 1, v116);
          }
          int v167 = (void *)(((unint64_t)v163 + v213) & 0xFFFFFFFFFFFFFFF8);
          v168 = (void *)(((unint64_t)v118 + v213) & 0xFFFFFFFFFFFFFFF8);
          *int v167 = *v168;
          v167[1] = v168[1];
          unint64_t v169 = ((unint64_t)v167 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = ((unint64_t)v168 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v171 = *(_DWORD *)v170;
          *(unsigned char *)(v169 + 4) = *(unsigned char *)(v170 + 4);
          *(_DWORD *)unint64_t v169 = v171;
          swift_bridgeObjectRetain();
          size_t v172 = v214;
          unint64_t v112 = v162;
          if (!v215) {
            goto LABEL_242;
          }
LABEL_243:
          unint64_t v173 = (((v117 + v172 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          unint64_t v174 = (void *)(((v112 | 7) + v173) & 0xFFFFFFFFFFFFFFF8);
          v175 = *(void **)(((v113 | 7) + v173) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v174 = v175;
          unint64_t v77 = __dst;
          *(unsigned char *)(__dst + v114) = 8;
          id v176 = v175;
LABEL_244:
          size_t v88 = __n;
          uint64_t v30 = v95;
LABEL_245:
          v177 = (void *)((((unint64_t)v45 | 7) + v88) & 0xFFFFFFFFFFFFFFF8);
          size_t v178 = (void *)(((v77 | 7) + v88) & 0xFFFFFFFFFFFFFFF8);
          *size_t v178 = *v177;
          unint64_t v179 = ((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v180 = ((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v181 = *(void *)(v180 + 24);
          swift_bridgeObjectRetain();
          if (v181 < 0xFFFFFFFF)
          {
            long long v182 = *(_OWORD *)v180;
            long long v183 = *(_OWORD *)(v180 + 16);
            *(void *)(v179 + 32) = *(void *)(v180 + 32);
            *(_OWORD *)unint64_t v179 = v182;
            *(_OWORD *)(v179 + 16) = v183;
          }
          else
          {
            *(void *)(v179 + 24) = v181;
            *(void *)(v179 + 32) = *(void *)(v180 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v181 - 8))(v179, v180, v181);
          }
          *(unsigned char *)(v179 + 40) = *(unsigned char *)(v180 + 40);
          if (v30 > 3) {
            goto LABEL_252;
          }
          unsigned int v184 = ((1 << v245) + 1) >> v245;
          uint64_t v185 = 2;
          if (v184 > 0xFFFD) {
            uint64_t v185 = 4;
          }
          if (v184 <= 0xFD) {
LABEL_252:
          }
            uint64_t v185 = 1;
          unint64_t v186 = v185 + v30;
          if (v186 <= v247) {
            unint64_t v186 = v247;
          }
          if (v186 <= 9) {
            unint64_t v186 = 9;
          }
          if (v186 <= 3)
          {
            unsigned int v187 = ((1 << (8 * v186)) + 3) >> (8 * v186);
            if (v187 > 0xFFFB)
            {
              *(_DWORD *)&v57[v186] = 0;
              return v57;
            }
            if (v187 > 0xFB)
            {
              *(_WORD *)&v57[v186] = 0;
              return v57;
            }
          }
          v57[v186] = 0;
          return v57;
        case 9u:
          unint64_t v77 = __dst;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v222 + 16))(__dst, v45, v223);
          char v89 = 9;
LABEL_185:
          *(unsigned char *)(v77 + v27) = v89;
LABEL_186:
          uint64_t v57 = a1;
LABEL_187:
          size_t v88 = __n;
          goto LABEL_245;
        default:
          unint64_t v77 = __dst;
          size_t v88 = v27 + 1;
          memcpy((void *)__dst, v45, __n);
          uint64_t v57 = a1;
          goto LABEL_245;
      }
    case 1u:
      uint64_t v210 = ~v244;
      size_t __na = v27 + 1;
      char v246 = 8 * v30;
      (*(void (**)(unsigned char *))(v230 + 16))(a1);
      unint64_t __dsta = (unint64_t)&a1[v240] & v43;
      unsigned int v51 = (unsigned __int8 *)((unint64_t)&a2[v240] & v43);
      unsigned int v52 = v51[v27];
      unsigned int v53 = v52 - 10;
      uint64_t v54 = v27;
      if (v52 >= 0xA)
      {
        if (v27 <= 3) {
          uint64_t v55 = v27;
        }
        else {
          uint64_t v55 = 4;
        }
        switch(v55)
        {
          case 1:
            int v56 = *v51;
            goto LABEL_132;
          case 2:
            int v56 = *(unsigned __int16 *)v51;
            goto LABEL_132;
          case 3:
            int v56 = *(unsigned __int16 *)v51 | (v51[2] << 16);
            goto LABEL_132;
          case 4:
            int v56 = *(_DWORD *)v51;
LABEL_132:
            if (v27 < 4) {
              unsigned int v52 = (v56 | (v53 << (8 * v27))) + 10;
            }
            else {
              unsigned int v52 = v56 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v52)
      {
        case 0u:
          unint64_t v78 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v226 + 16))(__dsta, v51, v227);
          *(unsigned char *)(__dsta + v27) = 0;
          goto LABEL_200;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v226 + 16))(__dsta, v51, v227);
          *(void *)((v234 + __dsta) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v51[v234] & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(__dsta + v27) = 1;
          sub_1C9BEC838();
        case 2u:
          unint64_t v78 = __dsta;
          *(void *)unint64_t __dsta = *(void *)v51;
          *(void *)(__dsta + 8) = *((void *)v51 + 1);
          *(void *)(__dsta + 16) = *((void *)v51 + 2);
          *(unsigned char *)(__dsta + v27) = 2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_200;
        case 3u:
          unint64_t v78 = __dsta;
          *(void *)unint64_t __dsta = *(void *)v51;
          *(unsigned char *)(__dsta + v27) = 3;
          swift_unknownObjectRetain();
          goto LABEL_200;
        case 4u:
          unint64_t v78 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v224 + 16))(__dsta, v51, v225);
          char v100 = 4;
          goto LABEL_199;
        case 5u:
          uint64_t v101 = *(void **)v51;
          unint64_t v78 = __dsta;
          *(void *)unint64_t __dsta = *(void *)v51;
          *(unsigned char *)(__dsta + v27) = 5;
          id v102 = v101;
          goto LABEL_200;
        case 6u:
          uint64_t v103 = v27;
          unint64_t v78 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v249 + 16))(__dsta, v51, v229);
          uint64_t v104 = (void *)((v242 + __dsta) & v210);
          unsigned int v105 = (const void *)((unint64_t)&v51[v242] & v210);
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v228))
          {
            memcpy(v104, v105, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v216 + 16))(v104, v105, v228);
            __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v228);
          }
          uint64_t v57 = a1;
          unint64_t v145 = (void *)(((unint64_t)v104 + v213) & 0xFFFFFFFFFFFFFFF8);
          int v146 = (void *)(((unint64_t)v105 + v213) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v145 = *v146;
          v145[1] = v146[1];
          unint64_t v147 = ((unint64_t)v145 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v148 = ((unint64_t)v146 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v149 = *(_DWORD *)v148;
          *(unsigned char *)(v147 + 4) = *(unsigned char *)(v148 + 4);
          *(_DWORD *)unint64_t v147 = v149;
          *(unsigned char *)(__dsta + v103) = 6;
          swift_bridgeObjectRetain();
          goto LABEL_201;
        case 7u:
          uint64_t v106 = v30;
          uint64_t v107 = v27;
          unint64_t v78 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v249 + 16))(__dsta, v51, v229);
          v108 = (void *)((v242 + __dsta) & v210);
          char v109 = (const void *)((unint64_t)&v51[v242] & v210);
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v228))
          {
            memcpy(v108, v109, v238);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v216 + 16))(v108, v109, v228);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v228);
          }
          uint64_t v57 = a1;
          unint64_t v150 = (void *)(((unint64_t)v108 + v213) & 0xFFFFFFFFFFFFFFF8);
          int v151 = (void *)(((unint64_t)v109 + v213) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v150 = *v151;
          v150[1] = v151[1];
          unint64_t v152 = ((unint64_t)v150 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v153 = ((unint64_t)v151 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v154 = *(_DWORD *)v153;
          *(unsigned char *)(v152 + 4) = *(unsigned char *)(v153 + 4);
          *(_DWORD *)unint64_t v152 = v154;
          v155 = (void *)(((__dsta | 7) + v17) & 0xFFFFFFFFFFFFFFF8);
          v156 = (void *)((((unint64_t)v51 | 7) + v17) & 0xFFFFFFFFFFFFFFF8);
          void *v155 = *v156;
          v155[1] = v156[1];
          v157 = (void *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
          v158 = (void *)(((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v157 = *v158;
          v157[1] = v158[1];
          v159 = (void *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v160 = (void *)(((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v159 = *v160;
          v159[1] = v160[1];
          *(unsigned char *)(__dsta + v107) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_267;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v220 + 16))(__dsta, v51, v221);
          char v119 = (void *)(((__dsta | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v120 = (void *)((((unint64_t)v51 | 7) + v218) & 0xFFFFFFFFFFFFFFF8);
          *char v119 = *v120;
          v119[1] = v120[1];
          unint64_t v121 = ((unint64_t)v119 + v219) & v44;
          uint64_t v122 = ((unint64_t)v120 + v219) & v44;
          swift_bridgeObjectRetain();
          uint64_t v106 = v30;
          uint64_t v123 = v54;
          if (v20 == v236)
          {
            int v124 = __swift_getEnumTagSinglePayload(v122, v20, v229);
            uint64_t v57 = a1;
            uint64_t v125 = v228;
            uint64_t v126 = v217;
            if (!v124)
            {
              v127 = (const void *)((v242 + v122) & v210);
              goto LABEL_238;
            }
          }
          else
          {
            v127 = (const void *)((v242 + v122) & v210);
            BOOL v128 = v23 == v236;
            uint64_t v57 = a1;
            uint64_t v125 = v228;
            uint64_t v126 = v217;
            if (v128)
            {
              if (v215 < 2 || __swift_getEnumTagSinglePayload((v242 + v122) & v210, v215, v228) < 2) {
                goto LABEL_238;
              }
            }
            else
            {
              unint64_t v164 = *(void *)((((unint64_t)v127 + v213) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v164 >= 0xFFFFFFFF) {
                LODWORD(v164) = -1;
              }
              if ((v164 + 1) < 2)
              {
LABEL_238:
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v249 + 16))(v121, v122, v229);
                unint64_t v165 = v121;
                unint64_t v166 = (void *)((v242 + v121) & v210);
                if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v125))
                {
                  memcpy(v166, v127, v238);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v216 + 16))(v166, v127, v125);
                  __swift_storeEnumTagSinglePayload((uint64_t)v166, 0, 1, v125);
                }
                v188 = (void *)(((unint64_t)v166 + v213) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v189 = (void *)(((unint64_t)v127 + v213) & 0xFFFFFFFFFFFFFFF8);
                void *v188 = *v189;
                v188[1] = v189[1];
                unint64_t v190 = ((unint64_t)v188 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v191 = ((unint64_t)v189 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v192 = *(_DWORD *)v191;
                *(unsigned char *)(v190 + 4) = *(unsigned char *)(v191 + 4);
                *(_DWORD *)unint64_t v190 = v192;
                swift_bridgeObjectRetain();
                size_t v193 = v214;
                unint64_t v121 = v165;
                if (!v215) {
                  goto LABEL_265;
                }
LABEL_266:
                unint64_t v194 = (((v126 + v193 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                uint64_t v195 = (void *)(((v121 | 7) + v194) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v196 = *(void **)(((v122 | 7) + v194) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v195 = v196;
                unint64_t v78 = __dsta;
                *(unsigned char *)(__dsta + v123) = 8;
                id v197 = v196;
LABEL_267:
                size_t v99 = __na;
                uint64_t v30 = v106;
LABEL_268:
                size_t v198 = (void *)((((unint64_t)v51 | 7) + v99) & 0xFFFFFFFFFFFFFFF8);
                v199 = (void *)(((v78 | 7) + v99) & 0xFFFFFFFFFFFFFFF8);
                void *v199 = *v198;
                unint64_t v200 = ((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v201 = ((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v202 = *(void *)(v201 + 24);
                swift_bridgeObjectRetain();
                if (v202 < 0xFFFFFFFF)
                {
                  long long v203 = *(_OWORD *)v201;
                  long long v204 = *(_OWORD *)(v201 + 16);
                  *(void *)(v200 + 32) = *(void *)(v201 + 32);
                  *(_OWORD *)unint64_t v200 = v203;
                  *(_OWORD *)(v200 + 16) = v204;
                }
                else
                {
                  *(void *)(v200 + 24) = v202;
                  *(void *)(v200 + 32) = *(void *)(v201 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v202 - 8))(v200, v201, v202);
                }
                *(unsigned char *)(v200 + 40) = *(unsigned char *)(v201 + 40);
                if (v30 > 3) {
                  goto LABEL_275;
                }
                unsigned int v205 = ((1 << v246) + 1) >> v246;
                uint64_t v206 = 2;
                if (v205 > 0xFFFD) {
                  uint64_t v206 = 4;
                }
                if (v205 <= 0xFD) {
LABEL_275:
                }
                  uint64_t v206 = 1;
                unint64_t v64 = v206 + v30;
                if (v64 <= v247) {
                  unint64_t v64 = v247;
                }
                if (v64 <= 9) {
                  unint64_t v64 = 9;
                }
                if (v64 > 3) {
                  goto LABEL_283;
                }
                int v73 = 1;
                unsigned int v207 = ((1 << (8 * v64)) + 3) >> (8 * v64);
                if (v207 <= 0xFFFB)
                {
                  if (v207 <= 0xFB)
                  {
LABEL_283:
                    char v66 = 1;
                    goto LABEL_284;
                  }
LABEL_286:
                  *(_WORD *)&v57[v64] = v73;
                  return v57;
                }
LABEL_285:
                *(_DWORD *)&v57[v64] = v73;
                return v57;
              }
            }
          }
          memcpy((void *)v121, (const void *)v122, v17);
LABEL_265:
          size_t v193 = v238;
          goto LABEL_266;
        case 9u:
          unint64_t v78 = __dsta;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v222 + 16))(__dsta, v51, v223);
          char v100 = 9;
LABEL_199:
          *(unsigned char *)(v78 + v27) = v100;
LABEL_200:
          uint64_t v57 = a1;
LABEL_201:
          size_t v99 = __na;
          goto LABEL_268;
        default:
          unint64_t v78 = __dsta;
          size_t v99 = v27 + 1;
          memcpy((void *)__dsta, v51, __na);
          uint64_t v57 = a1;
          goto LABEL_268;
      }
    case 2u:
      uint64_t v57 = a1;
      if (v30 > 3) {
        goto LABEL_81;
      }
      unsigned int v58 = ((1 << v31) + 1) >> v31;
      if (v58 > 0xFFFD)
      {
        unsigned int v59 = *(_DWORD *)&a2[v30];
      }
      else if (v58 > 0xFD)
      {
        unsigned int v59 = *(unsigned __int16 *)&a2[v30];
      }
      else
      {
LABEL_81:
        unsigned int v59 = a2[v30];
      }
      unsigned int v74 = v59 - 2;
      if (v59 >= 2)
      {
        if (v30 <= 3) {
          uint64_t v75 = v30;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *a2;
            goto LABEL_140;
          case 2:
            int v76 = *(unsigned __int16 *)a2;
            goto LABEL_140;
          case 3:
            int v76 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_140;
          case 4:
            int v76 = *(_DWORD *)a2;
LABEL_140:
            if (v30 < 4) {
              v76 |= v74 << v31;
            }
            unsigned int v59 = v76 + 2;
            break;
          default:
            break;
        }
      }
      if (v59 == 1)
      {
        uint64_t v80 = *(void *)a2;
        id v81 = *(id *)a2;
        *(void *)a1 = v80;
        a1[8] = a2[8];
        if (v30 <= 3)
        {
          unsigned int v82 = ((1 << v31) + 1) >> v31;
          if (v82 > 0xFFFD)
          {
            *(_DWORD *)&a1[v30] = 1;
            goto LABEL_160;
          }
          if (v82 > 0xFD)
          {
            *(_WORD *)&a1[v30] = 1;
            goto LABEL_160;
          }
        }
        a1[v30] = 1;
      }
      else
      {
        if (!v59)
        {
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
          if (v30 > 3)
          {
LABEL_148:
            a1[v30] = 0;
            goto LABEL_159;
          }
          unsigned int v79 = ((1 << v31) + 1) >> v31;
          if (v79 > 0xFFFD)
          {
            *(_DWORD *)&a1[v30] = 0;
          }
          else
          {
            if (v79 <= 0xFD) {
              goto LABEL_148;
            }
            *(_WORD *)&a1[v30] = 0;
          }
LABEL_160:
          unsigned int v85 = ((1 << v31) + 1) >> v31;
          uint64_t v86 = 2;
          if (v85 > 0xFFFD) {
            uint64_t v86 = 4;
          }
          if (v85 > 0xFD)
          {
LABEL_164:
            unint64_t v64 = v86 + v30;
            if (v64 <= v247) {
              unint64_t v64 = v247;
            }
            if (v64 <= 9) {
              unint64_t v64 = 9;
            }
            if (v64 <= 3)
            {
              unsigned int v87 = ((1 << (8 * v64)) + 3) >> (8 * v64);
              if (v87 > 0xFFFB)
              {
                int v73 = 2;
                goto LABEL_285;
              }
              if (v87 > 0xFB)
              {
                LOWORD(v73) = 2;
                goto LABEL_286;
              }
            }
            char v66 = 2;
LABEL_284:
            v57[v64] = v66;
            return v57;
          }
LABEL_163:
          uint64_t v86 = 1;
          goto LABEL_164;
        }
        if (v30 > 3) {
          goto LABEL_157;
        }
        unsigned int v83 = ((1 << v31) + 1) >> v31;
        uint64_t v84 = 2;
        if (v83 > 0xFFFD) {
          uint64_t v84 = 4;
        }
        if (v83 <= 0xFD) {
LABEL_157:
        }
          uint64_t v84 = 1;
        memcpy(a1, a2, v84 + v30);
      }
LABEL_159:
      if (v30 > 3) {
        goto LABEL_163;
      }
      goto LABEL_160;
    case 3u:
      id v60 = *(id *)a2;
      id v61 = *(id *)a2;
      uint64_t v57 = a1;
      *(void *)a1 = v60;
      a1[8] = a2[8];
      if (v30 > 3) {
        goto LABEL_86;
      }
      unsigned int v62 = ((1 << v31) + 1) >> v31;
      uint64_t v63 = 2;
      if (v62 > 0xFFFD) {
        uint64_t v63 = 4;
      }
      if (v62 <= 0xFD) {
LABEL_86:
      }
        uint64_t v63 = 1;
      unint64_t v64 = v63 + v30;
      if (v64 <= v247) {
        unint64_t v64 = v247;
      }
      if (v64 <= 9) {
        unint64_t v64 = 9;
      }
      if (v64 > 3) {
        goto LABEL_94;
      }
      unsigned int v65 = ((1 << (8 * v64)) + 3) >> (8 * v64);
      if (v65 > 0xFFFB)
      {
        int v73 = 3;
        goto LABEL_285;
      }
      if (v65 <= 0xFB)
      {
LABEL_94:
        char v66 = 3;
        goto LABEL_284;
      }
      LOWORD(v73) = 3;
      goto LABEL_286;
    default:
      if (v30 > 3) {
        goto LABEL_100;
      }
      unsigned int v67 = ((1 << v31) + 1) >> v31;
      uint64_t v68 = 2;
      if (v67 > 0xFFFD) {
        uint64_t v68 = 4;
      }
      if (v67 <= 0xFD)
      {
LABEL_100:
        unint64_t v69 = ~v19;
        uint64_t v68 = 1;
      }
      else
      {
        unint64_t v69 = ~v19;
      }
      uint64_t v57 = a1;
      unint64_t v70 = v68 + v30;
      if (v70 <= v69) {
        unint64_t v70 = v69;
      }
      if (v70 <= 9) {
        unint64_t v70 = 9;
      }
      if (v70 > 3) {
        goto LABEL_109;
      }
      unsigned int v71 = ((1 << (8 * v70)) + 3) >> (8 * v70);
      uint64_t v72 = 2;
      if (v71 > 0xFFFB) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFB) {
LABEL_109:
      }
        uint64_t v72 = 1;
      memcpy(a1, a2, v72 + v70);
      return v57;
  }
}

unsigned __int8 *sub_1C9A92840(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t v244 = sub_1C9BEAB08();
  uint64_t v243 = *(void *)(v244 - 8);
  uint64_t v255 = *(void *)(v243 + 64);
  uint64_t v240 = sub_1C9BEC028();
  uint64_t v251 = *(void *)(v240 - 8);
  uint64_t v239 = v251;
  int v3 = *(_DWORD *)(v251 + 80);
  uint64_t v235 = sub_1C9BEAC48();
  uint64_t v253 = *(void *)(v235 - 8);
  uint64_t v234 = v253;
  int v245 = *(_DWORD *)(v253 + 80) | v3;
  uint64_t v242 = sub_1C9BEAF18();
  uint64_t v249 = *(void *)(v242 - 8);
  uint64_t v263 = v249;
  int v4 = *(_DWORD *)(v249 + 80) & 0xF8;
  uint64_t v241 = sub_1C9BEAE48();
  uint64_t v5 = *(void *)(v241 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v229 = sub_1C9BEC928();
  uint64_t v247 = *(void *)(v229 - 8);
  uint64_t v228 = v247;
  int v8 = *(_DWORD *)(v247 + 80);
  uint64_t v233 = sub_1C9BEC8F8();
  uint64_t v232 = *(void *)(v233 - 8);
  uint64_t v9 = (v245 | (v8 | *(_DWORD *)(v232 + 80))) & 0xF8 | v7;
  uint64_t v256 = v255 + v9;
  unint64_t v10 = *(void *)(v251 + 64);
  unint64_t v231 = v10 + 7;
  if (((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v10) {
    unint64_t v10 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v10 <= *(void *)(v253 + 64)) {
    unint64_t v10 = *(void *)(v253 + 64);
  }
  uint64_t v250 = *(void *)(v249 + 64) + v6;
  uint64_t v11 = v6;
  uint64_t v222 = v5;
  unsigned int v12 = *(_DWORD *)(v5 + 84);
  size_t v13 = *(void *)(v5 + 64);
  size_t v252 = v13;
  if (!v12) {
    ++v13;
  }
  size_t __n = v13;
  size_t v246 = v13 + 7;
  uint64_t v230 = v250 & ~v6;
  unint64_t v14 = (v13 + 7 + v230) & 0xFFFFFFFFFFFFFFF8;
  size_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v10 <= v15) {
    unint64_t v10 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = v14 + 31;
  if (v10 <= (((((v16 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v10 = (((((v16 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v224 = *(void *)(v247 + 64);
  uint64_t v225 = v7 + 16;
  uint64_t v17 = v4 | v6 | 7;
  unsigned int v236 = v12;
  BOOL v18 = v12 != 0;
  unsigned int v19 = v12 - 1;
  if (!v18) {
    unsigned int v19 = 0;
  }
  unsigned int v227 = *(_DWORD *)(v263 + 84);
  unsigned int v221 = v19;
  if (v19 <= v227) {
    unsigned int v19 = *(_DWORD *)(v263 + 84);
  }
  if (v19 <= 0x7FFFFFFE) {
    unsigned int v19 = 2147483646;
  }
  unsigned int v226 = v19;
  unint64_t v20 = ((v16 + ((v7 + 16 + ((v224 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v10 <= v20) {
    unint64_t v10 = v20;
  }
  unint64_t v21 = *(void *)(*(void *)(v233 - 8) + 64);
  if (v10 > v21) {
    unint64_t v21 = v10;
  }
  if (v21 <= 0x18) {
    uint64_t v22 = 24;
  }
  else {
    uint64_t v22 = v21;
  }
  unint64_t v23 = ((((v22 + (v256 & ~v9) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = AssociatedTypeWitness;
  uint64_t v238 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v238 + 64) <= 9uLL) {
    uint64_t v26 = 9;
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v27 = 8 * v26;
  if (v26 > 3) {
    goto LABEL_32;
  }
  unsigned int v28 = ((1 << v27) + 1) >> v27;
  uint64_t v29 = 2;
  if (v28 > 0xFFFD) {
    uint64_t v29 = 4;
  }
  if (v28 <= 0xFD) {
LABEL_32:
  }
    uint64_t v29 = 1;
  unint64_t v30 = v29 + v26;
  if (v30 <= v23) {
    unint64_t v30 = ((((v22 + (v256 & ~v9) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v30 <= 9) {
    unint64_t v30 = 9;
  }
  int v2 = a1;
  if (v30 > 3) {
    goto LABEL_38;
  }
  unsigned int v32 = ((1 << (8 * v30)) + 3) >> (8 * v30);
  if (v32 > 0xFFFB)
  {
    unsigned int v31 = *(_DWORD *)&a1[v30];
  }
  else
  {
    if (v32 <= 0xFB)
    {
LABEL_38:
      unsigned int v31 = a1[v30];
      goto LABEL_43;
    }
    unsigned int v31 = *(unsigned __int16 *)&a1[v30];
  }
LABEL_43:
  unsigned int v33 = v31 - 4;
  if (v31 >= 4)
  {
    if (v26 > 3) {
      goto LABEL_48;
    }
    unsigned int v34 = ((1 << v27) + 1) >> v27;
    uint64_t v35 = 2;
    if (v34 > 0xFFFD) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFD) {
LABEL_48:
    }
      uint64_t v35 = 1;
    unint64_t v36 = v35 + v26;
    if (v36 <= v23) {
      unint64_t v36 = ((((v22 + (v256 & ~v9) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v36 <= 9) {
      LODWORD(v36) = 9;
    }
    if (v36 <= 3) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 4;
    }
    switch(v37)
    {
      case 1:
        int v38 = *a1;
        goto LABEL_61;
      case 2:
        int v38 = *(unsigned __int16 *)a1;
        goto LABEL_61;
      case 3:
        int v38 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_61;
      case 4:
        int v38 = *(_DWORD *)a1;
LABEL_61:
        if (v36 < 4) {
          v38 |= v33 << (8 * v36);
        }
        unsigned int v31 = v38 + 4;
        break;
      default:
        break;
    }
  }
  size_t v261 = v22 + 1;
  uint64_t v254 = ~v9;
  uint64_t v248 = ~v11;
  uint64_t v223 = ~v17;
  uint64_t v39 = a2;
  switch(v31)
  {
    case 0u:
      uint64_t v220 = AssociatedTypeWitness;
      (*(void (**)(unsigned __int8 *, uint64_t))(v243 + 8))(a1, v244);
      unint64_t v40 = (unsigned __int8 *)((unint64_t)&a1[v256] & v254);
      unsigned int v41 = v40[v22];
      unsigned int v42 = v41 - 10;
      if (v41 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v43 = v22;
        }
        else {
          uint64_t v43 = 4;
        }
        switch(v43)
        {
          case 1:
            int v44 = *v40;
            goto LABEL_92;
          case 2:
            int v44 = *(unsigned __int16 *)v40;
            goto LABEL_92;
          case 3:
            int v44 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)(((unint64_t)&a1[v256] & v254) + 2) << 16);
            goto LABEL_92;
          case 4:
            int v44 = *(_DWORD *)v40;
LABEL_92:
            if (v22 < 4) {
              unsigned int v41 = (v44 | (v42 << (8 * v22))) + 10;
            }
            else {
              unsigned int v41 = v44 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v54 = v22;
      uint64_t v55 = v22 + 1;
      switch(v41)
      {
        case 0u:
          goto LABEL_103;
        case 1u:
          goto LABEL_104;
        case 2u:
          goto LABEL_105;
        case 3u:
          goto LABEL_106;
        case 4u:
          goto LABEL_107;
        case 5u:
          goto LABEL_108;
        case 6u:
          goto LABEL_109;
        case 7u:
          goto LABEL_112;
        case 8u:
          goto LABEL_117;
        case 9u:
          goto LABEL_115;
        default:
          goto LABEL_142;
      }
      goto LABEL_142;
    case 1u:
      uint64_t v220 = AssociatedTypeWitness;
      (*(void (**)(unsigned __int8 *, uint64_t))(v243 + 8))(a1, v244);
      unint64_t v40 = (unsigned __int8 *)((unint64_t)&a1[v256] & v254);
      unsigned int v45 = v40[v22];
      unsigned int v46 = v45 - 10;
      if (v45 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v47 = v22;
        }
        else {
          uint64_t v47 = 4;
        }
        switch(v47)
        {
          case 1:
            int v48 = *v40;
            goto LABEL_99;
          case 2:
            int v48 = *(unsigned __int16 *)v40;
            goto LABEL_99;
          case 3:
            int v48 = *(unsigned __int16 *)v40 | (*(unsigned __int8 *)(((unint64_t)&a1[v256] & v254) + 2) << 16);
            goto LABEL_99;
          case 4:
            int v48 = *(_DWORD *)v40;
LABEL_99:
            if (v22 < 4) {
              unsigned int v45 = (v48 | (v46 << (8 * v22))) + 10;
            }
            else {
              unsigned int v45 = v48 + 10;
            }
            break;
          default:
            goto LABEL_102;
        }
      }
      break;
    case 2u:
      if (v26 > 3) {
        goto LABEL_80;
      }
      unsigned int v49 = ((1 << v27) + 1) >> v27;
      if (v49 > 0xFFFD)
      {
        unsigned int v50 = *(_DWORD *)&a1[v26];
      }
      else if (v49 > 0xFD)
      {
        unsigned int v50 = *(unsigned __int16 *)&a1[v26];
      }
      else
      {
LABEL_80:
        unsigned int v50 = a1[v26];
      }
      unsigned int v51 = v50 - 2;
      if (v50 >= 2)
      {
        if (v26 <= 3) {
          uint64_t v52 = v26;
        }
        else {
          uint64_t v52 = 4;
        }
        switch(v52)
        {
          case 1:
            int v53 = *a1;
            goto LABEL_123;
          case 2:
            int v53 = *(unsigned __int16 *)a1;
            goto LABEL_123;
          case 3:
            int v53 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_123;
          case 4:
            int v53 = *(_DWORD *)a1;
LABEL_123:
            if (v26 < 4) {
              v53 |= v51 << v27;
            }
            unsigned int v50 = v53 + 2;
            break;
          default:
            break;
        }
      }
      if (v50 == 1)
      {
LABEL_129:
      }
      else if (!v50)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v238 + 8))(a1, AssociatedTypeWitness);
      }
      goto LABEL_144;
    case 3u:
      goto LABEL_129;
    default:
      goto LABEL_144;
  }
LABEL_102:
  uint64_t v54 = v22;
  uint64_t v55 = v22 + 1;
  switch(v45)
  {
    case 0u:
LABEL_103:
      uint64_t v57 = v239;
      uint64_t v56 = v240;
      goto LABEL_116;
    case 1u:
LABEL_104:
      (*(void (**)(unsigned __int8 *, uint64_t))(v239 + 8))(v40, v240);
      swift_release();
      goto LABEL_142;
    case 2u:
LABEL_105:
      swift_bridgeObjectRelease();
      goto LABEL_111;
    case 3u:
LABEL_106:
      swift_unknownObjectRelease();
      goto LABEL_142;
    case 4u:
LABEL_107:
      uint64_t v57 = v234;
      uint64_t v56 = v235;
      goto LABEL_116;
    case 5u:
LABEL_108:
      unsigned int v58 = *(void **)v40;
      goto LABEL_141;
    case 6u:
LABEL_109:
      (*(void (**)(unsigned __int8 *, uint64_t))(v263 + 8))(v40, v242);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v40[v250] & v248, 1, v241)) {
        (*(void (**)(unint64_t, uint64_t))(v222 + 8))((unint64_t)&v40[v250] & v248, v241);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      goto LABEL_142;
    case 7u:
LABEL_112:
      (*(void (**)(unsigned __int8 *, uint64_t))(v263 + 8))(v40, v242);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v40[v250] & v248, 1, v241)) {
        (*(void (**)(unint64_t, uint64_t))(v222 + 8))((unint64_t)&v40[v250] & v248, v241);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v55 = v22 + 1;
      goto LABEL_142;
    case 8u:
LABEL_117:
      (*(void (**)(unsigned __int8 *, uint64_t))(v228 + 8))(v40, v229);
      unint64_t v59 = (((unint64_t)v40 | 7) + v224) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      unint64_t v60 = (v225 + v59) & v223;
      if (v227 == v226)
      {
        if (__swift_getEnumTagSinglePayload((v225 + v59) & v223, v227, v242)) {
          goto LABEL_140;
        }
        uint64_t v61 = (v250 + v60) & v248;
        goto LABEL_137;
      }
      uint64_t v61 = (v250 + v60) & v248;
      if (v221 == v226)
      {
        if (v236 >= 2 && __swift_getEnumTagSinglePayload((v250 + v60) & v248, v236, v241) >= 2) {
          goto LABEL_140;
        }
        goto LABEL_137;
      }
      unint64_t v62 = *(void *)(((v246 + v61) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v62 >= 0xFFFFFFFF) {
        LODWORD(v62) = -1;
      }
      if ((v62 + 1) < 2)
      {
LABEL_137:
        (*(void (**)(unint64_t, uint64_t))(v263 + 8))(v60, v242);
        if (!__swift_getEnumTagSinglePayload(v61, 1, v241)) {
          (*(void (**)(uint64_t, uint64_t))(v222 + 8))(v61, v241);
        }
        swift_bridgeObjectRelease();
      }
LABEL_140:
      unsigned int v58 = *(void **)(((v60 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
LABEL_141:

LABEL_142:
      swift_bridgeObjectRelease();
      unint64_t v63 = (((((unint64_t)v40 | 7) + v55) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v39 = a2;
      uint64_t v25 = v220;
      uint64_t v22 = v54;
      if (*(void *)(v63 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v63);
      }
LABEL_144:
      if (v26 > 3) {
        goto LABEL_148;
      }
      unsigned int v64 = ((1 << v27) + 1) >> v27;
      uint64_t v65 = 2;
      if (v64 > 0xFFFD) {
        uint64_t v65 = 4;
      }
      if (v64 <= 0xFD) {
LABEL_148:
      }
        uint64_t v65 = 1;
      unint64_t v66 = v65 + v26;
      if (v66 <= v23) {
        unint64_t v66 = v23;
      }
      if (v66 <= 9) {
        unint64_t v66 = 9;
      }
      if (v66 > 3) {
        goto LABEL_154;
      }
      unsigned int v68 = ((1 << (8 * v66)) + 3) >> (8 * v66);
      if (v68 > 0xFFFB)
      {
        unsigned int v67 = *(_DWORD *)&v39[v66];
      }
      else if (v68 <= 0xFB)
      {
LABEL_154:
        unsigned int v67 = v39[v66];
      }
      else
      {
        unsigned int v67 = *(unsigned __int16 *)&v39[v66];
      }
      unsigned int v69 = v67 - 4;
      if (v67 >= 4)
      {
        if (v26 > 3) {
          goto LABEL_164;
        }
        unsigned int v70 = ((1 << v27) + 1) >> v27;
        uint64_t v71 = 2;
        if (v70 > 0xFFFD) {
          uint64_t v71 = 4;
        }
        if (v70 <= 0xFD) {
LABEL_164:
        }
          uint64_t v71 = 1;
        unint64_t v72 = v71 + v26;
        if (v72 <= v23) {
          unint64_t v72 = v23;
        }
        if (v72 <= 9) {
          LODWORD(v72) = 9;
        }
        if (v72 <= 3) {
          uint64_t v73 = v72;
        }
        else {
          uint64_t v73 = 4;
        }
        switch(v73)
        {
          case 1:
            int v74 = *v39;
            goto LABEL_177;
          case 2:
            int v74 = *(unsigned __int16 *)v39;
            goto LABEL_177;
          case 3:
            int v74 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_177;
          case 4:
            int v74 = *(_DWORD *)v39;
LABEL_177:
            if (v72 < 4) {
              v74 |= v69 << (8 * v72);
            }
            unsigned int v67 = v74 + 4;
            break;
          default:
            goto LABEL_180;
        }
      }
      break;
    case 9u:
LABEL_115:
      uint64_t v57 = v232;
      uint64_t v56 = v233;
LABEL_116:
      (*(void (**)(unsigned __int8 *, uint64_t))(v57 + 8))(v40, v56);
      goto LABEL_142;
    default:
      goto LABEL_142;
  }
LABEL_180:
  switch(v67)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v243 + 16))(a1, v39, v244);
      unint64_t v75 = (unint64_t)&a1[v256] & v254;
      unint64_t v76 = (unint64_t)&v39[v256] & v254;
      unsigned int v77 = *(unsigned __int8 *)(v76 + v22);
      unsigned int v78 = v77 - 10;
      if (v77 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v79 = v22;
        }
        else {
          uint64_t v79 = 4;
        }
        switch(v79)
        {
          case 1:
            int v80 = *(unsigned __int8 *)v76;
            goto LABEL_238;
          case 2:
            int v80 = *(unsigned __int16 *)v76;
            goto LABEL_238;
          case 3:
            int v80 = *(unsigned __int16 *)v76 | (*(unsigned __int8 *)(((unint64_t)&v39[v256] & v254) + 2) << 16);
            goto LABEL_238;
          case 4:
            int v80 = *(_DWORD *)v76;
LABEL_238:
            if (v22 < 4) {
              unsigned int v77 = (v80 | (v78 << (8 * v22))) + 10;
            }
            else {
              unsigned int v77 = v80 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v77)
      {
        case 0u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v239 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v240);
          *(unsigned char *)(v75 + v22) = 0;
          goto LABEL_355;
        case 1u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v239 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v240);
          *(void *)((v231 + v75) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v231 + v76) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v75 + v22) = 1;
          sub_1C9BEC838();
        case 2u:
          *(void *)unint64_t v75 = *(void *)v76;
          *(void *)(((unint64_t)&a1[v256] & v254) + 8) = *(void *)(((unint64_t)&v39[v256] & v254) + 8);
          *(void *)(((unint64_t)&a1[v256] & v254) + 0x10) = *(void *)(((unint64_t)&v39[v256] & v254)
                                                                               + 0x10);
          *(unsigned char *)(v75 + v22) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_334;
        case 3u:
          *(void *)unint64_t v75 = *(void *)v76;
          *(unsigned char *)(v75 + v22) = 3;
          swift_unknownObjectRetain();
          goto LABEL_355;
        case 4u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v234 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v235);
          char v115 = 4;
          goto LABEL_299;
        case 5u:
          uint64_t v116 = *(void **)v76;
          *(void *)unint64_t v75 = *(void *)v76;
          char v117 = 5;
          goto LABEL_354;
        case 6u:
          uint64_t v118 = v22;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v242);
          char v119 = (void *)((v250 + v75) & v248);
          uint64_t v120 = (const void *)((v250 + v76) & v248);
          if (__swift_getEnumTagSinglePayload((uint64_t)v120, 1, v241))
          {
            memcpy(v119, v120, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v222 + 16))(v119, v120, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v119, 0, 1, v241);
          }
          v142 = (void *)(((unint64_t)v119 + v246) & 0xFFFFFFFFFFFFFFF8);
          v143 = (void *)(((unint64_t)v120 + v246) & 0xFFFFFFFFFFFFFFF8);
          void *v142 = *v143;
          v142[1] = v143[1];
          unint64_t v144 = ((unint64_t)v142 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v145 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v146 = *(_DWORD *)v145;
          *(unsigned char *)(v144 + 4) = *(unsigned char *)(v145 + 4);
          *(_DWORD *)unint64_t v144 = v146;
          *(unsigned char *)(v75 + v118) = 6;
          goto LABEL_334;
        case 7u:
          uint64_t v257 = v22;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16))(v75, v76, v242);
          unint64_t v121 = (void *)((v250 + v75) & v248);
          uint64_t v122 = (const void *)((v250 + v76) & v248);
          if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v241))
          {
            memcpy(v121, v122, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v222 + 16))(v121, v122, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v121, 0, 1, v241);
          }
          unint64_t v147 = (void *)(((unint64_t)v121 + v246) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v148 = (void *)(((unint64_t)v122 + v246) & 0xFFFFFFFFFFFFFFF8);
          void *v147 = *v148;
          v147[1] = v148[1];
          unint64_t v149 = ((unint64_t)v147 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v150 = ((unint64_t)v148 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v151 = *(_DWORD *)v150;
          *(unsigned char *)(v149 + 4) = *(unsigned char *)(v150 + 4);
          *(_DWORD *)unint64_t v149 = v151;
          unint64_t v152 = (void *)(((v75 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v153 = (void *)(((v76 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
          void *v152 = *v153;
          v152[1] = v153[1];
          int v154 = (void *)(((unint64_t)v152 + 23) & 0xFFFFFFFFFFFFFFF8);
          v155 = (void *)(((unint64_t)v153 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v154 = *v155;
          v154[1] = v155[1];
          v156 = (void *)(((unint64_t)v154 + 23) & 0xFFFFFFFFFFFFFFF8);
          v157 = (void *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v156 = *v157;
          v156[1] = v157[1];
          *(unsigned char *)(v75 + v257) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_334:
          swift_bridgeObjectRetain();
          goto LABEL_355;
        case 8u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v229);
          unint64_t v132 = (void *)(((v75 | 7) + v224) & 0xFFFFFFFFFFFFFFF8);
          int v133 = (void *)(((v76 | 7) + v224) & 0xFFFFFFFFFFFFFFF8);
          void *v132 = *v133;
          v132[1] = v133[1];
          unint64_t v134 = ((unint64_t)v132 + v225) & v223;
          unint64_t v135 = (const void *)(((unint64_t)v133 + v225) & v223);
          swift_bridgeObjectRetain();
          unint64_t v259 = (unint64_t)v135;
          if (v227 == v226)
          {
            if (!__swift_getEnumTagSinglePayload((uint64_t)v135, v227, v242))
            {
              unint64_t v136 = (const void *)(((unint64_t)v135 + v250) & v248);
              goto LABEL_343;
            }
LABEL_323:
            memcpy((void *)v134, v135, v15);
LABEL_352:
            size_t v180 = __n;
            goto LABEL_353;
          }
          unint64_t v136 = (const void *)(((unint64_t)v135 + v250) & v248);
          if (v221 != v226)
          {
            unint64_t v174 = *(void *)((((unint64_t)v136 + v246) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v174 >= 0xFFFFFFFF) {
              LODWORD(v174) = -1;
            }
            if ((v174 + 1) < 2) {
              goto LABEL_343;
            }
            goto LABEL_323;
          }
          if (v236 >= 2
            && __swift_getEnumTagSinglePayload(((unint64_t)v135 + v250) & v248, v236, v241) >= 2)
          {
            goto LABEL_323;
          }
LABEL_343:
          (*(void (**)(unint64_t, const void *, uint64_t))(v263 + 16))(v134, v135, v242);
          unint64_t v175 = v134;
          id v176 = (void *)((v250 + v134) & v248);
          if (__swift_getEnumTagSinglePayload((uint64_t)v136, 1, v241))
          {
            memcpy(v176, v136, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v222 + 16))(v176, v136, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v176, 0, 1, v241);
          }
          size_t v180 = v252;
          unint64_t v181 = (void *)(((unint64_t)v176 + v246) & 0xFFFFFFFFFFFFFFF8);
          long long v182 = (void *)(((unint64_t)v136 + v246) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v181 = *v182;
          v181[1] = v182[1];
          unint64_t v183 = ((unint64_t)v181 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v184 = ((unint64_t)v182 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v185 = *(_DWORD *)v184;
          *(unsigned char *)(v183 + 4) = *(unsigned char *)(v184 + 4);
          *(_DWORD *)unint64_t v183 = v185;
          swift_bridgeObjectRetain();
          unint64_t v134 = v175;
          if (!v236) {
            goto LABEL_352;
          }
LABEL_353:
          unint64_t v186 = (((v230 + v180 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          unsigned int v187 = (void *)(((v134 | 7) + v186) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v116 = *(void **)(((v259 | 7) + v186) & 0xFFFFFFFFFFFFFFF8);
          void *v187 = v116;
          char v117 = 8;
LABEL_354:
          *(unsigned char *)(v75 + v22) = v117;
          id v188 = v116;
LABEL_355:
          size_t v114 = v261;
LABEL_356:
          unint64_t v189 = (void *)(((v76 | 7) + v114) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v190 = (void *)(((v75 | 7) + v114) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v190 = *v189;
          unint64_t v191 = ((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v192 = ((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v193 = *(void *)(v192 + 24);
          swift_bridgeObjectRetain();
          if (v193 < 0xFFFFFFFF)
          {
            long long v194 = *(_OWORD *)v192;
            long long v195 = *(_OWORD *)(v192 + 16);
            *(void *)(v191 + 32) = *(void *)(v192 + 32);
            *(_OWORD *)unint64_t v191 = v194;
            *(_OWORD *)(v191 + 16) = v195;
          }
          else
          {
            *(void *)(v191 + 24) = v193;
            *(void *)(v191 + 32) = *(void *)(v192 + 32);
            (**(void (***)(unint64_t, unint64_t, unint64_t))(v193 - 8))(v191, v192, v193);
          }
          *(unsigned char *)(v191 + 40) = *(unsigned char *)(v192 + 40);
          if (v26 > 3) {
            goto LABEL_363;
          }
          unsigned int v196 = ((1 << (8 * v26)) + 1) >> (8 * v26);
          uint64_t v197 = 2;
          if (v196 > 0xFFFD) {
            uint64_t v197 = 4;
          }
          if (v196 <= 0xFD) {
LABEL_363:
          }
            uint64_t v197 = 1;
          unint64_t v198 = v197 + v26;
          if (v198 <= v23) {
            unint64_t v198 = v23;
          }
          if (v198 <= 9) {
            unint64_t v198 = 9;
          }
          if (v198 <= 3)
          {
            unsigned int v199 = ((1 << (8 * v198)) + 3) >> (8 * v198);
            if (v199 > 0xFFFB)
            {
              *(_DWORD *)&a1[v198] = 0;
              return v2;
            }
            if (v199 > 0xFB)
            {
              *(_WORD *)&a1[v198] = 0;
              return v2;
            }
          }
          a1[v198] = 0;
          return v2;
        case 9u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v232 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v233);
          char v115 = 9;
LABEL_299:
          *(unsigned char *)(v75 + v22) = v115;
          goto LABEL_355;
        default:
          size_t v114 = v261;
          memcpy((void *)((unint64_t)&a1[v256] & v254), (const void *)((unint64_t)&v39[v256] & v254), v261);
          goto LABEL_356;
      }
    case 1u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v243 + 16))(a1, v39, v244);
      unint64_t v81 = (unint64_t)&a1[v256] & v254;
      unint64_t v82 = (unint64_t)&v39[v256] & v254;
      unsigned int v83 = *(unsigned __int8 *)(v82 + v22);
      unsigned int v84 = v83 - 10;
      if (v83 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v85 = v22;
        }
        else {
          uint64_t v85 = 4;
        }
        switch(v85)
        {
          case 1:
            int v86 = *(unsigned __int8 *)v82;
            goto LABEL_246;
          case 2:
            int v86 = *(unsigned __int16 *)v82;
            goto LABEL_246;
          case 3:
            int v86 = *(unsigned __int16 *)v82 | (*(unsigned __int8 *)(((unint64_t)&v39[v256] & v254) + 2) << 16);
            goto LABEL_246;
          case 4:
            int v86 = *(_DWORD *)v82;
LABEL_246:
            if (v22 < 4) {
              unsigned int v83 = (v86 | (v84 << (8 * v22))) + 10;
            }
            else {
              unsigned int v83 = v86 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v83)
      {
        case 0u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v239 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v240);
          *(unsigned char *)(v81 + v22) = 0;
          goto LABEL_379;
        case 1u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v239 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v240);
          *(void *)((v231 + v81) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v231 + v82) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v81 + v22) = 1;
          sub_1C9BEC838();
        case 2u:
          *(void *)unint64_t v81 = *(void *)v82;
          *(void *)(((unint64_t)&a1[v256] & v254) + 8) = *(void *)(((unint64_t)&v39[v256] & v254) + 8);
          *(void *)(((unint64_t)&a1[v256] & v254) + 0x10) = *(void *)(((unint64_t)&v39[v256] & v254)
                                                                               + 0x10);
          *(unsigned char *)(v81 + v22) = 2;
          swift_bridgeObjectRetain();
          goto LABEL_339;
        case 3u:
          *(void *)unint64_t v81 = *(void *)v82;
          *(unsigned char *)(v81 + v22) = 3;
          swift_unknownObjectRetain();
          goto LABEL_379;
        case 4u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v234 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v235);
          char v124 = 4;
          goto LABEL_311;
        case 5u:
          uint64_t v125 = *(void **)v82;
          *(void *)unint64_t v81 = *(void *)v82;
          char v126 = 5;
          goto LABEL_378;
        case 6u:
          uint64_t v127 = v22;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v242);
          BOOL v128 = (void *)((v250 + v81) & v248);
          uint64_t v129 = (const void *)((v250 + v82) & v248);
          if (__swift_getEnumTagSinglePayload((uint64_t)v129, 1, v241))
          {
            memcpy(v128, v129, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v222 + 16))(v128, v129, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v128, 0, 1, v241);
          }
          v158 = (void *)(((unint64_t)v128 + v246) & 0xFFFFFFFFFFFFFFF8);
          v159 = (void *)(((unint64_t)v129 + v246) & 0xFFFFFFFFFFFFFFF8);
          void *v158 = *v159;
          v158[1] = v159[1];
          unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v161 = ((unint64_t)v159 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v162 = *(_DWORD *)v161;
          *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
          *(_DWORD *)unint64_t v160 = v162;
          *(unsigned char *)(v81 + v127) = 6;
          goto LABEL_339;
        case 7u:
          uint64_t v258 = v22;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v263 + 16))(v81, v82, v242);
          uint64_t v130 = (void *)((v250 + v81) & v248);
          unint64_t v131 = (const void *)((v250 + v82) & v248);
          if (__swift_getEnumTagSinglePayload((uint64_t)v131, 1, v241))
          {
            memcpy(v130, v131, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v222 + 16))(v130, v131, v241);
            __swift_storeEnumTagSinglePayload((uint64_t)v130, 0, 1, v241);
          }
          v163 = (void *)(((unint64_t)v130 + v246) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v164 = (void *)(((unint64_t)v131 + v246) & 0xFFFFFFFFFFFFFFF8);
          void *v163 = *v164;
          v163[1] = v164[1];
          unint64_t v165 = ((unint64_t)v163 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v166 = ((unint64_t)v164 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v167 = *(_DWORD *)v166;
          *(unsigned char *)(v165 + 4) = *(unsigned char *)(v166 + 4);
          *(_DWORD *)unint64_t v165 = v167;
          v168 = (void *)(((v81 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v169 = (void *)(((v82 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
          void *v168 = *v169;
          v168[1] = v169[1];
          unint64_t v170 = (void *)(((unint64_t)v168 + 23) & 0xFFFFFFFFFFFFFFF8);
          int v171 = (void *)(((unint64_t)v169 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v170 = *v171;
          v170[1] = v171[1];
          size_t v172 = (void *)(((unint64_t)v170 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v173 = (void *)(((unint64_t)v171 + 23) & 0xFFFFFFFFFFFFFFF8);
          void *v172 = *v173;
          v172[1] = v173[1];
          *(unsigned char *)(v81 + v258) = 7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_339:
          swift_bridgeObjectRetain();
          goto LABEL_379;
        case 8u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v228 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v229);
          unint64_t v137 = (void *)(((v81 | 7) + v224) & 0xFFFFFFFFFFFFFFF8);
          int v138 = (void *)(((v82 | 7) + v224) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v137 = *v138;
          v137[1] = v138[1];
          unint64_t v139 = ((unint64_t)v137 + v225) & v223;
          uint64_t v140 = (const void *)(((unint64_t)v138 + v225) & v223);
          swift_bridgeObjectRetain();
          unint64_t v260 = (unint64_t)v140;
          if (v227 == v226)
          {
            if (!__swift_getEnumTagSinglePayload((uint64_t)v140, v227, v242))
            {
              uint64_t v141 = (const void *)(((unint64_t)v140 + v250) & v248);
              goto LABEL_348;
            }
          }
          else
          {
            uint64_t v141 = (const void *)(((unint64_t)v140 + v250) & v248);
            if (v221 == v226)
            {
              if (v236 < 2
                || __swift_getEnumTagSinglePayload(((unint64_t)v140 + v250) & v248, v236, v241) < 2)
              {
                goto LABEL_348;
              }
            }
            else
            {
              unint64_t v177 = *(void *)((((unint64_t)v141 + v246) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v177 >= 0xFFFFFFFF) {
                LODWORD(v177) = -1;
              }
              if ((v177 + 1) < 2)
              {
LABEL_348:
                (*(void (**)(unint64_t, const void *, uint64_t))(v263 + 16))(v139, v140, v242);
                unint64_t v178 = v139;
                unint64_t v179 = (void *)((v250 + v139) & v248);
                if (__swift_getEnumTagSinglePayload((uint64_t)v141, 1, v241))
                {
                  memcpy(v179, v141, __n);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v222 + 16))(v179, v141, v241);
                  __swift_storeEnumTagSinglePayload((uint64_t)v179, 0, 1, v241);
                }
                size_t v200 = v252;
                unint64_t v201 = (void *)(((unint64_t)v179 + v246) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v202 = (void *)(((unint64_t)v141 + v246) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v201 = *v202;
                v201[1] = v202[1];
                unint64_t v203 = ((unint64_t)v201 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v204 = ((unint64_t)v202 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v205 = *(_DWORD *)v204;
                *(unsigned char *)(v203 + 4) = *(unsigned char *)(v204 + 4);
                *(_DWORD *)unint64_t v203 = v205;
                swift_bridgeObjectRetain();
                unint64_t v139 = v178;
                if (!v236) {
                  goto LABEL_376;
                }
LABEL_377:
                unint64_t v206 = (((v230 + v200 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                unsigned int v207 = (void *)(((v139 | 7) + v206) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v125 = *(void **)(((v260 | 7) + v206) & 0xFFFFFFFFFFFFFFF8);
                void *v207 = v125;
                char v126 = 8;
LABEL_378:
                *(unsigned char *)(v81 + v22) = v126;
                id v208 = v125;
LABEL_379:
                size_t v123 = v261;
LABEL_380:
                uint64_t v209 = (void *)(((v82 | 7) + v123) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v210 = (void *)(((v81 | 7) + v123) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v210 = *v209;
                unint64_t v211 = ((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v212 = ((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v213 = *(void *)(v212 + 24);
                swift_bridgeObjectRetain();
                if (v213 < 0xFFFFFFFF)
                {
                  long long v214 = *(_OWORD *)v212;
                  long long v215 = *(_OWORD *)(v212 + 16);
                  *(void *)(v211 + 32) = *(void *)(v212 + 32);
                  *(_OWORD *)unint64_t v211 = v214;
                  *(_OWORD *)(v211 + 16) = v215;
                }
                else
                {
                  *(void *)(v211 + 24) = v213;
                  *(void *)(v211 + 32) = *(void *)(v212 + 32);
                  (**(void (***)(unint64_t, unint64_t, unint64_t))(v213 - 8))(v211, v212, v213);
                }
                *(unsigned char *)(v211 + 40) = *(unsigned char *)(v212 + 40);
                if (v26 > 3) {
                  goto LABEL_387;
                }
                unsigned int v216 = ((1 << (8 * v26)) + 1) >> (8 * v26);
                uint64_t v217 = 2;
                if (v216 > 0xFFFD) {
                  uint64_t v217 = 4;
                }
                if (v216 <= 0xFD) {
LABEL_387:
                }
                  uint64_t v217 = 1;
                unint64_t v93 = v217 + v26;
                if (v93 <= v23) {
                  unint64_t v93 = v23;
                }
                if (v93 <= 9) {
                  unint64_t v93 = 9;
                }
                if (v93 > 3) {
                  goto LABEL_395;
                }
                int v101 = 1;
                unsigned int v218 = ((1 << (8 * v93)) + 3) >> (8 * v93);
                if (v218 <= 0xFFFB)
                {
                  if (v218 <= 0xFB)
                  {
LABEL_395:
                    char v95 = 1;
                    goto LABEL_396;
                  }
LABEL_398:
                  *(_WORD *)&a1[v93] = v101;
                  return v2;
                }
LABEL_397:
                *(_DWORD *)&a1[v93] = v101;
                return v2;
              }
            }
          }
          memcpy((void *)v139, v140, v15);
LABEL_376:
          size_t v200 = __n;
          goto LABEL_377;
        case 9u:
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v232 + 16))((unint64_t)&a1[v256] & v254, (unint64_t)&v39[v256] & v254, v233);
          char v124 = 9;
LABEL_311:
          *(unsigned char *)(v81 + v22) = v124;
          goto LABEL_379;
        default:
          size_t v123 = v261;
          memcpy((void *)((unint64_t)&a1[v256] & v254), (const void *)((unint64_t)&v39[v256] & v254), v261);
          goto LABEL_380;
      }
    case 2u:
      if (v26 > 3) {
        goto LABEL_196;
      }
      unsigned int v87 = ((1 << v27) + 1) >> v27;
      if (v87 > 0xFFFD)
      {
        unsigned int v88 = *(_DWORD *)&v39[v26];
      }
      else if (v87 > 0xFD)
      {
        unsigned int v88 = *(unsigned __int16 *)&v39[v26];
      }
      else
      {
LABEL_196:
        unsigned int v88 = v39[v26];
      }
      unsigned int v102 = v88 - 2;
      if (v88 >= 2)
      {
        if (v26 <= 3) {
          uint64_t v103 = v26;
        }
        else {
          uint64_t v103 = 4;
        }
        switch(v103)
        {
          case 1:
            int v104 = *v39;
            goto LABEL_254;
          case 2:
            int v104 = *(unsigned __int16 *)v39;
            goto LABEL_254;
          case 3:
            int v104 = *(unsigned __int16 *)v39 | (v39[2] << 16);
            goto LABEL_254;
          case 4:
            int v104 = *(_DWORD *)v39;
LABEL_254:
            if (v26 < 4) {
              v104 |= v102 << v27;
            }
            unsigned int v88 = v104 + 2;
            break;
          default:
            break;
        }
      }
      if (v88 == 1)
      {
        uint64_t v106 = *(void *)v39;
        id v107 = *(id *)v39;
        *(void *)a1 = v106;
        a1[8] = v39[8];
        if (v26 <= 3)
        {
          unsigned int v108 = ((1 << v27) + 1) >> v27;
          if (v108 > 0xFFFD)
          {
            *(_DWORD *)&a1[v26] = 1;
            goto LABEL_274;
          }
          if (v108 > 0xFD)
          {
            *(_WORD *)&a1[v26] = 1;
            goto LABEL_274;
          }
        }
        a1[v26] = 1;
      }
      else
      {
        if (!v88)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v238 + 16))(a1, v39, v25);
          if (v26 > 3)
          {
LABEL_262:
            a1[v26] = 0;
            goto LABEL_273;
          }
          unsigned int v105 = ((1 << v27) + 1) >> v27;
          if (v105 > 0xFFFD)
          {
            *(_DWORD *)&a1[v26] = 0;
          }
          else
          {
            if (v105 <= 0xFD) {
              goto LABEL_262;
            }
            *(_WORD *)&a1[v26] = 0;
          }
LABEL_274:
          unsigned int v111 = ((1 << v27) + 1) >> v27;
          uint64_t v112 = 2;
          if (v111 > 0xFFFD) {
            uint64_t v112 = 4;
          }
          if (v111 > 0xFD)
          {
LABEL_278:
            unint64_t v93 = v112 + v26;
            if (v93 <= v23) {
              unint64_t v93 = v23;
            }
            if (v93 <= 9) {
              unint64_t v93 = 9;
            }
            if (v93 <= 3)
            {
              unsigned int v113 = ((1 << (8 * v93)) + 3) >> (8 * v93);
              if (v113 > 0xFFFB)
              {
                int v101 = 2;
                goto LABEL_397;
              }
              if (v113 > 0xFB)
              {
                LOWORD(v101) = 2;
                goto LABEL_398;
              }
            }
            char v95 = 2;
LABEL_396:
            a1[v93] = v95;
            return v2;
          }
LABEL_277:
          uint64_t v112 = 1;
          goto LABEL_278;
        }
        if (v26 > 3) {
          goto LABEL_271;
        }
        unsigned int v109 = ((1 << v27) + 1) >> v27;
        uint64_t v110 = 2;
        if (v109 > 0xFFFD) {
          uint64_t v110 = 4;
        }
        if (v109 <= 0xFD) {
LABEL_271:
        }
          uint64_t v110 = 1;
        memcpy(a1, v39, v110 + v26);
      }
LABEL_273:
      if (v26 > 3) {
        goto LABEL_277;
      }
      goto LABEL_274;
    case 3u:
      id v89 = *(id *)v39;
      id v90 = *(id *)v39;
      *(void *)a1 = v89;
      a1[8] = v39[8];
      if (v26 > 3) {
        goto LABEL_201;
      }
      unsigned int v91 = ((1 << v27) + 1) >> v27;
      uint64_t v92 = 2;
      if (v91 > 0xFFFD) {
        uint64_t v92 = 4;
      }
      if (v91 <= 0xFD) {
LABEL_201:
      }
        uint64_t v92 = 1;
      unint64_t v93 = v92 + v26;
      if (v93 <= v23) {
        unint64_t v93 = v23;
      }
      if (v93 <= 9) {
        unint64_t v93 = 9;
      }
      if (v93 > 3) {
        goto LABEL_209;
      }
      unsigned int v94 = ((1 << (8 * v93)) + 3) >> (8 * v93);
      if (v94 > 0xFFFB)
      {
        int v101 = 3;
        goto LABEL_397;
      }
      if (v94 <= 0xFB)
      {
LABEL_209:
        char v95 = 3;
        goto LABEL_396;
      }
      LOWORD(v101) = 3;
      goto LABEL_398;
    default:
      if (v26 > 3) {
        goto LABEL_214;
      }
      unsigned int v96 = ((1 << v27) + 1) >> v27;
      uint64_t v97 = 2;
      if (v96 > 0xFFFD) {
        uint64_t v97 = 4;
      }
      if (v96 <= 0xFD) {
LABEL_214:
      }
        uint64_t v97 = 1;
      unint64_t v98 = v97 + v26;
      if (v98 <= v23) {
        unint64_t v98 = v23;
      }
      if (v98 <= 9) {
        unint64_t v98 = 9;
      }
      if (v98 > 3) {
        goto LABEL_223;
      }
      unsigned int v99 = ((1 << (8 * v98)) + 3) >> (8 * v98);
      uint64_t v100 = 2;
      if (v99 > 0xFFFB) {
        uint64_t v100 = 4;
      }
      if (v99 <= 0xFB) {
LABEL_223:
      }
        uint64_t v100 = 1;
      memcpy(a1, v39, v100 + v98);
      return v2;
  }
}

unsigned char *sub_1C9A94A80(unsigned char *a1, unsigned __int8 *a2)
{
  uint64_t v208 = *(void *)(sub_1C9BEAB08() - 8);
  uint64_t v226 = *(void *)(v208 + 64);
  uint64_t v205 = *(void *)(sub_1C9BEC028() - 8);
  int v2 = *(_DWORD *)(v205 + 80);
  uint64_t v217 = *(void *)(sub_1C9BEAC48() - 8);
  uint64_t v204 = v217;
  int v210 = *(_DWORD *)(v217 + 80) | v2;
  uint64_t v207 = sub_1C9BEAF18();
  uint64_t v215 = *(void *)(v207 - 8);
  uint64_t v225 = v215;
  int v3 = *(_DWORD *)(v215 + 80) & 0xF8;
  uint64_t v206 = sub_1C9BEAE48();
  uint64_t v4 = *(void *)(v206 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 | v5 | 7;
  uint64_t v212 = *(void *)(sub_1C9BEC928() - 8);
  uint64_t v198 = v212;
  int v7 = *(_DWORD *)(v212 + 80);
  uint64_t v8 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v203 = v8;
  uint64_t v9 = (v210 | (v7 | *(_DWORD *)(v8 + 80))) & 0xF8 | v6;
  uint64_t v214 = v226 + v9;
  unint64_t v10 = *(void *)(v205 + 64);
  unint64_t v202 = v10 + 7;
  if (((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v10) {
    unint64_t v10 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v10 <= *(void *)(v217 + 64)) {
    unint64_t v10 = *(void *)(v217 + 64);
  }
  if (v10 <= 0x18) {
    unint64_t v11 = 24;
  }
  else {
    unint64_t v11 = v10;
  }
  uint64_t v216 = *(void *)(v215 + 64) + v5;
  uint64_t v218 = v5;
  uint64_t v194 = v4;
  int v12 = *(_DWORD *)(v4 + 84);
  size_t v13 = *(void *)(v4 + 64);
  size_t v192 = v13;
  if (!v12) {
    ++v13;
  }
  size_t v211 = v13;
  size_t v14 = v13 + 7;
  uint64_t v199 = v216 & ~v5;
  unint64_t v15 = (v13 + 7 + v199) & 0xFFFFFFFFFFFFFFF8;
  size_t v16 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  unint64_t v201 = v11;
  if (v16 <= v11) {
    unint64_t v17 = v11;
  }
  else {
    unint64_t v17 = (v15 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v18 = v15 + 31;
  unint64_t v19 = ((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 16;
  if (v19 + 16 > v17) {
    unint64_t v17 = v19 + 16;
  }
  uint64_t v195 = *(void *)(v212 + 64);
  uint64_t v196 = v6 + 16;
  uint64_t v21 = v3 | v5 | 7;
  unint64_t v22 = (v6 + 16 + ((v195 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  uint64_t v23 = *(unsigned int *)(v225 + 84);
  unsigned int v193 = *(_DWORD *)(v4 + 84);
  BOOL v24 = v12 != 0;
  unsigned int v25 = v12 - 1;
  if (v24) {
    unsigned int v26 = v25;
  }
  else {
    unsigned int v26 = 0;
  }
  if (v26 <= v23) {
    unsigned int v27 = *(_DWORD *)(v225 + 84);
  }
  else {
    unsigned int v27 = v26;
  }
  if (v27 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  unsigned int v197 = v27;
  unint64_t v28 = ((v18 + v22) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v213 = v28;
  if (v28 <= v17) {
    unint64_t v28 = v17;
  }
  unint64_t v29 = *(void *)(v8 + 64);
  unint64_t v200 = v29;
  if (v29 <= v28) {
    unint64_t v30 = v28;
  }
  else {
    unint64_t v30 = v29;
  }
  unint64_t v227 = ((((v30 + ((v226 + v9) & ~v9) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t v31 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v31 + 64) <= 9uLL) {
    uint64_t v32 = 9;
  }
  else {
    uint64_t v32 = *(void *)(v31 + 64);
  }
  char v33 = 8 * v32;
  if (v32 > 3) {
    goto LABEL_35;
  }
  unsigned int v34 = ((1 << v33) + 1) >> v33;
  uint64_t v35 = 2;
  if (v34 > 0xFFFD) {
    uint64_t v35 = 4;
  }
  if (v34 <= 0xFD) {
LABEL_35:
  }
    uint64_t v35 = 1;
  unint64_t v36 = v35 + v32;
  unint64_t v37 = v227;
  if (v36 <= v227) {
    unint64_t v36 = v227;
  }
  if (v36 <= 9) {
    unint64_t v36 = 9;
  }
  if (v36 > 3) {
    goto LABEL_41;
  }
  unsigned int v39 = ((1 << (8 * v36)) + 3) >> (8 * v36);
  if (v39 > 0xFFFB)
  {
    unsigned int v38 = *(_DWORD *)&a2[v36];
  }
  else
  {
    if (v39 <= 0xFB)
    {
LABEL_41:
      unsigned int v38 = a2[v36];
      goto LABEL_46;
    }
    unsigned int v38 = *(unsigned __int16 *)&a2[v36];
  }
LABEL_46:
  unsigned int v40 = v38 - 4;
  if (v38 >= 4)
  {
    if (v32 > 3) {
      goto LABEL_51;
    }
    unsigned int v41 = ((1 << v33) + 1) >> v33;
    uint64_t v42 = 2;
    if (v41 > 0xFFFD) {
      uint64_t v42 = 4;
    }
    if (v41 <= 0xFD) {
LABEL_51:
    }
      uint64_t v42 = 1;
    unint64_t v43 = v42 + v32;
    if (v43 <= v227) {
      unint64_t v43 = v227;
    }
    if (v43 <= 9) {
      LODWORD(v43) = 9;
    }
    if (v43 <= 3) {
      uint64_t v44 = v43;
    }
    else {
      uint64_t v44 = 4;
    }
    switch(v44)
    {
      case 1:
        int v45 = *a2;
        goto LABEL_64;
      case 2:
        int v45 = *(unsigned __int16 *)a2;
        goto LABEL_64;
      case 3:
        int v45 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_64;
      case 4:
        int v45 = *(_DWORD *)a2;
LABEL_64:
        if (v43 < 4) {
          v45 |= v40 << (8 * v43);
        }
        unsigned int v38 = v45 + 4;
        break;
      default:
        break;
    }
  }
  unint64_t v191 = v20;
  size_t v221 = v14;
  uint64_t v46 = ~v9;
  uint64_t v47 = ~v21;
  switch(v38)
  {
    case 0u:
      uint64_t v189 = ~v218;
      size_t v219 = v30 + 1;
      int v48 = a1;
      (*(void (**)(unsigned char *))(v208 + 32))(a1);
      unint64_t v49 = (unint64_t)&a1[v214] & v46;
      unint64_t v50 = (unint64_t)&a2[v214] & v46;
      unsigned int v51 = *(unsigned __int8 *)(v50 + v30);
      unsigned int v52 = v51 - 10;
      if (v51 >= 0xA)
      {
        if (v30 <= 3) {
          uint64_t v53 = v30;
        }
        else {
          uint64_t v53 = 4;
        }
        switch(v53)
        {
          case 1:
            int v54 = *(unsigned __int8 *)v50;
            goto LABEL_125;
          case 2:
            int v54 = *(unsigned __int16 *)v50;
            goto LABEL_125;
          case 3:
            int v54 = *(unsigned __int16 *)((unint64_t)&a2[v214] & v46) | (*(unsigned __int8 *)(((unint64_t)&a2[v214] & v46)
                                                                                                 + 2) << 16);
            goto LABEL_125;
          case 4:
            int v54 = *(_DWORD *)v50;
LABEL_125:
            if (v30 < 4) {
              unsigned int v51 = (v54 | (v52 << (8 * v30))) + 10;
            }
            else {
              unsigned int v51 = v54 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v51)
      {
        case 0u:
          (*(void (**)(void))(v205 + 32))();
          unint64_t v49 = (unint64_t)&a1[v214] & v46;
          *(unsigned char *)(v49 + v30) = 0;
          goto LABEL_225;
        case 1u:
          uint64_t v85 = (_OWORD *)((unint64_t)&a1[v214] & v46);
          (*(void (**)(void))(v205 + 32))();
          unint64_t v49 = (unint64_t)v85;
          *(void *)(((unint64_t)v85 + v202) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v202 + v50) & 0xFFFFFFFFFFFFFFF8);
          char v86 = 1;
          goto LABEL_187;
        case 2u:
          long long v87 = *(_OWORD *)v50;
          *(void *)(((unint64_t)&a1[v214] & v46) + 0x10) = *(void *)(((unint64_t)&a2[v214] & v46)
                                                                              + 0x10);
          *(_OWORD *)unint64_t v49 = v87;
          char v88 = 2;
          goto LABEL_181;
        case 3u:
          *(void *)unint64_t v49 = *(void *)v50;
          char v88 = 3;
          goto LABEL_181;
        case 4u:
          uint64_t v85 = (_OWORD *)((unint64_t)&a1[v214] & v46);
          (*(void (**)(void))(v204 + 32))();
          unint64_t v49 = (unint64_t)v85;
          char v86 = 4;
          goto LABEL_187;
        case 5u:
          *(void *)unint64_t v49 = *(void *)v50;
          char v88 = 5;
LABEL_181:
          *(unsigned char *)(v49 + v30) = v88;
          goto LABEL_225;
        case 6u:
          (*(void (**)(void))(v225 + 32))();
          unint64_t v89 = (unint64_t)&a1[v214] & v46;
          id v90 = (void *)((v216 + v89) & v189);
          unsigned int v91 = (const void *)((v216 + v50) & v189);
          if (__swift_getEnumTagSinglePayload((uint64_t)v91, 1, v206))
          {
            memcpy(v90, v91, v211);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v194 + 32))(v90, v91, v206);
            __swift_storeEnumTagSinglePayload((uint64_t)v90, 0, 1, v206);
          }
          unint64_t v121 = (_OWORD *)(((unint64_t)v90 + v221) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v122 = (_OWORD *)(((unint64_t)v91 + v221) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v121 = *v122;
          unint64_t v123 = ((unint64_t)v121 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v124 = ((unint64_t)v122 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v125 = *(_DWORD *)v124;
          *(unsigned char *)(v123 + 4) = *(unsigned char *)(v124 + 4);
          *(_DWORD *)unint64_t v123 = v125;
          unint64_t v49 = (unint64_t)&a1[v214] & v46;
          *(unsigned char *)(v89 + v30) = 6;
          goto LABEL_225;
        case 7u:
          (*(void (**)(void))(v225 + 32))();
          unint64_t v92 = (unint64_t)&a1[v214] & v46;
          unint64_t v93 = (void *)((v216 + v92) & v189);
          unsigned int v94 = (const void *)((v216 + v50) & v189);
          if (__swift_getEnumTagSinglePayload((uint64_t)v94, 1, v206))
          {
            memcpy(v93, v94, v211);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v194 + 32))(v93, v94, v206);
            __swift_storeEnumTagSinglePayload((uint64_t)v93, 0, 1, v206);
          }
          char v126 = (_OWORD *)(((unint64_t)v93 + v221) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v127 = (_OWORD *)(((unint64_t)v94 + v221) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v126 = *v127;
          unint64_t v128 = ((unint64_t)v126 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v129 = ((unint64_t)v127 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v130 = *(_DWORD *)v129;
          *(unsigned char *)(v128 + 4) = *(unsigned char *)(v129 + 4);
          *(_DWORD *)unint64_t v128 = v130;
          unint64_t v49 = (unint64_t)&a1[v214] & v46;
          unint64_t v131 = (_OWORD *)(((v92 | 7) + v16) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v132 = (_OWORD *)(((v50 | 7) + v16) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v131 = *v132;
          int v133 = (_OWORD *)(((unint64_t)v131 + 23) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v134 = (_OWORD *)(((unint64_t)v132 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v133 = *v134;
          *(_OWORD *)(((unint64_t)v133 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v134 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v92 + v30) = 7;
          goto LABEL_225;
        case 8u:
          unint64_t v223 = (unint64_t)&a1[v214] & v46;
          (*(void (**)(void))(v198 + 32))();
          uint64_t v106 = (_OWORD *)(((v223 | 7) + v195) & 0xFFFFFFFFFFFFFFF8);
          id v107 = (_OWORD *)(((v50 | 7) + v195) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v106 = *v107;
          unint64_t v108 = ((unint64_t)v106 + v196) & v47;
          uint64_t v109 = ((unint64_t)v107 + v196) & v47;
          if (v23 == v197)
          {
            size_t v110 = v211;
            if (!__swift_getEnumTagSinglePayload(v109, v23, v207))
            {
              unsigned int v111 = (const void *)((v216 + v109) & v189);
              goto LABEL_268;
            }
LABEL_213:
            memcpy((void *)v108, (const void *)v109, v16);
            size_t v84 = v219;
            unint64_t v49 = v223;
            unint64_t v119 = v227;
LABEL_277:
            size_t v178 = v110;
            goto LABEL_278;
          }
          unsigned int v111 = (const void *)((v216 + v109) & v189);
          BOOL v118 = v26 == v197;
          size_t v110 = v211;
          if (v118)
          {
            if (v193 < 2 || __swift_getEnumTagSinglePayload((v216 + v109) & v189, v193, v206) < 2) {
              goto LABEL_268;
            }
            goto LABEL_213;
          }
          unint64_t v169 = *(void *)((((unint64_t)v111 + v221) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v169 >= 0xFFFFFFFF) {
            LODWORD(v169) = -1;
          }
          if ((v169 + 1) >= 2) {
            goto LABEL_213;
          }
LABEL_268:
          unint64_t v119 = v227;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v225 + 32))(v108, v109, v207);
          unint64_t v170 = (void *)((v216 + v108) & v189);
          if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v206))
          {
            memcpy(v170, v111, v110);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v194 + 32))(v170, v111, v206);
            __swift_storeEnumTagSinglePayload((uint64_t)v170, 0, 1, v206);
          }
          unint64_t v49 = v223;
          unint64_t v173 = (_OWORD *)(((unint64_t)v170 + v221) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v174 = (_OWORD *)(((unint64_t)v111 + v221) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v173 = *v174;
          unint64_t v175 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v176 = *(_DWORD *)v175;
          unint64_t v177 = ((unint64_t)v173 + 19) & 0xFFFFFFFFFFFFFFF8;
          *(unsigned char *)(v177 + 4) = *(unsigned char *)(v175 + 4);
          *(_DWORD *)unint64_t v177 = v176;
          size_t v84 = v219;
          size_t v178 = v192;
          if (!v193) {
            goto LABEL_277;
          }
LABEL_278:
          unint64_t v179 = (((v199 + 7 + v178) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          *(void *)(((v108 | 7) + v179) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v109 | 7) + v179) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v180 = (((v199 + 7 + v110) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          if (v180 <= v201) {
            unint64_t v180 = v201;
          }
          if (v191 > v180) {
            unint64_t v180 = v191;
          }
          if (v213 > v180) {
            unint64_t v180 = v213;
          }
          if (v200 > v180) {
            unint64_t v180 = v200;
          }
          *(unsigned char *)(v49 + v180) = 8;
LABEL_227:
          unint64_t v135 = (void *)(((v49 | 7) + v84) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v136 = (void *)(((v50 | 7) + v84) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v135 = *v136;
          unint64_t v137 = ((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v138 = ((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v139 = *(_OWORD *)v138;
          long long v140 = *(_OWORD *)(v138 + 16);
          *(void *)(v137 + 32) = *(void *)(v138 + 32);
          *(_OWORD *)unint64_t v137 = v139;
          *(_OWORD *)(v137 + 16) = v140;
          *(unsigned char *)(v137 + 40) = *(unsigned char *)(v138 + 40);
          if (v32 > 3) {
            goto LABEL_231;
          }
          unsigned int v141 = ((1 << (8 * v32)) + 1) >> (8 * v32);
          uint64_t v142 = 2;
          if (v141 > 0xFFFD) {
            uint64_t v142 = 4;
          }
          if (v141 <= 0xFD) {
LABEL_231:
          }
            uint64_t v142 = 1;
          unint64_t v143 = v142 + v32;
          if (v143 <= v119) {
            unint64_t v143 = v119;
          }
          if (v143 <= 9) {
            unint64_t v143 = 9;
          }
          if (v143 <= 3)
          {
            unsigned int v144 = ((1 << (8 * v143)) + 3) >> (8 * v143);
            if (v144 > 0xFFFB)
            {
              *(_DWORD *)&a1[v143] = 0;
              return v48;
            }
            if (v144 > 0xFB)
            {
              *(_WORD *)&a1[v143] = 0;
              return v48;
            }
          }
          a1[v143] = 0;
          return v48;
        case 9u:
          uint64_t v85 = (_OWORD *)((unint64_t)&a1[v214] & v46);
          (*(void (**)(void))(v203 + 32))();
          unint64_t v49 = (unint64_t)v85;
          char v86 = 9;
LABEL_187:
          *((unsigned char *)v85 + v30) = v86;
LABEL_225:
          size_t v84 = v30 + 1;
          goto LABEL_226;
        default:
          size_t v84 = v30 + 1;
          memcpy((void *)v49, (const void *)v50, v219);
          unint64_t v49 = (unint64_t)&a1[v214] & v46;
LABEL_226:
          unint64_t v119 = v227;
          goto LABEL_227;
      }
    case 1u:
      uint64_t v190 = ~v218;
      size_t v220 = v30 + 1;
      int v48 = a1;
      (*(void (**)(unsigned char *))(v208 + 32))(a1);
      unint64_t v55 = (unint64_t)&a1[v214] & v46;
      unint64_t v56 = (unint64_t)&a2[v214] & v46;
      unsigned int v57 = *(unsigned __int8 *)(v56 + v30);
      unsigned int v58 = v57 - 10;
      if (v57 >= 0xA)
      {
        if (v30 <= 3) {
          uint64_t v59 = v30;
        }
        else {
          uint64_t v59 = 4;
        }
        switch(v59)
        {
          case 1:
            int v60 = *(unsigned __int8 *)v56;
            goto LABEL_133;
          case 2:
            int v60 = *(unsigned __int16 *)v56;
            goto LABEL_133;
          case 3:
            int v60 = *(unsigned __int16 *)((unint64_t)&a2[v214] & v46) | (*(unsigned __int8 *)(((unint64_t)&a2[v214] & v46)
                                                                                                 + 2) << 16);
            goto LABEL_133;
          case 4:
            int v60 = *(_DWORD *)v56;
LABEL_133:
            if (v30 < 4) {
              unsigned int v57 = (v60 | (v58 << (8 * v30))) + 10;
            }
            else {
              unsigned int v57 = v60 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v57)
      {
        case 0u:
          (*(void (**)(void))(v205 + 32))();
          unint64_t v55 = (unint64_t)&a1[v214] & v46;
          *(unsigned char *)(v55 + v30) = 0;
          goto LABEL_246;
        case 1u:
          unsigned int v96 = (_OWORD *)((unint64_t)&a1[v214] & v46);
          (*(void (**)(void))(v205 + 32))();
          unint64_t v55 = (unint64_t)v96;
          *(void *)(((unint64_t)v96 + v202) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v202 + v56) & 0xFFFFFFFFFFFFFFF8);
          char v97 = 1;
          goto LABEL_200;
        case 2u:
          long long v98 = *(_OWORD *)v56;
          *(void *)(((unint64_t)&a1[v214] & v46) + 0x10) = *(void *)(((unint64_t)&a2[v214] & v46)
                                                                              + 0x10);
          *(_OWORD *)unint64_t v55 = v98;
          char v99 = 2;
          goto LABEL_194;
        case 3u:
          *(void *)unint64_t v55 = *(void *)v56;
          char v99 = 3;
          goto LABEL_194;
        case 4u:
          unsigned int v96 = (_OWORD *)((unint64_t)&a1[v214] & v46);
          (*(void (**)(void))(v204 + 32))();
          unint64_t v55 = (unint64_t)v96;
          char v97 = 4;
          goto LABEL_200;
        case 5u:
          *(void *)unint64_t v55 = *(void *)v56;
          char v99 = 5;
LABEL_194:
          *(unsigned char *)(v55 + v30) = v99;
          goto LABEL_246;
        case 6u:
          (*(void (**)(void))(v225 + 32))();
          unint64_t v100 = (unint64_t)&a1[v214] & v46;
          int v101 = (void *)((v216 + v100) & v190);
          unsigned int v102 = (const void *)((v216 + v56) & v190);
          if (__swift_getEnumTagSinglePayload((uint64_t)v102, 1, v206))
          {
            memcpy(v101, v102, v211);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v194 + 32))(v101, v102, v206);
            __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v206);
          }
          unint64_t v145 = (_OWORD *)(((unint64_t)v101 + v221) & 0xFFFFFFFFFFFFFFF8);
          int v146 = (_OWORD *)(((unint64_t)v102 + v221) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v145 = *v146;
          unint64_t v147 = ((unint64_t)v145 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v148 = ((unint64_t)v146 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v149 = *(_DWORD *)v148;
          *(unsigned char *)(v147 + 4) = *(unsigned char *)(v148 + 4);
          *(_DWORD *)unint64_t v147 = v149;
          unint64_t v55 = (unint64_t)&a1[v214] & v46;
          *(unsigned char *)(v100 + v30) = 6;
          goto LABEL_246;
        case 7u:
          (*(void (**)(void))(v225 + 32))();
          unint64_t v103 = (unint64_t)&a1[v214] & v46;
          int v104 = (void *)((v216 + v103) & v190);
          unsigned int v105 = (const void *)((v216 + v56) & v190);
          if (__swift_getEnumTagSinglePayload((uint64_t)v105, 1, v206))
          {
            memcpy(v104, v105, v211);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v194 + 32))(v104, v105, v206);
            __swift_storeEnumTagSinglePayload((uint64_t)v104, 0, 1, v206);
          }
          unint64_t v150 = (_OWORD *)(((unint64_t)v104 + v221) & 0xFFFFFFFFFFFFFFF8);
          int v151 = (_OWORD *)(((unint64_t)v105 + v221) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v150 = *v151;
          unint64_t v152 = ((unint64_t)v150 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v153 = ((unint64_t)v151 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v154 = *(_DWORD *)v153;
          *(unsigned char *)(v152 + 4) = *(unsigned char *)(v153 + 4);
          *(_DWORD *)unint64_t v152 = v154;
          unint64_t v55 = (unint64_t)&a1[v214] & v46;
          v155 = (_OWORD *)(((v103 | 7) + v16) & 0xFFFFFFFFFFFFFFF8);
          v156 = (_OWORD *)(((v56 | 7) + v16) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v155 = *v156;
          v157 = (_OWORD *)(((unint64_t)v155 + 23) & 0xFFFFFFFFFFFFFFF8);
          v158 = (_OWORD *)(((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v157 = *v158;
          *(_OWORD *)(((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v158 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v103 + v30) = 7;
          goto LABEL_246;
        case 8u:
          unint64_t v224 = (unint64_t)&a1[v214] & v46;
          (*(void (**)(void))(v198 + 32))();
          uint64_t v112 = (_OWORD *)(((v224 | 7) + v195) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v113 = (_OWORD *)(((v56 | 7) + v195) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v112 = *v113;
          unint64_t v114 = ((unint64_t)v112 + v196) & v47;
          uint64_t v115 = ((unint64_t)v113 + v196) & v47;
          if (v23 == v197)
          {
            size_t v116 = v211;
            if (!__swift_getEnumTagSinglePayload(v115, v23, v207))
            {
              char v117 = (const void *)((v216 + v115) & v190);
              goto LABEL_273;
            }
          }
          else
          {
            char v117 = (const void *)((v216 + v115) & v190);
            BOOL v118 = v26 == v197;
            size_t v116 = v211;
            if (v118)
            {
              if (v193 < 2 || __swift_getEnumTagSinglePayload((v216 + v115) & v190, v193, v206) < 2) {
                goto LABEL_273;
              }
            }
            else
            {
              unint64_t v171 = *(void *)((((unint64_t)v117 + v221) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v171 >= 0xFFFFFFFF) {
                LODWORD(v171) = -1;
              }
              if ((v171 + 1) < 2)
              {
LABEL_273:
                unint64_t v120 = v227;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v225 + 32))(v114, v115, v207);
                size_t v172 = (void *)((v216 + v114) & v190);
                if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v206))
                {
                  memcpy(v172, v117, v116);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v194 + 32))(v172, v117, v206);
                  __swift_storeEnumTagSinglePayload((uint64_t)v172, 0, 1, v206);
                }
                unint64_t v55 = v224;
                unint64_t v181 = (_OWORD *)(((unint64_t)v172 + v221) & 0xFFFFFFFFFFFFFFF8);
                long long v182 = (_OWORD *)(((unint64_t)v117 + v221) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v181 = *v182;
                unint64_t v183 = ((unint64_t)v182 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v184 = *(_DWORD *)v183;
                unint64_t v185 = ((unint64_t)v181 + 19) & 0xFFFFFFFFFFFFFFF8;
                *(unsigned char *)(v185 + 4) = *(unsigned char *)(v183 + 4);
                *(_DWORD *)unint64_t v185 = v184;
                size_t v95 = v220;
                size_t v186 = v192;
                if (!v193) {
                  goto LABEL_289;
                }
LABEL_290:
                unint64_t v187 = (((v199 + 7 + v186) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                *(void *)(((v114 | 7) + v187) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v115 | 7) + v187) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v188 = (((v199 + 7 + v116) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                if (v188 <= v201) {
                  unint64_t v188 = v201;
                }
                if (v191 > v188) {
                  unint64_t v188 = v191;
                }
                if (v213 > v188) {
                  unint64_t v188 = v213;
                }
                if (v200 > v188) {
                  unint64_t v188 = v200;
                }
                *(unsigned char *)(v55 + v188) = 8;
LABEL_248:
                v159 = (void *)(((v55 | 7) + v95) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v160 = (void *)(((v56 | 7) + v95) & 0xFFFFFFFFFFFFFFF8);
                void *v159 = *v160;
                unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v162 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
                long long v163 = *(_OWORD *)v162;
                long long v164 = *(_OWORD *)(v162 + 16);
                *(void *)(v161 + 32) = *(void *)(v162 + 32);
                *(_OWORD *)unint64_t v161 = v163;
                *(_OWORD *)(v161 + 16) = v164;
                *(unsigned char *)(v161 + 40) = *(unsigned char *)(v162 + 40);
                if (v32 > 3) {
                  goto LABEL_252;
                }
                unsigned int v165 = ((1 << (8 * v32)) + 1) >> (8 * v32);
                uint64_t v166 = 2;
                if (v165 > 0xFFFD) {
                  uint64_t v166 = 4;
                }
                if (v165 <= 0xFD) {
LABEL_252:
                }
                  uint64_t v166 = 1;
                unint64_t v65 = v166 + v32;
                if (v65 <= v120) {
                  unint64_t v65 = v120;
                }
                if (v65 <= 9) {
                  unint64_t v65 = 9;
                }
                if (v65 > 3) {
                  goto LABEL_260;
                }
                int v73 = 1;
                unsigned int v167 = ((1 << (8 * v65)) + 3) >> (8 * v65);
                if (v167 <= 0xFFFB)
                {
                  if (v167 <= 0xFB)
                  {
LABEL_260:
                    char v67 = 1;
                    goto LABEL_261;
                  }
LABEL_263:
                  *(_WORD *)&v48[v65] = v73;
                  return v48;
                }
LABEL_262:
                *(_DWORD *)&v48[v65] = v73;
                return v48;
              }
            }
          }
          memcpy((void *)v114, (const void *)v115, v16);
          size_t v95 = v220;
          unint64_t v55 = v224;
          unint64_t v120 = v227;
LABEL_289:
          size_t v186 = v116;
          goto LABEL_290;
        case 9u:
          unsigned int v96 = (_OWORD *)((unint64_t)&a1[v214] & v46);
          (*(void (**)(void))(v203 + 32))();
          unint64_t v55 = (unint64_t)v96;
          char v97 = 9;
LABEL_200:
          *((unsigned char *)v96 + v30) = v97;
LABEL_246:
          size_t v95 = v30 + 1;
          goto LABEL_247;
        default:
          size_t v95 = v30 + 1;
          memcpy((void *)v55, (const void *)v56, v220);
          unint64_t v55 = (unint64_t)&a1[v214] & v46;
LABEL_247:
          unint64_t v120 = v227;
          goto LABEL_248;
      }
    case 2u:
      int v48 = a1;
      if (v32 > 3) {
        goto LABEL_83;
      }
      unsigned int v61 = ((1 << v33) + 1) >> v33;
      if (v61 > 0xFFFD)
      {
        unsigned int v62 = *(_DWORD *)&a2[v32];
      }
      else if (v61 > 0xFD)
      {
        unsigned int v62 = *(unsigned __int16 *)&a2[v32];
      }
      else
      {
LABEL_83:
        unsigned int v62 = a2[v32];
      }
      unsigned int v74 = v62 - 2;
      if (v62 >= 2)
      {
        if (v32 <= 3) {
          uint64_t v75 = v32;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *a2;
            goto LABEL_141;
          case 2:
            int v76 = *(unsigned __int16 *)a2;
            goto LABEL_141;
          case 3:
            int v76 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_141;
          case 4:
            int v76 = *(_DWORD *)a2;
LABEL_141:
            if (v32 < 4) {
              v76 |= v74 << v33;
            }
            unsigned int v62 = v76 + 2;
            break;
          default:
            break;
        }
      }
      if (v62 == 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        if (v32 <= 3)
        {
          unsigned int v78 = ((1 << v33) + 1) >> v33;
          if (v78 > 0xFFFD)
          {
            *(_DWORD *)&a1[v32] = 1;
            goto LABEL_161;
          }
          if (v78 > 0xFD)
          {
            *(_WORD *)&a1[v32] = 1;
            goto LABEL_161;
          }
        }
        a1[v32] = 1;
      }
      else
      {
        if (!v62)
        {
          (*(void (**)(unsigned char *))(v31 + 32))(a1);
          unint64_t v37 = v227;
          if (v32 > 3)
          {
LABEL_149:
            a1[v32] = 0;
            goto LABEL_160;
          }
          unsigned int v77 = ((1 << v33) + 1) >> v33;
          if (v77 > 0xFFFD)
          {
            *(_DWORD *)&a1[v32] = 0;
          }
          else
          {
            if (v77 <= 0xFD) {
              goto LABEL_149;
            }
            *(_WORD *)&a1[v32] = 0;
          }
LABEL_161:
          unsigned int v81 = ((1 << v33) + 1) >> v33;
          uint64_t v82 = 2;
          if (v81 > 0xFFFD) {
            uint64_t v82 = 4;
          }
          if (v81 > 0xFD)
          {
LABEL_165:
            unint64_t v65 = v82 + v32;
            if (v65 <= v37) {
              unint64_t v65 = v37;
            }
            if (v65 <= 9) {
              unint64_t v65 = 9;
            }
            if (v65 <= 3)
            {
              unsigned int v83 = ((1 << (8 * v65)) + 3) >> (8 * v65);
              if (v83 > 0xFFFB)
              {
                int v73 = 2;
                goto LABEL_262;
              }
              if (v83 > 0xFB)
              {
                LOWORD(v73) = 2;
                goto LABEL_263;
              }
            }
            char v67 = 2;
LABEL_261:
            v48[v65] = v67;
            return v48;
          }
LABEL_164:
          uint64_t v82 = 1;
          goto LABEL_165;
        }
        if (v32 > 3) {
          goto LABEL_158;
        }
        unsigned int v79 = ((1 << v33) + 1) >> v33;
        uint64_t v80 = 2;
        if (v79 > 0xFFFD) {
          uint64_t v80 = 4;
        }
        if (v79 <= 0xFD) {
LABEL_158:
        }
          uint64_t v80 = 1;
        memcpy(a1, a2, v80 + v32);
        unint64_t v37 = v227;
      }
LABEL_160:
      if (v32 > 3) {
        goto LABEL_164;
      }
      goto LABEL_161;
    case 3u:
      int v48 = a1;
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      if (v32 > 3) {
        goto LABEL_88;
      }
      unsigned int v63 = ((1 << v33) + 1) >> v33;
      uint64_t v64 = 2;
      if (v63 > 0xFFFD) {
        uint64_t v64 = 4;
      }
      if (v63 <= 0xFD) {
LABEL_88:
      }
        uint64_t v64 = 1;
      unint64_t v65 = v64 + v32;
      if (v65 <= v227) {
        unint64_t v65 = v227;
      }
      if (v65 <= 9) {
        unint64_t v65 = 9;
      }
      if (v65 > 3) {
        goto LABEL_96;
      }
      unsigned int v66 = ((1 << (8 * v65)) + 3) >> (8 * v65);
      if (v66 > 0xFFFB)
      {
        int v73 = 3;
        goto LABEL_262;
      }
      if (v66 <= 0xFB)
      {
LABEL_96:
        char v67 = 3;
        goto LABEL_261;
      }
      LOWORD(v73) = 3;
      goto LABEL_263;
    default:
      if (v32 > 3) {
        goto LABEL_101;
      }
      unsigned int v68 = ((1 << v33) + 1) >> v33;
      uint64_t v69 = 2;
      if (v68 > 0xFFFD) {
        uint64_t v69 = 4;
      }
      if (v68 <= 0xFD) {
LABEL_101:
      }
        uint64_t v69 = 1;
      int v48 = a1;
      unint64_t v70 = v69 + v32;
      if (v70 <= v227) {
        unint64_t v70 = v227;
      }
      if (v70 <= 9) {
        unint64_t v70 = 9;
      }
      if (v70 > 3) {
        goto LABEL_110;
      }
      unsigned int v71 = ((1 << (8 * v70)) + 3) >> (8 * v70);
      uint64_t v72 = 2;
      if (v71 > 0xFFFB) {
        uint64_t v72 = 4;
      }
      if (v71 <= 0xFB) {
LABEL_110:
      }
        uint64_t v72 = 1;
      memcpy(a1, a2, v72 + v70);
      return v48;
  }
}

unsigned __int8 *sub_1C9A96398(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t v3 = sub_1C9BEAB08();
  uint64_t v238 = *(void *)(v3 - 8);
  uint64_t v239 = v3;
  uint64_t v250 = *(void *)(v238 + 64);
  uint64_t v235 = sub_1C9BEC028();
  uint64_t v244 = *(void *)(v235 - 8);
  uint64_t v234 = v244;
  int v4 = *(_DWORD *)(v244 + 80);
  uint64_t v231 = sub_1C9BEAC48();
  uint64_t v248 = *(void *)(v231 - 8);
  uint64_t v230 = v248;
  int v240 = *(_DWORD *)(v248 + 80) | v4;
  uint64_t v236 = sub_1C9BEAF18();
  uint64_t v246 = *(void *)(v236 - 8);
  uint64_t v255 = v246;
  int v5 = *(_DWORD *)(v246 + 80) & 0xF8;
  uint64_t v237 = sub_1C9BEAE48();
  uint64_t v6 = *(void *)(v237 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v225 = sub_1C9BEC928();
  uint64_t v242 = *(void *)(v225 - 8);
  uint64_t v224 = v242;
  int v9 = *(_DWORD *)(v242 + 80);
  uint64_t v229 = sub_1C9BEC8F8();
  uint64_t v228 = *(void *)(v229 - 8);
  uint64_t v10 = (v240 | (v9 | *(_DWORD *)(v228 + 80))) & 0xF8 | v8;
  uint64_t v251 = v250 + v10;
  unint64_t v11 = *(void *)(v244 + 64);
  unint64_t v227 = v11 + 7;
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v248 + 64)) {
    unint64_t v11 = *(void *)(v248 + 64);
  }
  if (v11 <= 0x18) {
    unint64_t v12 = 24;
  }
  else {
    unint64_t v12 = v11;
  }
  uint64_t v247 = *(void *)(v246 + 64) + v7;
  uint64_t v13 = v7;
  uint64_t v218 = v6;
  int v14 = *(_DWORD *)(v6 + 84);
  size_t v15 = *(void *)(v6 + 64);
  size_t v217 = v15;
  if (!v14) {
    ++v15;
  }
  size_t __n = v15;
  size_t v241 = v15 + 7;
  uint64_t v226 = v247 & ~v7;
  unint64_t v16 = (v15 + 7 + v226) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v216 = v12;
  unint64_t v232 = (v16 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v232 <= v12) {
    unint64_t v17 = v12;
  }
  else {
    unint64_t v17 = (v16 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v18 = v16 + 31;
  unint64_t v215 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v215 > v17) {
    unint64_t v17 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v220 = *(void *)(v242 + 64);
  uint64_t v221 = v8 + 16;
  unsigned int v243 = *(_DWORD *)(v6 + 84);
  BOOL v19 = v14 != 0;
  unsigned int v20 = v14 - 1;
  if (!v19) {
    unsigned int v20 = 0;
  }
  unsigned int v223 = *(_DWORD *)(v255 + 84);
  unsigned int v212 = v20;
  if (v20 <= v223) {
    unsigned int v20 = *(_DWORD *)(v255 + 84);
  }
  if (v20 <= 0x7FFFFFFE) {
    unsigned int v20 = 2147483646;
  }
  unsigned int v222 = v20;
  unint64_t v21 = ((v18 + ((v8 + 16 + ((v220 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v214 = v21;
  if (v21 <= v17) {
    unint64_t v21 = v17;
  }
  unint64_t v213 = *(void *)(*(void *)(v229 - 8) + 64);
  if (v213 <= v21) {
    unint64_t v22 = v21;
  }
  else {
    unint64_t v22 = *(void *)(*(void *)(v229 - 8) + 64);
  }
  unint64_t v23 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v25 + 64) <= 9uLL) {
    uint64_t v26 = 9;
  }
  else {
    uint64_t v26 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v27 = 8 * v26;
  if (v26 > 3) {
    goto LABEL_34;
  }
  unsigned int v28 = ((1 << v27) + 1) >> v27;
  uint64_t v29 = 2;
  if (v28 > 0xFFFD) {
    uint64_t v29 = 4;
  }
  if (v28 <= 0xFD) {
LABEL_34:
  }
    uint64_t v29 = 1;
  unint64_t v30 = v29 + v26;
  if (v30 <= v23) {
    unint64_t v30 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  }
  if (v30 <= 9) {
    unint64_t v30 = 9;
  }
  int v2 = a1;
  if (v30 > 3) {
    goto LABEL_40;
  }
  unsigned int v32 = ((1 << (8 * v30)) + 3) >> (8 * v30);
  if (v32 > 0xFFFB)
  {
    unsigned int v31 = *(_DWORD *)&a1[v30];
  }
  else
  {
    if (v32 <= 0xFB)
    {
LABEL_40:
      unsigned int v31 = a1[v30];
      goto LABEL_45;
    }
    unsigned int v31 = *(unsigned __int16 *)&a1[v30];
  }
LABEL_45:
  unsigned int v33 = v31 - 4;
  if (v31 >= 4)
  {
    if (v26 > 3) {
      goto LABEL_50;
    }
    unsigned int v34 = ((1 << v27) + 1) >> v27;
    uint64_t v35 = 2;
    if (v34 > 0xFFFD) {
      uint64_t v35 = 4;
    }
    if (v34 <= 0xFD) {
LABEL_50:
    }
      uint64_t v35 = 1;
    unint64_t v36 = v35 + v26;
    if (v36 <= v23) {
      unint64_t v36 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
    }
    if (v36 <= 9) {
      LODWORD(v36) = 9;
    }
    if (v36 <= 3) {
      uint64_t v37 = v36;
    }
    else {
      uint64_t v37 = 4;
    }
    switch(v37)
    {
      case 1:
        int v38 = *a1;
        goto LABEL_63;
      case 2:
        int v38 = *(unsigned __int16 *)a1;
        goto LABEL_63;
      case 3:
        int v38 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_63;
      case 4:
        int v38 = *(_DWORD *)a1;
LABEL_63:
        if (v36 < 4) {
          v38 |= v33 << (8 * v36);
        }
        unsigned int v31 = v38 + 4;
        break;
      default:
        break;
    }
  }
  size_t v249 = v22 + 1;
  uint64_t v252 = ~v10;
  uint64_t v245 = ~v13;
  uint64_t v219 = ~v8;
  switch(v31)
  {
    case 0u:
      uint64_t v210 = *(void *)(AssociatedTypeWitness - 8);
      (*(void (**)(unsigned __int8 *, uint64_t))(v238 + 8))(a1, v239);
      unsigned int v39 = (unsigned __int8 *)((unint64_t)&a1[v251] & v252);
      unsigned int v40 = v39[v22];
      unsigned int v41 = v40 - 10;
      if (v40 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v42 = v22;
        }
        else {
          uint64_t v42 = 4;
        }
        switch(v42)
        {
          case 1:
            int v43 = *v39;
            goto LABEL_94;
          case 2:
            int v43 = *(unsigned __int16 *)v39;
            goto LABEL_94;
          case 3:
            int v43 = *(unsigned __int16 *)v39 | (*(unsigned __int8 *)(((unint64_t)&a1[v251] & v252) + 2) << 16);
            goto LABEL_94;
          case 4:
            int v43 = *(_DWORD *)v39;
LABEL_94:
            if (v22 < 4) {
              unsigned int v40 = (v43 | (v41 << (8 * v22))) + 10;
            }
            else {
              unsigned int v40 = v43 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v211 = AssociatedTypeWitness;
      switch(v40)
      {
        case 0u:
          goto LABEL_105;
        case 1u:
          goto LABEL_106;
        case 2u:
          goto LABEL_107;
        case 3u:
          goto LABEL_108;
        case 4u:
          goto LABEL_109;
        case 5u:
          goto LABEL_110;
        case 6u:
          goto LABEL_111;
        case 7u:
          goto LABEL_114;
        case 8u:
          goto LABEL_120;
        case 9u:
          goto LABEL_118;
        default:
          goto LABEL_145;
      }
      goto LABEL_145;
    case 1u:
      uint64_t v210 = *(void *)(AssociatedTypeWitness - 8);
      (*(void (**)(unsigned __int8 *, uint64_t))(v238 + 8))(a1, v239);
      unsigned int v39 = (unsigned __int8 *)((unint64_t)&a1[v251] & v252);
      unsigned int v44 = v39[v22];
      unsigned int v45 = v44 - 10;
      if (v44 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v46 = v22;
        }
        else {
          uint64_t v46 = 4;
        }
        switch(v46)
        {
          case 1:
            int v47 = *v39;
            goto LABEL_101;
          case 2:
            int v47 = *(unsigned __int16 *)v39;
            goto LABEL_101;
          case 3:
            int v47 = *(unsigned __int16 *)v39 | (*(unsigned __int8 *)(((unint64_t)&a1[v251] & v252) + 2) << 16);
            goto LABEL_101;
          case 4:
            int v47 = *(_DWORD *)v39;
LABEL_101:
            if (v22 < 4) {
              unsigned int v44 = (v47 | (v45 << (8 * v22))) + 10;
            }
            else {
              unsigned int v44 = v47 + 10;
            }
            break;
          default:
            goto LABEL_104;
        }
      }
      break;
    case 2u:
      if (v26 > 3) {
        goto LABEL_82;
      }
      unsigned int v48 = ((1 << v27) + 1) >> v27;
      if (v48 > 0xFFFD)
      {
        unsigned int v49 = *(_DWORD *)&a1[v26];
      }
      else if (v48 > 0xFD)
      {
        unsigned int v49 = *(unsigned __int16 *)&a1[v26];
      }
      else
      {
LABEL_82:
        unsigned int v49 = a1[v26];
      }
      unsigned int v50 = v49 - 2;
      if (v49 >= 2)
      {
        if (v26 <= 3) {
          uint64_t v51 = v26;
        }
        else {
          uint64_t v51 = 4;
        }
        switch(v51)
        {
          case 1:
            int v52 = *a1;
            goto LABEL_126;
          case 2:
            int v52 = *(unsigned __int16 *)a1;
            goto LABEL_126;
          case 3:
            int v52 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_126;
          case 4:
            int v52 = *(_DWORD *)a1;
LABEL_126:
            if (v26 < 4) {
              v52 |= v50 << v27;
            }
            unsigned int v49 = v52 + 2;
            break;
          default:
            break;
        }
      }
      if (v49 == 1)
      {
LABEL_132:
      }
      else if (!v49)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v25 + 8))(a1, AssociatedTypeWitness);
      }
      goto LABEL_147;
    case 3u:
      goto LABEL_132;
    default:
      goto LABEL_147;
  }
LABEL_104:
  uint64_t v211 = AssociatedTypeWitness;
  switch(v44)
  {
    case 0u:
LABEL_105:
      uint64_t v54 = v234;
      uint64_t v53 = v235;
      goto LABEL_119;
    case 1u:
LABEL_106:
      (*(void (**)(unsigned __int8 *, uint64_t))(v234 + 8))(v39, v235);
      swift_release();
      goto LABEL_145;
    case 2u:
LABEL_107:
      swift_bridgeObjectRelease();
      goto LABEL_117;
    case 3u:
LABEL_108:
      swift_unknownObjectRelease();
      goto LABEL_145;
    case 4u:
LABEL_109:
      uint64_t v54 = v230;
      uint64_t v53 = v231;
      goto LABEL_119;
    case 5u:
LABEL_110:
      unint64_t v55 = *(void **)v39;
      goto LABEL_144;
    case 6u:
LABEL_111:
      (*(void (**)(unsigned __int8 *, uint64_t))(v255 + 8))(v39, v236);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v39[v247] & v245, 1, v237)) {
        (*(void (**)(unint64_t, uint64_t))(v218 + 8))((unint64_t)&v39[v247] & v245, v237);
      }
      goto LABEL_117;
    case 7u:
LABEL_114:
      (*(void (**)(unsigned __int8 *, uint64_t))(v255 + 8))(v39, v236);
      if (!__swift_getEnumTagSinglePayload((unint64_t)&v39[v247] & v245, 1, v237)) {
        (*(void (**)(unint64_t, uint64_t))(v218 + 8))((unint64_t)&v39[v247] & v245, v237);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_117:
      swift_bridgeObjectRelease();
      goto LABEL_145;
    case 8u:
LABEL_120:
      (*(void (**)(unsigned __int8 *, uint64_t))(v224 + 8))(v39, v225);
      swift_bridgeObjectRelease();
      unint64_t v56 = (v221 + ((((unint64_t)v39 | 7) + v220) & 0xFFFFFFFFFFFFFFF8)) & v219;
      if (v223 == v222)
      {
        if (__swift_getEnumTagSinglePayload(v56, v223, v236)) {
          goto LABEL_143;
        }
        uint64_t v57 = (v247 + v56) & v245;
        goto LABEL_140;
      }
      uint64_t v57 = (v247 + v56) & v245;
      if (v212 == v222)
      {
        if (v243 >= 2 && __swift_getEnumTagSinglePayload((v247 + v56) & v245, v243, v237) >= 2) {
          goto LABEL_143;
        }
        goto LABEL_140;
      }
      unint64_t v58 = *(void *)(((v241 + v57) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v58 >= 0xFFFFFFFF) {
        LODWORD(v58) = -1;
      }
      if ((v58 + 1) < 2)
      {
LABEL_140:
        (*(void (**)(unint64_t, uint64_t))(v255 + 8))(v56, v236);
        if (!__swift_getEnumTagSinglePayload(v57, 1, v237)) {
          (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v57, v237);
        }
        swift_bridgeObjectRelease();
      }
LABEL_143:
      unint64_t v55 = *(void **)(((v56 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
LABEL_144:

LABEL_145:
      swift_bridgeObjectRelease();
      unint64_t v59 = (((((unint64_t)v39 | 7) + v249) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v25 = v210;
      uint64_t AssociatedTypeWitness = v211;
      if (*(void *)(v59 + 24) >= 0xFFFFFFFFuLL) {
        __swift_destroy_boxed_opaque_existential_1(v59);
      }
LABEL_147:
      if (v26 > 3) {
        goto LABEL_151;
      }
      unsigned int v60 = ((1 << v27) + 1) >> v27;
      uint64_t v61 = 2;
      if (v60 > 0xFFFD) {
        uint64_t v61 = 4;
      }
      if (v60 <= 0xFD) {
LABEL_151:
      }
        uint64_t v61 = 1;
      unint64_t v62 = v61 + v26;
      if (v62 <= v23) {
        unint64_t v62 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v62 <= 9) {
        unint64_t v62 = 9;
      }
      if (v62 > 3) {
        goto LABEL_157;
      }
      unsigned int v64 = ((1 << (8 * v62)) + 3) >> (8 * v62);
      if (v64 > 0xFFFB)
      {
        unsigned int v63 = *(_DWORD *)&a2[v62];
      }
      else if (v64 <= 0xFB)
      {
LABEL_157:
        unsigned int v63 = a2[v62];
      }
      else
      {
        unsigned int v63 = *(unsigned __int16 *)&a2[v62];
      }
      unsigned int v65 = v63 - 4;
      if (v63 >= 4)
      {
        if (v26 > 3) {
          goto LABEL_167;
        }
        unsigned int v66 = ((1 << v27) + 1) >> v27;
        uint64_t v67 = 2;
        if (v66 > 0xFFFD) {
          uint64_t v67 = 4;
        }
        if (v66 <= 0xFD) {
LABEL_167:
        }
          uint64_t v67 = 1;
        unint64_t v68 = v67 + v26;
        if (v68 <= v23) {
          unint64_t v68 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
        }
        if (v68 <= 9) {
          LODWORD(v68) = 9;
        }
        if (v68 <= 3) {
          uint64_t v69 = v68;
        }
        else {
          uint64_t v69 = 4;
        }
        switch(v69)
        {
          case 1:
            int v70 = *a2;
            goto LABEL_180;
          case 2:
            int v70 = *(unsigned __int16 *)a2;
            goto LABEL_180;
          case 3:
            int v70 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_180;
          case 4:
            int v70 = *(_DWORD *)a2;
LABEL_180:
            if (v68 < 4) {
              v70 |= v65 << (8 * v68);
            }
            unsigned int v63 = v70 + 4;
            break;
          default:
            goto LABEL_183;
        }
      }
      break;
    case 9u:
LABEL_118:
      uint64_t v54 = v228;
      uint64_t v53 = v229;
LABEL_119:
      (*(void (**)(unsigned __int8 *, uint64_t))(v54 + 8))(v39, v53);
      goto LABEL_145;
    default:
      goto LABEL_145;
  }
LABEL_183:
  switch(v63)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v238 + 32))(a1, a2, v239);
      unint64_t v71 = (unint64_t)&a1[v251] & v252;
      uint64_t v72 = (unsigned __int8 *)((unint64_t)&a2[v251] & v252);
      unsigned int v73 = v72[v22];
      unsigned int v74 = v73 - 10;
      if (v73 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v75 = v22;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *v72;
            goto LABEL_241;
          case 2:
            int v76 = *(unsigned __int16 *)v72;
            goto LABEL_241;
          case 3:
            int v76 = *(unsigned __int16 *)((unint64_t)&a2[v251] & v252) | (*(unsigned __int8 *)(((unint64_t)&a2[v251] & v252)
                                                                                                  + 2) << 16);
            goto LABEL_241;
          case 4:
            int v76 = *(_DWORD *)v72;
LABEL_241:
            if (v22 < 4) {
              unsigned int v73 = (v76 | (v74 << (8 * v22))) + 10;
            }
            else {
              unsigned int v73 = v76 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v73)
      {
        case 0u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v234 + 32))(v71, v72, v235);
          *(unsigned char *)(v71 + v22) = 0;
          goto LABEL_365;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v234 + 32))(v71, v72, v235);
          *(void *)((v227 + v71) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v72[v227] & 0xFFFFFFFFFFFFFFF8);
          char v106 = 1;
          goto LABEL_302;
        case 2u:
          long long v107 = *(_OWORD *)v72;
          *(void *)(((unint64_t)&a1[v251] & v252) + 0x10) = *(void *)(((unint64_t)&a2[v251] & v252)
                                                                               + 0x10);
          *(_OWORD *)unint64_t v71 = v107;
          char v106 = 2;
          goto LABEL_302;
        case 3u:
          *(void *)unint64_t v71 = *(void *)v72;
          char v106 = 3;
          goto LABEL_302;
        case 4u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v230 + 32))(v71, v72, v231);
          char v106 = 4;
          goto LABEL_302;
        case 5u:
          *(void *)unint64_t v71 = *(void *)v72;
          char v106 = 5;
          goto LABEL_302;
        case 6u:
          char v208 = 8 * v26;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v255 + 32))(v71, v72, v236);
          unint64_t v108 = (void *)((v247 + v71) & v245);
          uint64_t v109 = (const void *)((unint64_t)&v72[v247] & v245);
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v237))
          {
            memcpy(v108, v109, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v218 + 32))(v108, v109, v237);
            __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v237);
          }
          unint64_t v138 = (_OWORD *)(((unint64_t)v108 + v241) & 0xFFFFFFFFFFFFFFF8);
          long long v139 = (_OWORD *)(((unint64_t)v109 + v241) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v138 = *v139;
          unint64_t v140 = ((unint64_t)v138 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v141 = ((unint64_t)v139 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v142 = *(_DWORD *)v141;
          *(unsigned char *)(v140 + 4) = *(unsigned char *)(v141 + 4);
          *(_DWORD *)unint64_t v140 = v142;
          *(unsigned char *)(v71 + v22) = 6;
          goto LABEL_364;
        case 7u:
          char v208 = 8 * v26;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v255 + 32))(v71, v72, v236);
          size_t v110 = (void *)((v247 + v71) & v245);
          unsigned int v111 = (const void *)((unint64_t)&v72[v247] & v245);
          if (__swift_getEnumTagSinglePayload((uint64_t)v111, 1, v237))
          {
            memcpy(v110, v111, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v218 + 32))(v110, v111, v237);
            __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v237);
          }
          unint64_t v143 = (_OWORD *)(((unint64_t)v110 + v241) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v144 = (_OWORD *)(((unint64_t)v111 + v241) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v143 = *v144;
          unint64_t v145 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v146 = ((unint64_t)v144 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v147 = *(_DWORD *)v146;
          *(unsigned char *)(v145 + 4) = *(unsigned char *)(v146 + 4);
          *(_DWORD *)unint64_t v145 = v147;
          unint64_t v148 = (_OWORD *)(((v71 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          int v149 = (_OWORD *)((((unint64_t)v72 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v148 = *v149;
          unint64_t v150 = (_OWORD *)(((unint64_t)v148 + 23) & 0xFFFFFFFFFFFFFFF8);
          int v151 = (_OWORD *)(((unint64_t)v149 + 23) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v150 = *v151;
          *(_OWORD *)(((unint64_t)v150 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v151 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v71 + v22) = 7;
          goto LABEL_363;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v224 + 32))(v71, v72, v225);
          BOOL v118 = (_OWORD *)(((v71 | 7) + v220) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v119 = (_OWORD *)((((unint64_t)v72 | 7) + v220) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v118 = *v119;
          unint64_t v120 = ((unint64_t)v118 + v221) & v219;
          uint64_t v121 = ((unint64_t)v119 + v221) & v219;
          char v208 = 8 * v26;
          if (v223 == v222)
          {
            if (!__swift_getEnumTagSinglePayload(v121, v223, v236))
            {
              uint64_t v122 = (const void *)((v247 + v121) & v245);
              goto LABEL_344;
            }
LABEL_326:
            memcpy((void *)v120, (const void *)v121, v232);
            size_t v128 = __n;
            unint64_t v130 = v215;
            unint64_t v129 = v216;
            unint64_t v131 = v213;
            unint64_t v132 = v214;
LABEL_353:
            size_t v172 = v128;
            goto LABEL_354;
          }
          uint64_t v122 = (const void *)((v247 + v121) & v245);
          if (v212 != v222)
          {
            unint64_t v166 = *(void *)((((unint64_t)v122 + v241) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v166 >= 0xFFFFFFFF) {
              LODWORD(v166) = -1;
            }
            if ((v166 + 1) < 2) {
              goto LABEL_344;
            }
            goto LABEL_326;
          }
          if (v243 >= 2 && __swift_getEnumTagSinglePayload((v247 + v121) & v245, v243, v237) >= 2) {
            goto LABEL_326;
          }
LABEL_344:
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v255 + 32))(v120, v121, v236);
          unint64_t v167 = v120;
          v168 = (void *)((v247 + v120) & v245);
          if (__swift_getEnumTagSinglePayload((uint64_t)v122, 1, v237))
          {
            size_t v128 = __n;
            memcpy(v168, v122, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v218 + 32))(v168, v122, v237);
            __swift_storeEnumTagSinglePayload((uint64_t)v168, 0, 1, v237);
            size_t v128 = __n;
          }
          unint64_t v130 = v215;
          unint64_t v129 = v216;
          unint64_t v131 = v213;
          unint64_t v132 = v214;
          size_t v172 = v217;
          unint64_t v173 = (_OWORD *)(((unint64_t)v168 + v241) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v174 = (_OWORD *)(((unint64_t)v122 + v241) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v173 = *v174;
          unint64_t v175 = ((unint64_t)v174 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v176 = *(_DWORD *)v175;
          unint64_t v177 = ((unint64_t)v173 + 19) & 0xFFFFFFFFFFFFFFF8;
          *(unsigned char *)(v177 + 4) = *(unsigned char *)(v175 + 4);
          *(_DWORD *)unint64_t v177 = v176;
          unint64_t v120 = v167;
          if (!v243) {
            goto LABEL_353;
          }
LABEL_354:
          unint64_t v178 = (((v226 + 7 + v172) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          *(void *)(((v120 | 7) + v178) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v121 | 7) + v178) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v179 = (((v226 + 7 + v128) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
          if (v179 <= v129) {
            unint64_t v179 = v129;
          }
          if (v130 > v179) {
            unint64_t v179 = v130;
          }
          if (v132 > v179) {
            unint64_t v179 = v132;
          }
          if (v131 > v179) {
            unint64_t v179 = v131;
          }
          *(unsigned char *)(v71 + v179) = 8;
LABEL_363:
          int v2 = a1;
LABEL_364:
          char v27 = v208;
LABEL_365:
          unint64_t v180 = (void *)(((v71 | 7) + v249) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v181 = (void *)((((unint64_t)v72 | 7) + v249) & 0xFFFFFFFFFFFFFFF8);
          void *v180 = *v181;
          unint64_t v182 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v183 = ((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v184 = *(_OWORD *)v183;
          long long v185 = *(_OWORD *)(v183 + 16);
          *(void *)(v182 + 32) = *(void *)(v183 + 32);
          *(_OWORD *)unint64_t v182 = v184;
          *(_OWORD *)(v182 + 16) = v185;
          *(unsigned char *)(v182 + 40) = *(unsigned char *)(v183 + 40);
          if (v26 > 3) {
            goto LABEL_369;
          }
          unsigned int v186 = ((1 << v27) + 1) >> v27;
          uint64_t v187 = 2;
          if (v186 > 0xFFFD) {
            uint64_t v187 = 4;
          }
          if (v186 <= 0xFD) {
LABEL_369:
          }
            uint64_t v187 = 1;
          unint64_t v188 = v187 + v26;
          if (v188 <= v23) {
            unint64_t v188 = v23;
          }
          if (v188 <= 9) {
            unint64_t v188 = 9;
          }
          if (v188 <= 3)
          {
            unsigned int v189 = ((1 << (8 * v188)) + 3) >> (8 * v188);
            if (v189 > 0xFFFB)
            {
              *(_DWORD *)&v2[v188] = 0;
              return v2;
            }
            if (v189 > 0xFB)
            {
              *(_WORD *)&v2[v188] = 0;
              return v2;
            }
          }
          v2[v188] = 0;
          return v2;
        case 9u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v228 + 32))(v71, v72, v229);
          char v106 = 9;
LABEL_302:
          *(unsigned char *)(v71 + v22) = v106;
          goto LABEL_365;
        default:
          memcpy((void *)v71, v72, v249);
          goto LABEL_365;
      }
    case 1u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v238 + 32))(a1, a2, v239);
      unint64_t v77 = (unint64_t)&a1[v251] & v252;
      unsigned int v78 = (unsigned __int8 *)((unint64_t)&a2[v251] & v252);
      unsigned int v79 = v78[v22];
      unsigned int v80 = v79 - 10;
      if (v79 >= 0xA)
      {
        if (v22 <= 3) {
          uint64_t v81 = v22;
        }
        else {
          uint64_t v81 = 4;
        }
        switch(v81)
        {
          case 1:
            int v82 = *v78;
            goto LABEL_249;
          case 2:
            int v82 = *(unsigned __int16 *)v78;
            goto LABEL_249;
          case 3:
            int v82 = *(unsigned __int16 *)((unint64_t)&a2[v251] & v252) | (*(unsigned __int8 *)(((unint64_t)&a2[v251] & v252)
                                                                                                  + 2) << 16);
            goto LABEL_249;
          case 4:
            int v82 = *(_DWORD *)v78;
LABEL_249:
            if (v22 < 4) {
              unsigned int v79 = (v82 | (v80 << (8 * v22))) + 10;
            }
            else {
              unsigned int v79 = v82 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v79)
      {
        case 0u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v234 + 32))(v77, v78, v235);
          *(unsigned char *)(v77 + v22) = 0;
          goto LABEL_394;
        case 1u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v234 + 32))(v77, v78, v235);
          *(void *)((v227 + v77) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v78[v227] & 0xFFFFFFFFFFFFFFF8);
          char v112 = 1;
          goto LABEL_314;
        case 2u:
          long long v113 = *(_OWORD *)v78;
          *(void *)(((unint64_t)&a1[v251] & v252) + 0x10) = *(void *)(((unint64_t)&a2[v251] & v252)
                                                                               + 0x10);
          *(_OWORD *)unint64_t v77 = v113;
          char v112 = 2;
          goto LABEL_314;
        case 3u:
          *(void *)unint64_t v77 = *(void *)v78;
          char v112 = 3;
          goto LABEL_314;
        case 4u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v230 + 32))(v77, v78, v231);
          char v112 = 4;
          goto LABEL_314;
        case 5u:
          *(void *)unint64_t v77 = *(void *)v78;
          char v112 = 5;
          goto LABEL_314;
        case 6u:
          char v209 = 8 * v26;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v255 + 32))(v77, v78, v236);
          unint64_t v114 = (void *)((v247 + v77) & v245);
          uint64_t v115 = (const void *)((unint64_t)&v78[v247] & v245);
          if (__swift_getEnumTagSinglePayload((uint64_t)v115, 1, v237))
          {
            memcpy(v114, v115, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v218 + 32))(v114, v115, v237);
            __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v237);
          }
          unint64_t v152 = (_OWORD *)(((unint64_t)v114 + v241) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v153 = (_OWORD *)(((unint64_t)v115 + v241) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v152 = *v153;
          unint64_t v154 = ((unint64_t)v152 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v155 = ((unint64_t)v153 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v156 = *(_DWORD *)v155;
          *(unsigned char *)(v154 + 4) = *(unsigned char *)(v155 + 4);
          *(_DWORD *)unint64_t v154 = v156;
          *(unsigned char *)(v77 + v22) = 6;
          goto LABEL_393;
        case 7u:
          char v209 = 8 * v26;
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v255 + 32))(v77, v78, v236);
          size_t v116 = (void *)((v247 + v77) & v245);
          char v117 = (const void *)((unint64_t)&v78[v247] & v245);
          if (__swift_getEnumTagSinglePayload((uint64_t)v117, 1, v237))
          {
            memcpy(v116, v117, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v218 + 32))(v116, v117, v237);
            __swift_storeEnumTagSinglePayload((uint64_t)v116, 0, 1, v237);
          }
          v157 = (_OWORD *)(((unint64_t)v116 + v241) & 0xFFFFFFFFFFFFFFF8);
          v158 = (_OWORD *)(((unint64_t)v117 + v241) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v157 = *v158;
          unint64_t v159 = ((unint64_t)v157 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v160 = ((unint64_t)v158 + 19) & 0xFFFFFFFFFFFFFFF8;
          int v161 = *(_DWORD *)v160;
          *(unsigned char *)(v159 + 4) = *(unsigned char *)(v160 + 4);
          *(_DWORD *)unint64_t v159 = v161;
          unint64_t v162 = (_OWORD *)(((v77 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          long long v163 = (_OWORD *)((((unint64_t)v78 | 7) + v232) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v162 = *v163;
          long long v164 = (_OWORD *)(((unint64_t)v162 + 23) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v165 = (_OWORD *)(((unint64_t)v163 + 23) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v164 = *v165;
          *(_OWORD *)(((unint64_t)v164 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v165 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v77 + v22) = 7;
          goto LABEL_392;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v224 + 32))(v77, v78, v225);
          unint64_t v123 = (_OWORD *)(((v77 | 7) + v220) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v124 = (_OWORD *)((((unint64_t)v78 | 7) + v220) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v123 = *v124;
          unint64_t v125 = ((unint64_t)v123 + v221) & v219;
          uint64_t v126 = ((unint64_t)v124 + v221) & v219;
          char v209 = 8 * v26;
          if (v223 == v222)
          {
            if (!__swift_getEnumTagSinglePayload(v126, v223, v236))
            {
              uint64_t v127 = (const void *)((v247 + v126) & v245);
              goto LABEL_349;
            }
          }
          else
          {
            uint64_t v127 = (const void *)((v247 + v126) & v245);
            if (v212 == v222)
            {
              if (v243 < 2 || __swift_getEnumTagSinglePayload((v247 + v126) & v245, v243, v237) < 2) {
                goto LABEL_349;
              }
            }
            else
            {
              unint64_t v169 = *(void *)((((unint64_t)v127 + v241) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v169 >= 0xFFFFFFFF) {
                LODWORD(v169) = -1;
              }
              if ((v169 + 1) < 2)
              {
LABEL_349:
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v255 + 32))(v125, v126, v236);
                unint64_t v170 = v125;
                unint64_t v171 = (void *)((v247 + v125) & v245);
                if (__swift_getEnumTagSinglePayload((uint64_t)v127, 1, v237))
                {
                  size_t v133 = __n;
                  memcpy(v171, v127, __n);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v218 + 32))(v171, v127, v237);
                  __swift_storeEnumTagSinglePayload((uint64_t)v171, 0, 1, v237);
                  size_t v133 = __n;
                }
                unint64_t v135 = v215;
                unint64_t v134 = v216;
                unint64_t v136 = v213;
                unint64_t v137 = v214;
                size_t v190 = v217;
                unint64_t v191 = (_OWORD *)(((unint64_t)v171 + v241) & 0xFFFFFFFFFFFFFFF8);
                size_t v192 = (_OWORD *)(((unint64_t)v127 + v241) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v191 = *v192;
                unint64_t v193 = ((unint64_t)v192 + 19) & 0xFFFFFFFFFFFFFFF8;
                int v194 = *(_DWORD *)v193;
                unint64_t v195 = ((unint64_t)v191 + 19) & 0xFFFFFFFFFFFFFFF8;
                *(unsigned char *)(v195 + 4) = *(unsigned char *)(v193 + 4);
                *(_DWORD *)unint64_t v195 = v194;
                unint64_t v125 = v170;
                if (!v243) {
                  goto LABEL_382;
                }
LABEL_383:
                unint64_t v196 = (((v226 + 7 + v190) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                *(void *)(((v125 | 7) + v196) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v126 | 7) + v196) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v197 = (((v226 + 7 + v133) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
                if (v197 <= v134) {
                  unint64_t v197 = v134;
                }
                if (v135 > v197) {
                  unint64_t v197 = v135;
                }
                if (v137 > v197) {
                  unint64_t v197 = v137;
                }
                if (v136 > v197) {
                  unint64_t v197 = v136;
                }
                *(unsigned char *)(v77 + v197) = 8;
LABEL_392:
                int v2 = a1;
LABEL_393:
                char v27 = v209;
LABEL_394:
                uint64_t v198 = (void *)(((v77 | 7) + v249) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v199 = (void *)((((unint64_t)v78 | 7) + v249) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v198 = *v199;
                unint64_t v200 = ((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v201 = ((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8;
                long long v202 = *(_OWORD *)v201;
                long long v203 = *(_OWORD *)(v201 + 16);
                *(void *)(v200 + 32) = *(void *)(v201 + 32);
                *(_OWORD *)unint64_t v200 = v202;
                *(_OWORD *)(v200 + 16) = v203;
                *(unsigned char *)(v200 + 40) = *(unsigned char *)(v201 + 40);
                if (v26 > 3) {
                  goto LABEL_398;
                }
                unsigned int v204 = ((1 << v27) + 1) >> v27;
                uint64_t v205 = 2;
                if (v204 > 0xFFFD) {
                  uint64_t v205 = 4;
                }
                if (v204 <= 0xFD) {
LABEL_398:
                }
                  uint64_t v205 = 1;
                unint64_t v87 = v205 + v26;
                if (v87 <= v23) {
                  unint64_t v87 = v23;
                }
                if (v87 <= 9) {
                  unint64_t v87 = 9;
                }
                if (v87 > 3) {
                  goto LABEL_406;
                }
                int v95 = 1;
                unsigned int v206 = ((1 << (8 * v87)) + 3) >> (8 * v87);
                if (v206 <= 0xFFFB)
                {
                  if (v206 <= 0xFB)
                  {
LABEL_406:
                    char v89 = 1;
                    goto LABEL_407;
                  }
LABEL_409:
                  *(_WORD *)&v2[v87] = v95;
                  return v2;
                }
LABEL_408:
                *(_DWORD *)&v2[v87] = v95;
                return v2;
              }
            }
          }
          memcpy((void *)v125, (const void *)v126, v232);
          size_t v133 = __n;
          unint64_t v135 = v215;
          unint64_t v134 = v216;
          unint64_t v136 = v213;
          unint64_t v137 = v214;
LABEL_382:
          size_t v190 = v133;
          goto LABEL_383;
        case 9u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v228 + 32))(v77, v78, v229);
          char v112 = 9;
LABEL_314:
          *(unsigned char *)(v77 + v22) = v112;
          goto LABEL_394;
        default:
          memcpy((void *)v77, v78, v249);
          goto LABEL_394;
      }
    case 2u:
      if (v26 > 3) {
        goto LABEL_199;
      }
      unsigned int v83 = ((1 << v27) + 1) >> v27;
      if (v83 > 0xFFFD)
      {
        unsigned int v84 = *(_DWORD *)&a2[v26];
      }
      else if (v83 > 0xFD)
      {
        unsigned int v84 = *(unsigned __int16 *)&a2[v26];
      }
      else
      {
LABEL_199:
        unsigned int v84 = a2[v26];
      }
      unsigned int v96 = v84 - 2;
      if (v84 >= 2)
      {
        if (v26 <= 3) {
          uint64_t v97 = v26;
        }
        else {
          uint64_t v97 = 4;
        }
        switch(v97)
        {
          case 1:
            int v98 = *a2;
            goto LABEL_257;
          case 2:
            int v98 = *(unsigned __int16 *)a2;
            goto LABEL_257;
          case 3:
            int v98 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_257;
          case 4:
            int v98 = *(_DWORD *)a2;
LABEL_257:
            if (v26 < 4) {
              v98 |= v96 << v27;
            }
            unsigned int v84 = v98 + 2;
            break;
          default:
            break;
        }
      }
      if (v84 == 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        if (v26 <= 3)
        {
          unsigned int v100 = ((1 << v27) + 1) >> v27;
          if (v100 > 0xFFFD)
          {
            *(_DWORD *)&a1[v26] = 1;
            goto LABEL_277;
          }
          if (v100 > 0xFD)
          {
            *(_WORD *)&a1[v26] = 1;
            goto LABEL_277;
          }
        }
        a1[v26] = 1;
      }
      else
      {
        if (!v84)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v25 + 32))(a1, a2, AssociatedTypeWitness);
          if (v26 > 3)
          {
LABEL_265:
            a1[v26] = 0;
            goto LABEL_276;
          }
          unsigned int v99 = ((1 << v27) + 1) >> v27;
          if (v99 > 0xFFFD)
          {
            *(_DWORD *)&a1[v26] = 0;
          }
          else
          {
            if (v99 <= 0xFD) {
              goto LABEL_265;
            }
            *(_WORD *)&a1[v26] = 0;
          }
LABEL_277:
          unsigned int v103 = ((1 << v27) + 1) >> v27;
          uint64_t v104 = 2;
          if (v103 > 0xFFFD) {
            uint64_t v104 = 4;
          }
          if (v103 > 0xFD)
          {
LABEL_281:
            unint64_t v87 = v104 + v26;
            if (v87 <= v23) {
              unint64_t v87 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
            }
            if (v87 <= 9) {
              unint64_t v87 = 9;
            }
            if (v87 <= 3)
            {
              unsigned int v105 = ((1 << (8 * v87)) + 3) >> (8 * v87);
              if (v105 > 0xFFFB)
              {
                int v95 = 2;
                goto LABEL_408;
              }
              if (v105 > 0xFB)
              {
                LOWORD(v95) = 2;
                goto LABEL_409;
              }
            }
            char v89 = 2;
LABEL_407:
            v2[v87] = v89;
            return v2;
          }
LABEL_280:
          uint64_t v104 = 1;
          goto LABEL_281;
        }
        if (v26 > 3) {
          goto LABEL_274;
        }
        unsigned int v101 = ((1 << v27) + 1) >> v27;
        uint64_t v102 = 2;
        if (v101 > 0xFFFD) {
          uint64_t v102 = 4;
        }
        if (v101 <= 0xFD) {
LABEL_274:
        }
          uint64_t v102 = 1;
        memcpy(a1, a2, v102 + v26);
      }
LABEL_276:
      if (v26 > 3) {
        goto LABEL_280;
      }
      goto LABEL_277;
    case 3u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      if (v26 > 3) {
        goto LABEL_204;
      }
      unsigned int v85 = ((1 << v27) + 1) >> v27;
      uint64_t v86 = 2;
      if (v85 > 0xFFFD) {
        uint64_t v86 = 4;
      }
      if (v85 <= 0xFD) {
LABEL_204:
      }
        uint64_t v86 = 1;
      unint64_t v87 = v86 + v26;
      if (v87 <= v23) {
        unint64_t v87 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v87 <= 9) {
        unint64_t v87 = 9;
      }
      if (v87 > 3) {
        goto LABEL_212;
      }
      unsigned int v88 = ((1 << (8 * v87)) + 3) >> (8 * v87);
      if (v88 > 0xFFFB)
      {
        int v95 = 3;
        goto LABEL_408;
      }
      if (v88 <= 0xFB)
      {
LABEL_212:
        char v89 = 3;
        goto LABEL_407;
      }
      LOWORD(v95) = 3;
      goto LABEL_409;
    default:
      if (v26 > 3) {
        goto LABEL_217;
      }
      unsigned int v90 = ((1 << v27) + 1) >> v27;
      uint64_t v91 = 2;
      if (v90 > 0xFFFD) {
        uint64_t v91 = 4;
      }
      if (v90 <= 0xFD) {
LABEL_217:
      }
        uint64_t v91 = 1;
      unint64_t v92 = v91 + v26;
      if (v92 <= v23) {
        unint64_t v92 = ((((v22 + (v251 & ~v10) + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
      }
      if (v92 <= 9) {
        unint64_t v92 = 9;
      }
      if (v92 > 3) {
        goto LABEL_226;
      }
      unsigned int v93 = ((1 << (8 * v92)) + 3) >> (8 * v92);
      uint64_t v94 = 2;
      if (v93 > 0xFFFB) {
        uint64_t v94 = 4;
      }
      if (v93 <= 0xFB) {
LABEL_226:
      }
        uint64_t v94 = 1;
      memcpy(a1, a2, v94 + v92);
      return v2;
  }
}

uint64_t sub_1C9A98420(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v66 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v64 = *(void *)(sub_1C9BEC028() - 8);
  int v2 = *(_DWORD *)(v64 + 80);
  uint64_t v65 = *(void *)(sub_1C9BEAC48() - 8);
  int v61 = *(_DWORD *)(v65 + 80) | v2;
  uint64_t v63 = *(void *)(sub_1C9BEAF18() - 8);
  int v3 = *(_DWORD *)(v63 + 80) & 0xF8;
  uint64_t v4 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 | v5 | 7;
  uint64_t v62 = *(void *)(sub_1C9BEC928() - 8);
  int v7 = *(_DWORD *)(v62 + 80);
  uint64_t v8 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v9 = (v61 | (v7 | *(_DWORD *)(v8 + 80))) & 0xF8 | v6;
  uint64_t v10 = (v66 + v9) & ~v9;
  unint64_t v11 = *(void *)(v64 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v65 + 64)) {
    unint64_t v11 = *(void *)(v65 + 64);
  }
  uint64_t v12 = *(void *)(v4 + 64) + ((*(void *)(v63 + 64) + v5) & ~v5);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v11 <= v14) {
    unint64_t v11 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v15 = ((((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v11 <= v15) {
    unint64_t v11 = v15;
  }
  if (v11 <= ((v14 + ((v6 + ((*(void *)(v62 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v11 = ((v14 + ((v6 + ((*(void *)(v62 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v16 = *(void *)(v8 + 64);
  if (v11 > v16) {
    unint64_t v16 = v11;
  }
  if (v16 <= 0x18) {
    unint64_t v16 = 24;
  }
  unint64_t v17 = ((((v10 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v18 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v18 <= 9) {
    unint64_t v18 = 9;
  }
  char v19 = 8 * v18;
  if (v18 > 3) {
    goto LABEL_23;
  }
  unsigned int v20 = ((1 << v19) + 1) >> v19;
  uint64_t v21 = 2;
  if (v20 > 0xFFFD) {
    uint64_t v21 = 4;
  }
  if (v20 <= 0xFD) {
LABEL_23:
  }
    uint64_t v21 = 1;
  unint64_t v22 = v21 + v18;
  if (v22 <= v17) {
    unint64_t v22 = v17;
  }
  unsigned int v23 = 9;
  if (v22 > 9) {
    unsigned int v23 = v22;
  }
  char v24 = 8;
  if (v23 > 3)
  {
    int v25 = 5;
    goto LABEL_38;
  }
  unsigned int v26 = ((1 << (8 * v23)) + 3) >> (8 * v23);
  if (v26 >= 0xFFFC) {
    char v27 = 32;
  }
  else {
    char v27 = 16;
  }
  if (v26 >= 0xFC) {
    char v24 = v27;
  }
  else {
    char v24 = 8;
  }
  if (v26 <= 0xFFFB)
  {
    int v25 = v26 + 4;
LABEL_38:
    unsigned int v28 = (1 << v24) - v25;
    if ((v28 & 0x80000000) == 0) {
      goto LABEL_40;
    }
  }
  unsigned int v28 = 0x7FFFFFFF;
LABEL_40:
  if (v18 > 3) {
    goto LABEL_44;
  }
  unsigned int v29 = ((1 << v19) + 1) >> v19;
  uint64_t v30 = 2;
  if (v29 > 0xFFFD) {
    uint64_t v30 = 4;
  }
  if (v29 <= 0xFD) {
LABEL_44:
  }
    uint64_t v30 = 1;
  unint64_t v31 = v30 + v18;
  if (v31 <= v17) {
    unint64_t v31 = v17;
  }
  if (v31 <= 9) {
    unint64_t v31 = 9;
  }
  if (v31 > 3) {
    goto LABEL_53;
  }
  unsigned int v32 = ((1 << (8 * v31)) + 3) >> (8 * v31);
  uint64_t v33 = 2;
  if (v32 > 0xFFFB) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xFB) {
LABEL_53:
  }
    uint64_t v33 = 1;
  if (!a2) {
    return 0;
  }
  if (a2 <= v28) {
    goto LABEL_74;
  }
  unint64_t v34 = v33 + v31;
  char v35 = 8 * v34;
  if (v34 <= 3)
  {
    unsigned int v37 = ((a2 - v28 + ~(-1 << v35)) >> v35) + 1;
    if (HIWORD(v37))
    {
      int v36 = *(_DWORD *)((char *)a1 + v34);
      if (!v36) {
        goto LABEL_74;
      }
      goto LABEL_64;
    }
    if (v37 > 0xFF)
    {
      int v36 = *(unsigned __int16 *)((char *)a1 + v34);
      if (!*(unsigned __int16 *)((char *)a1 + v34)) {
        goto LABEL_74;
      }
      goto LABEL_64;
    }
    if (v37 < 2)
    {
LABEL_74:
      if (v28)
      {
        if (v18 > 3) {
          goto LABEL_79;
        }
        unsigned int v41 = ((1 << v19) + 1) >> v19;
        uint64_t v42 = 2;
        if (v41 > 0xFFFD) {
          uint64_t v42 = 4;
        }
        if (v41 <= 0xFD) {
LABEL_79:
        }
          uint64_t v42 = 1;
        unint64_t v43 = v42 + v18;
        if (v43 <= v17) {
          unint64_t v43 = v17;
        }
        if (v43 <= 9) {
          unint64_t v43 = 9;
        }
        if (v43 > 3) {
          goto LABEL_87;
        }
        unsigned int v44 = ((1 << (8 * v43)) + 3) >> (8 * v43);
        if (v44 > 0xFFFB)
        {
          int v47 = 0;
          int v45 = *(_DWORD *)((char *)a1 + v43);
          goto LABEL_91;
        }
        if (v44 > 0xFB)
        {
          int v45 = *(unsigned __int16 *)((char *)a1 + v43);
          char v46 = 16;
        }
        else
        {
LABEL_87:
          int v45 = *((unsigned __int8 *)a1 + v43);
          char v46 = 8;
        }
        int v47 = -1 << v46;
LABEL_91:
        int v49 = v47 | v45;
        if (v18 > 3) {
          goto LABEL_95;
        }
        unsigned int v50 = ((1 << v19) + 1) >> v19;
        uint64_t v51 = 2;
        if (v50 > 0xFFFD) {
          uint64_t v51 = 4;
        }
        if (v50 <= 0xFD) {
LABEL_95:
        }
          uint64_t v51 = 1;
        unint64_t v52 = v51 + v18;
        if (v52 <= v17) {
          unint64_t v52 = v17;
        }
        unsigned int v53 = 9;
        if (v52 > 9) {
          unsigned int v53 = v52;
        }
        char v54 = 8;
        if (v53 <= 3)
        {
          unsigned int v56 = ((1 << (8 * v53)) + 3) >> (8 * v53);
          if (v56 >= 0xFFFC) {
            char v57 = 32;
          }
          else {
            char v57 = 16;
          }
          if (v56 >= 0xFC) {
            char v54 = v57;
          }
          else {
            char v54 = 8;
          }
          if (v56 > 0xFFFB)
          {
LABEL_111:
            unsigned int v58 = 0x7FFFFFFF;
LABEL_112:
            if (v58 > ~v49) {
              return -v49;
            }
            else {
              return 0;
            }
          }
          int v55 = v56 + 4;
        }
        else
        {
          int v55 = 5;
        }
        unsigned int v58 = (1 << v54) - v55;
        if ((v58 & 0x80000000) == 0) {
          goto LABEL_112;
        }
        goto LABEL_111;
      }
      return 0;
    }
  }
  int v36 = *((unsigned __int8 *)a1 + v34);
  if (!*((unsigned char *)a1 + v34)) {
    goto LABEL_74;
  }
LABEL_64:
  int v38 = (v36 - 1) << v35;
  if (v34 > 3) {
    int v38 = 0;
  }
  if (v34)
  {
    if (v34 <= 3) {
      int v39 = v34;
    }
    else {
      int v39 = 4;
    }
    switch(v39)
    {
      case 2:
        int v40 = *a1;
        break;
      case 3:
        int v40 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v40 = *(_DWORD *)a1;
        break;
      default:
        int v40 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v40 = 0;
  }
  return v28 + (v40 | v38) + 1;
}

void sub_1C9A98B88(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v52 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v50 = *(void *)(sub_1C9BEC028() - 8);
  int v3 = *(_DWORD *)(v50 + 80);
  uint64_t v51 = *(void *)(sub_1C9BEAC48() - 8);
  int v47 = *(_DWORD *)(v51 + 80) | v3;
  uint64_t v49 = *(void *)(sub_1C9BEAF18() - 8);
  int v4 = *(_DWORD *)(v49 + 80) & 0xF8;
  uint64_t v5 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v4 | v6 | 7;
  uint64_t v48 = *(void *)(sub_1C9BEC928() - 8);
  int v8 = *(_DWORD *)(v48 + 80);
  uint64_t v9 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v10 = (v47 | (v8 | *(_DWORD *)(v9 + 80))) & 0xF8 | v7;
  uint64_t v11 = (v52 + v10) & ~v10;
  unint64_t v12 = *(void *)(v50 + 64);
  if (((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v12) {
    unint64_t v12 = ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v12 <= *(void *)(v51 + 64)) {
    unint64_t v12 = *(void *)(v51 + 64);
  }
  uint64_t v13 = *(void *)(v5 + 64) + ((*(void *)(v49 + 64) + v6) & ~v6);
  if (!*(_DWORD *)(v5 + 84)) {
    ++v13;
  }
  unint64_t v14 = (v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v12 <= v15) {
    unint64_t v12 = (v14 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v16 = ((((((v14 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v16) {
    unint64_t v12 = v16;
  }
  if (v12 <= ((v15 + ((v7 + ((*(void *)(v48 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v12 = ((v15 + ((v7 + ((*(void *)(v48 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v17 = *(void *)(v9 + 64);
  if (v12 > v17) {
    unint64_t v17 = v12;
  }
  if (v17 <= 0x18) {
    unint64_t v17 = 24;
  }
  unint64_t v18 = ((((v11 + v17 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v19 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v19 <= 9) {
    unint64_t v19 = 9;
  }
  char v20 = 8 * v19;
  if (v19 > 3) {
    goto LABEL_23;
  }
  unsigned int v21 = ((1 << v20) + 1) >> v20;
  uint64_t v22 = 2;
  if (v21 > 0xFFFD) {
    uint64_t v22 = 4;
  }
  if (v21 <= 0xFD) {
LABEL_23:
  }
    uint64_t v22 = 1;
  unint64_t v23 = v22 + v19;
  if (v23 <= v18) {
    unint64_t v23 = v18;
  }
  unsigned int v24 = 9;
  if (v23 > 9) {
    unsigned int v24 = v23;
  }
  char v25 = 8;
  if (v24 <= 3)
  {
    unsigned int v27 = ((1 << (8 * v24)) + 3) >> (8 * v24);
    if (v27 >= 0xFFFC) {
      char v28 = 32;
    }
    else {
      char v28 = 16;
    }
    if (v27 >= 0xFC) {
      char v25 = v28;
    }
    else {
      char v25 = 8;
    }
    if (v27 > 0xFFFB) {
      goto LABEL_39;
    }
    int v26 = v27 + 4;
  }
  else
  {
    int v26 = 5;
  }
  unsigned int v29 = (1 << v25) - v26;
  if ((v29 & 0x80000000) != 0) {
LABEL_39:
  }
    unsigned int v29 = 0x7FFFFFFF;
  if (v19 > 3) {
    goto LABEL_44;
  }
  unsigned int v30 = ((1 << v20) + 1) >> v20;
  uint64_t v31 = 2;
  if (v30 > 0xFFFD) {
    uint64_t v31 = 4;
  }
  if (v30 <= 0xFD) {
LABEL_44:
  }
    uint64_t v31 = 1;
  unint64_t v32 = v31 + v19;
  if (v32 <= v18) {
    unint64_t v32 = v18;
  }
  if (v32 <= 9) {
    unint64_t v32 = 9;
  }
  if (v32 > 3) {
    goto LABEL_53;
  }
  unsigned int v33 = ((1 << (8 * v32)) + 3) >> (8 * v32);
  uint64_t v34 = 2;
  if (v33 > 0xFFFB) {
    uint64_t v34 = 4;
  }
  if (v33 <= 0xFB) {
LABEL_53:
  }
    uint64_t v34 = 1;
  size_t v35 = v34 + v32;
  char v36 = 8 * (v34 + v32);
  if (a3 <= v29)
  {
    int v37 = 0;
  }
  else if (v35 <= 3)
  {
    unsigned int v40 = ((a3 - v29 + ~(-1 << v36)) >> v36) + 1;
    if (HIWORD(v40))
    {
      int v37 = 4;
    }
    else if (v40 >= 0x100)
    {
      int v37 = 2;
    }
    else
    {
      int v37 = v40 > 1;
    }
  }
  else
  {
    int v37 = 1;
  }
  if (v29 < a2)
  {
    unsigned int v38 = ~v29 + a2;
    if (v35 < 4)
    {
      int v39 = (v38 >> v36) + 1;
      if (v35)
      {
        int v41 = v38 & ~(-1 << v36);
        bzero(a1, v35);
        if (v35 == 3)
        {
          *(_WORD *)a1 = v41;
          a1[2] = BYTE2(v41);
        }
        else if (v35 == 2)
        {
          *(_WORD *)a1 = v41;
        }
        else
        {
          *a1 = v41;
        }
      }
    }
    else
    {
      bzero(a1, v35);
      *(_DWORD *)a1 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        a1[v35] = v39;
        return;
      case 2:
        *(_WORD *)&a1[v35] = v39;
        return;
      case 3:
        goto LABEL_99;
      case 4:
        *(_DWORD *)&a1[v35] = v39;
        return;
      default:
        return;
    }
  }
  switch(v37)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_74;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_74;
    case 3:
LABEL_99:
      __break(1u);
      JUMPOUT(0x1C9A99258);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_73;
    default:
LABEL_73:
      if (!a2) {
        return;
      }
LABEL_74:
      if (v19 > 3) {
        goto LABEL_78;
      }
      unsigned int v42 = ((1 << v20) + 1) >> v20;
      uint64_t v43 = 2;
      if (v42 > 0xFFFD) {
        uint64_t v43 = 4;
      }
      if (v42 <= 0xFD) {
LABEL_78:
      }
        uint64_t v43 = 1;
      int v44 = -a2;
      unint64_t v45 = v43 + v19;
      if (v45 <= v18) {
        unint64_t v45 = v18;
      }
      if (v45 <= 9) {
        unint64_t v45 = 9;
      }
      if (v45 > 3) {
        goto LABEL_84;
      }
      unsigned int v46 = ((1 << (8 * v45)) + 3) >> (8 * v45);
      if (v46 > 0xFFFB)
      {
        *(_DWORD *)&a1[v45] = v44;
      }
      else if (v46 <= 0xFB)
      {
LABEL_84:
        a1[v45] = v44;
      }
      else
      {
        *(_WORD *)&a1[v45] = v44;
      }
      return;
  }
}

uint64_t sub_1C9A99280(unsigned __int8 *a1)
{
  uint64_t v34 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v32 = *(void *)(sub_1C9BEC028() - 8);
  int v1 = *(_DWORD *)(v32 + 80);
  uint64_t v33 = *(void *)(sub_1C9BEAC48() - 8);
  int v29 = *(_DWORD *)(v33 + 80) | v1;
  uint64_t v31 = *(void *)(sub_1C9BEAF18() - 8);
  int v2 = *(_DWORD *)(v31 + 80) & 0xF8;
  uint64_t v3 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v2 | v4 | 7;
  uint64_t v30 = *(void *)(sub_1C9BEC928() - 8);
  int v6 = *(_DWORD *)(v30 + 80);
  uint64_t v7 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v8 = (v29 | (v6 | *(_DWORD *)(v7 + 80))) & 0xF8 | v5;
  uint64_t v9 = (v34 + v8) & ~v8;
  unint64_t v10 = *(void *)(v32 + 64);
  if (((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v10) {
    unint64_t v10 = ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v10 <= *(void *)(v33 + 64)) {
    unint64_t v10 = *(void *)(v33 + 64);
  }
  uint64_t v11 = *(void *)(v3 + 64) + ((*(void *)(v31 + 64) + v4) & ~v4);
  if (!*(_DWORD *)(v3 + 84)) {
    ++v11;
  }
  unint64_t v12 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v10 <= v13) {
    unint64_t v10 = (v12 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v14 = ((((((v12 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 <= v14) {
    unint64_t v10 = v14;
  }
  if (v10 <= ((v13 + ((v5 + ((*(void *)(v30 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v10 = ((v13 + ((v5 + ((*(void *)(v30 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v15 = *(void *)(v7 + 64);
  if (v10 > v15) {
    unint64_t v15 = v10;
  }
  if (v15 <= 0x18) {
    unint64_t v15 = 24;
  }
  unint64_t v16 = ((((v9 + v15 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v17 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v17 <= 9) {
    unint64_t v17 = 9;
  }
  char v18 = 8 * v17;
  if (v17 > 3) {
    goto LABEL_23;
  }
  unsigned int v19 = ((1 << v18) + 1) >> v18;
  uint64_t v20 = 2;
  if (v19 > 0xFFFD) {
    uint64_t v20 = 4;
  }
  if (v19 <= 0xFD) {
LABEL_23:
  }
    uint64_t v20 = 1;
  unint64_t v21 = v20 + v17;
  if (v21 <= v16) {
    unint64_t v21 = v16;
  }
  if (v21 <= 9) {
    unint64_t v21 = 9;
  }
  if (v21 > 3) {
    goto LABEL_29;
  }
  unsigned int v23 = ((1 << (8 * v21)) + 3) >> (8 * v21);
  if (v23 > 0xFFFB)
  {
    uint64_t result = *(unsigned int *)&a1[v21];
  }
  else
  {
    if (v23 <= 0xFB)
    {
LABEL_29:
      uint64_t result = a1[v21];
      goto LABEL_34;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v21];
  }
LABEL_34:
  if (result >= 4)
  {
    if (v17 > 3) {
      goto LABEL_39;
    }
    unsigned int v24 = ((1 << v18) + 1) >> v18;
    uint64_t v25 = 2;
    if (v24 > 0xFFFD) {
      uint64_t v25 = 4;
    }
    if (v24 <= 0xFD) {
LABEL_39:
    }
      uint64_t v25 = 1;
    unint64_t v26 = v25 + v17;
    if (v26 <= v16) {
      unint64_t v26 = v16;
    }
    if (v26 <= 9) {
      LODWORD(v26) = 9;
    }
    if (v26 <= 3) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 4;
    }
    switch(v27)
    {
      case 1:
        int v28 = *a1;
        goto LABEL_52;
      case 2:
        int v28 = *(unsigned __int16 *)a1;
        goto LABEL_52;
      case 3:
        int v28 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_52;
      case 4:
        int v28 = *(_DWORD *)a1;
LABEL_52:
        if (v26 < 4) {
          uint64_t result = (v28 | ((result - 4) << (8 * v26))) + 4;
        }
        else {
          uint64_t result = (v28 + 4);
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C9A9976C(unsigned char *a1, unsigned int a2)
{
  uint64_t v47 = *(void *)(*(void *)(sub_1C9BEAB08() - 8) + 64);
  uint64_t v45 = *(void *)(sub_1C9BEC028() - 8);
  int v2 = *(_DWORD *)(v45 + 80);
  uint64_t v46 = *(void *)(sub_1C9BEAC48() - 8);
  int v42 = *(_DWORD *)(v46 + 80) | v2;
  uint64_t v44 = *(void *)(sub_1C9BEAF18() - 8);
  int v3 = *(_DWORD *)(v44 + 80) & 0xF8;
  uint64_t v4 = *(void *)(sub_1C9BEAE48() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v3 | v5 | 7;
  uint64_t v43 = *(void *)(sub_1C9BEC928() - 8);
  int v7 = *(_DWORD *)(v43 + 80);
  uint64_t v8 = *(void *)(sub_1C9BEC8F8() - 8);
  uint64_t v9 = (v42 | (v7 | *(_DWORD *)(v8 + 80))) & 0xF8 | v6;
  uint64_t v10 = (v47 + v9) & ~v9;
  unint64_t v11 = *(void *)(v45 + 64);
  if (((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > v11) {
    unint64_t v11 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v11 <= *(void *)(v46 + 64)) {
    unint64_t v11 = *(void *)(v46 + 64);
  }
  uint64_t v12 = *(void *)(v4 + 64) + ((*(void *)(v44 + 64) + v5) & ~v5);
  if (!*(_DWORD *)(v4 + 84)) {
    ++v12;
  }
  unint64_t v13 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  if (v11 <= v14) {
    unint64_t v11 = (v13 + 19) & 0xFFFFFFFFFFFFFFF8 | 5;
  }
  unint64_t v15 = ((((((v13 + 31) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v11 <= v15) {
    unint64_t v11 = v15;
  }
  if (v11 <= ((v14 + ((v6 + ((*(void *)(v43 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
            + 8)
    unint64_t v11 = ((v14 + ((v6 + ((*(void *)(v43 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v16 = *(void *)(v8 + 64);
  if (v11 > v16) {
    unint64_t v16 = v11;
  }
  if (v16 <= 0x18) {
    unint64_t v16 = 24;
  }
  unint64_t v17 = ((((v10 + v16 + 8) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 41;
  unint64_t v18 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v18 <= 9) {
    unint64_t v18 = 9;
  }
  if (a2 > 3)
  {
    char v22 = 8 * v18;
    if (v18 > 3) {
      goto LABEL_35;
    }
    unsigned int v23 = ((1 << v22) + 1) >> v22;
    uint64_t v24 = 2;
    if (v23 > 0xFFFD) {
      uint64_t v24 = 4;
    }
    if (v23 <= 0xFD) {
LABEL_35:
    }
      uint64_t v24 = 1;
    unint64_t v25 = v24 + v18;
    if (v25 <= v17) {
      unint64_t v25 = v17;
    }
    if (v25 <= 9) {
      LODWORD(v25) = 9;
    }
    BOOL v26 = v25 > 3;
    char v27 = 8 * v25;
    int v28 = (a2 - 4) & ~(-1 << v27);
    if (v26) {
      unsigned int v29 = 4;
    }
    else {
      unsigned int v29 = ((a2 - 4) >> v27) + 4;
    }
    if (v26) {
      int v30 = a2 - 4;
    }
    else {
      int v30 = v28;
    }
    if (v18 > 3) {
      goto LABEL_50;
    }
    unsigned int v31 = ((1 << v22) + 1) >> v22;
    uint64_t v32 = 2;
    if (v31 > 0xFFFD) {
      uint64_t v32 = 4;
    }
    if (v31 <= 0xFD) {
LABEL_50:
    }
      uint64_t v32 = 1;
    unint64_t v33 = v32 + v18;
    if (v33 <= v17) {
      unint64_t v33 = v17;
    }
    if (v33 <= 9) {
      unint64_t v33 = 9;
    }
    if (v33 > 3) {
      goto LABEL_56;
    }
    unsigned int v35 = ((1 << (8 * v33)) + 3) >> (8 * v33);
    if (v35 > 0xFFFB)
    {
      *(_DWORD *)&a1[v33] = v29;
    }
    else
    {
      if (v35 <= 0xFB)
      {
LABEL_56:
        a1[v33] = v29;
        goto LABEL_65;
      }
      *(_WORD *)&a1[v33] = v29;
    }
LABEL_65:
    if (v18 > 3) {
      goto LABEL_69;
    }
    unsigned int v36 = ((1 << v22) + 1) >> v22;
    uint64_t v37 = 2;
    if (v36 > 0xFFFD) {
      uint64_t v37 = 4;
    }
    if (v36 <= 0xFD) {
LABEL_69:
    }
      uint64_t v37 = 1;
    unint64_t v38 = v37 + v18;
    if (v38 <= v17) {
      unint64_t v38 = v17;
    }
    if (v38 <= 9) {
      size_t v39 = 9;
    }
    else {
      size_t v39 = v38;
    }
    if (v39 >= 4) {
      int v40 = 4;
    }
    else {
      int v40 = v39;
    }
    bzero(a1, v39);
    switch(v40)
    {
      case 2:
        *(_WORD *)a1 = v30;
        break;
      case 3:
        *(_WORD *)a1 = v30;
        a1[2] = BYTE2(v30);
        break;
      case 4:
        *(_DWORD *)a1 = v30;
        break;
      default:
        *a1 = v30;
        break;
    }
    return;
  }
  if (v18 > 3) {
    goto LABEL_24;
  }
  unsigned int v19 = ((1 << (8 * v18)) + 1) >> (8 * v18);
  uint64_t v20 = 2;
  if (v19 > 0xFFFD) {
    uint64_t v20 = 4;
  }
  if (v19 <= 0xFD) {
LABEL_24:
  }
    uint64_t v20 = 1;
  unint64_t v21 = v20 + v18;
  if (v21 <= v17) {
    unint64_t v21 = v17;
  }
  if (v21 <= 9) {
    unint64_t v21 = 9;
  }
  if (v21 > 3) {
    goto LABEL_30;
  }
  unsigned int v34 = ((1 << (8 * v21)) + 3) >> (8 * v21);
  if (v34 > 0xFFFB)
  {
    *(_DWORD *)&a1[v21] = a2;
  }
  else
  {
    if (v34 <= 0xFB)
    {
LABEL_30:
      a1[v21] = a2;
      return;
    }
    *(_WORD *)&a1[v21] = a2;
  }
}

uint64_t sub_1C9A99D68(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C9A99DC8(uint8_t *a1)
{
  return sub_1C9A8A9B0(a1) & 1;
}

void sub_1C9A99DF0(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9A99E14()
{
  int v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *int v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C9A8B070();
}

uint64_t sub_1C9A99EB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9A8A2AC(a1);
}

uint64_t type metadata accessor for SimpleDisambiguationPromptFlow.SimpleDisambiguationPromptFlowError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9A99EEC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *int v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9A8D8EC(v3, v4);
}

uint64_t sub_1C9A99F74()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  int v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *int v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9A8DC64(v3, v4);
}

uint64_t sub_1C9A99FFC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_17_0(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C9615888;
  return sub_1C9A8DDA0(v2, v4, v3);
}

uint64_t sub_1C9A9A09C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9A8DA14(v3, v4);
}

uint64_t sub_1C9A9A124()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9A8DB3C(v3, v4);
}

unsigned char *sub_1C9A9A1AC(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9A9A248);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C9A9A270()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C9A9A28C()
{
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_5_79()
{
  uint64_t v3 = *(void *)(v1 + 104);
  *(void *)uint64_t v3 = v0;
  *(unsigned char *)(v3 + 8) = 0;
  return swift_storeEnumTagMultiPayload();
}

void *OUTLINED_FUNCTION_9_68()
{
  return __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 64) + 32), *(void *)(*(void *)(v0 + 64) + 56));
}

uint64_t OUTLINED_FUNCTION_16_52()
{
  return *(void *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_20_56()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_30_31()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_32_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a4 + 40;
}

uint64_t SimpleOutputFlowAsync.__allocating_init(outputPublisher:outputGenerator:)()
{
  swift_allocObject();
  uint64_t v1 = (long long *)OUTLINED_FUNCTION_14_36();
  SimpleOutputFlowAsync.init(outputPublisher:outputGenerator:)(v1, v2, v3);
  return v0;
}

uint64_t SimpleOutputFlow.__allocating_init(outputGenerator:outputPublisher:)()
{
  OUTLINED_FUNCTION_13_68();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  SimpleOutputFlow.init(outputGenerator:outputPublisher:)(v1, v2, v3);
  return v0;
}

uint64_t SimpleOutputFlow.init(outputGenerator:outputPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(void *)(v3 + 16) = &unk_1EA598760;
  *(void *)(v3 + 24) = v7;
  sub_1C95FD5F0(a3, (uint64_t)&v11);
  uint64_t v8 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v9 = swift_allocObject();
  sub_1C95FD5D8(&v11, v9 + 16);
  uint64_t v12 = v8;
  unint64_t v13 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(void *)&long long v11 = v9;
  __swift_destroy_boxed_opaque_existential_1(a3);
  sub_1C95FD5D8(&v11, v3 + 32);
  return v3;
}

uint64_t sub_1C9A9A4CC(uint64_t a1, void (*a2)(void))
{
  a2();
  uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
  return sub_1C99B64CC(v3);
}

uint64_t SimpleOutputFlow.__allocating_init(outputPublisher:_:)()
{
  OUTLINED_FUNCTION_13_68();
  uint64_t v1 = OUTLINED_FUNCTION_14_36();
  SimpleOutputFlow.init(outputPublisher:_:)(v1, v2, v3);
  return v0;
}

uint64_t SimpleOutputFlow.init(outputPublisher:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C95FD5F0(a1, (uint64_t)&v11);
  uint64_t v7 = type metadata accessor for OutputPublisherAsyncAdapter();
  uint64_t v8 = swift_allocObject();
  sub_1C95FD5D8(&v11, v8 + 16);
  uint64_t v12 = v7;
  unint64_t v13 = &protocol witness table for OutputPublisherAsyncAdapter;
  *(void *)&long long v11 = v8;
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_1C95FD5D8(&v11, v3 + 32);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  *(void *)(v3 + 16) = &unk_1EA598770;
  *(void *)(v3 + 24) = v9;
  return v3;
}

uint64_t sub_1C9A9A64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C9A9A670, 0, 0);
}

uint64_t sub_1C9A9A670()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
  void *v2 = v0;
  v2[1] = sub_1C9A9A764;
  uint64_t v3 = *(void *)(v0 + 16);
  return MEMORY[0x1F41880D8](v3);
}

uint64_t sub_1C9A9A764()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9A9A840(uint64_t a1, void (*a2)(uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5987B0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  a2(sub_1C9A9B9B8, v9);
  return swift_release();
}

uint64_t sub_1C9A9A988(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8, v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4, v7);
  uint64_t v9 = (char *)&v22 - v8;
  sub_1C95FE5B0(a1, (uint64_t)v27, (uint64_t *)&unk_1EBC764F8);
  if (v28)
  {
    uint64_t v11 = (uint64_t)v6;
    *(void *)&v25[0] = 0;
    *((void *)&v25[0] + 1) = 0xE000000000000000;
    sub_1C9BEE188();
    sub_1C9BED6B8();
    swift_getErrorValue();
    sub_1C9BEE6E8();
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    unint64_t v12 = *((void *)&v25[0] + 1);
    uint64_t v23 = *(void *)&v25[0];
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C9BECF88();
    uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
    uint64_t v15 = *(void *)(v13 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, v14, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v13);
    sub_1C95FE5B0((uint64_t)v9, v11, &qword_1EBC7A230);
    if (__swift_getEnumTagSinglePayload(v11, 1, v13) == 1)
    {
      sub_1C95FE76C(v11, &qword_1EBC7A230);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      unint64_t v16 = sub_1C9BECF78();
      os_log_type_t v17 = sub_1C9BEDC88();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        *(void *)&v25[0] = v22;
        *(_DWORD *)uint64_t v18 = 136315650;
        uint64_t v19 = sub_1C9BEE1B8();
        *(void *)&v24[0] = sub_1C95FF228(v19, v20, (uint64_t *)v25);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2048;
        *(void *)&v24[0] = 45;
        sub_1C9BEDF68();
        *(_WORD *)(v18 + 22) = 2080;
        swift_bridgeObjectRetain();
        *(void *)&v24[0] = sub_1C95FF228(v23, v12, (uint64_t *)v25);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C95F9000, v16, v17, "FatalError at %s:%lu - %s", (uint8_t *)v18, 0x20u);
        uint64_t v21 = v22;
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v21, -1, -1);
        MEMORY[0x1CB78C440](v18, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v13);
    }
    if (qword_1EBC78750 != -1) {
      swift_once();
    }
    memset(v24, 0, 32);
    uint64_t v26 = 0;
    memset(v25, 0, sizeof(v25));
    swift_bridgeObjectRetain();
    sub_1C9BEC838();
  }
  sub_1C95FD5D8(v27, (uint64_t)v25);
  sub_1C95FD5F0((uint64_t)v25, (uint64_t)v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5987B0);
  sub_1C9BEDA08();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t SimpleOutputFlow.execute()(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A9AF18);
}

uint64_t sub_1C9A9AF18()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  v0[9] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = (void *)sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "Publishing output...");
    OUTLINED_FUNCTION_21_8();
  }
  uint64_t v7 = v0[8];

  uint64_t v8 = *(void *)(v7 + 56);
  uint64_t v9 = *(void *)(v7 + 64);
  __swift_project_boxed_opaque_existential_1((void *)(v7 + 32), v8);
  uint64_t v10 = swift_task_alloc();
  long long v11 = *(_OWORD *)(v7 + 16);
  v0[10] = v10;
  *(_OWORD *)(v10 + 16) = v11;
  unint64_t v12 = (void *)swift_task_alloc();
  v0[11] = v12;
  *unint64_t v12 = v0;
  v12[1] = sub_1C9A9B094;
  uint64_t v13 = OUTLINED_FUNCTION_87_4();
  return sub_1C962F1B0(v13, v14, v10, v8, v9);
}

uint64_t sub_1C9A9B094()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v6 = sub_1C9A9B22C;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    swift_task_dealloc();
    uint64_t v6 = sub_1C9A9B18C;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1C9A9B18C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = (void *)sub_1C9BECF78();
  os_log_type_t v2 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v2))
  {
    uint64_t v3 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v3);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v4, v5, "Output successfully published. Exiting...");
    OUTLINED_FUNCTION_21_8();
  }
  uint64_t v6 = *(void *)(v0 + 56);

  static ExecuteResponse.complete()(v6);
  OUTLINED_FUNCTION_22_0();
  return v7();
}

uint64_t sub_1C9A9B22C()
{
  OUTLINED_FUNCTION_33();
  swift_task_dealloc();
  uint64_t v1 = sub_1C9BECF78();
  os_log_type_t v2 = sub_1C9BEDC88();
  BOOL v3 = os_log_type_enabled(v1, v2);
  uint64_t v4 = *(void **)(v0 + 96);
  if (v3)
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_1C95F9000, v1, v2, "SimpleOutputFlow received an unexpected error while publishing output.", v5, 2u);
    MEMORY[0x1CB78C440](v5, -1, -1);
  }

  uint64_t v6 = *(void *)(v0 + 56);
  static ExecuteResponse.complete()(v6);
  OUTLINED_FUNCTION_22_0();
  return v7();
}

uint64_t sub_1C9A9B308(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C97E46F0;
  return v6(a1);
}

uint64_t SimpleOutputFlow.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return v0;
}

uint64_t SimpleOutputFlow.__deallocating_deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9A9B44C()
{
  return SimpleOutputFlow.execute(completion:)();
}

uint64_t sub_1C9A9B470()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_87_4();
  return SimpleOutputFlow.execute()(v3);
}

uint64_t sub_1C9A9B4FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9A9B534()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return v4(v3);
}

uint64_t sub_1C9A9B5D4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return sub_1C9A9A64C(v3, v4, v5);
}

uint64_t sub_1C9A9B66C()
{
  return SimpleOutputFlowAsync.execute(completion:)();
}

uint64_t sub_1C9A9B690()
{
  OUTLINED_FUNCTION_33();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  uint64_t v3 = OUTLINED_FUNCTION_36_0();
  return v4(v3);
}

unint64_t sub_1C9A9B730()
{
  unint64_t result = qword_1EA598790;
  if (!qword_1EA598790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598790);
  }
  return result;
}

uint64_t type metadata accessor for SimpleOutputFlow()
{
  return self;
}

uint64_t method lookup function for SimpleOutputFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SimpleOutputFlow);
}

uint64_t dispatch thunk of SimpleOutputFlow.__allocating_init(outputGenerator:outputPublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of SimpleOutputFlow.__allocating_init(outputPublisher:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for SimpleOutputFlowAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SimpleOutputFlowAsync);
}

uint64_t dispatch thunk of SimpleOutputFlowAsync.__allocating_init(outputPublisher:outputGenerator:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for SimpleOutputFlowAsync.InvalidStateError()
{
  return &type metadata for SimpleOutputFlowAsync.InvalidStateError;
}

uint64_t assignWithCopy for SimpleOutputFlowAsync.State(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1)
    {
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v7 = *(void **)a2;
      id v8 = v7;
      *(void *)a1 = v7;
      *(unsigned char *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      long long v9 = *a2;
      long long v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      uint64_t v6 = *((void *)a2 + 3);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      *(unsigned char *)(a1 + 40) = 0;
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for SimpleOutputFlowAsync.State()
{
  return &type metadata for SimpleOutputFlowAsync.State;
}

uint64_t sub_1C9A9B924(uint64_t a1)
{
  return sub_1C9A9A840(a1, *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v1 + 16));
}

uint64_t sub_1C9A9B92C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5987B0);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C9A9B9B8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5987B0);

  return sub_1C9A9A988(a1);
}

uint64_t OUTLINED_FUNCTION_13_68()
{
  return swift_allocObject();
}

uint64_t SimpleYesNoPromptFlowStrategy.__allocating_init(baseManifest:responseGenerator:rejectionOutputProducer:cancellationOutputProducer:promptPatternExecutionProducer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_22_41(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v13 = *(void *)(v9 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v9, v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = OUTLINED_FUNCTION_5_80(v17, v29);
  v19(v18);
  uint64_t v27 = OUTLINED_FUNCTION_18_55(v11, v20, v21, v22, v23, v24, v25, v26, v12, v14, v13);
  __swift_destroy_boxed_opaque_existential_1(v9);
  return v27;
}

uint64_t sub_1C9A9BB3C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A9BB54);
}

uint64_t sub_1C9A9BB54()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v1 + 32) = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t sub_1C9A9BB7C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A9E37C);
}

uint64_t SimpleYesNoPromptFlowStrategy.init(baseManifest:responseGenerator:rejectionOutputProducer:cancellationOutputProducer:promptPatternExecutionProducer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_22_41(a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v13 = *(void *)(v9 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(v9, v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v18 = OUTLINED_FUNCTION_5_80(v17, v29);
  v19(v18);
  uint64_t v27 = OUTLINED_FUNCTION_18_55(v12, v20, v21, v22, v23, v24, v25, v26, v8, v14, v13);
  __swift_destroy_boxed_opaque_existential_1(v10);
  return v27;
}

uint64_t SimpleYesNoPromptFlowStrategy.makePromptForYesNoResponse()()
{
  OUTLINED_FUNCTION_24();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = sub_1C9BEB148();
  v1[4] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v1[5] = v4;
  v1[6] = OUTLINED_FUNCTION_16();
  uint64_t v5 = sub_1C9BEAF68();
  v1[7] = v5;
  OUTLINED_FUNCTION_5_0(v5);
  v1[8] = v6;
  v1[9] = OUTLINED_FUNCTION_67_0();
  v1[10] = swift_task_alloc();
  uint64_t v7 = sub_1C9BEB018();
  v1[11] = v7;
  OUTLINED_FUNCTION_5_0(v7);
  v1[12] = v8;
  v1[13] = OUTLINED_FUNCTION_67_0();
  v1[14] = swift_task_alloc();
  uint64_t v9 = sub_1C9BEAF38();
  v1[15] = v9;
  OUTLINED_FUNCTION_5_0(v9);
  v1[16] = v10;
  v1[17] = OUTLINED_FUNCTION_67_0();
  v1[18] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for NLContextUpdate();
  v1[19] = v11;
  OUTLINED_FUNCTION_22(v11);
  v1[20] = OUTLINED_FUNCTION_16();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77C70);
  OUTLINED_FUNCTION_22(v12);
  v1[21] = OUTLINED_FUNCTION_16();
  uint64_t v13 = type metadata accessor for OutputGenerationManifest();
  v1[22] = v13;
  OUTLINED_FUNCTION_22(v13);
  v1[23] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v14, v15, v16);
}

uint64_t sub_1C9A9BE08()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[19];
  sub_1C965D910(v0[3] + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_baseManifest, v2, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  uint64_t v5 = v2 + *(int *)(v1 + 44);
  sub_1C963215C(v5, v3);
  LODWORD(v2) = __swift_getEnumTagSinglePayload(v3, 1, v4);
  sub_1C95FE81C(v3, &qword_1EBC77C70);
  if (v2 == 1)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v33 = v5;
    uint64_t v6 = sub_1C9BECF88();
    __swift_project_value_buffer(v6, (uint64_t)qword_1EBC7A520);
    uint64_t v7 = sub_1C9BECF78();
    os_log_type_t v8 = sub_1C9BEDC78();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1C95F9000, v7, v8, "OutputGenerationManifest does not include an NL context update. Will send a standard UserAccepted offer.", v9, 2u);
      MEMORY[0x1CB78C440](v9, -1, -1);
    }
    uint64_t v10 = v0[20];
    uint64_t v32 = v0[19];
    uint64_t v11 = v0[17];
    uint64_t v12 = v0[18];
    uint64_t v13 = v0[15];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[13];
    uint64_t v16 = v0[14];
    uint64_t v25 = v0[12];
    uint64_t v26 = v0[11];
    uint64_t v24 = v0[10];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[9];
    uint64_t v30 = v0[7];
    uint64_t v17 = v0[5];
    uint64_t v27 = v0[6];
    uint64_t v31 = v0[4];

    NLContextUpdate.init()(v10);
    sub_1C9BEAF28();
    sub_1C9BEB008();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v11, v12, v13);
    sub_1C9BEAFF8();
    sub_1C9BEAF58();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v15, v16, v26);
    sub_1C9BEAF48();
    sub_1C9BEB138();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v29, v24, v30);
    sub_1C9BEB108();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA588540);
    unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1C9BEF570;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v19 + v18, v27, v31);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v24, v30);
    OUTLINED_FUNCTION_37();
    v20();
    OUTLINED_FUNCTION_37();
    v21();
    swift_bridgeObjectRelease();
    *(void *)(v10 + 216) = v19;
    sub_1C95FE81C(v33, &qword_1EBC77C70);
    sub_1C965D910(v10, v33, (void (*)(void))type metadata accessor for NLContextUpdate);
    __swift_storeEnumTagSinglePayload(v33, 0, 1, v32);
    sub_1C9A9E1F4(v10, (void (*)(void))type metadata accessor for NLContextUpdate);
  }
  unsigned int v34 = (uint64_t (*)(void))(*(void *)(v0[3]
                                      + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_promptPatternExecutionProducer)
                          + **(int **)(v0[3]
                                     + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_promptPatternExecutionProducer));
  uint64_t v22 = (void *)swift_task_alloc();
  v0[24] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_1C9A9C254;
  return v34();
}

uint64_t sub_1C9A9C254()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 200) = v4;
  *(void *)(v2 + 208) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9A9C338()
{
  uint64_t v1 = (void *)(v0[3] + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_responseGenerator);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[27] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C9A9C454;
  uint64_t v5 = v0[25];
  uint64_t v6 = v0[23];
  uint64_t v7 = v0[2];
  return v9(v7, v5, v6, v2, v3);
}

uint64_t sub_1C9A9C454()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 224) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A9C534()
{
  uint64_t v1 = *(void *)(v0 + 184);

  sub_1C9A9E1F4(v1, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t sub_1C9A9C638()
{
  OUTLINED_FUNCTION_13_69();
  sub_1C9A9E1F4(v0, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t sub_1C9A9C728()
{
  OUTLINED_FUNCTION_13_69();
  sub_1C9A9E1F4(v0, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
  return v2();
}

uint64_t SimpleYesNoPromptFlowStrategy.actionForInput(_:)@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0();
  uint64_t v91 = v5;
  uint64_t v8 = MEMORY[0x1F4188790](v6, v7);
  unsigned int v93 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v88 - v12;
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = type metadata accessor for USOParse();
  uint64_t v18 = OUTLINED_FUNCTION_22(v17);
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v92 = (uint64_t)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v23 = MEMORY[0x1F4188790](v21, v22);
  uint64_t v25 = (uint64_t *)((char *)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = MEMORY[0x1F4188790](v23, v26);
  uint64_t v29 = (char *)&v88 - v28;
  uint64_t v31 = MEMORY[0x1F4188790](v27, v30);
  uint64_t v33 = (char *)&v88 - v32;
  MEMORY[0x1F4188790](v31, v34);
  unsigned int v36 = (char *)&v88 - v35;
  uint64_t v37 = type metadata accessor for Input(0);
  sub_1C965D910(a1 + *(int *)(v37 + 20), (uint64_t)v36, (void (*)(void))type metadata accessor for Parse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 3)
    {
      if (EnumCaseMultiPayload == 6)
      {
        sub_1C965D910((uint64_t)v36, (uint64_t)v33, (void (*)(void))type metadata accessor for Parse);
        sub_1C9612C90((uint64_t)v33, v92, (void (*)(void))type metadata accessor for USOParse);
        uint64_t v39 = sub_1C9BEAEC8();
        uint64_t v40 = *(void *)(v39 + 16);
        char v89 = v36;
        unsigned int v90 = a2;
        if (v40)
        {
          int v41 = *(void (**)(uint64_t))(v91 + 16);
          uint64_t v42 = *(unsigned __int8 *)(v91 + 80);
          uint64_t v88 = v39;
          uint64_t v43 = v39 + ((v42 + 32) & ~v42);
          uint64_t v44 = (void (**)(char *, uint64_t))(v91 + 8);
          uint64_t v45 = *(void *)(v91 + 72);
          while (1)
          {
            OUTLINED_FUNCTION_25_41();
            v41(v46);
            char v47 = sub_1C9BEAF88();
            (*v44)(v16, v4);
            if (v47) {
              goto LABEL_51;
            }
            v43 += v45;
            if (!--v40)
            {
              swift_bridgeObjectRelease();
              unsigned int v36 = v89;
              a2 = v90;
              goto LABEL_36;
            }
          }
        }
        swift_bridgeObjectRelease();
LABEL_36:
        uint64_t v71 = sub_1C9BEAEC8();
        uint64_t v72 = *(void *)(v71 + 16);
        if (v72)
        {
          unsigned int v73 = *(void (**)(char *, unint64_t, uint64_t))(v91 + 16);
          unint64_t v74 = v71 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
          uint64_t v75 = (void (**)(char *, uint64_t))(v91 + 8);
          uint64_t v76 = *(void *)(v91 + 72);
          while (1)
          {
            v73(v13, v74, v4);
            char v77 = sub_1C9BEAF98();
            (*v75)(v13, v4);
            if (v77) {
              break;
            }
            v74 += v76;
            if (!--v72)
            {
              swift_bridgeObjectRelease();
              unsigned int v36 = v89;
              a2 = v90;
              goto LABEL_46;
            }
          }
LABEL_51:
          swift_bridgeObjectRelease();
          sub_1C9A9E1F4(v92, (void (*)(void))type metadata accessor for USOParse);
          *unsigned int v90 = 1;
LABEL_61:
          uint64_t v70 = (uint64_t)v89;
          return sub_1C9A9E1F4(v70, (void (*)(void))type metadata accessor for Parse);
        }
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v79 = sub_1C9BEAEC8();
        uint64_t v80 = *(void *)(v79 + 16);
        if (v80)
        {
          uint64_t v81 = *(void (**)(uint64_t))(v91 + 16);
          unint64_t v82 = v79 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
          unsigned int v83 = (void (**)(char *, uint64_t))(v91 + 8);
          uint64_t v84 = *(void *)(v91 + 72);
          unsigned int v85 = v93;
          while (1)
          {
            OUTLINED_FUNCTION_25_41();
            v81(v86);
            char v87 = sub_1C9BEAFA8();
            (*v83)(v85, v4);
            if (v87) {
              break;
            }
            v82 += v84;
            if (!--v80)
            {
              swift_bridgeObjectRelease();
              unsigned int v36 = v89;
              a2 = v90;
              goto LABEL_53;
            }
          }
          swift_bridgeObjectRelease();
          sub_1C9A9E1F4(v92, (void (*)(void))type metadata accessor for USOParse);
          *unsigned int v90 = 0;
          goto LABEL_61;
        }
        swift_bridgeObjectRelease();
LABEL_53:
        sub_1C9A9E1F4(v92, (void (*)(void))type metadata accessor for USOParse);
      }
      goto LABEL_54;
    }
    sub_1C965D910((uint64_t)v36, (uint64_t)v29, (void (*)(void))type metadata accessor for Parse);
    self;
    if (OUTLINED_FUNCTION_20_45())
    {
      swift_unknownObjectRelease();
      *a2 = 0;
LABEL_55:
      uint64_t v70 = (uint64_t)v36;
      return sub_1C9A9E1F4(v70, (void (*)(void))type metadata accessor for Parse);
    }
    self;
    if (OUTLINED_FUNCTION_20_45() || (self, OUTLINED_FUNCTION_20_45()))
    {
      sub_1C9A9E1F4((uint64_t)v36, (void (*)(void))type metadata accessor for Parse);
      uint64_t result = swift_unknownObjectRelease();
LABEL_59:
      *a2 = 1;
      return result;
    }
    swift_unknownObjectRelease();
LABEL_54:
    *a2 = 2;
    goto LABEL_55;
  }
  uint64_t v48 = a2;
  uint64_t v49 = v36;
  sub_1C965D910((uint64_t)v36, (uint64_t)v25, (void (*)(void))type metadata accessor for Parse);
  uint64_t v51 = *v25;
  uint64_t v50 = v25[1];
  if (qword_1EA588098 != -1) {
    swift_once();
  }
  id v52 = objc_msgSend((id)qword_1EA58FD70, sel_identifier);
  uint64_t v53 = sub_1C9BED568();
  uint64_t v55 = v54;

  if (v51 == v53 && v50 == v55)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v57 = OUTLINED_FUNCTION_11_70();
    swift_bridgeObjectRelease();
    if ((v57 & 1) == 0)
    {
      if (qword_1EA588088 != -1) {
        swift_once();
      }
      id v58 = objc_msgSend((id)qword_1EA58FD60, sel_identifier);
      uint64_t v59 = sub_1C9BED568();
      uint64_t v61 = v60;

      if (v51 != v59 || v50 != v61)
      {
        char v63 = OUTLINED_FUNCTION_11_70();
        swift_bridgeObjectRelease();
        if (v63)
        {
LABEL_57:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a2 = v48;
          unsigned int v36 = v49;
          goto LABEL_58;
        }
        if (qword_1EA588090 != -1) {
          swift_once();
        }
        id v64 = objc_msgSend((id)qword_1EA58FD68, sel_identifier);
        uint64_t v65 = sub_1C9BED568();
        uint64_t v67 = v66;

        if (v51 != v65 || v50 != v67)
        {
          char v69 = OUTLINED_FUNCTION_11_70();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a2 = v48;
          unsigned int v36 = v49;
          if ((v69 & 1) == 0) {
            goto LABEL_54;
          }
LABEL_58:
          uint64_t result = sub_1C9A9E1F4((uint64_t)v36, (void (*)(void))type metadata accessor for Parse);
          goto LABEL_59;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v48 = 0;
  uint64_t v70 = (uint64_t)v49;
  return sub_1C9A9E1F4(v70, (void (*)(void))type metadata accessor for Parse);
}

uint64_t SimpleYesNoPromptFlowStrategy.parseConfirmationResponse(input:)()
{
  OUTLINED_FUNCTION_24();
  v0[2] = v1;
  v0[3] = v2;
  uint64_t v3 = sub_1C9BEB018();
  v0[4] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v0[5] = v4;
  v0[6] = OUTLINED_FUNCTION_67_0();
  v0[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for USOParse();
  OUTLINED_FUNCTION_22(v5);
  v0[8] = OUTLINED_FUNCTION_16();
  uint64_t v6 = type metadata accessor for Parse(0);
  v0[9] = v6;
  OUTLINED_FUNCTION_22(v6);
  v0[10] = OUTLINED_FUNCTION_67_0();
  v0[11] = swift_task_alloc();
  v0[12] = swift_task_alloc();
  v0[13] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A9D0DC()
{
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = type metadata accessor for Input(0);
  sub_1C965D910(v4 + *(int *)(v5 + 20), v3, (void (*)(void))type metadata accessor for Parse);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = *(uint64_t **)(v0 + 80);
    sub_1C965D910(*(void *)(v0 + 104), (uint64_t)v24, (void (*)(void))type metadata accessor for Parse);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    if (qword_1EA588088 != -1) {
      swift_once();
    }
    id v27 = objc_msgSend((id)qword_1EA58FD60, sel_identifier);
    uint64_t v28 = sub_1C9BED568();
    uint64_t v30 = v29;

    if (v26 == v28 && v25 == v30)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = OUTLINED_FUNCTION_21_42();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        if (qword_1EA588090 != -1) {
          swift_once();
        }
        id v33 = objc_msgSend((id)qword_1EA58FD68, sel_identifier);
        uint64_t v34 = sub_1C9BED568();
        uint64_t v36 = v35;

        if (v26 == v34 && v25 == v36)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
        }
        else
        {
          char v38 = OUTLINED_FUNCTION_21_42();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v38 & 1) == 0) {
            goto LABEL_37;
          }
        }
        goto LABEL_47;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  if (EnumCaseMultiPayload != 3)
  {
    if (EnumCaseMultiPayload == 6)
    {
      uint64_t v7 = *(void *)(v0 + 96);
      uint64_t v8 = *(void *)(v0 + 64);
      sub_1C965D910(*(void *)(v0 + 104), v7, (void (*)(void))type metadata accessor for Parse);
      sub_1C9612C90(v7, v8, (void (*)(void))type metadata accessor for USOParse);
      uint64_t v9 = *(void *)(sub_1C9BEAEC8() + 16);
      if (v9)
      {
        OUTLINED_FUNCTION_9_69();
        while (1)
        {
          uint64_t v10 = OUTLINED_FUNCTION_15_56();
          v2(v10);
          sub_1C9BEAF88();
          uint64_t v11 = OUTLINED_FUNCTION_14_66();
          v12(v11);
          if (v1) {
            break;
          }
          v4 += v8;
          if (!--v9) {
            goto LABEL_8;
          }
        }
        uint64_t v47 = *(void *)(v0 + 64);
        swift_bridgeObjectRelease();
        sub_1C9A9E1F4(v47, (void (*)(void))type metadata accessor for USOParse);
        goto LABEL_44;
      }
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(sub_1C9BEAEC8() + 16);
      if (v13)
      {
        OUTLINED_FUNCTION_9_69();
        while (1)
        {
          uint64_t v14 = OUTLINED_FUNCTION_15_56();
          v2(v14);
          sub_1C9BEAF98();
          uint64_t v15 = OUTLINED_FUNCTION_14_66();
          v16(v15);
          if (v1) {
            break;
          }
          v4 += v8;
          if (!--v13) {
            goto LABEL_12;
          }
        }
        uint64_t v48 = *(void *)(v0 + 64);
        swift_bridgeObjectRelease();
        sub_1C9A9E1F4(v48, (void (*)(void))type metadata accessor for USOParse);
        goto LABEL_47;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C9BECF88();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
      uint64_t v18 = sub_1C9BECF78();
      os_log_type_t v19 = sub_1C9BEDC78();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (_WORD *)swift_slowAlloc();
        *uint64_t v20 = 0;
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v21, v22, "Unable to parse a confirmation response from the given USO parse");
        MEMORY[0x1CB78C440](v20, -1, -1);
      }
      uint64_t v23 = *(void *)(v0 + 64);

      sub_1C9A9E1F4(v23, (void (*)(void))type metadata accessor for USOParse);
LABEL_42:
      char v46 = 2;
      goto LABEL_48;
    }
LABEL_37:
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1C9BECF88();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EBC7A520);
    int v41 = sub_1C9BECF78();
    os_log_type_t v42 = sub_1C9BEDC78();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (_WORD *)swift_slowAlloc();
      *uint64_t v43 = 0;
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v44, v45, "Unable to parse a confirmation response from the given parse");
      MEMORY[0x1CB78C440](v43, -1, -1);
    }

    goto LABEL_42;
  }
  sub_1C965D910(*(void *)(v0 + 104), *(void *)(v0 + 88), (void (*)(void))type metadata accessor for Parse);
  self;
  if (OUTLINED_FUNCTION_20_45())
  {
    swift_unknownObjectRelease();
LABEL_44:
    char v46 = 0;
    goto LABEL_48;
  }
  self;
  uint64_t v39 = OUTLINED_FUNCTION_20_45();
  swift_unknownObjectRelease();
  if (!v39) {
    goto LABEL_37;
  }
LABEL_47:
  char v46 = 1;
LABEL_48:
  uint64_t v49 = *(void *)(v0 + 104);
  **(unsigned char **)(v0 + 16) = v46;
  sub_1C9A9E1F4(v49, (void (*)(void))type metadata accessor for Parse);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v50();
}

uint64_t SimpleYesNoPromptFlowStrategy.makeConfirmationRejectedResponse()(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A9D6A4);
}

uint64_t sub_1C9A9D6A4()
{
  OUTLINED_FUNCTION_6_75();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  void *v2 = v0;
  v2[1] = sub_1C9A9D76C;
  return v4(v0 + 56);
}

uint64_t sub_1C9A9D76C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A9D84C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (long long *)(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v2 = *(void *)(v0 + 96);
    sub_1C95FD5D8(v1, v0 + 16);
    sub_1C95FD5D8((long long *)(v0 + 16), v2);
    OUTLINED_FUNCTION_90();
    return v3();
  }
  else
  {
    sub_1C95FE81C((uint64_t)v1, &qword_1EA588550);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1C9A9E374;
    return sub_1C97D6D18();
  }
}

uint64_t SimpleYesNoPromptFlowStrategy.makeFlowCancelledResponse()(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9A9D954);
}

uint64_t sub_1C9A9D954()
{
  OUTLINED_FUNCTION_6_75();
  uint64_t v4 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  void *v2 = v0;
  v2[1] = sub_1C9A9DA1C;
  return v4(v0 + 56);
}

uint64_t sub_1C9A9DA1C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9A9DAFC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (long long *)(v0 + 56);
  if (*(void *)(v0 + 80))
  {
    uint64_t v2 = *(void *)(v0 + 96);
    sub_1C95FD5D8(v1, v0 + 16);
    sub_1C95FD5D8((long long *)(v0 + 16), v2);
    OUTLINED_FUNCTION_90();
    return v3();
  }
  else
  {
    sub_1C95FE81C((uint64_t)v1, &qword_1EA588550);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1C9A9DBEC;
    return sub_1C97D6D18();
  }
}

uint64_t sub_1C9A9DBEC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1C9A9DCB4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SimpleYesNoPromptFlowStrategy.deinit()
{
  sub_1C9A9E1F4(v0 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_baseManifest, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_responseGenerator);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t SimpleYesNoPromptFlowStrategy.__deallocating_deinit()
{
  SimpleYesNoPromptFlowStrategy.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9A9DDAC()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9A9DE40;
  return SimpleYesNoPromptFlowStrategy.makePromptForYesNoResponse()();
}

uint64_t sub_1C9A9DE40()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1C9A9DF08@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return SimpleYesNoPromptFlowStrategy.actionForInput(_:)(a1, a2);
}

uint64_t sub_1C9A9DF20()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9A9E378;
  return SimpleYesNoPromptFlowStrategy.parseConfirmationResponse(input:)();
}

uint64_t sub_1C9A9DFC0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9A9E378;
  return SimpleYesNoPromptFlowStrategy.makeConfirmationRejectedResponse()(a1);
}

uint64_t sub_1C9A9E058(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9A9E378;
  return SimpleYesNoPromptFlowStrategy.makeFlowCancelledResponse()(a1);
}

uint64_t sub_1C9A9E0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  os_log_type_t v19 = (uint64_t *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_responseGenerator);
  v19[3] = a10;
  v19[4] = a11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a10 - 8) + 32))(boxed_opaque_existential_0, a2, a10);
  sub_1C9612C90(a1, a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_baseManifest, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  uint64_t v21 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_rejectionOutputProducer);
  *uint64_t v21 = a3;
  v21[1] = a4;
  uint64_t v22 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_cancellationOutputProducer);
  *uint64_t v22 = a5;
  v22[1] = a6;
  uint64_t v23 = (void *)(a9 + OBJC_IVAR____TtC11SiriKitFlow29SimpleYesNoPromptFlowStrategy_promptPatternExecutionProducer);
  *uint64_t v23 = a7;
  v23[1] = a8;
  return a9;
}

uint64_t sub_1C9A9E1F4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

uint64_t sub_1C9A9E248()
{
  return type metadata accessor for SimpleYesNoPromptFlowStrategy();
}

uint64_t type metadata accessor for SimpleYesNoPromptFlowStrategy()
{
  uint64_t result = qword_1EA598820;
  if (!qword_1EA598820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C9A9E298()
{
  uint64_t result = type metadata accessor for OutputGenerationManifest();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SimpleYesNoPromptFlowStrategy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SimpleYesNoPromptFlowStrategy);
}

uint64_t dispatch thunk of SimpleYesNoPromptFlowStrategy.__allocating_init(baseManifest:responseGenerator:rejectionOutputProducer:cancellationOutputProducer:promptPatternExecutionProducer:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

char *OUTLINED_FUNCTION_5_80@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_11_70()
{
  return sub_1C9BEE618();
}

uint64_t OUTLINED_FUNCTION_14_66()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_15_56()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_18_55(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = *(void *)(v16 - 96);
  uint64_t v19 = *(void *)(v16 - 88);
  return sub_1C9A9E0F0(a1, v11, v15, v14, v13, v12, v18, v19, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_21_42()
{
  return sub_1C9BEE618();
}

void OUTLINED_FUNCTION_22_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 - 96) = a7;
  *(void *)(v8 - 88) = a8;
}

uint64_t static CorrectionsExitValue.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      goto LABEL_7;
    }
    goto LABEL_9;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_1C9BEE618();
      }
      goto LABEL_10;
    }
LABEL_9:
    char v6 = 0;
LABEL_10:
    sub_1C9A9E5B0(v4, v5);
    sub_1C9A9E5B0(v2, v3);
    goto LABEL_11;
  }
  if (v5 != 1) {
    goto LABEL_9;
  }
  unint64_t v3 = 1;
LABEL_7:
  char v6 = 1;
LABEL_11:
  sub_1C9A9E5C4(v2, v3);
  sub_1C9A9E5C4(v4, v5);
  return v6 & 1;
}

uint64_t sub_1C9A9E5B0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C9A9E5C4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C9A9E5DC()
{
}

void SiriEnvironment.correctionsClientProvider.modify(void *a1)
{
  a1[1] = v1;
  a1[2] = type metadata accessor for SiriCorrectionsClientProvider();
  a1[3] = sub_1C96149F4(&qword_1EBC77370);
  sub_1C9BEC338();
}

void sub_1C9A9E694()
{
}

void sub_1C9A9E6B8(uint64_t a1)
{
  sub_1C96148BC(a1, (uint64_t)v1);
  sub_1C9614AB8((uint64_t)v1);
}

void sub_1C9A9E6F4()
{
}

void sub_1C9A9E7AC()
{
}

void sub_1C9A9E7D4(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77478);
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  sub_1C96149F4(&qword_1EBC77368);
  sub_1C9BEC778();
}

void sub_1C9A9E8A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598840);
  MEMORY[0x1F4188790](v2, v3);
  unint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a1);
  sub_1C9A9E974((uint64_t)v5);
}

void sub_1C9A9E974(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598840);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
  sub_1C9BEC838();
}

void sub_1C9A9EA90(void *a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598840);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  sub_1C9917E7C();
}

void sub_1C9A9EB5C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void, void, void))(*(void *)(*(void *)a1 + 16) + 16))(*(void *)(*(void *)a1 + 24), *(void *)(*(void *)a1 + 32), *(void *)(*(void *)a1 + 8));
    sub_1C9A9E974(v2);
  }
  sub_1C9A9E974(*(void *)(*(void *)a1 + 32));
}

void SiriCorrectionsClientProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  SiriCorrectionsClientProvider.init()(v0, v1, v2, v3, v4, v5, v6, v7);
}

void SiriCorrectionsClientProvider.__allocating_init(storage:)(uint64_t a1)
{
  swift_allocObject();
  SiriCorrectionsClientProvider.init(storage:)(a1, v2, v3, v4, v5, v6, v7, v8);
}

void SiriCorrectionsClientProvider.init(storage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_72(a1, a2, a3, a4, a5, a6, a7, a8, v8, v9, v10, v11, v12, v13, v14, v15, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77478);
  swift_allocObject();
  sub_1C9BEC748();
}

void sub_1C9A9EDBC()
{
}

void sub_1C9A9EE34()
{
  type metadata accessor for SiriCorrectionsClientProvider();

  while (1)
    ;
}

void sub_1C9A9EE80()
{
  type metadata accessor for SiriCorrectionsClientProvider();

  sub_1C9BEC838();
}

uint64_t sub_1C9A9EED0()
{
  return sub_1C96149F4(&qword_1EBC77370);
}

uint64_t sub_1C9A9EF04()
{
  return sub_1C96149F4(&qword_1EBC77378);
}

void sub_1C9A9EF38()
{
}

void sub_1C9A9EF68()
{
}

void sub_1C9A9EF98()
{
}

uint64_t dispatch thunk of CorrectingFlow.correctionsExitValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CorrectingFlow.on(correction:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SiriCorrectionsClient.register(action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SiriCorrectionsClient.register(flow:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t destroy for CorrectionsActionOutcome(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 56);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)result + 3;
  }
  if (v1 == 1)
  {
    if (*(void *)(result + 24)) {
      __swift_destroy_boxed_opaque_existential_1(result);
    }
    return swift_bridgeObjectRelease();
  }
  else if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t initializeWithCopy for CorrectionsActionOutcome(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v13;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 56) = 2;
  }
  else if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v12;
    *(unsigned char *)(a1 + 56) = 1;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 24);
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v9;
      *(void *)(a1 + 32) = v10;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
    }
    else
    {
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for CorrectionsActionOutcome(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 1)
    {
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(a1);
      }
      swift_bridgeObjectRelease();
    }
    else if (*(void *)(a1 + 24))
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 56);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      uint64_t v7 = *((void *)a2 + 3);
      if (v7)
      {
        *(void *)(a1 + 24) = v7;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
      }
      else
      {
        long long v11 = *a2;
        long long v12 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v11;
        *(_OWORD *)(a1 + 16) = v12;
      }
      *(unsigned char *)(a1 + 56) = 2;
    }
    else if (v5 == 1)
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
      }
      else
      {
        long long v9 = *a2;
        long long v10 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v9;
        *(_OWORD *)(a1 + 16) = v10;
      }
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(unsigned char *)(a1 + 56) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v8 = *((void *)a2 + 3);
      if (v8)
      {
        *(void *)(a1 + 24) = v8;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v8 - 8))(a1, a2);
      }
      else
      {
        long long v13 = *a2;
        long long v14 = a2[1];
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        *(_OWORD *)a1 = v13;
        *(_OWORD *)(a1 + 16) = v14;
      }
      *(unsigned char *)(a1 + 56) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for CorrectionsActionOutcome(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 1)
    {
      if (*(void *)(a1 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(a1);
      }
      swift_bridgeObjectRelease();
    }
    else if (*(void *)(a1 + 24))
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 2;
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(unsigned char *)(a1 + 56) = v7;
  }
  return a1;
}

uint64_t sub_1C9A9F4EC(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1C9A9F508(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CorrectionsActionOutcome()
{
  return &type metadata for CorrectionsActionOutcome;
}

uint64_t getEnumTagSinglePayload for CorrectionsExitValue(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CorrectionsExitValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CorrectionsExitValue()
{
  return &type metadata for CorrectionsExitValue;
}

uint64_t method lookup function for SiriCorrectionsClientProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriCorrectionsClientProvider);
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.mock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.mock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.mock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.correctionsClient.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.correctionsClient.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.$correctionsClient.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.$correctionsClient.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.$correctionsClient.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SiriCorrectionsClientProvider.__allocating_init(storage:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t OUTLINED_FUNCTION_0_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15, long long a16, uint64_t a17)
{
  *(void *)(v17 + 16) = 0;
  a17 = 0;
  a15 = 0u;
  a16 = 0u;
  return sub_1C96148BC((uint64_t)&a15, (uint64_t)&a10);
}

void sub_1C9A9F78C()
{
}

void SiriEnvironment.flowTask.modify(uint64_t a1)
{
  *(void *)(a1 + 8) = v1;
  type metadata accessor for FlowTaskProvider();
  sub_1C9AA0090((unint64_t *)&qword_1EBC776C0);
  sub_1C9BEC338();
}

void sub_1C9A9F83C(uint64_t a1, char a2)
{
  if (a2) {
    sub_1C9BEC838();
  }
  SiriEnvironment.flowTask.setter();
}

void sub_1C9A9F894()
{
}

void sub_1C9A9F8C0()
{
}

void sub_1C9A9F900()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5907E0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_84_1();
  uint64_t v2 = OUTLINED_FUNCTION_1_15();
  v3(v2);
  sub_1C9BEC838();
}

void sub_1C9A9F9B4()
{
}

void sub_1C9A9F9E0()
{
}

void sub_1C9A9FA08()
{
}

void sub_1C9A9FAA4()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA598850);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_84_1();
  uint64_t v2 = OUTLINED_FUNCTION_1_15();
  v3(v2);
  sub_1C9BEC838();
}

void sub_1C9A9FB58()
{
}

void sub_1C9A9FB7C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
  MEMORY[0x1F4188790](v2 - 8, v3);
  unsigned int v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C960D780(a1, (uint64_t)v5);
  sub_1C9616380((uint64_t)v5);
}

void sub_1C9A9FC0C()
{
}

uint64_t sub_1C9A9FCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t))
{
  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_222();
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v6, a1);
  return a6(v6);
}

void sub_1C9A9FD60()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598848);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_222();
  OUTLINED_FUNCTION_84_1();
  uint64_t v2 = OUTLINED_FUNCTION_1_15();
  v3(v2);
  sub_1C9BEC838();
}

void sub_1C9A9FE14()
{
}

void sub_1C9A9FE8C()
{
  type metadata accessor for FlowTaskProvider();

  while (1)
    ;
}

void sub_1C9A9FED8()
{
  type metadata accessor for FlowTaskProvider();

  sub_1C9BEC838();
}

uint64_t sub_1C9A9FF24(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC74550);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C9A9FF84()
{
}

void sub_1C9A9FFB0()
{
}

void sub_1C9A9FFD8()
{
}

void sub_1C9AA0000()
{
}

uint64_t sub_1C9AA0028()
{
  return sub_1C9AA0090((unint64_t *)&qword_1EBC776C0);
}

uint64_t sub_1C9AA005C()
{
  return sub_1C9AA0090(&qword_1EBC776C8);
}

uint64_t sub_1C9AA0090(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FlowTaskProvider();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C9AA00D0()
{
}

void sub_1C9AA00FC()
{
}

void sub_1C9AA0128()
{
}

uint64_t sub_1C9AA014C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9A9FCC4(a1, a2, a3, a4, &qword_1EA5907E0, (uint64_t (*)(uint64_t))sub_1C9A9F900);
}

void sub_1C9AA0180()
{
}

uint64_t sub_1C9AA01A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9A9FCC4(a1, a2, a3, a4, (uint64_t *)&unk_1EA598850, (uint64_t (*)(uint64_t))sub_1C9A9FAA4);
}

void sub_1C9AA01D8()
{
}

uint64_t sub_1C9AA01FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9A9FCC4(a1, a2, a3, a4, &qword_1EA598848, (uint64_t (*)(uint64_t))sub_1C9A9FD60);
}

uint64_t method lookup function for FlowTaskProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FlowTaskProvider);
}

uint64_t dispatch thunk of FlowTaskProvider.mock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of FlowTaskProvider.mock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of FlowTaskProvider.mock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of FlowTaskProvider.__allocating_init(storage:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FlowTaskProvider.$id.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of FlowTaskProvider.isClientInitiated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of FlowTaskProvider.$isClientInitiated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of FlowTaskProvider.creationTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of FlowTaskProvider.$creationTime.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

void OUTLINED_FUNCTION_6_76()
{
  sub_1C9BEC788();
}

void SiriEnvironmentProperty.wrappedValue.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v2 = MEMORY[0x1F4188790](v0 - 8, v1);
  MEMORY[0x1F4188790](v2, v3);
  sub_1C9BEC3F8();
}

ValueMetadata *type metadata accessor for SiriEnvironmentProperty()
{
  return &type metadata for SiriEnvironmentProperty;
}

uint64_t sub_1C9AA080C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  int64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_16;
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C9BEE288();
    if (v5 < 0)
    {
LABEL_17:
      __break(1u);
      return result;
    }
    for (uint64_t i = 0; ; ++i)
    {
      uint64_t v10 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      if (a3 + i >= v4 || i >= v5) {
        goto LABEL_15;
      }
      id v12 = *(id *)(a2 + 8 * a3 + 8 * i);
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      uint64_t result = sub_1C9BEE268();
      if (v10 == v5) {
        return v13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

id sub_1C9AA0914(unint64_t a1)
{
  return sub_1C9AA092C(a1, (void (*)(void, BOOL, unint64_t))sub_1C9705CC8);
}

id sub_1C9AA092C(unint64_t a1, void (*a2)(void, BOOL, unint64_t))
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C9BEE3C8();
  swift_bridgeObjectRelease();
  if (!v6) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C9BEE3C8();
  swift_bridgeObjectRelease();
LABEL_3:
  if (v4 == 1)
  {
    a2(0, (a1 & 0xC000000000000001) == 0, a1);
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = MEMORY[0x1CB78B3A0](0, a1);
      swift_bridgeObjectRelease();
    }
    else
    {
      return *(id *)(a1 + 32);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    return (id)a1;
  }
  return (id)v5;
}

void sub_1C9AA0A34()
{
  OUTLINED_FUNCTION_10_26();
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  sub_1C9BEC838();
}

void sub_1C9AA0AD8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a4[3];
  uint64_t v8 = a4[4];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a4, v7);

  sub_1C9AA1C3C(a1, a2, a3, (uint64_t)v9, v7, v8);
}

uint64_t sub_1C9AA0B4C(uint64_t a1)
{
  OUTLINED_FUNCTION_2_41();
  *(void *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9AA0B88(uint64_t a1)
{
  OUTLINED_FUNCTION_2_41();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9AA0BC4(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t sub_1C9AA0BD0(uint64_t a1)
{
  OUTLINED_FUNCTION_2_41();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C9AA0C0C(uint64_t a1)
{
  *(void *)(v1 + 64) = a1;
  return MEMORY[0x1F41817F8]();
}

void SiriKitAceViewBuilder.__allocating_init()()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  type metadata accessor for SiriKitAceViewBuilder();
  OUTLINED_FUNCTION_14_67();
  sub_1C9BEC838();
}

void sub_1C9AA0CA4()
{
  OUTLINED_FUNCTION_11_71();
  OUTLINED_FUNCTION_1_86();
  id v2 = v1;
  MEMORY[0x1CB78AA10]();
  sub_1C96B0244(*(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10));
  OUTLINED_FUNCTION_4_81();
  sub_1C9BED8A8();
  swift_endAccess();
  sub_1C9BEC838();
}

void sub_1C9AA0D14()
{
}

void sub_1C9AA0D80(void *a1)
{
  id v2 = a1;
  sub_1C9AA0C0C((uint64_t)a1);

  sub_1C9BEC838();
}

void sub_1C9AA0DC0()
{
  OUTLINED_FUNCTION_11_71();
  OUTLINED_FUNCTION_1_86();
  id v2 = v1;
  MEMORY[0x1CB78AA10]();
  sub_1C96B0244(*(void *)((*(void *)(v0 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10));
  OUTLINED_FUNCTION_4_81();
  sub_1C9BED8A8();
  swift_endAccess();
  sub_1C9BEC838();
}

void sub_1C9AA0E30(void *a1)
{
  id v2 = a1;
  sub_1C9AA0BC4((uint64_t)a1);

  sub_1C9BEC838();
}

void sub_1C9AA0E70()
{
  OUTLINED_FUNCTION_11_71();
  if (v1 >> 62)
  {
    sub_1C96044C4(0, (unint64_t *)&qword_1EA588D70);
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C9BEE3A8();
    swift_bridgeObjectRelease();
    uint64_t v0 = v2;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1C9BEE638();
    sub_1C96044C4(0, (unint64_t *)&qword_1EA588D70);
  }
  sub_1C9AA0BD0(v0);

  sub_1C9BEC838();
}

void sub_1C9AA0F38(uint64_t a1)
{
}

void sub_1C9AA0F50()
{
  OUTLINED_FUNCTION_11_71();
  OUTLINED_FUNCTION_1_86();
  id v1 = v0;
  MEMORY[0x1CB78AA10]();
  OUTLINED_FUNCTION_21_43();
  OUTLINED_FUNCTION_4_81();
  sub_1C9BED8A8();
  swift_endAccess();
  sub_1C9BEC838();
}

void sub_1C9AA0FB0(uint64_t a1)
{
}

void sub_1C9AA0FC8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3 = swift_bridgeObjectRetain();
  a2(v3);

  sub_1C9BEC838();
}

void sub_1C9AA1008()
{
  OUTLINED_FUNCTION_11_71();
  OUTLINED_FUNCTION_1_86();
  id v1 = v0;
  MEMORY[0x1CB78AA10]();
  OUTLINED_FUNCTION_20_57();
  OUTLINED_FUNCTION_4_81();
  sub_1C9BED8A8();
  swift_endAccess();
  sub_1C9BEC838();
}

void sub_1C9AA1068()
{
  OUTLINED_FUNCTION_16_53();
  uint64_t v0 = OUTLINED_FUNCTION_9_70();

  sub_1C9AA1270(v0, v1, v2);
}

uint64_t sub_1C9AA10A8(void *a1)
{
  id v2 = objc_msgSend(a1, sel_items);

  if (!v2) {
    return 0;
  }
  sub_1C96044C4(0, &qword_1EA598860);
  uint64_t v3 = sub_1C9BED878();

  return v3;
}

uint64_t sub_1C9AA1120(void *a1)
{
  id v1 = objc_msgSend(a1, sel_commands);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EA588DF0);
  uint64_t v3 = sub_1C9BED878();

  return v3;
}

void sub_1C9AA1184(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a4[12];
  uint64_t v8 = a4[13];
  __swift_project_boxed_opaque_existential_1(a4 + 9, v7);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8)) {
    sub_1C9AA1270(a1, a2, a3);
  }
  type metadata accessor for SiriKitAceViewBuilder();
  sub_1C9AA13C0(a3, a1, a2);
  uint64_t v9 = OUTLINED_FUNCTION_1_86();
  MEMORY[0x1CB78AA10](v9);
  OUTLINED_FUNCTION_20_57();
  OUTLINED_FUNCTION_4_81();
  sub_1C9BED8A8();
  swift_endAccess();
  sub_1C9BEC838();
}

void sub_1C9AA1270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SiriKitAceViewBuilder();
  sub_1C9AA1488(a3, a1, a2);
  uint64_t v6 = OUTLINED_FUNCTION_1_86();
  MEMORY[0x1CB78AA10](v6);
  OUTLINED_FUNCTION_21_43();
  OUTLINED_FUNCTION_4_81();
  sub_1C9BED8A8();
  swift_endAccess();
  sub_1C9BEC838();
}

id sub_1C9AA1304()
{
  OUTLINED_FUNCTION_10_26();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C9BF02F0;
  *(void *)(v3 + 32) = v2;
  uint64_t v7 = v3;
  sub_1C9BED8A8();
  id v4 = objc_allocWithZone(MEMORY[0x1E4F96AD8]);
  swift_unknownObjectRetain();
  id v5 = objc_msgSend(v4, sel_init);
  sub_1C975DEEC(v1, v0, v5);
  sub_1C9793B7C(v7, v5);
  return v5;
}

id sub_1C9AA13C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C9BF02F0;
  *(void *)(v6 + 32) = a1;
  uint64_t v10 = v6;
  sub_1C9BED8A8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F96AD8]);
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_init);
  sub_1C975DEEC(a2, a3, v8);
  sub_1C9793B7C(v10, v8);
  return v8;
}

id sub_1C9AA1488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C9BF02F0;
  *(void *)(v6 + 32) = a1;
  uint64_t v15 = v6;
  sub_1C9BED8A8();
  id v7 = objc_allocWithZone(MEMORY[0x1E4F969C0]);
  swift_unknownObjectRetain();
  id v8 = objc_msgSend(v7, sel_init);
  sub_1C9AADE54(v15, v8);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F969B0]), sel_init);
  objc_msgSend(v9, sel_setCentered_, 1);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96B00]), sel_init);
  sub_1C975DEEC(a2, a3, v10);
  objc_msgSend(v9, sel_setDecoratedLabel_, v10);
  objc_msgSend(v9, sel_setAction_, v8);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F969C8]), sel_init);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C9BF02F0;
  *(void *)(v12 + 32) = v9;
  uint64_t v16 = v12;
  sub_1C9BED8A8();
  id v13 = v9;
  sub_1C9AADE68(v16, v11);

  return v11;
}

void *sub_1C9AA1628(uint64_t a1, void *a2)
{
  uint64_t v7 = type metadata accessor for RefreshableDeviceState();
  id v8 = &protocol witness table for RefreshableDeviceState;
  *(void *)&long long v6 = a1;
  a2[8] = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  a2[2] = MEMORY[0x1E4FBC860];
  a2[3] = v4;
  a2[4] = v4;
  a2[5] = v4;
  a2[6] = 0;
  a2[7] = v4;
  sub_1C95FD5D8(&v6, (uint64_t)(a2 + 9));
  return a2;
}

void *sub_1C9AA1694(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = a3;
  uint64_t v12 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  a2[8] = 0;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  a2[2] = MEMORY[0x1E4FBC860];
  a2[3] = v8;
  a2[4] = v8;
  a2[5] = v8;
  a2[6] = 0;
  a2[7] = v8;
  sub_1C95FD5D8(&v10, (uint64_t)(a2 + 9));
  return a2;
}

void sub_1C9AA1730(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = a4[3];
  uint64_t v9 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v8);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9))
  {
    sub_1C95FD5F0((uint64_t)a4, (uint64_t)v25);
    type metadata accessor for SiriKitAceViewBuilder();
    long long v10 = (void *)swift_allocObject();
    uint64_t v11 = v26;
    uint64_t v12 = v27;
    uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
    MEMORY[0x1F4188790](v13, v13);
    uint64_t v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
    (*(void (**)(unsigned char *))(v16 + 16))(v15);
    sub_1C9AA1694((uint64_t)v15, v10, v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    sub_1C9AA1488(a1, a2, a3);
    sub_1C9AA0F50();
  }
  sub_1C95FD5F0((uint64_t)a4, (uint64_t)v25);
  type metadata accessor for SiriKitAceViewBuilder();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = v26;
  uint64_t v19 = v27;
  uint64_t v20 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v25, v26);
  MEMORY[0x1F4188790](v20, v20);
  uint64_t v22 = &v25[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *))(v23 + 16))(v22);
  sub_1C9AA1694((uint64_t)v22, v17, v18, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  sub_1C9AA1304();
  sub_1C9AA1008();
}

void sub_1C9AA19B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *a4;
  long long v6 = &protocol witness table for RefreshableDeviceState;
  uint64_t v4 = a4;
  sub_1C9BEC838();
}

void sub_1C9AA1C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  OUTLINED_FUNCTION_10_26();
  v26[3] = v9;
  v26[4] = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(boxed_opaque_existential_0, a4, a5);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a6 + 16))(a5, a6))
  {
    sub_1C95FD5F0((uint64_t)v26, (uint64_t)v25);
    type metadata accessor for SiriKitAceViewBuilder();
    OUTLINED_FUNCTION_14_67();
    OUTLINED_FUNCTION_18_56();
    OUTLINED_FUNCTION_0();
    MEMORY[0x1F4188790](v12, v13);
    uint64_t v15 = OUTLINED_FUNCTION_5_81(v14, v25[0]);
    v16(v15);
    OUTLINED_FUNCTION_17_58();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    uint64_t v17 = OUTLINED_FUNCTION_15_57();
    sub_1C9AA1488(v17, v18, v19);
    sub_1C9AA0F50();
  }
  sub_1C95FD5F0((uint64_t)v26, (uint64_t)v25);
  type metadata accessor for SiriKitAceViewBuilder();
  OUTLINED_FUNCTION_14_67();
  OUTLINED_FUNCTION_18_56();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v20, v21);
  uint64_t v23 = OUTLINED_FUNCTION_5_81(v22, v25[0]);
  v24(v23);
  OUTLINED_FUNCTION_17_58();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  OUTLINED_FUNCTION_15_57();
  sub_1C9AA1304();
  sub_1C9AA1008();
}

void sub_1C9AA1E08(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a2)
  {
  }
}

uint64_t method lookup function for SiriKitAceViewBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitAceViewBuilder);
}

uint64_t dispatch thunk of static SiriKitAceViewBuilder.makeBuilderFromLaunchAppCommand(launchAppCommand:buttonLabel:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of static SiriKitAceViewBuilder.makeBuilderFromLaunchAppCommand(launchAppCommand:buttonLabel:deviceState:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.addSnippet(snippet:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.withUtteranceViews(utteranceViews:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.addDomainObjectPicker(domainObjectPicker:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.addTipView(tipView:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.withDisambiguationList(disambiguationList:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.withTipViews(tipViews:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.withButtonGroups(buttonGroups:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.addButtonGroup(buttonGroup:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.withButtons(buttons:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.addButton(button:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of SiriKitAceViewBuilder.addButtonGroup(with:command:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t OUTLINED_FUNCTION_1_86()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_81()
{
  return sub_1C9BED948();
}

char *OUTLINED_FUNCTION_5_81@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_6_77()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_69()
{
  return sub_1C965FBC8(v0);
}

uint64_t OUTLINED_FUNCTION_8_72()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_70()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_67()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_15_57()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_53()
{
  return swift_getObjectType();
}

void *OUTLINED_FUNCTION_17_58()
{
  return sub_1C9AA1694(v3, v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_18_56()
{
  uint64_t v2 = *(void *)(v0 - 136);
  return __swift_mutable_project_boxed_opaque_existential_1(v0 - 160, v2);
}

uint64_t OUTLINED_FUNCTION_19_54()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_57()
{
  uint64_t v2 = *(void *)((*(void *)(v0 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10);
  return sub_1C96B0244(v2);
}

uint64_t OUTLINED_FUNCTION_21_43()
{
  uint64_t v2 = *(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10);
  return sub_1C96B0244(v2);
}

void sub_1C9AA2220(uint64_t a1@<X8>)
{
  unint64_t v4 = *(void *)(v1 + 256);
  uint64_t v3 = *(void *)(v1 + 264);
  int v5 = *(unsigned __int8 *)(v1 + 272);
  if (v5 == 3)
  {
    *(void *)a1 = v4;
    *(unsigned char *)(a1 + 8) = v3 & 1 | 0x40;
    id v8 = (id)v4;
  }
  else
  {
    if (v5 != 4) {
      goto LABEL_6;
    }
    if (!(v4 ^ 2 | v3))
    {
      __swift_project_boxed_opaque_existential_1((void *)(v1 + 216), *(void *)(v1 + 240));
      sub_1C974F770();
    }
    if (v4 ^ 3 | v3)
    {
LABEL_6:
      sub_1C9AA7228();
      uint64_t v6 = swift_allocError();
      *(void *)uint64_t v7 = v4;
      *(void *)(v7 + 8) = v3;
      *(unsigned char *)(v7 + 16) = v5;
      *(void *)a1 = v6;
      *(unsigned char *)(a1 + 8) = 64;
      sub_1C9AA6D28((id)v4, v3, v5);
    }
    else
    {
      *(void *)a1 = 0;
      *(unsigned char *)(a1 + 8) = 0x80;
    }
  }
}

void sub_1C9AA236C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  id v8 = __swift_project_boxed_opaque_existential_1((void *)(v3 + 216), *(void *)(v3 + 240));
  uint64_t v10 = *(void *)(*v8 + 64);
  unint64_t v9 = *(void *)(*v8 + 72);
  unint64_t v11 = sub_1C9AA3060(a1, a2, a3);
  uint64_t v13 = v12;
  if (v11 == sub_1C9AA3060(*(void *)(v4 + 256), *(void *)(v4 + 264), *(unsigned char *)(v4 + 272)) && v13 == v14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_1C9BEE618();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C9BECF88();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
      swift_bridgeObjectRetain();
      sub_1C9BEC838();
    }
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C9BECF88();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C9BECF78();
  os_log_type_t v20 = sub_1C9BEDC78();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = v22;
    *(_DWORD *)uint64_t v21 = 136315394;
    swift_bridgeObjectRetain();
    sub_1C95FF228(v10, v9, &v25);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v23 = sub_1C9AA3060(*(void *)(v4 + 256), *(void *)(v4 + 264), *(unsigned char *)(v4 + 272));
    sub_1C95FF228(v23, v24, &v25);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v19, v20, "%s set state to existing value: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v22, -1, -1);
    MEMORY[0x1CB78C440](v21, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_1C9AA3060(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t result = 0xD000000000000010;
  switch(a3)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x726F7272652ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      switch(a1)
      {
        case 1:
          unint64_t result = 0x6F4679646165722ELL;
          break;
        case 2:
          unint64_t result = 0x74656C706D6F632ELL;
          break;
        case 3:
          unint64_t result = 0x6C6C65636E61632ELL;
          break;
        default:
          return result;
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_1C9AA3194(void *a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = a2;
  *(unsigned char *)(v3 + 272) = a3;
  uint64_t v7 = (void *)OUTLINED_FUNCTION_17_59();
  sub_1C9AA6D28(v7, v8, v9);
  sub_1C9AA6D28(a1, a2, a3);
  uint64_t v10 = (void *)OUTLINED_FUNCTION_17_59();
  sub_1C9AA6DF8(v10, v11, v12);
  uint64_t v13 = OUTLINED_FUNCTION_17_59();
  sub_1C9AA236C(v13, v14, v15);
  sub_1C9AA6DF8(a1, a2, a3);
  char v16 = (void *)OUTLINED_FUNCTION_17_59();

  sub_1C9AA6DF8(v16, v17, v18);
}

uint64_t sub_1C9AA3230()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC88();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    _os_log_impl(&dword_1C95F9000, v2, v3, "The synchronous version of on was called. Unexpected...", v0, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  return 0;
}

uint64_t sub_1C9AA32F8()
{
  OUTLINED_FUNCTION_24();
  v1[6] = v2;
  v1[7] = v0;
  OUTLINED_FUNCTION_4_0();
  v1[8] = v3;
  type metadata accessor for Input(0);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C9AA3398()
{
  uint64_t v35 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[10];
  uint64_t v3 = sub_1C9BECF88();
  v0[11] = __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  sub_1C962C9D4(v1, v2);
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC78();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[10];
  if (v6)
  {
    uint64_t v8 = OUTLINED_FUNCTION_35_0();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v9 = sub_1C9BEE808();
    v0[3] = sub_1C95FF228(v9, v10, &v34);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = sub_1C95FF228(0x28636E7973416E6FLL, 0xEF293A7475706E69, &v34);
    sub_1C9BEDF68();
    *(_WORD *)(v8 + 22) = 2080;
    uint64_t v11 = Input.description.getter();
    v0[5] = sub_1C95FF228(v11, v12, &v34);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C965E920(v7, (void (*)(void))type metadata accessor for Input);
    _os_log_impl(&dword_1C95F9000, v4, v5, "%s %s: %s", (uint8_t *)v8, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C965E920(v0[10], (void (*)(void))type metadata accessor for Input);
  }

  uint64_t v13 = v0[7];
  if (*(unsigned char *)(v13 + 272) != 4) {
    goto LABEL_12;
  }
  uint64_t v14 = *(void *)(v13 + 256);
  uint64_t v15 = *(void *)(v13 + 264);
  if (v14 != 1 || v15 != 0)
  {
    if (!(v15 | v14))
    {
      sub_1C962C9D4(v0[6], v0[9]);
      uint64_t v27 = sub_1C9BECF78();
      os_log_type_t v28 = sub_1C9BEDC78();
      BOOL v29 = os_log_type_enabled(v27, v28);
      uint64_t v30 = v0[9];
      if (v29)
      {
        uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_67();
        uint64_t v34 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)uint64_t v31 = 136315138;
        uint64_t v32 = Input.description.getter();
        v0[2] = sub_1C95FF228(v32, v33, &v34);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C965E920(v30, (void (*)(void))type metadata accessor for Input);
        _os_log_impl(&dword_1C95F9000, v27, v28, "AuthoredFlow accepting input %s as it has not started execution and may have been pushed as the first Flow on the Runtime. If this is not desired please investigate why this input was sent to the AuthoredFlow", v31, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        sub_1C965E920(v0[9], (void (*)(void))type metadata accessor for Input);
      }

      goto LABEL_15;
    }
LABEL_12:
    uint64_t v17 = (void *)sub_1C9BECF78();
    os_log_type_t v18 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v18))
    {
      uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v19);
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v20, v21, "Received input but we are not in the expected state. Ignoring...");
      OUTLINED_FUNCTION_11_4();
    }

LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_94();
    __asm { BRAA            X2, X16 }
  }
  __swift_project_boxed_opaque_existential_1((void *)(v13 + 216), *(void *)(v13 + 240));
  unint64_t v24 = (void *)swift_task_alloc();
  v0[12] = v24;
  *unint64_t v24 = v0;
  v24[1] = sub_1C9AA3850;
  OUTLINED_FUNCTION_94();
  return sub_1C974BC58();
}

uint64_t sub_1C9AA3850()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  void *v2 = *v0;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 112) = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9AA3920()
{
  OUTLINED_FUNCTION_26_0();
  if (*(void *)(v0 + 104))
  {
    uint64_t v1 = sub_1C9BECF78();
    os_log_type_t v2 = sub_1C9BEDC78();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl(&dword_1C95F9000, v1, v2, "Parser indicates that it will produce an event for the current input. Will process input.", v3, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C9BEC838();
  }
  uint64_t v4 = (void *)sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v5))
  {
    uint64_t v6 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v6);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v7, v8, "Received input that we cannot process. Ignoring...");
    OUTLINED_FUNCTION_11_4();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9(0);
}

uint64_t sub_1C9AA3A80()
{
  OUTLINED_FUNCTION_24();
  uint64_t v3 = v2;
  v1[7] = v2;
  v1[8] = v0;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v1[9] = v4;
  *uint64_t v4 = v5;
  v4[1] = sub_1C9AA3B14;
  return sub_1C9AA3F5C(v3);
}

uint64_t sub_1C9AA3B14()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9AA3C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)v22[10];
  uint64_t v26 = sub_1C9BECF88();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
  id v27 = v25;
  id v28 = v25;
  BOOL v29 = sub_1C9BECF78();
  os_log_type_t v30 = sub_1C9BEDC88();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = (void *)v22[10];
  if (v31)
  {
    OUTLINED_FUNCTION_67();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_177(4.8149e-34);
    uint64_t v33 = sub_1C9BEE6E8();
    uint64_t v35 = sub_1C95FF228(v33, v34, &a11);
    OUTLINED_FUNCTION_20_58(v35);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_239(&dword_1C95F9000, v36, v37, "Unexpected error while executing: %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  v22[11] = sub_1C9BED458();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v22[12] = v38;
  *char v38 = v39;
  v38[1] = sub_1C9AA3E20;
  OUTLINED_FUNCTION_10_1();
  return sub_1C9AA55E8();
}

uint64_t sub_1C9AA3E20()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AA3F04()
{
  OUTLINED_FUNCTION_24();

  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AA3F5C(uint64_t a1)
{
  v2[42] = a1;
  v2[43] = v1;
  OUTLINED_FUNCTION_4_0();
  v2[44] = v3;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AA3F84);
}

uint64_t sub_1C9AA3F84()
{
  uint64_t v44 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    uint64_t v5 = sub_1C9BEE808();
    unsigned char v0[40] = sub_1C95FF228(v5, v6, v43);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    v0[41] = sub_1C95FF228(0xD000000000000013, 0x80000001C9C2A000, v43);
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v2, v3, "%s.%s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v7 = v0[43];
  unint64_t v8 = *(void *)(v7 + 256);
  v0[45] = v8;
  uint64_t v9 = *(void *)(v7 + 264);
  v0[46] = v9;
  switch(*(unsigned char *)(v7 + 272))
  {
    case 1:
      OUTLINED_FUNCTION_30_32();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[50] = v10;
      *unint64_t v10 = v11;
      v10[1] = sub_1C9AA4894;
      OUTLINED_FUNCTION_27_38();
      OUTLINED_FUNCTION_94();
      return sub_1C974D874();
    case 2:
      goto LABEL_23;
    case 3:
      if (v9) {
        goto LABEL_17;
      }
      id v14 = (id)v8;
      uint64_t v15 = (void *)sub_1C9BECF78();
      os_log_type_t v16 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v16))
      {
        uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v17);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v18, v19, "Attempting to handle error with generic dialog.");
        OUTLINED_FUNCTION_11_4();
      }

      v0[56] = sub_1C9BED458();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[57] = v20;
      *uint64_t v20 = v21;
      v20[1] = sub_1C9AA4E3C;
      OUTLINED_FUNCTION_94();
      return sub_1C9AA55E8();
    case 4:
      if (__PAIR128__((unint64_t)(v8 >= 2) + v9 - 1, v8 - 2) < 2)
      {
LABEL_17:
        swift_retain_n();
        uint64_t v23 = sub_1C9BECF78();
        os_log_type_t v24 = sub_1C9BEDC78();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)OUTLINED_FUNCTION_67();
          uint64_t v26 = OUTLINED_FUNCTION_35_0();
          *(_DWORD *)uint64_t v25 = 136315138;
          v43[0] = v26;
          unint64_t v27 = sub_1C9AA3060(*(void *)(v7 + 256), *(void *)(v7 + 264), *(unsigned char *)(v7 + 272));
          v0[39] = sub_1C95FF228(v27, v28, v43);
          sub_1C9BEDF68();
          OUTLINED_FUNCTION_27_27();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C95F9000, v23, v24, "Exiting in state: %s", v25, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }
        else
        {

          OUTLINED_FUNCTION_27_27();
        }
        static ExecuteResponse.complete()(v0[42]);
        OUTLINED_FUNCTION_90();
LABEL_29:
        OUTLINED_FUNCTION_94();
        __asm { BRAA            X1, X16 }
      }
      if (v8 | v9)
      {
LABEL_23:
        swift_retain_n();
        uint64_t v32 = sub_1C9BECF78();
        os_log_type_t v33 = sub_1C9BEDC88();
        if (os_log_type_enabled(v32, v33))
        {
          unint64_t v34 = (uint8_t *)OUTLINED_FUNCTION_67();
          v43[0] = OUTLINED_FUNCTION_35_0();
          *(_DWORD *)unint64_t v34 = 136315138;
          unint64_t v35 = sub_1C9AA3060(*(void *)(v7 + 256), *(void *)(v7 + 264), *(unsigned char *)(v7 + 272));
          v0[38] = sub_1C95FF228(v35, v36, v43);
          sub_1C9BEDF68();
          OUTLINED_FUNCTION_27_27();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C95F9000, v32, v33, "Execute called in unexpected state: %s", v34, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }
        else
        {

          OUTLINED_FUNCTION_27_27();
        }
        char v38 = *(void **)(v7 + 256);
        uint64_t v37 = *(void *)(v7 + 264);
        char v39 = *(unsigned char *)(v7 + 272);
        sub_1C9AA7228();
        swift_allocError();
        *(void *)uint64_t v40 = v38;
        *(void *)(v40 + 8) = v37;
        *(unsigned char *)(v40 + 16) = v39;
        sub_1C9AA6D28(v38, v37, v39);
        swift_willThrow();
        OUTLINED_FUNCTION_22_0();
        goto LABEL_29;
      }
      OUTLINED_FUNCTION_30_32();
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      v0[53] = v29;
      *BOOL v29 = v30;
      v29[1] = sub_1C9AA4B10;
      OUTLINED_FUNCTION_94();
      return sub_1C974B164();
    default:
      OUTLINED_FUNCTION_30_32();
      sub_1C9BEC838();
  }
}

uint64_t sub_1C9AA4680()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_10_67();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v0;
  *uint64_t v4 = *v0;
  swift_task_dealloc();
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 384) = v6;
  *unint64_t v6 = v5;
  v6[1] = sub_1C9AA47B8;
  uint64_t v7 = *(void *)(v1 + 336);
  return sub_1C9AA5DD4(v7, v3 + 16);
}

uint64_t sub_1C9AA47B8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 392) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA4894()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v0;
  *uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 408) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1C9AA4A34;
  uint64_t v6 = *(void *)(v1 + 336);
  return sub_1C9AA5DD4(v6, v2 + 208);
}

uint64_t sub_1C9AA4A34()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 416) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA4B10()
{
  OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_10_67();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v0;
  *uint64_t v4 = *v0;
  swift_task_dealloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 432) = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1C9AA4C48;
  uint64_t v7 = *(void *)(v1 + 336);
  return sub_1C9AA5DD4(v7, v3 + 112);
}

uint64_t sub_1C9AA4C48()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 440) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA4D24()
{
  OUTLINED_FUNCTION_24();
  sub_1C97550C0(v0 + 112);
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9AA4D7C()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AA6DF8(*(void **)(v0 + 360), *(void *)(v0 + 368), 0);
  sub_1C97550C0(v0 + 16);
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9AA4DE4()
{
  OUTLINED_FUNCTION_24();
  sub_1C97550C0(v0 + 208);
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9AA4E3C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AA4F20()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AA6DF8(*(void **)(v0 + 360), *(void *)(v0 + 368), 3);
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9AA4F7C()
{
  OUTLINED_FUNCTION_24();
  sub_1C97550C0(v0 + 112);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AA4FD8()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AA6DF8(*(void **)(v0 + 360), *(void *)(v0 + 368), 0);
  sub_1C97550C0(v0 + 16);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AA5044()
{
  OUTLINED_FUNCTION_24();
  sub_1C97550C0(v0 + 208);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

void sub_1C9AA50A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void **)a1;
  unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C95F9000, v6, v7, "Authored Flow received response from child flow", v8, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  if (*(unsigned char *)(v1 + 272) == 2)
  {
    if (v4 >> 6)
    {
      if (v4 >> 6 == 1)
      {
        uint64_t v9 = v4 & 1;
        sub_1C9759F20(v3, v4);
        sub_1C9759F20(v3, v4);
        id v10 = v3;
        uint64_t v11 = sub_1C9BECF78();
        os_log_type_t v12 = sub_1C9BEDC78();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)OUTLINED_FUNCTION_67();
          uint64_t v41 = OUTLINED_FUNCTION_35_0();
          *(_DWORD *)uint64_t v13 = 136315138;
          swift_getErrorValue();
          uint64_t v14 = sub_1C9BEE6E8();
          sub_1C95FF228(v14, v15, &v41);
          OUTLINED_FUNCTION_29_35();
          uint64_t v9 = v4 & 1;
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          sub_1C9759F3C(v3, v4);
          sub_1C9759F3C(v3, v4);
          _os_log_impl(&dword_1C95F9000, v11, v12, "Child flow encountered an error: %s", v13, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }
        else
        {
          sub_1C9759F3C(v3, v4);
          sub_1C9759F3C(v3, v4);
        }

        id v40 = v3;
        sub_1C9AA3194(v3, v9, 3);
        sub_1C9759F3C(v3, v4);
        return;
      }
      uint64_t v37 = sub_1C9BECF78();
      os_log_type_t v38 = sub_1C9BEDC78();
      if (os_log_type_enabled(v37, v38))
      {
        char v39 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)char v39 = 0;
        _os_log_impl(&dword_1C95F9000, v37, v38, "Child flow indicated user cancelled prompt.", v39, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v34 = 3;
      uint64_t v35 = 0;
      char v36 = 4;
    }
    else
    {
      uint64_t v27 = *(void *)(v1 + 256);
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1C9BECF78();
      os_log_type_t v29 = sub_1C9BEDC78();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_1C95F9000, v28, v29, "Received a Dictionary of values from the Prompt Flow. Setting variableNames based on key names.", v30, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v31 = sub_1C9BED458();
      uint64_t v32 = (void *)sub_1C9BED458();
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_1C97595B8(v32, (uint64_t)v3, v31);
      swift_bridgeObjectRelease();
      uint64_t v34 = v33;
      uint64_t v35 = v27;
      char v36 = 1;
    }
    sub_1C9AA3194((void *)v34, v35, v36);
  }
  else
  {
    swift_retain_n();
    os_log_type_t v16 = sub_1C9BECF78();
    os_log_type_t v17 = sub_1C9BEDC88();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v19 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v41 = v19;
      unint64_t v20 = sub_1C9AA3060(*(void *)(v2 + 256), *(void *)(v2 + 264), *(unsigned char *)(v2 + 272));
      sub_1C95FF228(v20, v21, &v41);
      OUTLINED_FUNCTION_29_35();
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C95F9000, v16, v17, "Child flow completion called in unexpected state: %s", v18, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v22 = *(void **)(v2 + 256);
    uint64_t v23 = *(void *)(v2 + 264);
    char v24 = *(unsigned char *)(v2 + 272);
    sub_1C9AA7228();
    uint64_t v25 = (void *)swift_allocError();
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(unsigned char *)(v26 + 16) = v24;
    sub_1C9AA6D28(v22, v23, v24);
    sub_1C9AA3194(v25, 0, 3);
  }
}

uint64_t sub_1C9AA55E8()
{
  OUTLINED_FUNCTION_24();
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v0;
  *(unsigned char *)(v1 + 160) = v3;
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 64) = v5;
  uint64_t v6 = sub_1C9BEAB08();
  *(void *)(v1 + 88) = v6;
  *(void *)(v1 + 96) = *(void *)(v6 - 8);
  *(void *)(v1 + 104) = swift_task_alloc();
  *(void *)(v1 + 112) = type metadata accessor for OutputGenerationManifest();
  *(void *)(v1 + 120) = swift_task_alloc();
  *(void *)(v1 + 128) = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA56E8()
{
  OUTLINED_FUNCTION_24();
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 80) + 136), *(void *)(*(void *)(v0 + 80) + 160));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9AA5790;
  uint64_t v2 = *(void *)(v0 + 72);
  char v3 = *(unsigned char *)(v0 + 160);
  return sub_1C976971C(v3, v2);
}

uint64_t sub_1C9AA5790()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *char v3 = v2;
  *char v3 = *v1;
  *(void *)(v2 + 144) = v4;
  *(void *)(v2 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C9AA5874()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0[10] + 16), *(void *)(v0[10] + 40));
  if (qword_1EBC78230 != -1) {
    swift_once();
  }
  uint64_t v1 = (uint64_t *)v0[15];
  uint64_t v2 = (int *)v0[14];
  uint64_t v3 = qword_1EBC78220;
  uint64_t v4 = *(void *)algn_1EBC78228;
  *((unsigned char *)v1 + v2[6]) = 0;
  *((unsigned char *)v1 + v2[7]) = 0;
  uint64_t v14 = v3;
  *((unsigned char *)v1 + v2[10]) = 0;
  type metadata accessor for NLContextUpdate();
  OUTLINED_FUNCTION_25_42();
  *(uint64_t *)((char *)v1 + v2[12]) = 0;
  uint64_t v5 = (uint64_t *)((char *)v1 + v2[13]);
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = (uint64_t *)((char *)v1 + v2[14]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *((unsigned char *)v1 + v2[15]) = 0;
  *(uint64_t *)((char *)v1 + v2[17]) = 0;
  uint64_t v7 = (char *)v1 + v2[18];
  *(void *)uint64_t v7 = 0;
  *((_WORD *)v7 + 4) = 512;
  *((unsigned char *)v1 + v2[19]) = 0;
  *((unsigned char *)v1 + v2[20]) = 0;
  *((unsigned char *)v1 + v2[21]) = 0;
  *((unsigned char *)v1 + v2[22]) = 0;
  *((unsigned char *)v1 + v2[23]) = 0;
  uint64_t v8 = (uint64_t *)((char *)v1 + v2[24]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(uint64_t *)((char *)v1 + v2[25]) = 0;
  *(uint64_t *)((char *)v1 + v2[26]) = MEMORY[0x1E4FBC860];
  uint64_t v9 = (char *)v1 + v2[27];
  uint64_t v10 = *MEMORY[0x1E4FA24B8];
  sub_1C9BEC958();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(char *, uint64_t))(v11 + 104))(v9, v10);
  uint64_t v12 = (uint64_t)v1 + v2[28];
  uint64_t v13 = sub_1C9BEC908();
  __swift_storeEnumTagSinglePayload(v12, 1, 1, v13);
  *uint64_t v1 = v14;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  sub_1C965C4EC();
}

uint64_t sub_1C9AA5BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void **)(v22 + 152);
  uint64_t v26 = sub_1C9BECF88();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
  id v27 = v25;
  id v28 = v25;
  os_log_type_t v29 = sub_1C9BECF78();
  os_log_type_t v30 = sub_1C9BEDC88();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *(void **)(v22 + 152);
  if (v31)
  {
    a10 = v22 + 48;
    OUTLINED_FUNCTION_67();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_177(4.8149e-34);
    uint64_t v33 = sub_1C9BEE6E8();
    uint64_t v35 = sub_1C95FF228(v33, v34, &a11);
    OUTLINED_FUNCTION_20_58(v35);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_239(&dword_1C95F9000, v36, v37, "Unable to generate Error response due to unexpected error: %s. Completing with unhandled error.");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  os_log_type_t v38 = *(void **)(v22 + 152);
  uint64_t v39 = *(void *)(v22 + 56);
  id v40 = v38;
  sub_1C9AA3194(v38, 0, 3);

  static ExecuteResponse.complete()(v39);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_10_1();
  return v42(v41, v42, v43, v44, v45, v46, v47, v48, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9AA5DD4(uint64_t a1, uint64_t a2)
{
  v3[48] = a2;
  v3[49] = v2;
  v3[47] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AA5DF0);
}

uint64_t sub_1C9AA5DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  a20 = v22;
  uint64_t v25 = (void *)(v22 + 112);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v26 = *(void **)(v22 + 384);
  uint64_t v27 = sub_1C9BECF88();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBC7A520);
  sub_1C9755088(v26, (void *)(v22 + 16));
  id v28 = sub_1C9BECF78();
  os_log_type_t v29 = sub_1C9BEDC78();
  if (os_log_type_enabled(v28, v29))
  {
    a10 = v22 + 112;
    os_log_type_t v30 = (uint8_t *)OUTLINED_FUNCTION_67();
    a11 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)os_log_type_t v30 = 136315138;
    uint64_t v31 = sub_1C974A54C();
    *(void *)(v22 + 368) = sub_1C95FF228(v31, v32, &a11);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C97550C0(v22 + 16);
    _os_log_impl(&dword_1C95F9000, v28, v29, "Handling next AuthoredFlowRunner action: %s", v30, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v25 = (void *)(v22 + 112);
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C97550C0(v22 + 16);
  }

  sub_1C9755088(*(void **)(v22 + 384), v25);
  switch(*(unsigned char *)(v22 + 200))
  {
    case 1:
      sub_1C9AA71B8((uint64_t)v25, v22 + 328);
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v22 + 400) = v33;
      *uint64_t v33 = v22;
      unint64_t v34 = sub_1C9AA6180;
      goto LABEL_10;
    case 2:
      sub_1C9AA71B8((uint64_t)v25, v22 + 208);
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v22 + 440) = v33;
      *uint64_t v33 = v22;
      unint64_t v34 = sub_1C9AA64C8;
      goto LABEL_10;
    case 3:
      uint64_t v38 = *(void *)(v22 + 376);
      uint64_t v39 = *(void **)(v22 + 112);
      uint64_t v40 = *(unsigned __int8 *)(v22 + 120);
      id v41 = v39;
      sub_1C9AA3194(v39, v40, 3);

      static ExecuteResponse.ongoing(requireInput:)(0, v38);
      goto LABEL_15;
    case 4:
      uint64_t v42 = *(void *)(v22 + 376);
      sub_1C9AA3194((void *)3, 0, 4);
      static ExecuteResponse.complete()(v42);
LABEL_15:
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_10_1();
      uint64_t result = v44(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14);
      break;
    default:
      *(void *)(v22 + 416) = *(void *)(v22 + 192);
      sub_1C9AA71B8((uint64_t)v25, v22 + 248);
      sub_1C95FD5D8((long long *)(v22 + 152), v22 + 288);
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v22 + 424) = v33;
      *uint64_t v33 = v22;
      unint64_t v34 = sub_1C9AA62F0;
LABEL_10:
      v33[1] = v34;
      OUTLINED_FUNCTION_10_1();
      uint64_t result = sub_1C9AA67AC(v35);
      break;
  }
  return result;
}

uint64_t sub_1C9AA6180()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 408) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA625C()
{
  uint64_t v1 = *(void *)(v0 + 376);
  sub_1C9AA3194((void *)1, 0, 4);
  sub_1C95FE76C(v0 + 328, &qword_1EA588550);
  static ExecuteResponse.ongoing(requireInput:)(1, v1);
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t sub_1C9AA62F0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 432) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9AA63D4()
{
  sub_1C9AA3194(*(void **)(v0 + 416), 0, 2);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 288), *(void *)(v0 + 312));
  sub_1C9BEC838();
}

uint64_t sub_1C9AA64C8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 448) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA65A4()
{
  uint64_t v1 = *(void *)(v0 + 376);
  sub_1C9AA3194((void *)2, 0, 4);
  sub_1C95FE76C(v0 + 208, &qword_1EA588550);
  static ExecuteResponse.complete()(v1);
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t sub_1C9AA6634()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FE76C(v0 + 328, &qword_1EA588550);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AA6698()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FE76C(v0 + 248, &qword_1EA588550);
  __swift_destroy_boxed_opaque_existential_1(v0 + 288);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AA6708()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FE76C(v0 + 208, &qword_1EA588550);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

void sub_1C9AA676C(uint64_t *a1)
{
  char v1 = *((unsigned char *)a1 + 8);
  uint64_t v2 = *a1;
  char v3 = v1;
  sub_1C9AA50A0((uint64_t)&v2);
}

uint64_t sub_1C9AA67AC(uint64_t a1)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = v1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AA67C4);
}

uint64_t sub_1C9AA67C4()
{
  OUTLINED_FUNCTION_26_0();
  sub_1C9AA7150(*(void *)(v0 + 96), v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_1C9BECF88();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
    uint64_t v2 = sub_1C9BECF78();
    os_log_type_t v3 = sub_1C9BEDC78();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1C95F9000, v2, v3, "Output was provided. Publishing...", v4, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    uint64_t v5 = *(void **)(v0 + 104);

    uint64_t v6 = v5 + 12;
    uint64_t v7 = v5[15];
    uint64_t v8 = v5[16];
    __swift_project_boxed_opaque_existential_1(v6, v7);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1C9AA69E0;
    return v12(v0 + 16, v7, v8);
  }
  else
  {
    sub_1C95FE76C(v0 + 56, &qword_1EA588550);
    OUTLINED_FUNCTION_90();
    return v11();
  }
}

uint64_t sub_1C9AA69E0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 120) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AA6ABC()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

unint64_t sub_1C9AA6B18()
{
  return sub_1C9AA3060(*(void *)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1C9AA6B24(void *a1, uint64_t a2, char a3)
{
  if (a3 < 0)
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    strcpy((char *)v7, ".unsupported(");
    HIWORD(v7[1]) = -4864;
    sub_1C9BED6B8();
    sub_1C9BED6B8();
  }
  else
  {
    sub_1C9AA6D28(a1, a2, a3);
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    v7[0] = 0xD000000000000011;
    v7[1] = 0x80000001C9C2A020;
    sub_1C9AA3060((uint64_t)a1, a2, a3);
    sub_1C9BED6B8();
    swift_bridgeObjectRelease();
    sub_1C9BED6B8();
    sub_1C9AA72AC(a1, a2, a3);
  }
  return v7[0];
}

uint64_t sub_1C9AA6C58()
{
  return sub_1C9AA6B24(*(void **)v0, *(void *)(v0 + 8), *(unsigned char *)(v0 + 16));
}

uint64_t sub_1C9AA6C64()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  sub_1C9AA6DF8(*(void **)(v0 + 256), *(void *)(v0 + 264), *(unsigned char *)(v0 + 272));
  return v0;
}

uint64_t sub_1C9AA6CB8()
{
  sub_1C9AA6C64();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriKitAuthoredFlow()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for SiriKitAuthoredFlow.State(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9AA72BC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9AA6D28);
}

id sub_1C9AA6D28(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      sub_1C9BEC838();
    case 1:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2:
LABEL_6:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for SiriKitAuthoredFlow.State(uint64_t a1)
{
}

void sub_1C9AA6DF8(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      swift_release();
      break;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t *assignWithCopy for SiriKitAuthoredFlow.State(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9AA7338(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9AA6D28, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9AA6DF8);
}

uint64_t *assignWithTake for SiriKitAuthoredFlow.State(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9AA73BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9AA6DF8);
}

uint64_t getEnumTagSinglePayload for SiriKitAuthoredFlow.State(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFC && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 4) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriKitAuthoredFlow.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C9AA6F80(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C9AA6F98(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriKitAuthoredFlow.State()
{
  return &type metadata for SiriKitAuthoredFlow.State;
}

uint64_t sub_1C9AA6FC0()
{
  return 0;
}

uint64_t sub_1C9AA6FDC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C96981BC;
  return sub_1C9AA32F8();
}

uint64_t sub_1C9AA7074()
{
  return sub_1C9AA3A7C();
}

uint64_t sub_1C9AA7098()
{
  OUTLINED_FUNCTION_24();
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  return sub_1C9AA3A80();
}

void sub_1C9AA712C(uint64_t a1@<X8>)
{
}

uint64_t sub_1C9AA7150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9AA71B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA588550);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C9AA7220(uint64_t *a1)
{
}

unint64_t sub_1C9AA7228()
{
  unint64_t result = qword_1EA5988A8;
  if (!qword_1EA5988A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5988A8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SiriKitAuthoredFlow.AuthoredFlowError(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9AA72BC(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9AA728C);
}

id sub_1C9AA728C(void *a1, uint64_t a2, char a3)
{
  if (a3 < 0) {
    return (id)swift_bridgeObjectRetain();
  }
  else {
    return sub_1C9AA6D28(a1, a2, a3);
  }
}

void destroy for SiriKitAuthoredFlow.AuthoredFlowError(uint64_t a1)
{
}

void sub_1C9AA72AC(void *a1, uint64_t a2, char a3)
{
  if (a3 < 0) {
    swift_bridgeObjectRelease();
  }
  else {
    sub_1C9AA6DF8(a1, a2, a3);
  }
}

uint64_t sub_1C9AA72BC(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for SiriKitAuthoredFlow.AuthoredFlowError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C9AA7338(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1C9AA728C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9AA72AC);
}

uint64_t *sub_1C9AA7338(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for SiriKitAuthoredFlow.AuthoredFlowError(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C9AA73BC(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C9AA72AC);
}

uint64_t *sub_1C9AA73BC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriKitAuthoredFlow.AuthoredFlowError(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1F && *(unsigned char *)(a1 + 17))
    {
      unsigned int v2 = *(_DWORD *)a1 + 30;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 16) >> 2) & 0x1E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x1F;
      if (v2 >= 0x1E) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for SiriKitAuthoredFlow.AuthoredFlowError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 31;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1C9AA74A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1C9AA74B4(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1C9AA74C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for SiriKitAuthoredFlow.AuthoredFlowError()
{
  return &type metadata for SiriKitAuthoredFlow.AuthoredFlowError;
}

uint64_t OUTLINED_FUNCTION_17_59()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_58(uint64_t a1)
{
  *(void *)(v1 + 48) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_25_42()
{
  return __swift_storeEnumTagSinglePayload(v1, 1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_27_38()
{
  return v0;
}

void *OUTLINED_FUNCTION_30_32()
{
  return __swift_project_boxed_opaque_existential_1((void *)(v0 + 216), *(void *)(v0 + 240));
}

uint64_t sub_1C9AA75A0()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t dispatch thunk of SiriKitCommandHandler.deviceState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SiriKitCommandHandler.aceServiceInvoker.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SiriKitCommandHandler.sharedContextService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SiriKitCommandHandler.eventSender.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SiriKitCommandHandler.flowContextPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t OUTLINED_FUNCTION_0_73()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_1_87()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_2_96()
{
  return v0 - 120;
}

uint64_t SiriKitConfirmationState.rawValue.getter()
{
  uint64_t result = 0x5445534E55;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x454C4C45434E4143;
      break;
    case 2:
      uint64_t result = 0x454D5249464E4F43;
      break;
    case 3:
      uint64_t result = 0x44455443454A4552;
      break;
    default:
      return result;
  }
  return result;
}

SiriKitFlow::SiriKitConfirmationState_optional __swiftcall SiriKitConfirmationState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C9BEE428();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

unint64_t sub_1C9AA77AC()
{
  unint64_t result = qword_1EA5988B0;
  if (!qword_1EA5988B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5988B0);
  }
  return result;
}

uint64_t sub_1C9AA77F8()
{
  return sub_1C96A6B74();
}

uint64_t sub_1C9AA7800()
{
  return sub_1C98A4EA8();
}

uint64_t sub_1C9AA7808()
{
  return sub_1C96A6C94();
}

SiriKitFlow::SiriKitConfirmationState_optional sub_1C9AA7810(Swift::String *a1)
{
  return SiriKitConfirmationState.init(rawValue:)(*a1);
}

uint64_t sub_1C9AA781C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SiriKitConfirmationState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C9AA7844(unsigned __int8 *a1, char *a2)
{
  return sub_1C990CA90(*a1, *a2);
}

unsigned char *storeEnumTagSinglePayload for SiriKitConfirmationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AA791CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

double SiriKitDisambiguationItem.__allocating_init(components:utterance:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_88();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(unsigned char *)(v8 + 48) = a4;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = 0;
  return OUTLINED_FUNCTION_7_70(v8);
}

uint64_t SiriKitDisambiguationItemComponent.print.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitDisambiguationItemComponent.printOnLockScreen.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitDisambiguationItemComponent.speak.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitDisambiguationItemComponent.speakOnLockScreen.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitDisambiguationItemComponent.allowedOnLockScreen.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t SiriKitDisambiguationItemComponent.printBlue.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t sub_1C9AA7A54(char a1)
{
  uint64_t v2 = 16;
  if (a1) {
    uint64_t v2 = 32;
  }
  uint64_t v3 = *(void *)(v1 + v2);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C9AA7AA4(char a1)
{
  uint64_t v2 = 48;
  if (a1) {
    uint64_t v2 = 64;
  }
  uint64_t v3 = *(void *)(v1 + v2);
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C9AA7AF4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SiriKitDisambiguationItemComponent.Builder();
  uint64_t v4 = swift_allocObject();
  sub_1C9AA7B80(a1, a2);
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_1C9AA7B50(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return OUTLINED_FUNCTION_0_74();
}

uint64_t sub_1C9AA7B5C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return OUTLINED_FUNCTION_0_74();
}

uint64_t sub_1C9AA7B68(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return OUTLINED_FUNCTION_0_74();
}

uint64_t sub_1C9AA7B74(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return OUTLINED_FUNCTION_0_74();
}

uint64_t sub_1C9AA7B80(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  *(_WORD *)(v2 + 80) = 1;
  swift_bridgeObjectRetain_n();
  return v2;
}

void sub_1C9AA7BBC(uint64_t a1, uint64_t a2)
{
}

void sub_1C9AA7BD4(uint64_t a1, uint64_t a2)
{
}

void sub_1C9AA7BEC(uint64_t a1, uint64_t a2)
{
}

void sub_1C9AA7C04(uint64_t a1, uint64_t a2)
{
}

void sub_1C9AA7C1C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_bridgeObjectRetain();
  a3(a1, a2);

  sub_1C9BEC838();
}

void sub_1C9AA7C78(char a1)
{
  *(unsigned char *)(v1 + 80) = a1;
  OUTLINED_FUNCTION_5_82();
}

void sub_1C9AA7C80(char a1)
{
  *(unsigned char *)(v1 + 81) = a1;
  OUTLINED_FUNCTION_5_82();
}

void sub_1C9AA7C88()
{
  *(unsigned char *)(v0 + 80) = 1;
  sub_1C9BEC838();
}

void sub_1C9AA7C98()
{
  *(unsigned char *)(v0 + 80) = 0;
  sub_1C9BEC838();
}

uint64_t sub_1C9AA7CA4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  char v9 = *(unsigned char *)(v0 + 80);
  char v12 = *(unsigned char *)(v0 + 81);
  type metadata accessor for SiriKitDisambiguationItemComponent();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  *(void *)(v10 + 24) = v1;
  *(void *)(v10 + 32) = v4;
  *(void *)(v10 + 40) = v3;
  *(void *)(v10 + 48) = v6;
  *(void *)(v10 + 56) = v5;
  *(void *)(v10 + 64) = v8;
  *(void *)(v10 + 72) = v7;
  *(unsigned char *)(v10 + 80) = v9;
  *(unsigned char *)(v10 + 81) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t SiriKitDisambiguationItemComponent.Builder.__deallocating_deinit()
{
  SiriKitDisambiguationItemComponent.Builder.deinit();

  return swift_deallocClassInstance();
}

uint64_t _s11SiriKitFlow0aB27DisambiguationItemComponentC7BuilderCfd_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

int64x2_t sub_1C9AA7DCC()
{
  int64x2_t result = vdupq_n_s64(0x4047800000000000uLL);
  xmmword_1EA5C28F0 = (__int128)result;
  return result;
}

int64x2_t sub_1C9AA7DE4()
{
  int64x2_t result = vdupq_n_s64(0x4041000000000000uLL);
  xmmword_1EA5C2900 = (__int128)result;
  return result;
}

BOOL static ImageSize.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImageSize.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t ImageSize.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t SiriKitDisambiguationItem.components.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriKitDisambiguationItem.utterance.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

void *SiriKitDisambiguationItem.directInvocation.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t SiriKitDisambiguationItem.allowLineWrapForDisplayText.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

void *SiriKitDisambiguationItem.displayImage.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

uint64_t SiriKitDisambiguationItem.monogramLetters.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitDisambiguationItem.contactIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void SiriKitDisambiguationItem.__allocating_init(components:directInvocation:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = OUTLINED_FUNCTION_1_88();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = 0;
  *(unsigned char *)(v6 + 48) = a3;
  OUTLINED_FUNCTION_7_70(v6);
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = a2;
}

uint64_t SiriKitDisambiguationItem.init(components:directInvocation:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(void *)(v3 + 32) = 0xE000000000000000;
  *(void *)(v3 + 40) = a2;
  return OUTLINED_FUNCTION_3_90();
}

uint64_t SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 48) = a4;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = 0;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  return OUTLINED_FUNCTION_3_90();
}

uint64_t type metadata accessor for SiriKitDisambiguationItemComponent.Builder()
{
  return self;
}

uint64_t type metadata accessor for SiriKitDisambiguationItemComponent()
{
  return self;
}

uint64_t SiriKitDisambiguationItem.__allocating_init(components:displayImage:utterance:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result = OUTLINED_FUNCTION_1_88();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a3;
  *(unsigned char *)(result + 48) = a5;
  *(void *)(result + 32) = a4;
  *(void *)(result + 40) = 0;
  *(void *)(result + 56) = a2;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  return result;
}

uint64_t SiriKitDisambiguationItem.init(components:displayImage:utterance:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a3;
  *(unsigned char *)(v5 + 48) = a5;
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = 0;
  *(void *)(v5 + 56) = a2;
  *(void *)(v5 + 64) = 0;
  *(void *)(v5 + 72) = 0;
  *(void *)(v5 + 80) = 0;
  return OUTLINED_FUNCTION_3_90();
}

uint64_t SiriKitDisambiguationItem.__allocating_init(components:image:directInvocation:allowLineWrapForDisplayText:)(uint64_t a1, long long *a2, uint64_t a3, char a4)
{
  uint64_t v8 = OUTLINED_FUNCTION_1_88();
  SiriKitDisambiguationItem.init(components:image:directInvocation:allowLineWrapForDisplayText:)(a1, a2, a3, a4);
  return v8;
}

uint64_t SiriKitDisambiguationItem.init(components:image:directInvocation:allowLineWrapForDisplayText:)(uint64_t a1, long long *a2, uint64_t a3, char a4)
{
  long long v5 = *a2;
  uint64_t v6 = *((unsigned __int8 *)a2 + 16);
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = 0;
  *(unsigned char *)(v4 + 48) = a4;
  *(void *)(v4 + 32) = 0xE000000000000000;
  *(void *)(v4 + 40) = a3;
  switch(v6)
  {
    case 1:
      *(void *)(v4 + 80) = v5;
      *(void *)(v4 + 64) = 0;
      *(void *)(v4 + 72) = 0;
      *(void *)(v4 + 56) = 0;
      break;
    case 2:
      *(void *)(v4 + 80) = 0;
      *(void *)(v4 + 56) = 0;
      *(_OWORD *)(v4 + 64) = v5;
      break;
    case 3:
      *(_OWORD *)(v4 + 72) = 0u;
      *(_OWORD *)(v4 + 56) = 0u;
      break;
    default:
      *(void *)(v4 + 56) = v5;
      *(void *)(v4 + 72) = 0;
      *(void *)(v4 + 80) = 0;
      *(void *)(v4 + 64) = 0;
      break;
  }
  return OUTLINED_FUNCTION_3_90();
}

uint64_t SiriKitDisambiguationItem.__allocating_init(components:image:directInvocation:utterance:allowLineWrapForDisplayText:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = OUTLINED_FUNCTION_1_88();
  SiriKitDisambiguationItem.init(components:image:directInvocation:utterance:allowLineWrapForDisplayText:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t SiriKitDisambiguationItem.init(components:image:directInvocation:utterance:allowLineWrapForDisplayText:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  long long v7 = *a2;
  uint64_t v8 = *((unsigned __int8 *)a2 + 16);
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 48) = a6;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 40) = a3;
  switch(v8)
  {
    case 1:
      *(void *)(v6 + 80) = v7;
      *(void *)(v6 + 64) = 0;
      *(void *)(v6 + 72) = 0;
      *(void *)(v6 + 56) = 0;
      break;
    case 2:
      *(void *)(v6 + 80) = 0;
      *(void *)(v6 + 56) = 0;
      *(_OWORD *)(v6 + 64) = v7;
      break;
    case 3:
      *(_OWORD *)(v6 + 72) = 0u;
      *(_OWORD *)(v6 + 56) = 0u;
      break;
    default:
      *(void *)(v6 + 56) = v7;
      *(void *)(v6 + 72) = 0;
      *(void *)(v6 + 80) = 0;
      *(void *)(v6 + 64) = 0;
      break;
  }
  return OUTLINED_FUNCTION_3_90();
}

uint64_t SiriKitDisambiguationItem.__allocating_init(components:image:utterance:allowLineWrapForDisplayText:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = OUTLINED_FUNCTION_1_88();
  SiriKitDisambiguationItem.init(components:image:utterance:allowLineWrapForDisplayText:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t SiriKitDisambiguationItem.init(components:image:utterance:allowLineWrapForDisplayText:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, char a5)
{
  long long v6 = *a2;
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a3;
  *(unsigned char *)(v5 + 48) = a5;
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = 0;
  switch(v7)
  {
    case 1:
      *(void *)(v5 + 80) = v6;
      *(void *)(v5 + 64) = 0;
      *(void *)(v5 + 72) = 0;
      *(void *)(v5 + 56) = 0;
      break;
    case 2:
      *(void *)(v5 + 80) = 0;
      *(void *)(v5 + 56) = 0;
      *(_OWORD *)(v5 + 64) = v6;
      break;
    case 3:
      *(_OWORD *)(v5 + 72) = 0u;
      *(_OWORD *)(v5 + 56) = 0u;
      break;
    default:
      *(void *)(v5 + 56) = v6;
      *(void *)(v5 + 72) = 0;
      *(void *)(v5 + 80) = 0;
      *(void *)(v5 + 64) = 0;
      break;
  }
  return OUTLINED_FUNCTION_3_90();
}

double SiriKitDisambiguationItem.__allocating_init(components:optionalDisplayImage:utterance:allowLineWrapForDisplayText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  type metadata accessor for SiriKitDisambiguationItem();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(unsigned char *)(v10 + 48) = a5;
  *(void *)(v10 + 40) = 0;
  if (a2)
  {
    *(void *)(v10 + 56) = a2;
    *(void *)(v10 + 64) = 0;
    *(void *)(v10 + 72) = 0;
    *(void *)(v10 + 80) = 0;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(v10 + 56) = 0u;
    *(_OWORD *)(v10 + 72) = 0u;
  }
  return result;
}

uint64_t type metadata accessor for SiriKitDisambiguationItem()
{
  return self;
}

uint64_t sub_1C9AA83F0(unint64_t a1, char a2)
{
  unint64_t v2 = a1;
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    return v2;
  }
  if (a1 >> 62)
  {
    OUTLINED_FUNCTION_8_60();
    uint64_t v3 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C9BEE288();
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      MEMORY[0x1CB78B3A0](v5++, v2);
      sub_1C9AA89C0();
      swift_release();
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
    }
    while (v3 != v5);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C9AA8520()
{
  OUTLINED_FUNCTION_6_78();
  if (v1)
  {
    OUTLINED_FUNCTION_8_60();
    uint64_t v2 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 1) {
    return 0;
  }
  sub_1C9705CC8(0, (v0 & 0xC000000000000001) == 0, v0);
  if ((v0 & 0xC000000000000001) == 0) {
    sub_1C9BEC838();
  }
  return MEMORY[0x1CB78B3A0](0, v0);
}

uint64_t sub_1C9AA85A8()
{
  OUTLINED_FUNCTION_6_78();
  if (v1)
  {
    OUTLINED_FUNCTION_8_60();
    uint64_t v2 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 2) {
    return 0;
  }
  sub_1C9705CC8(1, (v0 & 0xC000000000000001) == 0, v0);
  if ((v0 & 0xC000000000000001) == 0) {
    sub_1C9BEC838();
  }
  return MEMORY[0x1CB78B3A0](1, v0);
}

uint64_t sub_1C9AA8630()
{
  OUTLINED_FUNCTION_6_78();
  if (v1)
  {
    OUTLINED_FUNCTION_8_60();
    uint64_t v2 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 3) {
    return 0;
  }
  sub_1C9705CC8(2, (v0 & 0xC000000000000001) == 0, v0);
  if ((v0 & 0xC000000000000001) == 0) {
    sub_1C9BEC838();
  }
  return MEMORY[0x1CB78B3A0](2, v0);
}

uint64_t sub_1C9AA86B8(char a1)
{
  OUTLINED_FUNCTION_6_78();
  if (v3) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v4; uint64_t v4 = sub_1C9BEE3C8())
  {
    uint64_t v5 = 4;
    while (1)
    {
      if ((v1 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      uint64_t v6 = MEMORY[0x1CB78B3A0](v5 - 4, v1);
      uint64_t v7 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      if ((a1 & 1) != 0 && (*(unsigned char *)(v6 + 80) & 1) == 0)
      {
        swift_release();
      }
      else
      {
        OUTLINED_FUNCTION_9_71();
        if (v8) {
          sub_1C9BED6B8();
        }
        sub_1C9AA7A54(a1 & 1);
        sub_1C9BED6B8();
        swift_release();
        swift_bridgeObjectRelease();
      }
      ++v5;
      if (v7 == v4) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    OUTLINED_FUNCTION_8_73();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  return 0;
}

void sub_1C9AA8810()
{
  OUTLINED_FUNCTION_6_78();
  if (!v0)
  {
    swift_bridgeObjectRetain_n();
    sub_1C9BEC838();
  }
  OUTLINED_FUNCTION_8_73();
  sub_1C9BEC838();
}

uint64_t sub_1C9AA89C0()
{
  uint64_t v1 = v0;
  unint64_t v2 = v0[2];
  *(void *)&long long v18 = MEMORY[0x1E4FBC860];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C9BEE3C8();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    if ((v2 & 0xC000000000000001) == 0) {
      sub_1C9BEC838();
    }
    if (*(unsigned char *)(MEMORY[0x1CB78B3A0](i, v2) + 80) == 1)
    {
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = v18;
LABEL_14:
  uint64_t v7 = v1[9];
  if (v7)
  {
    *(void *)&long long v18 = v1[8];
    *((void *)&v18 + 1) = v7;
    char v19 = 2;
    uint64_t v8 = v1[3];
    uint64_t v11 = v1 + 4;
    uint64_t v9 = v1[4];
    uint64_t v10 = (void *)v11[1];
    type metadata accessor for SiriKitDisambiguationItem();
    uint64_t v12 = swift_allocObject();
    SiriKitDisambiguationItem.init(components:image:directInvocation:utterance:allowLineWrapForDisplayText:)(v6, &v18, (uint64_t)v10, v8, v9, 0);
  }
  else
  {
    uint64_t v13 = v1[3];
    unint64_t v15 = v1 + 4;
    uint64_t v14 = v1[4];
    uint64_t v10 = (void *)v15[1];
    type metadata accessor for SiriKitDisambiguationItem();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v13;
    *(unsigned char *)(v12 + 48) = 0;
    OUTLINED_FUNCTION_7_70(v12);
    *(void *)(v16 + 32) = v14;
    *(void *)(v16 + 40) = v10;
  }
  id v17 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v12;
}

uint64_t sub_1C9AA8BA0()
{
  return 0x5C1B237374747B40;
}

uint64_t SiriKitDisambiguationItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SiriKitDisambiguationItem.__deallocating_deinit()
{
  SiriKitDisambiguationItem.deinit();

  return swift_deallocClassInstance();
}

unint64_t sub_1C9AA8CD0()
{
  unint64_t result = qword_1EA5988B8;
  if (!qword_1EA5988B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5988B8);
  }
  return result;
}

uint64_t method lookup function for SiriKitDisambiguationItemComponent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitDisambiguationItemComponent);
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.toDisplayString(deviceLocked:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.toSpokenString(deviceLocked:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of static SiriKitDisambiguationItemComponent.makeBuilder(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t method lookup function for SiriKitDisambiguationItemComponent.Builder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitDisambiguationItemComponent.Builder);
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrint(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintOnLockScreen(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeak(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withSpeakOnLockScreen(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withAllowedOnLockScreen(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.withPrintBlue(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.showOnLockScreen()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.hideOnLockScreen()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItemComponent.Builder.build()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

id sub_1C9AA8F38(id result, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return (id)swift_bridgeObjectRetain();
  }
  if (!a3) {
    return result;
  }
  return result;
}

void destroy for Image(uint64_t a1)
{
}

void sub_1C9AA8F70(void *a1, uint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a3)
  {
  }
}

uint64_t _s11SiriKitFlow5ImageOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C9AA8F38(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Image(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C9AA8F38(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C9AA8F70(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Image(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C9AA8F70(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for Image()
{
  return &type metadata for Image;
}

unsigned char *storeEnumTagSinglePayload for ImageSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AA9160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageSize()
{
  return &type metadata for ImageSize;
}

uint64_t method lookup function for SiriKitDisambiguationItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitDisambiguationItem);
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.__allocating_init(components:directInvocation:allowLineWrapForDisplayText:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.__allocating_init(components:utterance:allowLineWrapForDisplayText:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.__allocating_init(components:displayImage:utterance:allowLineWrapForDisplayText:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.__allocating_init(components:image:directInvocation:allowLineWrapForDisplayText:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.__allocating_init(components:image:directInvocation:utterance:allowLineWrapForDisplayText:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.__allocating_init(components:image:utterance:allowLineWrapForDisplayText:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of static SiriKitDisambiguationItem.allowedItems(disambiguationItems:deviceLockedForDisambiguation:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.getFirstComponent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.getSecondComponent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.getThirdComponent()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.toDisplayString(deviceLocked:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SiriKitDisambiguationItem.toSpokenString(deviceLocked:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t OUTLINED_FUNCTION_0_74()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_88()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_90()
{
  return v0;
}

void OUTLINED_FUNCTION_5_82()
{
}

double OUTLINED_FUNCTION_7_70(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_8_73()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_1C9AA937C(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  LOBYTE(v4) = a4;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_1C9BEE3C8())
  {
    uint64_t v8 = 4;
    char v17 = v4 & 1;
    while (1)
    {
      uint64_t v4 = v8 - 4;
      if ((a1 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      MEMORY[0x1CB78B3A0](v8 - 4, a1);
      uint64_t v9 = v8 - 3;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (!sub_1C9AA8520()) {
        goto LABEL_19;
      }
      uint64_t v10 = sub_1C9AA7AA4(v17);
      uint64_t v12 = v11;
      swift_release();
      if (v10 == a2 && v12 == a3)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v14 = sub_1C9BEE618();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_19;
        }
      }
      if (!sub_1C9AA85A8())
      {
LABEL_19:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v15 = 0;
        goto LABEL_23;
      }
      swift_release();
      swift_release();
      ++v8;
      if (v9 == v7) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v15 = 1;
LABEL_23:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t SiriKitDisambiguationList.__allocating_init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  *(unsigned char *)(result + 32) = a3;
  *(unsigned char *)(result + 33) = a4;
  return result;
}

uint64_t sub_1C9AA959C(uint64_t isUniquelyReferenced_nonNull_native, unint64_t a2, char a3, void *a4)
{
  LOBYTE(v5) = a3;
  int64_t v6 = a2;
  if (a2 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C9BEE3C8();
    if (v8) {
      goto LABEL_3;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    return isUniquelyReferenced_nonNull_native;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_36;
  }
LABEL_3:
  unint64_t v58 = v6 & 0xC000000000000001;
  uint64_t v9 = 4;
  char v57 = v5 & 1;
  uint64_t v55 = v8;
  unsigned int v56 = a4;
  uint64_t v54 = (void *)v6;
  while (1)
  {
    uint64_t v5 = v9 - 4;
    if (!v58) {
      sub_1C9BEC838();
    }
    MEMORY[0x1CB78B3A0](v9 - 4, v6);
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v10 = sub_1C9AA86B8(v57);
    uint64_t v12 = v10;
    uint64_t v5 = v11;
    int64_t v6 = *a4;
    uint64_t v59 = v9 - 3;
    uint64_t v60 = v9;
    if (!*(void *)(*a4 + 16)) {
      break;
    }
    unint64_t v13 = sub_1C9604E34(v10, v11);
    if ((v14 & 1) == 0) {
      break;
    }
    uint64_t v15 = *(void *)(*(void *)(v6 + 56) + 8 * v13);
    BOOL v16 = __CFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_41;
    }
    uint64_t v53 = v17;
    uint64_t v18 = isUniquelyReferenced_nonNull_native;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = (void *)*a4;
    int64_t v6 = (int64_t)v61;
    *a4 = 0x8000000000000000;
    uint64_t v19 = v12;
    unint64_t v20 = sub_1C9604E34(v12, v5);
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = (v21 & 1) == 0;
    a4 = (void *)(v22 + v23);
    if (__OFADD__(v22, v23)) {
      goto LABEL_42;
    }
    unint64_t v24 = v20;
    char v25 = v21;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5988C8);
    int64_t v6 = (int64_t)&v61;
    a4 = v56;
    if (sub_1C9BEE358())
    {
      int64_t v6 = (int64_t)v61;
      unint64_t v26 = sub_1C9604E34(v12, v5);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_46;
      }
      unint64_t v24 = v26;
    }
    id v28 = v61;
    if (v25)
    {
      *(void *)(v61[7] + 8 * v24) = v53;
    }
    else
    {
      v61[(v24 >> 6) + 8] |= 1 << v24;
      uint64_t v45 = (uint64_t *)(v28[6] + 16 * v24);
      *uint64_t v45 = v12;
      v45[1] = v5;
      *(void *)(v28[7] + 8 * v24) = v53;
      uint64_t v46 = v28[2];
      BOOL v42 = __OFADD__(v46, 1);
      uint64_t v47 = v46 + 1;
      if (v42) {
        goto LABEL_43;
      }
      v28[2] = v47;
      swift_bridgeObjectRetain();
    }
    *unsigned int v56 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v18;
LABEL_29:
    uint64_t v48 = *a4;
    if (*(void *)(*a4 + 16))
    {
      unint64_t v49 = sub_1C9604E34(v19, v5);
      uint64_t v50 = v60;
      if (v51) {
        int64_t v6 = *(void *)(*(void *)(v48 + 56) + 8 * v49);
      }
      else {
        int64_t v6 = 0;
      }
    }
    else
    {
      int64_t v6 = 0;
      uint64_t v50 = v60;
    }
    swift_release();
    swift_bridgeObjectRelease();
    BOOL v16 = __CFADD__(v44, v6);
    isUniquelyReferenced_nonNull_native = v44 + v6;
    if (v16) {
      goto LABEL_38;
    }
    uint64_t v9 = v50 + 1;
    int64_t v6 = (int64_t)v54;
    if (v59 == v55) {
      goto LABEL_36;
    }
  }
  uint64_t v29 = v12;
  uint64_t v30 = isUniquelyReferenced_nonNull_native;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = (void *)*a4;
  int64_t v6 = (int64_t)v61;
  *a4 = 0x8000000000000000;
  uint64_t v19 = v29;
  unint64_t v31 = sub_1C9604E34(v29, v5);
  uint64_t v33 = *(void *)(v6 + 16);
  BOOL v34 = (v32 & 1) == 0;
  a4 = (void *)(v33 + v34);
  if (__OFADD__(v33, v34)) {
    goto LABEL_39;
  }
  unint64_t v35 = v31;
  char v36 = v32;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5988C8);
  int64_t v6 = (int64_t)&v61;
  a4 = v56;
  if ((sub_1C9BEE358() & 1) == 0)
  {
LABEL_21:
    uint64_t v39 = v61;
    if (v36)
    {
      *(void *)(v61[7] + 8 * v35) = 0;
    }
    else
    {
      v61[(v35 >> 6) + 8] |= 1 << v35;
      uint64_t v40 = (uint64_t *)(v39[6] + 16 * v35);
      *uint64_t v40 = v29;
      v40[1] = v5;
      *(void *)(v39[7] + 8 * v35) = 0;
      uint64_t v41 = v39[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_40;
      }
      v39[2] = v43;
      swift_bridgeObjectRetain();
    }
    *unsigned int v56 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v30;
    goto LABEL_29;
  }
  int64_t v6 = (int64_t)v61;
  unint64_t v37 = sub_1C9604E34(v29, v5);
  if ((v36 & 1) == (v38 & 1))
  {
    unint64_t v35 = v37;
    goto LABEL_21;
  }
LABEL_46:
  uint64_t result = sub_1C9BEE698();
  __break(1u);
  return result;
}

uint64_t sub_1C9AA99C0(uint64_t a1)
{
  uint64_t v2 = sub_1C966B8B0(a1);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v11 = v2;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    sub_1C9BEE288();
    uint64_t v5 = a1 + 32;
    do
    {
      sub_1C9BEE348();
      type metadata accessor for SiriKitDisambiguationItemComponent.Builder();
      swift_initStackObject();
      sub_1C9AA7B80(0, 0xE000000000000000);
      uint64_t v6 = sub_1C9AA7CA4();
      swift_release();
      swift_initStackObject();
      sub_1C9AA7B80(0xD000000000000035, 0x80000001C9C2A320);
      uint64_t v7 = sub_1C9AA7CA4();
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1C9BF5990;
      *(void *)(v8 + 32) = v6;
      *(void *)(v8 + 40) = v7;
      uint64_t v12 = v8;
      sub_1C9BED8A8();
      type metadata accessor for SiriKitDisambiguationItem();
      swift_allocObject();
      SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)(v12, 0, 0xE000000000000000, 0);
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
      v5 += 32;
      --v4;
    }
    while (v4);
    uint64_t v9 = v13;
    swift_bridgeObjectRelease();
    uint64_t v3 = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for SiriKitDisambiguationList();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v9;
  *(_WORD *)(result + 32) = 1;
  return result;
}

void SiriKitDisambiguationItemPair.formattedItem.getter()
{
}

uint64_t SiriKitDisambiguationItemPair.rawItem.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FF454(v1 + 8, a1);
}

_OWORD *SiriKitDisambiguationItemPair.init(rawItem:formattedItem:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_1C963C190(a1, (_OWORD *)(a3 + 8));
  *(void *)a3 = a2;
  return result;
}

uint64_t sub_1C9AA9C28()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  uint64_t v3 = MEMORY[0x1F4188790](v1 - 8, v2);
  uint64_t v35 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3, v5);
  BOOL v34 = (char *)&v34 - v6;
  uint64_t v7 = *(void *)(v0 + 16);
  unint64_t v8 = *(void *)(v7 + 16);
  uint64_t v36 = v7 + 32;
  uint64_t v37 = v7;
  swift_bridgeObjectRetain();
  unint64_t v9 = 0;
  uint64_t v10 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v9 == v8)
    {
      uint64_t v43 = 0;
      unint64_t v9 = v8;
      long long v41 = 0u;
      long long v42 = 0u;
    }
    else
    {
      if (v9 >= *(void *)(v37 + 16)) {
        goto LABEL_24;
      }
      sub_1C95FF454(v36 + 32 * v9, (uint64_t)v40 + 8);
      *(void *)&long long v41 = v9;
      sub_1C963C190((_OWORD *)((char *)v40 + 8), (long long *)((char *)&v41 + 8));
      ++v9;
    }
    sub_1C9AAB7DC((uint64_t)&v41, (uint64_t)&v44);
    if (!v46) {
      break;
    }
    uint64_t v11 = v44;
    sub_1C963C190(&v45, v40);
    unint64_t v12 = *(void *)(v0 + 24);
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C9BEE3C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11 >= v13) {
      goto LABEL_25;
    }
    sub_1C95FF454((uint64_t)v40, (uint64_t)&v41 + 8);
    if ((v12 & 0xC000000000000001) == 0)
    {
      if (v11 < 0)
      {
        __break(1u);
      }
      else if ((unint64_t)v11 < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        sub_1C9BEC838();
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_1C9BECF88();
      uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EBC7A520);
      uint64_t v24 = *(void *)(v22 - 8);
      uint64_t v25 = (uint64_t)v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v34, v23, v22);
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v22);
      uint64_t v26 = v25;
      uint64_t v27 = v35;
      sub_1C96C26E8(v26, v35);
      if (__swift_getEnumTagSinglePayload(v27, 1, v22) == 1)
      {
        sub_1C95FE7C0(v35, &qword_1EBC7A230);
      }
      else
      {
        id v28 = sub_1C9BECF78();
        os_log_type_t v29 = sub_1C9BEDC88();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          *(void *)&long long v41 = v31;
          *(_DWORD *)uint64_t v30 = 136315650;
          uint64_t v32 = sub_1C9BEE1B8();
          *(void *)&long long v38 = sub_1C95FF228(v32, v33, (uint64_t *)&v41);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();
          *(_WORD *)(v30 + 12) = 2048;
          *(void *)&long long v38 = 42;
          sub_1C9BEDF68();
          *(_WORD *)(v30 + 22) = 2080;
          *(void *)&long long v38 = sub_1C95FF228(0xD00000000000004DLL, 0x80000001C9C2A260, (uint64_t *)&v41);
          sub_1C9BEDF68();
          _os_log_impl(&dword_1C95F9000, v28, v29, "FatalError at %s:%lu - %s", (uint8_t *)v30, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1CB78C440](v31, -1, -1);
          MEMORY[0x1CB78C440](v30, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v35, v22);
      }
      if (qword_1EBC78750 != -1) {
        swift_once();
      }
      long long v38 = 0u;
      long long v39 = 0u;
      uint64_t v43 = 0;
      long long v41 = 0u;
      long long v42 = 0u;
      sub_1C9BEC838();
    }
    *(void *)&long long v41 = MEMORY[0x1CB78B3A0](v11, v12);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C9654C64();
      uint64_t v10 = v19;
    }
    unint64_t v15 = *(void *)(v10 + 16);
    unint64_t v14 = *(void *)(v10 + 24);
    if (v15 >= v14 >> 1)
    {
      OUTLINED_FUNCTION_1_89(v14);
      sub_1C9654C64();
      uint64_t v10 = v20;
    }
    *(void *)(v10 + 16) = v15 + 1;
    uint64_t v16 = v10 + 40 * v15;
    long long v17 = v41;
    long long v18 = v42;
    *(void *)(v16 + 64) = v43;
    *(_OWORD *)(v16 + 32) = v17;
    *(_OWORD *)(v16 + 48) = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t SiriKitDisambiguationList.rawItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriKitDisambiguationList.disambiguationItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriKitDisambiguationList.shouldReadItemsInVox.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t SiriKitDisambiguationList.requestUnlockForEmptyOrDuplicateItems.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SiriKitDisambiguationList.init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  *(unsigned char *)(v4 + 32) = a3;
  *(unsigned char *)(v4 + 33) = a4;
  return v4;
}

uint64_t SiriKitDisambiguationList.__allocating_init<A>(rawItems:itemConverter:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6)
{
  uint64_t v12 = sub_1C9BEE338();
  v19[7] = a1;
  long long v19[2] = a6;
  v19[3] = a2;
  v19[4] = a3;
  uint64_t v13 = sub_1C9BED9A8();
  uint64_t v14 = type metadata accessor for SiriKitDisambiguationItem();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v17 = sub_1C97F2990((void (*)(uint64_t, uint64_t))sub_1C9AAA3E0, (uint64_t)v19, v13, v14, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
  swift_bridgeObjectRelease();
  type metadata accessor for SiriKitDisambiguationList();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v12;
  *(void *)(result + 24) = v17;
  *(unsigned char *)(result + 32) = a4;
  *(unsigned char *)(result + 33) = a5;
  return result;
}

uint64_t sub_1C9AAA3E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 24))();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for SiriKitDisambiguationList()
{
  return self;
}

void sub_1C9AAA444(char a1)
{
  unint64_t v2 = sub_1C9AAA760(*(void *)(v1 + 24), a1);
  unint64_t v3 = v2;
  if (v2 >> 62) {
    uint64_t v4 = sub_1C9BEE3C8();
  }
  else {
    uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C9BEF570;
    sub_1C9705CC8(0, (v3 & 0xC000000000000001) == 0, v3);
    if ((v3 & 0xC000000000000001) == 0) {
      sub_1C9BEC838();
    }
    MEMORY[0x1CB78B3A0](0, v3);
    swift_bridgeObjectRelease();
    sub_1C9AA8810();
  }
  type metadata accessor for SiriKitDisambiguationList();
  unint64_t v5 = sub_1C9AAAB78(v3, a1 & 1);
  swift_bridgeObjectRelease();
  if (v5 >> 62)
  {
    OUTLINED_FUNCTION_2_97();
    uint64_t v6 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6) {
    goto LABEL_15;
  }
LABEL_8:
  sub_1C963C340();
  if ((v6 & 0x8000000000000000) == 0)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      MEMORY[0x1CB78B3A0](0, v5);
      sub_1C9AA8810();
    }
    sub_1C9BEC838();
  }
  __break(1u);
}

BOOL sub_1C9AAA68C(char a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void *)(v1 + 24);
  type metadata accessor for SiriKitDisambiguationItem();
  unint64_t v5 = sub_1C9AA83F0(v4, a1);
  type metadata accessor for SiriKitDisambiguationList();
  unint64_t v6 = sub_1C9AAB048(v5, 1);
  unint64_t v7 = sub_1C9AAB048(v4, 0);
  if ((a1 & 1) == 0) {
    goto LABEL_8;
  }
  if (v7 < v6)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (*(unsigned char *)(v2 + 33) == 1)
  {
    char v9 = sub_1C9AAB0CC(v5);
    swift_bridgeObjectRelease();
    if (v9) {
      return 1;
    }
    return sub_1C9AAB268(v4, 1);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1C9AAA760(unint64_t a1, char a2)
{
  LOBYTE(v2) = a2;
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_42:
    OUTLINED_FUNCTION_8_60();
    uint64_t v4 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4 <= 1) {
    goto LABEL_37;
  }
  unint64_t v5 = v3 & 0xC000000000000001;
  sub_1C9705CC8(0, (v3 & 0xC000000000000001) == 0, v3);
  if ((v3 & 0xC000000000000001) == 0) {
    sub_1C9BEC838();
  }
  MEMORY[0x1CB78B3A0](0, v3);
  uint64_t v6 = sub_1C9AA8520();
  swift_release();
  if (v6)
  {
    uint64_t v7 = sub_1C9AA7AA4(v2 & 1);
    uint64_t v9 = v8;
    swift_release();
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  char v10 = sub_1C9AA937C(v3, v7, v9, v2 & 1);
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    return v3;
  }
  uint64_t v35 = MEMORY[0x1E4FBC860];
  sub_1C9BEE288();
  uint64_t v2 = 0;
  unint64_t v34 = v3;
  while (1)
  {
    uint64_t v11 = (void *)MEMORY[0x1CB78B3A0](v2, v3);
    unint64_t v12 = v11[2];
    if (v12 >> 62) {
      break;
    }
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
LABEL_13:
    if ((v12 & 0xC000000000000001) != 0 && v13 != 1)
    {
      type metadata accessor for SiriKitDisambiguationItemComponent();
      uint64_t v15 = 1;
      do
      {
        uint64_t v16 = v15 + 1;
        sub_1C9BEE1C8();
        uint64_t v15 = v16;
      }
      while (v13 != v16);
    }
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1C9BEE3D8();
      uint64_t v18 = v21;
      uint64_t v20 = v22;
      unint64_t v19 = v23;
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v17 = v12 & 0xFFFFFFFFFFFFFF8;
      uint64_t v18 = (v12 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v19 = (2 * v13) | 1;
      swift_bridgeObjectRetain();
      uint64_t v20 = 1;
      if ((v19 & 1) == 0) {
        goto LABEL_23;
      }
    }
    unint64_t v3 = v4;
    unint64_t v26 = v5;
    sub_1C9BEE648();
    swift_unknownObjectRetain_n();
    uint64_t v27 = swift_dynamicCastClass();
    if (!v27)
    {
      swift_unknownObjectRelease();
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    uint64_t v28 = *(void *)(v27 + 16);
    swift_release();
    if (__OFSUB__(v19 >> 1, v20)) {
      goto LABEL_41;
    }
    if (v28 == (v19 >> 1) - v20)
    {
      uint64_t v25 = swift_dynamicCastClass();
      unint64_t v5 = v26;
      uint64_t v4 = v3;
      unint64_t v3 = v34;
      if (!v25)
      {
        swift_unknownObjectRelease();
        uint64_t v25 = MEMORY[0x1E4FBC860];
      }
      goto LABEL_30;
    }
    swift_unknownObjectRelease();
    unint64_t v5 = v26;
    uint64_t v4 = v3;
    unint64_t v3 = v34;
LABEL_23:
    sub_1C97568D0(v17, v18, v20, v19);
    uint64_t v25 = v24;
LABEL_30:
    swift_unknownObjectRelease();
    ++v2;
    uint64_t v29 = v11[3];
    uint64_t v30 = v11[4];
    type metadata accessor for SiriKitDisambiguationItem();
    swift_allocObject();
    SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)(v25, v29, v30, 0);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1C9BEE258();
    sub_1C9BEE298();
    sub_1C9BEE2A8();
    sub_1C9BEE268();
    if (v2 == v4) {
      return v35;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C9BEE3C8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C9BEE3C8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v32 < 1) {
      goto LABEL_45;
    }
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v33 < v13) {
      goto LABEL_40;
    }
    goto LABEL_13;
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C9AAAB78(unint64_t a1, char a2)
{
  LOBYTE(v2) = a2;
  uint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_78;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      if (v4 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v6 = 0;
      uint64_t v7 = MEMORY[0x1E4FBC860];
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v49 = v4;
      do
      {
        if ((v3 & 0xC000000000000001) == 0) {
          sub_1C9BEC838();
        }
        MEMORY[0x1CB78B3A0](v6, v3);
        if (sub_1C9AA8520())
        {
          uint64_t v9 = sub_1C9AA7AA4(v2 & 1);
          uint64_t v11 = v10;
          swift_release();
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C965519C();
            uint64_t v8 = v15;
          }
          unint64_t v13 = v8[2];
          unint64_t v12 = v8[3];
          if (v13 >= v12 >> 1)
          {
            OUTLINED_FUNCTION_1_89(v12);
            sub_1C965519C();
            uint64_t v8 = v16;
          }
          v8[2] = v13 + 1;
          uint64_t v14 = &v8[2 * v13];
          v14[4] = v9;
          v14[5] = v11;
          uint64_t v4 = v49;
        }
        else
        {
          swift_release();
        }
        ++v6;
      }
      while (v4 != v6);
      swift_bridgeObjectRelease();
      uint64_t v51 = v7;
      swift_bridgeObjectRetain();
      uint64_t v17 = 0;
      uint64_t v45 = v3;
      char v47 = v2;
      while (1)
      {
        uint64_t v18 = MEMORY[0x1CB78B3A0](v17, v3);
        uint64_t v19 = sub_1C9AA8520();
        if (v19) {
          break;
        }
        swift_release();
LABEL_58:
        if (++v17 == v4)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = v51;
          goto LABEL_80;
        }
      }
      uint64_t v20 = v19;
      uint64_t v21 = sub_1C9AA7AA4(v2 & 1);
      uint64_t v23 = v22;
      uint64_t v24 = v8[2];
      if (!v24) {
        break;
      }
      uint64_t v2 = v21;
      BOOL v25 = v8[4] == v21 && v8[5] == v22;
      if (v25 || (OUTLINED_FUNCTION_0_75() & 1) != 0)
      {
        uint64_t v26 = 0;
        BOOL v48 = 0;
      }
      else if (v24 == 1)
      {
        uint64_t v26 = 0;
        BOOL v48 = 1;
      }
      else
      {
        BOOL v38 = v8[6] == v2 && v8[7] == v23;
        if (v38 || (OUTLINED_FUNCTION_0_75() & 1) != 0)
        {
          BOOL v48 = 0;
          uint64_t v26 = 1;
        }
        else
        {
          long long v39 = v8 + 9;
          uint64_t v40 = 2;
          uint64_t v41 = 1;
          while (1)
          {
            BOOL v48 = v24 == v40;
            if (v24 == v40)
            {
              uint64_t v26 = 0;
              goto LABEL_25;
            }
            ++v41;
            if (*(v39 - 1) == v2 && *v39 == v23) {
              break;
            }
            char v43 = OUTLINED_FUNCTION_0_75();
            uint64_t v26 = v40++;
            v39 += 2;
            if (v43) {
              goto LABEL_25;
            }
          }
          uint64_t v26 = v41;
        }
      }
LABEL_25:
      uint64_t v27 = v24 - 1;
      uint64_t v28 = &v8[2 * v24 + 2];
      BOOL v29 = *v28 == v2 && v28[1] == v23;
      uint64_t v46 = v26;
      if (v29 || (OUTLINED_FUNCTION_0_75() & 1) != 0)
      {
LABEL_30:
        char v30 = 0;
        goto LABEL_31;
      }
      if (v24 == 1)
      {
LABEL_51:
        char v30 = 1;
LABEL_31:
        swift_bridgeObjectRelease();
        uint64_t v3 = v45;
        if (v48)
        {
          uint64_t v4 = v49;
          if ((v30 & 1) == 0)
          {
LABEL_53:
            uint64_t v34 = swift_release();
LABEL_54:
            LOBYTE(v2) = v47;
LABEL_55:
            MEMORY[0x1CB78AA10](v34);
            unint64_t v37 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v37 >> 1)
            {
              OUTLINED_FUNCTION_1_89(v37);
              sub_1C9BED8D8();
            }
            sub_1C9BED948();
            sub_1C9BED8A8();
            goto LABEL_58;
          }
        }
        else
        {
          if (v30)
          {
            uint64_t v34 = swift_release();
            LOBYTE(v2) = v47;
            uint64_t v4 = v49;
            goto LABEL_55;
          }
          BOOL v25 = v46 == v27;
          uint64_t v4 = v49;
          if (!v25) {
            goto LABEL_53;
          }
        }
LABEL_36:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1C9BF02F0;
        *(void *)(v31 + 32) = v20;
        uint64_t v50 = v31;
        sub_1C9BED8A8();
        uint64_t v32 = *(void *)(v18 + 24);
        uint64_t v33 = *(void *)(v18 + 32);
        type metadata accessor for SiriKitDisambiguationItem();
        swift_allocObject();
        SiriKitDisambiguationItem.init(components:utterance:allowLineWrapForDisplayText:)(v50, v32, v33, 0);
        swift_bridgeObjectRetain();
        uint64_t v34 = swift_release();
        goto LABEL_54;
      }
      uint64_t v3 = v24 - 2;
      uint64_t v35 = &v8[2 * v24 + 1];
      while (v3 < v24)
      {
        if (*(v35 - 1) == v2 && *v35 == v23)
        {
          char v30 = 0;
          uint64_t v27 = v3;
          goto LABEL_31;
        }
        --v27;
        if (OUTLINED_FUNCTION_0_75()) {
          goto LABEL_30;
        }
        --v3;
        v35 -= 2;
        if (v3 == -1)
        {
          uint64_t v27 = 0;
          goto LABEL_51;
        }
      }
      __break(1u);
LABEL_78:
      OUTLINED_FUNCTION_2_97();
      uint64_t result = sub_1C9BEE3C8();
      uint64_t v4 = result;
      if (!result) {
        goto LABEL_79;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_79:
  swift_bridgeObjectRelease();
  uint64_t v44 = MEMORY[0x1E4FBC860];
LABEL_80:
  swift_bridgeObjectRelease();
  return v44;
}

uint64_t sub_1C9AAB048(unint64_t a1, char a2)
{
  uint64_t v6 = sub_1C9BED458();
  uint64_t v4 = sub_1C9AA959C(0, a1, a2, &v6);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C9AAB0CC(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_19:
    OUTLINED_FUNCTION_8_60();
    uint64_t v2 = sub_1C9BEE3C8();
    if (!v2) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_17;
    }
  }
  sub_1C9705CC8(0, (a1 & 0xC000000000000001) == 0, a1);
  if ((a1 & 0xC000000000000001) == 0) {
    sub_1C9BEC838();
  }
  unint64_t v3 = *(void *)(MEMORY[0x1CB78B3A0](0, a1) + 16);
  if (v3 >> 62)
  {
    OUTLINED_FUNCTION_3_91();
    uint64_t v4 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_release();
  if (v4)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v2 - 1;
    do
    {
      uint64_t v2 = v6 != v5;
      if (v6 == v5) {
        break;
      }
      uint64_t v7 = MEMORY[0x1CB78B3A0](v5 + 1, a1);
      if (__OFADD__(v5 + 1, 1))
      {
        __break(1u);
        __break(1u);
        goto LABEL_19;
      }
      unint64_t v8 = *(void *)(v7 + 16);
      if (v8 >> 62)
      {
        OUTLINED_FUNCTION_3_91();
        uint64_t v9 = sub_1C9BEE3C8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_release();
      ++v5;
    }
    while (v9);
  }
  else
  {
    uint64_t v2 = 1;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v2;
}

BOOL sub_1C9AAB268(unint64_t a1, char a2)
{
  LOBYTE(v2) = a2;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_38;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  unint64_t v26 = v4;
  char v25 = v2;
  unint64_t v4 = 0;
  while (1)
  {
    if ((a1 & 0xC000000000000001) == 0) {
      sub_1C9BEC838();
    }
    uint64_t v6 = MEMORY[0x1CB78B3A0](v4, a1);
    BOOL v7 = __OFADD__(v4++, 1);
    if (v7) {
      goto LABEL_37;
    }
    unint64_t v8 = *(void *)(v6 + 16);
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v9 = sub_1C9BEE3C8();
      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v9) {
        goto LABEL_21;
      }
    }
    unint64_t v2 = v8 & 0xC000000000000001;
    if ((v8 & 0xC000000000000001) != 0) {
      break;
    }
    if ((*(unsigned char *)(*(void *)(v8 + 32) + 80) & 1) == 0) {
      goto LABEL_26;
    }
LABEL_12:
    if (v9 != 1)
    {
      uint64_t v10 = 1;
      do
      {
        if (v2)
        {
          uint64_t v11 = MEMORY[0x1CB78B3A0](v10, v8);
          BOOL v7 = __OFADD__(v10++, 1);
          if (v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v5 = sub_1C9BEE3C8();
            if (!v5) {
              goto LABEL_39;
            }
            goto LABEL_3;
          }
          int v12 = *(unsigned __int8 *)(v11 + 80);
          swift_unknownObjectRelease();
          if (v12 != 1) {
            goto LABEL_26;
          }
        }
        else
        {
          if (__OFADD__(v10, 1)) {
            goto LABEL_36;
          }
          char v13 = *(unsigned char *)(*(void *)(v8 + 32 + 8 * v10++) + 80);
          if ((v13 & 1) == 0) {
            goto LABEL_26;
          }
        }
      }
      while (v10 != v9);
    }
LABEL_21:
    swift_bridgeObjectRelease_n();
    swift_release();
    if (v4 == v5) {
      goto LABEL_39;
    }
  }
  int v14 = *(unsigned __int8 *)(MEMORY[0x1CB78B3A0](0, v8) + 80);
  swift_unknownObjectRelease();
  if (v14 == 1) {
    goto LABEL_12;
  }
LABEL_26:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_release();
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 < 2) {
    return 0;
  }
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C963C340();
  uint64_t v16 = 0;
  do
  {
    MEMORY[0x1CB78B3A0](v16, a1);
    uint64_t v17 = sub_1C9AA86B8(v25 & 1);
    uint64_t v19 = v18;
    swift_release();
    unint64_t v21 = *(void *)(v27 + 16);
    unint64_t v20 = *(void *)(v27 + 24);
    if (v21 >= v20 >> 1)
    {
      OUTLINED_FUNCTION_1_89(v20);
      sub_1C963C340();
    }
    ++v16;
    *(void *)(v27 + 16) = v21 + 1;
    uint64_t v22 = v27 + 16 * v21;
    *(void *)(v22 + 32) = v17;
    *(void *)(v22 + 40) = v19;
  }
  while (v15 != v16);
  uint64_t v23 = *(void *)(sub_1C98A5224(v27) + 16);
  swift_bridgeObjectRelease();
  return v23 < v15;
}

uint64_t SiriKitDisambiguationList.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SiriKitDisambiguationList.__deallocating_deinit()
{
  SiriKitDisambiguationList.deinit();

  return swift_deallocClassInstance();
}

uint64_t destroy for SiriKitDisambiguationItemPair(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_release();

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

void initializeWithCopy for SiriKitDisambiguationItemPair(void *a1, void *a2)
{
  *a1 = *a2;
  a1[4] = a2[4];
  sub_1C9BEC838();
}

void assignWithCopy for SiriKitDisambiguationItemPair(void *a1, void *a2)
{
  *a1 = *a2;
  sub_1C9BEC838();
}

uint64_t assignWithTake for SiriKitDisambiguationItemPair(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for SiriKitDisambiguationItemPair()
{
  return &type metadata for SiriKitDisambiguationItemPair;
}

uint64_t method lookup function for SiriKitDisambiguationList(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitDisambiguationList);
}

uint64_t dispatch thunk of SiriKitDisambiguationList.__allocating_init(rawItems:disambiguationItems:shouldReadItemsInVox:requestUnlockForEmptyOrDuplicateItems:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SiriKitDisambiguationList.makeSpeakableListItems(deviceIsLocked:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SiriKitDisambiguationList.shouldRequestUnlockForDisambiguation(deviceLockedForDisambiguation:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1C9AAB7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5988C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_75()
{
  return sub_1C9BEE618();
}

BOOL OUTLINED_FUNCTION_1_89@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_2_97()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_91()
{
  return swift_bridgeObjectRetain();
}

_OWORD *SiriKitDisambiguationListAdapter.__allocating_init(disambiguationList:deviceState:authenticationPolicy:)(uint64_t a1, long long *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  sub_1C95FD5D8(a2, v4 + 24);
  return OUTLINED_FUNCTION_0_76();
}

uint64_t SiriKitDisambiguationListAdapter.__allocating_init(disambiguationList:deviceState:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:)(a1, a2);
  return v4;
}

uint64_t SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  sub_1C95FD5F0(a2, v2 + 24);
  __swift_destroy_boxed_opaque_existential_1(a2);
  *(void *)(v2 + 64) = 0;
  *(unsigned char *)(v2 + 72) = 0;
  *(void *)(v2 + 96) = &type metadata for FeatureFlagDefinitions.Core;
  *(void *)(v2 + 104) = &off_1F23DF470;
  return v2;
}

_OWORD *SiriKitDisambiguationListAdapter.init(disambiguationList:deviceState:authenticationPolicy:)(uint64_t a1, long long *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_1C95FD5D8(a2, v2 + 24);
  return OUTLINED_FUNCTION_0_76();
}

uint64_t sub_1C9AAB9E4()
{
  return sub_1C9AA9C28();
}

BOOL sub_1C9AABA08()
{
  char v0 = sub_1C9AABA3C();
  return sub_1C9AAA68C(v0 & 1);
}

uint64_t sub_1C9AABA3C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  __swift_project_boxed_opaque_existential_1(v0 + 3, v1);
  if ((*(uint64_t (**)(void *, uint64_t, uint64_t))(v2 + 248))(v0 + 8, v1, v2))
  {
    char v3 = 0;
  }
  else
  {
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    __swift_project_boxed_opaque_existential_1(v0 + 3, v5);
    char v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4) ^ 1;
  }
  return v3 & 1;
}

uint64_t SiriKitDisambiguationListAdapter.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  sub_1C9743100(v0 + 64);
  return v0;
}

uint64_t SiriKitDisambiguationListAdapter.__deallocating_deinit()
{
  SiriKitDisambiguationListAdapter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9AABB4C()
{
  return sub_1C9AAB9E4();
}

BOOL sub_1C9AABB70()
{
  return sub_1C9AABA08();
}

uint64_t type metadata accessor for SiriKitDisambiguationListAdapter()
{
  return self;
}

uint64_t method lookup function for SiriKitDisambiguationListAdapter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitDisambiguationListAdapter);
}

uint64_t dispatch thunk of SiriKitDisambiguationListAdapter.__allocating_init(disambiguationList:deviceState:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of SiriKitDisambiguationListAdapter.__allocating_init(disambiguationList:deviceState:authenticationPolicy:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of SiriKitDisambiguationListAdapter.items.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SiriKitDisambiguationListAdapter.shouldRequestUnlockForDisambiguation()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

_OWORD *OUTLINED_FUNCTION_0_76()
{
  long long v2 = v0[1];
  v1[4] = *v0;
  v1[5] = v2;
  v1[6] = v0[2];
  return v1;
}

uint64_t sub_1C9AABC5C(unint64_t a1, char a2, int a3, void *a4)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v7) {
      break;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C9BEE288();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = 0;
    a2 &= 1u;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      uint64_t v12 = MEMORY[0x1CB78B3A0](v9, a1);
      sub_1C9AADA58(&v12, a2, a3, a4, &v13);
      swift_release();
      if (v4) {
        return swift_release();
      }
      ++v9;
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
      if (v7 == v9) {
        return v14;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1C9AABDE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    unint64_t v14 = MEMORY[0x1E4FBC860];
    sub_1C9BEE288();
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      id v7 = objc_allocWithZone(MEMORY[0x1E4F96A78]);
      swift_bridgeObjectRetain();
      id v8 = objc_msgSend(v7, sel_init);
      uint64_t v9 = sub_1C9BED568();
      sub_1C975E17C(v9, v10, v8);
      sub_1C975E188(v5, v6, v8);
      swift_bridgeObjectRelease();
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
      v4 += 2;
      --v1;
    }
    while (v1);
    unint64_t v2 = v14;
  }
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F969F0]), sel_init);
  swift_bridgeObjectRetain();
  if (v2 >> 62)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA58B418);
    uint64_t v12 = sub_1C9BEE3A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C9BEE638();
    uint64_t v12 = v2;
  }
  swift_bridgeObjectRelease();
  sub_1C975DD08(v12, v11);
  return v11;
}

void sub_1C9AABF74()
{
}

id static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)(unint64_t a1, char a2, unsigned __int8 *a3)
{
  int v5 = *a3;
  type metadata accessor for SiriKitDisambiguationItem();
  unint64_t v6 = sub_1C9AA83F0(a1, a2);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  unint64_t v7 = sub_1C9AABC5C(v6, a2, v5, &v16);
  uint64_t v8 = v7;
  if (!(v7 >> 62))
  {
    uint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v9 = sub_1C9BEE3C8();
  if (!v9) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  sub_1C9705CC8(v9 - 1, (v8 & 0xC000000000000001) == 0, v8);
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_11:
    id v11 = (id)MEMORY[0x1CB78B3A0](v10, v8);
    goto LABEL_6;
  }
  id v11 = *(id *)(v8 + 8 * v10 + 32);
LABEL_6:
  uint64_t v12 = v11;
  objc_msgSend(v11, sel_setSeparatorStyle_, 1);
  swift_bridgeObjectRelease();

LABEL_9:
  uint64_t v13 = v16;
  sub_1C96044C4(0, &qword_1EA58AE70);
  id v14 = static SACardSnippet.makeFromCardSections(cardSections:shouldGenerateAceId:sashBundleId:referencedCommands:)(v8, 1, 0, 0, MEMORY[0x1E4FBC860]);
  swift_bridgeObjectRelease();
  sub_1C9AADF00(v13, v14, qword_1EA588DF0, (SEL *)&selRef_setReferencedCommands_);
  return v14;
}

id static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPad(disambiguationItems:deviceIsLocked:)(unint64_t a1, char a2)
{
  unsigned __int8 v3 = 1;
  return static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)(a1, a2, &v3);
}

id static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPad(disambiguationItems:deviceIsLocked:imageSize:)(unint64_t a1, char a2, unsigned __int8 *a3)
{
  unsigned __int8 v4 = *a3;
  return static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetPhone(disambiguationItems:deviceIsLocked:imageSize:)(a1, a2, &v4);
}

void static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForWatch(disambiguationItems:textToSpeechIsEnabled:)()
{
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v0, v1);
  OUTLINED_FUNCTION_6_0();
  sub_1C9BEC448();
}

id sub_1C9AAC9E8(void *a1)
{
  uint64_t v1 = (void *)a1[5];
  if (v1)
  {
    uint64_t v2 = qword_1EBC760D8;
    id v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    sub_1C960E058((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    sub_1C9BEC838();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  uint64_t v6 = a1[4];
  *(void *)(inited + 32) = a1[3];
  *(void *)(inited + 40) = v6;
  swift_bridgeObjectRetain();
  id v7 = sub_1C9AABDE0(inited);
  swift_setDeallocating();
  sub_1C95FE4C4();
  return v7;
}

void sub_1C9AACAEC()
{
}

uint64_t static SiriKitDisambiguationSnippetFactory.makeDisambiguationSnippetForAppleTV(disambiguationItems:)(unint64_t a1)
{
  unint64_t v2 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = v8 - v7;
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    if (!v10)
    {
LABEL_12:
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96B20]), sel_init);
      sub_1C965FD40(0xD000000000000010, 0x80000001C9C2A3C0, v13, (SEL *)&selRef_setGroupTitle_);
      sub_1C965FD40(0x746974207473694CLL, 0xEA0000000000656CLL, v13, (SEL *)&selRef_setTitle_);
      sub_1C972C35C(v11, v13);
      id v14 = v13;
      sub_1C9BEAAF8();
      uint64_t v15 = sub_1C9BEAAB8();
      uint64_t v17 = v16;
      (*(void (**)(uint64_t, unint64_t))(v4 + 8))(v9, v2);
      sub_1C97BA8E8(v15, v17, v14);

      return (uint64_t)v14;
    }
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C9BEE288();
    if (v10 < 0) {
      break;
    }
    unint64_t v19 = v2;
    uint64_t v12 = 0;
    unint64_t v2 = a1 & 0xC000000000000001;
    while (v10 != v12)
    {
      if (!v2) {
        sub_1C9BEC838();
      }
      unint64_t v20 = (void *)MEMORY[0x1CB78B3A0](v12, a1);
      sub_1C9AAD288(&v20, &v21);
      swift_release();
      ++v12;
      sub_1C9BEE258();
      sub_1C9BEE298();
      sub_1C9BEE2A8();
      sub_1C9BEE268();
      if (v10 == v12)
      {
        uint64_t v11 = v22;
        unint64_t v2 = v19;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1C9AAD288(void **a1@<X0>, void *a2@<X8>)
{
  unsigned int v73 = a2;
  uint64_t v72 = sub_1C9BEAB08();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72, v4);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C9BECF88();
  uint64_t v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v74 = v9;
  uint64_t v10 = sub_1C9BECF78();
  os_log_type_t v11 = sub_1C9BEDC78();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v71 = v6;
  if (v12)
  {
    id v13 = (_DWORD *)swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *id v13 = 136315138;
    uint64_t v76 = v7;
    type metadata accessor for SiriKitDisambiguationItem();
    sub_1C9BEC838();
  }

  swift_release_n();
  id v14 = &off_1E65A0000;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96B28]), sel_init);
  uint64_t v16 = sub_1C9AA86B8(0);
  sub_1C965FD40(v16, v17, v15, (SEL *)&selRef_setTitle_);
  uint64_t v18 = (void *)v7[7];
  if (v18)
  {
    id v68 = v15;
    id v19 = v18;
    unint64_t v20 = sub_1C9BECF78();
    os_log_type_t v21 = sub_1C9BEDC78();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1C95F9000, v20, v21, "Item has an image...configuring for AppleTV", v22, 2u);
      MEMORY[0x1CB78C440](v22, -1, -1);
    }

    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9A068]), sel_init);
    uint64_t v24 = sub_1C975E008(v19);
    id v69 = v19;
    if (v25)
    {
      unint64_t v26 = v25;
      uint64_t v27 = v24;
      swift_bridgeObjectRetain_n();
      uint64_t v28 = sub_1C9BECF78();
      os_log_type_t v29 = sub_1C9BEDC78();
      if (os_log_type_enabled(v28, v29))
      {
        char v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        uint64_t v66 = (uint64_t)v7;
        uint64_t v32 = v31;
        v75[0] = v31;
        id v67 = v23;
        *(_DWORD *)char v30 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v76 = (void *)sub_1C95FF228(v27, v26, v75);
        id v14 = &off_1E65A0000;
        id v23 = v67;
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C95F9000, v28, v29, "Configuring image resource: %s", v30, 0xCu);
        swift_arrayDestroy();
        uint64_t v33 = v32;
        uint64_t v7 = (void *)v66;
        MEMORY[0x1CB78C440](v33, -1, -1);
        uint64_t v34 = v30;
        id v19 = v69;
        MEMORY[0x1CB78C440](v34, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1C965FD40(v27, v26, v23, (SEL *)&selRef_setFormatURL_);
    }
    objc_msgSend(v19, sel__imageSize);
    if (v35 > 0.0)
    {
      objc_msgSend(v19, sel__imageSize);
      if (v36 > 0.0)
      {
        id v67 = v23;
        id v37 = v19;
        BOOL v38 = sub_1C9BECF78();
        os_log_type_t v39 = sub_1C9BEDC78();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v66 = swift_slowAlloc();
          uint64_t v76 = (void *)v66;
          uint64_t v74 = v2;
          *(_DWORD *)uint64_t v40 = 136315138;
          objc_msgSend(v37, sel__imageSize, v40 + 4);
          v75[0] = v41;
          v75[1] = v42;
          type metadata accessor for INImageSize(0);
          uint64_t v43 = sub_1C9BED608();
          v75[0] = sub_1C95FF228(v43, v44, (uint64_t *)&v76);
          sub_1C9BEDF68();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C95F9000, v38, v39, "Configuring image based on provided size: %s", v40, 0xCu);
          uint64_t v45 = v66;
          swift_arrayDestroy();
          MEMORY[0x1CB78C440](v45, -1, -1);
          MEMORY[0x1CB78C440](v40, -1, -1);
        }
        else
        {
        }
        objc_msgSend(v37, sel__imageSize);
        id v46 = v67;
        objc_msgSend(v67, sel_setPixelWidth_);
        char v47 = v37;
        id v23 = v46;
        objc_msgSend(v47, sel__imageSize);
        objc_msgSend(v46, sel_setPixelHeight_, v48);
      }
    }
    id v49 = [objc_allocWithZone(MEMORY[0x1E4F96B30]) (SEL)v14[228]];
    uint64_t v50 = v23;
    id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F9A5B0]), sel_initWithFacade_, v23);
    if (v51)
    {
      uint64_t v52 = sub_1C963F5A0(v51);
      uint64_t v54 = v71;
      if (v53 >> 60 == 15)
      {
        uint64_t v55 = 0;
      }
      else
      {
        uint64_t v57 = v52;
        unint64_t v58 = v53;
        uint64_t v55 = (void *)sub_1C9BEA9B8();
        sub_1C963F610(v57, v58);
      }
      uint64_t v56 = v70;
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v56 = v70;
      uint64_t v54 = v71;
    }
    objc_msgSend(v49, sel_setDynamicURLImageResourceData_, v55);

    id v59 = v49;
    sub_1C9BEAAF8();
    uint64_t v60 = sub_1C9BEAAB8();
    uint64_t v62 = v61;
    (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v72);
    sub_1C97BA8E8(v60, v62, v59);

    id v15 = v68;
    objc_msgSend(v68, sel_setObject_, v59);
  }
  id v63 = sub_1C9AAC9E8(v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1C9BF02F0;
  *(void *)(v64 + 32) = v63;
  v75[0] = v64;
  sub_1C9BED8A8();
  sub_1C9793B7C(v75[0], v15);
  *unsigned int v73 = v15;
}

uint64_t sub_1C9AADA58@<X0>(uint64_t *a1@<X0>, char a2@<W1>, int a3@<W2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v45 = a4;
  int v46 = a3;
  char v47 = a5;
  uint64_t v7 = sub_1C9BEAB08();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v42 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (sub_1C9AA8520())
  {
    uint64_t v11 = sub_1C9AA7A54(a2 & 1);
    uint64_t v13 = v12;
    swift_release();
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0xE000000000000000;
  }
  uint64_t v14 = sub_1C9AA8520();
  if (v14)
  {
    char v15 = *(unsigned char *)(v14 + 81);
    swift_release();
  }
  else
  {
    char v15 = 0;
  }
  if (sub_1C9AA85A8())
  {
    uint64_t v16 = sub_1C9AA7A54(a2 & 1);
    uint64_t v18 = v17;
    swift_release();
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v18 = 0;
  }
  if (sub_1C9AA8630())
  {
    uint64_t v19 = sub_1C9AA7A54(a2 & 1);
    uint64_t v21 = v20;
    swift_release();
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v21 = 0;
  }
  long long v22 = *(_OWORD *)(v10 + 64);
  uint64_t v23 = *(void *)(v10 + 80);
  if (*(unsigned char *)(v10 + 48)) {
    uint64_t v24 = 2;
  }
  else {
    uint64_t v24 = 1;
  }
  LOBYTE(v48[0]) = v46;
  id v25 = static CasinoFactory.makeRowCardSection(possibleTitle:imageSize:possibleLeadingSubtitle:possibleTrailingSubtitle:possibleImage:possibleMonogramLetters:possibleContactIdentifiers:possibleImageUri:maxLines:shouldCropToCircle:withBlueTitle:)(v11, v13, (unsigned __int8 *)v48, v16, v18, v19, v21, *(void **)(v10 + 56), v22, *((uint64_t *)&v22 + 1), v23, 0, 0, v24, 1, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v27 = *(void **)(v10 + 40);
  if (v27)
  {
    uint64_t v28 = qword_1EBC760D8;
    id v29 = v27;
    if (v28 != -1) {
      swift_once();
    }
    sub_1C960E058((uint64_t)v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    sub_1C9BEC838();
  }
  uint64_t v31 = *(void *)(v10 + 24);
  unint64_t v30 = *(void *)(v10 + 32);
  uint64_t v32 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v32 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (v32)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v30;
    swift_bridgeObjectRetain();
    id v34 = sub_1C9AABDE0(inited);
    swift_setDeallocating();
    sub_1C95FE4C4();
    swift_unknownObjectRetain();
    double v35 = v42;
    sub_1C9BEAAF8();
    sub_1C9BEAAB8();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v44);
    double v36 = (void *)sub_1C9BED538();
    swift_bridgeObjectRelease();
    objc_msgSend(v34, sel_setAceId_, v36);
    swift_unknownObjectRelease();

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C9BF02F0;
    BOOL v38 = (void *)swift_unknownObjectRetain();
    *(void *)(v37 + 32) = static CasinoFactory.makeReferentialAbstractCommand(originalCommand:)(v38);
    v48[0] = v37;
    sub_1C9BED8A8();
    sub_1C9AADE7C(v48[0], v25);
    uint64_t v39 = swift_unknownObjectRetain();
    uint64_t v40 = v45;
    MEMORY[0x1CB78AA10](v39);
    sub_1C96B0244(*(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_1C9BED948();
    sub_1C9BED8A8();
    uint64_t result = swift_unknownObjectRelease_n();
  }
  *char v47 = v25;
  return result;
}

void sub_1C9AADE54(uint64_t a1, void *a2)
{
}

void sub_1C9AADE68(uint64_t a1, void *a2)
{
}

void sub_1C9AADE7C(uint64_t a1, void *a2)
{
  sub_1C96044C4(0, &qword_1EA5988E8);
  id v3 = (id)sub_1C9BED868();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setCommands_, v3);
}

void sub_1C9AADF00(uint64_t a1, void *a2, uint64_t *a3, SEL *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  id v6 = (id)sub_1C9BED868();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, *a4, v6);
}

void sub_1C9AADF7C()
{
}

void sub_1C9AAE1A8()
{
}

uint64_t sub_1C9AAE268()
{
  type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v1, v2);
  OUTLINED_FUNCTION_11_72(v3, v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 13)
  {
    uint64_t v5 = v0[2];
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 14)
  {
    return *v0;
  }
  else
  {
    sub_1C96003E8((uint64_t)v0);
    return 0;
  }
  return v5;
}

uint64_t SiriKitEventOverrides.interactionId.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitEventOverrides.resultCandidateId.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitEventOverrides.taskId.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitEvent.machAbsoluteTime.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC11SiriKitFlow12SiriKitEvent_machAbsoluteTime);
}

void SiriKitEvent.withPayload(_:)()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_4_0();
  uint64_t v4 = sub_1C9BEAA98();
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SiriKitEventPayload(0);
  uint64_t v12 = OUTLINED_FUNCTION_22(v11);
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_20_0();
  sub_1C95FF79C(v3, v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v10, (uint64_t)v0 + OBJC_IVAR____TtC11SiriKitFlow12SiriKitEvent_timestamp, v4);
  uint64_t v14 = v0[2];
  uint64_t v15 = v0[3];
  uint64_t v16 = v0[4];
  uint64_t v17 = v0[5];
  uint64_t v19 = v0[6];
  uint64_t v18 = v0[7];
  *(void *)&long long v20 = v14;
  *((void *)&v20 + 1) = v15;
  uint64_t v21 = v16;
  uint64_t v22 = v17;
  uint64_t v23 = v19;
  uint64_t v24 = v18;
  swift_allocObject();
  sub_1C960114C(v14, v15);
  sub_1C96007A4(v1, (uint64_t)v10, &v20);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9AAE540()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9AAE580()
{
  return OUTLINED_FUNCTION_134_0();
}

void sub_1C9AAE5C0()
{
}

uint64_t sub_1C9AAE5EC()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t (*sub_1C9AAE62C())()
{
  return j_j__swift_endAccess;
}

void sub_1C9AAE670(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1C9629D94((uint64_t)v1);
}

void *sub_1C9AAE6A0()
{
  OUTLINED_FUNCTION_84_1();
  id v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t (*sub_1C9AAE6DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C9AAE720()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9AAE760()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9AAE7A0()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9AAE7E0()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9AAE820(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_1C9AAE868()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitEvent.SiriKitHybridEventBuilder.chosenItem.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_84_1();
  return sub_1C9608CF0(v1 + 128, a1, &qword_1EBC78700);
}

uint64_t SiriKitEvent.SiriKitHybridEventBuilder.chosenItem.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_1_86();
  sub_1C96A9F0C(a1, v1 + 128, &qword_1EBC78700);
  return swift_endAccess();
}

uint64_t (*SiriKitEvent.SiriKitHybridEventBuilder.chosenItem.modify())()
{
  return j__swift_endAccess;
}

uint64_t SiriKitEvent.SiriKitHybridEventBuilder.disambiguationItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriKitEvent.SiriKitHybridEventBuilder.disambiguationItems.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_2_41();
  *(void *)(v1 + 160) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*SiriKitEvent.SiriKitHybridEventBuilder.disambiguationItems.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t SiriKitEvent.SiriKitHybridEventBuilder.flowActivity.getter@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_84_1();
  return sub_1C9608CF0(v1 + 168, a1, (uint64_t *)&unk_1EBC789D0);
}

uint64_t SiriKitEvent.SiriKitHybridEventBuilder.flowActivity.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_1_86();
  sub_1C96A9F0C(a1, v1 + 168, (uint64_t *)&unk_1EBC789D0);
  return swift_endAccess();
}

uint64_t (*SiriKitEvent.SiriKitHybridEventBuilder.flowActivity.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C9AAEB10()
{
  sub_1C95FE76C(v0 + 128, &qword_1EBC78700);
  swift_bridgeObjectRelease();
  return sub_1C95FE76C(v0 + 168, (uint64_t *)&unk_1EBC789D0);
}

uint64_t sub_1C9AAEB4C()
{
  return SiriKitEvent.debugDescription.getter();
}

uint64_t sub_1C9AAEB70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9601018;
  return SiriKitEventSending.sendAsync(_:)(a1, a2, a3);
}

uint64_t SiriKitEventSending.sendAsync(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AAEC38);
}

uint64_t sub_1C9AAEC38()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void, void))(v0[4] + 8))(v0[2], v0[3]);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AAECA4()
{
  return sub_1C9AAECEC();
}

uint64_t sub_1C9AAECEC()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v1 = sub_1C9BECF78();
  os_log_type_t v2 = sub_1C9BEDC88();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (_DWORD *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *uint64_t v3 = 136315138;
    sub_1C9BEC838();
  }

  return swift_release_n();
}

uint64_t sub_1C9AAEEB8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1C9AAEEFC, 0, 0);
}

uint64_t sub_1C9AAEEFC()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AAECEC();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9AAEF54()
{
  return sub_1C9AAECA4();
}

uint64_t sub_1C9AAEF78(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9601018;
  return sub_1C9AAEEB8(a1);
}

uint64_t sub_1C9AAF010()
{
  type metadata accessor for RefreshableSiriKitEventSending();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1C9AAF120();
  qword_1EBC7A4A0 = v0;
  return result;
}

uint64_t sub_1C9AAF04C(uint64_t a1, uint64_t a2)
{
  return sub_1C95FD5F0(a2, a1);
}

uint64_t sub_1C9AAF090(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a2, v3, v4);
}

uint64_t sub_1C9AAF0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C95FD5F0(a1, a2);
}

uint64_t sub_1C9AAF120()
{
  v3[3] = type metadata accessor for NoopSiriKitEventSender();
  v3[4] = &off_1F23F53F8;
  v3[0] = swift_initStaticObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC76638);
  uint64_t v1 = swift_allocObject();
  *(_DWORD *)(v1 + 56) = 0;
  sub_1C95FD5F0((uint64_t)v3, v1 + 16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  *(void *)(v0 + 16) = v1;
  return v0;
}

id sub_1C9AAF1A8(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

uint64_t sub_1C9AAF1B8()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE540();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF1E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C9629E8C);
}

uint64_t sub_1C9AAF20C()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE580();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF234(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C9629ED0);
}

void sub_1C9AAF260()
{
}

uint64_t sub_1C9AAF28C()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE5EC();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF2B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C969B7CC);
}

void *sub_1C9AAF2E0()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE6A0();
  *uint64_t v0 = result;
  return result;
}

uint64_t sub_1C9AAF30C()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE720();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF334(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C98368D0);
}

uint64_t sub_1C9AAF360()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE760();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF388(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C963750C);
}

uint64_t sub_1C9AAF3B4()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE7A0();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF3DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C969B83C);
}

uint64_t sub_1C9AAF408()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE7E0();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF430(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C969B8AC);
}

uint64_t sub_1C9AAF45C()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AAE868();
  *uint64_t v0 = result;
  v0[1] = v2;
  return result;
}

uint64_t sub_1C9AAF484(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C9AAE820(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1C9836C28);
}

void *initializeBufferWithCopyOfBuffer for SiriKitEventPayload(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v7 = a2[7];
      swift_bridgeObjectRetain();
      if (v7)
      {
        uint64_t v8 = a2[8];
        a1[7] = v7;
        a1[8] = v8;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v7);
      }
      else
      {
        long long v62 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v62;
        a1[8] = a2[8];
      }
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      uint64_t v63 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D548) + 112);
      uint64_t v64 = (char *)a1 + v63;
      uint64_t v65 = (char *)a2 + v63;
      uint64_t v66 = sub_1C9BECAC8();
      if (__swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66))
      {
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D48);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
        __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
      }
      goto LABEL_31;
    case 1u:
      uint64_t v9 = (void *)*a2;
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      id v11 = v9;
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 2u:
      uint64_t v12 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = a2[3];
      a1[2] = a2[2];
      a1[3] = v13;
      uint64_t v14 = a2[5];
      a1[4] = a2[4];
      a1[5] = v14;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      swift_bridgeObjectRetain();
      id v15 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v16 = (void *)a2[1];
      uint64_t v17 = a2[2];
      a1[1] = v16;
      a1[2] = v17;
      uint64_t v18 = a2[4];
      a1[3] = a2[3];
      a1[4] = v18;
      uint64_t v19 = a2[6];
      a1[5] = a2[5];
      a1[6] = v19;
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      id v20 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 4u:
      uint64_t v21 = a2[3];
      a1[3] = v21;
      (**(void (***)(void *, const void *))(v21 - 8))(a1, a2);
      uint64_t v22 = (void *)a2[4];
      uint64_t v23 = a2[5];
      a1[4] = v22;
      a1[5] = v23;
      uint64_t v24 = a2[7];
      a1[6] = a2[6];
      a1[7] = v24;
      uint64_t v25 = a2[9];
      a1[8] = a2[8];
      a1[9] = v25;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      id v26 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 5u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v27 = (void *)a2[1];
      uint64_t v28 = a2[2];
      a1[1] = v27;
      a1[2] = v28;
      uint64_t v29 = a2[4];
      a1[3] = a2[3];
      a1[4] = v29;
      a1[5] = a2[5];
      uint64_t v30 = a2[9];
      id v31 = v27;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v30)
      {
        a1[9] = v30;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v30 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6), v30);
      }
      else
      {
        long long v68 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v68;
      }
      a1[10] = a2[10];
      *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
      goto LABEL_31;
    case 6u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v32 = a2[2];
      a1[1] = a2[1];
      a1[2] = v32;
      uint64_t v33 = a2[4];
      a1[3] = a2[3];
      a1[4] = v33;
      uint64_t v34 = a2[6];
      a1[5] = a2[5];
      a1[6] = v34;
      uint64_t v35 = a2[8];
      a1[7] = a2[7];
      a1[8] = v35;
      uint64_t v36 = a2[10];
      a1[9] = a2[9];
      a1[10] = v36;
      a1[11] = a2[11];
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      swift_bridgeObjectRetain();
      sub_1C9BEC838();
    case 7u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v37 = (void *)a2[1];
      uint64_t v38 = a2[2];
      a1[1] = v37;
      a1[2] = v38;
      id v39 = v37;
      sub_1C9BEC838();
    case 8u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v40 = a2[2];
      a1[1] = a2[1];
      a1[2] = v40;
      uint64_t v41 = a2[4];
      a1[3] = a2[3];
      a1[4] = v41;
      a1[5] = a2[5];
      *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
      sub_1C9BEC838();
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v42 = a2[2];
      a1[1] = a2[1];
      a1[2] = v42;
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      sub_1C9BEC838();
    case 0xAu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v43 = a2[2];
      a1[1] = a2[1];
      a1[2] = v43;
      a1[3] = a2[3];
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      sub_1C9BEC838();
    case 0xBu:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v44 = a2[2];
      a1[1] = a2[1];
      a1[2] = v44;
      uint64_t v45 = a2[4];
      a1[3] = a2[3];
      a1[4] = v45;
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      sub_1C9BEC838();
    case 0xCu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v46 = a2[2];
      a1[1] = a2[1];
      a1[2] = v46;
      uint64_t v47 = a2[4];
      a1[3] = a2[3];
      a1[4] = v47;
      uint64_t v48 = a2[6];
      a1[5] = a2[5];
      a1[6] = v48;
      uint64_t v49 = a2[8];
      a1[7] = a2[7];
      a1[8] = v49;
      uint64_t v50 = a2[10];
      a1[9] = a2[9];
      a1[10] = v50;
      uint64_t v51 = a2[12];
      a1[11] = a2[11];
      a1[12] = v51;
      *((unsigned char *)a1 + 108) = *((unsigned char *)a2 + 108);
      *((_DWORD *)a1 + 26) = *((_DWORD *)a2 + 26);
      swift_bridgeObjectRetain();
      sub_1C9BEC838();
    case 0xDu:
      uint64_t v52 = a2[1];
      *a1 = *a2;
      a1[1] = v52;
      uint64_t v53 = a2[2];
      uint64_t v54 = a2[3];
      a1[2] = v53;
      a1[3] = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 0xEu:
    case 0x11u:
      uint64_t v55 = a2[1];
      *a1 = *a2;
      a1[1] = v55;
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 0xFu:
      uint64_t v56 = a2[1];
      *a1 = *a2;
      a1[1] = v56;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_31;
    case 0x10u:
    case 0x12u:
      uint64_t v57 = a2[1];
      *a1 = *a2;
      a1[1] = v57;
      unint64_t v58 = (void *)a2[2];
      a1[2] = v58;
      swift_bridgeObjectRetain();
      id v59 = v58;
      goto LABEL_31;
    case 0x13u:
      uint64_t v60 = (void *)*a2;
      *a1 = *a2;
      id v61 = v60;
LABEL_31:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(v5 + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for SiriKitEventPayload(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C96003E8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v6 = a2[7];
        swift_bridgeObjectRetain();
        if (v6)
        {
          a1[7] = v6;
          a1[8] = a2[8];
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v6);
        }
        else
        {
          long long v33 = *((_OWORD *)a2 + 2);
          long long v34 = *((_OWORD *)a2 + 3);
          a1[8] = a2[8];
          *((_OWORD *)a1 + 2) = v33;
          *((_OWORD *)a1 + 3) = v34;
        }
        a1[9] = a2[9];
        swift_bridgeObjectRetain();
        uint64_t v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D548) + 112);
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        uint64_t v38 = sub_1C9BECAC8();
        if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
        {
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D48);
          memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
          __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
        }
        goto LABEL_30;
      case 1u:
        uint64_t v7 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        id v8 = v7;
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = (void *)a2[1];
        a1[1] = v9;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v10 = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        a1[6] = v10;
        swift_bridgeObjectRetain();
        id v11 = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v12 = (void *)a2[1];
        a1[1] = v12;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v13 = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        a1[6] = v13;
        id v14 = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 4u:
        uint64_t v15 = a2[3];
        a1[3] = v15;
        (**(void (***)(void *, const void *))(v15 - 8))(a1, a2);
        uint64_t v16 = (void *)a2[4];
        a1[4] = v16;
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        uint64_t v17 = a2[9];
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v17;
        id v18 = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 5u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v19 = (void *)a2[1];
        a1[1] = v19;
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v20 = a2[9];
        id v21 = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20)
        {
          a1[9] = v20;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))((uint64_t)(a1 + 6), (uint64_t)(a2 + 6), v20);
        }
        else
        {
          long long v40 = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 4) = v40;
        }
        uint64_t v41 = a2[10];
        *((unsigned char *)a1 + 88) = *((unsigned char *)a2 + 88);
        a1[10] = v41;
        goto LABEL_30;
      case 6u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        swift_bridgeObjectRetain();
        sub_1C9BEC838();
      case 7u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v22 = (void *)a2[1];
        a1[1] = v22;
        a1[2] = a2[2];
        id v23 = v22;
        sub_1C9BEC838();
      case 8u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        uint64_t v24 = a2[5];
        *((unsigned char *)a1 + 48) = *((unsigned char *)a2 + 48);
        a1[5] = v24;
        sub_1C9BEC838();
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v25 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v25;
        sub_1C9BEC838();
      case 0xAu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        uint64_t v26 = a2[3];
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        a1[3] = v26;
        sub_1C9BEC838();
      case 0xBu:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        sub_1C9BEC838();
      case 0xCu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        int v27 = *((_DWORD *)a2 + 26);
        *((unsigned char *)a1 + 108) = *((unsigned char *)a2 + 108);
        *((_DWORD *)a1 + 26) = v27;
        swift_bridgeObjectRetain();
        sub_1C9BEC838();
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 0xEu:
      case 0x11u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 0xFu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v28 = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[2] = v28;
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 0x10u:
      case 0x12u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v29 = (void *)a2[2];
        a1[2] = v29;
        swift_bridgeObjectRetain();
        id v30 = v29;
        goto LABEL_30;
      case 0x13u:
        id v31 = (void *)*a2;
        *a1 = *a2;
        id v32 = v31;
LABEL_30:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for SiriKitEventPayload(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    a1[24] = a2[24];
    long long v6 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v6;
    uint64_t v7 = *((void *)a2 + 9);
    *((void *)a1 + 8) = *((void *)a2 + 8);
    *((void *)a1 + 9) = v7;
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D548) + 112);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_1C9BECAC8();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D48);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *assignWithTake for SiriKitEventPayload(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C96003E8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      a1[24] = a2[24];
      long long v6 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v6;
      uint64_t v7 = *((void *)a2 + 9);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((void *)a1 + 9) = v7;
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D548) + 112);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = sub_1C9BECAC8();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D48);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1C9AB0F30()
{
  sub_1C9AB10A0();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    uint64_t v2 = &v1;
    uint64_t v3 = &unk_1C9C0C040;
    uint64_t v4 = &unk_1C9C0C058;
    uint64_t v5 = &unk_1C9C0C058;
    long long v6 = &unk_1C9C0C070;
    uint64_t v7 = &unk_1C9C0C088;
    uint64_t v8 = &unk_1C9C0C0A0;
    uint64_t v9 = &unk_1C9C0C088;
    uint64_t v10 = &unk_1C9C0C0B8;
    uint64_t v11 = &unk_1C9C0C0A0;
    uint64_t v12 = &unk_1C9C0C0D0;
    uint64_t v13 = &unk_1C9C0C0E8;
    id v14 = &unk_1C9C0C100;
    uint64_t v15 = &unk_1C9C0C118;
    uint64_t v16 = &unk_1C9C0BFE0;
    uint64_t v17 = &unk_1C9C0C130;
    id v18 = &unk_1C9C0C148;
    uint64_t v19 = &unk_1C9C0BFE0;
    uint64_t v20 = &unk_1C9C0C148;
    uint64_t v21 = MEMORY[0x1E4FBAD78] + 64;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1C9AB10A0()
{
  if (!qword_1EBC7A0B8)
  {
    sub_1C9BECAC8();
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBC7A0B8);
    }
  }
}

uint64_t sub_1C9AB10F8()
{
  return type metadata accessor for SiriKitEvent(0);
}

uint64_t sub_1C9AB1100()
{
  uint64_t result = type metadata accessor for SiriKitEventPayload(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C9BEAA98();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for SiriKitEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitEvent);
}

uint64_t method lookup function for SiriKitEvent.SiriKitOverridesEventBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitEvent.SiriKitOverridesEventBuilder);
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitOverridesEventBuilder.interactionId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitOverridesEventBuilder.interactionId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitOverridesEventBuilder.interactionId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitOverridesEventBuilder.taskId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitOverridesEventBuilder.taskId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitOverridesEventBuilder.taskId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t method lookup function for SiriKitEvent.SiriKitEventBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitEvent.SiriKitEventBuilder);
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.app.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.app.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.attribute.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.attribute.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.domainContext.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.interactionId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.interactionId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.interactionId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.parameterName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.parameterName.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.responseId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.responseId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.statusReasonDescription.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.statusReasonDescription.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.taskId.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.taskId.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of SiriKitEvent.SiriKitEventBuilder.taskId.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

ValueMetadata *type metadata accessor for SiriKitEventSender()
{
  return &type metadata for SiriKitEventSender;
}

uint64_t type metadata accessor for NoopSiriKitEventSender()
{
  return self;
}

uint64_t sub_1C9AB1600(void *a1)
{
  return sub_1C9AAF090(a1, v1);
}

uint64_t sub_1C9AB161C(uint64_t a1)
{
  return sub_1C9AAF04C(a1, *(void *)(v1 + 16));
}

uint64_t OUTLINED_FUNCTION_2_98()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_3_92()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_6_79()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_7_71()
{
  return sub_1C9BED6B8();
}

void OUTLINED_FUNCTION_10_68()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_11_72@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1C95FF79C(v2, (uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t OUTLINED_FUNCTION_12_67()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_13_70()
{
  return 0x3E4C494E3CLL;
}

void OUTLINED_FUNCTION_27_39()
{
  uint64_t v1 = *(void *)(v0 - 120);
  *(void *)(v0 - 128) = *(void *)(v0 - 128);
  *(void *)(v0 - 120) = v1;
}

uint64_t OUTLINED_FUNCTION_29_36()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_30_33()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 184), v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_31_35()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_32_40()
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 - 184), v0);
  return v0;
}

void OUTLINED_FUNCTION_33_32(uint64_t a1@<X8>)
{
  *(void *)(v2 - 128) = a1;
  *(void *)(v2 - 120) = (v1 - 32) | 0x8000000000000000;
}

void OUTLINED_FUNCTION_38_26()
{
  *(unsigned char *)uint64_t v0 = v2;
  *(void *)(v0 + 8) = v1;
  sub_1C9BEC838();
}

uint64_t OUTLINED_FUNCTION_40_30()
{
  return sub_1C9BED5D8();
}

unint64_t OUTLINED_FUNCTION_41_27()
{
  return 0xD000000000000011;
}

id OUTLINED_FUNCTION_45_27()
{
  return sub_1C9639264();
}

uint64_t OUTLINED_FUNCTION_46_26()
{
  return sub_1C9BED6B8();
}

uint64_t OUTLINED_FUNCTION_50_25()
{
  return __swift_destroy_boxed_opaque_existential_1(v0 - 184);
}

__n128 OUTLINED_FUNCTION_55_26()
{
  return v0[1];
}

uint64_t OUTLINED_FUNCTION_56_25()
{
  return sub_1C9BEE348();
}

uint64_t OUTLINED_FUNCTION_57_26()
{
  return sub_1C9BEE348();
}

void OUTLINED_FUNCTION_58_23()
{
  uint64_t v1 = *(void *)(v0 - 176);
  *(void *)(v0 - 144) = *(void *)(v0 - 184);
  *(void *)(v0 - 136) = v1;
}

void OUTLINED_FUNCTION_59_16()
{
  uint64_t v1 = *(void *)(v0 - 176);
  *(void *)(v0 - 184) = *(void *)(v0 - 184);
  *(void *)(v0 - 176) = v1;
}

uint64_t OUTLINED_FUNCTION_60_22()
{
  *(void *)(v0 - 128) = 0;
  *(void *)(v0 - 120) = 0xE000000000000000;
  return sub_1C9BEE188();
}

void sub_1C9AB1994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v42 = v30;
  id v32 = v31;
  long long v34 = v33;
  uint64_t v44 = v35;
  type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v36, v37);
  OUTLINED_FUNCTION_20_0();
  char v43 = *v25;
  char v45 = *v32;
  char v38 = v45;
  uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a23 + 304))(&v45, v29, v27, a22, a23);
  __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  *(unsigned char *)uint64_t v23 = v38;
  *(void *)(v23 + 8) = v42;
  *(void *)(v23 + 16) = v29;
  *(void *)(v23 + 24) = 0;
  *(unsigned char *)(v23 + 32) = 1;
  if (v39)
  {
    uint64_t v40 = type metadata accessor for DefaultFlowActivity();
    unint64_t v41 = sub_1C97A51E8();
  }
  else
  {
    uint64_t v40 = 0;
    unint64_t v41 = 0;
    *(void *)(v23 + 48) = 0;
    *(void *)(v23 + 56) = 0;
  }
  *(void *)(v23 + 40) = v39;
  *(void *)(v23 + 64) = v40;
  *(void *)(v23 + 72) = v41;
  type metadata accessor for SiriKitEvent(0);
  *(void *)(v23 + 80) = v44;
  *(void *)(v23 + 88) = a21;
  *(unsigned char *)(v23 + 96) = v43;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

void sub_1C9AB1B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  OUTLINED_FUNCTION_11_1();
  int v53 = v26;
  uint64_t v51 = v27;
  uint64_t v52 = v28;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  long long v34 = v33;
  uint64_t v36 = v35;
  uint64_t v58 = a23;
  uint64_t v59 = a24;
  uint64_t v55 = a25;
  uint64_t v57 = type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v37, v38);
  uint64_t v40 = (char *)&v50 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v41 = *v34;
  int v54 = *v30;
  uint64_t v56 = *a22;
  __int16 v42 = *((_WORD *)a22 + 4);
  char v60 = v41;
  uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t, void *, uint64_t))(a26 + 304))(&v60, v32, a21, a25, a26);
  uint64_t v44 = v36[3];
  char v45 = v36;
  uint64_t v46 = v51;
  uint64_t v55 = __swift_project_boxed_opaque_existential_1(v45, v44);
  *uint64_t v40 = v41;
  *((void *)v40 + 1) = v46;
  *((void *)v40 + 2) = v32;
  *((void *)v40 + 3) = v52;
  v40[32] = v53 & 1;
  if (v43)
  {
    uint64_t v47 = type metadata accessor for DefaultFlowActivity();
    unint64_t v48 = sub_1C97A51E8();
  }
  else
  {
    uint64_t v47 = 0;
    unint64_t v48 = 0;
    *((void *)v40 + 6) = 0;
    *((void *)v40 + 7) = 0;
  }
  *((void *)v40 + 5) = v43;
  *((void *)v40 + 8) = v47;
  *((void *)v40 + 9) = v48;
  type metadata accessor for SiriKitEvent(0);
  *((void *)v40 + 10) = v56;
  *((_WORD *)v40 + 44) = v42;
  uint64_t v49 = v59;
  *((void *)v40 + 12) = v58;
  *((void *)v40 + 13) = v49;
  v40[112] = v54;
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

void sub_1C9AB1D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v30 = v29;
  uint64_t v48 = v32;
  uint64_t v49 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v47 = v39;
  type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v40, v41);
  OUTLINED_FUNCTION_20_0();
  char v50 = *v30;
  uint64_t v51 = *a24;
  __int16 v43 = *((_WORD *)a24 + 4);
  char v52 = *v36;
  char v42 = v52;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a28 + 312))(&v52, v34, a23, a27, a28);
  __swift_project_boxed_opaque_existential_1(v38, v38[3]);
  *(unsigned char *)uint64_t v28 = v42;
  *(void *)(v28 + 8) = v47;
  *(void *)(v28 + 16) = v34;
  *(void *)(v28 + 24) = v49;
  *(void *)(v28 + 32) = v48;
  *(void *)(v28 + 40) = a21;
  *(unsigned char *)(v28 + 48) = a22 & 1;
  if (v44)
  {
    uint64_t v45 = type metadata accessor for DefaultFlowActivity();
    unint64_t v46 = sub_1C97A51E8();
  }
  else
  {
    uint64_t v45 = 0;
    unint64_t v46 = 0;
    *(void *)(v28 + 64) = 0;
    *(void *)(v28 + 72) = 0;
  }
  *(void *)(v28 + 56) = v44;
  *(void *)(v28 + 80) = v45;
  *(void *)(v28 + 88) = v46;
  type metadata accessor for SiriKitEvent(0);
  *(void *)(v28 + 96) = v51;
  *(_WORD *)(v28 + 104) = v43;
  *(void *)(v28 + 112) = a25;
  *(void *)(v28 + 120) = a26;
  *(unsigned char *)(v28 + 128) = v50;
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

void sub_1C9AB1F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char *a30,uint64_t a31,uint64_t a32)
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v33 = v32;
  v52[1] = v32;
  uint64_t v53 = v34;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v64 = a31;
  uint64_t v65 = v41;
  uint64_t v63 = a32;
  uint64_t v60 = a27;
  uint64_t v61 = a28;
  uint64_t v59 = a26;
  uint64_t v57 = v42;
  uint64_t v58 = a25;
  uint64_t v55 = v43;
  uint64_t v56 = a24;
  uint64_t v54 = a23;
  type metadata accessor for SiriKitEventPayload(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v44, v45);
  uint64_t v47 = (char *)v52 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v40) = *v40;
  char v48 = *a30;
  uint64_t v62 = type metadata accessor for SiriKitEvent(0);
  *uint64_t v47 = (char)v40;
  *((void *)v47 + 1) = v53;
  *((void *)v47 + 2) = v38;
  uint64_t v49 = v55;
  *((void *)v47 + 3) = v36;
  *((void *)v47 + 4) = v49;
  *((void *)v47 + 5) = v33;
  sub_1C95FE5B0(v57, (uint64_t)(v47 + 48), &qword_1EBC78700);
  *((void *)v47 + 10) = a21;
  *((void *)v47 + 11) = a22;
  sub_1C95FE5B0(v54, (uint64_t)(v47 + 96), (uint64_t *)&unk_1EBC789D0);
  uint64_t v50 = v58;
  *((void *)v47 + 17) = v56;
  *((void *)v47 + 18) = v50;
  uint64_t v51 = v60;
  *((void *)v47 + 19) = v59;
  *((void *)v47 + 20) = v51;
  *((void *)v47 + 21) = v61;
  *((void *)v47 + 22) = a29;
  v47[184] = v48;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

id sub_1C9AB20F4(id result)
{
  if (result != (id)3) {
    return sub_1C9AAF1A8(result);
  }
  return result;
}

uint64_t sub_1C9AB2110()
{
  return swift_initClassMetadata2();
}

void sub_1C9AB2178()
{
  uint64_t v1 = v0;
  OUTLINED_FUNCTION_4_0();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v9 = v6;
    sub_1C978A9F0(*(id *)(v1 + 80));
    type metadata accessor for SiriKitFixedAppResolutionFlow.State();
    swift_getWitnessTable();
    uint64_t v7 = sub_1C9BED5E8();
    sub_1C95FF228(v7, v8, &v9);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v3, v4, "SiriKitFixedAppResolutionFlow transitioned to state %s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_release_n();
  }
}

void sub_1C9AB2368(void *a1, char a2)
{
  os_log_type_t v4 = *(void **)(v2 + 80);
  *(void *)(v2 + 80) = a1;
  *(unsigned char *)(v2 + 88) = a2;
  sub_1C978A9F0(a1);
  sub_1C9719438(v4);
  sub_1C9AB2178();

  sub_1C9719438(a1);
}

void sub_1C9AB23D8()
{
  OUTLINED_FUNCTION_4_0();
  Flow.deferToExecuteAsync(_:)(v0, v1, v2, (uint64_t)&off_1EC709058);
}

void sub_1C9AB2418(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    id v1 = *(id *)a1;
    id v2 = *(id *)a1;
    uint64_t v3 = (uint64_t)v1;
    char v4 = 1;
  }
  else
  {
    uint64_t v3 = 1;
    char v4 = 0;
  }
  sub_1C9AB2368((void *)v3, v4);
}

uint64_t sub_1C9AB2468(id a1)
{
  if (!a1) {
    return 0xD000000000000010;
  }
  if (a1 == (id)1) {
    return 0x74656C706D6F632ELL;
  }
  id v3 = a1;
  sub_1C9BED6B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  sub_1C9BEE348();
  sub_1C9BED6B8();
  sub_1C9719438(a1);
  return 0;
}

uint64_t sub_1C9AB2560()
{
  return sub_1C9AB2468(*v0);
}

uint64_t type metadata accessor for SiriKitFixedAppResolutionFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9AB2590(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    *(void *)a1 = *(void *)a2;
  }
  else
  {
    id v5 = v4;
    *(void *)a1 = v4;
  }
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_1C9AB25F0(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      id v8 = v5;
      *(void *)a1 = v5;
      goto LABEL_6;
    }
LABEL_8:
    uint64_t v9 = *(void **)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(void *)a1 = v9;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    goto LABEL_8;
  }
  id v6 = v5;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = v5;

LABEL_6:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_1C9AB2690(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a1;
  if ((unint64_t)v4 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

LABEL_5:
    *(void *)a1 = *(void *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;

LABEL_6:
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t sub_1C9AB26F8(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 9)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C9AB274C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C9AB27AC(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(unsigned char *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t type metadata accessor for SiriKitFixedAppResolutionFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9AB27E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + 16;
  swift_beginAccess();
  return sub_1C9AB2908(v3, a1);
}

uint64_t sub_1C9AB2834(uint64_t a1)
{
  uint64_t v3 = *v1 + 16;
  swift_beginAccess();
  sub_1C9729724(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1C9AB288C())()
{
  return j__swift_endAccess;
}

void sub_1C9AB28E4()
{
}

uint64_t sub_1C9AB2908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9AB2970(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A828);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C9AB29D0(uint64_t a1)
{
}

uint64_t SiriKitFlowFrameInput.parse.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C97D1F40(v1, a1);
}

uint64_t SiriKitFlowFrameInput.confirmationState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SiriKitFlowFrameInput();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SiriKitFlowFrameInput()
{
  uint64_t result = qword_1EBC79E20;
  if (!qword_1EBC79E20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SiriKitFlowFrameInput.parameterMetadata.getter()
{
  type metadata accessor for SiriKitFlowFrameInput();

  return swift_bridgeObjectRetain();
}

uint64_t SiriKitFlowFrameInput.appResolutionState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SiriKitFlowFrameInput() + 28);

  return sub_1C95FD5F0(v3, a1);
}

uint64_t SiriKitFlowFrameInput.init(parse:confirmationState:parameterMetadata:appResolutionState:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X8>)
{
  char v8 = *a2;
  sub_1C960B3E4(a1, a5);
  uint64_t v9 = (int *)type metadata accessor for SiriKitFlowFrameInput();
  *(unsigned char *)(a5 + v9[5]) = v8;
  *(void *)(a5 + v9[6]) = a3;
  uint64_t v10 = a5 + v9[7];

  return sub_1C95FD5D8(a4, v10);
}

void *initializeBufferWithCopyOfBuffer for SiriKitFlowFrameInput(void *a1, void *a2, int *a3)
{
  if ((*(_DWORD *)(*((void *)a3 - 1) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v6 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_27;
    case 1u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_27;
    case 4u:
      uint64_t v11 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_27;
    case 5u:
      uint64_t v12 = (void *)*a2;
      *a1 = *a2;
      id v13 = v12;
      goto LABEL_27;
    case 6u:
      uint64_t v14 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for USOParse();
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      id v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v40 = v15[6];
      uint64_t v41 = (void *)((char *)a1 + v40);
      uint64_t v42 = (void *)((char *)a2 + v40);
      uint64_t v43 = v42[1];
      void *v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = v15[7];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      v45[4] = v46[4];
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      uint64_t v21 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = (int *)type metadata accessor for USOParse();
      uint64_t v23 = v22[5];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      uint64_t v47 = v22[6];
      char v48 = (void *)((char *)a1 + v47);
      uint64_t v49 = (void *)((char *)a2 + v47);
      uint64_t v50 = v49[1];
      *char v48 = *v49;
      v48[1] = v50;
      uint64_t v51 = v22[7];
      char v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      v52[4] = v53[4];
      *(_DWORD *)char v52 = *(_DWORD *)v53;
      uint64_t v54 = (int *)type metadata accessor for LinkParse();
      uint64_t v55 = v54[5];
      uint64_t v56 = (void *)((char *)a1 + v55);
      uint64_t v57 = (void *)((char *)a2 + v55);
      uint64_t v58 = v57[1];
      *uint64_t v56 = *v57;
      v56[1] = v58;
      uint64_t v59 = v54[6];
      uint64_t v60 = (void *)((char *)a1 + v59);
      uint64_t v61 = (void *)((char *)a2 + v59);
      uint64_t v62 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = v54[7];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = v65[1];
      void *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 8u:
      uint64_t v28 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
      uint64_t v29 = (int *)type metadata accessor for NLRouterParse();
      uint64_t v30 = v29[5];
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (void *)((char *)a2 + v30);
      uint64_t v33 = v32[1];
      void *v31 = *v32;
      v31[1] = v33;
      uint64_t v34 = v29[6];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = (int *)type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v67 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v35, v36, v67);
        uint64_t v68 = v37[5];
        unint64_t __dst = &v35[v68];
        id v69 = &v36[v68];
        uint64_t v70 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(__dst, v69, v70);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v70);
        }
        uint64_t v72 = v37[6];
        unsigned int v73 = &v35[v72];
        uint64_t v74 = &v36[v72];
        uint64_t v75 = *((void *)v74 + 1);
        *(void *)unsigned int v73 = *(void *)v74;
        *((void *)v73 + 1) = v75;
        uint64_t v76 = v37[7];
        char v77 = &v35[v76];
        unsigned int v78 = &v36[v76];
        v77[4] = v78[4];
        *(_DWORD *)char v77 = *(_DWORD *)v78;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, (uint64_t)v37);
      }
      uint64_t v79 = v29[7];
      uint64_t v80 = *(void **)((char *)a2 + v79);
      *(void *)((char *)a1 + v79) = v80;
      id v81 = v80;
      goto LABEL_27;
    case 9u:
      uint64_t v39 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v82 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
  uint64_t v83 = a3[7];
  uint64_t v84 = (char *)a1 + v83;
  unsigned int v85 = (char *)a2 + v83;
  long long v86 = *(_OWORD *)(v85 + 24);
  *(_OWORD *)((char *)a1 + v83 + 24) = v86;
  uint64_t v87 = v86;
  uint64_t v88 = **(void (***)(char *, char *, uint64_t))(v86 - 8);
  swift_bridgeObjectRetain();
  v88(v84, v85, v87);
  return a1;
}

uint64_t destroy for SiriKitFlowFrameInput(void **a1, uint64_t a2)
{
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = sub_1C9BEC028();
      goto LABEL_22;
    case 1u:
      uint64_t v5 = sub_1C9BEC028();
      (*(void (**)(void **, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      uint64_t v4 = sub_1C9BEAC48();
      goto LABEL_22;
    case 5u:
      uint64_t v6 = *a1;
      goto LABEL_20;
    case 6u:
      uint64_t v7 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v8 = (uint64_t)a1 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v9 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      goto LABEL_14;
    case 7u:
      uint64_t v10 = sub_1C9BEAF18();
      (*(void (**)(void **, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      uint64_t v11 = (uint64_t)a1 + *(int *)(type metadata accessor for USOParse() + 20);
      uint64_t v12 = sub_1C9BEAE48();
      if (!__swift_getEnumTagSinglePayload(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for LinkParse();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRelease();
      break;
    case 8u:
      uint64_t v13 = sub_1C9BEC928();
      (*(void (**)(void **, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
      uint64_t v14 = type metadata accessor for NLRouterParse();
      swift_bridgeObjectRelease();
      uint64_t v15 = (uint64_t)a1 + *(int *)(v14 + 24);
      uint64_t v16 = type metadata accessor for USOParse();
      if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
      {
        uint64_t v17 = sub_1C9BEAF18();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
        uint64_t v18 = v15 + *(int *)(v16 + 20);
        uint64_t v19 = sub_1C9BEAE48();
        if (!__swift_getEnumTagSinglePayload(v18, 1, v19)) {
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v6 = *(void **)((char *)a1 + *(int *)(v14 + 28));
LABEL_20:

      break;
    case 9u:
      uint64_t v4 = sub_1C9BEC8F8();
LABEL_22:
      (*(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t)a1 + *(int *)(a2 + 28);

  return __swift_destroy_boxed_opaque_existential_1(v20);
}

void *initializeWithCopy for SiriKitFlowFrameInput(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_25;
    case 1u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
      sub_1C9BEC838();
    case 2u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 3u:
      *a1 = *a2;
      swift_unknownObjectRetain();
      goto LABEL_25;
    case 4u:
      uint64_t v11 = sub_1C9BEAC48();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_25;
    case 5u:
      uint64_t v12 = (void *)*a2;
      *a1 = *a2;
      id v13 = v12;
      goto LABEL_25;
    case 6u:
      uint64_t v14 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = (int *)type metadata accessor for USOParse();
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v40 = v15[6];
      uint64_t v41 = (void *)((char *)a1 + v40);
      uint64_t v42 = (void *)((char *)a2 + v40);
      uint64_t v43 = v42[1];
      void *v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = v15[7];
      uint64_t v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      v45[4] = v46[4];
      *(_DWORD *)uint64_t v45 = *(_DWORD *)v46;
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 7u:
      uint64_t v21 = sub_1C9BEAF18();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = (int *)type metadata accessor for USOParse();
      uint64_t v23 = v22[5];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
      }
      uint64_t v47 = v22[6];
      char v48 = (void *)((char *)a1 + v47);
      uint64_t v49 = (void *)((char *)a2 + v47);
      uint64_t v50 = v49[1];
      *char v48 = *v49;
      v48[1] = v50;
      uint64_t v51 = v22[7];
      char v52 = (char *)a1 + v51;
      uint64_t v53 = (char *)a2 + v51;
      v52[4] = v53[4];
      *(_DWORD *)char v52 = *(_DWORD *)v53;
      uint64_t v54 = (int *)type metadata accessor for LinkParse();
      uint64_t v55 = v54[5];
      uint64_t v56 = (void *)((char *)a1 + v55);
      uint64_t v57 = (void *)((char *)a2 + v55);
      uint64_t v58 = v57[1];
      *uint64_t v56 = *v57;
      v56[1] = v58;
      uint64_t v59 = v54[6];
      uint64_t v60 = (void *)((char *)a1 + v59);
      uint64_t v61 = (void *)((char *)a2 + v59);
      uint64_t v62 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = v54[7];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      uint64_t v66 = v65[1];
      void *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 8u:
      uint64_t v28 = sub_1C9BEC928();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
      uint64_t v29 = (int *)type metadata accessor for NLRouterParse();
      uint64_t v30 = v29[5];
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (void *)((char *)a2 + v30);
      uint64_t v33 = v32[1];
      void *v31 = *v32;
      v31[1] = v33;
      uint64_t v34 = v29[6];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = (int *)type metadata accessor for USOParse();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v67 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v35, v36, v67);
        uint64_t v68 = v37[5];
        unint64_t __dst = &v35[v68];
        id v69 = &v36[v68];
        uint64_t v70 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(__dst, v69, v70);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v70);
        }
        uint64_t v72 = v37[6];
        unsigned int v73 = &v35[v72];
        uint64_t v74 = &v36[v72];
        uint64_t v75 = *((void *)v74 + 1);
        *(void *)unsigned int v73 = *(void *)v74;
        *((void *)v73 + 1) = v75;
        uint64_t v76 = v37[7];
        char v77 = &v35[v76];
        unsigned int v78 = &v36[v76];
        v77[4] = v78[4];
        *(_DWORD *)char v77 = *(_DWORD *)v78;
        swift_bridgeObjectRetain();
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, (uint64_t)v37);
      }
      uint64_t v79 = v29[7];
      uint64_t v80 = *(void **)((char *)a2 + v79);
      *(void *)((char *)a1 + v79) = v80;
      id v81 = v80;
      goto LABEL_25;
    case 9u:
      uint64_t v39 = sub_1C9BEC8F8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
LABEL_25:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v82 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
  uint64_t v83 = a3[7];
  uint64_t v84 = (char *)a1 + v83;
  unsigned int v85 = (char *)a2 + v83;
  long long v86 = *(_OWORD *)(v85 + 24);
  *(_OWORD *)((char *)a1 + v83 + 24) = v86;
  uint64_t v87 = v86;
  uint64_t v88 = **(void (***)(char *, char *, uint64_t))(v86 - 8);
  swift_bridgeObjectRetain();
  v88(v84, v85, v87);
  return a1;
}

void *assignWithCopy for SiriKitFlowFrameInput(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1C97F25EC((uint64_t)a1);
    uint64_t v6 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_26;
      case 1u:
        uint64_t v8 = sub_1C9BEC028();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
        sub_1C9BEC838();
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
        *a1 = *a2;
        swift_unknownObjectRetain();
        goto LABEL_26;
      case 4u:
        uint64_t v10 = sub_1C9BEAC48();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_26;
      case 5u:
        uint64_t v11 = (void *)*a2;
        *a1 = *a2;
        id v12 = v11;
        goto LABEL_26;
      case 6u:
        uint64_t v13 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = (int *)type metadata accessor for USOParse();
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
          __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
        }
        uint64_t v38 = v14[6];
        uint64_t v39 = (void *)((char *)a1 + v38);
        uint64_t v40 = (void *)((char *)a2 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v14[7];
        uint64_t v42 = (char *)a1 + v41;
        uint64_t v43 = (char *)a2 + v41;
        int v44 = *(_DWORD *)v43;
        void v42[4] = v43[4];
        *(_DWORD *)uint64_t v42 = v44;
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 7u:
        uint64_t v20 = sub_1C9BEAF18();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = (int *)type metadata accessor for USOParse();
        uint64_t v22 = v21[5];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
          __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
        }
        uint64_t v45 = v21[6];
        uint64_t v46 = (void *)((char *)a1 + v45);
        uint64_t v47 = (void *)((char *)a2 + v45);
        *uint64_t v46 = *v47;
        v46[1] = v47[1];
        uint64_t v48 = v21[7];
        uint64_t v49 = (char *)a1 + v48;
        uint64_t v50 = (char *)a2 + v48;
        int v51 = *(_DWORD *)v50;
        v49[4] = v50[4];
        *(_DWORD *)uint64_t v49 = v51;
        char v52 = (int *)type metadata accessor for LinkParse();
        uint64_t v53 = v52[5];
        uint64_t v54 = (void *)((char *)a1 + v53);
        uint64_t v55 = (void *)((char *)a2 + v53);
        *uint64_t v54 = *v55;
        v54[1] = v55[1];
        uint64_t v56 = v52[6];
        uint64_t v57 = (void *)((char *)a1 + v56);
        uint64_t v58 = (void *)((char *)a2 + v56);
        *uint64_t v57 = *v58;
        v57[1] = v58[1];
        uint64_t v59 = v52[7];
        uint64_t v60 = (void *)((char *)a1 + v59);
        uint64_t v61 = (void *)((char *)a2 + v59);
        *uint64_t v60 = *v61;
        v60[1] = v61[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 8u:
        uint64_t v27 = sub_1C9BEC928();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
        uint64_t v28 = (int *)type metadata accessor for NLRouterParse();
        uint64_t v29 = v28[5];
        uint64_t v30 = (void *)((char *)a1 + v29);
        uint64_t v31 = (void *)((char *)a2 + v29);
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        uint64_t v32 = v28[6];
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = (int *)type metadata accessor for USOParse();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, (uint64_t)v35))
        {
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          uint64_t v62 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v33, v34, v62);
          uint64_t v63 = v35[5];
          unint64_t __dst = &v33[v63];
          uint64_t v64 = &v34[v63];
          uint64_t v65 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v64, 1, v65))
          {
            uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v64, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(__dst, v64, v65);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v65);
          }
          uint64_t v67 = v35[6];
          uint64_t v68 = &v33[v67];
          id v69 = &v34[v67];
          *(void *)uint64_t v68 = *(void *)v69;
          *((void *)v68 + 1) = *((void *)v69 + 1);
          uint64_t v70 = v35[7];
          uint64_t v71 = &v33[v70];
          uint64_t v72 = &v34[v70];
          int v73 = *(_DWORD *)v72;
          v71[4] = v72[4];
          *(_DWORD *)uint64_t v71 = v73;
          swift_bridgeObjectRetain();
          __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, (uint64_t)v35);
        }
        uint64_t v74 = v28[7];
        uint64_t v75 = *(void **)((char *)a2 + v74);
        *(void *)((char *)a1 + v74) = v75;
        id v76 = v75;
        goto LABEL_26;
      case 9u:
        uint64_t v37 = sub_1C9BEC8F8();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  return a1;
}

char *initializeWithTake for SiriKitFlowFrameInput(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_22;
    case 1u:
      uint64_t v8 = sub_1C9BEC028();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
      goto LABEL_22;
    case 4u:
      uint64_t v10 = sub_1C9BEAC48();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_22;
    case 6u:
      uint64_t v11 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      id v12 = (int *)type metadata accessor for USOParse();
      uint64_t v13 = v12[5];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      }
      *(_OWORD *)&a1[v12[6]] = *(_OWORD *)&a2[v12[6]];
      uint64_t v33 = v12[7];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      v34[4] = v35[4];
      *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
      goto LABEL_22;
    case 7u:
      uint64_t v18 = sub_1C9BEAF18();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
      uint64_t v19 = (int *)type metadata accessor for USOParse();
      uint64_t v20 = v19[5];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = sub_1C9BEAE48();
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
        memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      }
      *(_OWORD *)&a1[v19[6]] = *(_OWORD *)&a2[v19[6]];
      uint64_t v36 = v19[7];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      v37[4] = v38[4];
      *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
      uint64_t v39 = (int *)type metadata accessor for LinkParse();
      *(_OWORD *)&a1[v39[5]] = *(_OWORD *)&a2[v39[5]];
      *(_OWORD *)&a1[v39[6]] = *(_OWORD *)&a2[v39[6]];
      *(_OWORD *)&a1[v39[7]] = *(_OWORD *)&a2[v39[7]];
      goto LABEL_22;
    case 8u:
      uint64_t v25 = sub_1C9BEC928();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      uint64_t v26 = (int *)type metadata accessor for NLRouterParse();
      *(_OWORD *)&a1[v26[5]] = *(_OWORD *)&a2[v26[5]];
      uint64_t v27 = v26[6];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      uint64_t v30 = (int *)type metadata accessor for USOParse();
      if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, (uint64_t)v30))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        uint64_t v40 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v28, v29, v40);
        uint64_t v41 = v30[5];
        unint64_t __dst = &v28[v41];
        uint64_t v42 = &v29[v41];
        uint64_t v43 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(__dst, v42, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v43);
        }
        *(_OWORD *)&v28[v30[6]] = *(_OWORD *)&v29[v30[6]];
        uint64_t v45 = v30[7];
        uint64_t v46 = &v28[v45];
        uint64_t v47 = &v29[v45];
        v46[4] = v47[4];
        *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, (uint64_t)v30);
      }
      *(void *)&a1[v26[7]] = *(void *)&a2[v26[7]];
      goto LABEL_22;
    case 9u:
      uint64_t v32 = sub_1C9BEC8F8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v48 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v48] = *(void *)&a2[v48];
  uint64_t v49 = a3[7];
  uint64_t v50 = &a1[v49];
  int v51 = &a2[v49];
  long long v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  *((void *)v50 + 4) = *((void *)v51 + 4);
  return a1;
}

char *assignWithTake for SiriKitFlowFrameInput(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1C97F25EC((uint64_t)a1);
    uint64_t v6 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_23;
      case 1u:
        uint64_t v8 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
        goto LABEL_23;
      case 4u:
        uint64_t v10 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        goto LABEL_23;
      case 6u:
        uint64_t v11 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        id v12 = (int *)type metadata accessor for USOParse();
        uint64_t v13 = v12[5];
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        uint64_t v16 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
        }
        *(_OWORD *)&a1[v12[6]] = *(_OWORD *)&a2[v12[6]];
        uint64_t v33 = v12[7];
        uint64_t v34 = &a1[v33];
        uint64_t v35 = &a2[v33];
        v34[4] = v35[4];
        *(_DWORD *)uint64_t v34 = *(_DWORD *)v35;
        goto LABEL_23;
      case 7u:
        uint64_t v18 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        uint64_t v19 = (int *)type metadata accessor for USOParse();
        uint64_t v20 = v19[5];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        uint64_t v23 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
          __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
        }
        *(_OWORD *)&a1[v19[6]] = *(_OWORD *)&a2[v19[6]];
        uint64_t v36 = v19[7];
        uint64_t v37 = &a1[v36];
        uint64_t v38 = &a2[v36];
        v37[4] = v38[4];
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        uint64_t v39 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&a1[v39[5]] = *(_OWORD *)&a2[v39[5]];
        *(_OWORD *)&a1[v39[6]] = *(_OWORD *)&a2[v39[6]];
        *(_OWORD *)&a1[v39[7]] = *(_OWORD *)&a2[v39[7]];
        goto LABEL_23;
      case 8u:
        uint64_t v25 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        uint64_t v26 = (int *)type metadata accessor for NLRouterParse();
        *(_OWORD *)&a1[v26[5]] = *(_OWORD *)&a2[v26[5]];
        uint64_t v27 = v26[6];
        uint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        uint64_t v30 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, (uint64_t)v30))
        {
          uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v40 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v28, v29, v40);
          uint64_t v41 = v30[5];
          unint64_t __dst = &v28[v41];
          uint64_t v42 = &v29[v41];
          uint64_t v43 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43))
          {
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v42, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(__dst, v42, v43);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v43);
          }
          *(_OWORD *)&v28[v30[6]] = *(_OWORD *)&v29[v30[6]];
          uint64_t v45 = v30[7];
          uint64_t v46 = &v28[v45];
          uint64_t v47 = &v29[v45];
          v46[4] = v47[4];
          *(_DWORD *)uint64_t v46 = *(_DWORD *)v47;
          __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, (uint64_t)v30);
        }
        *(void *)&a1[v26[7]] = *(void *)&a2[v26[7]];
        goto LABEL_23;
      case 9u:
        uint64_t v32 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v48 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v48] = *(void *)&a2[v48];
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[7];
  uint64_t v50 = &a1[v49];
  int v51 = &a2[v49];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v49]);
  long long v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  *((void *)v50 + 4) = *((void *)v51 + 4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriKitFlowFrameInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9AB5500);
}

uint64_t sub_1C9AB5500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SiriKitFlowFrameInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9AB55A0);
}

void sub_1C9AB55A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t sub_1C9AB5628()
{
  uint64_t result = type metadata accessor for Parse(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C9AB56D4()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();

  return __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
}

uint64_t sub_1C9AB5738(uint64_t a1)
{
  return sub_1C9AB57E8(a1, qword_1EBC7A520, &qword_1EBC7A3B0, (id *)&qword_1EBC7A518);
}

uint64_t sub_1C9AB5764(uint64_t a1)
{
  return sub_1C9AB57E8(a1, qword_1EA5C2910, &qword_1EA5881D8, (id *)&qword_1EA5C2948);
}

uint64_t sub_1C9AB5790(uint64_t a1)
{
  return sub_1C9AB57E8(a1, qword_1EA5C2928, qword_1EA5881C8, (id *)&qword_1EA5C2940);
}

uint64_t sub_1C9AB57BC(uint64_t a1)
{
  return sub_1C9AB57E8(a1, qword_1EBC7A4C0, qword_1EBC79420, (id *)&qword_1EBC7A4A8);
}

uint64_t sub_1C9AB57E8(uint64_t a1, uint64_t *a2, void *a3, id *a4)
{
  uint64_t v7 = sub_1C9BECF88();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1) {
    swift_once();
  }
  id v8 = *a4;
  return sub_1C9BECF98();
}

uint64_t sub_1C9AB5874()
{
  uint64_t v0 = sub_1C9BECF88();
  OUTLINED_FUNCTION_0_2();
  uint64_t v2 = v1;
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_6_0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_1C9BECF18();
  __swift_allocate_value_buffer(v8, qword_1EBC7A4D8);
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A4D8);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v7, v9, v0);
  return sub_1C9BECEF8();
}

uint64_t sub_1C9AB5980()
{
  sub_1C987FF30();
  uint64_t result = sub_1C9BEDEC8();
  qword_1EBC7A518 = result;
  return result;
}

uint64_t sub_1C9AB59E8()
{
  sub_1C987FF30();
  uint64_t result = sub_1C9BEDEC8();
  qword_1EA5C2940 = result;
  return result;
}

uint64_t sub_1C9AB5A54()
{
  sub_1C987FF30();
  uint64_t result = sub_1C9BEDEC8();
  qword_1EBC7A4A8 = result;
  return result;
}

uint64_t sub_1C9AB5AB8()
{
  sub_1C987FF30();
  uint64_t result = sub_1C9BEDEC8();
  qword_1EA5C2948 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_93()
{
  uint64_t v2 = *(void *)(v0 + 56);
  unint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 128);
  return sub_1C9673B38(v2, v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_7_72()
{
  uint64_t v2 = *(void *)(v0 + 64);
  unint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 96);
  return sub_1C9673B38(v2, v3, v4, v5);
}

void static SiriKitLifecycle.abortExecution(_:logger:file:line:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A230);
  MEMORY[0x1F4188790](v12 - 8, v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C96C26E8(a3, (uint64_t)v15);
  uint64_t v16 = sub_1C9BECF88();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16) == 1)
  {
    sub_1C95FE7C0((uint64_t)v15, &qword_1EBC7A230);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v17 = sub_1C9BECF78();
    os_log_type_t v18 = sub_1C9BEDC88();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v30 = a7;
      uint64_t v21 = v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v28 = v22;
      *(_DWORD *)uint64_t v21 = 136315650;
      uint64_t v31 = a1;
      *(void *)&v32[0] = v22;
      uint64_t v23 = sub_1C9BEE1B8();
      int v27 = v19;
      *(void *)&long long v34 = sub_1C95FF228(v23, v24, (uint64_t *)v32);
      int v29 = a6;
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2048;
      *(void *)&long long v34 = v30;
      sub_1C9BEDF68();
      *(_WORD *)(v21 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&long long v34 = sub_1C95FF228(v31, a2, (uint64_t *)v32);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v17, (os_log_type_t)v27, "FatalError at %s:%lu - %s", (uint8_t *)v21, 0x20u);
      uint64_t v25 = v28;
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v25, -1, -1);
      MEMORY[0x1CB78C440](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  swift_bridgeObjectRetain();
  sub_1C9BEC838();
}

void static SiriKitLifecycle._logCrashToEventBus(_:)()
{
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  long long v3 = 0u;
  long long v4 = 0u;
  uint64_t v2 = 0;
  long long v0 = 0u;
  long long v1 = 0u;
  sub_1C9BEC838();
}

ValueMetadata *type metadata accessor for SiriKitLifecycle()
{
  return &type metadata for SiriKitLifecycle;
}

double OUTLINED_FUNCTION_1_90()
{
  return 0.0;
}

uint64_t sub_1C9AB601C()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
    if (v2 <= 0x3F)
    {
      uint64_t inited = swift_initClassMetadata2();
      if (inited) {
        return inited;
      }
      else {
        return 0;
      }
    }
  }
  return v0;
}

uint64_t sub_1C9AB6110(uint64_t a1, long long *a2, long long *a3, long long *a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  sub_1C9AB67DC(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t sub_1C9AB6180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  uint64_t v6 = (char *)&v14 - v5;
  swift_beginAccess();
  uint64_t v7 = *(void (**)(void))(v3 + 16);
  OUTLINED_FUNCTION_20_59();
  v7();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 4)
  {
    char v10 = v6[8];
    *(void *)a1 = *(void *)v6;
    *(unsigned char *)(a1 + 8) = v10;
    *(unsigned char *)(a1 + 40) = 1;
  }
  else if (result == 3)
  {
    swift_getAssociatedTypeWitness();
    type metadata accessor for IntentPromptAnswer();
    type metadata accessor for PromptResult();
    OUTLINED_FUNCTION_112();
    return (*(uint64_t (**)(uint64_t, char *))(v9 + 32))(a1, v6);
  }
  else
  {
    type metadata accessor for SiriKitNeedsDisambiguationFlow.NeedsDisambiguationError();
    swift_getWitnessTable();
    uint64_t v11 = swift_allocError();
    uint64_t v13 = v12;
    OUTLINED_FUNCTION_20_59();
    v7();
    __swift_storeEnumTagSinglePayload(v13, 0, 1, v2);
    *(void *)a1 = v11;
    *(unsigned char *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 40) = 1;
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

void sub_1C9AB63E8()
{
  uint64_t v0 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  MEMORY[0x1F4188790](v0, v1);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

void sub_1C9AB66D0(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 128);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a1, v4);
  swift_endAccess();
  sub_1C9AB63E8();
}

uint64_t sub_1C9AB67DC(uint64_t a1, long long *a2, long long *a3, long long *a4, uint64_t a5)
{
  long long v19 = *(_OWORD *)(a5 + 16);
  uint64_t v10 = *(void *)(a5 + 32);
  char v11 = *(unsigned char *)(a5 + 40);
  uint64_t v12 = *(void *)(a5 + 48);
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v13 + 32))();
  sub_1C95FD5D8(a2, v5 + *(void *)(*(void *)v5 + 104));
  OUTLINED_FUNCTION_74();
  sub_1C95FD5D8(a3, v5 + *(void *)(v14 + 120));
  OUTLINED_FUNCTION_74();
  sub_1C95FD5D8(a4, v5 + *(void *)(v15 + 112));
  OUTLINED_FUNCTION_74();
  uint64_t v17 = v5 + *(void *)(v16 + 128);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)a5;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = v10;
  *(unsigned char *)(v17 + 40) = v11;
  *(void *)(v17 + 48) = v12;
  type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  swift_storeEnumTagMultiPayload();
  return v5;
}

void sub_1C9AB6958(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_0();
  uint64_t v5 = v4;
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(a1, a2, v5, WitnessTable);
}

uint64_t sub_1C9AB69CC()
{
  OUTLINED_FUNCTION_24();
  v1[13] = v2;
  v1[14] = v0;
  uint64_t v3 = *v0;
  v1[15] = *(void *)(*v0 + 88);
  v1[16] = *(void *)(v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[17] = AssociatedTypeWitness;
  OUTLINED_FUNCTION_5_0(AssociatedTypeWitness);
  v1[18] = v5;
  v1[19] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  v1[20] = v6;
  OUTLINED_FUNCTION_5_0(v6);
  v1[21] = v7;
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9AB6AFC()
{
  uint64_t v71 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 112) + *(void *)(**(void **)(v0 + 112) + 128);
  swift_beginAccess();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v1, v4, v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(uint64_t **)(v0 + 184);
      uint64_t v7 = *v6;
      *(void *)(v0 + 192) = *v6;
      uint64_t v8 = v6[1];
      *(void *)(v0 + 200) = v8;
      uint64_t v9 = v6[2];
      uint64_t v10 = v6[3];
      *(void *)(v0 + 208) = v10;
      uint64_t v11 = v6[4];
      char v12 = *((unsigned char *)v6 + 40);
      uint64_t v13 = v6[6];
      *(void *)(v0 + 216) = v13;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C9BECF88();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EBC7A520);
      uint64_t v15 = (void *)sub_1C9BECF78();
      os_log_type_t v16 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v16))
      {
        uint64_t v17 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v17);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v18, v19, "SiriKitNeedsDisambiguationFlow building SiriKitDisambiguationList");
        OUTLINED_FUNCTION_11_4();
      }

      *(void *)(v0 + 16) = v7;
      *(void *)(v0 + 24) = v8;
      *(void *)(v0 + 32) = v9;
      *(void *)(v0 + 40) = v10;
      *(void *)(v0 + 48) = v11;
      *(unsigned char *)(v0 + 56) = v12;
      *(void *)(v0 + 64) = v13;
      swift_task_alloc();
      OUTLINED_FUNCTION_90_0();
      *(void *)(v0 + 224) = v20;
      *uint64_t v20 = v21;
      v20[1] = sub_1C9AB7268;
      OUTLINED_FUNCTION_94();
      return sub_1C9AB73C0(v22, v23);
    case 2u:
      long long v34 = *(uint64_t **)(v0 + 184);
      uint64_t v36 = *(void *)(v0 + 144);
      uint64_t v35 = *(void *)(v0 + 152);
      uint64_t v37 = *(void *)(v0 + 136);
      uint64_t v38 = *v34;
      type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v35, (char *)v34 + *(int *)(TupleTypeMetadata2 + 48), v37);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C9BECF88();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EBC7A520);
      uint64_t v41 = sub_1C9BECF78();
      os_log_type_t v42 = sub_1C9BEDC78();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v43 = 0;
        _os_log_impl(&dword_1C95F9000, v41, v42, "SiriKitNeedsDisambiguationFlow handling disambiguation", v43, 2u);
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v44 = *(void *)(v0 + 152);

      sub_1C9AB7C00(v38, v44);
    case 3u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_1C9BECF88();
      __swift_project_value_buffer(v45, (uint64_t)qword_1EBC7A520);
      uint64_t v46 = (void *)sub_1C9BECF78();
      os_log_type_t v47 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v47))
      {
        uint64_t v48 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v48);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v49, v50, "SiriKitNeedsDisambiguationFlow is complete. Exiting");
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v51 = *(void *)(v0 + 184);
      uint64_t v52 = *(void *)(v0 + 160);
      uint64_t v53 = *(void *)(v0 + 168);
      uint64_t v54 = *(void *)(v0 + 104);

      double v55 = static ExecuteResponse.complete()(v54);
      (*(void (**)(uint64_t, uint64_t, double))(v53 + 8))(v51, v52, v55);
      break;
    case 4u:

      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v56 = sub_1C9BECF88();
      __swift_project_value_buffer(v56, (uint64_t)qword_1EBC7A520);
      uint64_t v57 = (void *)sub_1C9BECF78();
      os_log_type_t v58 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v58))
      {
        uint64_t v59 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v59);
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v60, v61, "SiriKitNeedsDisambiguationFlow is complete in an error state. Exiting");
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v62 = *(void *)(v0 + 104);

      static ExecuteResponse.complete()(v62);
      break;
    default:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_1C9BECF88();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
      swift_retain_n();
      int v27 = sub_1C9BECF78();
      os_log_type_t v28 = sub_1C9BEDC88();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = *(void *)(v0 + 176);
        uint64_t v30 = *(void *)(v0 + 160);
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136315138;
        v5(v29, v4, v30);
        swift_getWitnessTable();
        uint64_t v32 = sub_1C9BED5E8();
        *(void *)(v0 + 96) = sub_1C95FF228(v32, v33, &v70);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl(&dword_1C95F9000, v27, v28, "SiriKitNeedsDisambiguationFlow called in unexpected state %s. Transitioning to error.", v31, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        swift_release_n();
      }

      uint64_t v63 = *(void *)(v0 + 176);
      uint64_t v64 = *(void *)(v0 + 160);
      type metadata accessor for SiriKitNeedsDisambiguationFlow.NeedsDisambiguationError();
      swift_getWitnessTable();
      uint64_t v65 = swift_allocError();
      uint64_t v67 = v66;
      v5(v66, v4, v64);
      __swift_storeEnumTagSinglePayload(v67, 0, 1, v64);
      *(void *)uint64_t v63 = v65;
      *(unsigned char *)(v63 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1C9AB66D0(v63);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_94();
  __asm { BRAA            X1, X16 }
  return result;
}

uint64_t sub_1C9AB7268()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AB7330()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 216);
  uint64_t v2 = *(void **)(v0 + 200);
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t sub_1C9AB73C0(uint64_t a1, uint64_t *a2)
{
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v2;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 80);
  *(void *)(v3 + 184) = v6;
  uint64_t v7 = *(void *)(v5 + 88);
  *(void *)(v3 + 192) = v7;
  *(void *)(v3 + 200) = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = *(void *)(v6 - 8);
  *(void *)(v3 + 224) = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v3 + 232) = AssociatedTypeWitness;
  *(void *)(v3 + 240) = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = swift_task_alloc();
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  *(void *)(v3 + 248) = v9;
  *(void *)(v3 + 256) = v10;
  uint64_t v12 = a2[2];
  uint64_t v13 = a2[3];
  *(void *)(v3 + 264) = v11;
  *(void *)(v3 + 272) = v12;
  uint64_t v14 = a2[4];
  *(void *)(v3 + 280) = v13;
  *(void *)(v3 + 288) = v14;
  char v15 = *((unsigned char *)a2 + 40);
  *(unsigned char *)(v3 + 336) = v15;
  uint64_t v16 = a2[6];
  *(void *)(v3 + 296) = v16;
  *(void *)(v3 + 304) = *(void *)(v5 + 96);
  *(void *)(v3 + 16) = v10;
  *(void *)(v3 + 24) = v11;
  *(void *)(v3 + 32) = v12;
  *(void *)(v3 + 40) = v13;
  *(void *)(v3 + 48) = v14;
  *(unsigned char *)(v3 + 56) = v15;
  *(void *)(v3 + 64) = v16;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 72) + **(int **)(v7 + 72));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 312) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_1C9AB7660;
  return v19(v9, v3 + 16, v6, v7);
}

uint64_t sub_1C9AB7660()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 320) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9AB773C()
{
  uint64_t v29 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "SiriKitNeedsDisambiguationFlow successfully built the disambiguation list. Transitioning to readyToDisambiguate");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v7 = (void *)v2;
  uint64_t v8 = *(void *)(v0 + 304);
  char v20 = *(unsigned char *)(v0 + 336);
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v19 = *(void *)(v0 + 288);
  uint64_t v10 = *(void *)(v0 + 264);
  uint64_t v18 = *(void *)(v0 + 272);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v21 = *(void *)(v0 + 296);
  uint64_t v24 = *(void *)(v0 + 240);
  uint64_t v25 = *(void *)(v0 + 248);
  uint64_t v12 = *(void *)(v0 + 224);
  uint64_t v13 = *(void *)(v0 + 216);
  uint64_t v22 = *(void *)(v0 + 232);
  uint64_t v23 = *(uint64_t **)(v0 + 208);
  uint64_t v15 = *(void *)(v0 + 176);
  uint64_t v14 = *(void *)(v0 + 184);

  type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15 + v8, v14);
  v26[0] = v11;
  v26[1] = v10;
  v26[2] = v18;
  v26[3] = v9;
  v26[4] = v19;
  char v27 = v20;
  uint64_t v28 = v21;
  sub_1C95FD654(v15 + *(void *)(*(void *)v15 + 104), v0 + 128);
  uint64_t v16 = sub_1C9657E2C(v12, (uint64_t)v26, (long long *)(v0 + 128));
  uint64_t v17 = (char *)v23 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *uint64_t v23 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v17, v25, v22);
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

uint64_t sub_1C9AB79F8()
{
  OUTLINED_FUNCTION_24();
  char v1 = *(unsigned char *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 296);
  long long v4 = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 88) = v4;
  *(void *)(v0 + 104) = v3;
  *(unsigned char *)(v0 + 112) = v1;
  *(void *)(v0 + 120) = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C9AB7AB4;
  uint64_t v6 = *(void *)(v0 + 320);
  return sub_1C9AB84C0(v6, v0 + 72);
}

uint64_t sub_1C9AB7AB4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AB7B7C()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = *(void *)(v0 + 168);

  static ExecuteResponse.complete()(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v2();
}

void sub_1C9AB7C00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(*(void *)v2 + 80);
  uint64_t v7 = *(void *)(*(void *)v2 + 88);
  uint64_t v42 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  MEMORY[0x1F4188790](v42, v8);
  uint64_t v41 = (char *)&v39 - v9;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
  uint64_t v43 = swift_checkMetadataState();
  uint64_t v44 = a2;
  uint64_t v12 = (void *)&unk_1EBC7A000;
  if (v11(v43, AssociatedConformanceWitness))
  {
    uint64_t v40 = a1;
    uint64_t v13 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
    uint64_t v14 = v13[3];
    uint64_t v15 = v13[4];
    __swift_project_boxed_opaque_existential_1(v13, v14);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15) & 1) != 0
      || (uint64_t v16 = v13[3],
          uint64_t v17 = v13[4],
          __swift_project_boxed_opaque_existential_1(v13, v16),
          ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17) & 1) != 0))
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_1C9BECF88();
      __swift_project_value_buffer(v18, (uint64_t)qword_1EBC7A520);
      uint64_t v19 = sub_1C9BECF78();
      os_log_type_t v20 = sub_1C9BEDC78();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl(&dword_1C95F9000, v19, v20, "SiriKitNeedsDisambiguationFlow cannot request device unlock. Initiating Handoff", v21, 2u);
        MEMORY[0x1CB78C440](v21, -1, -1);
      }

      type metadata accessor for HandoffSessionToCompanionFlowAsync();
      uint64_t v45 = v40;
      sub_1C95FD654((uint64_t)v13, (uint64_t)v47);
      sub_1C95FD654(v3 + *(void *)(*(void *)v3 + 120), (uint64_t)v46);
      type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
      sub_1C9BEC838();
    }
    uint64_t v22 = v13[3];
    uint64_t v23 = v13[4];
    __swift_project_boxed_opaque_existential_1(v13, v22);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v47, v6, v7);
    char v24 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 248))(v47, v22, v23);
    sub_1C9743100((uint64_t)v47);
    uint64_t v12 = &unk_1EBC7A000;
    if ((v24 & 1) == 0)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C9BECF88();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
      long long v34 = sub_1C9BECF78();
      os_log_type_t v35 = sub_1C9BEDC78();
      BOOL v36 = os_log_type_enabled(v34, v35);
      uint64_t v37 = v40;
      if (v36)
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_1C95F9000, v34, v35, "SiriKitNeedsDisambiguationFlow requires that the device is unlocked to proceed. Pushing an UnlockDeviceFlow. Transitioning to unlockRequestSent.", v38, 2u);
        MEMORY[0x1CB78C440](v38, -1, -1);
      }

      type metadata accessor for UnlockDeviceFlowAsync(0);
      sub_1C95FD654((uint64_t)v13, (uint64_t)v47);
      sub_1C95FD654(v3 + *(void *)(*(void *)v3 + 120), (uint64_t)v46);
      uint64_t v45 = v37;
      type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
      sub_1C9BEC838();
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C9BECF88();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
    uint64_t v26 = sub_1C9BECF78();
    os_log_type_t v27 = sub_1C9BEDC78();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_1C95F9000, v26, v27, "DisambiguationList requested an unlock but we are already unlocked", v28, 2u);
      MEMORY[0x1CB78C440](v28, -1, -1);
    }
  }
  if (v12[119] != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1C9BECF88();
  __swift_project_value_buffer(v29, (uint64_t)qword_1EBC7A520);
  uint64_t v30 = sub_1C9BECF78();
  os_log_type_t v31 = sub_1C9BEDC78();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl(&dword_1C95F9000, v30, v31, "SiriKitNeedsDisambiguationFlow pushing a PromptForDisambiguationFlow to handle disambiguation.", v32, 2u);
    MEMORY[0x1CB78C440](v32, -1, -1);
  }

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for IntentPromptAnswer();
  type metadata accessor for PromptForDisambiguationFlowAsync();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v43, AssociatedConformanceWitness);
  sub_1C95FD654(v3 + *(void *)(*(void *)v3 + 120), (uint64_t)v47);
  type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
  sub_1C9BEC838();
}

uint64_t sub_1C9AB84C0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v2;
  *(void *)(v3 + 272) = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  *(void *)(v3 + 280) = swift_task_alloc();
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v5;
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 32);
  *(void *)(v3 + 64) = *(void *)(a2 + 48);
  return MEMORY[0x1F4188298](sub_1C9AB859C, 0, 0);
}

uint64_t sub_1C9AB859C()
{
  uint64_t v22 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  id v3 = v1;
  id v4 = v1;
  long long v5 = sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC88();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[32];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_getErrorValue();
    uint64_t v10 = sub_1C9BEE6E8();
    v0[31] = sub_1C95FF228(v10, v11, &v21);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v5, v6, "SiriKitNeedsDisambiguationFlow encountered an error while building the disambiguation list: %s", v9, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  uint64_t v13 = v0[32];
  uint64_t v12 = v0[33];
  uint64_t v14 = (void *)(v12 + *(void *)(*(void *)v12 + 120));
  uint64_t v15 = v14[3];
  uint64_t v16 = v14[4];
  __swift_project_boxed_opaque_existential_1(v14, v15);
  uint64_t v17 = (void *)swift_task_alloc();
  v0[36] = v17;
  v17[2] = v12;
  v17[3] = v13;
  v17[4] = v0 + 2;
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  v0[37] = v18;
  *uint64_t v18 = v19;
  v18[1] = sub_1C9AB8848;
  return sub_1C962F1B0((uint64_t)(v0 + 9), (uint64_t)&unk_1EA598AF8, (uint64_t)v17, v15, v16);
}

uint64_t sub_1C9AB8848()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *id v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *os_log_type_t v6 = v5;
  *(void *)(v3 + 304) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9AB892C()
{
  uint64_t v2 = *(void *)(v0 + 104);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 72), *(void *)(v0 + 96));
  if (sub_1C9632DB0())
  {
    uint64_t v3 = (void *)(*(void *)(v0 + 264) + *(void *)(**(void **)(v0 + 264) + 104));
    *(unsigned char *)(v0 + 337) = 6;
    id v4 = objc_msgSend(*(id *)(v0 + 24), sel_typeName);
    sub_1C9BED568();
    uint64_t v6 = v5;

    *(void *)(v0 + 312) = v6;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 128) = 0u;
    *(void *)(v0 + 144) = 0;
    *(_OWORD *)(v0 + 112) = 0u;
    swift_getErrorValue();
    sub_1C99F634C(*(void *)(v0 + 216));
    *(void *)(v0 + 320) = v7;
    *(unsigned char *)(v0 + 336) = 83;
    __swift_project_boxed_opaque_existential_1(v3, v3[3]);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1C9AB8B80;
    OUTLINED_FUNCTION_94();
    __asm { BR              X8 }
  }
  OUTLINED_FUNCTION_10_69();
  id v11 = v1;
  sub_1C9AB66D0(v2);
}

uint64_t sub_1C9AB8B80()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  uint64_t v3 = v1 + 112;
  uint64_t v4 = v1 + 152;
  uint64_t v5 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C9697900(v3, (uint64_t *)&unk_1EBC789D0);
  sub_1C9697900(v4, &qword_1EBC78700);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

void sub_1C9AB8CAC()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_10_69();
  id v2 = v1;
  sub_1C9AB66D0(v0);
}

void sub_1C9AB8D2C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 280);
  swift_task_dealloc();
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  id v3 = v1;
  sub_1C9AB66D0(v2);
}

uint64_t sub_1C9AB8DCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v4[14] = *a2;
  return MEMORY[0x1F4188298](sub_1C9AB8E18, 0, 0);
}

uint64_t sub_1C9AB8E18()
{
  uint64_t v1 = *(uint64_t **)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  long long v5 = *(_OWORD *)((char *)v1 + 25);
  *(_OWORD *)(v0 + 16) = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v0 + 25) = v5;
  long long v6 = *(_OWORD *)((char *)v1 + 25);
  *(_OWORD *)(v0 + 48) = *((_OWORD *)v1 + 1);
  *(_OWORD *)(v0 + 57) = v6;
  uint64_t v7 = *(void *)(*(void *)(v2 + 88) + 8);
  uint64_t v8 = *(int **)(v7 + 24);
  sub_1C96EBF74(v0 + 16);
  uint64_t v9 = *(void *)(v2 + 80);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v0 + 120) = v10;
  *uint64_t v10 = v11;
  v10[1] = sub_1C9AB8F90;
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 80);
  return v15(v13, v12, v3, v4, v0 + 48, v9, v7);
}

uint64_t sub_1C9AB8F90()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = v2 + 16;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *long long v6 = v5;
  *(void *)(v7 + 128) = v0;
  swift_task_dealloc();
  sub_1C96EB244(v4);
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v11();
  }
}

void sub_1C9AB9094()
{
}

void sub_1C9AB90D4(void *a1, char a2)
{
}

void sub_1C9AB90FC(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = *(uint8_t **)(*v3 + 80);
  uint64_t v51 = *(void *)(*v3 + 88);
  uint64_t v52 = v7;
  uint64_t v8 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v8, v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v17 = (uint64_t)v3 + *(void *)(v6 + 128);
  swift_beginAccess();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v16, v17, v8);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    if (a2)
    {
      id v32 = a1;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C9BECF88();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
      id v34 = a1;
      id v35 = a1;
      BOOL v36 = sub_1C9BECF78();
      os_log_type_t v37 = sub_1C9BEDC88();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = v13;
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        uint64_t v40 = swift_slowAlloc();
        uint64_t v54 = v40;
        *(_DWORD *)uint64_t v39 = 136315138;
        uint64_t v52 = v39 + 4;
        swift_getErrorValue();
        uint64_t v41 = sub_1C9BEE6E8();
        uint64_t v53 = sub_1C95FF228(v41, v42, &v54);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C97183F4(a1, 1);
        sub_1C97183F4(a1, 1);
        _os_log_impl(&dword_1C95F9000, v36, v37, "SiriKitNeedsDisambiguationFlow received an unexpected error while trying to unlock the device: %s", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v40, -1, -1);
        uint64_t v43 = v39;
        uint64_t v13 = v38;
        MEMORY[0x1CB78C440](v43, -1, -1);
      }
      else
      {
        sub_1C97183F4(a1, 1);
        sub_1C97183F4(a1, 1);
      }

      *(void *)uint64_t v13 = a1;
      unsigned char v13[8] = 0;
      swift_storeEnumTagMultiPayload();
      id v47 = a1;
      sub_1C9AB66D0((uint64_t)v13);
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C9BECF88();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
    os_log_type_t v20 = sub_1C9BECF78();
    os_log_type_t v21 = sub_1C9BEDC78();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1C95F9000, v20, v21, "SiriKitNeedsDisambiguationFlow handed session off to companion device.", v22, 2u);
      MEMORY[0x1CB78C440](v22, -1, -1);
    }

    type metadata accessor for SiriKitNeedsDisambiguationFlow.NeedsDisambiguationError();
    swift_getWitnessTable();
    uint64_t v23 = swift_allocError();
    __swift_storeEnumTagSinglePayload(v24, 1, 1, v8);
    *(void *)uint64_t v13 = v23;
    unsigned char v13[8] = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_1C9BECF88();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
    swift_retain_n();
    uint64_t v26 = sub_1C9BECF78();
    os_log_type_t v27 = sub_1C9BEDC88();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v50 = v13;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v48 = v28 + 4;
      v18(v50, v17, v8);
      swift_getWitnessTable();
      uint64_t v29 = sub_1C9BED5E8();
      uint64_t v53 = sub_1C95FF228(v29, v30, &v54);
      sub_1C9BEDF68();
      swift_release_n();
      uint64_t v13 = v50;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v26, v27, "SiriKitNeedsDisambiguationFlow is in an unexpected state: %s", v28, 0xCu);
      uint64_t v31 = v49;
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v31, -1, -1);
      MEMORY[0x1CB78C440](v28, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    type metadata accessor for SiriKitNeedsDisambiguationFlow.NeedsDisambiguationError();
    swift_getWitnessTable();
    uint64_t v44 = swift_allocError();
    uint64_t v46 = v45;
    v18((char *)v45, v17, v8);
    __swift_storeEnumTagSinglePayload(v46, 0, 1, v8);
    *(void *)uint64_t v13 = v44;
    unsigned char v13[8] = 0;
  }
  swift_storeEnumTagMultiPayload();
  sub_1C9AB66D0((uint64_t)v13);
}

void sub_1C9AB97F4()
{
}

void sub_1C9AB9834(void *a1, char a2)
{
}

void sub_1C9AB985C(void *a1, int a2)
{
  int v31 = a2;
  uint64_t v29 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4, v6);
  uint64_t v33 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7, v9);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness, v13);
  unint64_t v30 = (char *)&v29 - v14;
  uint64_t v15 = (char *)v2 + *(void *)(v3 + 128);
  swift_beginAccess();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v11, v15, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v29;
    uint64_t v18 = *(void *)v11;
    type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v20 = v32;
    os_log_type_t v21 = v30;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, &v11[*(int *)(TupleTypeMetadata2 + 48)], AssociatedTypeWitness);
    uint64_t v22 = (uint64_t)v33;
    if ((v31 & 1) == 0)
    {
      uint64_t v23 = (char *)v33 + *(int *)(TupleTypeMetadata2 + 48);
      *uint64_t v33 = v18;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, v21, AssociatedTypeWitness);
      swift_storeEnumTagMultiPayload();
      sub_1C9BEC838();
    }
    *uint64_t v33 = (uint64_t)v17;
    *(unsigned char *)(v22 + 8) = 0;
    swift_storeEnumTagMultiPayload();
    id v28 = v17;
    sub_1C9AB66D0(v22);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  type metadata accessor for SiriKitNeedsDisambiguationFlow.NeedsDisambiguationError();
  swift_getWitnessTable();
  uint64_t v24 = swift_allocError();
  uint64_t v26 = v25;
  v16((char *)v25, v15, v4);
  __swift_storeEnumTagSinglePayload(v26, 0, 1, v4);
  uint64_t v27 = (uint64_t)v33;
  *uint64_t v33 = v24;
  *(unsigned char *)(v27 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  sub_1C9AB66D0(v27);
}

void sub_1C9AB9C18()
{
}

void sub_1C9AB9C58(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)&v7 - v4;
  swift_getAssociatedTypeWitness();
  type metadata accessor for IntentPromptAnswer();
  uint64_t v6 = type metadata accessor for PromptResult();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(v5, a1, v6);
  swift_storeEnumTagMultiPayload();
  sub_1C9AB66D0((uint64_t)v5);
}

unint64_t sub_1C9AB9D8C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1, v1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v3 + 16))(v5);
  unint64_t v6 = 0x6C616974696E692ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v6 = 0xD000000000000012;
      swift_release();
      type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(&v5[*(int *)(TupleTypeMetadata2 + 48)], AssociatedTypeWitness);
      break;
    case 2u:
      swift_release();
      type metadata accessor for NeedsDisambiguationFlowStrategyAdapter();
      uint64_t v9 = swift_getAssociatedTypeWitness();
      uint64_t v10 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(&v5[*(int *)(v10 + 48)], v9);
      unint64_t v6 = 0xD000000000000014;
      break;
    case 3u:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t v6 = 0x74656C706D6F632ELL;
      break;
    case 4u:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t v6 = 0x726F7272652ELL;
      break;
    case 5u:
      return v6;
    case 6u:
      unint64_t v6 = 0xD000000000000012;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a1);
      unint64_t v6 = 0x646574726174732ELL;
      break;
  }
  return v6;
}

uint64_t sub_1C9ABA0B8()
{
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v1();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 104));
  OUTLINED_FUNCTION_74();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(v2 + 112));
  OUTLINED_FUNCTION_74();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(v3 + 120));
  OUTLINED_FUNCTION_74();
  type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_37();
  v4();
  return v0;
}

uint64_t sub_1C9ABA1DC()
{
  sub_1C9ABA0B8();
  OUTLINED_FUNCTION_4_0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriKitNeedsDisambiguationFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SiriKitNeedsDisambiguationFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9ABA244()
{
  uint64_t v4 = "8";
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v3;
    swift_getTupleTypeLayout2();
    unint64_t v6 = &v2;
    uint64_t v7 = &unk_1C9C0C5E0;
    uint64_t v8 = &unk_1C9C0C5F8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1C9ABA340(char *a1, unsigned __int8 *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v4 + 64) <= 0x38) {
    unint64_t v7 = 56;
  }
  else {
    unint64_t v7 = ((v5 + 8) & ~(unint64_t)v5) + *(void *)(v4 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_8;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  uint64_t v10 = 2;
  if (v9 > 0xFFFA) {
    uint64_t v10 = 4;
  }
  if (v9 <= 0xFA) {
LABEL_8:
  }
    uint64_t v10 = 1;
  unint64_t v11 = v10 + v7;
  int v12 = v5 & 0x100000;
  if (v6 > 7 || v12 != 0 || v11 > 0x18)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  if (v7 > 3) {
    goto LABEL_21;
  }
  unsigned int v15 = ((1 << v8) + 1) >> v8;
  if (v15 > 0xFFFA)
  {
    unsigned int v16 = *(_DWORD *)&a2[v7];
  }
  else
  {
    if (v15 <= 0xFA)
    {
LABEL_21:
      unsigned int v16 = a2[v7];
      goto LABEL_24;
    }
    unsigned int v16 = *(unsigned __int16 *)&a2[v7];
  }
LABEL_24:
  unsigned int v17 = v16 - 5;
  if (v16 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v18 = v7;
    }
    else {
      uint64_t v18 = 4;
    }
    switch(v18)
    {
      case 1:
        int v19 = *a2;
        goto LABEL_33;
      case 2:
        int v19 = *(unsigned __int16 *)a2;
        goto LABEL_33;
      case 3:
        int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_33;
      case 4:
        int v19 = *(_DWORD *)a2;
LABEL_33:
        if (v7 < 4) {
          v19 |= v17 << v8;
        }
        unsigned int v16 = v19 + 5;
        break;
      default:
        break;
    }
  }
  switch(v16)
  {
    case 0u:
      uint64_t v20 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v20;
      uint64_t v21 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v21;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      a1[40] = a2[40];
      *((void *)a1 + 6) = *((void *)a2 + 6);
      sub_1C9BEC838();
    case 1u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 2u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 3u:
      unsigned int v22 = a2[40];
      if (v22 >= 2) {
        unsigned int v22 = *(_DWORD *)a2 + 2;
      }
      if (v22 == 1)
      {
        uint64_t v30 = *(void *)a2;
        id v31 = *(id *)a2;
        *(void *)a1 = v30;
        a1[8] = a2[8];
        a1[40] = 1;
      }
      else if (v22)
      {
        long long v32 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v32;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        uint64_t v23 = *((void *)a2 + 3);
        if (v23)
        {
          *((void *)a1 + 3) = v23;
          (**(void (***)(void *, unsigned __int8 *))(v23 - 8))(a1, a2);
        }
        else
        {
          long long v34 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v34;
        }
        id v35 = (void *)*((void *)a2 + 4);
        *((void *)a1 + 4) = v35;
        a1[40] = 0;
        id v36 = v35;
      }
      if (v7 > 3) {
        goto LABEL_64;
      }
      unsigned int v37 = ((1 << v8) + 1) >> v8;
      if (v37 > 0xFFFA)
      {
        int v33 = 3;
        goto LABEL_67;
      }
      if (v37 <= 0xFA)
      {
LABEL_64:
        char v27 = 3;
        goto LABEL_65;
      }
      __int16 v38 = 3;
      goto LABEL_70;
    case 4u:
      id v24 = *(id *)a2;
      id v25 = *(id *)a2;
      *(void *)a1 = v24;
      a1[8] = a2[8];
      if (v7 > 3) {
        goto LABEL_48;
      }
      unsigned int v26 = ((1 << v8) + 1) >> v8;
      if (v26 > 0xFFFA)
      {
        int v33 = 4;
LABEL_67:
        *(_DWORD *)&a1[v7] = v33;
      }
      else if (v26 > 0xFA)
      {
        __int16 v38 = 4;
LABEL_70:
        *(_WORD *)&a1[v7] = v38;
      }
      else
      {
LABEL_48:
        char v27 = 4;
LABEL_65:
        a1[v7] = v27;
      }
      return a1;
    default:
      if (v7 > 3) {
        goto LABEL_53;
      }
      unsigned int v28 = ((1 << v8) + 1) >> v8;
      uint64_t v29 = 2;
      if (v28 > 0xFFFA) {
        uint64_t v29 = 4;
      }
      if (v28 <= 0xFA) {
LABEL_53:
      }
        uint64_t v29 = 1;
      memcpy(a1, a2, v29 + v7);
      return a1;
  }
}

void sub_1C9ABA89C(id *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80);
  unint64_t v4 = ((v3 + 8) & ~v3) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  char v5 = 8 * v4;
  if (v4 > 3) {
    goto LABEL_4;
  }
  unsigned int v7 = ((1 << v5) + 1) >> v5;
  if (v7 > 0xFFFA)
  {
    unsigned int v6 = *(_DWORD *)((char *)a1 + v4);
  }
  else
  {
    if (v7 <= 0xFA)
    {
LABEL_4:
      unsigned int v6 = *((unsigned __int8 *)a1 + v4);
      goto LABEL_9;
    }
    unsigned int v6 = *(unsigned __int16 *)((char *)a1 + v4);
  }
LABEL_9:
  unsigned int v8 = v6 - 5;
  if (v6 >= 5)
  {
    if (v4 <= 3) {
      uint64_t v9 = v4;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *(unsigned __int8 *)a1;
        goto LABEL_18;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        goto LABEL_18;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_18:
        int v11 = (v10 | (v8 << v5)) + 5;
        unsigned int v6 = v10 + 5;
        if (v4 < 4) {
          unsigned int v6 = v11;
        }
        break;
      default:
        break;
    }
  }
  switch(v6)
  {
    case 0u:
      swift_release();

      swift_bridgeObjectRelease();
      id v13 = a1[6];
      goto LABEL_32;
    case 1u:
    case 2u:
      uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
      swift_release();
      int v12 = *(void (**)(unint64_t, uint64_t))(v15 + 8);
      v12(((unint64_t)a1 + v3 + 8) & ~v3, AssociatedTypeWitness);
      return;
    case 3u:
      unsigned int v14 = *((unsigned __int8 *)a1 + 40);
      if (v14 >= 2) {
        unsigned int v14 = *(_DWORD *)a1 + 2;
      }
      if (v14 == 1) {
        goto LABEL_35;
      }
      if (v14) {
        return;
      }
      if (a1[3]) {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      id v13 = a1[4];
LABEL_32:
LABEL_34:

      return;
    case 4u:
LABEL_35:
      id v13 = *a1;
      goto LABEL_34;
    default:
      return;
  }
}

char *sub_1C9ABAB4C(char *a1, unsigned __int8 *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  if (((v5 + 8) & (unint64_t)~v5) + *(void *)(v4 + 64) <= 0x38) {
    uint64_t v6 = 56;
  }
  else {
    uint64_t v6 = ((v5 + 8) & ~v5) + *(void *)(v4 + 64);
  }
  char v7 = 8 * v6;
  if (v6 > 3) {
    goto LABEL_7;
  }
  unsigned int v8 = ((1 << v7) + 1) >> v7;
  if (v8 > 0xFFFA)
  {
    unsigned int v9 = *(_DWORD *)&a2[v6];
  }
  else
  {
    if (v8 <= 0xFA)
    {
LABEL_7:
      unsigned int v9 = a2[v6];
      goto LABEL_10;
    }
    unsigned int v9 = *(unsigned __int16 *)&a2[v6];
  }
LABEL_10:
  unsigned int v10 = v9 - 5;
  if (v9 >= 5)
  {
    if (v6 <= 3) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << v7)) + 5;
        unsigned int v9 = v12 + 5;
        if (v6 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  switch(v9)
  {
    case 0u:
      uint64_t v14 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v14;
      uint64_t v15 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v15;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      a1[40] = a2[40];
      *((void *)a1 + 6) = *((void *)a2 + 6);
      sub_1C9BEC838();
    case 1u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 2u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 3u:
      unsigned int v16 = a2[40];
      if (v16 >= 2) {
        unsigned int v16 = *(_DWORD *)a2 + 2;
      }
      if (v16 == 1)
      {
        uint64_t v24 = *(void *)a2;
        id v25 = *(id *)a2;
        *(void *)a1 = v24;
        a1[8] = a2[8];
        a1[40] = 1;
      }
      else if (v16)
      {
        long long v26 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v26;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        uint64_t v17 = *((void *)a2 + 3);
        if (v17)
        {
          *((void *)a1 + 3) = v17;
          (**(void (***)(void *, unsigned __int8 *))(v17 - 8))(a1, a2);
        }
        else
        {
          long long v28 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v28;
        }
        uint64_t v29 = (void *)*((void *)a2 + 4);
        *((void *)a1 + 4) = v29;
        a1[40] = 0;
        id v30 = v29;
      }
      if (v6 > 3) {
        goto LABEL_49;
      }
      unsigned int v31 = ((1 << v7) + 1) >> v7;
      if (v31 > 0xFFFA)
      {
        int v27 = 3;
        goto LABEL_52;
      }
      if (v31 <= 0xFA)
      {
LABEL_49:
        char v21 = 3;
        goto LABEL_50;
      }
      __int16 v32 = 3;
      goto LABEL_55;
    case 4u:
      id v18 = *(id *)a2;
      id v19 = *(id *)a2;
      *(void *)a1 = v18;
      a1[8] = a2[8];
      if (v6 > 3) {
        goto LABEL_33;
      }
      unsigned int v20 = ((1 << v7) + 1) >> v7;
      if (v20 > 0xFFFA)
      {
        int v27 = 4;
LABEL_52:
        *(_DWORD *)&a1[v6] = v27;
      }
      else if (v20 > 0xFA)
      {
        __int16 v32 = 4;
LABEL_55:
        *(_WORD *)&a1[v6] = v32;
      }
      else
      {
LABEL_33:
        char v21 = 4;
LABEL_50:
        a1[v6] = v21;
      }
      return a1;
    default:
      if (v6 > 3) {
        goto LABEL_38;
      }
      unsigned int v22 = ((1 << v7) + 1) >> v7;
      uint64_t v23 = 2;
      if (v22 > 0xFFFA) {
        uint64_t v23 = 4;
      }
      if (v22 <= 0xFA) {
LABEL_38:
      }
        uint64_t v23 = 1;
      memcpy(a1, a2, v23 + v6);
      return a1;
  }
}

unsigned __int8 *sub_1C9ABB038(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v5 + 64) <= 0x38) {
    uint64_t v7 = 56;
  }
  else {
    uint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_8;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  if (v9 > 0xFFFA)
  {
    unsigned int v10 = *(_DWORD *)&a1[v7];
  }
  else
  {
    if (v9 <= 0xFA)
    {
LABEL_8:
      unsigned int v10 = a1[v7];
      goto LABEL_11;
    }
    unsigned int v10 = *(unsigned __int16 *)&a1[v7];
  }
LABEL_11:
  unsigned int v11 = v10 - 5;
  if (v10 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        goto LABEL_20;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v13 = *(_DWORD *)a1;
LABEL_20:
        if (v7 < 4) {
          v13 |= v11 << v8;
        }
        unsigned int v10 = v13 + 5;
        break;
      default:
        break;
    }
  }
  switch(v10)
  {
    case 0u:
      swift_release();

      swift_bridgeObjectRelease();
      uint64_t v14 = (void *)*((void *)a1 + 6);
      goto LABEL_33;
    case 1u:
    case 2u:
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))((unint64_t)&a1[v6 + 8] & ~v6, AssociatedTypeWitness);
      break;
    case 3u:
      unsigned int v15 = a1[40];
      if (v15 >= 2) {
        unsigned int v15 = *(_DWORD *)a1 + 2;
      }
      if (v15 == 1) {
        goto LABEL_34;
      }
      if (!v15)
      {
        if (*((void *)a1 + 3)) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        }
        uint64_t v14 = (void *)*((void *)a1 + 4);
LABEL_33:
      }
      break;
    case 4u:
LABEL_34:

      break;
    default:
      break;
  }
  if (v7 <= 3)
  {
    unsigned int v16 = ((1 << v8) + 1) >> v8;
    if (v16 > 0xFFFA)
    {
      unsigned int v17 = *(_DWORD *)&a2[v7];
      goto LABEL_41;
    }
    if (v16 > 0xFA)
    {
      unsigned int v17 = *(unsigned __int16 *)&a2[v7];
      goto LABEL_41;
    }
  }
  unsigned int v17 = a2[v7];
LABEL_41:
  unsigned int v18 = v17 - 5;
  if (v17 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v19 = v7;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        goto LABEL_50;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        goto LABEL_50;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_50;
      case 4:
        int v20 = *(_DWORD *)a2;
LABEL_50:
        if (v7 < 4) {
          unsigned int v17 = (v20 | (v18 << v8)) + 5;
        }
        else {
          unsigned int v17 = v20 + 5;
        }
        break;
      default:
        break;
    }
  }
  switch(v17)
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      uint64_t v21 = *((void *)a2 + 4);
      a1[40] = a2[40];
      *((void *)a1 + 4) = v21;
      *((void *)a1 + 6) = *((void *)a2 + 6);
      sub_1C9BEC838();
    case 1u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 2u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 3u:
      unsigned int v22 = a2[40];
      if (v22 >= 2) {
        unsigned int v22 = *(_DWORD *)a2 + 2;
      }
      if (v22 == 1)
      {
        uint64_t v30 = *(void *)a2;
        id v31 = *(id *)a2;
        *(void *)a1 = v30;
        a1[8] = a2[8];
        a1[40] = 1;
      }
      else if (v22)
      {
        long long v32 = *(_OWORD *)a2;
        long long v33 = *((_OWORD *)a2 + 1);
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        *(_OWORD *)a1 = v32;
        *((_OWORD *)a1 + 1) = v33;
      }
      else
      {
        uint64_t v23 = *((void *)a2 + 3);
        if (v23)
        {
          *((void *)a1 + 3) = v23;
          (**(void (***)(unsigned __int8 *, unsigned __int8 *))(v23 - 8))(a1, a2);
        }
        else
        {
          long long v35 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v35;
        }
        id v36 = (void *)*((void *)a2 + 4);
        *((void *)a1 + 4) = v36;
        a1[40] = 0;
        id v37 = v36;
      }
      if (v7 > 3) {
        goto LABEL_81;
      }
      unsigned int v38 = ((1 << v8) + 1) >> v8;
      if (v38 > 0xFFFA)
      {
        int v34 = 3;
        goto LABEL_84;
      }
      if (v38 <= 0xFA)
      {
LABEL_81:
        char v27 = 3;
        goto LABEL_82;
      }
      __int16 v39 = 3;
      goto LABEL_87;
    case 4u:
      id v24 = *(id *)a2;
      id v25 = *(id *)a2;
      *(void *)a1 = v24;
      a1[8] = a2[8];
      if (v7 > 3) {
        goto LABEL_65;
      }
      unsigned int v26 = ((1 << v8) + 1) >> v8;
      if (v26 > 0xFFFA)
      {
        int v34 = 4;
LABEL_84:
        *(_DWORD *)&a1[v7] = v34;
      }
      else if (v26 > 0xFA)
      {
        __int16 v39 = 4;
LABEL_87:
        *(_WORD *)&a1[v7] = v39;
      }
      else
      {
LABEL_65:
        char v27 = 4;
LABEL_82:
        a1[v7] = v27;
      }
      break;
    default:
      if (v7 > 3) {
        goto LABEL_70;
      }
      unsigned int v28 = ((1 << v8) + 1) >> v8;
      uint64_t v29 = 2;
      if (v28 > 0xFFFA) {
        uint64_t v29 = 4;
      }
      if (v28 <= 0xFA) {
LABEL_70:
      }
        uint64_t v29 = 1;
      memcpy(a1, a2, v29 + v7);
      return a1;
  }
  return a1;
}

_OWORD *sub_1C9ABB6D0(_OWORD *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v5 + 64) <= 0x38) {
    uint64_t v7 = 56;
  }
  else {
    uint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_7;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  if (v9 > 0xFFFA)
  {
    unsigned int v10 = *(_DWORD *)&a2[v7];
  }
  else
  {
    if (v9 <= 0xFA)
    {
LABEL_7:
      unsigned int v10 = a2[v7];
      goto LABEL_10;
    }
    unsigned int v10 = *(unsigned __int16 *)&a2[v7];
  }
LABEL_10:
  unsigned int v11 = v10 - 5;
  if (v10 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a2;
        goto LABEL_19;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v13 = *(_DWORD *)a2;
LABEL_19:
        int v14 = (v13 | (v11 << v8)) + 5;
        unsigned int v10 = v13 + 5;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v15 = ~v6;
  switch(v10)
  {
    case 0u:
      long long v16 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v16;
      a1[2] = *((_OWORD *)a2 + 2);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      if (v7 > 3) {
        goto LABEL_23;
      }
      unsigned int v24 = ((1 << v8) + 1) >> v8;
      if (v24 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v7) = 0;
      }
      else if (v24 <= 0xFA)
      {
LABEL_23:
        *((unsigned char *)a1 + v7) = 0;
      }
      else
      {
        *(_WORD *)((char *)a1 + v7) = 0;
      }
      return a1;
    case 1u:
      *(void *)a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v15, (unint64_t)&a2[v6 + 8] & v15, AssociatedTypeWitness);
      if (v7 > 3) {
        goto LABEL_44;
      }
      int v25 = 1;
      unsigned int v26 = ((1 << v8) + 1) >> v8;
      if (v26 > 0xFFFA) {
        goto LABEL_61;
      }
      if (v26 <= 0xFA)
      {
LABEL_44:
        char v18 = 1;
        goto LABEL_57;
      }
      goto LABEL_66;
    case 2u:
      *(void *)a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v15, (unint64_t)&a2[v6 + 8] & v15, AssociatedTypeWitness);
      if (v7 > 3) {
        goto LABEL_27;
      }
      unsigned int v17 = ((1 << v8) + 1) >> v8;
      if (v17 > 0xFFFA)
      {
        int v25 = 2;
        goto LABEL_61;
      }
      if (v17 <= 0xFA)
      {
LABEL_27:
        char v18 = 2;
        goto LABEL_57;
      }
      LOWORD(v25) = 2;
      goto LABEL_66;
    case 3u:
      unsigned int v19 = a2[40];
      if (v19 >= 2) {
        unsigned int v19 = *(_DWORD *)a2 + 2;
      }
      if (v19 == 1)
      {
        *(void *)a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = a2[8];
        *((unsigned char *)a1 + 40) = 1;
      }
      else
      {
        long long v20 = *((_OWORD *)a2 + 1);
        *a1 = *(_OWORD *)a2;
        a1[1] = v20;
        if (v19)
        {
          *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)(a2 + 25);
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((unsigned char *)a1 + 40) = 0;
        }
      }
      if (v7 > 3) {
        goto LABEL_56;
      }
      unsigned int v27 = ((1 << v8) + 1) >> v8;
      if (v27 > 0xFFFA)
      {
        int v25 = 3;
        goto LABEL_61;
      }
      if (v27 <= 0xFA)
      {
LABEL_56:
        char v18 = 3;
        goto LABEL_57;
      }
      LOWORD(v25) = 3;
      goto LABEL_66;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *((unsigned char *)a1 + 8) = a2[8];
      if (v7 > 3) {
        goto LABEL_36;
      }
      unsigned int v21 = ((1 << v8) + 1) >> v8;
      if (v21 > 0xFFFA)
      {
        int v25 = 4;
LABEL_61:
        *(_DWORD *)((char *)a1 + v7) = v25;
      }
      else if (v21 > 0xFA)
      {
        LOWORD(v25) = 4;
LABEL_66:
        *(_WORD *)((char *)a1 + v7) = v25;
      }
      else
      {
LABEL_36:
        char v18 = 4;
LABEL_57:
        *((unsigned char *)a1 + v7) = v18;
      }
      return a1;
    default:
      if (v7 > 3) {
        goto LABEL_41;
      }
      unsigned int v22 = ((1 << v8) + 1) >> v8;
      uint64_t v23 = 2;
      if (v22 > 0xFFFA) {
        uint64_t v23 = 4;
      }
      if (v22 <= 0xFA) {
LABEL_41:
      }
        uint64_t v23 = 1;
      memcpy(a1, a2, v23 + v7);
      return a1;
  }
}

unsigned __int8 *sub_1C9ABBB14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v5 + 64) <= 0x38) {
    uint64_t v7 = 56;
  }
  else {
    uint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_8;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  if (v9 > 0xFFFA)
  {
    unsigned int v10 = *(_DWORD *)&a1[v7];
  }
  else
  {
    if (v9 <= 0xFA)
    {
LABEL_8:
      unsigned int v10 = a1[v7];
      goto LABEL_11;
    }
    unsigned int v10 = *(unsigned __int16 *)&a1[v7];
  }
LABEL_11:
  unsigned int v11 = v10 - 5;
  if (v10 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        goto LABEL_20;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v13 = *(_DWORD *)a1;
LABEL_20:
        if (v7 < 4) {
          v13 |= v11 << v8;
        }
        unsigned int v10 = v13 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v14 = ~v6;
  switch(v10)
  {
    case 0u:
      swift_release();

      swift_bridgeObjectRelease();
      uint64_t v15 = (void *)*((void *)a1 + 6);
      goto LABEL_33;
    case 1u:
    case 2u:
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))((unint64_t)&a1[v6 + 8] & v14, AssociatedTypeWitness);
      break;
    case 3u:
      unsigned int v16 = a1[40];
      if (v16 >= 2) {
        unsigned int v16 = *(_DWORD *)a1 + 2;
      }
      if (v16 == 1) {
        goto LABEL_34;
      }
      if (!v16)
      {
        if (*((void *)a1 + 3)) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        }
        uint64_t v15 = (void *)*((void *)a1 + 4);
LABEL_33:
      }
      break;
    case 4u:
LABEL_34:

      break;
    default:
      break;
  }
  if (v7 <= 3)
  {
    unsigned int v17 = ((1 << v8) + 1) >> v8;
    if (v17 > 0xFFFA)
    {
      unsigned int v18 = *(_DWORD *)&a2[v7];
      goto LABEL_41;
    }
    if (v17 > 0xFA)
    {
      unsigned int v18 = *(unsigned __int16 *)&a2[v7];
      goto LABEL_41;
    }
  }
  unsigned int v18 = a2[v7];
LABEL_41:
  unsigned int v19 = v18 - 5;
  if (v18 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v20 = v7;
    }
    else {
      uint64_t v20 = 4;
    }
    switch(v20)
    {
      case 1:
        int v21 = *a2;
        goto LABEL_50;
      case 2:
        int v21 = *(unsigned __int16 *)a2;
        goto LABEL_50;
      case 3:
        int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_50;
      case 4:
        int v21 = *(_DWORD *)a2;
LABEL_50:
        if (v7 < 4) {
          unsigned int v18 = (v21 | (v19 << v8)) + 5;
        }
        else {
          unsigned int v18 = v21 + 5;
        }
        break;
      default:
        break;
    }
  }
  switch(v18)
  {
    case 0u:
      long long v22 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v22;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      if (v7 > 3) {
        goto LABEL_57;
      }
      unsigned int v23 = ((1 << v8) + 1) >> v8;
      if (v23 > 0xFFFA)
      {
        *(_DWORD *)&a1[v7] = 0;
      }
      else if (v23 > 0xFA)
      {
        *(_WORD *)&a1[v7] = 0;
      }
      else
      {
LABEL_57:
        a1[v7] = 0;
      }
      return a1;
    case 1u:
      *(void *)a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))((unint64_t)&a1[v6 + 8] & v14, (unint64_t)&a2[v6 + 8] & v14, AssociatedTypeWitness);
      if (v7 <= 3)
      {
        int v31 = 1;
        unsigned int v32 = ((1 << v8) + 1) >> v8;
        if (v32 > 0xFFFA) {
          goto LABEL_91;
        }
        if (v32 > 0xFA) {
          goto LABEL_97;
        }
      }
      char v25 = 1;
      goto LABEL_87;
    case 2u:
      *(void *)a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))((unint64_t)&a1[v6 + 8] & v14, (unint64_t)&a2[v6 + 8] & v14, AssociatedTypeWitness);
      if (v7 > 3) {
        goto LABEL_61;
      }
      unsigned int v24 = ((1 << v8) + 1) >> v8;
      if (v24 > 0xFFFA)
      {
        int v31 = 2;
        goto LABEL_91;
      }
      if (v24 <= 0xFA)
      {
LABEL_61:
        char v25 = 2;
        goto LABEL_87;
      }
      LOWORD(v31) = 2;
      goto LABEL_97;
    case 3u:
      unsigned int v26 = a2[40];
      if (v26 >= 2) {
        unsigned int v26 = *(_DWORD *)a2 + 2;
      }
      if (v26 == 1)
      {
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        a1[40] = 1;
      }
      else
      {
        long long v27 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v27;
        if (v26)
        {
          *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          a1[40] = 0;
        }
      }
      if (v7 > 3) {
        goto LABEL_86;
      }
      unsigned int v33 = ((1 << v8) + 1) >> v8;
      if (v33 > 0xFFFA)
      {
        int v31 = 3;
        goto LABEL_91;
      }
      if (v33 <= 0xFA)
      {
LABEL_86:
        char v25 = 3;
        goto LABEL_87;
      }
      LOWORD(v31) = 3;
      goto LABEL_97;
    case 4u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      if (v7 > 3) {
        goto LABEL_70;
      }
      unsigned int v28 = ((1 << v8) + 1) >> v8;
      if (v28 > 0xFFFA)
      {
        int v31 = 4;
LABEL_91:
        *(_DWORD *)&a1[v7] = v31;
      }
      else if (v28 > 0xFA)
      {
        LOWORD(v31) = 4;
LABEL_97:
        *(_WORD *)&a1[v7] = v31;
      }
      else
      {
LABEL_70:
        char v25 = 4;
LABEL_87:
        a1[v7] = v25;
      }
      break;
    default:
      if (v7 > 3) {
        goto LABEL_75;
      }
      unsigned int v29 = ((1 << v8) + 1) >> v8;
      uint64_t v30 = 2;
      if (v29 > 0xFFFA) {
        uint64_t v30 = 4;
      }
      if (v29 <= 0xFA) {
LABEL_75:
      }
        uint64_t v30 = 1;
      memcpy(a1, a2, v30 + v7);
      return a1;
  }
  return a1;
}

uint64_t sub_1C9ABC10C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + *(void *)(v4 + 64);
  uint64_t v6 = 56;
  if (v5 > 0x38) {
    uint64_t v6 = v5;
  }
  char v7 = 8;
  char v8 = 8 * v6;
  if (v6 > 3)
  {
    int v9 = 6;
    goto LABEL_13;
  }
  unsigned int v10 = ((1 << v8) + 1) >> v8;
  if (v10 >= 0xFFFB) {
    char v11 = 32;
  }
  else {
    char v11 = 16;
  }
  if (v10 >= 0xFB) {
    char v7 = v11;
  }
  else {
    char v7 = 8;
  }
  if (v10 <= 0xFFFA)
  {
    int v9 = v10 + 5;
LABEL_13:
    unsigned int v12 = (1 << v7) - v9;
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  unsigned int v12 = 0x7FFFFFFF;
LABEL_15:
  if (v6 > 3) {
    goto LABEL_19;
  }
  unsigned int v13 = ((1 << v8) + 1) >> v8;
  uint64_t v14 = 2;
  if (v13 > 0xFFFA) {
    uint64_t v14 = 4;
  }
  if (v13 <= 0xFA) {
LABEL_19:
  }
    uint64_t v14 = 1;
  if (!a2) {
    return 0;
  }
  if (a2 <= v12) {
    goto LABEL_40;
  }
  uint64_t v15 = v14 + v6;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v18 = ((a2 - v12 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
    if (v18 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_40;
      }
      goto LABEL_30;
    }
    if (v18 < 2)
    {
LABEL_40:
      if (v12)
      {
        if (v6 > 3) {
          goto LABEL_44;
        }
        unsigned int v22 = ((1 << v8) + 1) >> v8;
        if (v22 > 0xFFFA)
        {
          unsigned int v24 = *(_DWORD *)((char *)a1 + v6);
          unsigned int v25 = ~v24;
          goto LABEL_58;
        }
        if (v22 >= 0xFB)
        {
          int v28 = *(unsigned __int16 *)((char *)a1 + v6);
          unsigned int v24 = v28 | 0xFFFF0000;
          unsigned int v25 = v28 ^ 0xFFFF;
        }
        else
        {
LABEL_44:
          int v23 = *((unsigned __int8 *)a1 + v6);
          unsigned int v24 = v23 | 0xFFFFFF00;
          unsigned int v25 = v23 ^ 0xFF;
          if (v6 > 3)
          {
            int v26 = 6;
            goto LABEL_51;
          }
        }
        unsigned int v29 = ((1 << v8) + 1) >> v8;
        if (v29 <= 0xFFFA)
        {
          int v26 = v29 + 5;
          if (v29 > 0xFA)
          {
            char v30 = 16;
LABEL_57:
            unsigned int v31 = (1 << v30) - v26;
            if ((v31 & 0x80000000) == 0) {
              goto LABEL_59;
            }
            goto LABEL_58;
          }
LABEL_51:
          char v30 = 8;
          goto LABEL_57;
        }
LABEL_58:
        unsigned int v31 = 0x7FFFFFFF;
LABEL_59:
        if (v31 > v25) {
          return -v24;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_40;
  }
LABEL_30:
  int v19 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v19 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v20 = v15;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v12 + (v21 | v19) + 1;
}

void sub_1C9ABC400(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(void *)(v6 + 64);
  if (v7 <= 0x38) {
    unint64_t v7 = 56;
  }
  char v8 = 8;
  char v9 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v11 = ((1 << v9) + 1) >> v9;
    if (v11 >= 0xFFFB) {
      char v12 = 32;
    }
    else {
      char v12 = 16;
    }
    if (v11 >= 0xFB) {
      char v8 = v12;
    }
    else {
      char v8 = 8;
    }
    if (v11 > 0xFFFA) {
      goto LABEL_14;
    }
    int v10 = v11 + 5;
  }
  else
  {
    int v10 = 6;
  }
  unsigned int v13 = (1 << v8) - v10;
  if ((v13 & 0x80000000) != 0) {
LABEL_14:
  }
    unsigned int v13 = 0x7FFFFFFF;
  if (v7 > 3) {
    goto LABEL_19;
  }
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  uint64_t v15 = 2;
  if (v14 > 0xFFFA) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFA) {
LABEL_19:
  }
    uint64_t v15 = 1;
  size_t v16 = v15 + v7;
  char v17 = 8 * (v15 + v7);
  if (a3 <= v13)
  {
    int v18 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v21 = ((a3 - v13 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v19 = ~v13 + a2;
    if (v16 < 4)
    {
      int v20 = (v19 >> v17) + 1;
      if (v16)
      {
        int v22 = v19 & ~(-1 << v17);
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v16] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v20;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v16] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x1C9ABC6FCLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (!a2) {
        return;
      }
LABEL_40:
      int v23 = -a2;
      if (v7 > 3) {
        goto LABEL_41;
      }
      unsigned int v24 = ((1 << v9) + 1) >> v9;
      if (v24 > 0xFFFA)
      {
        *(_DWORD *)&a1[v7] = v23;
      }
      else if (v24 <= 0xFA)
      {
LABEL_41:
        a1[v7] = v23;
      }
      else
      {
        *(_WORD *)&a1[v7] = v23;
      }
      return;
  }
}

uint64_t sub_1C9ABC724(unsigned __int8 *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = ((*(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + *(void *)(v2 + 64);
  if (v3 <= 0x38) {
    unint64_t v3 = 56;
  }
  char v4 = 8 * v3;
  if (v3 > 3) {
    goto LABEL_4;
  }
  unsigned int v6 = ((1 << v4) + 1) >> v4;
  if (v6 > 0xFFFA)
  {
    uint64_t result = *(unsigned int *)&a1[v3];
  }
  else
  {
    if (v6 <= 0xFA)
    {
LABEL_4:
      uint64_t result = a1[v3];
      goto LABEL_9;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v3];
  }
LABEL_9:
  if (result >= 5)
  {
    if (v3 <= 3) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_18;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v9 = (v8 | ((result - 5) << v4)) + 5;
        if (v3 >= 4) {
          uint64_t result = (v8 + 5);
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C9ABC888(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + *(void *)(v4 + 64);
  if (v5 <= 0x38) {
    size_t v6 = 56;
  }
  else {
    size_t v6 = v5;
  }
  if (a2 > 4)
  {
    unsigned int v7 = a2 - 5;
    if (v6 < 4)
    {
      int v9 = (v7 >> (8 * v6)) + 5;
      v7 &= ~(-1 << (8 * v6));
      int v8 = (int *)&a1[v6];
      unsigned int v11 = ((1 << (8 * v6)) + 1) >> (8 * v6);
      if (v11 > 0xFFFA)
      {
        *int v8 = v9;
        goto LABEL_18;
      }
      if (v11 > 0xFA)
      {
        *(_WORD *)int v8 = v9;
        goto LABEL_18;
      }
    }
    else
    {
      int v8 = (int *)&a1[v6];
      LOBYTE(v9) = 5;
    }
    *(unsigned char *)int v8 = v9;
LABEL_18:
    if (v6 <= 3) {
      int v12 = v6;
    }
    else {
      int v12 = 4;
    }
    bzero(a1, v6);
    switch(v12)
    {
      case 2:
        *(_WORD *)a1 = v7;
        break;
      case 3:
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
        break;
      case 4:
        *(_DWORD *)a1 = v7;
        break;
      default:
        *a1 = v7;
        break;
    }
    return;
  }
  if (v6 > 3)
  {
LABEL_6:
    a1[v6] = a2;
    return;
  }
  unsigned int v10 = ((1 << (8 * v6)) + 1) >> (8 * v6);
  if (v10 > 0xFFFA)
  {
    *(_DWORD *)&a1[v6] = a2;
  }
  else
  {
    if (v10 <= 0xFA) {
      goto LABEL_6;
    }
    *(_WORD *)&a1[v6] = a2;
  }
}

void sub_1C9ABCA50(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9ABCA74()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C9AB69CC();
}

uint64_t sub_1C9ABCB10@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9AB6180(a1);
}

uint64_t sub_1C9ABCB34(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SiriKitNeedsDisambiguationFlow.NeedsDisambiguationError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9ABCB88()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  uint64_t v4 = (void *)v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  swift_task_alloc();
  OUTLINED_FUNCTION_90_0();
  *(void *)(v1 + 16) = v7;
  *unsigned int v7 = v8;
  v7[1] = sub_1C9615010;
  return sub_1C9AB8DCC(v3, v4, v5, v6);
}

uint64_t sub_1C9ABCC34()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C9ABCC6C(void *a1, char a2)
{
}

void sub_1C9ABCC78(void *a1, char a2)
{
}

uint64_t sub_1C9ABCC88()
{
  uint64_t result = type metadata accessor for SiriKitNeedsDisambiguationFlow.State();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1C9ABCD04(void *a1, void *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v4 + 64) <= 0x38) {
    unint64_t v7 = 56;
  }
  else {
    unint64_t v7 = ((v5 + 8) & ~(unint64_t)v5) + *(void *)(v4 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_8;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  uint64_t v10 = 2;
  if (v9 > 0xFFFA) {
    uint64_t v10 = 4;
  }
  if (v9 <= 0xFA) {
LABEL_8:
  }
    uint64_t v10 = 1;
  unint64_t v11 = v10 + v7;
  int v12 = v5 & 0x100000;
  if (v6 > 7 || v12 != 0 || v11 > 0x18)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  if (v7 > 3)
  {
LABEL_19:
    int v15 = *((unsigned __int8 *)a2 + v7);
    unsigned int v16 = v15 | 0xFFFFFF00;
    unsigned int v17 = v15 ^ 0xFF;
    if (v7 > 3)
    {
      int v18 = 6;
      goto LABEL_40;
    }
LABEL_38:
    unsigned int v25 = ((1 << v8) + 1) >> v8;
    if (v25 > 0xFFFA) {
      goto LABEL_42;
    }
    int v18 = v25 + 5;
    if (v25 > 0xFA)
    {
      char v26 = 16;
LABEL_41:
      unsigned int v27 = (1 << v26) - v18;
      if ((v27 & 0x80000000) == 0)
      {
LABEL_43:
        if (v27 <= v17 || !v16) {
          goto LABEL_61;
        }
LABEL_81:
        if (v7 > 3) {
          goto LABEL_85;
        }
        unsigned int v36 = ((1 << v8) + 1) >> v8;
        uint64_t v37 = 2;
        if (v36 > 0xFFFA) {
          uint64_t v37 = 4;
        }
        if (v36 <= 0xFA) {
LABEL_85:
        }
          uint64_t v37 = 1;
        memcpy(a1, a2, v37 + v7);
        return a1;
      }
LABEL_42:
      unsigned int v27 = 0x7FFFFFFF;
      goto LABEL_43;
    }
LABEL_40:
    char v26 = 8;
    goto LABEL_41;
  }
  unsigned int v19 = ((1 << v8) + 1) >> v8;
  int v20 = 251 - v19;
  if ((int)(251 - v19) < 0) {
    int v20 = 0x7FFFFFFF;
  }
  int v21 = 65531 - v19;
  if ((int)(65531 - v19) < 0) {
    int v21 = 0x7FFFFFFF;
  }
  if (v19 <= 0xFFFA) {
    int v22 = v21;
  }
  else {
    int v22 = 0x7FFFFFFF;
  }
  if (v19 >= 0xFB) {
    int v20 = v22;
  }
  if (v19 > 0xFFFA)
  {
    if (v20)
    {
      unsigned int v16 = *(_DWORD *)((char *)a2 + v7);
      unsigned int v17 = ~v16;
      goto LABEL_42;
    }
    unint64_t v23 = v7 + 4;
  }
  else if (v19 > 0xFA)
  {
    if (v20)
    {
      int v24 = *(unsigned __int16 *)((char *)a2 + v7);
      unsigned int v16 = v24 | 0xFFFF0000;
      unsigned int v17 = v24 ^ 0xFFFF;
      goto LABEL_38;
    }
    unint64_t v23 = v7 + 2;
  }
  else
  {
    if (v20) {
      goto LABEL_19;
    }
    unint64_t v23 = v7 + 1;
  }
  if (*((unsigned char *)a2 + v23))
  {
    int v28 = (*((unsigned __int8 *)a2 + v23) - 1) << (8 * v23);
    if (v23 > 3) {
      int v28 = 0;
    }
    if (v23)
    {
      if (v23 > 3) {
        LODWORD(v23) = 4;
      }
      switch((int)v23)
      {
        case 2:
          LODWORD(v23) = *(unsigned __int16 *)a2;
          break;
        case 3:
          LODWORD(v23) = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          LODWORD(v23) = *(_DWORD *)a2;
          break;
        default:
          LODWORD(v23) = *(unsigned __int8 *)a2;
          break;
      }
    }
    if ((v23 | v28) != 0xFFFFFFFF) {
      goto LABEL_81;
    }
  }
LABEL_61:
  if (v7 <= 3)
  {
    unsigned int v29 = ((1 << v8) + 1) >> v8;
    if (v29 > 0xFFFA)
    {
      unsigned int v30 = *(_DWORD *)((char *)a2 + v7);
      goto LABEL_67;
    }
    if (v29 > 0xFA)
    {
      unsigned int v30 = *(unsigned __int16 *)((char *)a2 + v7);
      goto LABEL_67;
    }
  }
  unsigned int v30 = *((unsigned __int8 *)a2 + v7);
LABEL_67:
  unsigned int v31 = v30 - 5;
  if (v30 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v32 = v7;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *(unsigned __int8 *)a2;
        goto LABEL_76;
      case 2:
        int v33 = *(unsigned __int16 *)a2;
        goto LABEL_76;
      case 3:
        int v33 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        goto LABEL_76;
      case 4:
        int v33 = *(_DWORD *)a2;
LABEL_76:
        if (v7 < 4) {
          v33 |= v31 << v8;
        }
        unsigned int v30 = v33 + 5;
        break;
      default:
        break;
    }
  }
  switch(v30)
  {
    case 0u:
      uint64_t v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      uint64_t v35 = a2[3];
      a1[2] = a2[2];
      a1[3] = v35;
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      a1[6] = a2[6];
      sub_1C9BEC838();
    case 1u:
      *a1 = *a2;
      sub_1C9BEC838();
    case 2u:
      *a1 = *a2;
      sub_1C9BEC838();
    case 3u:
      unsigned int v38 = *((unsigned __int8 *)a2 + 40);
      if (v38 >= 2) {
        unsigned int v38 = *(_DWORD *)a2 + 2;
      }
      if (v38 == 1)
      {
        uint64_t v44 = *a2;
        id v45 = (id)*a2;
        *a1 = v44;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 40) = 1;
      }
      else if (v38)
      {
        long long v46 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v46;
        *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      }
      else
      {
        uint64_t v39 = a2[3];
        if (v39)
        {
          a1[3] = v39;
          (**(void (***)(void *, void *))(v39 - 8))(a1, a2);
        }
        else
        {
          long long v48 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v48;
        }
        uint64_t v49 = (void *)a2[4];
        a1[4] = v49;
        *((unsigned char *)a1 + 40) = 0;
        id v50 = v49;
      }
      if (v7 > 3) {
        goto LABEL_107;
      }
      unsigned int v51 = ((1 << v8) + 1) >> v8;
      if (v51 > 0xFFFA)
      {
        int v47 = 3;
        goto LABEL_110;
      }
      if (v51 <= 0xFA)
      {
LABEL_107:
        char v43 = 3;
        goto LABEL_108;
      }
      __int16 v52 = 3;
      goto LABEL_113;
    case 4u:
      uint64_t v40 = *a2;
      id v41 = (id)*a2;
      *a1 = v40;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      if (v7 > 3) {
        goto LABEL_97;
      }
      unsigned int v42 = ((1 << v8) + 1) >> v8;
      if (v42 > 0xFFFA)
      {
        int v47 = 4;
LABEL_110:
        *(_DWORD *)((char *)a1 + v7) = v47;
      }
      else if (v42 > 0xFA)
      {
        __int16 v52 = 4;
LABEL_113:
        *(_WORD *)((char *)a1 + v7) = v52;
      }
      else
      {
LABEL_97:
        char v43 = 4;
LABEL_108:
        *((unsigned char *)a1 + v7) = v43;
      }
      break;
    default:
      goto LABEL_81;
  }
  return a1;
}

void sub_1C9ABD404(unsigned __int16 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80);
  unint64_t v4 = ((v3 + 8) & ~v3) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  char v5 = 8 * v4;
  if (v4 > 3)
  {
LABEL_4:
    int v6 = *((unsigned __int8 *)a1 + v4);
    unsigned int v7 = v6 | 0xFFFFFF00;
    unsigned int v8 = v6 ^ 0xFF;
    if (v4 > 3)
    {
      int v9 = 6;
      goto LABEL_25;
    }
LABEL_23:
    unsigned int v16 = ((1 << v5) + 1) >> v5;
    if (v16 > 0xFFFA) {
      goto LABEL_27;
    }
    int v9 = v16 + 5;
    if (v16 > 0xFA)
    {
      char v17 = 16;
LABEL_26:
      unsigned int v18 = (1 << v17) - v9;
      if ((v18 & 0x80000000) == 0)
      {
LABEL_28:
        if (v18 > v8 && v7) {
          return;
        }
        goto LABEL_46;
      }
LABEL_27:
      unsigned int v18 = 0x7FFFFFFF;
      goto LABEL_28;
    }
LABEL_25:
    char v17 = 8;
    goto LABEL_26;
  }
  unsigned int v10 = ((1 << v5) + 1) >> v5;
  int v11 = 251 - v10;
  if ((int)(251 - v10) < 0) {
    int v11 = 0x7FFFFFFF;
  }
  int v12 = 65531 - v10;
  if ((int)(65531 - v10) < 0) {
    int v12 = 0x7FFFFFFF;
  }
  if (v10 <= 0xFFFA) {
    int v13 = v12;
  }
  else {
    int v13 = 0x7FFFFFFF;
  }
  if (v10 >= 0xFB) {
    int v11 = v13;
  }
  if (v10 > 0xFFFA)
  {
    if (v11)
    {
      unsigned int v7 = *(_DWORD *)((char *)a1 + v4);
      unsigned int v8 = ~v7;
      goto LABEL_27;
    }
    unint64_t v14 = v4 + 4;
  }
  else if (v10 > 0xFA)
  {
    if (v11)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v4);
      unsigned int v7 = v15 | 0xFFFF0000;
      unsigned int v8 = v15 ^ 0xFFFF;
      goto LABEL_23;
    }
    unint64_t v14 = v4 + 2;
  }
  else
  {
    if (v11) {
      goto LABEL_4;
    }
    unint64_t v14 = v4 + 1;
  }
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_46;
  }
  int v19 = (*((unsigned __int8 *)a1 + v14) - 1) << (8 * v14);
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 > 3) {
      LODWORD(v14) = 4;
    }
    switch((int)v14)
    {
      case 2:
        LODWORD(v14) = *a1;
        break;
      case 3:
        LODWORD(v14) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v14) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v14) = *(unsigned __int8 *)a1;
        break;
    }
  }
  if ((v14 | v19) == 0xFFFFFFFF)
  {
LABEL_46:
    if (v4 > 3) {
      goto LABEL_47;
    }
    unsigned int v21 = ((1 << v5) + 1) >> v5;
    if (v21 > 0xFFFA)
    {
      unsigned int v20 = *(_DWORD *)((char *)a1 + v4);
      goto LABEL_52;
    }
    if (v21 <= 0xFA) {
LABEL_47:
    }
      unsigned int v20 = *((unsigned __int8 *)a1 + v4);
    else {
      unsigned int v20 = *(unsigned __int16 *)((char *)a1 + v4);
    }
LABEL_52:
    unsigned int v22 = v20 - 5;
    if (v20 >= 5)
    {
      if (v4 <= 3) {
        uint64_t v23 = v4;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *(unsigned __int8 *)a1;
          goto LABEL_61;
        case 2:
          int v24 = *a1;
          goto LABEL_61;
        case 3:
          int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          goto LABEL_61;
        case 4:
          int v24 = *(_DWORD *)a1;
LABEL_61:
          if (v4 < 4) {
            unsigned int v20 = (v24 | (v22 << v5)) + 5;
          }
          else {
            unsigned int v20 = v24 + 5;
          }
          break;
        default:
          break;
      }
    }
    switch(v20)
    {
      case 0u:
        swift_release();

        swift_bridgeObjectRelease();
        char v26 = (void *)*((void *)a1 + 6);
        goto LABEL_76;
      case 1u:
      case 2u:
        uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
        swift_release();
        unsigned int v25 = *(void (**)(unint64_t, uint64_t))(v28 + 8);
        v25(((unint64_t)a1 + v3 + 8) & ~v3, AssociatedTypeWitness);
        return;
      case 3u:
        unsigned int v27 = *((unsigned __int8 *)a1 + 40);
        if (v27 >= 2) {
          unsigned int v27 = *(_DWORD *)a1 + 2;
        }
        if (v27 == 1) {
          goto LABEL_80;
        }
        if (v27) {
          return;
        }
        if (*((void *)a1 + 3)) {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
        }
        char v26 = (void *)*((void *)a1 + 4);
LABEL_76:
LABEL_78:

        break;
      case 4u:
LABEL_80:
        char v26 = *(void **)a1;
        goto LABEL_78;
      default:
        return;
    }
  }
}

void *sub_1C9ABD858(void *a1, _DWORD *a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  if (((v5 + 8) & (unint64_t)~v5) + *(void *)(v4 + 64) <= 0x38) {
    uint64_t v6 = 56;
  }
  else {
    uint64_t v6 = ((v5 + 8) & ~v5) + *(void *)(v4 + 64);
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
LABEL_5:
    int v8 = *((unsigned __int8 *)a2 + v6);
    unsigned int v9 = v8 | 0xFFFFFF00;
    unsigned int v10 = v8 ^ 0xFF;
    if (v6 > 3)
    {
      int v11 = 6;
      goto LABEL_26;
    }
LABEL_24:
    unsigned int v18 = ((1 << v7) + 1) >> v7;
    if (v18 > 0xFFFA) {
      goto LABEL_28;
    }
    int v11 = v18 + 5;
    if (v18 > 0xFA)
    {
      char v19 = 16;
LABEL_27:
      unsigned int v20 = (1 << v19) - v11;
      if ((v20 & 0x80000000) == 0)
      {
LABEL_29:
        if (v20 <= v10 || !v9) {
          goto LABEL_47;
        }
LABEL_67:
        if (v6 > 3) {
          goto LABEL_71;
        }
        unsigned int v29 = ((1 << v7) + 1) >> v7;
        uint64_t v30 = 2;
        if (v29 > 0xFFFA) {
          uint64_t v30 = 4;
        }
        if (v29 <= 0xFA) {
LABEL_71:
        }
          uint64_t v30 = 1;
        memcpy(a1, a2, v30 + v6);
        return a1;
      }
LABEL_28:
      unsigned int v20 = 0x7FFFFFFF;
      goto LABEL_29;
    }
LABEL_26:
    char v19 = 8;
    goto LABEL_27;
  }
  unsigned int v12 = ((1 << v7) + 1) >> v7;
  int v13 = 251 - v12;
  if ((int)(251 - v12) < 0) {
    int v13 = 0x7FFFFFFF;
  }
  int v14 = 65531 - v12;
  if ((int)(65531 - v12) < 0) {
    int v14 = 0x7FFFFFFF;
  }
  if (v12 <= 0xFFFA) {
    int v15 = v14;
  }
  else {
    int v15 = 0x7FFFFFFF;
  }
  if (v12 >= 0xFB) {
    int v13 = v15;
  }
  if (v12 > 0xFFFA)
  {
    if (v13)
    {
      unsigned int v9 = *(_DWORD *)((char *)a2 + v6);
      unsigned int v10 = ~v9;
      goto LABEL_28;
    }
    uint64_t v16 = v6 + 4;
  }
  else if (v12 > 0xFA)
  {
    if (v13)
    {
      int v17 = *(unsigned __int16 *)((char *)a2 + v6);
      unsigned int v9 = v17 | 0xFFFF0000;
      unsigned int v10 = v17 ^ 0xFFFF;
      goto LABEL_24;
    }
    uint64_t v16 = v6 + 2;
  }
  else
  {
    if (v13) {
      goto LABEL_5;
    }
    uint64_t v16 = v6 + 1;
  }
  if (*((unsigned char *)a2 + v16))
  {
    int v21 = (*((unsigned __int8 *)a2 + v16) - 1) << (8 * v16);
    if (v16 > 3) {
      int v21 = 0;
    }
    if (v16)
    {
      if (v16 > 3) {
        LODWORD(v16) = 4;
      }
      switch((int)v16)
      {
        case 2:
          LODWORD(v16) = *(unsigned __int16 *)a2;
          break;
        case 3:
          LODWORD(v16) = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          LODWORD(v16) = *a2;
          break;
        default:
          LODWORD(v16) = *(unsigned __int8 *)a2;
          break;
      }
    }
    if ((v16 | v21) != 0xFFFFFFFF) {
      goto LABEL_67;
    }
  }
LABEL_47:
  if (v6 <= 3)
  {
    unsigned int v22 = ((1 << v7) + 1) >> v7;
    if (v22 > 0xFFFA)
    {
      unsigned int v23 = *(_DWORD *)((char *)a2 + v6);
      goto LABEL_53;
    }
    if (v22 > 0xFA)
    {
      unsigned int v23 = *(unsigned __int16 *)((char *)a2 + v6);
      goto LABEL_53;
    }
  }
  unsigned int v23 = *((unsigned __int8 *)a2 + v6);
LABEL_53:
  unsigned int v24 = v23 - 5;
  if (v23 >= 5)
  {
    if (v6 <= 3) {
      uint64_t v25 = v6;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *(unsigned __int8 *)a2;
        goto LABEL_62;
      case 2:
        int v26 = *(unsigned __int16 *)a2;
        goto LABEL_62;
      case 3:
        int v26 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        goto LABEL_62;
      case 4:
        int v26 = *a2;
LABEL_62:
        if (v6 < 4) {
          v26 |= v24 << v7;
        }
        unsigned int v23 = v26 + 5;
        break;
      default:
        break;
    }
  }
  switch(v23)
  {
    case 0u:
      uint64_t v27 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v27;
      uint64_t v28 = *((void *)a2 + 3);
      a1[2] = *((void *)a2 + 2);
      a1[3] = v28;
      a1[4] = *((void *)a2 + 4);
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      a1[6] = *((void *)a2 + 6);
      sub_1C9BEC838();
    case 1u:
      *a1 = *(void *)a2;
      sub_1C9BEC838();
    case 2u:
      *a1 = *(void *)a2;
      sub_1C9BEC838();
    case 3u:
      unsigned int v31 = *((unsigned __int8 *)a2 + 40);
      if (v31 >= 2) {
        unsigned int v31 = *a2 + 2;
      }
      if (v31 == 1)
      {
        uint64_t v37 = *(void *)a2;
        id v38 = *(id *)a2;
        *a1 = v37;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 40) = 1;
      }
      else if (v31)
      {
        long long v39 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v39;
        *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
      }
      else
      {
        uint64_t v32 = *((void *)a2 + 3);
        if (v32)
        {
          a1[3] = v32;
          (**(void (***)(void *, _DWORD *))(v32 - 8))(a1, a2);
        }
        else
        {
          long long v41 = *((_OWORD *)a2 + 1);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_OWORD *)a1 + 1) = v41;
        }
        unsigned int v42 = (void *)*((void *)a2 + 4);
        a1[4] = v42;
        *((unsigned char *)a1 + 40) = 0;
        id v43 = v42;
      }
      if (v6 > 3) {
        goto LABEL_93;
      }
      unsigned int v44 = ((1 << v7) + 1) >> v7;
      if (v44 > 0xFFFA)
      {
        int v40 = 3;
        goto LABEL_96;
      }
      if (v44 <= 0xFA)
      {
LABEL_93:
        char v36 = 3;
        goto LABEL_94;
      }
      __int16 v45 = 3;
      goto LABEL_99;
    case 4u:
      uint64_t v33 = *(void *)a2;
      id v34 = *(id *)a2;
      *a1 = v33;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      if (v6 > 3) {
        goto LABEL_83;
      }
      unsigned int v35 = ((1 << v7) + 1) >> v7;
      if (v35 > 0xFFFA)
      {
        int v40 = 4;
LABEL_96:
        *(_DWORD *)((char *)a1 + v6) = v40;
      }
      else if (v35 > 0xFA)
      {
        __int16 v45 = 4;
LABEL_99:
        *(_WORD *)((char *)a1 + v6) = v45;
      }
      else
      {
LABEL_83:
        char v36 = 4;
LABEL_94:
        *((unsigned char *)a1 + v6) = v36;
      }
      break;
    default:
      goto LABEL_67;
  }
  return a1;
}

void *sub_1C9ABDEDC(void *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v5 + 64) <= 0x38) {
    uint64_t v8 = 56;
  }
  else {
    uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
LABEL_5:
    int v10 = *((unsigned __int8 *)a1 + v8);
    unsigned int v11 = v10 | 0xFFFFFF00;
    unsigned int v12 = v10 ^ 0xFF;
    if (v8 > 3)
    {
      int v13 = 6;
      goto LABEL_26;
    }
LABEL_24:
    unsigned int v20 = ((1 << v9) + 1) >> v9;
    if (v20 > 0xFFFA) {
      goto LABEL_28;
    }
    int v13 = v20 + 5;
    if (v20 > 0xFA)
    {
      char v21 = 16;
LABEL_27:
      unsigned int v22 = (1 << v21) - v13;
      if ((v22 & 0x80000000) == 0)
      {
LABEL_29:
        if (v22 <= v12 || !v11) {
          goto LABEL_50;
        }
LABEL_47:
        if (v8 > 3) {
          goto LABEL_48;
        }
        unsigned int v37 = ((1 << v9) + 1) >> v9;
        int v38 = 251 - v37;
        if ((int)(251 - v37) < 0) {
          int v38 = 0x7FFFFFFF;
        }
        int v39 = 65531 - v37;
        if ((int)(65531 - v37) < 0) {
          int v39 = 0x7FFFFFFF;
        }
        if (v37 <= 0xFFFA) {
          int v40 = v39;
        }
        else {
          int v40 = 0x7FFFFFFF;
        }
        if (v37 >= 0xFB) {
          int v38 = v40;
        }
        if (v37 > 0xFFFA)
        {
          if (v38)
          {
            unsigned int v25 = *(_DWORD *)((char *)a2 + v8);
            unsigned int v26 = ~v25;
            goto LABEL_101;
          }
          uint64_t v41 = v8 + 4;
        }
        else if (v37 > 0xFA)
        {
          if (v38)
          {
            int v46 = *(unsigned __int16 *)((char *)a2 + v8);
            unsigned int v25 = v46 | 0xFFFF0000;
            unsigned int v26 = v46 ^ 0xFFFF;
            goto LABEL_97;
          }
          uint64_t v41 = v8 + 2;
        }
        else
        {
          if (v38)
          {
LABEL_48:
            int v24 = *((unsigned __int8 *)a2 + v8);
            unsigned int v25 = v24 | 0xFFFFFF00;
            unsigned int v26 = v24 ^ 0xFF;
            if (v8 > 3)
            {
              int v27 = 6;
              goto LABEL_99;
            }
LABEL_97:
            unsigned int v47 = ((1 << v9) + 1) >> v9;
            if (v47 > 0xFFFA) {
              goto LABEL_101;
            }
            int v27 = v47 + 5;
            if (v47 > 0xFA)
            {
              char v48 = 16;
LABEL_100:
              unsigned int v49 = (1 << v48) - v27;
              if ((v49 & 0x80000000) == 0)
              {
LABEL_102:
                if (v49 > v26 && v25)
                {
LABEL_233:
                  if (v8 > 3) {
                    goto LABEL_237;
                  }
                  unsigned int v77 = ((1 << v9) + 1) >> v9;
                  uint64_t v78 = 2;
                  if (v77 > 0xFFFA) {
                    uint64_t v78 = 4;
                  }
                  if (v77 <= 0xFA) {
LABEL_237:
                  }
                    uint64_t v78 = 1;
                  memcpy(a1, a2, v78 + v8);
                  return a1;
                }
                goto LABEL_213;
              }
LABEL_101:
              unsigned int v49 = 0x7FFFFFFF;
              goto LABEL_102;
            }
LABEL_99:
            char v48 = 8;
            goto LABEL_100;
          }
          uint64_t v41 = v8 + 1;
        }
        if (*((unsigned char *)a2 + v41))
        {
          int v51 = (*((unsigned __int8 *)a2 + v41) - 1) << (8 * v41);
          if (v41 > 3) {
            int v51 = 0;
          }
          if (v41)
          {
            if (v41 > 3) {
              LODWORD(v41) = 4;
            }
            switch((int)v41)
            {
              case 2:
                LODWORD(v41) = *(unsigned __int16 *)a2;
                break;
              case 3:
                LODWORD(v41) = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
                break;
              case 4:
                LODWORD(v41) = *a2;
                break;
              default:
                LODWORD(v41) = *(unsigned __int8 *)a2;
                break;
            }
          }
          if ((v41 | v51) != 0xFFFFFFFF) {
            goto LABEL_233;
          }
        }
LABEL_213:
        if (v8 > 3) {
          goto LABEL_214;
        }
        unsigned int v72 = ((1 << v9) + 1) >> v9;
        if (v72 > 0xFFFA)
        {
          unsigned int v71 = *(_DWORD *)((char *)a2 + v8);
          goto LABEL_219;
        }
        if (v72 <= 0xFA) {
LABEL_214:
        }
          unsigned int v71 = *((unsigned __int8 *)a2 + v8);
        else {
          unsigned int v71 = *(unsigned __int16 *)((char *)a2 + v8);
        }
LABEL_219:
        unsigned int v73 = v71 - 5;
        if (v71 >= 5)
        {
          if (v8 <= 3) {
            uint64_t v74 = v8;
          }
          else {
            uint64_t v74 = 4;
          }
          switch(v74)
          {
            case 1:
              int v75 = *(unsigned __int8 *)a2;
              goto LABEL_228;
            case 2:
              int v75 = *(unsigned __int16 *)a2;
              goto LABEL_228;
            case 3:
              int v75 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              goto LABEL_228;
            case 4:
              int v75 = *a2;
LABEL_228:
              if (v8 < 4) {
                unsigned int v71 = (v75 | (v73 << v9)) + 5;
              }
              else {
                unsigned int v71 = v75 + 5;
              }
              break;
            default:
              break;
          }
        }
        switch(v71)
        {
          case 0u:
LABEL_232:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            uint64_t v76 = *((void *)a2 + 4);
            *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
            a1[4] = v76;
            a1[6] = *((void *)a2 + 6);
            sub_1C9BEC838();
          case 1u:
LABEL_239:
            *a1 = *(void *)a2;
            sub_1C9BEC838();
          case 2u:
LABEL_240:
            *a1 = *(void *)a2;
            sub_1C9BEC838();
          case 3u:
LABEL_241:
            unsigned int v79 = *((unsigned __int8 *)a2 + 40);
            if (v79 >= 2) {
              unsigned int v79 = *a2 + 2;
            }
            if (v79 == 1)
            {
              uint64_t v86 = *(void *)a2;
              id v87 = *(id *)a2;
              *a1 = v86;
              *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
              *((unsigned char *)a1 + 40) = 1;
            }
            else if (v79)
            {
              long long v88 = *(_OWORD *)a2;
              long long v89 = *((_OWORD *)a2 + 1);
              *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
              *(_OWORD *)a1 = v88;
              *((_OWORD *)a1 + 1) = v89;
            }
            else
            {
              uint64_t v80 = *((void *)a2 + 3);
              if (v80)
              {
                a1[3] = v80;
                (**(void (***)(void *, _DWORD *))(v80 - 8))(a1, a2);
              }
              else
              {
                long long v91 = *((_OWORD *)a2 + 1);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *((_OWORD *)a1 + 1) = v91;
              }
              uint64_t v92 = (void *)*((void *)a2 + 4);
              a1[4] = v92;
              *((unsigned char *)a1 + 40) = 0;
              id v93 = v92;
            }
            if (v8 > 3) {
              goto LABEL_258;
            }
            unsigned int v94 = ((1 << v9) + 1) >> v9;
            if (v94 > 0xFFFA)
            {
              int v90 = 3;
              goto LABEL_265;
            }
            if (v94 <= 0xFA)
            {
LABEL_258:
              char v83 = 3;
              goto LABEL_259;
            }
            __int16 v85 = 3;
            goto LABEL_263;
          case 4u:
LABEL_247:
            uint64_t v81 = *(void *)a2;
            id v82 = *(id *)a2;
            *a1 = v81;
            *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
            if (v8 > 3) {
              goto LABEL_248;
            }
            unsigned int v84 = ((1 << v9) + 1) >> v9;
            if (v84 > 0xFFFA)
            {
              int v90 = 4;
LABEL_265:
              *(_DWORD *)((char *)a1 + v8) = v90;
            }
            else if (v84 <= 0xFA)
            {
LABEL_248:
              char v83 = 4;
LABEL_259:
              *((unsigned char *)a1 + v8) = v83;
            }
            else
            {
              __int16 v85 = 4;
LABEL_263:
              *(_WORD *)((char *)a1 + v8) = v85;
            }
            break;
          default:
            goto LABEL_233;
        }
        return a1;
      }
LABEL_28:
      unsigned int v22 = 0x7FFFFFFF;
      goto LABEL_29;
    }
LABEL_26:
    char v21 = 8;
    goto LABEL_27;
  }
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  int v15 = 251 - v14;
  if ((int)(251 - v14) < 0) {
    int v15 = 0x7FFFFFFF;
  }
  int v16 = 65531 - v14;
  if ((int)(65531 - v14) < 0) {
    int v16 = 0x7FFFFFFF;
  }
  if (v14 <= 0xFFFA) {
    int v17 = v16;
  }
  else {
    int v17 = 0x7FFFFFFF;
  }
  if (v14 >= 0xFB) {
    int v15 = v17;
  }
  if (v14 > 0xFFFA)
  {
    if (v15)
    {
      unsigned int v11 = *(_DWORD *)((char *)a1 + v8);
      unsigned int v12 = ~v11;
      goto LABEL_28;
    }
    uint64_t v18 = v8 + 4;
  }
  else if (v14 > 0xFA)
  {
    if (v15)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v8);
      unsigned int v11 = v19 | 0xFFFF0000;
      unsigned int v12 = v19 ^ 0xFFFF;
      goto LABEL_24;
    }
    uint64_t v18 = v8 + 2;
  }
  else
  {
    if (v15) {
      goto LABEL_5;
    }
    uint64_t v18 = v8 + 1;
  }
  if (*((unsigned char *)a1 + v18))
  {
    int v23 = (*((unsigned __int8 *)a1 + v18) - 1) << (8 * v18);
    if (v18 > 3) {
      int v23 = 0;
    }
    if (v18)
    {
      if (v18 > 3) {
        LODWORD(v18) = 4;
      }
      switch((int)v18)
      {
        case 2:
          LODWORD(v18) = *(unsigned __int16 *)a1;
          break;
        case 3:
          LODWORD(v18) = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          LODWORD(v18) = *(_DWORD *)a1;
          break;
        default:
          LODWORD(v18) = *(unsigned __int8 *)a1;
          break;
      }
    }
    if ((v18 | v23) != 0xFFFFFFFF) {
      goto LABEL_47;
    }
  }
LABEL_50:
  if (v8 > 3) {
    goto LABEL_51;
  }
  unsigned int v32 = ((1 << v9) + 1) >> v9;
  int v33 = 251 - v32;
  if ((int)(251 - v32) < 0) {
    int v33 = 0x7FFFFFFF;
  }
  int v34 = 65531 - v32;
  if ((int)(65531 - v32) < 0) {
    int v34 = 0x7FFFFFFF;
  }
  if (v32 <= 0xFFFA) {
    int v35 = v34;
  }
  else {
    int v35 = 0x7FFFFFFF;
  }
  if (v32 >= 0xFB) {
    int v33 = v35;
  }
  if (v32 > 0xFFFA)
  {
    if (v33)
    {
      unsigned int v29 = *(_DWORD *)((char *)a2 + v8);
      unsigned int v30 = ~v29;
      goto LABEL_87;
    }
    uint64_t v36 = v8 + 4;
  }
  else if (v32 > 0xFA)
  {
    if (v33)
    {
      int v42 = *(unsigned __int16 *)((char *)a2 + v8);
      unsigned int v29 = v42 | 0xFFFF0000;
      unsigned int v30 = v42 ^ 0xFFFF;
      goto LABEL_83;
    }
    uint64_t v36 = v8 + 2;
  }
  else
  {
    if (v33)
    {
LABEL_51:
      int v28 = *((unsigned __int8 *)a2 + v8);
      unsigned int v29 = v28 | 0xFFFFFF00;
      unsigned int v30 = v28 ^ 0xFF;
      if (v8 > 3)
      {
        int v31 = 6;
        goto LABEL_85;
      }
LABEL_83:
      unsigned int v43 = ((1 << v9) + 1) >> v9;
      if (v43 > 0xFFFA) {
        goto LABEL_87;
      }
      int v31 = v43 + 5;
      if (v43 > 0xFA)
      {
        char v44 = 16;
LABEL_86:
        unsigned int v45 = (1 << v44) - v31;
        if ((v45 & 0x80000000) == 0)
        {
LABEL_88:
          if (v45 <= v30 || !v29) {
            goto LABEL_131;
          }
          goto LABEL_129;
        }
LABEL_87:
        unsigned int v45 = 0x7FFFFFFF;
        goto LABEL_88;
      }
LABEL_85:
      char v44 = 8;
      goto LABEL_86;
    }
    uint64_t v36 = v8 + 1;
  }
  if (*((unsigned char *)a2 + v36))
  {
    int v50 = (*((unsigned __int8 *)a2 + v36) - 1) << (8 * v36);
    if (v36 > 3) {
      int v50 = 0;
    }
    if (v36)
    {
      if (v36 > 3) {
        LODWORD(v36) = 4;
      }
      switch((int)v36)
      {
        case 2:
          LODWORD(v36) = *(unsigned __int16 *)a2;
          break;
        case 3:
          LODWORD(v36) = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          LODWORD(v36) = *a2;
          break;
        default:
          LODWORD(v36) = *(unsigned __int8 *)a2;
          break;
      }
    }
    if ((v36 | v50) != 0xFFFFFFFF)
    {
LABEL_129:
      if (v8 > 3) {
        goto LABEL_130;
      }
      unsigned int v55 = ((1 << v9) + 1) >> v9;
      if (v55 > 0xFFFA)
      {
        unsigned int v52 = *(_DWORD *)((char *)a1 + v8);
        goto LABEL_141;
      }
      if (v55 <= 0xFA) {
LABEL_130:
      }
        unsigned int v52 = *((unsigned __int8 *)a1 + v8);
      else {
        unsigned int v52 = *(unsigned __int16 *)((char *)a1 + v8);
      }
LABEL_141:
      unsigned int v56 = v52 - 5;
      if (v52 >= 5)
      {
        if (v8 <= 3) {
          uint64_t v57 = v8;
        }
        else {
          uint64_t v57 = 4;
        }
        switch(v57)
        {
          case 1:
            int v58 = *(unsigned __int8 *)a1;
            goto LABEL_194;
          case 2:
            int v58 = *(unsigned __int16 *)a1;
            goto LABEL_194;
          case 3:
            int v58 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            goto LABEL_194;
          case 4:
            int v58 = *(_DWORD *)a1;
LABEL_194:
            if (v8 < 4) {
              unsigned int v52 = (v58 | (v56 << v9)) + 5;
            }
            else {
              unsigned int v52 = v58 + 5;
            }
            break;
          default:
            break;
        }
      }
      switch(v52)
      {
        case 0u:
          swift_release();

          swift_bridgeObjectRelease();
          uint64_t v69 = (void *)a1[6];
          goto LABEL_207;
        case 1u:
        case 2u:
          swift_release();
          (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v6 + 8) & v7, AssociatedTypeWitness);
          goto LABEL_233;
        case 3u:
          unsigned int v70 = *((unsigned __int8 *)a1 + 40);
          if (v70 >= 2) {
            unsigned int v70 = *(_DWORD *)a1 + 2;
          }
          if (v70 == 1) {
            goto LABEL_208;
          }
          if (!v70)
          {
            if (a1[3]) {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
            }
            uint64_t v69 = (void *)a1[4];
LABEL_207:
          }
          break;
        case 4u:
LABEL_208:

          break;
        default:
          goto LABEL_233;
      }
      goto LABEL_233;
    }
  }
LABEL_131:
  if (a1 != (void *)a2)
  {
    if (v8 <= 3)
    {
      unsigned int v53 = ((1 << v9) + 1) >> v9;
      if (v53 > 0xFFFA)
      {
        unsigned int v54 = *(_DWORD *)((char *)a1 + v8);
      }
      else
      {
        if (v53 <= 0xFA) {
          goto LABEL_135;
        }
        unsigned int v54 = *(unsigned __int16 *)((char *)a1 + v8);
      }
LABEL_148:
      unsigned int v59 = v54 - 5;
      if (v54 >= 5)
      {
        if (v8 <= 3) {
          uint64_t v60 = v8;
        }
        else {
          uint64_t v60 = 4;
        }
        switch(v60)
        {
          case 1:
            int v61 = *(unsigned __int8 *)a1;
            goto LABEL_157;
          case 2:
            int v61 = *(unsigned __int16 *)a1;
            goto LABEL_157;
          case 3:
            int v61 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            goto LABEL_157;
          case 4:
            int v61 = *(_DWORD *)a1;
LABEL_157:
            if (v8 < 4) {
              unsigned int v54 = (v61 | (v59 << v9)) + 5;
            }
            else {
              unsigned int v54 = v61 + 5;
            }
            break;
          default:
            break;
        }
      }
      switch(v54)
      {
        case 0u:
          swift_release();

          swift_bridgeObjectRelease();
          uint64_t v62 = (void *)a1[6];
          goto LABEL_170;
        case 1u:
        case 2u:
          swift_release();
          (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v6 + 8) & v7, AssociatedTypeWitness);
          break;
        case 3u:
          unsigned int v63 = *((unsigned __int8 *)a1 + 40);
          if (v63 >= 2) {
            unsigned int v63 = *(_DWORD *)a1 + 2;
          }
          if (v63 == 1) {
            goto LABEL_171;
          }
          if (!v63)
          {
            if (a1[3]) {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
            }
            uint64_t v62 = (void *)a1[4];
LABEL_170:
          }
          break;
        case 4u:
LABEL_171:

          break;
        default:
          break;
      }
      if (v8 > 3) {
        goto LABEL_175;
      }
      unsigned int v64 = ((1 << v9) + 1) >> v9;
      if (v64 > 0xFFFA)
      {
        unsigned int v65 = *(_DWORD *)((char *)a2 + v8);
      }
      else
      {
        if (v64 <= 0xFA)
        {
LABEL_175:
          unsigned int v65 = *((unsigned __int8 *)a2 + v8);
          goto LABEL_178;
        }
        unsigned int v65 = *(unsigned __int16 *)((char *)a2 + v8);
      }
LABEL_178:
      unsigned int v66 = v65 - 5;
      if (v65 >= 5)
      {
        if (v8 <= 3) {
          uint64_t v67 = v8;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            int v68 = *(unsigned __int8 *)a2;
            goto LABEL_187;
          case 2:
            int v68 = *(unsigned __int16 *)a2;
            goto LABEL_187;
          case 3:
            int v68 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
            goto LABEL_187;
          case 4:
            int v68 = *a2;
LABEL_187:
            if (v8 < 4) {
              unsigned int v65 = (v68 | (v66 << v9)) + 5;
            }
            else {
              unsigned int v65 = v68 + 5;
            }
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 0u:
          goto LABEL_232;
        case 1u:
          goto LABEL_239;
        case 2u:
          goto LABEL_240;
        case 3u:
          goto LABEL_241;
        case 4u:
          goto LABEL_247;
        default:
          goto LABEL_233;
      }
    }
LABEL_135:
    unsigned int v54 = *((unsigned __int8 *)a1 + v8);
    goto LABEL_148;
  }
  return a1;
}

_OWORD *sub_1C9ABED04(_OWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v5 + 64) <= 0x38) {
    uint64_t v7 = 56;
  }
  else {
    uint64_t v7 = ((v6 + 8) & ~v6) + *(void *)(v5 + 64);
  }
  char v8 = 8 * v7;
  if (v7 > 3)
  {
LABEL_5:
    int v9 = *((unsigned __int8 *)a2 + v7);
    unsigned int v10 = v9 | 0xFFFFFF00;
    unsigned int v11 = v9 ^ 0xFF;
    if (v7 > 3)
    {
      int v12 = 6;
      goto LABEL_26;
    }
LABEL_24:
    unsigned int v19 = ((1 << v8) + 1) >> v8;
    if (v19 > 0xFFFA) {
      goto LABEL_28;
    }
    int v12 = v19 + 5;
    if (v19 > 0xFA)
    {
      char v20 = 16;
LABEL_27:
      unsigned int v21 = (1 << v20) - v12;
      if ((v21 & 0x80000000) == 0)
      {
LABEL_29:
        if (v21 <= v11 || !v10) {
          goto LABEL_47;
        }
LABEL_70:
        if (v7 > 3) {
          goto LABEL_74;
        }
        unsigned int v31 = ((1 << v8) + 1) >> v8;
        uint64_t v32 = 2;
        if (v31 > 0xFFFA) {
          uint64_t v32 = 4;
        }
        if (v31 <= 0xFA) {
LABEL_74:
        }
          uint64_t v32 = 1;
        memcpy(a1, a2, v32 + v7);
        return a1;
      }
LABEL_28:
      unsigned int v21 = 0x7FFFFFFF;
      goto LABEL_29;
    }
LABEL_26:
    char v20 = 8;
    goto LABEL_27;
  }
  unsigned int v13 = ((1 << v8) + 1) >> v8;
  int v14 = 251 - v13;
  if ((int)(251 - v13) < 0) {
    int v14 = 0x7FFFFFFF;
  }
  int v15 = 65531 - v13;
  if ((int)(65531 - v13) < 0) {
    int v15 = 0x7FFFFFFF;
  }
  if (v13 <= 0xFFFA) {
    int v16 = v15;
  }
  else {
    int v16 = 0x7FFFFFFF;
  }
  if (v13 >= 0xFB) {
    int v14 = v16;
  }
  if (v13 > 0xFFFA)
  {
    if (v14)
    {
      unsigned int v10 = *(_DWORD *)((char *)a2 + v7);
      unsigned int v11 = ~v10;
      goto LABEL_28;
    }
    uint64_t v17 = v7 + 4;
  }
  else if (v13 > 0xFA)
  {
    if (v14)
    {
      int v18 = *(unsigned __int16 *)((char *)a2 + v7);
      unsigned int v10 = v18 | 0xFFFF0000;
      unsigned int v11 = v18 ^ 0xFFFF;
      goto LABEL_24;
    }
    uint64_t v17 = v7 + 2;
  }
  else
  {
    if (v14) {
      goto LABEL_5;
    }
    uint64_t v17 = v7 + 1;
  }
  if (*((unsigned char *)a2 + v17))
  {
    int v22 = (*((unsigned __int8 *)a2 + v17) - 1) << (8 * v17);
    if (v17 > 3) {
      int v22 = 0;
    }
    if (v17)
    {
      if (v17 > 3) {
        LODWORD(v17) = 4;
      }
      switch((int)v17)
      {
        case 2:
          LODWORD(v17) = *(unsigned __int16 *)a2;
          break;
        case 3:
          LODWORD(v17) = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          LODWORD(v17) = *a2;
          break;
        default:
          LODWORD(v17) = *(unsigned __int8 *)a2;
          break;
      }
    }
    if ((v17 | v22) != 0xFFFFFFFF) {
      goto LABEL_70;
    }
  }
LABEL_47:
  if (v7 <= 3)
  {
    unsigned int v23 = ((1 << v8) + 1) >> v8;
    if (v23 > 0xFFFA)
    {
      unsigned int v24 = *(_DWORD *)((char *)a2 + v7);
      goto LABEL_53;
    }
    if (v23 > 0xFA)
    {
      unsigned int v24 = *(unsigned __int16 *)((char *)a2 + v7);
      goto LABEL_53;
    }
  }
  unsigned int v24 = *((unsigned __int8 *)a2 + v7);
LABEL_53:
  unsigned int v25 = v24 - 5;
  if (v24 >= 5)
  {
    if (v7 <= 3) {
      uint64_t v26 = v7;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)a2;
        goto LABEL_62;
      case 2:
        int v27 = *(unsigned __int16 *)a2;
        goto LABEL_62;
      case 3:
        int v27 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
        goto LABEL_62;
      case 4:
        int v27 = *a2;
LABEL_62:
        if (v7 < 4) {
          v27 |= v25 << v8;
        }
        unsigned int v24 = v27 + 5;
        break;
      default:
        break;
    }
  }
  uint64_t v28 = ~v6;
  switch(v24)
  {
    case 0u:
      long long v29 = *((_OWORD *)a2 + 1);
      *a1 = *(_OWORD *)a2;
      a1[1] = v29;
      a1[2] = *((_OWORD *)a2 + 2);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      if (v7 > 3) {
        goto LABEL_69;
      }
      unsigned int v30 = ((1 << v8) + 1) >> v8;
      if (v30 > 0xFFFA)
      {
        *(_DWORD *)((char *)a1 + v7) = 0;
      }
      else if (v30 > 0xFA)
      {
        *(_WORD *)((char *)a1 + v7) = 0;
      }
      else
      {
LABEL_69:
        *((unsigned char *)a1 + v7) = 0;
      }
      return a1;
    case 1u:
      *(void *)a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v28, ((unint64_t)a2 + v6 + 8) & v28, AssociatedTypeWitness);
      if (v7 > 3) {
        goto LABEL_92;
      }
      int v38 = 1;
      unsigned int v39 = ((1 << v8) + 1) >> v8;
      if (v39 > 0xFFFA) {
        goto LABEL_103;
      }
      if (v39 > 0xFA) {
        goto LABEL_109;
      }
LABEL_92:
      char v34 = 1;
      goto LABEL_99;
    case 2u:
      *(void *)a1 = *(void *)a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v28, ((unint64_t)a2 + v6 + 8) & v28, AssociatedTypeWitness);
      if (v7 > 3) {
        goto LABEL_79;
      }
      unsigned int v33 = ((1 << v8) + 1) >> v8;
      if (v33 > 0xFFFA)
      {
        int v38 = 2;
        goto LABEL_103;
      }
      if (v33 <= 0xFA)
      {
LABEL_79:
        char v34 = 2;
        goto LABEL_99;
      }
      LOWORD(v38) = 2;
      goto LABEL_109;
    case 3u:
      unsigned int v35 = *((unsigned __int8 *)a2 + 40);
      if (v35 >= 2) {
        unsigned int v35 = *a2 + 2;
      }
      if (v35 == 1)
      {
        *(void *)a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 40) = 1;
      }
      else
      {
        long long v36 = *((_OWORD *)a2 + 1);
        *a1 = *(_OWORD *)a2;
        a1[1] = v36;
        if (v35)
        {
          *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
        }
        else
        {
          *((void *)a1 + 4) = *((void *)a2 + 4);
          *((unsigned char *)a1 + 40) = 0;
        }
      }
      if (v7 > 3) {
        goto LABEL_98;
      }
      unsigned int v40 = ((1 << v8) + 1) >> v8;
      if (v40 > 0xFFFA)
      {
        int v38 = 3;
        goto LABEL_103;
      }
      if (v40 <= 0xFA)
      {
LABEL_98:
        char v34 = 3;
        goto LABEL_99;
      }
      LOWORD(v38) = 3;
      goto LABEL_109;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      if (v7 > 3) {
        goto LABEL_88;
      }
      unsigned int v37 = ((1 << v8) + 1) >> v8;
      if (v37 > 0xFFFA)
      {
        int v38 = 4;
LABEL_103:
        *(_DWORD *)((char *)a1 + v7) = v38;
      }
      else if (v37 > 0xFA)
      {
        LOWORD(v38) = 4;
LABEL_109:
        *(_WORD *)((char *)a1 + v7) = v38;
      }
      else
      {
LABEL_88:
        char v34 = 4;
LABEL_99:
        *((unsigned char *)a1 + v7) = v34;
      }
      break;
    default:
      goto LABEL_70;
  }
  return a1;
}

unsigned __int16 *sub_1C9ABF2E0(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = ~v6;
  if (((v6 + 8) & (unint64_t)~v6) + *(void *)(v5 + 64) <= 0x38) {
    uint64_t v8 = 56;
  }
  else {
    uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
LABEL_5:
    int v10 = *((unsigned __int8 *)a1 + v8);
    unsigned int v11 = v10 | 0xFFFFFF00;
    unsigned int v12 = v10 ^ 0xFF;
    if (v8 > 3)
    {
      int v13 = 6;
      goto LABEL_26;
    }
LABEL_24:
    unsigned int v20 = ((1 << v9) + 1) >> v9;
    if (v20 > 0xFFFA) {
      goto LABEL_28;
    }
    int v13 = v20 + 5;
    if (v20 > 0xFA)
    {
      char v21 = 16;
LABEL_27:
      unsigned int v22 = (1 << v21) - v13;
      if ((v22 & 0x80000000) == 0)
      {
LABEL_29:
        if (v22 <= v12 || !v11) {
          goto LABEL_50;
        }
LABEL_47:
        if (v8 > 3) {
          goto LABEL_48;
        }
        unsigned int v37 = ((1 << v9) + 1) >> v9;
        int v38 = 251 - v37;
        if ((int)(251 - v37) < 0) {
          int v38 = 0x7FFFFFFF;
        }
        int v39 = 65531 - v37;
        if ((int)(65531 - v37) < 0) {
          int v39 = 0x7FFFFFFF;
        }
        if (v37 <= 0xFFFA) {
          int v40 = v39;
        }
        else {
          int v40 = 0x7FFFFFFF;
        }
        if (v37 >= 0xFB) {
          int v38 = v40;
        }
        if (v37 > 0xFFFA)
        {
          if (v38)
          {
            unsigned int v25 = *(_DWORD *)((char *)a2 + v8);
            unsigned int v26 = ~v25;
            goto LABEL_101;
          }
          uint64_t v41 = v8 + 4;
        }
        else if (v37 > 0xFA)
        {
          if (v38)
          {
            int v46 = *(unsigned __int16 *)((char *)a2 + v8);
            unsigned int v25 = v46 | 0xFFFF0000;
            unsigned int v26 = v46 ^ 0xFFFF;
            goto LABEL_97;
          }
          uint64_t v41 = v8 + 2;
        }
        else
        {
          if (v38)
          {
LABEL_48:
            int v24 = *((unsigned __int8 *)a2 + v8);
            unsigned int v25 = v24 | 0xFFFFFF00;
            unsigned int v26 = v24 ^ 0xFF;
            if (v8 > 3)
            {
              int v27 = 6;
              goto LABEL_99;
            }
LABEL_97:
            unsigned int v47 = ((1 << v9) + 1) >> v9;
            if (v47 > 0xFFFA) {
              goto LABEL_101;
            }
            int v27 = v47 + 5;
            if (v47 > 0xFA)
            {
              char v48 = 16;
LABEL_100:
              unsigned int v49 = (1 << v48) - v27;
              if ((v49 & 0x80000000) == 0)
              {
LABEL_102:
                if (v49 > v26 && v25)
                {
LABEL_234:
                  if (v8 > 3) {
                    goto LABEL_238;
                  }
                  unsigned int v77 = ((1 << v9) + 1) >> v9;
                  uint64_t v78 = 2;
                  if (v77 > 0xFFFA) {
                    uint64_t v78 = 4;
                  }
                  if (v77 <= 0xFA) {
LABEL_238:
                  }
                    uint64_t v78 = 1;
                  memcpy(a1, a2, v78 + v8);
                  return a1;
                }
                goto LABEL_213;
              }
LABEL_101:
              unsigned int v49 = 0x7FFFFFFF;
              goto LABEL_102;
            }
LABEL_99:
            char v48 = 8;
            goto LABEL_100;
          }
          uint64_t v41 = v8 + 1;
        }
        if (*((unsigned char *)a2 + v41))
        {
          int v51 = (*((unsigned __int8 *)a2 + v41) - 1) << (8 * v41);
          if (v41 > 3) {
            int v51 = 0;
          }
          if (v41)
          {
            if (v41 > 3) {
              LODWORD(v41) = 4;
            }
            switch((int)v41)
            {
              case 2:
                LODWORD(v41) = *a2;
                break;
              case 3:
                LODWORD(v41) = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
                break;
              case 4:
                LODWORD(v41) = *(_DWORD *)a2;
                break;
              default:
                LODWORD(v41) = *(unsigned __int8 *)a2;
                break;
            }
          }
          if ((v41 | v51) != 0xFFFFFFFF) {
            goto LABEL_234;
          }
        }
LABEL_213:
        if (v8 > 3) {
          goto LABEL_214;
        }
        unsigned int v72 = ((1 << v9) + 1) >> v9;
        if (v72 > 0xFFFA)
        {
          unsigned int v71 = *(_DWORD *)((char *)a2 + v8);
          goto LABEL_219;
        }
        if (v72 <= 0xFA) {
LABEL_214:
        }
          unsigned int v71 = *((unsigned __int8 *)a2 + v8);
        else {
          unsigned int v71 = *(unsigned __int16 *)((char *)a2 + v8);
        }
LABEL_219:
        unsigned int v73 = v71 - 5;
        if (v71 >= 5)
        {
          if (v8 <= 3) {
            uint64_t v74 = v8;
          }
          else {
            uint64_t v74 = 4;
          }
          switch(v74)
          {
            case 1:
              int v75 = *(unsigned __int8 *)a2;
              goto LABEL_228;
            case 2:
              int v75 = *a2;
              goto LABEL_228;
            case 3:
              int v75 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
              goto LABEL_228;
            case 4:
              int v75 = *(_DWORD *)a2;
LABEL_228:
              if (v8 < 4) {
                unsigned int v71 = (v75 | (v73 << v9)) + 5;
              }
              else {
                unsigned int v71 = v75 + 5;
              }
              break;
            default:
              break;
          }
        }
        switch(v71)
        {
          case 0u:
LABEL_232:
            long long v76 = *((_OWORD *)a2 + 1);
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((_OWORD *)a1 + 1) = v76;
            *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
            *((void *)a1 + 6) = *((void *)a2 + 6);
            if (v8 > 3) {
              goto LABEL_233;
            }
            unsigned int v82 = ((1 << v9) + 1) >> v9;
            if (v82 > 0xFFFA)
            {
              *(_DWORD *)((char *)a1 + v8) = 0;
            }
            else if (v82 <= 0xFA)
            {
LABEL_233:
              *((unsigned char *)a1 + v8) = 0;
            }
            else
            {
              *(unsigned __int16 *)((char *)a1 + v8) = 0;
            }
            return a1;
          case 1u:
LABEL_240:
            *(void *)a1 = *(void *)a2;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
            if (v8 > 3) {
              goto LABEL_241;
            }
            int v83 = 1;
            unsigned int v84 = ((1 << v9) + 1) >> v9;
            if (v84 > 0xFFFA) {
              goto LABEL_276;
            }
            if (v84 > 0xFA) {
              goto LABEL_271;
            }
LABEL_241:
            char v79 = 1;
            goto LABEL_267;
          case 2u:
LABEL_242:
            *(void *)a1 = *(void *)a2;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v7, ((unint64_t)a2 + v6 + 8) & v7, AssociatedTypeWitness);
            if (v8 > 3) {
              goto LABEL_243;
            }
            unsigned int v85 = ((1 << v9) + 1) >> v9;
            if (v85 > 0xFFFA)
            {
              int v83 = 2;
              goto LABEL_276;
            }
            if (v85 <= 0xFA)
            {
LABEL_243:
              char v79 = 2;
              goto LABEL_267;
            }
            LOWORD(v83) = 2;
            goto LABEL_271;
          case 3u:
LABEL_244:
            unsigned int v80 = *((unsigned __int8 *)a2 + 40);
            if (v80 >= 2) {
              unsigned int v80 = *(_DWORD *)a2 + 2;
            }
            if (v80 == 1)
            {
              *(void *)a1 = *(void *)a2;
              *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
              *((unsigned char *)a1 + 40) = 1;
            }
            else
            {
              long long v81 = *((_OWORD *)a2 + 1);
              *(_OWORD *)a1 = *(_OWORD *)a2;
              *((_OWORD *)a1 + 1) = v81;
              if (v80)
              {
                *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
              }
              else
              {
                *((void *)a1 + 4) = *((void *)a2 + 4);
                *((unsigned char *)a1 + 40) = 0;
              }
            }
            if (v8 > 3) {
              goto LABEL_266;
            }
            unsigned int v87 = ((1 << v9) + 1) >> v9;
            if (v87 > 0xFFFA)
            {
              int v83 = 3;
              goto LABEL_276;
            }
            if (v87 <= 0xFA)
            {
LABEL_266:
              char v79 = 3;
              goto LABEL_267;
            }
            LOWORD(v83) = 3;
            goto LABEL_271;
          case 4u:
LABEL_249:
            *(void *)a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
            if (v8 > 3) {
              goto LABEL_250;
            }
            unsigned int v86 = ((1 << v9) + 1) >> v9;
            if (v86 > 0xFFFA)
            {
              int v83 = 4;
LABEL_276:
              *(_DWORD *)((char *)a1 + v8) = v83;
            }
            else if (v86 <= 0xFA)
            {
LABEL_250:
              char v79 = 4;
LABEL_267:
              *((unsigned char *)a1 + v8) = v79;
            }
            else
            {
              LOWORD(v83) = 4;
LABEL_271:
              *(unsigned __int16 *)((char *)a1 + v8) = v83;
            }
            break;
          default:
            goto LABEL_234;
        }
        return a1;
      }
LABEL_28:
      unsigned int v22 = 0x7FFFFFFF;
      goto LABEL_29;
    }
LABEL_26:
    char v21 = 8;
    goto LABEL_27;
  }
  unsigned int v14 = ((1 << v9) + 1) >> v9;
  int v15 = 251 - v14;
  if ((int)(251 - v14) < 0) {
    int v15 = 0x7FFFFFFF;
  }
  int v16 = 65531 - v14;
  if ((int)(65531 - v14) < 0) {
    int v16 = 0x7FFFFFFF;
  }
  if (v14 <= 0xFFFA) {
    int v17 = v16;
  }
  else {
    int v17 = 0x7FFFFFFF;
  }
  if (v14 >= 0xFB) {
    int v15 = v17;
  }
  if (v14 > 0xFFFA)
  {
    if (v15)
    {
      unsigned int v11 = *(_DWORD *)((char *)a1 + v8);
      unsigned int v12 = ~v11;
      goto LABEL_28;
    }
    uint64_t v18 = v8 + 4;
  }
  else if (v14 > 0xFA)
  {
    if (v15)
    {
      int v19 = *(unsigned __int16 *)((char *)a1 + v8);
      unsigned int v11 = v19 | 0xFFFF0000;
      unsigned int v12 = v19 ^ 0xFFFF;
      goto LABEL_24;
    }
    uint64_t v18 = v8 + 2;
  }
  else
  {
    if (v15) {
      goto LABEL_5;
    }
    uint64_t v18 = v8 + 1;
  }
  if (*((unsigned char *)a1 + v18))
  {
    int v23 = (*((unsigned __int8 *)a1 + v18) - 1) << (8 * v18);
    if (v18 > 3) {
      int v23 = 0;
    }
    if (v18)
    {
      if (v18 > 3) {
        LODWORD(v18) = 4;
      }
      switch((int)v18)
      {
        case 2:
          LODWORD(v18) = *a1;
          break;
        case 3:
          LODWORD(v18) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          LODWORD(v18) = *(_DWORD *)a1;
          break;
        default:
          LODWORD(v18) = *(unsigned __int8 *)a1;
          break;
      }
    }
    if ((v18 | v23) != 0xFFFFFFFF) {
      goto LABEL_47;
    }
  }
LABEL_50:
  if (v8 > 3) {
    goto LABEL_51;
  }
  unsigned int v32 = ((1 << v9) + 1) >> v9;
  int v33 = 251 - v32;
  if ((int)(251 - v32) < 0) {
    int v33 = 0x7FFFFFFF;
  }
  int v34 = 65531 - v32;
  if ((int)(65531 - v32) < 0) {
    int v34 = 0x7FFFFFFF;
  }
  if (v32 <= 0xFFFA) {
    int v35 = v34;
  }
  else {
    int v35 = 0x7FFFFFFF;
  }
  if (v32 >= 0xFB) {
    int v33 = v35;
  }
  if (v32 > 0xFFFA)
  {
    if (v33)
    {
      unsigned int v29 = *(_DWORD *)((char *)a2 + v8);
      unsigned int v30 = ~v29;
      goto LABEL_87;
    }
    uint64_t v36 = v8 + 4;
  }
  else if (v32 > 0xFA)
  {
    if (v33)
    {
      int v42 = *(unsigned __int16 *)((char *)a2 + v8);
      unsigned int v29 = v42 | 0xFFFF0000;
      unsigned int v30 = v42 ^ 0xFFFF;
      goto LABEL_83;
    }
    uint64_t v36 = v8 + 2;
  }
  else
  {
    if (v33)
    {
LABEL_51:
      int v28 = *((unsigned __int8 *)a2 + v8);
      unsigned int v29 = v28 | 0xFFFFFF00;
      unsigned int v30 = v28 ^ 0xFF;
      if (v8 > 3)
      {
        int v31 = 6;
        goto LABEL_85;
      }
LABEL_83:
      unsigned int v43 = ((1 << v9) + 1) >> v9;
      if (v43 > 0xFFFA) {
        goto LABEL_87;
      }
      int v31 = v43 + 5;
      if (v43 > 0xFA)
      {
        char v44 = 16;
LABEL_86:
        unsigned int v45 = (1 << v44) - v31;
        if ((v45 & 0x80000000) == 0)
        {
LABEL_88:
          if (v45 <= v30 || !v29) {
            goto LABEL_131;
          }
          goto LABEL_129;
        }
LABEL_87:
        unsigned int v45 = 0x7FFFFFFF;
        goto LABEL_88;
      }
LABEL_85:
      char v44 = 8;
      goto LABEL_86;
    }
    uint64_t v36 = v8 + 1;
  }
  if (*((unsigned char *)a2 + v36))
  {
    int v50 = (*((unsigned __int8 *)a2 + v36) - 1) << (8 * v36);
    if (v36 > 3) {
      int v50 = 0;
    }
    if (v36)
    {
      if (v36 > 3) {
        LODWORD(v36) = 4;
      }
      switch((int)v36)
      {
        case 2:
          LODWORD(v36) = *a2;
          break;
        case 3:
          LODWORD(v36) = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          LODWORD(v36) = *(_DWORD *)a2;
          break;
        default:
          LODWORD(v36) = *(unsigned __int8 *)a2;
          break;
      }
    }
    if ((v36 | v50) != 0xFFFFFFFF)
    {
LABEL_129:
      if (v8 > 3) {
        goto LABEL_130;
      }
      unsigned int v55 = ((1 << v9) + 1) >> v9;
      if (v55 > 0xFFFA)
      {
        unsigned int v52 = *(_DWORD *)((char *)a1 + v8);
        goto LABEL_141;
      }
      if (v55 <= 0xFA) {
LABEL_130:
      }
        unsigned int v52 = *((unsigned __int8 *)a1 + v8);
      else {
        unsigned int v52 = *(unsigned __int16 *)((char *)a1 + v8);
      }
LABEL_141:
      unsigned int v56 = v52 - 5;
      if (v52 >= 5)
      {
        if (v8 <= 3) {
          uint64_t v57 = v8;
        }
        else {
          uint64_t v57 = 4;
        }
        switch(v57)
        {
          case 1:
            int v58 = *(unsigned __int8 *)a1;
            goto LABEL_194;
          case 2:
            int v58 = *a1;
            goto LABEL_194;
          case 3:
            int v58 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            goto LABEL_194;
          case 4:
            int v58 = *(_DWORD *)a1;
LABEL_194:
            if (v8 < 4) {
              unsigned int v52 = (v58 | (v56 << v9)) + 5;
            }
            else {
              unsigned int v52 = v58 + 5;
            }
            break;
          default:
            break;
        }
      }
      switch(v52)
      {
        case 0u:
          swift_release();

          swift_bridgeObjectRelease();
          uint64_t v69 = (void *)*((void *)a1 + 6);
          goto LABEL_207;
        case 1u:
        case 2u:
          swift_release();
          (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v6 + 8) & v7, AssociatedTypeWitness);
          goto LABEL_234;
        case 3u:
          unsigned int v70 = *((unsigned __int8 *)a1 + 40);
          if (v70 >= 2) {
            unsigned int v70 = *(_DWORD *)a1 + 2;
          }
          if (v70 == 1) {
            goto LABEL_208;
          }
          if (!v70)
          {
            if (*((void *)a1 + 3)) {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
            }
            uint64_t v69 = (void *)*((void *)a1 + 4);
LABEL_207:
          }
          break;
        case 4u:
LABEL_208:

          break;
        default:
          goto LABEL_234;
      }
      goto LABEL_234;
    }
  }
LABEL_131:
  if (a1 != a2)
  {
    if (v8 <= 3)
    {
      unsigned int v53 = ((1 << v9) + 1) >> v9;
      if (v53 > 0xFFFA)
      {
        unsigned int v54 = *(_DWORD *)((char *)a1 + v8);
      }
      else
      {
        if (v53 <= 0xFA) {
          goto LABEL_135;
        }
        unsigned int v54 = *(unsigned __int16 *)((char *)a1 + v8);
      }
LABEL_148:
      unsigned int v59 = v54 - 5;
      if (v54 >= 5)
      {
        if (v8 <= 3) {
          uint64_t v60 = v8;
        }
        else {
          uint64_t v60 = 4;
        }
        switch(v60)
        {
          case 1:
            int v61 = *(unsigned __int8 *)a1;
            goto LABEL_157;
          case 2:
            int v61 = *a1;
            goto LABEL_157;
          case 3:
            int v61 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            goto LABEL_157;
          case 4:
            int v61 = *(_DWORD *)a1;
LABEL_157:
            if (v8 < 4) {
              unsigned int v54 = (v61 | (v59 << v9)) + 5;
            }
            else {
              unsigned int v54 = v61 + 5;
            }
            break;
          default:
            break;
        }
      }
      switch(v54)
      {
        case 0u:
          swift_release();

          swift_bridgeObjectRelease();
          uint64_t v62 = (void *)*((void *)a1 + 6);
          goto LABEL_170;
        case 1u:
        case 2u:
          swift_release();
          (*(void (**)(unint64_t, uint64_t))(v5 + 8))(((unint64_t)a1 + v6 + 8) & v7, AssociatedTypeWitness);
          break;
        case 3u:
          unsigned int v63 = *((unsigned __int8 *)a1 + 40);
          if (v63 >= 2) {
            unsigned int v63 = *(_DWORD *)a1 + 2;
          }
          if (v63 == 1) {
            goto LABEL_171;
          }
          if (!v63)
          {
            if (*((void *)a1 + 3)) {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
            }
            uint64_t v62 = (void *)*((void *)a1 + 4);
LABEL_170:
          }
          break;
        case 4u:
LABEL_171:

          break;
        default:
          break;
      }
      if (v8 > 3) {
        goto LABEL_175;
      }
      unsigned int v64 = ((1 << v9) + 1) >> v9;
      if (v64 > 0xFFFA)
      {
        unsigned int v65 = *(_DWORD *)((char *)a2 + v8);
      }
      else
      {
        if (v64 <= 0xFA)
        {
LABEL_175:
          unsigned int v65 = *((unsigned __int8 *)a2 + v8);
          goto LABEL_178;
        }
        unsigned int v65 = *(unsigned __int16 *)((char *)a2 + v8);
      }
LABEL_178:
      unsigned int v66 = v65 - 5;
      if (v65 >= 5)
      {
        if (v8 <= 3) {
          uint64_t v67 = v8;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            int v68 = *(unsigned __int8 *)a2;
            goto LABEL_187;
          case 2:
            int v68 = *a2;
            goto LABEL_187;
          case 3:
            int v68 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
            goto LABEL_187;
          case 4:
            int v68 = *(_DWORD *)a2;
LABEL_187:
            if (v8 < 4) {
              unsigned int v65 = (v68 | (v66 << v9)) + 5;
            }
            else {
              unsigned int v65 = v68 + 5;
            }
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 0u:
          goto LABEL_232;
        case 1u:
          goto LABEL_240;
        case 2u:
          goto LABEL_242;
        case 3u:
          goto LABEL_244;
        case 4u:
          goto LABEL_249;
        default:
          goto LABEL_234;
      }
    }
LABEL_135:
    unsigned int v54 = *((unsigned __int8 *)a1 + v8);
    goto LABEL_148;
  }
  return a1;
}

uint64_t sub_1C9AC0068(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + *(void *)(v4 + 64);
  uint64_t v6 = 56;
  if (v5 > 0x38) {
    uint64_t v6 = v5;
  }
  char v7 = 8;
  char v8 = 8 * v6;
  if (v6 > 3)
  {
    int v9 = 6;
    goto LABEL_13;
  }
  unsigned int v10 = ((1 << v8) + 1) >> v8;
  if (v10 >= 0xFFFB) {
    char v11 = 32;
  }
  else {
    char v11 = 16;
  }
  if (v10 >= 0xFB) {
    char v7 = v11;
  }
  else {
    char v7 = 8;
  }
  if (v10 <= 0xFFFA)
  {
    int v9 = v10 + 5;
LABEL_13:
    int v12 = (1 << v7) - v9;
    unsigned int v13 = v12 - 1;
    if (!v12) {
      unsigned int v13 = 0;
    }
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_17;
    }
  }
  unsigned int v13 = 2147483646;
LABEL_17:
  if (v6 > 3) {
    goto LABEL_21;
  }
  unsigned int v14 = ((1 << v8) + 1) >> v8;
  uint64_t v15 = 2;
  if (v14 > 0xFFFA) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFA) {
LABEL_21:
  }
    uint64_t v15 = 1;
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_42;
  }
  uint64_t v16 = v15 + v6;
  char v17 = 8 * v16;
  if (v16 <= 3)
  {
    unsigned int v19 = ((a2 - v13 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      int v18 = *(_DWORD *)((char *)a1 + v16);
      if (!v18) {
        goto LABEL_42;
      }
      goto LABEL_32;
    }
    if (v19 > 0xFF)
    {
      int v18 = *(unsigned __int16 *)((char *)a1 + v16);
      if (!*(unsigned __int16 *)((char *)a1 + v16)) {
        goto LABEL_42;
      }
      goto LABEL_32;
    }
    if (v19 < 2)
    {
LABEL_42:
      if (!v13) {
        return 0;
      }
      char v23 = 8;
      if (v6 <= 3)
      {
        unsigned int v25 = ((1 << v8) + 1) >> v8;
        if (v25 >= 0xFFFB) {
          char v26 = 32;
        }
        else {
          char v26 = 16;
        }
        if (v25 >= 0xFB) {
          char v23 = v26;
        }
        else {
          char v23 = 8;
        }
        if (v25 > 0xFFFA)
        {
LABEL_54:
          unsigned int v27 = 0x7FFFFFFF;
LABEL_55:
          char v28 = 8;
          if (v6 <= 3)
          {
            unsigned int v30 = ((1 << v8) + 1) >> v8;
            if (v30 >= 0xFFFB) {
              char v31 = 32;
            }
            else {
              char v31 = 16;
            }
            if (v30 >= 0xFB) {
              char v28 = v31;
            }
            else {
              char v28 = 8;
            }
            if (v30 > 0xFFFA) {
              goto LABEL_66;
            }
            int v29 = v30 + 5;
          }
          else
          {
            int v29 = 6;
          }
          unsigned int v32 = (1 << v28) - v29;
          if ((v32 & 0x80000000) == 0)
          {
LABEL_67:
            if (v6 > 3) {
              goto LABEL_71;
            }
            unsigned int v33 = ((1 << v8) + 1) >> v8;
            uint64_t v34 = 2;
            if (v33 > 0xFFFA) {
              uint64_t v34 = 4;
            }
            if (v33 <= 0xFA) {
LABEL_71:
            }
              uint64_t v34 = 1;
            if (!v27) {
              return 0;
            }
            unsigned int v35 = v27 - v32;
            if (v27 <= v32) {
              goto LABEL_95;
            }
            uint64_t v36 = v34 + v6;
            char v37 = 8 * (v34 + v6);
            if (v36 > 3)
            {
LABEL_75:
              int v38 = *((unsigned __int8 *)a1 + v36);
              goto LABEL_86;
            }
            unsigned int v39 = ((v35 + ~(-1 << v37)) >> v37) + 1;
            if (HIWORD(v39))
            {
              int v38 = *(_DWORD *)((char *)a1 + v36);
            }
            else
            {
              if (v39 <= 0xFF)
              {
                if (v39 < 2)
                {
LABEL_95:
                  if (!v32) {
                    return 0;
                  }
                  if (v6 > 3) {
                    goto LABEL_99;
                  }
                  unsigned int v44 = ((1 << v8) + 1) >> v8;
                  if (v44 > 0xFFFA)
                  {
                    unsigned int v46 = *(_DWORD *)((char *)a1 + v6);
                    unsigned int v47 = ~v46;
                    goto LABEL_113;
                  }
                  if (v44 >= 0xFB)
                  {
                    int v49 = *(unsigned __int16 *)((char *)a1 + v6);
                    unsigned int v46 = v49 | 0xFFFF0000;
                    unsigned int v47 = v49 ^ 0xFFFF;
                  }
                  else
                  {
LABEL_99:
                    int v45 = *((unsigned __int8 *)a1 + v6);
                    unsigned int v46 = v45 | 0xFFFFFF00;
                    unsigned int v47 = v45 ^ 0xFF;
                    if (v6 > 3)
                    {
                      int v48 = 6;
                      goto LABEL_106;
                    }
                  }
                  unsigned int v50 = ((1 << v8) + 1) >> v8;
                  if (v50 <= 0xFFFA)
                  {
                    int v48 = v50 + 5;
                    if (v50 > 0xFA)
                    {
                      char v51 = 16;
LABEL_112:
                      unsigned int v53 = (1 << v51) - v48;
                      if ((v53 & 0x80000000) == 0) {
                        goto LABEL_114;
                      }
                      goto LABEL_113;
                    }
LABEL_106:
                    char v51 = 8;
                    goto LABEL_112;
                  }
LABEL_113:
                  unsigned int v53 = 0x7FFFFFFF;
LABEL_114:
                  if (v53 > v47)
                  {
                    unsigned int v52 = -v46;
                    goto LABEL_116;
                  }
                  return 0;
                }
                goto LABEL_75;
              }
              int v38 = *(unsigned __int16 *)((char *)a1 + v36);
            }
LABEL_86:
            if (v38)
            {
              int v41 = (v38 - 1) << v37;
              if (v36 > 3) {
                int v41 = 0;
              }
              if (v36)
              {
                if (v36 <= 3) {
                  int v42 = v36;
                }
                else {
                  int v42 = 4;
                }
                switch(v42)
                {
                  case 2:
                    int v43 = *a1;
                    break;
                  case 3:
                    int v43 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
                    break;
                  case 4:
                    int v43 = *(_DWORD *)a1;
                    break;
                  default:
                    int v43 = *(unsigned __int8 *)a1;
                    break;
                }
              }
              else
              {
                int v43 = 0;
              }
              unsigned int v52 = v32 + (v43 | v41) + 1;
LABEL_116:
              uint64_t result = v52 - 1;
              if (v52 > 1) {
                return result;
              }
              return 0;
            }
            goto LABEL_95;
          }
LABEL_66:
          unsigned int v32 = 0x7FFFFFFF;
          goto LABEL_67;
        }
        int v24 = v25 + 5;
      }
      else
      {
        int v24 = 6;
      }
      unsigned int v27 = (1 << v23) - v24;
      if ((v27 & 0x80000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_54;
    }
  }
  int v18 = *((unsigned __int8 *)a1 + v16);
  if (!*((unsigned char *)a1 + v16)) {
    goto LABEL_42;
  }
LABEL_32:
  int v20 = (v18 - 1) << v17;
  if (v16 > 3) {
    int v20 = 0;
  }
  if (v16)
  {
    if (v16 <= 3) {
      int v21 = v16;
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v13 + (v22 | v20) + 1;
}

void sub_1C9AC0568(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = ((*(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(void *)(v6 + 64);
  if (v7 <= 0x38) {
    unint64_t v7 = 56;
  }
  char v8 = 8;
  char v9 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v11 = ((1 << v9) + 1) >> v9;
    if (v11 >= 0xFFFB) {
      char v12 = 32;
    }
    else {
      char v12 = 16;
    }
    if (v11 >= 0xFB) {
      char v8 = v12;
    }
    else {
      char v8 = 8;
    }
    if (v11 > 0xFFFA)
    {
LABEL_16:
      unsigned int v14 = 2147483646;
      goto LABEL_17;
    }
    int v10 = v11 + 5;
  }
  else
  {
    int v10 = 6;
  }
  int v13 = (1 << v8) - v10;
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v13 < 0) {
    goto LABEL_16;
  }
LABEL_17:
  if (v7 > 3) {
    goto LABEL_21;
  }
  unsigned int v15 = ((1 << v9) + 1) >> v9;
  uint64_t v16 = 2;
  if (v15 > 0xFFFA) {
    uint64_t v16 = 4;
  }
  if (v15 <= 0xFA) {
LABEL_21:
  }
    uint64_t v16 = 1;
  size_t v17 = v16 + v7;
  char v18 = 8 * (v16 + v7);
  if (a3 <= v14)
  {
    int v19 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v22 = ((a3 - v14 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v22))
    {
      int v19 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v22 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v20 = ~v14 + a2;
    if (v17 < 4)
    {
      int v21 = (v20 >> v18) + 1;
      if (v17)
      {
        int v23 = v20 & ~(-1 << v18);
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        goto LABEL_106;
      case 2:
        goto LABEL_107;
      case 3:
        goto LABEL_111;
      case 4:
        goto LABEL_108;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_42;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_42;
    case 3:
LABEL_111:
      __break(1u);
      JUMPOUT(0x1C9AC0AB0);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_41;
    default:
LABEL_41:
      if (!a2) {
        return;
      }
LABEL_42:
      char v24 = 8;
      if (v7 <= 3)
      {
        unsigned int v26 = ((1 << v9) + 1) >> v9;
        if (v26 >= 0xFFFB) {
          char v27 = 32;
        }
        else {
          char v27 = 16;
        }
        if (v26 >= 0xFB) {
          char v24 = v27;
        }
        else {
          char v24 = 8;
        }
        if (v26 > 0xFFFA) {
          goto LABEL_53;
        }
        int v25 = v26 + 5;
      }
      else
      {
        int v25 = 6;
      }
      unsigned int v28 = (1 << v24) - v25;
      if ((v28 & 0x80000000) == 0) {
        goto LABEL_54;
      }
LABEL_53:
      unsigned int v28 = 0x7FFFFFFF;
LABEL_54:
      char v29 = 8;
      if (v7 <= 3)
      {
        unsigned int v31 = ((1 << v9) + 1) >> v9;
        if (v31 >= 0xFFFB) {
          char v32 = 32;
        }
        else {
          char v32 = 16;
        }
        if (v31 >= 0xFB) {
          char v29 = v32;
        }
        else {
          char v29 = 8;
        }
        if (v31 > 0xFFFA) {
          goto LABEL_65;
        }
        int v30 = v31 + 5;
      }
      else
      {
        int v30 = 6;
      }
      unsigned int v33 = (1 << v29) - v30;
      if ((v33 & 0x80000000) == 0) {
        goto LABEL_66;
      }
LABEL_65:
      unsigned int v33 = 0x7FFFFFFF;
LABEL_66:
      if (v7 > 3) {
        goto LABEL_70;
      }
      unsigned int v34 = ((1 << v9) + 1) >> v9;
      uint64_t v35 = 2;
      if (v34 > 0xFFFA) {
        uint64_t v35 = 4;
      }
      if (v34 <= 0xFA) {
LABEL_70:
      }
        uint64_t v35 = 1;
      size_t v17 = v35 + v7;
      char v36 = 8 * (v35 + v7);
      BOOL v37 = v28 >= v33;
      unsigned int v38 = v28 - v33;
      if (v38 != 0 && v37)
      {
        if (v17 <= 3)
        {
          unsigned int v41 = ((v38 + ~(-1 << v36)) >> v36) + 1;
          if (HIWORD(v41))
          {
            int v39 = 4;
          }
          else if (v41 >= 0x100)
          {
            int v39 = 2;
          }
          else
          {
            int v39 = v41 > 1;
          }
        }
        else
        {
          int v39 = 1;
        }
      }
      else
      {
        int v39 = 0;
      }
      if (a2 + 1 > v33)
      {
        unsigned int v40 = a2 - v33;
        if (v17 < 4)
        {
          int v21 = (v40 >> v36) + 1;
          if (v17)
          {
            int v42 = v40 & ~(-1 << v36);
            bzero(a1, v17);
            if (v17 == 3)
            {
              *(_WORD *)a1 = v42;
              a1[2] = BYTE2(v42);
            }
            else if (v17 == 2)
            {
              *(_WORD *)a1 = v42;
            }
            else
            {
              *a1 = v42;
            }
          }
        }
        else
        {
          bzero(a1, v17);
          *(_DWORD *)a1 = v40;
          int v21 = 1;
        }
        switch(v39)
        {
          case 1:
LABEL_106:
            a1[v17] = v21;
            return;
          case 2:
LABEL_107:
            *(_WORD *)&a1[v17] = v21;
            return;
          case 3:
            goto LABEL_111;
          case 4:
LABEL_108:
            *(_DWORD *)&a1[v17] = v21;
            return;
          default:
            return;
        }
      }
      switch(v39)
      {
        case 1:
          a1[v17] = 0;
          goto LABEL_97;
        case 2:
          *(_WORD *)&a1[v17] = 0;
          goto LABEL_97;
        case 3:
          goto LABEL_111;
        case 4:
          *(_DWORD *)&a1[v17] = 0;
          goto LABEL_97;
        default:
LABEL_97:
          if (a2 == -1) {
            return;
          }
          int v43 = ~a2;
          if (v7 > 3) {
            goto LABEL_101;
          }
          unsigned int v44 = ((1 << v9) + 1) >> v9;
          if (v44 > 0xFFFA)
          {
            *(_DWORD *)&a1[v7] = v43;
          }
          else if (v44 > 0xFA)
          {
            *(_WORD *)&a1[v7] = v43;
          }
          else
          {
LABEL_101:
            a1[v7] = v43;
          }
          break;
      }
      return;
  }
}

uint64_t sub_1C9AC0B00(unsigned __int16 *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = ((*(unsigned __int8 *)(v2 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + *(void *)(v2 + 64);
  if (v3 <= 0x38) {
    uint64_t v4 = 56;
  }
  else {
    uint64_t v4 = v3;
  }
  char v5 = 8 * v4;
  if (v4 > 3)
  {
LABEL_5:
    int v6 = *((unsigned __int8 *)a1 + v4);
    unsigned int v7 = v6 | 0xFFFFFF00;
    unsigned int v8 = v6 ^ 0xFF;
    if (v4 > 3)
    {
      int v9 = 6;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  unsigned int v10 = ((1 << v5) + 1) >> v5;
  int v11 = 251 - v10;
  if ((int)(251 - v10) < 0) {
    int v11 = 0x7FFFFFFF;
  }
  int v12 = 65531 - v10;
  if ((int)(65531 - v10) < 0) {
    int v12 = 0x7FFFFFFF;
  }
  if (v10 <= 0xFFFA) {
    int v13 = v12;
  }
  else {
    int v13 = 0x7FFFFFFF;
  }
  if (v10 >= 0xFB) {
    int v11 = v13;
  }
  if (v10 > 0xFFFA)
  {
    if (v11)
    {
      unsigned int v7 = *(_DWORD *)((char *)a1 + v4);
      unsigned int v8 = ~v7;
      goto LABEL_28;
    }
    uint64_t v14 = v4 + 4;
  }
  else if (v10 > 0xFA)
  {
    if (v11)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v4);
      unsigned int v7 = v15 | 0xFFFF0000;
      unsigned int v8 = v15 ^ 0xFFFF;
LABEL_24:
      unsigned int v16 = ((1 << v5) + 1) >> v5;
      if (v16 <= 0xFFFA)
      {
        int v9 = v16 + 5;
        if (v16 > 0xFA)
        {
          char v17 = 16;
LABEL_27:
          unsigned int v18 = (1 << v17) - v9;
          if ((v18 & 0x80000000) == 0) {
            goto LABEL_29;
          }
          goto LABEL_28;
        }
LABEL_26:
        char v17 = 8;
        goto LABEL_27;
      }
LABEL_28:
      unsigned int v18 = 0x7FFFFFFF;
LABEL_29:
      if (v18 > v8) {
        return -v7;
      }
      else {
        return 0;
      }
    }
    uint64_t v14 = v4 + 2;
  }
  else
  {
    if (v11) {
      goto LABEL_5;
    }
    uint64_t v14 = v4 + 1;
  }
  if (!*((unsigned char *)a1 + v14)) {
    return 0;
  }
  int v20 = (*((unsigned __int8 *)a1 + v14) - 1) << (8 * v14);
  if (v14 > 3) {
    int v20 = 0;
  }
  if (v14)
  {
    if (v14 > 3) {
      LODWORD(v14) = 4;
    }
    switch((int)v14)
    {
      case 2:
        LODWORD(v14) = *a1;
        break;
      case 3:
        LODWORD(v14) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v14) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v14) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v14 | v20) + 1;
}

void sub_1C9AC0D3C(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = ((*(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + *(void *)(v4 + 64);
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  char v6 = 8;
  char v7 = 8 * v5;
  if (v5 <= 3)
  {
    unsigned int v9 = ((1 << v7) + 1) >> v7;
    if (v9 >= 0xFFFB) {
      char v10 = 32;
    }
    else {
      char v10 = 16;
    }
    if (v9 >= 0xFB) {
      char v6 = v10;
    }
    else {
      char v6 = 8;
    }
    if (v9 > 0xFFFA) {
      goto LABEL_14;
    }
    int v8 = v9 + 5;
  }
  else
  {
    int v8 = 6;
  }
  unsigned int v11 = (1 << v6) - v8;
  if ((v11 & 0x80000000) != 0) {
LABEL_14:
  }
    unsigned int v11 = 0x7FFFFFFF;
  if (v5 > 3) {
    goto LABEL_19;
  }
  unsigned int v12 = ((1 << v7) + 1) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFA) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFA) {
LABEL_19:
  }
    uint64_t v13 = 1;
  size_t v14 = v13 + v5;
  if (v11 >= a2)
  {
    if (!v11) {
      a1[v14] = 0;
    }
    if (a2)
    {
      int v17 = -a2;
      if (v5 <= 3)
      {
        unsigned int v19 = ((1 << v7) + 1) >> v7;
        if (v19 > 0xFFFA)
        {
          *(_DWORD *)&a1[v5] = v17;
          return;
        }
        if (v19 > 0xFA)
        {
          *(_WORD *)&a1[v5] = v17;
          return;
        }
      }
      a1[v5] = v17;
      return;
    }
    return;
  }
  unsigned int v15 = ~v11 + a2;
  if (v14 >= 4)
  {
    bzero(a1, v14);
    *(_DWORD *)a1 = v15;
    LOBYTE(v16) = 1;
    if (v11) {
      return;
    }
    goto LABEL_40;
  }
  int v16 = (v15 >> (8 * v14)) + 1;
  if (!v14)
  {
LABEL_39:
    if (v11) {
      return;
    }
    goto LABEL_40;
  }
  int v18 = v15 & ~(-1 << (8 * v14));
  bzero(a1, v14);
  if (v14 == 3)
  {
    *(_WORD *)a1 = v18;
    a1[2] = BYTE2(v18);
    goto LABEL_39;
  }
  if (v14 == 2)
  {
    *(_WORD *)a1 = v18;
    if (v11) {
      return;
    }
    goto LABEL_40;
  }
  *a1 = v18;
  if (!v11) {
LABEL_40:
  }
    a1[v14] = v16;
}

uint64_t OUTLINED_FUNCTION_10_69()
{
  uint64_t v2 = *(void *)(v0 + 280);
  *(void *)uint64_t v2 = *(void *)(v0 + 256);
  *(unsigned char *)(v2 + 8) = 1;
  return swift_storeEnumTagMultiPayload();
}

uint64_t SiriKitParameterMetadata.__allocating_init(parameterName:shouldResolve:confirmationStates:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a2;
  *(unsigned char *)(result + 24) = a3;
  *(void *)(result + 16) = a4;
  return result;
}

uint64_t SiriKitParameterMetadata.confirmationStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SiriKitParameterMetadata.shouldResolve.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t SiriKitParameterMetadata.parameterName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static SiriKitParameterMetadata.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1C9702A04(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24))
  {
    return 0;
  }
  if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)) {
    return 1;
  }

  return sub_1C9BEE618();
}

uint64_t sub_1C9AC10D8(uint64_t *a1, uint64_t *a2)
{
  return static SiriKitParameterMetadata.== infix(_:_:)(*a1, *a2) & 1;
}

uint64_t method lookup function for SiriKitParameterMetadata(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriKitParameterMetadata);
}

uint64_t dispatch thunk of SiriKitParameterMetadata.__allocating_init(parameterName:shouldResolve:confirmationStates:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void static SiriKitPlatformErrorCase.fromParse(_:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_6_0();
  int v8 = (uint64_t *)(v7 - v6);
  sub_1C97D1F40(a1, v7 - v6);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C97F25EC((uint64_t)v8);
LABEL_16:
    char v21 = 3;
    goto LABEL_17;
  }
  uint64_t v10 = *v8;
  unint64_t v9 = v8[1];
  v22[0] = *v8;
  v22[1] = v9;
  sub_1C9604C1C();
  sub_1C9604B84();
  if ((sub_1C9BED4F8() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  unint64_t v11 = (0x80000001C9C2C4C0 & 0xF00000000000000) >> 40;
  if ((0x80000001C9C2C4C0 & 0x2000000000000000) == 0) {
    unint64_t v11 = 1835008;
  }
  uint64_t v12 = 11;
  if ((0x80000001C9C2C4C0 & 0x1000000000000000) == 0) {
    uint64_t v12 = 7;
  }
  unint64_t v13 = v11 | v12;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C9AC1768(v13, v10, v9);
  MEMORY[0x1CB78A7E0](v14);
  swift_bridgeObjectRelease();
  char v15 = sub_1C9AC180C();
  if (v15 != 3)
  {
    char v21 = v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C9BECF88();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v17 = sub_1C9BECF78();
  os_log_type_t v18 = sub_1C9BEDC88();
  if (!os_log_type_enabled(v17, v18))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  unsigned int v19 = (uint8_t *)swift_slowAlloc();
  uint64_t v20 = swift_slowAlloc();
  v22[0] = v20;
  *(_DWORD *)unsigned int v19 = 136315138;
  swift_bridgeObjectRetain();
  sub_1C95FF228(v10, v9, v22);
  sub_1C9BEDF68();
  swift_bridgeObjectRelease_n();
  char v21 = 3;
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1C95F9000, v17, v18, "Unknown platform error invocation identifier: %s", v19, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1CB78C440](v20, -1, -1);
  MEMORY[0x1CB78C440](v19, -1, -1);

LABEL_17:
  *a2 = v21;
}

uint64_t SiriKitPlatformErrorCase.makePluginActionToRenderError()@<X0>(void *a1@<X8>)
{
  uint64_t v1 = sub_1C9BEAB08();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  unint64_t v11 = (void *)(v10 - v9);
  uint64_t v12 = (int *)type metadata accessor for Input(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_6_0();
  uint64_t v17 = v16 - v15;
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  *unint64_t v11 = 0xD00000000000001CLL;
  v11[1] = 0x80000001C9C2C4C0;
  v11[2] = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = v17 + v12[7];
  *(void *)(v18 + 32) = 0;
  *(_OWORD *)uint64_t v18 = 0u;
  *(_OWORD *)(v18 + 16) = 0u;
  sub_1C97D1F40((uint64_t)v11, v17 + v12[5]);
  *(void *)(v17 + v12[6]) = MEMORY[0x1E4FBC860];
  sub_1C9BEAAF8();
  sub_1C97F25EC((uint64_t)v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v17, v6, v1);
  *(unsigned char *)(v17 + v12[8]) = 0;
  return PluginAction.init(flowHandlerId:input:)(0xD000000000000020, 0x80000001C9C13D60, v17, a1);
}

unint64_t SiriKitPlatformErrorCase.invocationId.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t sub_1C9AC1768(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 < result >> 14)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_1C9BED768();
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1C9AC180C()
{
  unint64_t v0 = sub_1C9BEE428();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t SiriKitPlatformErrorCase.identifier.getter()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 == 1) {
    unint64_t v1 = 0xD00000000000002ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD00000000000002CLL;
  }
}

BOOL static SiriKitPlatformErrorCase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SiriKitPlatformErrorCase.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t SiriKitPlatformErrorCase.hashValue.getter()
{
  return sub_1C9BEE768();
}

unint64_t sub_1C9AC1950()
{
  unint64_t result = qword_1EA598B80;
  if (!qword_1EA598B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598B80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SiriKitPlatformErrorCase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AC1A68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitPlatformErrorCase()
{
  return &type metadata for SiriKitPlatformErrorCase;
}

SiriKitFlow::SiriKitReliabilityCodes_optional __swiftcall SiriKitReliabilityCodes.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C9BEE668();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 107;
  switch(v3)
  {
    case 0:
      goto LABEL_109;
    case 1:
      char v5 = 1;
      goto LABEL_109;
    case 2:
      char v5 = 2;
      goto LABEL_109;
    case 3:
      char v5 = 3;
      goto LABEL_109;
    case 4:
      char v5 = 4;
      goto LABEL_109;
    case 5:
      char v5 = 5;
      goto LABEL_109;
    case 6:
      char v5 = 6;
      goto LABEL_109;
    case 7:
      char v5 = 7;
      goto LABEL_109;
    case 8:
      char v5 = 8;
      goto LABEL_109;
    case 9:
      char v5 = 9;
      goto LABEL_109;
    case 10:
      char v5 = 10;
      goto LABEL_109;
    case 11:
      char v5 = 11;
      goto LABEL_109;
    case 12:
      char v5 = 12;
      goto LABEL_109;
    case 13:
      char v5 = 13;
      goto LABEL_109;
    case 14:
      char v5 = 14;
      goto LABEL_109;
    case 15:
      char v5 = 15;
      goto LABEL_109;
    case 16:
      char v5 = 16;
      goto LABEL_109;
    case 17:
      char v5 = 17;
      goto LABEL_109;
    case 18:
      char v5 = 18;
      goto LABEL_109;
    case 19:
      char v5 = 19;
      goto LABEL_109;
    case 20:
      char v5 = 20;
      goto LABEL_109;
    case 21:
      char v5 = 21;
      goto LABEL_109;
    case 22:
      char v5 = 22;
      goto LABEL_109;
    case 23:
      char v5 = 23;
      goto LABEL_109;
    case 24:
      char v5 = 24;
      goto LABEL_109;
    case 25:
      char v5 = 25;
      goto LABEL_109;
    case 26:
      char v5 = 26;
      goto LABEL_109;
    case 27:
      char v5 = 27;
      goto LABEL_109;
    case 28:
      char v5 = 28;
      goto LABEL_109;
    case 29:
      char v5 = 29;
      goto LABEL_109;
    case 30:
      char v5 = 30;
      goto LABEL_109;
    case 31:
      char v5 = 31;
      goto LABEL_109;
    case 32:
      char v5 = 32;
      goto LABEL_109;
    case 33:
      char v5 = 33;
      goto LABEL_109;
    case 34:
      char v5 = 34;
      goto LABEL_109;
    case 35:
      char v5 = 35;
      goto LABEL_109;
    case 36:
      char v5 = 36;
      goto LABEL_109;
    case 37:
      char v5 = 37;
      goto LABEL_109;
    case 38:
      char v5 = 38;
      goto LABEL_109;
    case 39:
      char v5 = 39;
      goto LABEL_109;
    case 40:
      char v5 = 40;
      goto LABEL_109;
    case 41:
      char v5 = 41;
      goto LABEL_109;
    case 42:
      char v5 = 42;
      goto LABEL_109;
    case 43:
      char v5 = 43;
      goto LABEL_109;
    case 44:
      char v5 = 44;
      goto LABEL_109;
    case 45:
      char v5 = 45;
      goto LABEL_109;
    case 46:
      char v5 = 46;
      goto LABEL_109;
    case 47:
      char v5 = 47;
      goto LABEL_109;
    case 48:
      char v5 = 48;
      goto LABEL_109;
    case 49:
      char v5 = 49;
      goto LABEL_109;
    case 50:
      char v5 = 50;
      goto LABEL_109;
    case 51:
      char v5 = 51;
      goto LABEL_109;
    case 52:
      char v5 = 52;
      goto LABEL_109;
    case 53:
      char v5 = 53;
      goto LABEL_109;
    case 54:
      char v5 = 54;
      goto LABEL_109;
    case 55:
      char v5 = 55;
      goto LABEL_109;
    case 56:
      char v5 = 56;
      goto LABEL_109;
    case 57:
      char v5 = 57;
      goto LABEL_109;
    case 58:
      char v5 = 58;
      goto LABEL_109;
    case 59:
      char v5 = 59;
      goto LABEL_109;
    case 60:
      char v5 = 60;
      goto LABEL_109;
    case 61:
      char v5 = 61;
      goto LABEL_109;
    case 62:
      char v5 = 62;
      goto LABEL_109;
    case 63:
      char v5 = 63;
      goto LABEL_109;
    case 64:
      char v5 = 64;
      goto LABEL_109;
    case 65:
      char v5 = 65;
      goto LABEL_109;
    case 66:
      char v5 = 66;
      goto LABEL_109;
    case 67:
      char v5 = 67;
      goto LABEL_109;
    case 68:
      char v5 = 68;
      goto LABEL_109;
    case 69:
      char v5 = 69;
      goto LABEL_109;
    case 70:
      char v5 = 70;
      goto LABEL_109;
    case 71:
      char v5 = 71;
      goto LABEL_109;
    case 72:
      char v5 = 72;
      goto LABEL_109;
    case 73:
      char v5 = 73;
      goto LABEL_109;
    case 74:
      char v5 = 74;
      goto LABEL_109;
    case 75:
      char v5 = 75;
      goto LABEL_109;
    case 76:
      char v5 = 76;
      goto LABEL_109;
    case 77:
      char v5 = 77;
      goto LABEL_109;
    case 78:
      char v5 = 78;
      goto LABEL_109;
    case 79:
      char v5 = 79;
      goto LABEL_109;
    case 80:
      char v5 = 80;
      goto LABEL_109;
    case 81:
      char v5 = 81;
      goto LABEL_109;
    case 82:
      char v5 = 82;
      goto LABEL_109;
    case 83:
      char v5 = 83;
      goto LABEL_109;
    case 84:
      char v5 = 84;
      goto LABEL_109;
    case 85:
      char v5 = 85;
      goto LABEL_109;
    case 86:
      char v5 = 86;
      goto LABEL_109;
    case 87:
      char v5 = 87;
      goto LABEL_109;
    case 88:
      char v5 = 88;
      goto LABEL_109;
    case 89:
      char v5 = 89;
      goto LABEL_109;
    case 90:
      char v5 = 90;
      goto LABEL_109;
    case 91:
      char v5 = 91;
      goto LABEL_109;
    case 92:
      char v5 = 92;
      goto LABEL_109;
    case 93:
      char v5 = 93;
      goto LABEL_109;
    case 94:
      char v5 = 94;
      goto LABEL_109;
    case 95:
      char v5 = 95;
      goto LABEL_109;
    case 96:
      char v5 = 96;
      goto LABEL_109;
    case 97:
      char v5 = 97;
      goto LABEL_109;
    case 98:
      char v5 = 98;
      goto LABEL_109;
    case 99:
      char v5 = 99;
      goto LABEL_109;
    case 100:
      char v5 = 100;
      goto LABEL_109;
    case 101:
      char v5 = 101;
      goto LABEL_109;
    case 102:
      char v5 = 102;
      goto LABEL_109;
    case 103:
      char v5 = 103;
      goto LABEL_109;
    case 104:
      char v5 = 104;
      goto LABEL_109;
    case 105:
      char v5 = 105;
      goto LABEL_109;
    case 106:
      char v5 = 106;
LABEL_109:
      char v6 = v5;
      break;
    case 107:
      break;
    case 108:
      char v6 = 108;
      break;
    case 109:
      char v6 = 109;
      break;
    case 110:
      char v6 = 110;
      break;
    case 111:
      char v6 = 111;
      break;
    case 112:
      char v6 = 112;
      break;
    case 113:
      char v6 = 113;
      break;
    case 114:
      char v6 = 114;
      break;
    case 115:
      char v6 = 115;
      break;
    case 116:
      char v6 = 116;
      break;
    case 117:
      char v6 = 117;
      break;
    case 118:
      char v6 = 118;
      break;
    case 119:
      char v6 = 119;
      break;
    case 120:
      char v6 = 120;
      break;
    case 121:
      char v6 = 121;
      break;
    case 122:
      char v6 = 122;
      break;
    case 123:
      char v6 = 123;
      break;
    case 124:
      char v6 = 124;
      break;
    default:
      char v6 = 125;
      break;
  }
  char *v2 = v6;
  return result;
}

uint64_t sub_1C9AC22F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C990CBF4(*a1, *a2);
}

unint64_t sub_1C9AC2304()
{
  unint64_t result = qword_1EA598B88;
  if (!qword_1EA598B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598B88);
  }
  return result;
}

uint64_t sub_1C9AC2350()
{
  return sub_1C96A6B8C();
}

uint64_t sub_1C9AC2358(uint64_t a1)
{
  return sub_1C98A4F6C(a1, *v1);
}

uint64_t sub_1C9AC2360()
{
  return sub_1C96A6C7C();
}

SiriKitFlow::SiriKitReliabilityCodes_optional sub_1C9AC2368(Swift::String *a1)
{
  return SiriKitReliabilityCodes.init(rawValue:)(*a1);
}

unint64_t sub_1C9AC2374@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = SiriKitReliabilityCodes.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C9AC23C4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for ExecuteResponse(0);
  uint64_t v6 = OUTLINED_FUNCTION_22(v5);
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_222();
  sub_1C9AC8C14(a1, v2, (void (*)(void))type metadata accessor for ExecuteResponse);
  return a2(v2);
}

void sub_1C9AC2454()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v17 = v0;
  uint64_t v20 = v1;
  uint64_t v21 = v2;
  uint64_t v19 = v3;
  uint64_t v18 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = sub_1C9AC2D68();
  type metadata accessor for Input(255);
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v12 = *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v13 = *(int *)(TupleTypeMetadata3 + 64);
  sub_1C9729480(v19, (uint64_t)v9);
  *(void *)&v9[v12] = v20;
  *(void *)&v9[v13] = v21;
  uint64_t v14 = v18;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_74();
  uint64_t v16 = v10 + *(void *)(v15 + 136);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v16, v9, v14);
  swift_endAccess();
  OUTLINED_FUNCTION_10();
}

void sub_1C9AC25FC()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v15 = v0;
  uint64_t v16 = v1;
  uint64_t v14 = v2;
  uint64_t v3 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = sub_1C9AC2D68();
  sub_1C95FD5D8(v14, (uint64_t)v9);
  uint64_t v11 = v16;
  *((void *)v9 + 5) = v15;
  *((void *)v9 + 6) = v11;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_74();
  uint64_t v13 = v10 + *(void *)(v12 + 136);
  OUTLINED_FUNCTION_3_0();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v13, v9, v3);
  swift_endAccess();
  OUTLINED_FUNCTION_10();
}

void sub_1C9AC2730()
{
}

void AppResolutionFlowStrategy.makeAppResolutionSuccessfulResponse(app:intent:completion:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = &unk_1EA598B90;
  OUTLINED_FUNCTION_12_1(v4);
}

#error "1C9AC2920: call analysis failed (funcsize=6)"

void AppResolutionFlowStrategy.makeAppResolutionUnsuccessfulResponse(intent:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  OUTLINED_FUNCTION_11_1();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v30 = OUTLINED_FUNCTION_22(v29);
  MEMORY[0x1F4188790](v30, v31);
  OUTLINED_FUNCTION_3_59();
  uint64_t v32 = sub_1C9BECAA8();
  OUTLINED_FUNCTION_0_2();
  uint64_t v34 = v33;
  uint64_t v36 = *(void *)(v35 + 64);
  MEMORY[0x1F4188790](v37, v38);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))((char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v32);
  unint64_t v39 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v40 + v39, (char *)&a9 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
  uint64_t v41 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v20, 1, 1, v41);
  int v42 = (void *)swift_allocObject();
  v42[2] = 0;
  v42[3] = 0;
  void v42[4] = &unk_1EA598BA0;
  v42[5] = v40;
  v42[6] = v26;
  v42[7] = v24;
  sub_1C9BEC838();
}

void sub_1C9AC2AE0()
{
}

void AppResolutionFlowStrategy.makeErrorOutput(intent:error:completion:)()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v1 = OUTLINED_FUNCTION_22(v0);
  MEMORY[0x1F4188790](v1, v2);
  uint64_t v3 = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_18(v3);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = 0;
  v4[3] = 0;
  v4[4] = &unk_1EA598BA8;
  OUTLINED_FUNCTION_12_1(v4);
}

uint64_t sub_1C9AC2CC8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C99BCE38();
}

uint64_t sub_1C9AC2D68()
{
  OUTLINED_FUNCTION_72_2();
  uint64_t v0 = swift_allocObject();
  sub_1C9AC2DD8();
  return v0;
}

uint64_t sub_1C9AC2DD8()
{
  OUTLINED_FUNCTION_72_2();
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v6 + 32))();
  sub_1C95FD5D8(v5, v1 + *(void *)(*(void *)v1 + 104));
  OUTLINED_FUNCTION_74();
  sub_1C95FD5D8(v4, v1 + *(void *)(v7 + 112));
  OUTLINED_FUNCTION_74();
  sub_1C95FD5D8(v3, v1 + *(void *)(v8 + 120));
  OUTLINED_FUNCTION_74();
  type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_74();
  uint64_t v10 = (void *)(v1 + *(void *)(v9 + 128));
  *uint64_t v10 = v2;
  v10[1] = v0;
  return v1;
}

uint64_t (*sub_1C9AC2F24())(uint64_t a1, uint64_t a2)
{
  return sub_1C9AC34BC;
}

void sub_1C9AC2F40()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(*v0 + 80);
  uint64_t v5 = *(void *)(*v0 + 88);
  uint64_t v6 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (void **)((char *)v44 - v15);
  uint64_t v17 = (uint64_t)v0 + *(void *)(v3 + 136);
  swift_beginAccess();
  (*(void (**)(void **, uint64_t, uint64_t))(v8 + 16))(v16, v17, v6);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v18 = *v16;
    OUTLINED_FUNCTION_74();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(v5 + 32))(&v45, v2, v4, v5);
    if ((_BYTE)v45)
    {
      if (v45 == 1)
      {
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_1C9BECF88();
        __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
        uint64_t v20 = sub_1C9BECF78();
        os_log_type_t v21 = sub_1C9BEDC78();
        if (os_log_type_enabled(v20, v21))
        {
          uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_19();
          v44[0] = v18;
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl(&dword_1C95F9000, v20, v21, "AppResolutionFlow strategy indicated it wants to handle the input. Moving to execute.", v22, 2u);
          uint64_t v18 = (void *)v44[0];
          OUTLINED_FUNCTION_11_4();
        }

        type metadata accessor for Input(255);
        swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v24 = *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v25 = *(int *)(TupleTypeMetadata3 + 64);
        sub_1C9AC8C14(v2, (uint64_t)v13, (void (*)(void))type metadata accessor for Input);
        *(void *)&v13[v24] = v18;
        *(void *)&v13[v25] = 0;
        swift_storeEnumTagMultiPayload();
        OUTLINED_FUNCTION_3_0();
        uint64_t v26 = OUTLINED_FUNCTION_20_60();
        v27(v26);
        swift_endAccess();
      }
      else
      {
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v39 = sub_1C9BECF88();
        __swift_project_value_buffer(v39, (uint64_t)qword_1EBC7A520);
        uint64_t v40 = sub_1C9BECF78();
        os_log_type_t v41 = sub_1C9BEDC78();
        if (os_log_type_enabled(v40, v41))
        {
          *(_WORD *)OUTLINED_FUNCTION_19() = 0;
          OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v42, v43, "AppResolutionFlow strategy indicated it wants to ignore the input. Ignoring...");
          OUTLINED_FUNCTION_11_4();
        }
      }
    }
    else
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_1C9BECF88();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
      uint64_t v34 = sub_1C9BECF78();
      os_log_type_t v35 = sub_1C9BEDC78();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl(&dword_1C95F9000, v34, v35, "AppResolutionFlow strategy indicated it wants to cancel. Cancelling.", v36, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      swift_storeEnumTagMultiPayload();
      OUTLINED_FUNCTION_3_0();
      uint64_t v37 = OUTLINED_FUNCTION_20_60();
      v38(v37);
      swift_endAccess();
    }
  }
  else
  {
    (*(void (**)(void **, uint64_t))(v8 + 8))(v16, v6);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1C9BECF88();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EBC7A520);
    uint64_t v29 = sub_1C9BECF78();
    os_log_type_t v30 = sub_1C9BEDC78();
    if (os_log_type_enabled(v29, v30))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v31, v32, "AppResolutionFlow received input but is not waiting for any. Ignoring...");
      OUTLINED_FUNCTION_11_4();
    }
  }
  OUTLINED_FUNCTION_10();
}

void sub_1C9AC345C()
{
  OUTLINED_FUNCTION_4_0();
  Flow.deferToExecuteAsync(_:)(v0, v1, v2, (uint64_t)&off_1EC7090F0);
}

uint64_t sub_1C9AC34BC(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58B070);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C9BEF570;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1C9777610;
  *(void *)(v6 + 24) = v5;
  *(void *)(inited + 32) = sub_1C9AC9000;
  *(void *)(inited + 40) = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = static CommonGuardFlowUtils.makeGuardFlow(withGuards:)(inited);
  swift_setDeallocating();
  sub_1C95FE50C();
  return v7;
}

void sub_1C9AC3594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v4;
  v8[3] = a3;
  v8[4] = a4;
  v8[5] = a2;
  sub_1C9BEC838();
}

uint64_t sub_1C9AC36AC()
{
  uint64_t v2 = OUTLINED_FUNCTION_36_36();
  uint64_t v3 = type metadata accessor for ExecuteResponse(v2);
  uint64_t v4 = OUTLINED_FUNCTION_22(v3);
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_3_59();
  sub_1C9AC8C14(v0, v1, (void (*)(void))type metadata accessor for ExecuteResponse);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);
  sub_1C9BEDA08();
  return sub_1C9AC8BC8();
}

void sub_1C9AC3750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a5;
  uint64_t v40 = a4;
  uint64_t v37 = a2;
  uint64_t v8 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9);
  os_log_type_t v35 = (void *)((char *)v32 - v10);
  uint64_t v38 = type metadata accessor for ExecuteResponse(0);
  MEMORY[0x1F4188790](v38, v11);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1C9BECF88();
  uint64_t v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC78();
  if (os_log_type_enabled(v14, v15))
  {
    v32[1] = v13;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = a3;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v41 = a1;
    *(void *)&v42[0] = v18;
    uint64_t v34 = v8;
    *(_DWORD *)uint64_t v17 = 136315138;
    v32[0] = v17 + 4;
    sub_1C9BEC9C8();
    sub_1C962F050(&qword_1EA58A5B0, MEMORY[0x1E4F9F9C8]);
    uint64_t v19 = sub_1C9BEE5A8();
    uint64_t v41 = sub_1C95FF228(v19, v20, (uint64_t *)v42);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v14, v15, "[SiriKitServerAssistedAppResolutionFlow] Pushing authorization guard flows for %s before completion...", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v18, -1, -1);
    os_log_type_t v21 = v17;
    a3 = v33;
    MEMORY[0x1CB78C440](v21, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v22 = sub_1C9BEC988();
  if (v23)
  {
    (*(void (**)(uint64_t))(v5 + *(void *)(*(void *)v5 + 128)))(v22);
    swift_bridgeObjectRelease();
    sub_1C95FD5F0(a3, (uint64_t)v42);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = v5;
    _OWORD v24[3] = a1;
    v24[4] = v37;
    sub_1C95FD5D8(v42, (uint64_t)(v24 + 5));
    type metadata accessor for AnyFlow();
    swift_allocObject();
    sub_1C9BEC838();
  }
  uint64_t v25 = a3;
  uint64_t v26 = sub_1C9BECF78();
  os_log_type_t v27 = sub_1C9BEDC88();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    MEMORY[0x1CB78C440](v28, -1, -1);
  }

  uint64_t v29 = v35;
  uint64_t v30 = (uint64_t)(v35 + 2);
  uint64_t v31 = v37;
  *os_log_type_t v35 = a1;
  v29[1] = v31;
  sub_1C95FD5F0(v25, v30);
  *((unsigned char *)v29 + 56) = 0;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_1C9BEC838();
}

void sub_1C9AC3D5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  v21[1] = a2;
  uint64_t v9 = *v5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D48);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v23 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ExecuteResponse(0);
  MEMORY[0x1F4188790](v22, v13);
  v21[0] = *(void *)(v9 + 80);
  uint64_t v14 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  v21[2] = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v15);
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  uint64_t v16 = sub_1C9BECA68();
  if (v16)
  {
    v28[0] = v16;
    *(void *)&long long v26 = a1;
    sub_1C9BEC9C8();
    sub_1C962F050(&qword_1EA58A5C8, MEMORY[0x1E4F9F9C8]);
    sub_1C9BEC838();
  }
  sub_1C95FD5F0((uint64_t)a3, (uint64_t)v28);
  __swift_project_boxed_opaque_existential_1(v28, v28[3]);
  uint64_t v17 = sub_1C9BECA78();
  if (v17)
  {
    *(void *)&long long v26 = v17;
    uint64_t v27 = a1;
    sub_1C9BEC9C8();
    sub_1C962F050(&qword_1EA58A5C8, MEMORY[0x1E4F9F9C8]);
    sub_1C9BEC838();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v24;
  uint64_t v20 = v25;
  v18[2] = v6;
  v18[3] = v19;
  v18[4] = v20;
  void v18[5] = a1;
  sub_1C9BEC838();
}

void sub_1C9AC4320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v34 = a1;
  uint64_t v31 = *v4;
  uint64_t v7 = sub_1C9BECAA8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7, v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (char *)&v28 - v14;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1C9BECF88();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EBC7A520);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v35 = a2;
  v17(v15, a2, v7);
  uint64_t v18 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC78();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v37 = v30;
    uint64_t v29 = v20;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v28 = v20 + 4;
    v17(v12, (uint64_t)v15, v7);
    uint64_t v21 = sub_1C9BED5D8();
    uint64_t v36 = sub_1C95FF228(v21, v22, &v37);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    uint64_t v23 = v29;
    _os_log_impl(&dword_1C95F9000, v18, v19, "AppResolutionFlow executeResolutionUnsuccessful: %s", v29, 0xCu);
    uint64_t v24 = v30;
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v24, -1, -1);
    MEMORY[0x1CB78C440](v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
  }

  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = v32;
  uint64_t v27 = v33;
  _OWORD v25[2] = v5;
  v25[3] = v26;
  v25[4] = v27;
  sub_1C9BEC838();
}

void sub_1C9AC4688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C9BECF88();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v9 = sub_1C9BECF78();
  os_log_type_t v10 = sub_1C9BEDC78();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v17 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_1C9BEC998();
    sub_1C95FF228(v13, v14, &v17);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v9, v10, "AppResolutionFlow sending prompt for confirmation for app %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v12, -1, -1);
    MEMORY[0x1CB78C440](v11, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v4;
  v15[3] = a1;
  v15[4] = a3;
  v15[5] = a4;
  v15[6] = a2;
  sub_1C9BEC838();
}

void sub_1C9AC4924(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1C9BECF88();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  os_log_type_t v10 = sub_1C9BECF78();
  os_log_type_t v11 = sub_1C9BEDC78();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v25[0] = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v14 = sub_1C9BEC9C8();
    uint64_t v15 = MEMORY[0x1CB78AAA0](a1, v14);
    sub_1C95FF228(v15, v16, v25);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v10, v11, "AppResolutionFlow sending prompt for disambiguation for apps %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v13, -1, -1);
    MEMORY[0x1CB78C440](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1C9BEE3C8();
LABEL_9:
      v25[0] = a1;
      v25[1] = 0;
      _OWORD v25[2] = v17;
      char v26 = 2;
      uint64_t v27 = 0;
      char v28 = 1;
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = v4;
      v18[3] = a1;
      v18[4] = a3;
      void v18[5] = a4;
      v18[6] = a2;
      swift_bridgeObjectRetain();
      sub_1C9BEC838();
    }
  }
  else
  {
    uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  uint64_t v20 = a3;
  uint64_t v21 = sub_1C9BECF78();
  os_log_type_t v22 = sub_1C9BEDC88();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl(&dword_1C95F9000, v21, v22, "AppResolutionFlow executeAppNeedsDisambiguation called with no Apps", v23, 2u);
    MEMORY[0x1CB78C440](v23, -1, -1);
  }

  type metadata accessor for SiriKitServerAssistedAppResolutionFlow.AppResolutionError();
  swift_getWitnessTable();
  uint64_t v24 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  sub_1C9AC3594(a2, v24, v20, a4);
}

void sub_1C9AC4D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  sub_1C9BEC838();
}

uint64_t sub_1C9AC4DFC(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = type metadata accessor for ExecuteResponse(0);
  MEMORY[0x1F4188790](v4, v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10);
  uint64_t v12 = (char *)&v25 - v11;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1C9BECF88();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
  uint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC78();
  if (os_log_type_enabled(v14, v15))
  {
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = v4;
    uint64_t v17 = a2;
    uint64_t v18 = v16;
    *(_WORD *)unint64_t v16 = 0;
    _os_log_impl(&dword_1C95F9000, v14, v15, "AppResolutionFlow successfully sent unsuccessful response.", v16, 2u);
    uint64_t v19 = v18;
    a2 = v17;
    uint64_t v4 = v25;
    MEMORY[0x1CB78C440](v19, -1, -1);
  }

  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a1 + *(void *)(*(void *)a1 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v20, v12, v8);
  swift_endAccess();
  uint64_t v21 = (uint64_t)&v7[*(int *)(v4 + 36)];
  uint64_t v22 = type metadata accessor for PluginAction();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v22);
  *uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  *((void *)v7 + 3) = 0;
  v7[16] = 1;
  v7[32] = 7;
  uint64_t v23 = &v7[*(int *)(v4 + 40)];
  *(_OWORD *)uint64_t v23 = 0u;
  *((_OWORD *)v23 + 1) = 0u;
  a2(v7);
  return sub_1C9AC8BC8();
}

void sub_1C9AC50E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C9BECAC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6);
  v8[15] = 28;
  *(void *)&v8[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)] = a3;
  (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(&v8[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F9FA08], v4);
  sub_1C9BEC838();
}

uint64_t sub_1C9AC52A8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D48);
  MEMORY[0x1F4188790](v12 - 8, v13);
  os_log_type_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *a1;
  sub_1C9608D98(a3, (uint64_t)v39, (uint64_t *)&unk_1EBC764F8);
  if (v40 == 1) {
    return sub_1C95FF4B0((uint64_t)v39, (uint64_t *)&unk_1EBC764F8);
  }
  sub_1C95FD5D8(v39, (uint64_t)v41);
  __swift_project_boxed_opaque_existential_1(v41, v42);
  if (sub_1C9632DB0())
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1C9BECF88();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EBC7A520);
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_1C9BECF78();
    os_log_type_t v20 = sub_1C9BEDC78();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(void *)&v39[0] = v34;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v35 = v6;
      LOBYTE(v37) = v16;
      int v36 = v16;
      uint64_t v22 = ActivityType.rawValue.getter();
      uint64_t v37 = sub_1C95FF228(v22, v23, (uint64_t *)v39);
      uint64_t v6 = v35;
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1C95FF228(a4, a5, (uint64_t *)v39);
      LOBYTE(v16) = v36;
      sub_1C9BEDF68();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C95F9000, v19, v20, "AppResolutionFlow logging Task step: %s for Task type: %s", (uint8_t *)v21, 0x16u);
      uint64_t v24 = v34;
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v24, -1, -1);
      MEMORY[0x1CB78C440](v21, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v25 = *(void *)(*(void *)v6 + 104);
    uint64_t v26 = sub_1C9BECAC8();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v15, a2, v26);
    __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v26);
    uint64_t v27 = v42;
    uint64_t v28 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 8))(v39, v27, v28);
    LOBYTE(v37) = v16;
    char v38 = 29;
    uint64_t v29 = sub_1C962DF04((unsigned __int8 *)&v37, &v38, (uint64_t)v15, (uint64_t)v39, 0);
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = (void *)(v6 + v25);
      uint64_t v32 = *(void *)(v6 + v25 + 24);
      uint64_t v33 = v31[4];
      __swift_project_boxed_opaque_existential_1(v31, v32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8))(v30, v32, v33);
      swift_release();
    }
    sub_1C95FF4B0((uint64_t)v39, (uint64_t *)&unk_1EBC789D0);
    sub_1C95FF4B0((uint64_t)v15, &qword_1EBC78D48);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

void sub_1C9AC56A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_1C9BECAC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14);
  int v16 = (uint64_t *)((char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v19 = 27;
  *int v16 = a3;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E4F9FA10], v12);
  swift_bridgeObjectRetain();
  sub_1C9AC52A8(&v19, (uint64_t)v16, a1, 0x54746E6572727543, 0xEB000000006B7361);
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a6;
  v17[4] = a4;
  v17[5] = a5;
  sub_1C9BEC838();
}

void sub_1C9AC586C()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v29 = v4;
  uint64_t v30 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for ExecuteResponse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_222();
  uint64_t v10 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v12 = v11;
  MEMORY[0x1F4188790](v13, v14);
  int v16 = (uint64_t *)((char *)&v28 - v15);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C9BECF88();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
  uint64_t v18 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC78();
  if (os_log_type_enabled(v18, v19))
  {
    os_log_type_t v20 = (uint8_t *)OUTLINED_FUNCTION_19();
    uint64_t v28 = v7;
    *(_WORD *)os_log_type_t v20 = 0;
    _os_log_impl(&dword_1C95F9000, v18, v19, v2, v20, 2u);
    uint64_t v7 = v28;
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v21 = v30;
  *int v16 = v30;
  swift_storeEnumTagMultiPayload();
  uint64_t v22 = v6 + *(void *)(*(void *)v6 + 136);
  OUTLINED_FUNCTION_3_0();
  unint64_t v23 = *(void (**)(uint64_t, void *, uint64_t))(v12 + 40);
  id v24 = v21;
  v23(v22, v16, v10);
  swift_endAccess();
  uint64_t v25 = v0 + *(int *)(v7 + 36);
  uint64_t v26 = type metadata accessor for PluginAction();
  __swift_storeEnumTagSinglePayload(v25, 1, 1, v26);
  *(unsigned char *)uint64_t v0 = 0;
  *(void *)(v0 + 8) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 16) = 1;
  *(unsigned char *)(v0 + 32) = 7;
  uint64_t v27 = (_OWORD *)(v0 + *(int *)(v7 + 40));
  *uint64_t v27 = 0u;
  v27[1] = 0u;
  v29(v0);
  sub_1C9AC8BC8();
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9AC5AE8(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v19 - v13;
  if ((*a1 & 1) == 0)
  {
    *(void *)uint64_t v14 = a3;
    *((void *)v14 + 1) = a4;
    sub_1C95FD5F0(a5, (uint64_t)(v14 + 16));
    v14[56] = 0;
    swift_storeEnumTagMultiPayload();
    sub_1C9BEC838();
  }
  sub_1C97193EC();
  uint64_t v15 = swift_allocError();
  *(void *)uint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  *(unsigned char *)(v16 + 16) = 2;
  *(void *)uint64_t v14 = v15;
  v14[8] = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a2 + *(void *)(*(void *)a2 + 136);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 40))(v17, v14, v10);
  return swift_endAccess();
}

void sub_1C9AC5CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a5;
  v9[4] = a3;
  v9[5] = a4;
  sub_1C9BEC838();
}

void sub_1C9AC5D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a4;
  v15[2] = a3;
  uint64_t v5 = type metadata accessor for ExecuteResponse(0);
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v7 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v10 = (void *)((char *)v15 - v9);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C9BECF88();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
  uint64_t v12 = sub_1C9BECF78();
  os_log_type_t v13 = sub_1C9BEDC78();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1C95F9000, v12, v13, "AppResolutionFlow successfully sent app resolution success response.", v14, 2u);
    MEMORY[0x1CB78C440](v14, -1, -1);
  }

  *uint64_t v10 = a2;
  v10[1] = 0;
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_1C9BEC838();
}

void sub_1C9AC6038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C9BECAC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v19 = 6;
  uint64_t v15 = *MEMORY[0x1E4F9F9E8];
  uint64_t v16 = sub_1C9BECAA8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E4F9FA00], v10);
  sub_1C9AC52A8(&v19, (uint64_t)v14, a1, 0x54746E6572727543, 0xEB000000006B7361);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a5;
  v17[4] = a3;
  v17[5] = a4;
  sub_1C9BEC838();
}

uint64_t sub_1C9AC623C(uint64_t a1, void *a2, void (*a3)(char *))
{
  uint64_t v6 = type metadata accessor for ExecuteResponse(0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13);
  uint64_t v15 = (char *)&v22 - v14;
  *(void *)uint64_t v15 = a2;
  v15[8] = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a1 + *(void *)(*(void *)a1 + 136);
  swift_beginAccess();
  id v17 = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v16, v15, v11);
  swift_endAccess();
  uint64_t v18 = (uint64_t)&v10[*(int *)(v7 + 44)];
  uint64_t v19 = type metadata accessor for PluginAction();
  __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
  *uint64_t v10 = 1;
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 3) = 0;
  v10[16] = 0;
  v10[32] = 7;
  os_log_type_t v20 = &v10[*(int *)(v7 + 48)];
  *(_OWORD *)os_log_type_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  a3(v10);
  return sub_1C9AC8BC8();
}

uint64_t sub_1C9AC6460()
{
  sub_1C9AC2F40();
  return v0 & 1;
}

void sub_1C9AC6488()
{
}

uint64_t sub_1C9AC64AC()
{
  sub_1C9BECAA8();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C9AC652C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_36_36();
  uint64_t v0 = sub_1C9BECAA8();
  OUTLINED_FUNCTION_2_4(v0);
  uint64_t v1 = swift_task_alloc();
  uint64_t v2 = (void *)OUTLINED_FUNCTION_17_0(v1);
  void *v2 = v3;
  v2[1] = sub_1C9615010;
  return sub_1C9AC2CC8();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.actionForInput(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makeAppResolutionStateFromParse(parse:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makeAppResolver()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makePromptForConfirmation(app:intent:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makePromptForDisambiguation(intent:paginatedItems:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makeAppResolutionSuccessfulResponse(app:intent:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 72))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makeAppResolutionUnsuccessfulResponse(intent:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 80))();
}

uint64_t dispatch thunk of AppResolutionFlowStrategy.makeErrorOutput(intent:error:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 88))();
}

char *sub_1C9AC667C(char *a1, uint64_t a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *(void *)a1 = *(void *)a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      sub_1C9BEC838();
    case 1u:
      uint64_t v6 = sub_1C9BEAB08();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Input(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = &a1[v8];
      uint64_t v10 = (void *)(a2 + v8);
      uint64_t v11 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_1C9BEC028();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
          goto LABEL_35;
        case 1u:
          uint64_t v24 = sub_1C9BEC028();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v9[*(int *)(v25 + 48)] = *(void *)((char *)v10 + *(int *)(v25 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v26 = v10[1];
          *(void *)uint64_t v9 = *v10;
          *((void *)v9 + 1) = v26;
          *((void *)v9 + 2) = v10[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 3u:
          *(void *)uint64_t v9 = *v10;
          swift_unknownObjectRetain();
          goto LABEL_35;
        case 4u:
          uint64_t v27 = sub_1C9BEAC48();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v9, v10, v27);
          goto LABEL_35;
        case 5u:
          uint64_t v28 = (void *)*v10;
          *(void *)uint64_t v9 = *v10;
          id v29 = v28;
          goto LABEL_35;
        case 6u:
          uint64_t v30 = sub_1C9BEAF18();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v9, v10, v30);
          uint64_t v31 = (int *)type metadata accessor for USOParse();
          uint64_t v32 = v31[5];
          unint64_t __dst = &v9[v32];
          uint64_t v33 = (char *)v10 + v32;
          uint64_t v34 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v33, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(__dst, v33, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v34);
          }
          uint64_t v54 = v31[6];
          unsigned int v55 = &v9[v54];
          unsigned int v56 = (void *)((char *)v10 + v54);
          uint64_t v57 = v56[1];
          *(void *)unsigned int v55 = *v56;
          *((void *)v55 + 1) = v57;
          uint64_t v58 = v31[7];
          unsigned int v59 = &v9[v58];
          uint64_t v60 = (char *)v10 + v58;
          v59[4] = v60[4];
          *(_DWORD *)unsigned int v59 = *(_DWORD *)v60;
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 7u:
          uint64_t v36 = sub_1C9BEAF18();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v9, v10, v36);
          uint64_t v37 = (int *)type metadata accessor for USOParse();
          uint64_t v38 = v37[5];
          unint64_t __dsta = &v9[v38];
          uint64_t v39 = (char *)v10 + v38;
          uint64_t v40 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, v39, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(__dsta, v39, v40);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v40);
          }
          uint64_t v61 = v37[6];
          uint64_t v62 = &v9[v61];
          unsigned int v63 = (void *)((char *)v10 + v61);
          uint64_t v64 = v63[1];
          *(void *)uint64_t v62 = *v63;
          *((void *)v62 + 1) = v64;
          uint64_t v65 = v37[7];
          unsigned int v66 = &v9[v65];
          uint64_t v67 = (char *)v10 + v65;
          v66[4] = v67[4];
          *(_DWORD *)unsigned int v66 = *(_DWORD *)v67;
          int v68 = (int *)type metadata accessor for LinkParse();
          uint64_t v69 = v68[5];
          unsigned int v70 = &v9[v69];
          unsigned int v71 = (void *)((char *)v10 + v69);
          uint64_t v72 = v71[1];
          *(void *)unsigned int v70 = *v71;
          *((void *)v70 + 1) = v72;
          uint64_t v73 = v68[6];
          uint64_t v74 = &v9[v73];
          int v75 = (void *)((char *)v10 + v73);
          uint64_t v76 = v75[1];
          *(void *)uint64_t v74 = *v75;
          *((void *)v74 + 1) = v76;
          uint64_t v77 = v68[7];
          uint64_t v78 = &v9[v77];
          char v79 = (void *)((char *)v10 + v77);
          uint64_t v80 = v79[1];
          *(void *)uint64_t v78 = *v79;
          *((void *)v78 + 1) = v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_35;
        case 8u:
          uint64_t v42 = sub_1C9BEC928();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v9, v10, v42);
          uint64_t v43 = type metadata accessor for NLRouterParse();
          uint64_t v44 = *(int *)(v43 + 20);
          uint64_t v45 = &v9[v44];
          unsigned int v46 = (void *)((char *)v10 + v44);
          uint64_t v47 = v46[1];
          *(void *)uint64_t v45 = *v46;
          *((void *)v45 + 1) = v47;
          __dstb = (int *)v43;
          uint64_t v48 = *(int *)(v43 + 24);
          int v49 = &v9[v48];
          unsigned int v50 = (char *)v10 + v48;
          uint64_t v51 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          uint64_t v111 = v51;
          if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
          {
            uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            uint64_t v81 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v49, v50, v81);
            uint64_t v82 = *(int *)(v51 + 20);
            size_t v110 = &v49[v82];
            int v83 = &v50[v82];
            uint64_t v84 = sub_1C9BEAE48();
            uint64_t v109 = v83;
            uint64_t v85 = (uint64_t)v83;
            uint64_t v86 = v84;
            if (__swift_getEnumTagSinglePayload(v85, 1, v84))
            {
              uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v110, v109, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v110, v109, v86);
              __swift_storeEnumTagSinglePayload((uint64_t)v110, 0, 1, v86);
            }
            uint64_t v88 = *(int *)(v111 + 24);
            long long v89 = &v49[v88];
            int v90 = &v50[v88];
            uint64_t v91 = *((void *)v90 + 1);
            *(void *)long long v89 = *(void *)v90;
            *((void *)v89 + 1) = v91;
            uint64_t v92 = *(int *)(v111 + 28);
            id v93 = &v49[v92];
            unsigned int v94 = &v50[v92];
            v93[4] = v94[4];
            *(_DWORD *)id v93 = *(_DWORD *)v94;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v111);
          }
          uint64_t v95 = __dstb[7];
          unsigned int v96 = *(void **)((char *)v10 + v95);
          *(void *)&v9[v95] = v96;
          id v97 = v96;
          goto LABEL_35;
        case 9u:
          uint64_t v53 = sub_1C9BEC8F8();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v9, v10, v53);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      *(void *)&a1[v7[6]] = *(void *)(a2 + v7[6]);
      uint64_t v98 = v7[7];
      unsigned int v99 = &a1[v98];
      uint64_t v100 = a2 + v98;
      uint64_t v101 = *(void *)(a2 + v98 + 24);
      swift_bridgeObjectRetain();
      if (v101)
      {
        uint64_t v102 = *(void *)(v100 + 32);
        *((void *)v99 + 3) = v101;
        *((void *)v99 + 4) = v102;
        (**(void (***)(char *, uint64_t, uint64_t))(v101 - 8))(v99, v100, v101);
      }
      else
      {
        long long v103 = *(_OWORD *)(v100 + 16);
        *(_OWORD *)unsigned int v99 = *(_OWORD *)v100;
        *((_OWORD *)v99 + 1) = v103;
        *((void *)v99 + 4) = *(void *)(v100 + 32);
      }
      a1[v7[8]] = *(unsigned char *)(a2 + v7[8]);
      swift_getAssociatedTypeWitness();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v105 = *(int *)(TupleTypeMetadata3 + 48);
      char v106 = *(void **)(a2 + v105);
      *(void *)&a1[v105] = v106;
      *(void *)&a1[*(int *)(TupleTypeMetadata3 + 64)] = *(void *)(a2 + *(int *)(TupleTypeMetadata3 + 64));
      id v107 = v106;
      sub_1C9BEC838();
    case 2u:
      long long v13 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v13;
      (**(void (***)(void *, uint64_t))(v13 - 8))(a1, a2);
      uint64_t v14 = *(void **)(a2 + 40);
      uint64_t v15 = *(void *)(a2 + 48);
      *((void *)a1 + 5) = v14;
      *((void *)a1 + 6) = v15;
      id v16 = v14;
      sub_1C9BEC838();
    case 3u:
      id v17 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v18 = v17;
      goto LABEL_40;
    case 4u:
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v19;
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      sub_1C9BEC838();
    case 5u:
      unint64_t v21 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      sub_1C9637F70(v21);
      *(void *)a1 = v21;
      *((void *)a1 + 1) = v20;
      goto LABEL_40;
    case 6u:
      unint64_t v22 = *(void *)a2;
      id v23 = *(id *)a2;
      *(void *)a1 = v22;
      a1[8] = *(unsigned char *)(a2 + 8);
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, (const void *)a2, *(void *)(v5 + 64));
      break;
  }
  return a1;
}

unint64_t *sub_1C9AC71E4(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(unint64_t *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        sub_1C9BEC838();
      case 1u:
        uint64_t v6 = sub_1C9BEAB08();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for Input(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (unint64_t *)((char *)a1 + v8);
        uint64_t v10 = (unint64_t *)((char *)a2 + v8);
        uint64_t v11 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
            goto LABEL_34;
          case 1u:
            uint64_t v22 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v9, v10, v22);
            uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)((char *)v9 + *(int *)(v23 + 48)) = *(void *)((char *)v10 + *(int *)(v23 + 48));
            sub_1C9BEC838();
          case 2u:
            *uint64_t v9 = *v10;
            v9[1] = v10[1];
            v9[2] = v10[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 3u:
            *uint64_t v9 = *v10;
            swift_unknownObjectRetain();
            goto LABEL_34;
          case 4u:
            uint64_t v24 = sub_1C9BEAC48();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
            goto LABEL_34;
          case 5u:
            uint64_t v25 = (void *)*v10;
            *uint64_t v9 = *v10;
            id v26 = v25;
            goto LABEL_34;
          case 6u:
            uint64_t v27 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v9, v10, v27);
            uint64_t v28 = (int *)type metadata accessor for USOParse();
            uint64_t v29 = v28[5];
            unint64_t __dst = (char *)v9 + v29;
            uint64_t v30 = (char *)v10 + v29;
            uint64_t v31 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
            {
              uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v30, v31);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v31);
            }
            uint64_t v50 = v28[6];
            uint64_t v51 = (void *)((char *)v9 + v50);
            uint64_t v52 = (void *)((char *)v10 + v50);
            *uint64_t v51 = *v52;
            v51[1] = v52[1];
            uint64_t v53 = v28[7];
            uint64_t v54 = (char *)v9 + v53;
            unsigned int v55 = (char *)v10 + v53;
            int v56 = *(_DWORD *)v55;
            v54[4] = v55[4];
            *(_DWORD *)uint64_t v54 = v56;
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 7u:
            uint64_t v33 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v9, v10, v33);
            uint64_t v34 = (int *)type metadata accessor for USOParse();
            uint64_t v35 = v34[5];
            unint64_t __dsta = (char *)v9 + v35;
            uint64_t v36 = (char *)v10 + v35;
            uint64_t v37 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
            {
              uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, v36, *(void *)(*(void *)(v38 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(__dsta, v36, v37);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v37);
            }
            uint64_t v57 = v34[6];
            uint64_t v58 = (void *)((char *)v9 + v57);
            unsigned int v59 = (void *)((char *)v10 + v57);
            *uint64_t v58 = *v59;
            v58[1] = v59[1];
            uint64_t v60 = v34[7];
            uint64_t v61 = (char *)v9 + v60;
            uint64_t v62 = (char *)v10 + v60;
            int v63 = *(_DWORD *)v62;
            v61[4] = v62[4];
            *(_DWORD *)uint64_t v61 = v63;
            uint64_t v64 = (int *)type metadata accessor for LinkParse();
            uint64_t v65 = v64[5];
            unsigned int v66 = (void *)((char *)v9 + v65);
            uint64_t v67 = (void *)((char *)v10 + v65);
            *unsigned int v66 = *v67;
            v66[1] = v67[1];
            uint64_t v68 = v64[6];
            uint64_t v69 = (void *)((char *)v9 + v68);
            unsigned int v70 = (void *)((char *)v10 + v68);
            *uint64_t v69 = *v70;
            v69[1] = v70[1];
            uint64_t v71 = v64[7];
            uint64_t v72 = (void *)((char *)v9 + v71);
            uint64_t v73 = (void *)((char *)v10 + v71);
            *uint64_t v72 = *v73;
            v72[1] = v73[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_34;
          case 8u:
            uint64_t v39 = sub_1C9BEC928();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v9, v10, v39);
            uint64_t v40 = type metadata accessor for NLRouterParse();
            uint64_t v41 = *(int *)(v40 + 20);
            uint64_t v42 = (void *)((char *)v9 + v41);
            uint64_t v43 = (void *)((char *)v10 + v41);
            *uint64_t v42 = *v43;
            v42[1] = v43[1];
            __dstb = (int *)v40;
            uint64_t v44 = *(int *)(v40 + 24);
            uint64_t v45 = (char *)v9 + v44;
            unsigned int v46 = (char *)v10 + v44;
            uint64_t v47 = type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            uint64_t v104 = v47;
            if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
            {
              uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
            }
            else
            {
              uint64_t v74 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v45, v46, v74);
              uint64_t v75 = *(int *)(v47 + 20);
              long long v103 = &v45[v75];
              uint64_t v76 = &v46[v75];
              uint64_t v77 = sub_1C9BEAE48();
              uint64_t v102 = v76;
              uint64_t v78 = (uint64_t)v76;
              uint64_t v79 = v77;
              if (__swift_getEnumTagSinglePayload(v78, 1, v77))
              {
                uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v103, v102, *(void *)(*(void *)(v80 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v103, v102, v79);
                __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v79);
              }
              uint64_t v81 = *(int *)(v104 + 24);
              uint64_t v82 = &v45[v81];
              int v83 = &v46[v81];
              *(void *)uint64_t v82 = *(void *)v83;
              *((void *)v82 + 1) = *((void *)v83 + 1);
              uint64_t v84 = *(int *)(v104 + 28);
              uint64_t v85 = &v45[v84];
              uint64_t v86 = &v46[v84];
              int v87 = *(_DWORD *)v86;
              v85[4] = v86[4];
              *(_DWORD *)uint64_t v85 = v87;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v104);
            }
            uint64_t v88 = __dstb[7];
            long long v89 = *(void **)((char *)v10 + v88);
            *(void *)((char *)v9 + v88) = v89;
            id v90 = v89;
            goto LABEL_34;
          case 9u:
            uint64_t v49 = sub_1C9BEC8F8();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v9, v10, v49);
LABEL_34:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
        *(unint64_t *)((char *)a1 + v7[6]) = *(unint64_t *)((char *)a2 + v7[6]);
        uint64_t v91 = v7[7];
        uint64_t v92 = (char *)a1 + v91;
        id v93 = (char *)a2 + v91;
        uint64_t v94 = *(unint64_t *)((char *)a2 + v91 + 24);
        swift_bridgeObjectRetain();
        if (v94)
        {
          *((void *)v92 + 3) = v94;
          *((void *)v92 + 4) = *((void *)v93 + 4);
          (**(void (***)(char *, char *, uint64_t))(v94 - 8))(v92, v93, v94);
        }
        else
        {
          long long v95 = *(_OWORD *)v93;
          long long v96 = *((_OWORD *)v93 + 1);
          *((void *)v92 + 4) = *((void *)v93 + 4);
          *(_OWORD *)uint64_t v92 = v95;
          *((_OWORD *)v92 + 1) = v96;
        }
        *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
        swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v98 = *(int *)(TupleTypeMetadata3 + 48);
        unsigned int v99 = *(void **)((char *)a2 + v98);
        *(unint64_t *)((char *)a1 + v98) = (unint64_t)v99;
        *(unint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata3 + 64)) = *(unint64_t *)((char *)a2 + *(int *)(TupleTypeMetadata3 + 64));
        id v100 = v99;
        sub_1C9BEC838();
      case 2u:
        unint64_t v13 = a2[3];
        a1[3] = v13;
        a1[4] = a2[4];
        (**(void (***)(unint64_t *, unint64_t *))(v13 - 8))(a1, a2);
        uint64_t v14 = (void *)a2[5];
        a1[5] = (unint64_t)v14;
        a1[6] = a2[6];
        id v15 = v14;
        sub_1C9BEC838();
      case 3u:
        id v16 = (void *)*a2;
        *a1 = *a2;
        id v17 = v16;
        goto LABEL_39;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[5] = a2[5];
        a1[6] = a2[6];
        sub_1C9BEC838();
      case 5u:
        unint64_t v19 = *a2;
        unint64_t v18 = a2[1];
        sub_1C9637F70(v19);
        *a1 = v19;
        a1[1] = v18;
        goto LABEL_39;
      case 6u:
        unint64_t v20 = *a2;
        id v21 = (id)*a2;
        *a1 = v20;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v5 + 64));
        break;
    }
  }
  return a1;
}

unsigned char *sub_1C9AC7D30(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C9BEAB08();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for Input(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        goto LABEL_24;
      case 1u:
        uint64_t v13 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v9[*(int *)(v14 + 48)] = *(void *)&v10[*(int *)(v14 + 48)];
        goto LABEL_24;
      case 4u:
        uint64_t v15 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
        goto LABEL_24;
      case 6u:
        uint64_t v16 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
        id v17 = (int *)type metadata accessor for USOParse();
        uint64_t v18 = v17[5];
        unint64_t __dst = &v9[v18];
        unint64_t v19 = &v10[v18];
        uint64_t v20 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(__dst, v19, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v20);
        }
        *(_OWORD *)&v9[v17[6]] = *(_OWORD *)&v10[v17[6]];
        uint64_t v36 = v17[7];
        uint64_t v37 = &v9[v36];
        uint64_t v38 = &v10[v36];
        v37[4] = v38[4];
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        goto LABEL_24;
      case 7u:
        uint64_t v22 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v9, v10, v22);
        uint64_t v23 = (int *)type metadata accessor for USOParse();
        uint64_t v24 = v23[5];
        unint64_t __dsta = &v9[v24];
        uint64_t v25 = &v10[v24];
        uint64_t v26 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(__dsta, v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v26);
        }
        *(_OWORD *)&v9[v23[6]] = *(_OWORD *)&v10[v23[6]];
        uint64_t v39 = v23[7];
        uint64_t v40 = &v9[v39];
        uint64_t v41 = &v10[v39];
        v40[4] = v41[4];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        uint64_t v42 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v9[v42[5]] = *(_OWORD *)&v10[v42[5]];
        *(_OWORD *)&v9[v42[6]] = *(_OWORD *)&v10[v42[6]];
        *(_OWORD *)&v9[v42[7]] = *(_OWORD *)&v10[v42[7]];
        goto LABEL_24;
      case 8u:
        uint64_t v28 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v9, v10, v28);
        uint64_t v29 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v9[*(int *)(v29 + 20)] = *(_OWORD *)&v10[*(int *)(v29 + 20)];
        __dstb = (int *)v29;
        uint64_t v30 = *(int *)(v29 + 24);
        uint64_t v31 = &v9[v30];
        uint64_t v32 = &v10[v30];
        uint64_t v33 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, (uint64_t)v33))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v31, v32, v43);
          uint64_t v44 = v33[5];
          uint64_t v59 = (uint64_t)v31;
          uint64_t v61 = &v31[v44];
          uint64_t v45 = &v32[v44];
          uint64_t v46 = sub_1C9BEAE48();
          uint64_t v60 = v45;
          uint64_t v47 = (uint64_t)v45;
          uint64_t v48 = v46;
          if (__swift_getEnumTagSinglePayload(v47, 1, v46))
          {
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v61, v60, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v61, v60, v48);
            __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v48);
          }
          *(_OWORD *)(v59 + v33[6]) = *(_OWORD *)&v32[v33[6]];
          uint64_t v50 = v33[7];
          uint64_t v51 = v59 + v50;
          uint64_t v52 = &v32[v50];
          *(unsigned char *)(v51 + 4) = v52[4];
          *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
          __swift_storeEnumTagSinglePayload(v59, 0, 1, (uint64_t)v33);
        }
        *(void *)&v9[__dstb[7]] = *(void *)&v10[__dstb[7]];
        goto LABEL_24;
      case 9u:
        uint64_t v35 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v9, v10, v35);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
    uint64_t v53 = v7[7];
    uint64_t v54 = &a1[v53];
    unsigned int v55 = &a2[v53];
    long long v56 = *((_OWORD *)v55 + 1);
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v56;
    *((void *)v54 + 4) = *((void *)v55 + 4);
    a1[v7[8]] = a2[v7[8]];
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    *(void *)&a1[*(int *)(TupleTypeMetadata3 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata3 + 48)];
    *(void *)&a1[*(int *)(TupleTypeMetadata3 + 64)] = *(void *)&a2[*(int *)(TupleTypeMetadata3 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C9AC8524(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C9AC8570()
{
  uint64_t v1 = type metadata accessor for Input(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_37();
  v8();
  uint64_t v9 = (id *)(v0 + v2 + *(int *)(v1 + 20));
  type metadata accessor for Parse(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1C9BEC028();
      goto LABEL_21;
    case 1u:
      sub_1C9BEC028();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v10();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 3u:
      swift_unknownObjectRelease();
      break;
    case 4u:
      sub_1C9BEAC48();
      goto LABEL_21;
    case 5u:

      break;
    case 6u:
      uint64_t v31 = v3;
      sub_1C9BEAF18();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v11();
      type metadata accessor for USOParse();
      uint64_t v12 = OUTLINED_FUNCTION_34_32();
      if (!OUTLINED_FUNCTION_8_74(v12))
      {
        OUTLINED_FUNCTION_112();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v29, v3);
      }
      goto LABEL_14;
    case 7u:
      uint64_t v31 = v3;
      sub_1C9BEAF18();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v14();
      type metadata accessor for USOParse();
      uint64_t v15 = OUTLINED_FUNCTION_34_32();
      if (!OUTLINED_FUNCTION_8_74(v15))
      {
        OUTLINED_FUNCTION_112();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v29, v3);
      }
      OUTLINED_FUNCTION_98_2();
      type metadata accessor for LinkParse();
      OUTLINED_FUNCTION_98_2();
      OUTLINED_FUNCTION_98_2();
LABEL_14:
      OUTLINED_FUNCTION_98_2();
      uint64_t v3 = v31;
      break;
    case 8u:
      uint64_t v30 = v4;
      uint64_t v32 = v3;
      sub_1C9BEC928();
      OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_37();
      v17();
      uint64_t v18 = type metadata accessor for NLRouterParse();
      OUTLINED_FUNCTION_98_2();
      unint64_t v19 = (char *)v9 + *(int *)(v18 + 24);
      uint64_t v20 = type metadata accessor for USOParse();
      if (!OUTLINED_FUNCTION_8_74(v20))
      {
        sub_1C9BEAF18();
        OUTLINED_FUNCTION_8_0();
        OUTLINED_FUNCTION_37();
        v21();
        uint64_t v22 = v29 + *((int *)v19 + 5);
        uint64_t v28 = sub_1C9BEAE48();
        if (!__swift_getEnumTagSinglePayload(v22, 1, v28))
        {
          OUTLINED_FUNCTION_112();
          (*(void (**)(uint64_t))(v23 + 8))(v22);
        }
        swift_bridgeObjectRelease();
      }

      uint64_t v4 = v30;
      uint64_t v3 = v32;
      break;
    case 9u:
      sub_1C9BEC8F8();
LABEL_21:
      OUTLINED_FUNCTION_8_0();
      (*(void (**)(id *))(v24 + 8))(v9);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = v0 + v2 + *(int *)(v1 + 28);
  if (*(void *)(v25 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v25);
  }
  unint64_t v26 = (((v3 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v26 + v7 + 8) & ~v7), v4);
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_28Tm_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_37();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1C9AC8AF0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58E3D0);
  OUTLINED_FUNCTION_2_4(v0);
  return sub_1C9AC36AC();
}

uint64_t sub_1C9AC8B38()
{
  return objectdestroy_65Tm_0(MEMORY[0x1E4FBC8B8]);
}

void sub_1C9AC8B50(uint64_t a1)
{
  sub_1C9AC6038(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C9AC8B5C()
{
  return objectdestroy_68Tm_0(MEMORY[0x1E4FBC8B8]);
}

uint64_t sub_1C9AC8B74()
{
  return sub_1C9AC623C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(char *))(v0 + 32));
}

uint64_t sub_1C9AC8B80()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AC8BC8()
{
  uint64_t v1 = OUTLINED_FUNCTION_36_36();
  v2(v1);
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_37();
  v3();
  return v0;
}

uint64_t sub_1C9AC8C14(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v4 = OUTLINED_FUNCTION_228();
  v5(v4);
  return a2;
}

uint64_t sub_1C9AC8C68()
{
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);

  return swift_deallocObject();
}

void sub_1C9AC8CBC(uint64_t a1)
{
  sub_1C9AC4D50(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1C9AC8CCC()
{
  return sub_1C9AC4DFC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1C9AC8CD8()
{
  return objectdestroy_83Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_1C9AC8CF0(uint64_t a1)
{
  return sub_1C9AC8DC4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1C9AC50E0);
}

void sub_1C9AC8D0C()
{
}

uint64_t sub_1C9AC8D34()
{
  return objectdestroy_83Tm(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_83Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AC8DAC(uint64_t a1)
{
  return sub_1C9AC8DC4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1C9AC56A4);
}

uint64_t sub_1C9AC8DC4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t objectdestroy_86Tm()
{
  swift_release();

  swift_release();
  OUTLINED_FUNCTION_213();

  return swift_deallocObject();
}

void sub_1C9AC8E20()
{
}

uint64_t sub_1C9AC8E48()
{
  swift_release();
  swift_release();

  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return swift_deallocObject();
}

uint64_t sub_1C9AC8E98(unsigned char *a1)
{
  return sub_1C9AC5AE8(a1, v1[2], v1[3], v1[4], (uint64_t)(v1 + 5));
}

uint64_t sub_1C9AC8EA8()
{
  return objectdestroy_65Tm_0(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_65Tm_0(void (*a1)(void))
{
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 40));
  OUTLINED_FUNCTION_213();

  return swift_deallocObject();
}

void sub_1C9AC8F10(uint64_t a1)
{
  sub_1C9AC5CA8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1C9AC8F1C()
{
  return objectdestroy_68Tm_0(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_68Tm_0(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  swift_release();
  OUTLINED_FUNCTION_213();

  return swift_deallocObject();
}

void sub_1C9AC8F84()
{
  sub_1C9AC5D60(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C9AC8F90()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C9AC8FC8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AC9000()
{
  return sub_1C97746CC(*(void (**)(uint64_t *__return_ptr))(v0 + 16), *(void *)(v0 + 24));
}

unint64_t *sub_1C9AC9008(unint64_t *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v5 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v8 = sub_1C9BECAA8();
      (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_72:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v9 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = sub_1C9BEC028();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          goto LABEL_42;
        case 1u:
          uint64_t v29 = sub_1C9BEC028();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(unint64_t *)((char *)a1 + *(int *)(v30 + 48)) = *(void *)((char *)a2 + *(int *)(v30 + 48));
          sub_1C9BEC838();
        case 2u:
          unint64_t v31 = a2[1];
          *a1 = *a2;
          a1[1] = v31;
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_42;
        case 3u:
          *a1 = *a2;
          swift_unknownObjectRetain();
          goto LABEL_42;
        case 4u:
          uint64_t v32 = sub_1C9BEAC48();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          goto LABEL_42;
        case 5u:
          uint64_t v33 = (void *)*a2;
          *a1 = *a2;
          id v34 = v33;
          goto LABEL_42;
        case 6u:
          uint64_t v35 = sub_1C9BEAF18();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          uint64_t v36 = (int *)type metadata accessor for USOParse();
          uint64_t v37 = v36[5];
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
            __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
          }
          uint64_t v61 = v36[6];
          uint64_t v62 = (unint64_t *)((char *)a1 + v61);
          int v63 = (void *)((char *)a2 + v61);
          uint64_t v64 = v63[1];
          *uint64_t v62 = *v63;
          v62[1] = v64;
          uint64_t v65 = v36[7];
          unsigned int v66 = (char *)a1 + v65;
          uint64_t v67 = (char *)a2 + v65;
          v66[4] = v67[4];
          *(_DWORD *)unsigned int v66 = *(_DWORD *)v67;
          swift_bridgeObjectRetain();
          goto LABEL_42;
        case 7u:
          uint64_t v42 = sub_1C9BEAF18();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          uint64_t v43 = (int *)type metadata accessor for USOParse();
          uint64_t v44 = v43[5];
          uint64_t v45 = (char *)a1 + v44;
          uint64_t v46 = (char *)a2 + v44;
          uint64_t v47 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
            __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
          }
          uint64_t v68 = v43[6];
          uint64_t v69 = (unint64_t *)((char *)a1 + v68);
          unsigned int v70 = (void *)((char *)a2 + v68);
          uint64_t v71 = v70[1];
          *uint64_t v69 = *v70;
          v69[1] = v71;
          uint64_t v72 = v43[7];
          uint64_t v73 = (char *)a1 + v72;
          uint64_t v74 = (char *)a2 + v72;
          v73[4] = v74[4];
          *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
          uint64_t v75 = (int *)type metadata accessor for LinkParse();
          uint64_t v76 = v75[5];
          uint64_t v77 = (unint64_t *)((char *)a1 + v76);
          uint64_t v78 = (void *)((char *)a2 + v76);
          uint64_t v79 = v78[1];
          *uint64_t v77 = *v78;
          v77[1] = v79;
          uint64_t v80 = v75[6];
          uint64_t v81 = (unint64_t *)((char *)a1 + v80);
          uint64_t v82 = (void *)((char *)a2 + v80);
          uint64_t v83 = v82[1];
          *uint64_t v81 = *v82;
          v81[1] = v83;
          uint64_t v84 = v75[7];
          uint64_t v85 = (unint64_t *)((char *)a1 + v84);
          uint64_t v86 = (void *)((char *)a2 + v84);
          uint64_t v87 = v86[1];
          *uint64_t v85 = *v86;
          v85[1] = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_42;
        case 8u:
          uint64_t v49 = sub_1C9BEC928();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          uint64_t v50 = (int *)type metadata accessor for NLRouterParse();
          uint64_t v51 = v50[5];
          uint64_t v52 = (unint64_t *)((char *)a1 + v51);
          uint64_t v53 = (void *)((char *)a2 + v51);
          uint64_t v54 = v53[1];
          *uint64_t v52 = *v53;
          v52[1] = v54;
          uint64_t v55 = v50[6];
          long long v56 = (char *)a1 + v55;
          uint64_t v57 = (char *)a2 + v55;
          uint64_t v58 = (int *)type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, (uint64_t)v58))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            uint64_t v88 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v56, v57, v88);
            uint64_t v89 = v58[5];
            unint64_t __dst = &v56[v89];
            id v90 = &v57[v89];
            uint64_t v91 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
            {
              uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, v90, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(__dst, v90, v91);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v91);
            }
            uint64_t v93 = v58[6];
            uint64_t v94 = &v56[v93];
            long long v95 = &v57[v93];
            uint64_t v96 = *((void *)v95 + 1);
            *(void *)uint64_t v94 = *(void *)v95;
            *((void *)v94 + 1) = v96;
            uint64_t v97 = v58[7];
            uint64_t v98 = &v56[v97];
            unsigned int v99 = &v57[v97];
            v98[4] = v99[4];
            *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, (uint64_t)v58);
          }
          uint64_t v100 = v50[7];
          uint64_t v101 = *(void **)((char *)a2 + v100);
          *(unint64_t *)((char *)a1 + v100) = (unint64_t)v101;
          id v102 = v101;
          goto LABEL_42;
        case 9u:
          uint64_t v60 = sub_1C9BEC8F8();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
      goto LABEL_72;
    case 0:
      uint64_t v7 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *a1 = *a2;
          sub_1C9BEC838();
        case 1u:
          uint64_t v11 = sub_1C9BEAB08();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          uint64_t v12 = (int *)type metadata accessor for Input(0);
          uint64_t v13 = v12[5];
          uint64_t v14 = (unint64_t *)((char *)a1 + v13);
          uint64_t v15 = (void *)((char *)a2 + v13);
          uint64_t v16 = type metadata accessor for Parse(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v17 = sub_1C9BEC028();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
              goto LABEL_66;
            case 1u:
              uint64_t v103 = sub_1C9BEC028();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(v14, v15, v103);
              uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
              *(void *)((char *)v14 + *(int *)(v104 + 48)) = *(void *)((char *)v15 + *(int *)(v104 + 48));
              sub_1C9BEC838();
            case 2u:
              uint64_t v105 = v15[1];
              void *v14 = *v15;
              v14[1] = v105;
              uint64_t v14[2] = v15[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_66;
            case 3u:
              void *v14 = *v15;
              swift_unknownObjectRetain();
              goto LABEL_66;
            case 4u:
              uint64_t v106 = sub_1C9BEAC48();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(v14, v15, v106);
              goto LABEL_66;
            case 5u:
              id v107 = (void *)*v15;
              void *v14 = *v15;
              id v108 = v107;
              goto LABEL_66;
            case 6u:
              uint64_t v109 = sub_1C9BEAF18();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 16))(v14, v15, v109);
              uint64_t v110 = type metadata accessor for USOParse();
              uint64_t v111 = *(int *)(v110 + 20);
              uint64_t v193 = v110;
              unint64_t v197 = (char *)v14 + v111;
              char v112 = (char *)v15 + v111;
              uint64_t v113 = sub_1C9BEAE48();
              __src = v112;
              uint64_t v114 = (uint64_t)v112;
              uint64_t v115 = v113;
              if (__swift_getEnumTagSinglePayload(v114, 1, v113))
              {
                uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v197, __src, *(void *)(*(void *)(v116 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v197, __src, v115);
                __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v115);
              }
              uint64_t v136 = *(int *)(v193 + 24);
              unint64_t v137 = (void *)((char *)v14 + v136);
              unint64_t v138 = (void *)((char *)v15 + v136);
              uint64_t v139 = v138[1];
              *unint64_t v137 = *v138;
              v137[1] = v139;
              uint64_t v140 = *(int *)(v193 + 28);
              unint64_t v141 = (char *)v14 + v140;
              int v142 = (char *)v15 + v140;
              v141[4] = v142[4];
              *(_DWORD *)unint64_t v141 = *(_DWORD *)v142;
              swift_bridgeObjectRetain();
              goto LABEL_66;
            case 7u:
              uint64_t v117 = sub_1C9BEAF18();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v117 - 8) + 16))(v14, v15, v117);
              uint64_t v118 = type metadata accessor for USOParse();
              uint64_t v119 = *(int *)(v118 + 20);
              uint64_t v194 = v118;
              uint64_t v198 = (char *)v14 + v119;
              unint64_t v120 = (char *)v15 + v119;
              uint64_t v121 = sub_1C9BEAE48();
              __srca = v120;
              uint64_t v122 = (uint64_t)v120;
              uint64_t v123 = v121;
              if (__swift_getEnumTagSinglePayload(v122, 1, v121))
              {
                uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v198, __srca, *(void *)(*(void *)(v124 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v123 - 8) + 16))(v198, __srca, v123);
                __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v123);
              }
              uint64_t v143 = *(int *)(v194 + 24);
              unsigned int v144 = (void *)((char *)v14 + v143);
              unint64_t v145 = (void *)((char *)v15 + v143);
              unint64_t v200 = (void *)v145[1];
              *unsigned int v144 = *v145;
              v144[1] = v200;
              uint64_t v146 = *(int *)(v194 + 28);
              int v147 = (char *)v14 + v146;
              unint64_t v148 = (char *)v15 + v146;
              v147[4] = v148[4];
              *(_DWORD *)int v147 = *(_DWORD *)v148;
              int v149 = (int *)type metadata accessor for LinkParse();
              uint64_t v150 = v149[5];
              int v151 = (void *)((char *)v14 + v150);
              unint64_t v152 = (void *)((char *)v15 + v150);
              uint64_t v196 = v152[1];
              *int v151 = *v152;
              v151[1] = v196;
              uint64_t v153 = v149[6];
              unint64_t v154 = (void *)((char *)v14 + v153);
              unint64_t v155 = (void *)((char *)v15 + v153);
              uint64_t v156 = v155[1];
              void *v154 = *v155;
              v154[1] = v156;
              uint64_t v157 = v149[7];
              v158 = (void *)((char *)v14 + v157);
              unint64_t v159 = (void *)((char *)v15 + v157);
              uint64_t v160 = v159[1];
              void *v158 = *v159;
              v158[1] = v160;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_66;
            case 8u:
              uint64_t v125 = sub_1C9BEC928();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v14, v15, v125);
              uint64_t v126 = type metadata accessor for NLRouterParse();
              uint64_t v127 = *(int *)(v126 + 20);
              size_t v128 = (void *)((char *)v14 + v127);
              unint64_t v129 = (void *)((char *)v15 + v127);
              uint64_t v130 = v129[1];
              *size_t v128 = *v129;
              v128[1] = v130;
              unint64_t v188 = v14;
              uint64_t v189 = v126;
              uint64_t v131 = *(int *)(v126 + 24);
              unint64_t v195 = (char *)v15 + v131;
              uint64_t v199 = (char *)v14 + v131;
              uint64_t v132 = type metadata accessor for USOParse();
              swift_bridgeObjectRetain();
              __srcb = (int *)v132;
              if (__swift_getEnumTagSinglePayload((uint64_t)v195, 1, v132))
              {
                uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
                memcpy(v199, v195, *(void *)(*(void *)(v133 - 8) + 64));
                unint64_t v134 = v188;
              }
              else
              {
                uint64_t v161 = sub_1C9BEAF18();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v199, v195, v161);
                uint64_t v162 = *(int *)(v132 + 20);
                uint64_t v187 = &v199[v162];
                long long v163 = &v195[v162];
                uint64_t v164 = sub_1C9BEAE48();
                if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v164))
                {
                  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                  memcpy(v187, v163, *(void *)(*(void *)(v165 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v187, v163, v164);
                  __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v164);
                }
                unint64_t v134 = v188;
                uint64_t v166 = __srcb[6];
                unint64_t v167 = &v199[v166];
                v168 = &v195[v166];
                uint64_t v169 = *((void *)v168 + 1);
                *(void *)unint64_t v167 = *(void *)v168;
                *((void *)v167 + 1) = v169;
                uint64_t v170 = __srcb[7];
                unint64_t v171 = &v199[v170];
                size_t v172 = &v195[v170];
                v171[4] = v172[4];
                *(_DWORD *)unint64_t v171 = *(_DWORD *)v172;
                swift_bridgeObjectRetain();
                __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, (uint64_t)__srcb);
              }
              uint64_t v173 = *(int *)(v189 + 28);
              unint64_t v174 = *(void **)((char *)v15 + v173);
              *(void *)((char *)v134 + v173) = v174;
              id v175 = v174;
              goto LABEL_66;
            case 9u:
              uint64_t v135 = sub_1C9BEC8F8();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v135 - 8) + 16))(v14, v15, v135);
LABEL_66:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
              break;
          }
          *(unint64_t *)((char *)a1 + v12[6]) = *(void *)((char *)a2 + v12[6]);
          uint64_t v176 = v12[7];
          unint64_t v177 = (char *)a1 + v176;
          unint64_t v178 = (char *)a2 + v176;
          uint64_t v179 = *(void *)((char *)a2 + v176 + 24);
          swift_bridgeObjectRetain();
          if (v179)
          {
            uint64_t v180 = *((void *)v178 + 4);
            *((void *)v177 + 3) = v179;
            *((void *)v177 + 4) = v180;
            (**(void (***)(char *, char *, uint64_t))(v179 - 8))(v177, v178, v179);
          }
          else
          {
            long long v181 = *((_OWORD *)v178 + 1);
            *(_OWORD *)unint64_t v177 = *(_OWORD *)v178;
            *((_OWORD *)v177 + 1) = v181;
            *((void *)v177 + 4) = *((void *)v178 + 4);
          }
          *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
          swift_getAssociatedTypeWitness();
          __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v183 = *(int *)(TupleTypeMetadata3 + 48);
          long long v184 = *(void **)((char *)a2 + v183);
          *(unint64_t *)((char *)a1 + v183) = (unint64_t)v184;
          *(unint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata3 + 64)) = *(void *)((char *)a2
                                                                                            + *(int *)(TupleTypeMetadata3 + 64));
          id v185 = v184;
          sub_1C9BEC838();
        case 2u:
          long long v18 = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 3) = v18;
          (**(void (***)(unint64_t *, void *))(v18 - 8))(a1, a2);
          unint64_t v19 = (void *)a2[5];
          unint64_t v20 = a2[6];
          a1[5] = (unint64_t)v19;
          a1[6] = v20;
          id v21 = v19;
          sub_1C9BEC838();
        case 3u:
          uint64_t v22 = (void *)*a2;
          *a1 = *a2;
          id v23 = v22;
          goto LABEL_71;
        case 4u:
          unint64_t v24 = a2[1];
          *a1 = *a2;
          a1[1] = v24;
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          sub_1C9BEC838();
        case 5u:
          unint64_t v26 = *a2;
          unint64_t v25 = a2[1];
          sub_1C9637F70(v26);
          *a1 = v26;
          a1[1] = v25;
          goto LABEL_71;
        case 6u:
          unint64_t v27 = *a2;
          id v28 = (id)*a2;
          *a1 = v27;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
LABEL_71:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_72;
  }
  memcpy(a1, a2, *(void *)(v5 + 64));
  return a1;
}

void sub_1C9ACA304(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v3 = sub_1C9BECAA8();
LABEL_6:
      uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
      break;
    case 1:
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v3 = sub_1C9BEC028();
          goto LABEL_6;
        case 1u:
          uint64_t v12 = sub_1C9BEC028();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
LABEL_72:
          swift_release();
          return;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_37;
        case 3u:
          swift_unknownObjectRelease();
          return;
        case 4u:
          uint64_t v3 = sub_1C9BEAC48();
          goto LABEL_6;
        case 5u:
LABEL_12:
          uint64_t v5 = *(void **)a1;
          goto LABEL_45;
        case 6u:
          uint64_t v13 = sub_1C9BEAF18();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
          uint64_t v14 = a1 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v15 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v14, 1, v15)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
          }
          goto LABEL_37;
        case 7u:
          uint64_t v16 = sub_1C9BEAF18();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
          uint64_t v17 = a1 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v18 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v17, 1, v18)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
          }
          swift_bridgeObjectRelease();
          type metadata accessor for LinkParse();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_37:
          swift_bridgeObjectRelease();
          break;
        case 8u:
          uint64_t v19 = sub_1C9BEC928();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a1, v19);
          uint64_t v20 = type metadata accessor for NLRouterParse();
          swift_bridgeObjectRelease();
          uint64_t v21 = a1 + *(int *)(v20 + 24);
          uint64_t v22 = type metadata accessor for USOParse();
          if (!__swift_getEnumTagSinglePayload(v21, 1, v22))
          {
            uint64_t v23 = sub_1C9BEAF18();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
            uint64_t v24 = v21 + *(int *)(v22 + 20);
            uint64_t v25 = sub_1C9BEAE48();
            if (!__swift_getEnumTagSinglePayload(v24, 1, v25)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v5 = *(void **)(a1 + *(int *)(v20 + 28));
LABEL_45:
LABEL_24:

          break;
        case 9u:
          uint64_t v3 = sub_1C9BEC8F8();
          goto LABEL_6;
        default:
          return;
      }
      break;
    case 0:
      type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_72;
        case 1u:
          uint64_t v6 = sub_1C9BEAB08();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
          uint64_t v7 = type metadata accessor for Input(0);
          uint64_t v8 = (void **)(a1 + *(int *)(v7 + 20));
          type metadata accessor for Parse(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v9 = sub_1C9BEC028();
              goto LABEL_68;
            case 1u:
              uint64_t v26 = sub_1C9BEC028();
              (*(void (**)(void **, uint64_t))(*(void *)(v26 - 8) + 8))(v8, v26);
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
              swift_release();
              break;
            case 2u:
              swift_bridgeObjectRelease();
              goto LABEL_60;
            case 3u:
              swift_unknownObjectRelease();
              break;
            case 4u:
              uint64_t v9 = sub_1C9BEAC48();
              goto LABEL_68;
            case 5u:
              unint64_t v27 = *v8;
              goto LABEL_66;
            case 6u:
              uint64_t v28 = sub_1C9BEAF18();
              (*(void (**)(void **, uint64_t))(*(void *)(v28 - 8) + 8))(v8, v28);
              uint64_t v29 = (uint64_t)v8 + *(int *)(type metadata accessor for USOParse() + 20);
              uint64_t v30 = sub_1C9BEAE48();
              if (!__swift_getEnumTagSinglePayload(v29, 1, v30)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
              }
              goto LABEL_60;
            case 7u:
              uint64_t v31 = sub_1C9BEAF18();
              (*(void (**)(void **, uint64_t))(*(void *)(v31 - 8) + 8))(v8, v31);
              uint64_t v32 = (uint64_t)v8 + *(int *)(type metadata accessor for USOParse() + 20);
              uint64_t v33 = sub_1C9BEAE48();
              if (!__swift_getEnumTagSinglePayload(v32, 1, v33)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
              }
              swift_bridgeObjectRelease();
              type metadata accessor for LinkParse();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_60:
              swift_bridgeObjectRelease();
              break;
            case 8u:
              uint64_t v34 = sub_1C9BEC928();
              (*(void (**)(void **, uint64_t))(*(void *)(v34 - 8) + 8))(v8, v34);
              uint64_t v35 = type metadata accessor for NLRouterParse();
              swift_bridgeObjectRelease();
              uint64_t v36 = (uint64_t)v8 + *(int *)(v35 + 24);
              uint64_t v37 = type metadata accessor for USOParse();
              if (!__swift_getEnumTagSinglePayload(v36, 1, v37))
              {
                uint64_t v38 = sub_1C9BEAF18();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
                uint64_t v39 = v36 + *(int *)(v37 + 20);
                uint64_t v40 = sub_1C9BEAE48();
                if (!__swift_getEnumTagSinglePayload(v39, 1, v40)) {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v39, v40);
                }
                swift_bridgeObjectRelease();
              }
              unint64_t v27 = *(void **)((char *)v8 + *(int *)(v35 + 28));
LABEL_66:

              break;
            case 9u:
              uint64_t v9 = sub_1C9BEC8F8();
LABEL_68:
              (*(void (**)(void **, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
              break;
            default:
              break;
          }
          swift_bridgeObjectRelease();
          uint64_t v41 = a1 + *(int *)(v7 + 28);
          if (*(void *)(v41 + 24)) {
            __swift_destroy_boxed_opaque_existential_1(v41);
          }
          swift_getAssociatedTypeWitness();
          __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);

          goto LABEL_72;
        case 2u:
          __swift_destroy_boxed_opaque_existential_1(a1);

          goto LABEL_72;
        case 3u:
          goto LABEL_12;
        case 4u:
          swift_release();

          __swift_destroy_boxed_opaque_existential_1(a1 + 16);
          break;
        case 5u:
          unint64_t v10 = *(void *)a1;
          uint64_t v11 = *(void **)(a1 + 8);
          sub_1C9638078(v10, v11);
          break;
        case 6u:
          uint64_t v5 = *(void **)a1;
          goto LABEL_24;
        default:
          return;
      }
      break;
  }
}

unint64_t *sub_1C9ACADF8(unint64_t *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v8 = sub_1C9BECAA8();
      (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_70:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v9 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = sub_1C9BEC028();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
          goto LABEL_40;
        case 1u:
          uint64_t v29 = sub_1C9BEC028();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
          uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(unint64_t *)((char *)a1 + *(int *)(v30 + 48)) = *(void *)((char *)a2 + *(int *)(v30 + 48));
          sub_1C9BEC838();
        case 2u:
          unint64_t v31 = a2[1];
          *a1 = *a2;
          a1[1] = v31;
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_40;
        case 3u:
          *a1 = *a2;
          swift_unknownObjectRetain();
          goto LABEL_40;
        case 4u:
          uint64_t v32 = sub_1C9BEAC48();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          goto LABEL_40;
        case 5u:
          uint64_t v33 = (void *)*a2;
          *a1 = *a2;
          id v34 = v33;
          goto LABEL_40;
        case 6u:
          uint64_t v35 = sub_1C9BEAF18();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          uint64_t v36 = (int *)type metadata accessor for USOParse();
          uint64_t v37 = v36[5];
          uint64_t v38 = (char *)a1 + v37;
          uint64_t v39 = (char *)a2 + v37;
          uint64_t v40 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
            __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
          }
          uint64_t v61 = v36[6];
          uint64_t v62 = (unint64_t *)((char *)a1 + v61);
          int v63 = (void *)((char *)a2 + v61);
          uint64_t v64 = v63[1];
          *uint64_t v62 = *v63;
          v62[1] = v64;
          uint64_t v65 = v36[7];
          unsigned int v66 = (char *)a1 + v65;
          uint64_t v67 = (char *)a2 + v65;
          v66[4] = v67[4];
          *(_DWORD *)unsigned int v66 = *(_DWORD *)v67;
          swift_bridgeObjectRetain();
          goto LABEL_40;
        case 7u:
          uint64_t v42 = sub_1C9BEAF18();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          uint64_t v43 = (int *)type metadata accessor for USOParse();
          uint64_t v44 = v43[5];
          uint64_t v45 = (char *)a1 + v44;
          uint64_t v46 = (char *)a2 + v44;
          uint64_t v47 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
            __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
          }
          uint64_t v68 = v43[6];
          uint64_t v69 = (unint64_t *)((char *)a1 + v68);
          unsigned int v70 = (void *)((char *)a2 + v68);
          uint64_t v71 = v70[1];
          *uint64_t v69 = *v70;
          v69[1] = v71;
          uint64_t v72 = v43[7];
          uint64_t v73 = (char *)a1 + v72;
          uint64_t v74 = (char *)a2 + v72;
          v73[4] = v74[4];
          *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
          uint64_t v75 = (int *)type metadata accessor for LinkParse();
          uint64_t v76 = v75[5];
          uint64_t v77 = (unint64_t *)((char *)a1 + v76);
          uint64_t v78 = (void *)((char *)a2 + v76);
          uint64_t v79 = v78[1];
          *uint64_t v77 = *v78;
          v77[1] = v79;
          uint64_t v80 = v75[6];
          uint64_t v81 = (unint64_t *)((char *)a1 + v80);
          uint64_t v82 = (void *)((char *)a2 + v80);
          uint64_t v83 = v82[1];
          *uint64_t v81 = *v82;
          v81[1] = v83;
          uint64_t v84 = v75[7];
          uint64_t v85 = (unint64_t *)((char *)a1 + v84);
          uint64_t v86 = (void *)((char *)a2 + v84);
          uint64_t v87 = v86[1];
          *uint64_t v85 = *v86;
          v85[1] = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_40;
        case 8u:
          uint64_t v49 = sub_1C9BEC928();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          uint64_t v50 = (int *)type metadata accessor for NLRouterParse();
          uint64_t v51 = v50[5];
          uint64_t v52 = (unint64_t *)((char *)a1 + v51);
          uint64_t v53 = (void *)((char *)a2 + v51);
          uint64_t v54 = v53[1];
          *uint64_t v52 = *v53;
          v52[1] = v54;
          uint64_t v55 = v50[6];
          long long v56 = (char *)a1 + v55;
          uint64_t v57 = (char *)a2 + v55;
          uint64_t v58 = (int *)type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v57, 1, (uint64_t)v58))
          {
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            uint64_t v88 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v56, v57, v88);
            uint64_t v89 = v58[5];
            unint64_t __dst = &v56[v89];
            id v90 = &v57[v89];
            uint64_t v91 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91))
            {
              uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, v90, *(void *)(*(void *)(v92 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(__dst, v90, v91);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v91);
            }
            uint64_t v93 = v58[6];
            uint64_t v94 = &v56[v93];
            long long v95 = &v57[v93];
            uint64_t v96 = *((void *)v95 + 1);
            *(void *)uint64_t v94 = *(void *)v95;
            *((void *)v94 + 1) = v96;
            uint64_t v97 = v58[7];
            uint64_t v98 = &v56[v97];
            unsigned int v99 = &v57[v97];
            v98[4] = v99[4];
            *(_DWORD *)uint64_t v98 = *(_DWORD *)v99;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v56, 0, 1, (uint64_t)v58);
          }
          uint64_t v100 = v50[7];
          uint64_t v101 = *(void **)((char *)a2 + v100);
          *(unint64_t *)((char *)a1 + v100) = (unint64_t)v101;
          id v102 = v101;
          goto LABEL_40;
        case 9u:
          uint64_t v60 = sub_1C9BEC8F8();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
LABEL_40:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
      goto LABEL_70;
    case 0:
      uint64_t v7 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *a1 = *a2;
          sub_1C9BEC838();
        case 1u:
          uint64_t v11 = sub_1C9BEAB08();
          (*(void (**)(unint64_t *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          uint64_t v12 = (int *)type metadata accessor for Input(0);
          uint64_t v13 = v12[5];
          uint64_t v14 = (unint64_t *)((char *)a1 + v13);
          uint64_t v15 = (void *)((char *)a2 + v13);
          uint64_t v16 = type metadata accessor for Parse(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v17 = sub_1C9BEC028();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
              goto LABEL_64;
            case 1u:
              uint64_t v103 = sub_1C9BEC028();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(v14, v15, v103);
              uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
              *(void *)((char *)v14 + *(int *)(v104 + 48)) = *(void *)((char *)v15 + *(int *)(v104 + 48));
              sub_1C9BEC838();
            case 2u:
              uint64_t v105 = v15[1];
              void *v14 = *v15;
              v14[1] = v105;
              uint64_t v14[2] = v15[2];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_64;
            case 3u:
              void *v14 = *v15;
              swift_unknownObjectRetain();
              goto LABEL_64;
            case 4u:
              uint64_t v106 = sub_1C9BEAC48();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(v14, v15, v106);
              goto LABEL_64;
            case 5u:
              id v107 = (void *)*v15;
              void *v14 = *v15;
              id v108 = v107;
              goto LABEL_64;
            case 6u:
              uint64_t v109 = sub_1C9BEAF18();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 16))(v14, v15, v109);
              uint64_t v110 = type metadata accessor for USOParse();
              uint64_t v111 = *(int *)(v110 + 20);
              uint64_t v193 = v110;
              unint64_t v197 = (char *)v14 + v111;
              char v112 = (char *)v15 + v111;
              uint64_t v113 = sub_1C9BEAE48();
              __src = v112;
              uint64_t v114 = (uint64_t)v112;
              uint64_t v115 = v113;
              if (__swift_getEnumTagSinglePayload(v114, 1, v113))
              {
                uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v197, __src, *(void *)(*(void *)(v116 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v197, __src, v115);
                __swift_storeEnumTagSinglePayload((uint64_t)v197, 0, 1, v115);
              }
              uint64_t v136 = *(int *)(v193 + 24);
              unint64_t v137 = (void *)((char *)v14 + v136);
              unint64_t v138 = (void *)((char *)v15 + v136);
              uint64_t v139 = v138[1];
              *unint64_t v137 = *v138;
              v137[1] = v139;
              uint64_t v140 = *(int *)(v193 + 28);
              unint64_t v141 = (char *)v14 + v140;
              int v142 = (char *)v15 + v140;
              v141[4] = v142[4];
              *(_DWORD *)unint64_t v141 = *(_DWORD *)v142;
              swift_bridgeObjectRetain();
              goto LABEL_64;
            case 7u:
              uint64_t v117 = sub_1C9BEAF18();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v117 - 8) + 16))(v14, v15, v117);
              uint64_t v118 = type metadata accessor for USOParse();
              uint64_t v119 = *(int *)(v118 + 20);
              uint64_t v194 = v118;
              uint64_t v198 = (char *)v14 + v119;
              unint64_t v120 = (char *)v15 + v119;
              uint64_t v121 = sub_1C9BEAE48();
              __srca = v120;
              uint64_t v122 = (uint64_t)v120;
              uint64_t v123 = v121;
              if (__swift_getEnumTagSinglePayload(v122, 1, v121))
              {
                uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v198, __srca, *(void *)(*(void *)(v124 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, void *, uint64_t))(*(void *)(v123 - 8) + 16))(v198, __srca, v123);
                __swift_storeEnumTagSinglePayload((uint64_t)v198, 0, 1, v123);
              }
              uint64_t v143 = *(int *)(v194 + 24);
              unsigned int v144 = (void *)((char *)v14 + v143);
              unint64_t v145 = (void *)((char *)v15 + v143);
              unint64_t v200 = (void *)v145[1];
              *unsigned int v144 = *v145;
              v144[1] = v200;
              uint64_t v146 = *(int *)(v194 + 28);
              int v147 = (char *)v14 + v146;
              unint64_t v148 = (char *)v15 + v146;
              v147[4] = v148[4];
              *(_DWORD *)int v147 = *(_DWORD *)v148;
              int v149 = (int *)type metadata accessor for LinkParse();
              uint64_t v150 = v149[5];
              int v151 = (void *)((char *)v14 + v150);
              unint64_t v152 = (void *)((char *)v15 + v150);
              uint64_t v196 = v152[1];
              *int v151 = *v152;
              v151[1] = v196;
              uint64_t v153 = v149[6];
              unint64_t v154 = (void *)((char *)v14 + v153);
              unint64_t v155 = (void *)((char *)v15 + v153);
              uint64_t v156 = v155[1];
              void *v154 = *v155;
              v154[1] = v156;
              uint64_t v157 = v149[7];
              v158 = (void *)((char *)v14 + v157);
              unint64_t v159 = (void *)((char *)v15 + v157);
              uint64_t v160 = v159[1];
              void *v158 = *v159;
              v158[1] = v160;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_64;
            case 8u:
              uint64_t v125 = sub_1C9BEC928();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v14, v15, v125);
              uint64_t v126 = type metadata accessor for NLRouterParse();
              uint64_t v127 = *(int *)(v126 + 20);
              size_t v128 = (void *)((char *)v14 + v127);
              unint64_t v129 = (void *)((char *)v15 + v127);
              uint64_t v130 = v129[1];
              *size_t v128 = *v129;
              v128[1] = v130;
              unint64_t v188 = v14;
              uint64_t v189 = v126;
              uint64_t v131 = *(int *)(v126 + 24);
              unint64_t v195 = (char *)v15 + v131;
              uint64_t v199 = (char *)v14 + v131;
              uint64_t v132 = type metadata accessor for USOParse();
              swift_bridgeObjectRetain();
              __srcb = (int *)v132;
              if (__swift_getEnumTagSinglePayload((uint64_t)v195, 1, v132))
              {
                uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
                memcpy(v199, v195, *(void *)(*(void *)(v133 - 8) + 64));
                unint64_t v134 = v188;
              }
              else
              {
                uint64_t v161 = sub_1C9BEAF18();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 16))(v199, v195, v161);
                uint64_t v162 = *(int *)(v132 + 20);
                uint64_t v187 = &v199[v162];
                long long v163 = &v195[v162];
                uint64_t v164 = sub_1C9BEAE48();
                if (__swift_getEnumTagSinglePayload((uint64_t)v163, 1, v164))
                {
                  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                  memcpy(v187, v163, *(void *)(*(void *)(v165 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v187, v163, v164);
                  __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v164);
                }
                unint64_t v134 = v188;
                uint64_t v166 = __srcb[6];
                unint64_t v167 = &v199[v166];
                v168 = &v195[v166];
                uint64_t v169 = *((void *)v168 + 1);
                *(void *)unint64_t v167 = *(void *)v168;
                *((void *)v167 + 1) = v169;
                uint64_t v170 = __srcb[7];
                unint64_t v171 = &v199[v170];
                size_t v172 = &v195[v170];
                v171[4] = v172[4];
                *(_DWORD *)unint64_t v171 = *(_DWORD *)v172;
                swift_bridgeObjectRetain();
                __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, (uint64_t)__srcb);
              }
              uint64_t v173 = *(int *)(v189 + 28);
              unint64_t v174 = *(void **)((char *)v15 + v173);
              *(void *)((char *)v134 + v173) = v174;
              id v175 = v174;
              goto LABEL_64;
            case 9u:
              uint64_t v135 = sub_1C9BEC8F8();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v135 - 8) + 16))(v14, v15, v135);
LABEL_64:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
              break;
          }
          *(unint64_t *)((char *)a1 + v12[6]) = *(void *)((char *)a2 + v12[6]);
          uint64_t v176 = v12[7];
          unint64_t v177 = (char *)a1 + v176;
          unint64_t v178 = (char *)a2 + v176;
          uint64_t v179 = *(void *)((char *)a2 + v176 + 24);
          swift_bridgeObjectRetain();
          if (v179)
          {
            uint64_t v180 = *((void *)v178 + 4);
            *((void *)v177 + 3) = v179;
            *((void *)v177 + 4) = v180;
            (**(void (***)(char *, char *, uint64_t))(v179 - 8))(v177, v178, v179);
          }
          else
          {
            long long v181 = *((_OWORD *)v178 + 1);
            *(_OWORD *)unint64_t v177 = *(_OWORD *)v178;
            *((_OWORD *)v177 + 1) = v181;
            *((void *)v177 + 4) = *((void *)v178 + 4);
          }
          *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
          swift_getAssociatedTypeWitness();
          __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          uint64_t v183 = *(int *)(TupleTypeMetadata3 + 48);
          long long v184 = *(void **)((char *)a2 + v183);
          *(unint64_t *)((char *)a1 + v183) = (unint64_t)v184;
          *(unint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata3 + 64)) = *(void *)((char *)a2
                                                                                            + *(int *)(TupleTypeMetadata3 + 64));
          id v185 = v184;
          sub_1C9BEC838();
        case 2u:
          long long v18 = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 3) = v18;
          (**(void (***)(unint64_t *, void *))(v18 - 8))(a1, a2);
          uint64_t v19 = (void *)a2[5];
          unint64_t v20 = a2[6];
          a1[5] = (unint64_t)v19;
          a1[6] = v20;
          id v21 = v19;
          sub_1C9BEC838();
        case 3u:
          uint64_t v22 = (void *)*a2;
          *a1 = *a2;
          id v23 = v22;
          goto LABEL_69;
        case 4u:
          unint64_t v24 = a2[1];
          *a1 = *a2;
          a1[1] = v24;
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          sub_1C9BEC838();
        case 5u:
          unint64_t v26 = *a2;
          unint64_t v25 = a2[1];
          sub_1C9637F70(v26);
          *a1 = v26;
          a1[1] = v25;
          goto LABEL_69;
        case 6u:
          unint64_t v27 = *a2;
          id v28 = (id)*a2;
          *a1 = v27;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
LABEL_69:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_70;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unint64_t *sub_1C9ACC0B0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(unint64_t *, uint64_t))(v5 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v8 = sub_1C9BECAA8();
        (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_71:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        uint64_t v9 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v10 = sub_1C9BEC028();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
            goto LABEL_41;
          case 1u:
            uint64_t v27 = sub_1C9BEC028();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(unint64_t *)((char *)a1 + *(int *)(v28 + 48)) = *(unint64_t *)((char *)a2
                                                                                         + *(int *)(v28 + 48));
            sub_1C9BEC838();
          case 2u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_41;
          case 3u:
            *a1 = *a2;
            swift_unknownObjectRetain();
            goto LABEL_41;
          case 4u:
            uint64_t v29 = sub_1C9BEAC48();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
            goto LABEL_41;
          case 5u:
            uint64_t v30 = (void *)*a2;
            *a1 = *a2;
            id v31 = v30;
            goto LABEL_41;
          case 6u:
            uint64_t v32 = sub_1C9BEAF18();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
            uint64_t v33 = (int *)type metadata accessor for USOParse();
            uint64_t v34 = v33[5];
            uint64_t v35 = (char *)a1 + v34;
            uint64_t v36 = (char *)a2 + v34;
            uint64_t v37 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
            {
              uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
              __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
            }
            uint64_t v57 = v33[6];
            uint64_t v58 = (unint64_t *)((char *)a1 + v57);
            uint64_t v59 = (unint64_t *)((char *)a2 + v57);
            *uint64_t v58 = *v59;
            v58[1] = v59[1];
            uint64_t v60 = v33[7];
            uint64_t v61 = (char *)a1 + v60;
            uint64_t v62 = (char *)a2 + v60;
            int v63 = *(_DWORD *)v62;
            v61[4] = v62[4];
            *(_DWORD *)uint64_t v61 = v63;
            swift_bridgeObjectRetain();
            goto LABEL_41;
          case 7u:
            uint64_t v39 = sub_1C9BEAF18();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
            uint64_t v40 = (int *)type metadata accessor for USOParse();
            uint64_t v41 = v40[5];
            uint64_t v42 = (char *)a1 + v41;
            uint64_t v43 = (char *)a2 + v41;
            uint64_t v44 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
            {
              uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
              __swift_storeEnumTagSinglePayload((uint64_t)v42, 0, 1, v44);
            }
            uint64_t v64 = v40[6];
            uint64_t v65 = (unint64_t *)((char *)a1 + v64);
            unsigned int v66 = (unint64_t *)((char *)a2 + v64);
            *uint64_t v65 = *v66;
            v65[1] = v66[1];
            uint64_t v67 = v40[7];
            uint64_t v68 = (char *)a1 + v67;
            uint64_t v69 = (char *)a2 + v67;
            int v70 = *(_DWORD *)v69;
            v68[4] = v69[4];
            *(_DWORD *)uint64_t v68 = v70;
            uint64_t v71 = (int *)type metadata accessor for LinkParse();
            uint64_t v72 = v71[5];
            uint64_t v73 = (unint64_t *)((char *)a1 + v72);
            uint64_t v74 = (unint64_t *)((char *)a2 + v72);
            *uint64_t v73 = *v74;
            v73[1] = v74[1];
            uint64_t v75 = v71[6];
            uint64_t v76 = (unint64_t *)((char *)a1 + v75);
            uint64_t v77 = (unint64_t *)((char *)a2 + v75);
            *uint64_t v76 = *v77;
            v76[1] = v77[1];
            uint64_t v78 = v71[7];
            uint64_t v79 = (unint64_t *)((char *)a1 + v78);
            uint64_t v80 = (unint64_t *)((char *)a2 + v78);
            *uint64_t v79 = *v80;
            v79[1] = v80[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_41;
          case 8u:
            uint64_t v46 = sub_1C9BEC928();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
            uint64_t v47 = (int *)type metadata accessor for NLRouterParse();
            uint64_t v48 = v47[5];
            uint64_t v49 = (unint64_t *)((char *)a1 + v48);
            uint64_t v50 = (unint64_t *)((char *)a2 + v48);
            *uint64_t v49 = *v50;
            v49[1] = v50[1];
            uint64_t v51 = v47[6];
            uint64_t v52 = (char *)a1 + v51;
            uint64_t v53 = (char *)a2 + v51;
            uint64_t v54 = (int *)type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, (uint64_t)v54))
            {
              uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
            }
            else
            {
              uint64_t v81 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v52, v53, v81);
              uint64_t v82 = v54[5];
              unint64_t __dst = &v52[v82];
              uint64_t v83 = &v53[v82];
              uint64_t v84 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v83, 1, v84))
              {
                uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(__dst, v83, *(void *)(*(void *)(v85 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 16))(__dst, v83, v84);
                __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v84);
              }
              uint64_t v86 = v54[6];
              uint64_t v87 = &v52[v86];
              uint64_t v88 = &v53[v86];
              *(void *)uint64_t v87 = *(void *)v88;
              *((void *)v87 + 1) = *((void *)v88 + 1);
              uint64_t v89 = v54[7];
              id v90 = &v52[v89];
              uint64_t v91 = &v53[v89];
              int v92 = *(_DWORD *)v91;
              v90[4] = v91[4];
              *(_DWORD *)id v90 = v92;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, (uint64_t)v54);
            }
            uint64_t v93 = v47[7];
            uint64_t v94 = *(void **)((char *)a2 + v93);
            *(unint64_t *)((char *)a1 + v93) = (unint64_t)v94;
            id v95 = v94;
            goto LABEL_41;
          case 9u:
            uint64_t v56 = sub_1C9BEC8F8();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
LABEL_41:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
        goto LABEL_71;
      case 0:
        uint64_t v7 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            *a1 = *a2;
            sub_1C9BEC838();
          case 1u:
            uint64_t v11 = sub_1C9BEAB08();
            (*(void (**)(unint64_t *, unint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
            uint64_t v12 = (int *)type metadata accessor for Input(0);
            uint64_t v13 = v12[5];
            uint64_t v14 = (unint64_t *)((char *)a1 + v13);
            uint64_t v15 = (unint64_t *)((char *)a2 + v13);
            uint64_t v16 = type metadata accessor for Parse(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v17 = sub_1C9BEC028();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
                goto LABEL_65;
              case 1u:
                uint64_t v96 = sub_1C9BEC028();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(v14, v15, v96);
                uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
                *(void *)((char *)v14 + *(int *)(v97 + 48)) = *(void *)((char *)v15 + *(int *)(v97 + 48));
                sub_1C9BEC838();
              case 2u:
                void *v14 = *v15;
                v14[1] = v15[1];
                uint64_t v14[2] = v15[2];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_65;
              case 3u:
                void *v14 = *v15;
                swift_unknownObjectRetain();
                goto LABEL_65;
              case 4u:
                uint64_t v98 = sub_1C9BEAC48();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(v14, v15, v98);
                goto LABEL_65;
              case 5u:
                unsigned int v99 = (void *)*v15;
                void *v14 = *v15;
                id v100 = v99;
                goto LABEL_65;
              case 6u:
                uint64_t v101 = sub_1C9BEAF18();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v101 - 8) + 16))(v14, v15, v101);
                uint64_t v102 = type metadata accessor for USOParse();
                uint64_t v103 = *(int *)(v102 + 20);
                uint64_t v183 = v102;
                unsigned int v186 = (char *)v14 + v103;
                uint64_t v104 = (char *)v15 + v103;
                uint64_t v105 = sub_1C9BEAE48();
                __src = v104;
                uint64_t v106 = (uint64_t)v104;
                uint64_t v107 = v105;
                if (__swift_getEnumTagSinglePayload(v106, 1, v105))
                {
                  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                  memcpy(v186, __src, *(void *)(*(void *)(v108 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v107 - 8) + 16))(v186, __src, v107);
                  __swift_storeEnumTagSinglePayload((uint64_t)v186, 0, 1, v107);
                }
                uint64_t v127 = *(int *)(v183 + 24);
                size_t v128 = (void *)((char *)v14 + v127);
                unint64_t v129 = (void *)((char *)v15 + v127);
                *size_t v128 = *v129;
                v128[1] = v129[1];
                uint64_t v130 = *(int *)(v183 + 28);
                uint64_t v131 = (char *)v14 + v130;
                uint64_t v132 = (char *)v15 + v130;
                int v133 = *(_DWORD *)v132;
                v131[4] = v132[4];
                *(_DWORD *)uint64_t v131 = v133;
                swift_bridgeObjectRetain();
                goto LABEL_65;
              case 7u:
                uint64_t v109 = sub_1C9BEAF18();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 16))(v14, v15, v109);
                uint64_t v110 = type metadata accessor for USOParse();
                uint64_t v111 = *(int *)(v110 + 20);
                uint64_t v184 = v110;
                uint64_t v187 = (char *)v14 + v111;
                char v112 = (char *)v15 + v111;
                uint64_t v113 = sub_1C9BEAE48();
                __srca = v112;
                uint64_t v114 = (uint64_t)v112;
                uint64_t v115 = v113;
                if (__swift_getEnumTagSinglePayload(v114, 1, v113))
                {
                  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                  memcpy(v187, __srca, *(void *)(*(void *)(v116 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v187, __srca, v115);
                  __swift_storeEnumTagSinglePayload((uint64_t)v187, 0, 1, v115);
                }
                uint64_t v134 = *(int *)(v184 + 24);
                uint64_t v135 = (void *)((char *)v14 + v134);
                uint64_t v136 = (void *)((char *)v15 + v134);
                *uint64_t v135 = *v136;
                v135[1] = v136[1];
                uint64_t v137 = *(int *)(v184 + 28);
                unint64_t v138 = (char *)v14 + v137;
                uint64_t v139 = (char *)v15 + v137;
                int v140 = *(_DWORD *)v139;
                v138[4] = v139[4];
                *(_DWORD *)unint64_t v138 = v140;
                unint64_t v141 = (int *)type metadata accessor for LinkParse();
                uint64_t v142 = v141[5];
                uint64_t v143 = (void *)((char *)v14 + v142);
                unsigned int v144 = (void *)((char *)v15 + v142);
                void *v143 = *v144;
                v143[1] = v144[1];
                uint64_t v145 = v141[6];
                uint64_t v146 = (void *)((char *)v14 + v145);
                int v147 = (void *)((char *)v15 + v145);
                *uint64_t v146 = *v147;
                v146[1] = v147[1];
                uint64_t v148 = v141[7];
                int v149 = (void *)((char *)v14 + v148);
                uint64_t v150 = (void *)((char *)v15 + v148);
                *int v149 = *v150;
                v149[1] = v150[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_65;
              case 8u:
                uint64_t v117 = sub_1C9BEC928();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v117 - 8) + 16))(v14, v15, v117);
                uint64_t v118 = type metadata accessor for NLRouterParse();
                uint64_t v119 = *(int *)(v118 + 20);
                unint64_t v120 = (void *)((char *)v14 + v119);
                uint64_t v121 = (void *)((char *)v15 + v119);
                *unint64_t v120 = *v121;
                v120[1] = v121[1];
                unint64_t v178 = v14;
                uint64_t v179 = v118;
                uint64_t v122 = *(int *)(v118 + 24);
                id v185 = (char *)v15 + v122;
                unint64_t v188 = (char *)v14 + v122;
                uint64_t v123 = type metadata accessor for USOParse();
                swift_bridgeObjectRetain();
                __srcb = (int *)v123;
                if (__swift_getEnumTagSinglePayload((uint64_t)v185, 1, v123))
                {
                  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
                  memcpy(v188, v185, *(void *)(*(void *)(v124 - 8) + 64));
                  uint64_t v125 = v178;
                }
                else
                {
                  uint64_t v151 = sub_1C9BEAF18();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v188, v185, v151);
                  uint64_t v152 = *(int *)(v123 + 20);
                  unint64_t v177 = &v188[v152];
                  uint64_t v153 = &v185[v152];
                  uint64_t v154 = sub_1C9BEAE48();
                  if (__swift_getEnumTagSinglePayload((uint64_t)v153, 1, v154))
                  {
                    uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                    memcpy(v177, v153, *(void *)(*(void *)(v155 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v177, v153, v154);
                    __swift_storeEnumTagSinglePayload((uint64_t)v177, 0, 1, v154);
                  }
                  uint64_t v125 = v178;
                  uint64_t v156 = __srcb[6];
                  uint64_t v157 = &v188[v156];
                  v158 = &v185[v156];
                  *(void *)uint64_t v157 = *(void *)v158;
                  *((void *)v157 + 1) = *((void *)v158 + 1);
                  uint64_t v159 = __srcb[7];
                  uint64_t v160 = &v188[v159];
                  uint64_t v161 = &v185[v159];
                  int v162 = *(_DWORD *)v161;
                  v160[4] = v161[4];
                  *(_DWORD *)uint64_t v160 = v162;
                  swift_bridgeObjectRetain();
                  __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, (uint64_t)__srcb);
                }
                uint64_t v163 = *(int *)(v179 + 28);
                uint64_t v164 = *(void **)((char *)v15 + v163);
                *(void *)((char *)v125 + v163) = v164;
                id v165 = v164;
                goto LABEL_65;
              case 9u:
                uint64_t v126 = sub_1C9BEC8F8();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(v14, v15, v126);
LABEL_65:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
                break;
            }
            *(unint64_t *)((char *)a1 + v12[6]) = *(unint64_t *)((char *)a2 + v12[6]);
            uint64_t v166 = v12[7];
            unint64_t v167 = (char *)a1 + v166;
            v168 = (char *)a2 + v166;
            uint64_t v169 = *(unint64_t *)((char *)a2 + v166 + 24);
            swift_bridgeObjectRetain();
            if (v169)
            {
              *((void *)v167 + 3) = v169;
              *((void *)v167 + 4) = *((void *)v168 + 4);
              (**(void (***)(char *, char *, uint64_t))(v169 - 8))(v167, v168, v169);
            }
            else
            {
              long long v170 = *(_OWORD *)v168;
              long long v171 = *((_OWORD *)v168 + 1);
              *((void *)v167 + 4) = *((void *)v168 + 4);
              *(_OWORD *)unint64_t v167 = v170;
              *((_OWORD *)v167 + 1) = v171;
            }
            *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
            swift_getAssociatedTypeWitness();
            __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
            TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
            uint64_t v173 = *(int *)(TupleTypeMetadata3 + 48);
            unint64_t v174 = *(void **)((char *)a2 + v173);
            *(unint64_t *)((char *)a1 + v173) = (unint64_t)v174;
            *(unint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata3 + 64)) = *(unint64_t *)((char *)a2 + *(int *)(TupleTypeMetadata3 + 64));
            id v175 = v174;
            sub_1C9BEC838();
          case 2u:
            unint64_t v18 = a2[3];
            a1[3] = v18;
            a1[4] = a2[4];
            (**(void (***)(unint64_t *, unint64_t *))(v18 - 8))(a1, a2);
            uint64_t v19 = (void *)a2[5];
            a1[5] = (unint64_t)v19;
            a1[6] = a2[6];
            id v20 = v19;
            sub_1C9BEC838();
          case 3u:
            id v21 = (void *)*a2;
            *a1 = *a2;
            id v22 = v21;
            goto LABEL_70;
          case 4u:
            *a1 = *a2;
            a1[1] = a2[1];
            a1[5] = a2[5];
            a1[6] = a2[6];
            sub_1C9BEC838();
          case 5u:
            unint64_t v24 = *a2;
            unint64_t v23 = a2[1];
            sub_1C9637F70(v24);
            *a1 = v24;
            a1[1] = v23;
            goto LABEL_70;
          case 6u:
            unint64_t v25 = *a2;
            id v26 = (id)*a2;
            *a1 = v25;
            *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_71;
    }
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  return a1;
}

char *sub_1C9ACD458(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v15 = sub_1C9BECAA8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_54:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v16 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v17 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
          goto LABEL_47;
        case 1u:
          uint64_t v18 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&a1[*(int *)(v19 + 48)] = *(void *)&a2[*(int *)(v19 + 48)];
          goto LABEL_47;
        case 4u:
          uint64_t v20 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          goto LABEL_47;
        case 6u:
          uint64_t v21 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
          id v22 = (int *)type metadata accessor for USOParse();
          uint64_t v23 = v22[5];
          unint64_t v24 = &a1[v23];
          unint64_t v25 = &a2[v23];
          uint64_t v26 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
            __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
          }
          *(_OWORD *)&a1[v22[6]] = *(_OWORD *)&a2[v22[6]];
          uint64_t v67 = v22[7];
          uint64_t v68 = &a1[v67];
          uint64_t v69 = &a2[v67];
          v68[4] = v69[4];
          *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
          goto LABEL_47;
        case 7u:
          uint64_t v28 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
          uint64_t v29 = (int *)type metadata accessor for USOParse();
          uint64_t v30 = v29[5];
          id v31 = &a1[v30];
          uint64_t v32 = &a2[v30];
          uint64_t v33 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
            __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
          }
          *(_OWORD *)&a1[v29[6]] = *(_OWORD *)&a2[v29[6]];
          uint64_t v70 = v29[7];
          uint64_t v71 = &a1[v70];
          uint64_t v72 = &a2[v70];
          v71[4] = v72[4];
          *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
          uint64_t v73 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&a1[v73[5]] = *(_OWORD *)&a2[v73[5]];
          *(_OWORD *)&a1[v73[6]] = *(_OWORD *)&a2[v73[6]];
          *(_OWORD *)&a1[v73[7]] = *(_OWORD *)&a2[v73[7]];
          goto LABEL_47;
        case 8u:
          uint64_t v35 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
          uint64_t v36 = (int *)type metadata accessor for NLRouterParse();
          *(_OWORD *)&a1[v36[5]] = *(_OWORD *)&a2[v36[5]];
          uint64_t v37 = v36[6];
          uint64_t v38 = &a1[v37];
          uint64_t v39 = &a2[v37];
          uint64_t v40 = (int *)type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, (uint64_t)v40))
          {
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
          }
          else
          {
            uint64_t v74 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v38, v39, v74);
            uint64_t v75 = v40[5];
            uint64_t v114 = &v38[v75];
            uint64_t v76 = &v39[v75];
            uint64_t v77 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
            {
              uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v114, v76, *(void *)(*(void *)(v78 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v114, v76, v77);
              __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v77);
            }
            *(_OWORD *)&v38[v40[6]] = *(_OWORD *)&v39[v40[6]];
            uint64_t v91 = v40[7];
            int v92 = &v38[v91];
            uint64_t v93 = &v39[v91];
            v92[4] = v93[4];
            *(_DWORD *)int v92 = *(_DWORD *)v93;
            __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, (uint64_t)v40);
          }
          *(void *)&a1[v36[7]] = *(void *)&a2[v36[7]];
          goto LABEL_47;
        case 9u:
          uint64_t v42 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
LABEL_47:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
          break;
      }
      goto LABEL_54;
    case 0:
      uint64_t v7 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v8 = sub_1C9BEAB08();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = (int *)type metadata accessor for Input(0);
        uint64_t v10 = v9[5];
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v14 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
            goto LABEL_52;
          case 1u:
            uint64_t v43 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v11, v12, v43);
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&v11[*(int *)(v44 + 48)] = *(void *)&v12[*(int *)(v44 + 48)];
            goto LABEL_52;
          case 4u:
            uint64_t v45 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v11, v12, v45);
            goto LABEL_52;
          case 6u:
            uint64_t v46 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v11, v12, v46);
            uint64_t v47 = type metadata accessor for USOParse();
            uint64_t v48 = *(int *)(v47 + 20);
            uint64_t v108 = v47;
            unint64_t __dst = &v11[v48];
            uint64_t v49 = &v12[v48];
            uint64_t v50 = sub_1C9BEAE48();
            __src = v49;
            uint64_t v51 = (uint64_t)v49;
            uint64_t v52 = v50;
            if (__swift_getEnumTagSinglePayload(v51, 1, v50))
            {
              uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, __src, *(void *)(*(void *)(v53 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(__dst, __src, v52);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v52);
            }
            *(_OWORD *)&v11[*(int *)(v108 + 24)] = *(_OWORD *)&v12[*(int *)(v108 + 24)];
            uint64_t v79 = *(int *)(v108 + 28);
            uint64_t v80 = &v11[v79];
            uint64_t v81 = &v12[v79];
            v80[4] = v81[4];
            *(_DWORD *)uint64_t v80 = *(_DWORD *)v81;
            goto LABEL_52;
          case 7u:
            uint64_t v54 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v11, v12, v54);
            uint64_t v55 = type metadata accessor for USOParse();
            uint64_t v56 = *(int *)(v55 + 20);
            uint64_t v109 = v55;
            unint64_t __dsta = &v11[v56];
            uint64_t v57 = &v12[v56];
            uint64_t v58 = sub_1C9BEAE48();
            __srca = v57;
            uint64_t v59 = (uint64_t)v57;
            uint64_t v60 = v58;
            if (__swift_getEnumTagSinglePayload(v59, 1, v58))
            {
              uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, __srca, *(void *)(*(void *)(v61 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(__dsta, __srca, v60);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v60);
            }
            *(_OWORD *)&v11[*(int *)(v109 + 24)] = *(_OWORD *)&v12[*(int *)(v109 + 24)];
            uint64_t v82 = *(int *)(v109 + 28);
            uint64_t v83 = &v11[v82];
            uint64_t v84 = &v12[v82];
            v83[4] = v84[4];
            *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
            uint64_t v85 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&v11[v85[5]] = *(_OWORD *)&v12[v85[5]];
            *(_OWORD *)&v11[v85[6]] = *(_OWORD *)&v12[v85[6]];
            *(_OWORD *)&v11[v85[7]] = *(_OWORD *)&v12[v85[7]];
            goto LABEL_52;
          case 8u:
            uint64_t v62 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v11, v12, v62);
            uint64_t v63 = type metadata accessor for NLRouterParse();
            *(_OWORD *)&v11[*(int *)(v63 + 20)] = *(_OWORD *)&v12[*(int *)(v63 + 20)];
            __srcb = (int *)v63;
            uint64_t v64 = *(int *)(v63 + 24);
            __dstb = &v11[v64];
            uint64_t v110 = &v12[v64];
            uint64_t v104 = (int *)type metadata accessor for USOParse();
            if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, (uint64_t)v104))
            {
              uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstb, v110, *(void *)(*(void *)(v65 - 8) + 64));
            }
            else
            {
              uint64_t v86 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(__dstb, v110, v86);
              uint64_t v87 = v104[5];
              uint64_t v103 = &__dstb[v87];
              uint64_t v88 = &v110[v87];
              uint64_t v89 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
              {
                uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v103, v88, *(void *)(*(void *)(v90 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v103, v88, v89);
                __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v89);
              }
              *(_OWORD *)&__dstb[v104[6]] = *(_OWORD *)&v110[v104[6]];
              uint64_t v94 = v104[7];
              id v95 = &__dstb[v94];
              uint64_t v96 = &v110[v94];
              v95[4] = v96[4];
              *(_DWORD *)id v95 = *(_DWORD *)v96;
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v104);
            }
            *(void *)&v11[__srcb[7]] = *(void *)&v12[__srcb[7]];
            goto LABEL_52;
          case 9u:
            uint64_t v66 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v11, v12, v66);
LABEL_52:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
        uint64_t v97 = v9[7];
        uint64_t v98 = &a1[v97];
        unsigned int v99 = &a2[v97];
        long long v100 = *((_OWORD *)v99 + 1);
        *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
        *((_OWORD *)v98 + 1) = v100;
        *((void *)v98 + 4) = *((void *)v99 + 4);
        a1[v9[8]] = a2[v9[8]];
        swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        *(void *)&a1[*(int *)(TupleTypeMetadata3 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata3 + 48)];
        *(void *)&a1[*(int *)(TupleTypeMetadata3 + 64)] = *(void *)&a2[*(int *)(TupleTypeMetadata3 + 64)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      goto LABEL_54;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1C9ACE360(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v15 = sub_1C9BECAA8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
LABEL_55:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        uint64_t v16 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v17 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
            goto LABEL_48;
          case 1u:
            uint64_t v18 = sub_1C9BEC028();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
            uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)&a1[*(int *)(v19 + 48)] = *(void *)&a2[*(int *)(v19 + 48)];
            goto LABEL_48;
          case 4u:
            uint64_t v20 = sub_1C9BEAC48();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
            goto LABEL_48;
          case 6u:
            uint64_t v21 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
            id v22 = (int *)type metadata accessor for USOParse();
            uint64_t v23 = v22[5];
            unint64_t v24 = &a1[v23];
            unint64_t v25 = &a2[v23];
            uint64_t v26 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
            {
              uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
              __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
            }
            *(_OWORD *)&a1[v22[6]] = *(_OWORD *)&a2[v22[6]];
            uint64_t v67 = v22[7];
            uint64_t v68 = &a1[v67];
            uint64_t v69 = &a2[v67];
            v68[4] = v69[4];
            *(_DWORD *)uint64_t v68 = *(_DWORD *)v69;
            goto LABEL_48;
          case 7u:
            uint64_t v28 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
            uint64_t v29 = (int *)type metadata accessor for USOParse();
            uint64_t v30 = v29[5];
            id v31 = &a1[v30];
            uint64_t v32 = &a2[v30];
            uint64_t v33 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
            {
              uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
              __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
            }
            *(_OWORD *)&a1[v29[6]] = *(_OWORD *)&a2[v29[6]];
            uint64_t v70 = v29[7];
            uint64_t v71 = &a1[v70];
            uint64_t v72 = &a2[v70];
            v71[4] = v72[4];
            *(_DWORD *)uint64_t v71 = *(_DWORD *)v72;
            uint64_t v73 = (int *)type metadata accessor for LinkParse();
            *(_OWORD *)&a1[v73[5]] = *(_OWORD *)&a2[v73[5]];
            *(_OWORD *)&a1[v73[6]] = *(_OWORD *)&a2[v73[6]];
            *(_OWORD *)&a1[v73[7]] = *(_OWORD *)&a2[v73[7]];
            goto LABEL_48;
          case 8u:
            uint64_t v35 = sub_1C9BEC928();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
            uint64_t v36 = (int *)type metadata accessor for NLRouterParse();
            *(_OWORD *)&a1[v36[5]] = *(_OWORD *)&a2[v36[5]];
            uint64_t v37 = v36[6];
            uint64_t v38 = &a1[v37];
            uint64_t v39 = &a2[v37];
            uint64_t v40 = (int *)type metadata accessor for USOParse();
            if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, (uint64_t)v40))
            {
              uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
            }
            else
            {
              uint64_t v74 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v38, v39, v74);
              uint64_t v75 = v40[5];
              uint64_t v114 = &v38[v75];
              uint64_t v76 = &v39[v75];
              uint64_t v77 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77))
              {
                uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v114, v76, *(void *)(*(void *)(v78 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v114, v76, v77);
                __swift_storeEnumTagSinglePayload((uint64_t)v114, 0, 1, v77);
              }
              *(_OWORD *)&v38[v40[6]] = *(_OWORD *)&v39[v40[6]];
              uint64_t v91 = v40[7];
              int v92 = &v38[v91];
              uint64_t v93 = &v39[v91];
              v92[4] = v93[4];
              *(_DWORD *)int v92 = *(_DWORD *)v93;
              __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, (uint64_t)v40);
            }
            *(void *)&a1[v36[7]] = *(void *)&a2[v36[7]];
            goto LABEL_48;
          case 9u:
            uint64_t v42 = sub_1C9BEC8F8();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
LABEL_48:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
            break;
        }
        goto LABEL_55;
      case 0:
        uint64_t v7 = type metadata accessor for SiriKitServerAssistedAppResolutionFlow.State();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v8 = sub_1C9BEAB08();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
          uint64_t v9 = (int *)type metadata accessor for Input(0);
          uint64_t v10 = v9[5];
          uint64_t v11 = &a1[v10];
          uint64_t v12 = &a2[v10];
          uint64_t v13 = type metadata accessor for Parse(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v14 = sub_1C9BEC028();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
              goto LABEL_53;
            case 1u:
              uint64_t v43 = sub_1C9BEC028();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v11, v12, v43);
              uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
              *(void *)&v11[*(int *)(v44 + 48)] = *(void *)&v12[*(int *)(v44 + 48)];
              goto LABEL_53;
            case 4u:
              uint64_t v45 = sub_1C9BEAC48();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v11, v12, v45);
              goto LABEL_53;
            case 6u:
              uint64_t v46 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v11, v12, v46);
              uint64_t v47 = type metadata accessor for USOParse();
              uint64_t v48 = *(int *)(v47 + 20);
              uint64_t v108 = v47;
              unint64_t __dst = &v11[v48];
              uint64_t v49 = &v12[v48];
              uint64_t v50 = sub_1C9BEAE48();
              __src = v49;
              uint64_t v51 = (uint64_t)v49;
              uint64_t v52 = v50;
              if (__swift_getEnumTagSinglePayload(v51, 1, v50))
              {
                uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(__dst, __src, *(void *)(*(void *)(v53 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(__dst, __src, v52);
                __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v52);
              }
              *(_OWORD *)&v11[*(int *)(v108 + 24)] = *(_OWORD *)&v12[*(int *)(v108 + 24)];
              uint64_t v79 = *(int *)(v108 + 28);
              uint64_t v80 = &v11[v79];
              uint64_t v81 = &v12[v79];
              v80[4] = v81[4];
              *(_DWORD *)uint64_t v80 = *(_DWORD *)v81;
              goto LABEL_53;
            case 7u:
              uint64_t v54 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v11, v12, v54);
              uint64_t v55 = type metadata accessor for USOParse();
              uint64_t v56 = *(int *)(v55 + 20);
              uint64_t v109 = v55;
              unint64_t __dsta = &v11[v56];
              uint64_t v57 = &v12[v56];
              uint64_t v58 = sub_1C9BEAE48();
              __srca = v57;
              uint64_t v59 = (uint64_t)v57;
              uint64_t v60 = v58;
              if (__swift_getEnumTagSinglePayload(v59, 1, v58))
              {
                uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(__dsta, __srca, *(void *)(*(void *)(v61 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(__dsta, __srca, v60);
                __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v60);
              }
              *(_OWORD *)&v11[*(int *)(v109 + 24)] = *(_OWORD *)&v12[*(int *)(v109 + 24)];
              uint64_t v82 = *(int *)(v109 + 28);
              uint64_t v83 = &v11[v82];
              uint64_t v84 = &v12[v82];
              v83[4] = v84[4];
              *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
              uint64_t v85 = (int *)type metadata accessor for LinkParse();
              *(_OWORD *)&v11[v85[5]] = *(_OWORD *)&v12[v85[5]];
              *(_OWORD *)&v11[v85[6]] = *(_OWORD *)&v12[v85[6]];
              *(_OWORD *)&v11[v85[7]] = *(_OWORD *)&v12[v85[7]];
              goto LABEL_53;
            case 8u:
              uint64_t v62 = sub_1C9BEC928();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v11, v12, v62);
              uint64_t v63 = type metadata accessor for NLRouterParse();
              *(_OWORD *)&v11[*(int *)(v63 + 20)] = *(_OWORD *)&v12[*(int *)(v63 + 20)];
              __srcb = (int *)v63;
              uint64_t v64 = *(int *)(v63 + 24);
              __dstb = &v11[v64];
              uint64_t v110 = &v12[v64];
              uint64_t v104 = (int *)type metadata accessor for USOParse();
              if (__swift_getEnumTagSinglePayload((uint64_t)v110, 1, (uint64_t)v104))
              {
                uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
                memcpy(__dstb, v110, *(void *)(*(void *)(v65 - 8) + 64));
              }
              else
              {
                uint64_t v86 = sub_1C9BEAF18();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(__dstb, v110, v86);
                uint64_t v87 = v104[5];
                uint64_t v103 = &__dstb[v87];
                uint64_t v88 = &v110[v87];
                uint64_t v89 = sub_1C9BEAE48();
                if (__swift_getEnumTagSinglePayload((uint64_t)v88, 1, v89))
                {
                  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                  memcpy(v103, v88, *(void *)(*(void *)(v90 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v103, v88, v89);
                  __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v89);
                }
                *(_OWORD *)&__dstb[v104[6]] = *(_OWORD *)&v110[v104[6]];
                uint64_t v94 = v104[7];
                id v95 = &__dstb[v94];
                uint64_t v96 = &v110[v94];
                v95[4] = v96[4];
                *(_DWORD *)id v95 = *(_DWORD *)v96;
                __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)v104);
              }
              *(void *)&v11[__srcb[7]] = *(void *)&v12[__srcb[7]];
              goto LABEL_53;
            case 9u:
              uint64_t v66 = sub_1C9BEC8F8();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v11, v12, v66);
LABEL_53:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
              break;
          }
          *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
          uint64_t v97 = v9[7];
          uint64_t v98 = &a1[v97];
          unsigned int v99 = &a2[v97];
          long long v100 = *((_OWORD *)v99 + 1);
          *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
          *((_OWORD *)v98 + 1) = v100;
          *((void *)v98 + 4) = *((void *)v99 + 4);
          a1[v9[8]] = a2[v9[8]];
          swift_getAssociatedTypeWitness();
          __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EA598C30);
          TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
          *(void *)&a1[*(int *)(TupleTypeMetadata3 + 48)] = *(void *)&a2[*(int *)(TupleTypeMetadata3 + 48)];
          *(void *)&a1[*(int *)(TupleTypeMetadata3 + 64)] = *(void *)&a2[*(int *)(TupleTypeMetadata3 + 64)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        goto LABEL_55;
    }
    memcpy(a1, a2, *(void *)(v5 + 64));
  }
  return a1;
}

uint64_t OUTLINED_FUNCTION_8_74(uint64_t a1)
{
  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_20_60()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_34_32()
{
  return sub_1C9BEAE48();
}

uint64_t OUTLINED_FUNCTION_36_36()
{
  return 0;
}

uint64_t SiriKitSnippets.PunchOutSnippetModel.init(label:punchOutURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);

  return sub_1C9ACF3D4(a3, v5);
}

uint64_t type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA598E58);
}

uint64_t sub_1C9ACF3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t static SiriKitSnippets.bundleName.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t SiriKitSnippets.AppLaunchSnippetModel.label.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitSnippets.AppLaunchSnippetModel.appIdentifier.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9ACF4B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656449707061 && a2 == 0xED00007265696669)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C9ACF5C0(char a1)
{
  if (a1) {
    return 0x746E656449707061;
  }
  else {
    return 0x6C6562616CLL;
  }
}

uint64_t sub_1C9ACF600()
{
  return sub_1C9ACF5C0(*v0);
}

uint64_t sub_1C9ACF608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9ACF4B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9ACF630(uint64_t a1)
{
  unint64_t v2 = sub_1C9ACF6F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9ACF66C(uint64_t a1)
{
  unint64_t v2 = sub_1C9ACF6F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

#error "1C9ACF6EC: call analysis failed (funcsize=17)"

unint64_t sub_1C9ACF6F8()
{
  unint64_t result = qword_1EA598D58;
  if (!qword_1EA598D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598D58);
  }
  return result;
}

void SiriKitSnippets.AppLaunchSnippetModel.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598D60);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3, v4);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C9ACF6F8();
  OUTLINED_FUNCTION_50_16();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    OUTLINED_FUNCTION_16_54();
    OUTLINED_FUNCTION_14_68();
    sub_1C9BEE468();
    uint64_t v5 = OUTLINED_FUNCTION_6_40();
    v6(v5);
    OUTLINED_FUNCTION_20_61();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_6_31();
}

void sub_1C9ACF8A8()
{
}

uint64_t sub_1C9ACF8C0()
{
  return SiriKitSnippets.AppLaunchSnippetModel.encode(to:)();
}

uint64_t SiriKitSnippets.PunchOutSnippetModel.label.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t SiriKitSnippets.PunchOutSnippetModel.punchOutURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);

  return sub_1C9ACF948(v3, a1);
}

uint64_t sub_1C9ACF948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9ACF9B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74754F68636E7570 && a2 == 0xEB000000004C5255)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C9ACFAB0(char a1)
{
  if (a1) {
    return 0x74754F68636E7570;
  }
  else {
    return 0x6C6562616CLL;
  }
}

uint64_t sub_1C9ACFAEC()
{
  return sub_1C9ACFAB0(*v0);
}

uint64_t sub_1C9ACFAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9ACF9B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9ACFB1C(uint64_t a1)
{
  unint64_t v2 = sub_1C9ACFD1C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9ACFB58(uint64_t a1)
{
  unint64_t v2 = sub_1C9ACFD1C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SiriKitSnippets.PunchOutSnippetModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598D68);
  OUTLINED_FUNCTION_0_2();
  uint64_t v5 = v4;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C9ACFD1C();
  sub_1C9BEE7A8();
  sub_1C9BEE528();
  if (!v1)
  {
    type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0);
    sub_1C9BEA988();
    sub_1C9ACFFD4(&qword_1EA598D78, MEMORY[0x1E4F276F0]);
    sub_1C9BEE518();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v10, v3);
}

unint64_t sub_1C9ACFD1C()
{
  unint64_t result = qword_1EA598D70;
  if (!qword_1EA598D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598D70);
  }
  return result;
}

void SiriKitSnippets.PunchOutSnippetModel.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
  MEMORY[0x1F4188790](v4 - 8, v5);
  OUTLINED_FUNCTION_21_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598D80);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v8 = type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_6_0();
  uint64_t v13 = (uint64_t *)(v12 - v11);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C9ACFD1C();
  sub_1C9BEE798();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    *uint64_t v13 = sub_1C9BEE488();
    v13[1] = v14;
    sub_1C9BEA988();
    sub_1C9ACFFD4(&qword_1EA598D88, MEMORY[0x1E4F276F0]);
    sub_1C9BEE478();
    uint64_t v15 = OUTLINED_FUNCTION_13_55();
    v16(v15);
    sub_1C9ACF3D4(v1, (uint64_t)v13 + *(int *)(v8 + 20));
    sub_1C9AD0F5C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    sub_1C9AD2090((uint64_t)v13, (void (*)(void))type metadata accessor for SiriKitSnippets.PunchOutSnippetModel);
  }
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9ACFFD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C9AD001C()
{
}

uint64_t sub_1C9AD0034(void *a1)
{
  return SiriKitSnippets.PunchOutSnippetModel.encode(to:)(a1);
}

uint64_t SiriKitSnippets.ConfirmationSnippetModel.noLabel.getter()
{
  return OUTLINED_FUNCTION_134_0();
}

uint64_t static SiriKitSnippets.ConfirmationSnippetModel.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1C9BEE618(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      OUTLINED_FUNCTION_134_0();
      return sub_1C9BEE618();
    }
  }
  return result;
}

uint64_t sub_1C9AD0118(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562614C736579 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562614C6F6ELL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C9AD0208(char a1)
{
  if (a1) {
    return 0x6C6562614C6F6ELL;
  }
  else {
    return 0x6C6562614C736579;
  }
}

uint64_t sub_1C9AD0240()
{
  return sub_1C9AD0208(*v0);
}

uint64_t sub_1C9AD0248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9AD0118(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9AD0270(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD047C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD02AC(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD047C();

  return MEMORY[0x1F41862B0](a1, v2);
}

#error "1C9AD032C: call analysis failed (funcsize=17)"

void sub_1C9AD0338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  OUTLINED_FUNCTION_8_3();
  a22 = v26;
  a23 = v27;
  uint64_t v40 = v28;
  uint64_t v41 = v29;
  id v31 = v30;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(v32);
  OUTLINED_FUNCTION_0_2();
  uint64_t v35 = v34;
  MEMORY[0x1F4188790](v36, v37);
  OUTLINED_FUNCTION_221();
  uint64_t v38 = *(void *)(v23 + 24);
  uint64_t v39 = *(void *)(v23 + 16);
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  v41();
  sub_1C9BEE7A8();
  a13 = 0;
  sub_1C9BEE528();
  if (!v24)
  {
    a12 = 1;
    v40(v39, v38, &a12, v33);
  }
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v25, v33);
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9AD047C()
{
  unint64_t result = qword_1EA598D98;
  if (!qword_1EA598D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598D98);
  }
  return result;
}

void SiriKitSnippets.ConfirmationSnippetModel.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598DA0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3, v4);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C9AD047C();
  OUTLINED_FUNCTION_50_16();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    OUTLINED_FUNCTION_16_54();
    OUTLINED_FUNCTION_14_68();
    OUTLINED_FUNCTION_16_54();
    uint64_t v5 = OUTLINED_FUNCTION_6_40();
    v6(v5);
    OUTLINED_FUNCTION_20_61();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9AD0620(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E75614C707061 && a2 == 0xEF6E6F7474754268;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x74754F68636E7570 && a2 == 0xEE006E6F74747542;
    if (v6 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000001C9C2C5E0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1C9AD07B8(char a1)
{
  if (!a1) {
    return 0x636E75614C707061;
  }
  if (a1 == 1) {
    return 0x74754F68636E7570;
  }
  return 0xD000000000000013;
}

void sub_1C9AD0830()
{
}

uint64_t sub_1C9AD0848()
{
  return SiriKitSnippets.ConfirmationSnippetModel.encode(to:)();
}

uint64_t sub_1C9AD0860(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD1094();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD089C(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD1094();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9AD08D8()
{
  return sub_1C9AD07B8(*v0);
}

uint64_t sub_1C9AD08E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9AD0620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9AD0908(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD0F10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD0944(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD0F10();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9AD0980(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD0FB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD09BC(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD0FB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9AD09F8(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD1048();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD0A34(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD1048();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SiriKitSnippets.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598DA8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_11_73(v5, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598DB0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_33_0();
  type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_21_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598DB8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v10, v11);
  type metadata accessor for SiriKitSnippets(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v12, v13);
  OUTLINED_FUNCTION_6_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598DC0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_221();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C9AD0F10();
  sub_1C9BEE7A8();
  sub_1C9AD0F5C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C9AD1094();
    sub_1C9BEE4F8();
    sub_1C9AD10E0();
    sub_1C9BEE568();
    OUTLINED_FUNCTION_37();
    v19();
    OUTLINED_FUNCTION_15_58();
    OUTLINED_FUNCTION_37();
    v20();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1C9AD0FB0();
    sub_1C9BEE4F8();
    sub_1C9AD0FFC();
    sub_1C9BEE568();
    OUTLINED_FUNCTION_37();
    v21();
    OUTLINED_FUNCTION_15_58();
    OUTLINED_FUNCTION_37();
    v22();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_1C9AD1938();
  sub_1C9AD1048();
  sub_1C9BEE4F8();
  sub_1C9ACFFD4(&qword_1EA598DE8, (void (*)(uint64_t))type metadata accessor for SiriKitSnippets.PunchOutSnippetModel);
  sub_1C9BEE568();
  OUTLINED_FUNCTION_37();
  v17();
  sub_1C9AD2090(v0, (void (*)(void))type metadata accessor for SiriKitSnippets.PunchOutSnippetModel);
  OUTLINED_FUNCTION_15_58();
  OUTLINED_FUNCTION_37();
  v18();
LABEL_7:
  OUTLINED_FUNCTION_6_31();
}

uint64_t type metadata accessor for SiriKitSnippets(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA598E48);
}

unint64_t sub_1C9AD0F10()
{
  unint64_t result = qword_1EA598DC8;
  if (!qword_1EA598DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598DC8);
  }
  return result;
}

uint64_t sub_1C9AD0F5C()
{
  uint64_t v2 = OUTLINED_FUNCTION_21_44();
  v3(v2);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

unint64_t sub_1C9AD0FB0()
{
  unint64_t result = qword_1EA598DD0;
  if (!qword_1EA598DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598DD0);
  }
  return result;
}

unint64_t sub_1C9AD0FFC()
{
  unint64_t result = qword_1EA598DD8;
  if (!qword_1EA598DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598DD8);
  }
  return result;
}

unint64_t sub_1C9AD1048()
{
  unint64_t result = qword_1EA598DE0;
  if (!qword_1EA598DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598DE0);
  }
  return result;
}

unint64_t sub_1C9AD1094()
{
  unint64_t result = qword_1EA598DF0;
  if (!qword_1EA598DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598DF0);
  }
  return result;
}

unint64_t sub_1C9AD10E0()
{
  unint64_t result = qword_1EA598DF8;
  if (!qword_1EA598DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598DF8);
  }
  return result;
}

void SiriKitSnippets.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v77 = v4;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598E00);
  OUTLINED_FUNCTION_0_2();
  uint64_t v74 = v5;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_33_0();
  uint64_t v79 = v8;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598E08);
  OUTLINED_FUNCTION_0_2();
  uint64_t v73 = v9;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_11_73(v12, v67[0]);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598E10);
  OUTLINED_FUNCTION_0_2();
  uint64_t v72 = v13;
  MEMORY[0x1F4188790](v14, v15);
  OUTLINED_FUNCTION_33_0();
  uint64_t v78 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598E18);
  OUTLINED_FUNCTION_0_2();
  uint64_t v80 = v18;
  uint64_t v81 = v17;
  MEMORY[0x1F4188790](v17, v19);
  OUTLINED_FUNCTION_221();
  uint64_t v20 = type metadata accessor for SiriKitSnippets(0);
  OUTLINED_FUNCTION_8_4();
  uint64_t v23 = MEMORY[0x1F4188790](v21, v22);
  uint64_t v25 = (char *)v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v23, v26);
  uint64_t v29 = (char *)v67 - v28;
  uint64_t v31 = MEMORY[0x1F4188790](v27, v30);
  uint64_t v33 = (char *)v67 - v32;
  MEMORY[0x1F4188790](v31, v34);
  uint64_t v36 = (char *)v67 - v35;
  uint64_t v37 = v3[3];
  uint64_t v83 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v37);
  sub_1C9AD0F10();
  sub_1C9BEE798();
  if (!v0)
  {
    uint64_t v68 = v33;
    uint64_t v69 = v25;
    uint64_t v70 = v36;
    uint64_t v71 = v29;
    uint64_t v39 = v81;
    uint64_t v86 = v20;
    uint64_t v40 = sub_1C9BEE4D8();
    uint64_t v41 = *(void *)(v40 + 16);
    if (v41)
    {
      uint64_t v42 = v39;
      v67[1] = 0;
      int v43 = *(unsigned __int8 *)(v40 + 32);
      uint64_t v44 = sub_1C960BC18(1, v41, v40, v40 + 32, 0, (2 * v41) | 1);
      uint64_t v46 = v45;
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      if (v46 == v48 >> 1)
      {
        if (v43)
        {
          if (v43 != 1)
          {
            LOBYTE(v84) = 2;
            sub_1C9AD0FB0();
            OUTLINED_FUNCTION_8_75();
            sub_1C9AD18EC();
            sub_1C9BEE4C8();
            OUTLINED_FUNCTION_37();
            v62();
            swift_unknownObjectRelease();
            uint64_t v63 = OUTLINED_FUNCTION_3_94();
            v64(v63);
            long long v65 = v85;
            uint64_t v66 = v69;
            *uint64_t v69 = v84;
            v66[1] = v65;
            swift_storeEnumTagMultiPayload();
            sub_1C9AD1938();
            uint64_t v38 = (uint64_t)v83;
LABEL_15:
            sub_1C9AD1938();
            goto LABEL_11;
          }
          LOBYTE(v84) = 1;
          sub_1C9AD1048();
          OUTLINED_FUNCTION_8_75();
          uint64_t v38 = (uint64_t)v83;
          type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0);
          sub_1C9ACFFD4(&qword_1EA598E28, (void (*)(uint64_t))type metadata accessor for SiriKitSnippets.PunchOutSnippetModel);
          sub_1C9BEE4C8();
          OUTLINED_FUNCTION_37();
          v54();
          swift_unknownObjectRelease();
          uint64_t v55 = OUTLINED_FUNCTION_3_94();
          v56(v55);
        }
        else
        {
          LOBYTE(v84) = 0;
          sub_1C9AD1094();
          OUTLINED_FUNCTION_8_75();
          sub_1C9AD198C();
          sub_1C9BEE4C8();
          uint64_t v38 = (uint64_t)v83;
          OUTLINED_FUNCTION_37();
          v57();
          swift_unknownObjectRelease();
          uint64_t v58 = OUTLINED_FUNCTION_13_71();
          v59(v58);
          uint64_t v60 = *((void *)&v84 + 1);
          uint64_t v61 = v68;
          *uint64_t v68 = v84;
          v61[1] = v60;
          *((_OWORD *)v61 + 1) = v85;
        }
        swift_storeEnumTagMultiPayload();
        sub_1C9AD1938();
        goto LABEL_15;
      }
      uint64_t v82 = v44;
      uint64_t v49 = v1;
      uint64_t v38 = (uint64_t)v83;
      uint64_t v50 = v80;
      uint64_t v39 = v42;
    }
    else
    {
      uint64_t v82 = v40;
      uint64_t v49 = v1;
      uint64_t v38 = (uint64_t)v83;
      uint64_t v50 = v80;
    }
    uint64_t v51 = sub_1C9BEE228();
    swift_allocError();
    uint64_t v53 = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D788);
    *uint64_t v53 = v86;
    sub_1C9BEE458();
    sub_1C9BEE208();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v51 - 8) + 104))(v53, *MEMORY[0x1E4FBBA70], v51);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v39);
    goto LABEL_11;
  }
  uint64_t v38 = (uint64_t)v83;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_1(v38);
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9AD1898()
{
  return 0xD00000000000001ALL;
}

void sub_1C9AD18BC()
{
}

void sub_1C9AD18D4()
{
}

unint64_t sub_1C9AD18EC()
{
  unint64_t result = qword_1EA598E20;
  if (!qword_1EA598E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E20);
  }
  return result;
}

uint64_t sub_1C9AD1938()
{
  uint64_t v2 = OUTLINED_FUNCTION_21_44();
  v3(v2);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

unint64_t sub_1C9AD198C()
{
  unint64_t result = qword_1EA598E30;
  if (!qword_1EA598E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E30);
  }
  return result;
}

uint64_t sub_1C9AD19E0()
{
  return sub_1C9ACFFD4(&qword_1EA598E28, (void (*)(uint64_t))type metadata accessor for SiriKitSnippets.PunchOutSnippetModel);
}

uint64_t sub_1C9AD1A28()
{
  return sub_1C9ACFFD4(&qword_1EA598DE8, (void (*)(uint64_t))type metadata accessor for SiriKitSnippets.PunchOutSnippetModel);
}

uint64_t sub_1C9AD1A78()
{
  return sub_1C9ACFFD4(&qword_1EA598E38, (void (*)(uint64_t))type metadata accessor for SiriKitSnippets);
}

uint64_t sub_1C9AD1AC0()
{
  return sub_1C9ACFFD4(&qword_1EA598E40, (void (*)(uint64_t))type metadata accessor for SiriKitSnippets);
}

void *initializeBufferWithCopyOfBuffer for SiriKitSnippets(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C9BEA988();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = a2[2];
    uint64_t v13 = a2[3];
    a1[2] = v12;
    a1[3] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t destroy for SiriKitSnippets(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (result != 1)
  {
    if (result) {
      return result;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = a1 + *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);
  uint64_t v4 = sub_1C9BEA988();
  uint64_t result = __swift_getEnumTagSinglePayload(v3, 1, v4);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  return result;
}

void *initializeWithCopy for SiriKitSnippets(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    uint64_t v5 = *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C9BEA988();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
      memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = a2[3];
    a1[2] = a2[2];
    a1[3] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for SiriKitSnippets(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C9AD2090((uint64_t)a1, (void (*)(void))type metadata accessor for SiriKitSnippets);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v4 = *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_1C9BEA988();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
        memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C9AD2090(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

_OWORD *initializeWithTake for SiriKitSnippets(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C9BEA988();
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for SiriKitSnippets(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9AD2090((uint64_t)a1, (void (*)(void))type metadata accessor for SiriKitSnippets);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(0) + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1C9BEA988();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C9AD2378()
{
  uint64_t result = type metadata accessor for SiriKitSnippets.PunchOutSnippetModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.AppLaunchSnippetModel()
{
  return &type metadata for SiriKitSnippets.AppLaunchSnippetModel;
}

void *initializeBufferWithCopyOfBuffer for SiriKitSnippets.PunchOutSnippetModel(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C9BEA988();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t destroy for SiriKitSnippets.PunchOutSnippetModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C9BEA988();
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for SiriKitSnippets.PunchOutSnippetModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_1C9BEA988();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for SiriKitSnippets.PunchOutSnippetModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C9BEA988();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for SiriKitSnippets.PunchOutSnippetModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C9BEA988();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for SiriKitSnippets.PunchOutSnippetModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C9BEA988();
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  int v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriKitSnippets.PunchOutSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9AD2AC4);
}

uint64_t sub_1C9AD2AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return __swift_getEnumTagSinglePayload(v9, a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SiriKitSnippets.PunchOutSnippetModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9AD2B64);
}

uint64_t sub_1C9AD2B64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBC7A190);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return __swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_1C9AD2BE8()
{
  sub_1C9AD2C80();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C9AD2C80()
{
  if (!qword_1EA598E68)
  {
    sub_1C9BEA988();
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA598E68);
    }
  }
}

ValueMetadata *type metadata accessor for SiriKitSnippets.ConfirmationSnippetModel()
{
  return &type metadata for SiriKitSnippets.ConfirmationSnippetModel;
}

unsigned char *storeEnumTagSinglePayload for SiriKitSnippets.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AD2DB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.CodingKeys()
{
  return &type metadata for SiriKitSnippets.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.AppLaunchButtonCodingKeys()
{
  return &type metadata for SiriKitSnippets.AppLaunchButtonCodingKeys;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.PunchOutButtonCodingKeys()
{
  return &type metadata for SiriKitSnippets.PunchOutButtonCodingKeys;
}

unsigned char *_s11SiriKitFlow15SiriKitSnippetsO25AppLaunchButtonCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9AD2EACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.ConfirmationSnippetCodingKeys()
{
  return &type metadata for SiriKitSnippets.ConfirmationSnippetCodingKeys;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.ConfirmationSnippetModel.CodingKeys()
{
  return &type metadata for SiriKitSnippets.ConfirmationSnippetModel.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.PunchOutSnippetModel.CodingKeys()
{
  return &type metadata for SiriKitSnippets.PunchOutSnippetModel.CodingKeys;
}

unsigned char *_s11SiriKitFlow15SiriKitSnippetsO24ConfirmationSnippetModelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AD2FD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitSnippets.AppLaunchSnippetModel.CodingKeys()
{
  return &type metadata for SiriKitSnippets.AppLaunchSnippetModel.CodingKeys;
}

unint64_t sub_1C9AD3010()
{
  unint64_t result = qword_1EA598E70;
  if (!qword_1EA598E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E70);
  }
  return result;
}

unint64_t sub_1C9AD3060()
{
  unint64_t result = qword_1EA598E78;
  if (!qword_1EA598E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E78);
  }
  return result;
}

unint64_t sub_1C9AD30B0()
{
  unint64_t result = qword_1EA598E80;
  if (!qword_1EA598E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E80);
  }
  return result;
}

unint64_t sub_1C9AD3100()
{
  unint64_t result = qword_1EA598E88;
  if (!qword_1EA598E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E88);
  }
  return result;
}

unint64_t sub_1C9AD3150()
{
  unint64_t result = qword_1EA598E90;
  if (!qword_1EA598E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E90);
  }
  return result;
}

unint64_t sub_1C9AD31A0()
{
  unint64_t result = qword_1EA598E98;
  if (!qword_1EA598E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598E98);
  }
  return result;
}

unint64_t sub_1C9AD31F0()
{
  unint64_t result = qword_1EA598EA0;
  if (!qword_1EA598EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EA0);
  }
  return result;
}

unint64_t sub_1C9AD3240()
{
  unint64_t result = qword_1EA598EA8;
  if (!qword_1EA598EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EA8);
  }
  return result;
}

unint64_t sub_1C9AD3290()
{
  unint64_t result = qword_1EA598EB0;
  if (!qword_1EA598EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EB0);
  }
  return result;
}

unint64_t sub_1C9AD32E0()
{
  unint64_t result = qword_1EA598EB8;
  if (!qword_1EA598EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EB8);
  }
  return result;
}

unint64_t sub_1C9AD3330()
{
  unint64_t result = qword_1EA598EC0;
  if (!qword_1EA598EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EC0);
  }
  return result;
}

unint64_t sub_1C9AD3380()
{
  unint64_t result = qword_1EA598EC8;
  if (!qword_1EA598EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EC8);
  }
  return result;
}

unint64_t sub_1C9AD33D0()
{
  unint64_t result = qword_1EA598ED0;
  if (!qword_1EA598ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598ED0);
  }
  return result;
}

unint64_t sub_1C9AD3420()
{
  unint64_t result = qword_1EA598ED8;
  if (!qword_1EA598ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598ED8);
  }
  return result;
}

unint64_t sub_1C9AD3470()
{
  unint64_t result = qword_1EA598EE0;
  if (!qword_1EA598EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EE0);
  }
  return result;
}

unint64_t sub_1C9AD34C0()
{
  unint64_t result = qword_1EA598EE8;
  if (!qword_1EA598EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EE8);
  }
  return result;
}

unint64_t sub_1C9AD3510()
{
  unint64_t result = qword_1EA598EF0;
  if (!qword_1EA598EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EF0);
  }
  return result;
}

unint64_t sub_1C9AD3560()
{
  unint64_t result = qword_1EA598EF8;
  if (!qword_1EA598EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598EF8);
  }
  return result;
}

unint64_t sub_1C9AD35B0()
{
  unint64_t result = qword_1EA598F00;
  if (!qword_1EA598F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F00);
  }
  return result;
}

unint64_t sub_1C9AD3600()
{
  unint64_t result = qword_1EA598F08;
  if (!qword_1EA598F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F08);
  }
  return result;
}

unint64_t sub_1C9AD3650()
{
  unint64_t result = qword_1EA598F10;
  if (!qword_1EA598F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F10);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_94()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_8_75()
{
  return sub_1C9BEE448();
}

void OUTLINED_FUNCTION_11_73(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_13_71()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_14_68()
{
  *(unsigned char *)(v0 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_15_58()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_16_54()
{
  return sub_1C9BEE488();
}

uint64_t OUTLINED_FUNCTION_19_56()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_20_61()
{
  *uint64_t v1 = v3;
  v1[1] = v2;
  v1[2] = *(void *)(v4 - 88);
  v1[3] = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_21_44()
{
  return 0;
}

uint64_t static SiriKitUIModel.bundleName.getter()
{
  return 0x5574694B69726953;
}

void SiriKitUIModel.snippetHidden(for:idiom:)()
{
}

uint64_t sub_1C9AD38C4()
{
  uint64_t result = qword_1EA598F18;
  if (!qword_1EA598F18) {
    sub_1C9BEC418();
  }
  return result;
}

uint64_t sub_1C9AD3914(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562616CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C9C2C600)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C9AD39FC(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x6C6562616CLL;
  }
}

uint64_t sub_1C9AD3A34()
{
  return sub_1C9AD39FC(*v0);
}

uint64_t sub_1C9AD3A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9AD3914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9AD3A64(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD3B18();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD3AA0(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD3B18();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SiriKitUIModel.ButtonInfo.encode(to:)()
{
}

unint64_t sub_1C9AD3B18()
{
  unint64_t result = qword_1EA598F28;
  if (!qword_1EA598F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F28);
  }
  return result;
}

void SiriKitUIModel.ButtonInfo.init(from:)()
{
}

void sub_1C9AD3BA0()
{
}

void sub_1C9AD3BB8()
{
}

uint64_t SiriKitUIModel.LocationAccessCarPlayPromptModel.titlePrompt.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriKitUIModel.LocationAccessCarPlayPromptModel.buttonAllowOnce.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SiriKitUIModel.LocationAccessCarPlayPromptModel.buttonAllowWhileUsingApp.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1C961A5E8(v2, v3);
}

uint64_t SiriKitUIModel.LocationAccessCarPlayPromptModel.buttonDontAllow.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  *a1 = v1[10];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C9AD3C9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F7250656C746974 && a2 == 0xEB0000000074706DLL;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C416E6F74747562 && a2 == 0xEF65636E4F776F6CLL;
    if (v6 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x80000001C9C2C620 || (sub_1C9BEE618() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x6F446E6F74747562 && a2 == 0xEF776F6C6C41746ELL)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1C9AD3EA8(char a1)
{
  unint64_t result = 0x6F7250656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C416E6F74747562;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0x6F446E6F74747562;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C9AD3F60()
{
  return sub_1C9AD3EA8(*v0);
}

uint64_t sub_1C9AD3F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9AD3C9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9AD3F90(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD4200();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD3FCC(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD4200();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SiriKitUIModel.LocationAccessCarPlayPromptModel.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598F38);
  OUTLINED_FUNCTION_0_2();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C9AD4200();
  sub_1C9BEE7A8();
  sub_1C9BEE528();
  if (!v0)
  {
    sub_1C9AD424C();
    OUTLINED_FUNCTION_10_70();
    sub_1C9BEE518();
    OUTLINED_FUNCTION_10_70();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9AD4200()
{
  unint64_t result = qword_1EA598F40;
  if (!qword_1EA598F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F40);
  }
  return result;
}

unint64_t sub_1C9AD424C()
{
  unint64_t result = qword_1EA598F48;
  if (!qword_1EA598F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F48);
  }
  return result;
}

void SiriKitUIModel.LocationAccessCarPlayPromptModel.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598F50);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_20_0();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C9AD4200();
  sub_1C9BEE798();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    LOBYTE(v13) = 0;
    uint64_t v7 = sub_1C9BEE488();
    uint64_t v9 = v8;
    uint64_t v12 = v7;
    sub_1C9AD4660();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_7_73();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C9BEE478();
    sub_1C961A5E8(v13, v14);
    OUTLINED_FUNCTION_7_73();
    uint64_t v10 = OUTLINED_FUNCTION_1_91();
    v11(v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C961A5E8(v13, v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C964FD64(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v12;
    v4[1] = v9;
    v4[2] = v13;
    v4[3] = v14;
    v4[4] = v15;
    v4[5] = v16;
    v4[6] = v13;
    v4[7] = v14;
    v4[8] = v15;
    v4[9] = v16;
    v4[10] = v13;
    v4[11] = v14;
    v4[12] = v15;
    v4[13] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C964FD64(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9AD4660()
{
  unint64_t result = qword_1EA598F58;
  if (!qword_1EA598F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F58);
  }
  return result;
}

void sub_1C9AD46AC()
{
}

void sub_1C9AD46C4()
{
}

uint64_t SiriKitUIModel.SiriNeedsLocationAccessErrorModel.titleError.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SiriKitUIModel.SiriNeedsLocationAccessErrorModel.buttonLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C9AD473C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x727245656C746974 && a2 == 0xEA0000000000726FLL;
  if (v2 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614C6E6F74747562 && a2 == 0xEB000000006C6562)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C9AD4850(char a1)
{
  if (a1) {
    return 0x614C6E6F74747562;
  }
  else {
    return 0x727245656C746974;
  }
}

uint64_t sub_1C9AD4894()
{
  return sub_1C9AD4850(*v0);
}

uint64_t sub_1C9AD489C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9AD473C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9AD48C4(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD4AB0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD4900(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD4AB0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SiriKitUIModel.SiriNeedsLocationAccessErrorModel.encode(to:)()
{
}

void sub_1C9AD4978()
{
  OUTLINED_FUNCTION_8_3();
  int v11 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v9, v10);
  OUTLINED_FUNCTION_222();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v11();
  sub_1C9BEE7A8();
  sub_1C9BEE528();
  if (!v0) {
    sub_1C9BEE528();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9AD4AB0()
{
  unint64_t result = qword_1EA598F68;
  if (!qword_1EA598F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F68);
  }
  return result;
}

void SiriKitUIModel.SiriNeedsLocationAccessErrorModel.init(from:)()
{
}

void sub_1C9AD4B38()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v18 = v5;
  __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2();
  sub_1C9BEE798();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    uint64_t v9 = sub_1C9BEE488();
    uint64_t v11 = v10;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C9BEE488();
    uint64_t v14 = v13;
    uint64_t v17 = v12;
    uint64_t v15 = OUTLINED_FUNCTION_6_40();
    v16(v15);
    *uint64_t v18 = v9;
    v18[1] = v11;
    v18[2] = v17;
    v18[3] = v14;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9AD4CEC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C9C2C640 || (sub_1C9BEE618() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001C9C2C660)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1C9BEE618();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C9AD4DD8(char a1)
{
  if (a1) {
    return 0xD00000000000001CLL;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

void sub_1C9AD4E10()
{
}

void sub_1C9AD4E28()
{
}

unint64_t sub_1C9AD4E40()
{
  return sub_1C9AD4DD8(*v0);
}

uint64_t sub_1C9AD4E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C9AD4CEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C9AD4E70(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD5340();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD4EAC(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD5340();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9AD4EE8(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD5424();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD4F24(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD5424();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C9AD4F60(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD538C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C9AD4F9C(uint64_t a1)
{
  unint64_t v2 = sub_1C9AD538C();

  return MEMORY[0x1F41862B0](a1, v2);
}

void SiriKitUIModel.encode(to:)()
{
  OUTLINED_FUNCTION_8_3();
  unint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598F78);
  OUTLINED_FUNCTION_0_2();
  uint64_t v25 = v4;
  uint64_t v26 = v3;
  MEMORY[0x1F4188790](v3, v5);
  OUTLINED_FUNCTION_6_0();
  uint64_t v8 = v7 - v6;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598F80);
  OUTLINED_FUNCTION_0_2();
  uint64_t v23 = v9;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_6_0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598F88);
  OUTLINED_FUNCTION_0_2();
  uint64_t v27 = v16;
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_6_0();
  uint64_t v21 = v20 - v19;
  char v22 = *(unsigned char *)(v0 + 112);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1C9AD5340();
  sub_1C9BEE7A8();
  if (v22)
  {
    sub_1C9AD538C();
    sub_1C9BEE4F8();
    OUTLINED_FUNCTION_11_74();
    sub_1C9AD53D8();
    sub_1C9BEE568();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v8, v26);
  }
  else
  {
    sub_1C9AD5424();
    sub_1C9BEE4F8();
    OUTLINED_FUNCTION_11_74();
    sub_1C9AD5470();
    sub_1C9BEE568();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v14, v24);
  }
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v21, v15);
  OUTLINED_FUNCTION_6_31();
}

unint64_t sub_1C9AD5340()
{
  unint64_t result = qword_1EA598F90;
  if (!qword_1EA598F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F90);
  }
  return result;
}

unint64_t sub_1C9AD538C()
{
  unint64_t result = qword_1EA598F98;
  if (!qword_1EA598F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598F98);
  }
  return result;
}

unint64_t sub_1C9AD53D8()
{
  unint64_t result = qword_1EA598FA0;
  if (!qword_1EA598FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FA0);
  }
  return result;
}

unint64_t sub_1C9AD5424()
{
  unint64_t result = qword_1EA598FA8;
  if (!qword_1EA598FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FA8);
  }
  return result;
}

unint64_t sub_1C9AD5470()
{
  unint64_t result = qword_1EA598FB0;
  if (!qword_1EA598FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FB0);
  }
  return result;
}

void SiriKitUIModel.init(from:)()
{
  OUTLINED_FUNCTION_8_3();
  uint64_t v3 = v2;
  uint64_t v44 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598FB8);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_222();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598FC0);
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA598FC8);
  OUTLINED_FUNCTION_0_2();
  uint64_t v45 = v10;
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_20_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1C9AD5340();
  sub_1C9BEE798();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v13 = sub_1C9BEE4D8();
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v43 = v1;
  if (!v14
    || (char v15 = *(unsigned char *)(v13 + 32),
        sub_1C960BC18(1, v14, v13, v13 + 32, 0, (2 * v14) | 1),
        uint64_t v17 = v16,
        unint64_t v19 = v18,
        swift_bridgeObjectRelease(),
        v17 != v19 >> 1))
  {
    uint64_t v20 = sub_1C9BEE228();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D788);
    *char v22 = &type metadata for SiriKitUIModel;
    sub_1C9BEE458();
    sub_1C9BEE208();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v9);
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    goto LABEL_9;
  }
  if (v15)
  {
    LOBYTE(v46) = 1;
    sub_1C9AD538C();
    sub_1C9BEE448();
    sub_1C9AD59D0();
    sub_1C9BEE4C8();
    uint64_t v23 = OUTLINED_FUNCTION_9_72();
    v24(v23);
    swift_unknownObjectRelease();
    uint64_t v25 = OUTLINED_FUNCTION_3_95();
    v26(v25);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = v46;
    uint64_t v34 = v47;
    long long v35 = 0uLL;
    uint64_t v36 = v48;
    uint64_t v37 = v49;
    long long v38 = 0uLL;
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_1C9AD5424();
    sub_1C9BEE448();
    sub_1C9AD5A1C();
    sub_1C9BEE4C8();
    uint64_t v39 = OUTLINED_FUNCTION_12_68();
    v40(v39);
    swift_unknownObjectRelease();
    uint64_t v41 = OUTLINED_FUNCTION_3_95();
    v42(v41);
    uint64_t v33 = v46;
    uint64_t v34 = v47;
    uint64_t v36 = v48;
    uint64_t v37 = v49;
    uint64_t v27 = v50;
    uint64_t v28 = v51;
    long long v35 = v52;
    long long v38 = v53;
    uint64_t v29 = v54;
    uint64_t v30 = v55;
    uint64_t v31 = v56;
    uint64_t v32 = v57;
  }
  *(void *)uint64_t v44 = v33;
  *(void *)(v44 + 8) = v34;
  *(void *)(v44 + 16) = v36;
  *(void *)(v44 + 24) = v37;
  *(void *)(v44 + 32) = v27;
  *(void *)(v44 + 40) = v28;
  *(_OWORD *)(v44 + 48) = v35;
  *(_OWORD *)(v44 + 64) = v38;
  *(void *)(v44 + 80) = v29;
  *(void *)(v44 + 88) = v30;
  *(void *)(v44 + 96) = v31;
  *(void *)(v44 + 104) = v32;
  *(unsigned char *)(v44 + 112) = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
LABEL_9:
  OUTLINED_FUNCTION_6_31();
}

uint64_t sub_1C9AD5978()
{
  return 0x5574694B69726953;
}

void sub_1C9AD59A0()
{
}

void sub_1C9AD59B8()
{
}

unint64_t sub_1C9AD59D0()
{
  unint64_t result = qword_1EA598FD0;
  if (!qword_1EA598FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FD0);
  }
  return result;
}

unint64_t sub_1C9AD5A1C()
{
  unint64_t result = qword_1EA598FD8;
  if (!qword_1EA598FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FD8);
  }
  return result;
}

unint64_t sub_1C9AD5A7C()
{
  unint64_t result = qword_1EA598FE0;
  if (!qword_1EA598FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FE0);
  }
  return result;
}

unint64_t sub_1C9AD5ACC()
{
  unint64_t result = qword_1EA598FE8;
  if (!qword_1EA598FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FE8);
  }
  return result;
}

uint64_t sub_1C9AD5B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if ((a15 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C961A5E8(a7, a8);
  }
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for SiriKitUIModel(uint64_t a1)
{
  return sub_1C9AD5C08(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(unsigned char *)(a1 + 112));
}

uint64_t sub_1C9AD5C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((a15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1C964FD64(a7, a8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SiriKitUIModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  char v18 = *(unsigned char *)(a2 + 112);
  sub_1C9AD5B18(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(unsigned char *)(a1 + 112) = v18;
  return a1;
}

uint64_t assignWithCopy for SiriKitUIModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 80);
  uint64_t v28 = *(void *)(a2 + 88);
  uint64_t v29 = *(void *)(a2 + 96);
  uint64_t v30 = *(void *)(a2 + 104);
  char v31 = *(unsigned char *)(a2 + 112);
  sub_1C9AD5B18(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v26, v27, v28, v29, v30, v31);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 104);
  char v24 = *(unsigned char *)(a1 + 112);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v26;
  *(void *)(a1 + 80) = v27;
  *(void *)(a1 + 88) = v28;
  *(void *)(a1 + 96) = v29;
  *(void *)(a1 + 104) = v30;
  *(unsigned char *)(a1 + 112) = v31;
  sub_1C9AD5C08(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, v23, v24);
  return a1;
}

void *__swift_memcpy113_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x71uLL);
}

uint64_t assignWithTake for SiriKitUIModel(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 112);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 104);
  char v16 = *(unsigned char *)(a1 + 112);
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v17;
  long long v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  long long v19 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v19;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 112) = v3;
  sub_1C9AD5C08(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriKitUIModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 113))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 112);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriKitUIModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 113) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 112) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C9AD600C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 112);
}

uint64_t sub_1C9AD6014(uint64_t result, char a2)
{
  *(unsigned char *)(result + 112) = a2 & 1;
  return result;
}

void type metadata accessor for SiriKitUIModel()
{
}

void type metadata accessor for SiriKitUIModel.ButtonInfo()
{
}

uint64_t destroy for SiriKitUIModel.LocationAccessCarPlayPromptModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SiriKitUIModel.LocationAccessCarPlayPromptModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    a1[6] = a2[6];
    a1[7] = v7;
    uint64_t v8 = a2[9];
    a1[8] = a2[8];
    a1[9] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v9;
  }
  uint64_t v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v11 = a2[12];
  uint64_t v12 = a2[13];
  a1[12] = v11;
  a1[13] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SiriKitUIModel.LocationAccessCarPlayPromptModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 6;
  uint64_t v5 = a2 + 6;
  uint64_t v6 = a2[7];
  if (a1[7])
  {
    if (v6)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      a1[9] = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C9AD62DC((uint64_t)(a1 + 6));
      long long v7 = *((_OWORD *)a2 + 4);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 4) = v7;
    }
  }
  else if (v6)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    a1[9] = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 4);
    *uint64_t v4 = *v5;
    *((_OWORD *)a1 + 4) = v8;
  }
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C9AD62DC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for SiriKitUIModel.LocationAccessCarPlayPromptModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 56);
  if (!v7)
  {
    sub_1C9AD62DC(a1 + 48);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    goto LABEL_6;
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriKitUIModel.LocationAccessCarPlayPromptModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SiriKitUIModel.LocationAccessCarPlayPromptModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for SiriKitUIModel.LocationAccessCarPlayPromptModel()
{
}

void type metadata accessor for SiriKitUIModel.SiriNeedsLocationAccessErrorModel()
{
}

ValueMetadata *type metadata accessor for SiriKitUIModel.CodingKeys()
{
  return &type metadata for SiriKitUIModel.CodingKeys;
}

ValueMetadata *type metadata accessor for SiriKitUIModel.LocationAccessCarPlayPromptCodingKeys()
{
  return &type metadata for SiriKitUIModel.LocationAccessCarPlayPromptCodingKeys;
}

unsigned char *_s11SiriKitFlow14SiriKitUIModelO37LocationAccessCarPlayPromptCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9AD654CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitUIModel.SiriNeedsLocationAccessErrorCodingKeys()
{
  return &type metadata for SiriKitUIModel.SiriNeedsLocationAccessErrorCodingKeys;
}

ValueMetadata *type metadata accessor for SiriKitUIModel.SiriNeedsLocationAccessErrorModel.CodingKeys()
{
  return &type metadata for SiriKitUIModel.SiriNeedsLocationAccessErrorModel.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SiriKitUIModel.LocationAccessCarPlayPromptModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AD6660);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitUIModel.LocationAccessCarPlayPromptModel.CodingKeys()
{
  return &type metadata for SiriKitUIModel.LocationAccessCarPlayPromptModel.CodingKeys;
}

unsigned char *_s11SiriKitFlow14SiriKitUIModelO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AD6764);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriKitUIModel.ButtonInfo.CodingKeys()
{
  return &type metadata for SiriKitUIModel.ButtonInfo.CodingKeys;
}

unint64_t sub_1C9AD67A0()
{
  unint64_t result = qword_1EA598FF0;
  if (!qword_1EA598FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FF0);
  }
  return result;
}

unint64_t sub_1C9AD67F0()
{
  unint64_t result = qword_1EA598FF8;
  if (!qword_1EA598FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA598FF8);
  }
  return result;
}

unint64_t sub_1C9AD6840()
{
  unint64_t result = qword_1EA599000;
  if (!qword_1EA599000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599000);
  }
  return result;
}

unint64_t sub_1C9AD6890()
{
  unint64_t result = qword_1EA599008;
  if (!qword_1EA599008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599008);
  }
  return result;
}

unint64_t sub_1C9AD68E0()
{
  unint64_t result = qword_1EA599010;
  if (!qword_1EA599010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599010);
  }
  return result;
}

unint64_t sub_1C9AD6930()
{
  unint64_t result = qword_1EA599018;
  if (!qword_1EA599018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599018);
  }
  return result;
}

unint64_t sub_1C9AD6980()
{
  unint64_t result = qword_1EA599020;
  if (!qword_1EA599020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599020);
  }
  return result;
}

unint64_t sub_1C9AD69D0()
{
  unint64_t result = qword_1EA599028;
  if (!qword_1EA599028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599028);
  }
  return result;
}

unint64_t sub_1C9AD6A20()
{
  unint64_t result = qword_1EA599030;
  if (!qword_1EA599030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599030);
  }
  return result;
}

unint64_t sub_1C9AD6A70()
{
  unint64_t result = qword_1EA599038;
  if (!qword_1EA599038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599038);
  }
  return result;
}

unint64_t sub_1C9AD6AC0()
{
  unint64_t result = qword_1EA599040;
  if (!qword_1EA599040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599040);
  }
  return result;
}

unint64_t sub_1C9AD6B10()
{
  unint64_t result = qword_1EA599048;
  if (!qword_1EA599048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599048);
  }
  return result;
}

unint64_t sub_1C9AD6B60()
{
  unint64_t result = qword_1EA599050;
  if (!qword_1EA599050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599050);
  }
  return result;
}

unint64_t sub_1C9AD6BB0()
{
  unint64_t result = qword_1EA599058;
  if (!qword_1EA599058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599058);
  }
  return result;
}

unint64_t sub_1C9AD6C00()
{
  unint64_t result = qword_1EA599060;
  if (!qword_1EA599060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599060);
  }
  return result;
}

unint64_t sub_1C9AD6C50()
{
  unint64_t result = qword_1EA599068;
  if (!qword_1EA599068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599068);
  }
  return result;
}

unint64_t sub_1C9AD6CA0()
{
  unint64_t result = qword_1EA599070;
  if (!qword_1EA599070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599070);
  }
  return result;
}

unint64_t sub_1C9AD6CF0()
{
  unint64_t result = qword_1EA599078;
  if (!qword_1EA599078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599078);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_91()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_3_95()
{
  return *(void *)(v0 - 248);
}

uint64_t OUTLINED_FUNCTION_7_73()
{
  return sub_1C9BEE4C8();
}

uint64_t OUTLINED_FUNCTION_8_76()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_9_72()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_10_70()
{
  return sub_1C9BEE568();
}

void OUTLINED_FUNCTION_11_74()
{
  uint64_t v1 = *(void *)(v0 - 232);
  *(void *)(v0 - 200) = *(void *)(v0 - 240);
  *(void *)(v0 - 192) = v1;
  uint64_t v2 = *(void *)(v0 - 216);
  *(void *)(v0 - 184) = *(void *)(v0 - 224);
  *(void *)(v0 - 176) = v2;
}

uint64_t OUTLINED_FUNCTION_12_68()
{
  return v0;
}

uint64_t sub_1C9AD6E38()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for SiriKitWaitToContinueFlow.State();
    if (v2 <= 0x3F)
    {
      uint64_t inited = swift_initClassMetadata2();
      if (inited) {
        return inited;
      }
      else {
        return 0;
      }
    }
  }
  return v0;
}

uint64_t sub_1C9AD6F2C(uint64_t a1, uint64_t a2, long long *a3, long long *a4)
{
  uint64_t v8 = swift_allocObject();
  sub_1C9AD75A4(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1C9AD6F94@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v2 = type metadata accessor for SiriKitWaitToContinueFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v8 = (char *)&v14 - v7;
  sub_1C9AD73F4((uint64_t)&v14 - v7);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 6)
  {
    uint64_t v11 = v8[8];
    *(void *)a1 = *(void *)v8;
    *(void *)(a1 + 8) = v11;
    char v10 = 1;
    goto LABEL_5;
  }
  if (result == 5)
  {
    char v10 = v8[16];
    *(_OWORD *)a1 = *(_OWORD *)v8;
LABEL_5:
    *(unsigned char *)(a1 + 16) = v10;
    return result;
  }
  type metadata accessor for SiriKitWaitToContinueFlow.WaitToContinueError();
  swift_getWitnessTable();
  uint64_t v12 = swift_allocError();
  sub_1C9AD73F4(v13);
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v2);
}

void sub_1C9AD7108()
{
  uint64_t v0 = type metadata accessor for SiriKitWaitToContinueFlow.State();
  MEMORY[0x1F4188790](v0, v1);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  sub_1C9BEC838();
}

uint64_t sub_1C9AD73F4@<X0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_62();
  uint64_t v4 = v1 + *(void *)(v3 + 120);
  swift_beginAccess();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_62();
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  OUTLINED_FUNCTION_112();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a1, v4);
}

void sub_1C9AD74A8()
{
  OUTLINED_FUNCTION_62();
  swift_beginAccess();
  OUTLINED_FUNCTION_62();
  OUTLINED_FUNCTION_62();
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  uint64_t v0 = OUTLINED_FUNCTION_20_62();
  v1(v0);
  swift_endAccess();
  sub_1C9AD7108();
}

uint64_t sub_1C9AD75A4(uint64_t a1, uint64_t a2, long long *a3, long long *a4)
{
  uint64_t v8 = *(void *)(a2 + 16);
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v9 + 32))();
  sub_1C95FD5D8(a3, v4 + *(void *)(*(void *)v4 + 104));
  OUTLINED_FUNCTION_74();
  sub_1C95FD5D8(a4, v4 + *(void *)(v10 + 112));
  OUTLINED_FUNCTION_74();
  uint64_t v12 = v4 + *(void *)(v11 + 120);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)a2;
  *(void *)(v12 + 16) = v8;
  OUTLINED_FUNCTION_19_51();
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  swift_storeEnumTagMultiPayload();
  return v4;
}

uint64_t sub_1C9AD76D0(uint64_t a1)
{
  OUTLINED_FUNCTION_8();
  uint64_t v3 = *(void *)(v2 + 80);
  OUTLINED_FUNCTION_8();
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v6 = type metadata accessor for SiriKitWaitToContinueFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (uint64_t *)((char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11, v14);
  char v16 = (uint64_t *)((char *)&v29 - v15);
  sub_1C9AD73F4((uint64_t)&v29 - v15);
  if (swift_getEnumCaseMultiPayload() - 1 > 1)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C9BECF88();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EBC7A520);
    swift_retain_n();
    uint64_t v22 = sub_1C9BECF78();
    os_log_type_t v23 = sub_1C9BEDC78();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v30 = v8;
      v31[0] = v25;
      *(_DWORD *)char v24 = 136315138;
      uint64_t v29 = v24 + 4;
      sub_1C9AD73F4((uint64_t)v13);
      OUTLINED_FUNCTION_20_62();
      uint64_t v26 = sub_1C9BED608();
      uint64_t v32 = sub_1C95FF228(v26, v27, v31);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1C95F9000, v22, v23, "SiriKitWaitToContinueFlow received input in an unexpected state: %s", v24, 0xCu);
      swift_arrayDestroy();
      uint64_t v8 = v30;
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v16, v6);
  }
  else
  {
    long long v18 = (void *)v16[1];
    long long v17 = (void *)v16[2];
    uint64_t v19 = *v16;
    v31[0] = v19;
    v31[1] = (uint64_t)v18;
    v31[2] = (uint64_t)v17;
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t))(v5 + 24))(&v32, a1, v31, v3, v5);
    if (!(_BYTE)v32)
    {
      *uint64_t v13 = v19;
      v13[1] = (uint64_t)v18;
      uint64_t v13[2] = (uint64_t)v17;
      OUTLINED_FUNCTION_20_62();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      sub_1C9AD74A8();
    }
    if (v32 == 1)
    {
      uint64_t v30 = type metadata accessor for Input(255);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      long long v20 = (uint64_t *)((char *)v13 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      sub_1C962C9D4(a1, (uint64_t)v13);
      *long long v20 = v19;
      v20[1] = (uint64_t)v18;
      long long v20[2] = (uint64_t)v17;
      OUTLINED_FUNCTION_20_62();
      goto LABEL_12;
    }
    swift_release();
  }
  return 0;
}

void sub_1C9AD7A98(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_8();
  uint64_t v4 = type metadata accessor for SiriKitWaitToContinueFlow();
  uint64_t WitnessTable = swift_getWitnessTable();
  Flow.deferToExecuteAsync(_:)(a1, a2, v4, WitnessTable);
}

uint64_t sub_1C9AD7B34()
{
  OUTLINED_FUNCTION_24();
  v1[20] = v2;
  v1[21] = v0;
  uint64_t v3 = *v0;
  v1[22] = type metadata accessor for Input(0);
  v1[23] = swift_task_alloc();
  v1[24] = *(void *)(v3 + 80);
  v1[25] = *(void *)(v3 + 88);
  uint64_t v4 = type metadata accessor for SiriKitWaitToContinueFlow.State();
  v1[26] = v4;
  v1[27] = *(void *)(v4 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9AD7C60()
{
  uint64_t v63 = v0;
  sub_1C9AD73F4(v0[29]);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_1C9BECF88();
      __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
      swift_retain_n();
      uint64_t v9 = sub_1C9BECF78();
      os_log_type_t v10 = sub_1C9BEDC88();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = v0[28];
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        v62[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 136315138;
        sub_1C9AD73F4(v11);
        uint64_t v13 = sub_1C9BED608();
        v0[18] = sub_1C95FF228(v13, v14, v62);
        sub_1C9BEDF68();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C95F9000, v9, v10, "SiriKitWaitToContinueFlow is in an unexpected state: %s", v12, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v57 = v0[28];
      type metadata accessor for SiriKitWaitToContinueFlow.WaitToContinueError();
      swift_getWitnessTable();
      uint64_t v58 = swift_allocError();
      sub_1C9AD73F4(v59);
      *(void *)uint64_t v57 = v58;
      *(unsigned char *)(v57 + 8) = 0;
      swift_storeEnumTagMultiPayload();
      sub_1C9AD74A8();
    case 2u:
      uint64_t v15 = v0[29];
      uint64_t v16 = v0[20];
      long long v17 = *(void **)(v15 + 8);

      swift_release();
      static ExecuteResponse.ongoing(requireInput:)(1, v16);
      goto LABEL_31;
    case 3u:
      uint64_t v18 = v0[29];
      uint64_t v19 = v0[23];
      OUTLINED_FUNCTION_18_57();
      OUTLINED_FUNCTION_18_57();
      type metadata accessor for IntentResolutionRecord();
      OUTLINED_FUNCTION_19_51();
      long long v20 = (uint64_t *)(v18 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      uint64_t v21 = *v20;
      v0[30] = *v20;
      uint64_t v22 = v20[1];
      v0[31] = v22;
      uint64_t v23 = v20[2];
      v0[32] = v23;
      sub_1C9729480(v18, v19);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1C9BECF88();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EBC7A520);
      uint64_t v25 = (void *)sub_1C9BECF78();
      os_log_type_t v26 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v26))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v27, v28, "SiriKitWaitToContinueFlow continuing with new input.");
        OUTLINED_FUNCTION_11_4();
      }

      v0[12] = v21;
      v0[13] = v22;
      v0[14] = v23;
      uint64_t v29 = (void *)swift_task_alloc();
      v0[33] = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_1C9AD858C;
      OUTLINED_FUNCTION_6_11();
      __asm { BRAA            X6, X16 }
      return result;
    case 4u:
      uint64_t v32 = (uint64_t *)v0[29];
      uint64_t v33 = *v32;
      v0[35] = *v32;
      uint64_t v34 = v32[1];
      v0[36] = v34;
      uint64_t v35 = v32[2];
      v0[37] = v35;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1C9BECF88();
      __swift_project_value_buffer(v36, (uint64_t)qword_1EBC7A520);
      uint64_t v37 = (void *)sub_1C9BECF78();
      os_log_type_t v38 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v38))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v39, v40, "SiriKitWaitToContinueFlow was cancelled while waiting. Publishing ConfirmIntentFlowStrategy's cancel response and exiting.");
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v41 = v0[21];

      __swift_project_boxed_opaque_existential_1((void *)(v41 + *(void *)(*(void *)v41 + 104)), *(void *)(v41 + *(void *)(*(void *)v41 + 104) + 24));
      uint64_t v42 = (void *)swift_task_alloc();
      v0[38] = v42;
      long long v42[2] = v41;
      v42[3] = v33;
      void v42[4] = v34;
      v42[5] = v35;
      uint64_t v43 = (void *)swift_task_alloc();
      v0[39] = v43;
      *uint64_t v43 = v0;
      v43[1] = sub_1C9AD8748;
      OUTLINED_FUNCTION_6_11();
      return sub_1C962F1B0(v44, v45, v46, v47, v48);
    case 5u:
      sub_1C97ABD08(*(id *)v0[29], *(void *)(v0[29] + 8), *(unsigned char *)(v0[29] + 16));
      goto LABEL_24;
    case 6u:

LABEL_24:
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C9BECF88();
      __swift_project_value_buffer(v51, (uint64_t)qword_1EBC7A520);
      long long v52 = (void *)sub_1C9BECF78();
      os_log_type_t v53 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_13(v53))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v54, v55, "SiriKitWaitToContinueFlow execution complete.");
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v56 = v0[20];

      static ExecuteResponse.complete()(v56);
LABEL_31:
      OUTLINED_FUNCTION_11_75();
      swift_task_dealloc();
      swift_task_dealloc();
      OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_6_11();
      __asm { BRAA            X1, X16 }
      return result;
    default:
      uint64_t v1 = (uint64_t *)v0[29];
      uint64_t v2 = v0[25];
      uint64_t v3 = v0[24];
      uint64_t v4 = (uint64_t *)v0[21];
      uint64_t v5 = v1[1];
      uint64_t v6 = v1[2];
      uint64_t v7 = *v4;
      v62[0] = *v1;
      v62[1] = v5;
      v62[2] = v6;
      sub_1C979F684((uint64_t)v62, (uint64_t)v4 + *(void *)(v7 + 112), v3, v2);
  }
}

uint64_t sub_1C9AD858C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  *(void *)(v4 + 272) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C9AD866C()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void **)(v0 + 128);
  *(void *)uint64_t v1 = *(unsigned __int8 *)(v0 + 120);
  *(void *)(v1 + 8) = v2;
  *(unsigned char *)(v1 + 16) = 0;
  swift_storeEnumTagMultiPayload();
  id v3 = v2;
  sub_1C9AD74A8();
}

uint64_t sub_1C9AD8748()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v3 + 320) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1C9AD883C()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void *)(v0 + 224);
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 2;
  swift_storeEnumTagMultiPayload();
  sub_1C9AD74A8();
}

void sub_1C9AD88FC()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v1 = *(void **)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 224);
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  id v3 = v1;
  sub_1C9AD74A8();
}

void sub_1C9AD89D8()
{
  uint64_t v1 = *(void **)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 224);
  swift_task_dealloc();
  *(void *)uint64_t v2 = v1;
  *(unsigned char *)(v2 + 8) = 0;
  swift_storeEnumTagMultiPayload();
  id v3 = v1;
  sub_1C9AD74A8();
}

void sub_1C9AD8ABC()
{
}

void sub_1C9AD8AFC(long long *a1)
{
  char v1 = *((unsigned char *)a1 + 16);
  long long v2 = *a1;
  char v3 = v1;
  sub_1C9AD8D94((uint64_t)&v2);
}

uint64_t sub_1C9AD8B3C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a2;
  v5[2] = a3;
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v8 = *(void *)(v7 + 88);
  uint64_t v9 = *(void *)(v7 + 80);
  uint64_t v12 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v8 + 72) + **(int **)(v8 + 72));
  uint64_t v10 = (void *)swift_task_alloc();
  v5[5] = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C9AD8C98;
  return v12(a1, v5 + 2, v9, v8);
}

uint64_t sub_1C9AD8C98()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *char v3 = v2;
  *(void *)(v4 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v5, v6, v7);
  }
  else
  {
    OUTLINED_FUNCTION_22_0();
    return v8();
  }
}

void sub_1C9AD8D94(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  OUTLINED_FUNCTION_19_51();
  uint64_t v39 = v5;
  uint64_t v6 = type metadata accessor for SiriKitWaitToContinueFlow.State();
  OUTLINED_FUNCTION_0_2();
  uint64_t v8 = v7;
  uint64_t v11 = MEMORY[0x1F4188790](v9, v10);
  uint64_t v13 = (uint64_t *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11, v14);
  uint64_t v16 = (uint64_t *)((char *)&v38 - v15);
  uint64_t v18 = *(void **)a1;
  long long v17 = *(void **)(a1 + 8);
  int v19 = *(unsigned __int8 *)(a1 + 16);
  sub_1C9AD73F4((uint64_t)&v38 - v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = *v16;
    uint64_t v21 = v16[1];
    uint64_t v22 = v16[2];
    if (!v19 && v18 != 2 && (v18 & 1) != 0)
    {
      uint64_t v39 = v21;
      uint64_t v23 = qword_1EBC7A3B8;
      id v24 = v17;
      if (v23 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C9BECF88();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
      os_log_type_t v26 = sub_1C9BECF78();
      os_log_type_t v27 = sub_1C9BEDC78();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl(&dword_1C95F9000, v26, v27, "SiriKitWaitToContinueFlow received a rejection from the ConfirmIntentFlow. Will transition to waiting to continue.", v28, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v29 = v39;
      *uint64_t v13 = v20;
      v13[1] = v29;
      uint64_t v13[2] = v22;
      OUTLINED_FUNCTION_85_7();
      swift_storeEnumTagMultiPayload();
      sub_1C9BEC838();
    }
    *uint64_t v13 = (uint64_t)v18;
    v13[1] = (uint64_t)v17;
    *((unsigned char *)v13 + 16) = v19;
    OUTLINED_FUNCTION_85_7();
    swift_storeEnumTagMultiPayload();
    sub_1C97AB650(v18, v17, v19);
    sub_1C9AD74A8();
  }
  (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v16, v6);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C9BECF88();
  __swift_project_value_buffer(v30, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v31 = sub_1C9BECF78();
  os_log_type_t v32 = sub_1C9BEDC88();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315138;
    uint64_t v38 = v4;
    sub_1C9AD73F4((uint64_t)v13);
    OUTLINED_FUNCTION_85_7();
    uint64_t v34 = sub_1C9BED608();
    uint64_t v40 = sub_1C95FF228(v34, v35, &v41);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C95F9000, v31, v32, "SiriKitWaitToContinueFlow is in an unexpected state: %s", v33, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    swift_release_n();
  }

  OUTLINED_FUNCTION_19_51();
  type metadata accessor for SiriKitWaitToContinueFlow.WaitToContinueError();
  swift_getWitnessTable();
  uint64_t v36 = swift_allocError();
  sub_1C9AD73F4(v37);
  *uint64_t v13 = v36;
  *((unsigned char *)v13 + 8) = 0;
  OUTLINED_FUNCTION_85_7();
  swift_storeEnumTagMultiPayload();
  sub_1C9AD74A8();
}

unint64_t sub_1C9AD9200(uint64_t a1)
{
  MEMORY[0x1F4188790](a1, v1);
  char v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = (void *)*((void *)v3 + 1);

      swift_release();
      unint64_t v6 = 0xD000000000000017;
      break;
    case 2u:
      unint64_t v6 = 0xD000000000000012;
      uint64_t v8 = (void *)*((void *)v3 + 1);

      swift_release();
      break;
    case 3u:
      unint64_t v6 = 0xD000000000000012;
      type metadata accessor for Input(255);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v9 = &v3[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v10 = (void *)*((void *)v9 + 1);

      swift_release();
      sub_1C9706570((uint64_t)v3);
      break;
    case 4u:
      uint64_t v11 = (void *)*((void *)v3 + 1);

      swift_release();
      unint64_t v6 = 0xD00000000000001CLL;
      break;
    case 5u:
      sub_1C97ABD08(*(id *)v3, *((void *)v3 + 1), v3[16]);
      unint64_t v6 = 0x74656C706D6F632ELL;
      break;
    case 6u:
      id v12 = *(id *)v3;
      uint64_t v15 = 0x28726F7272652ELL;
      unint64_t v16 = 0xE700000000000000;
      swift_getErrorValue();
      sub_1C9BEE6E8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();

      unint64_t v6 = v15;
      break;
    default:
      uint64_t v5 = (void *)*((void *)v3 + 1);

      swift_release();
      unint64_t v6 = 0x646574726174732ELL;
      break;
  }
  return v6;
}

uint64_t sub_1C9AD9570()
{
  OUTLINED_FUNCTION_112();
  (*(void (**)(void))(v1 + 8))();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(*(void *)v0 + 104));
  OUTLINED_FUNCTION_74();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(void *)(v2 + 112));
  OUTLINED_FUNCTION_74();
  uint64_t v4 = v0 + *(void *)(v3 + 120);
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  OUTLINED_FUNCTION_112();
  (*(void (**)(uint64_t))(v5 + 8))(v4);
  return v0;
}

uint64_t sub_1C9AD9684()
{
  sub_1C9AD9570();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriKitWaitToContinueFlow()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for SiriKitWaitToContinueFlow.State()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9AD970C()
{
  uint64_t v3 = &unk_1C9C0E388;
  uint64_t v4 = &unk_1C9C0E388;
  uint64_t v5 = &unk_1C9C0E388;
  uint64_t result = type metadata accessor for Input(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    unint64_t v6 = &v2;
    uint64_t v7 = &unk_1C9C0E388;
    uint64_t v8 = &unk_1C9C0E3A0;
    uint64_t v9 = &unk_1C9C0E3B8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C9AD97D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      sub_1C9BEC838();
    case 2u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      sub_1C9BEC838();
    case 3u:
      uint64_t v8 = sub_1C9BEAB08();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for Input(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      id v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v14 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
          goto LABEL_34;
        case 1u:
          uint64_t v21 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v11, v12, v21);
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)((char *)v11 + *(int *)(v22 + 48)) = *(void *)((char *)v12 + *(int *)(v22 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v23 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v23;
          v11[2] = v12[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 3u:
          *uint64_t v11 = *v12;
          swift_unknownObjectRetain();
          goto LABEL_34;
        case 4u:
          uint64_t v24 = sub_1C9BEAC48();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
          goto LABEL_34;
        case 5u:
          uint64_t v25 = (void *)*v12;
          *uint64_t v11 = *v12;
          id v26 = v25;
          goto LABEL_34;
        case 6u:
          uint64_t v27 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v11, v12, v27);
          uint64_t v28 = (int *)type metadata accessor for USOParse();
          uint64_t v29 = v28[5];
          unint64_t __dst = (char *)v11 + v29;
          uint64_t v30 = (char *)v12 + v29;
          uint64_t v31 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
          {
            uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v30, *(void *)(*(void *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v30, v31);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v31);
          }
          uint64_t v51 = v28[6];
          long long v52 = (void *)((char *)v11 + v51);
          os_log_type_t v53 = (void *)((char *)v12 + v51);
          uint64_t v54 = v53[1];
          *long long v52 = *v53;
          v52[1] = v54;
          uint64_t v55 = v28[7];
          uint64_t v56 = (char *)v11 + v55;
          uint64_t v57 = (char *)v12 + v55;
          v56[4] = v57[4];
          *(_DWORD *)uint64_t v56 = *(_DWORD *)v57;
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 7u:
          uint64_t v33 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v11, v12, v33);
          uint64_t v34 = (int *)type metadata accessor for USOParse();
          uint64_t v35 = v34[5];
          unint64_t __dsta = (char *)v11 + v35;
          uint64_t v36 = (char *)v12 + v35;
          uint64_t v37 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
          {
            uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, v36, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(__dsta, v36, v37);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v37);
          }
          uint64_t v58 = v34[6];
          uint64_t v59 = (void *)((char *)v11 + v58);
          uint64_t v60 = (void *)((char *)v12 + v58);
          uint64_t v61 = v60[1];
          *uint64_t v59 = *v60;
          v59[1] = v61;
          uint64_t v62 = v34[7];
          uint64_t v63 = (char *)v11 + v62;
          uint64_t v64 = (char *)v12 + v62;
          v63[4] = v64[4];
          *(_DWORD *)uint64_t v63 = *(_DWORD *)v64;
          long long v65 = (int *)type metadata accessor for LinkParse();
          uint64_t v66 = v65[5];
          uint64_t v67 = (void *)((char *)v11 + v66);
          uint64_t v68 = (void *)((char *)v12 + v66);
          uint64_t v69 = v68[1];
          *uint64_t v67 = *v68;
          v67[1] = v69;
          uint64_t v70 = v65[6];
          uint64_t v71 = (void *)((char *)v11 + v70);
          uint64_t v72 = (void *)((char *)v12 + v70);
          uint64_t v73 = v72[1];
          *uint64_t v71 = *v72;
          v71[1] = v73;
          uint64_t v74 = v65[7];
          uint64_t v75 = (void *)((char *)v11 + v74);
          uint64_t v76 = (void *)((char *)v12 + v74);
          uint64_t v77 = v76[1];
          *uint64_t v75 = *v76;
          v75[1] = v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 8u:
          uint64_t v39 = sub_1C9BEC928();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v11, v12, v39);
          uint64_t v40 = type metadata accessor for NLRouterParse();
          uint64_t v41 = *(int *)(v40 + 20);
          uint64_t v42 = (void *)((char *)v11 + v41);
          uint64_t v43 = (void *)((char *)v12 + v41);
          uint64_t v44 = v43[1];
          *uint64_t v42 = *v43;
          v42[1] = v44;
          __dstb = (int *)v40;
          uint64_t v45 = *(int *)(v40 + 24);
          uint64_t v46 = (char *)v11 + v45;
          uint64_t v47 = (char *)v12 + v45;
          uint64_t v48 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          uint64_t v108 = v48;
          if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
          {
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            uint64_t v78 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v46, v47, v78);
            uint64_t v79 = *(int *)(v48 + 20);
            uint64_t v107 = &v46[v79];
            uint64_t v80 = &v47[v79];
            uint64_t v81 = sub_1C9BEAE48();
            uint64_t v106 = v80;
            uint64_t v82 = (uint64_t)v80;
            uint64_t v83 = v81;
            if (__swift_getEnumTagSinglePayload(v82, 1, v81))
            {
              uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v107, v106, *(void *)(*(void *)(v84 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v107, v106, v83);
              __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v83);
            }
            uint64_t v85 = *(int *)(v108 + 24);
            uint64_t v86 = &v46[v85];
            uint64_t v87 = &v47[v85];
            uint64_t v88 = *((void *)v87 + 1);
            *(void *)uint64_t v86 = *(void *)v87;
            *((void *)v86 + 1) = v88;
            uint64_t v89 = *(int *)(v108 + 28);
            uint64_t v90 = &v46[v89];
            uint64_t v91 = &v47[v89];
            v90[4] = v91[4];
            *(_DWORD *)uint64_t v90 = *(_DWORD *)v91;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v108);
          }
          uint64_t v92 = __dstb[7];
          uint64_t v93 = *(void **)((char *)v12 + v92);
          *(void *)((char *)v11 + v92) = v93;
          id v94 = v93;
          goto LABEL_34;
        case 9u:
          uint64_t v50 = sub_1C9BEC8F8();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v11, v12, v50);
LABEL_34:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
      *(uint64_t *)((char *)a1 + v9[6]) = *(uint64_t *)((char *)a2 + v9[6]);
      uint64_t v95 = v9[7];
      uint64_t v96 = (char *)a1 + v95;
      uint64_t v97 = (uint64_t)a2 + v95;
      uint64_t v98 = *(uint64_t *)((char *)a2 + v95 + 24);
      swift_bridgeObjectRetain();
      if (v98)
      {
        uint64_t v99 = *(void *)(v97 + 32);
        *((void *)v96 + 3) = v98;
        *((void *)v96 + 4) = v99;
        (**(void (***)(char *, uint64_t, uint64_t))(v98 - 8))(v96, v97, v98);
      }
      else
      {
        long long v100 = *(_OWORD *)(v97 + 16);
        *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + 1) = v100;
        *((void *)v96 + 4) = *(void *)(v97 + 32);
      }
      *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v101 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v102 = (uint64_t *)((char *)a1 + v101);
      uint64_t v103 = (uint64_t *)((char *)a2 + v101);
      uint64_t v104 = v103[1];
      *uint64_t v102 = *v103;
      v102[1] = v104;
      v102[2] = v103[2];
      sub_1C9BEC838();
    case 4u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      a1[2] = a2[2];
      sub_1C9BEC838();
    case 5u:
      unint64_t v16 = (void *)*a2;
      long long v17 = (void *)a2[1];
      char v18 = *((unsigned char *)a2 + 16);
      sub_1C97AB650(v16, v17, v18);
      *a1 = (uint64_t)v16;
      a1[1] = (uint64_t)v17;
      *((unsigned char *)a1 + 16) = v18;
      break;
    case 6u:
      uint64_t v19 = *a2;
      id v20 = (id)*a2;
      *a1 = v19;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      break;
    default:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      a1[2] = a2[2];
      sub_1C9BEC838();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_1C9ADA26C(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      goto LABEL_2;
    case 3u:
      uint64_t v3 = sub_1C9BEAB08();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = type metadata accessor for Input(0);
      uint64_t v5 = (void **)(a1 + *(int *)(v4 + 20));
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v6 = sub_1C9BEC028();
          goto LABEL_32;
        case 1u:
          uint64_t v10 = sub_1C9BEC028();
          (*(void (**)(void **, uint64_t))(*(void *)(v10 - 8) + 8))(v5, v10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          uint64_t v6 = sub_1C9BEAC48();
          goto LABEL_32;
        case 5u:
          uint64_t v11 = *v5;
          goto LABEL_30;
        case 6u:
          uint64_t v12 = sub_1C9BEAF18();
          (*(void (**)(void **, uint64_t))(*(void *)(v12 - 8) + 8))(v5, v12);
          uint64_t v13 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v14 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v13, 1, v14)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          }
          goto LABEL_24;
        case 7u:
          uint64_t v15 = sub_1C9BEAF18();
          (*(void (**)(void **, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
          uint64_t v16 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v17 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v16, 1, v17)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          }
          swift_bridgeObjectRelease();
          type metadata accessor for LinkParse();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_24:
          swift_bridgeObjectRelease();
          break;
        case 8u:
          uint64_t v18 = sub_1C9BEC928();
          (*(void (**)(void **, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
          uint64_t v19 = type metadata accessor for NLRouterParse();
          swift_bridgeObjectRelease();
          uint64_t v20 = (uint64_t)v5 + *(int *)(v19 + 24);
          uint64_t v21 = type metadata accessor for USOParse();
          if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
          {
            uint64_t v22 = sub_1C9BEAF18();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
            uint64_t v23 = v20 + *(int *)(v21 + 20);
            uint64_t v24 = sub_1C9BEAE48();
            if (!__swift_getEnumTagSinglePayload(v23, 1, v24)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v11 = *(void **)((char *)v5 + *(int *)(v19 + 28));
LABEL_30:

          break;
        case 9u:
          uint64_t v6 = sub_1C9BEC8F8();
LABEL_32:
          (*(void (**)(void **, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = a1 + *(int *)(v4 + 28);
      if (*(void *)(v25 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(v25);
      }
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      a1 += *(int *)(swift_getTupleTypeMetadata2() + 48);
LABEL_2:
      swift_release();

      char v2 = *(void **)(a1 + 16);
      goto LABEL_4;
    case 5u:
      uint64_t v7 = *(void **)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      char v9 = *(unsigned char *)(a1 + 16);
      sub_1C97ABD08(v7, v8, v9);
      return;
    case 6u:
      char v2 = *(void **)a1;
LABEL_4:

      break;
    default:
      return;
  }
}

uint64_t sub_1C9ADA874(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      uint64_t v6 = sub_1C9BEAB08();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Input(0);
      uint64_t v8 = v7[5];
      char v9 = (void *)(a1 + v8);
      uint64_t v10 = (void *)(a2 + v8);
      uint64_t v11 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
          goto LABEL_30;
        case 1u:
          uint64_t v18 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v9, v10, v18);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)((char *)v9 + *(int *)(v19 + 48)) = *(void *)((char *)v10 + *(int *)(v19 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v20 = v10[1];
          *char v9 = *v10;
          v9[1] = v20;
          v9[2] = v10[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_30;
        case 3u:
          *char v9 = *v10;
          swift_unknownObjectRetain();
          goto LABEL_30;
        case 4u:
          uint64_t v21 = sub_1C9BEAC48();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v9, v10, v21);
          goto LABEL_30;
        case 5u:
          uint64_t v22 = (void *)*v10;
          *char v9 = *v10;
          id v23 = v22;
          goto LABEL_30;
        case 6u:
          uint64_t v24 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
          uint64_t v25 = type metadata accessor for USOParse();
          uint64_t v26 = *(int *)(v25 + 20);
          uint64_t v102 = v25;
          unint64_t __dst = (char *)v9 + v26;
          uint64_t v27 = (char *)v10 + v26;
          uint64_t v28 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
          {
            uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v27, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(__dst, v27, v28);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
          }
          uint64_t v48 = *(int *)(v102 + 24);
          uint64_t v49 = (void *)((char *)v9 + v48);
          uint64_t v50 = (void *)((char *)v10 + v48);
          uint64_t v51 = v50[1];
          *uint64_t v49 = *v50;
          v49[1] = v51;
          uint64_t v52 = *(int *)(v102 + 28);
          os_log_type_t v53 = (char *)v9 + v52;
          uint64_t v54 = (char *)v10 + v52;
          v53[4] = v54[4];
          *(_DWORD *)os_log_type_t v53 = *(_DWORD *)v54;
          swift_bridgeObjectRetain();
          goto LABEL_30;
        case 7u:
          uint64_t v30 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v9, v10, v30);
          uint64_t v31 = type metadata accessor for USOParse();
          uint64_t v32 = *(int *)(v31 + 20);
          uint64_t v103 = v31;
          unint64_t __dsta = (char *)v9 + v32;
          uint64_t v33 = (char *)v10 + v32;
          uint64_t v34 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
          {
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, v33, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(__dsta, v33, v34);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v34);
          }
          uint64_t v55 = *(int *)(v103 + 24);
          uint64_t v56 = (void *)((char *)v9 + v55);
          uint64_t v57 = (void *)((char *)v10 + v55);
          __dstc = (void *)v57[1];
          *uint64_t v56 = *v57;
          v56[1] = __dstc;
          uint64_t v58 = *(int *)(v103 + 28);
          uint64_t v59 = (char *)v9 + v58;
          uint64_t v60 = (char *)v10 + v58;
          v59[4] = v60[4];
          *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
          uint64_t v61 = (int *)type metadata accessor for LinkParse();
          uint64_t v62 = v61[5];
          uint64_t v63 = (void *)((char *)v9 + v62);
          uint64_t v64 = (void *)((char *)v10 + v62);
          uint64_t v65 = v64[1];
          *uint64_t v63 = *v64;
          v63[1] = v65;
          uint64_t v66 = v61[6];
          uint64_t v67 = (void *)((char *)v9 + v66);
          uint64_t v68 = (void *)((char *)v10 + v66);
          uint64_t v69 = v68[1];
          *uint64_t v67 = *v68;
          v67[1] = v69;
          uint64_t v70 = v61[7];
          uint64_t v71 = (void *)((char *)v9 + v70);
          uint64_t v72 = (void *)((char *)v10 + v70);
          uint64_t v73 = v72[1];
          *uint64_t v71 = *v72;
          v71[1] = v73;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_30;
        case 8u:
          uint64_t v36 = sub_1C9BEC928();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v9, v10, v36);
          uint64_t v37 = type metadata accessor for NLRouterParse();
          uint64_t v38 = *(int *)(v37 + 20);
          uint64_t v39 = (void *)((char *)v9 + v38);
          uint64_t v40 = (void *)((char *)v10 + v38);
          uint64_t v41 = v40[1];
          *uint64_t v39 = *v40;
          v39[1] = v41;
          uint64_t v42 = *(int *)(v37 + 24);
          uint64_t v104 = v37;
          __dstb = (char *)v9 + v42;
          uint64_t v43 = (char *)v10 + v42;
          uint64_t v44 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          if (__swift_getEnumTagSinglePayload((uint64_t)v43, 1, v44))
          {
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v43, *(void *)(*(void *)(v45 - 8) + 64));
            uint64_t v46 = v104;
          }
          else
          {
            uint64_t v74 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(__dstb, v43, v74);
            uint64_t v75 = *(int *)(v44 + 20);
            long long v100 = &__dstb[v75];
            uint64_t v101 = v44;
            uint64_t v76 = &v43[v75];
            uint64_t v98 = sub_1C9BEAE48();
            uint64_t v99 = v43;
            if (__swift_getEnumTagSinglePayload((uint64_t)v76, 1, v98))
            {
              uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v100, v76, *(void *)(*(void *)(v77 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v100, v76, v98);
              __swift_storeEnumTagSinglePayload((uint64_t)v100, 0, 1, v98);
            }
            uint64_t v46 = v104;
            uint64_t v78 = *(int *)(v101 + 24);
            uint64_t v79 = &__dstb[v78];
            uint64_t v80 = &v99[v78];
            uint64_t v81 = *((void *)v80 + 1);
            *(void *)uint64_t v79 = *(void *)v80;
            *((void *)v79 + 1) = v81;
            uint64_t v82 = *(int *)(v101 + 28);
            uint64_t v83 = &__dstb[v82];
            uint64_t v84 = &v99[v82];
            v83[4] = v84[4];
            *(_DWORD *)uint64_t v83 = *(_DWORD *)v84;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v101);
          }
          uint64_t v85 = *(int *)(v46 + 28);
          uint64_t v86 = *(void **)((char *)v10 + v85);
          *(void *)((char *)v9 + v85) = v86;
          id v87 = v86;
          goto LABEL_30;
        case 9u:
          uint64_t v47 = sub_1C9BEC8F8();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v9, v10, v47);
LABEL_30:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
      uint64_t v88 = v7[7];
      uint64_t v89 = a1 + v88;
      uint64_t v90 = a2 + v88;
      uint64_t v91 = *(void *)(a2 + v88 + 24);
      swift_bridgeObjectRetain();
      if (v91)
      {
        uint64_t v92 = *(void *)(v90 + 32);
        *(void *)(v89 + 24) = v91;
        *(void *)(v89 + 32) = v92;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v91 - 8))(v89, v90, v91);
      }
      else
      {
        long long v93 = *(_OWORD *)(v90 + 16);
        *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
        *(_OWORD *)(v89 + 16) = v93;
        *(void *)(v89 + 32) = *(void *)(v90 + 32);
      }
      *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v94 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v95 = (void *)(a1 + v94);
      uint64_t v96 = (void *)(a2 + v94);
      uint64_t v97 = v96[1];
      *uint64_t v95 = *v96;
      v95[1] = v97;
      v95[2] = v96[2];
      sub_1C9BEC838();
    case 5u:
      id v13 = *(id *)a2;
      uint64_t v14 = *(void **)(a2 + 8);
      char v15 = *(unsigned char *)(a2 + 16);
      sub_1C97AB650(v13, v14, v15);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(unsigned char *)(a1 + 16) = v15;
      break;
    case 6u:
      id v16 = *(id *)a2;
      id v17 = *(id *)a2;
      *(void *)a1 = v16;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_1C9BEC838();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1C9ADB22C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 3u:
        uint64_t v5 = sub_1C9BEAB08();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        uint64_t v6 = (int *)type metadata accessor for Input(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = (uint64_t *)((char *)a1 + v7);
        char v9 = (uint64_t *)((char *)a2 + v7);
        uint64_t v10 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v11 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
            goto LABEL_33;
          case 1u:
            uint64_t v17 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v9, v17);
            uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)((char *)v8 + *(int *)(v18 + 48)) = *(void *)((char *)v9 + *(int *)(v18 + 48));
            sub_1C9BEC838();
          case 2u:
            *uint64_t v8 = *v9;
            v8[1] = v9[1];
            v8[2] = v9[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 3u:
            *uint64_t v8 = *v9;
            swift_unknownObjectRetain();
            goto LABEL_33;
          case 4u:
            uint64_t v19 = sub_1C9BEAC48();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v9, v19);
            goto LABEL_33;
          case 5u:
            uint64_t v20 = (void *)*v9;
            *uint64_t v8 = *v9;
            id v21 = v20;
            goto LABEL_33;
          case 6u:
            uint64_t v22 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v8, v9, v22);
            id v23 = (int *)type metadata accessor for USOParse();
            uint64_t v24 = v23[5];
            unint64_t __dst = (char *)v8 + v24;
            uint64_t v25 = (char *)v9 + v24;
            uint64_t v26 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
            {
              uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, v25, *(void *)(*(void *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v25, v26);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v26);
            }
            uint64_t v45 = v23[6];
            uint64_t v46 = (void *)((char *)v8 + v45);
            uint64_t v47 = (void *)((char *)v9 + v45);
            *uint64_t v46 = *v47;
            v46[1] = v47[1];
            uint64_t v48 = v23[7];
            uint64_t v49 = (char *)v8 + v48;
            uint64_t v50 = (char *)v9 + v48;
            int v51 = *(_DWORD *)v50;
            v49[4] = v50[4];
            *(_DWORD *)uint64_t v49 = v51;
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 7u:
            uint64_t v28 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v8, v9, v28);
            uint64_t v29 = (int *)type metadata accessor for USOParse();
            uint64_t v30 = v29[5];
            unint64_t __dsta = (char *)v8 + v30;
            uint64_t v31 = (char *)v9 + v30;
            uint64_t v32 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
            {
              uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dsta, v31, *(void *)(*(void *)(v33 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(__dsta, v31, v32);
              __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v32);
            }
            uint64_t v52 = v29[6];
            os_log_type_t v53 = (void *)((char *)v8 + v52);
            uint64_t v54 = (void *)((char *)v9 + v52);
            *os_log_type_t v53 = *v54;
            v53[1] = v54[1];
            uint64_t v55 = v29[7];
            uint64_t v56 = (char *)v8 + v55;
            uint64_t v57 = (char *)v9 + v55;
            int v58 = *(_DWORD *)v57;
            v56[4] = v57[4];
            *(_DWORD *)uint64_t v56 = v58;
            uint64_t v59 = (int *)type metadata accessor for LinkParse();
            uint64_t v60 = v59[5];
            uint64_t v61 = (void *)((char *)v8 + v60);
            uint64_t v62 = (void *)((char *)v9 + v60);
            *uint64_t v61 = *v62;
            v61[1] = v62[1];
            uint64_t v63 = v59[6];
            uint64_t v64 = (void *)((char *)v8 + v63);
            uint64_t v65 = (void *)((char *)v9 + v63);
            void *v64 = *v65;
            v64[1] = v65[1];
            uint64_t v66 = v59[7];
            uint64_t v67 = (void *)((char *)v8 + v66);
            uint64_t v68 = (void *)((char *)v9 + v66);
            *uint64_t v67 = *v68;
            v67[1] = v68[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 8u:
            uint64_t v34 = sub_1C9BEC928();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v8, v9, v34);
            uint64_t v35 = type metadata accessor for NLRouterParse();
            uint64_t v36 = *(int *)(v35 + 20);
            uint64_t v37 = (void *)((char *)v8 + v36);
            uint64_t v38 = (void *)((char *)v9 + v36);
            *uint64_t v37 = *v38;
            v37[1] = v38[1];
            __dstb = (int *)v35;
            uint64_t v39 = *(int *)(v35 + 24);
            uint64_t v40 = (char *)v8 + v39;
            uint64_t v41 = (char *)v9 + v39;
            uint64_t v42 = type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            uint64_t v98 = v42;
            if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
            {
              uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
            }
            else
            {
              uint64_t v69 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v40, v41, v69);
              uint64_t v70 = *(int *)(v42 + 20);
              uint64_t v97 = &v40[v70];
              uint64_t v71 = &v41[v70];
              uint64_t v72 = sub_1C9BEAE48();
              uint64_t v96 = v71;
              uint64_t v73 = (uint64_t)v71;
              uint64_t v74 = v72;
              if (__swift_getEnumTagSinglePayload(v73, 1, v72))
              {
                uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v97, v96, *(void *)(*(void *)(v75 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v97, v96, v74);
                __swift_storeEnumTagSinglePayload((uint64_t)v97, 0, 1, v74);
              }
              uint64_t v76 = *(int *)(v98 + 24);
              uint64_t v77 = &v40[v76];
              uint64_t v78 = &v41[v76];
              *(void *)uint64_t v77 = *(void *)v78;
              *((void *)v77 + 1) = *((void *)v78 + 1);
              uint64_t v79 = *(int *)(v98 + 28);
              uint64_t v80 = &v40[v79];
              uint64_t v81 = &v41[v79];
              int v82 = *(_DWORD *)v81;
              v80[4] = v81[4];
              *(_DWORD *)uint64_t v80 = v82;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)v40, 0, 1, v98);
            }
            uint64_t v83 = __dstb[7];
            uint64_t v84 = *(void **)((char *)v9 + v83);
            *(void *)((char *)v8 + v83) = v84;
            id v85 = v84;
            goto LABEL_33;
          case 9u:
            uint64_t v44 = sub_1C9BEC8F8();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v8, v9, v44);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
        uint64_t v86 = v6[7];
        id v87 = (char *)a1 + v86;
        uint64_t v88 = (long long *)((char *)a2 + v86);
        uint64_t v89 = *(uint64_t *)((char *)a2 + v86 + 24);
        swift_bridgeObjectRetain();
        if (v89)
        {
          *((void *)v87 + 3) = v89;
          *((void *)v87 + 4) = *((void *)v88 + 4);
          (**(void (***)(char *, long long *, uint64_t))(v89 - 8))(v87, v88, v89);
        }
        else
        {
          long long v90 = *v88;
          long long v91 = v88[1];
          *((void *)v87 + 4) = *((void *)v88 + 4);
          *(_OWORD *)id v87 = v90;
          *((_OWORD *)v87 + 1) = v91;
        }
        *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        type metadata accessor for IntentResolutionRecord();
        uint64_t v92 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        long long v93 = (uint64_t *)((char *)a1 + v92);
        uint64_t v94 = (uint64_t *)((char *)a2 + v92);
        *long long v93 = *v94;
        v93[1] = v94[1];
        v93[2] = v94[2];
        sub_1C9BEC838();
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 5u:
        uint64_t v12 = (void *)*a2;
        id v13 = (void *)a2[1];
        char v14 = *((unsigned char *)a2 + 16);
        sub_1C97AB650(v12, v13, v14);
        *a1 = (uint64_t)v12;
        a1[1] = (uint64_t)v13;
        *((unsigned char *)a1 + 16) = v14;
        break;
      case 6u:
        uint64_t v15 = *a2;
        id v16 = (id)*a2;
        *a1 = v15;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_1C9ADBD1C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_1C9BEAB08();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for Input(0);
    uint64_t v8 = v7[5];
    char v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        goto LABEL_24;
      case 1u:
        uint64_t v13 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v9[*(int *)(v14 + 48)] = *(void *)&v10[*(int *)(v14 + 48)];
        goto LABEL_24;
      case 4u:
        uint64_t v15 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
        goto LABEL_24;
      case 6u:
        uint64_t v16 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
        uint64_t v17 = (int *)type metadata accessor for USOParse();
        uint64_t v18 = v17[5];
        unint64_t __dst = &v9[v18];
        uint64_t v19 = &v10[v18];
        uint64_t v20 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
        {
          uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(__dst, v19, v20);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v20);
        }
        *(_OWORD *)&v9[v17[6]] = *(_OWORD *)&v10[v17[6]];
        uint64_t v36 = v17[7];
        uint64_t v37 = &v9[v36];
        uint64_t v38 = &v10[v36];
        v37[4] = v38[4];
        *(_DWORD *)uint64_t v37 = *(_DWORD *)v38;
        goto LABEL_24;
      case 7u:
        uint64_t v22 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v9, v10, v22);
        id v23 = (int *)type metadata accessor for USOParse();
        uint64_t v24 = v23[5];
        unint64_t __dsta = &v9[v24];
        uint64_t v25 = &v10[v24];
        uint64_t v26 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, v25, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(__dsta, v25, v26);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v26);
        }
        *(_OWORD *)&v9[v23[6]] = *(_OWORD *)&v10[v23[6]];
        uint64_t v39 = v23[7];
        uint64_t v40 = &v9[v39];
        uint64_t v41 = &v10[v39];
        v40[4] = v41[4];
        *(_DWORD *)uint64_t v40 = *(_DWORD *)v41;
        uint64_t v42 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v9[v42[5]] = *(_OWORD *)&v10[v42[5]];
        *(_OWORD *)&v9[v42[6]] = *(_OWORD *)&v10[v42[6]];
        *(_OWORD *)&v9[v42[7]] = *(_OWORD *)&v10[v42[7]];
        goto LABEL_24;
      case 8u:
        uint64_t v28 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v9, v10, v28);
        uint64_t v29 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v9[*(int *)(v29 + 20)] = *(_OWORD *)&v10[*(int *)(v29 + 20)];
        __dstb = (int *)v29;
        uint64_t v30 = *(int *)(v29 + 24);
        uint64_t v31 = &v9[v30];
        uint64_t v32 = &v10[v30];
        uint64_t v33 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, (uint64_t)v33))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v31, v32, v43);
          uint64_t v44 = v33[5];
          uint64_t v61 = (uint64_t)v31;
          uint64_t v63 = &v31[v44];
          uint64_t v45 = &v32[v44];
          uint64_t v46 = sub_1C9BEAE48();
          uint64_t v62 = v45;
          uint64_t v47 = (uint64_t)v45;
          uint64_t v48 = v46;
          if (__swift_getEnumTagSinglePayload(v47, 1, v46))
          {
            uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v63, v62, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v63, v62, v48);
            __swift_storeEnumTagSinglePayload((uint64_t)v63, 0, 1, v48);
          }
          *(_OWORD *)(v61 + v33[6]) = *(_OWORD *)&v32[v33[6]];
          uint64_t v50 = v33[7];
          uint64_t v51 = v61 + v50;
          uint64_t v52 = &v32[v50];
          *(unsigned char *)(v51 + 4) = v52[4];
          *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
          __swift_storeEnumTagSinglePayload(v61, 0, 1, (uint64_t)v33);
        }
        *(void *)&v9[__dstb[7]] = *(void *)&v10[__dstb[7]];
        goto LABEL_24;
      case 9u:
        uint64_t v35 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v9, v10, v35);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
    *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
    uint64_t v53 = v7[7];
    uint64_t v54 = &a1[v53];
    uint64_t v55 = &a2[v53];
    long long v56 = *((_OWORD *)v55 + 1);
    *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
    *((_OWORD *)v54 + 1) = v56;
    *((void *)v54 + 4) = *((void *)v55 + 4);
    a1[v7[8]] = a2[v7[8]];
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    type metadata accessor for IntentResolutionRecord();
    uint64_t v57 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    int v58 = &a1[v57];
    uint64_t v59 = &a2[v57];
    *(_OWORD *)int v58 = *(_OWORD *)v59;
    *((void *)v58 + 2) = *((void *)v59 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1C9ADC510(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 - 8);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_1C9BEAB08();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Input(0);
      uint64_t v8 = v7[5];
      char v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
          goto LABEL_25;
        case 1u:
          uint64_t v13 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v9[*(int *)(v14 + 48)] = *(void *)&v10[*(int *)(v14 + 48)];
          goto LABEL_25;
        case 4u:
          uint64_t v15 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
          goto LABEL_25;
        case 6u:
          uint64_t v16 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
          uint64_t v17 = (int *)type metadata accessor for USOParse();
          uint64_t v18 = v17[5];
          unint64_t __dst = &v9[v18];
          uint64_t v19 = &v10[v18];
          uint64_t v20 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
          {
            uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, v19, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(__dst, v19, v20);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v20);
          }
          *(_OWORD *)&v9[v17[6]] = *(_OWORD *)&v10[v17[6]];
          uint64_t v37 = v17[7];
          uint64_t v38 = &v9[v37];
          uint64_t v39 = &v10[v37];
          v38[4] = v39[4];
          *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
          goto LABEL_25;
        case 7u:
          uint64_t v22 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v9, v10, v22);
          id v23 = (int *)type metadata accessor for USOParse();
          uint64_t v24 = v23[5];
          unint64_t __dsta = &v9[v24];
          uint64_t v25 = &v10[v24];
          uint64_t v26 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
          {
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, v25, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(__dsta, v25, v26);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v26);
          }
          *(_OWORD *)&v9[v23[6]] = *(_OWORD *)&v10[v23[6]];
          uint64_t v40 = v23[7];
          uint64_t v41 = &v9[v40];
          uint64_t v42 = &v10[v40];
          v41[4] = v42[4];
          *(_DWORD *)uint64_t v41 = *(_DWORD *)v42;
          uint64_t v43 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v9[v43[5]] = *(_OWORD *)&v10[v43[5]];
          *(_OWORD *)&v9[v43[6]] = *(_OWORD *)&v10[v43[6]];
          *(_OWORD *)&v9[v43[7]] = *(_OWORD *)&v10[v43[7]];
          goto LABEL_25;
        case 8u:
          uint64_t v28 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v9, v10, v28);
          uint64_t v29 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v9[*(int *)(v29 + 20)] = *(_OWORD *)&v10[*(int *)(v29 + 20)];
          __dstb = (int *)v29;
          uint64_t v30 = *(int *)(v29 + 24);
          uint64_t v31 = &v9[v30];
          uint64_t v32 = &v10[v30];
          uint64_t v33 = (int *)type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, (uint64_t)v33))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
            uint64_t v35 = __dstb;
          }
          else
          {
            uint64_t v44 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v31, v32, v44);
            uint64_t v45 = v33[5];
            uint64_t v63 = (uint64_t)v31;
            uint64_t v64 = &v31[v45];
            uint64_t v46 = &v32[v45];
            uint64_t v47 = sub_1C9BEAE48();
            __src = v46;
            uint64_t v48 = (uint64_t)v46;
            uint64_t v49 = v47;
            if (__swift_getEnumTagSinglePayload(v48, 1, v47))
            {
              uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v64, __src, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v64, __src, v49);
              __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v49);
            }
            uint64_t v35 = __dstb;
            *(_OWORD *)(v63 + v33[6]) = *(_OWORD *)&v32[v33[6]];
            uint64_t v51 = v33[7];
            uint64_t v52 = v63 + v51;
            uint64_t v53 = &v32[v51];
            *(unsigned char *)(v52 + 4) = v53[4];
            *(_DWORD *)uint64_t v52 = *(_DWORD *)v53;
            __swift_storeEnumTagSinglePayload(v63, 0, 1, (uint64_t)v33);
          }
          *(void *)&v9[v35[7]] = *(void *)&v10[v35[7]];
          goto LABEL_25;
        case 9u:
          uint64_t v36 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v9, v10, v36);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      uint64_t v54 = v7[7];
      uint64_t v55 = &a1[v54];
      long long v56 = &a2[v54];
      long long v57 = *((_OWORD *)v56 + 1);
      *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
      *((_OWORD *)v55 + 1) = v57;
      *((void *)v55 + 4) = *((void *)v56 + 4);
      a1[v7[8]] = a2[v7[8]];
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v58 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v59 = &a1[v58];
      uint64_t v60 = &a2[v58];
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *((void *)v59 + 2) = *((void *)v60 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_1C9ADCD60(uint64_t a1)
{
  return sub_1C9AD76D0(a1) & 1;
}

void sub_1C9ADCD88(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1C9ADCDAC()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C9AD7B34();
}

uint64_t sub_1C9ADCE48@<X0>(uint64_t a1@<X8>)
{
  return sub_1C9AD6F94(a1);
}

uint64_t sub_1C9ADCE6C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SiriKitWaitToContinueFlow.WaitToContinueError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C9ADCEC0()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t *)v0[2];
  uint64_t v5 = v0[3];
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_1C9615010;
  return sub_1C9AD8B3C(v3, v4, v5, v7, v6);
}

void sub_1C9ADCF7C(long long *a1)
{
}

uint64_t sub_1C9ADCF84(uint64_t a1)
{
  uint64_t result = type metadata accessor for SiriKitWaitToContinueFlow.State();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *sub_1C9ADD02C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      sub_1C9BEC838();
    case 2u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      sub_1C9BEC838();
    case 3u:
      uint64_t v8 = sub_1C9BEAB08();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      char v9 = (int *)type metadata accessor for Input(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v14 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v11, v12, v14);
          goto LABEL_34;
        case 1u:
          uint64_t v21 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v11, v12, v21);
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)((char *)v11 + *(int *)(v22 + 48)) = *(void *)((char *)v12 + *(int *)(v22 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v23 = v12[1];
          *uint64_t v11 = *v12;
          v11[1] = v23;
          v11[2] = v12[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 3u:
          *uint64_t v11 = *v12;
          swift_unknownObjectRetain();
          goto LABEL_34;
        case 4u:
          uint64_t v24 = sub_1C9BEAC48();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v11, v12, v24);
          goto LABEL_34;
        case 5u:
          uint64_t v25 = (void *)*v12;
          *uint64_t v11 = *v12;
          id v26 = v25;
          goto LABEL_34;
        case 6u:
          uint64_t v27 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v11, v12, v27);
          uint64_t v28 = type metadata accessor for USOParse();
          uint64_t v29 = *(int *)(v28 + 20);
          uint64_t v111 = v28;
          unint64_t __dst = (char *)v11 + v29;
          uint64_t v30 = (char *)v12 + v29;
          uint64_t v31 = sub_1C9BEAE48();
          __src = v30;
          uint64_t v32 = (uint64_t)v30;
          uint64_t v33 = v31;
          if (__swift_getEnumTagSinglePayload(v32, 1, v31))
          {
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(__dst, __src, v33);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v33);
          }
          uint64_t v54 = *(int *)(v111 + 24);
          uint64_t v55 = (void *)((char *)v11 + v54);
          long long v56 = (void *)((char *)v12 + v54);
          uint64_t v57 = v56[1];
          *uint64_t v55 = *v56;
          v55[1] = v57;
          uint64_t v58 = *(int *)(v111 + 28);
          uint64_t v59 = (char *)v11 + v58;
          uint64_t v60 = (char *)v12 + v58;
          v59[4] = v60[4];
          *(_DWORD *)uint64_t v59 = *(_DWORD *)v60;
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 7u:
          uint64_t v35 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v11, v12, v35);
          uint64_t v36 = type metadata accessor for USOParse();
          uint64_t v37 = *(int *)(v36 + 20);
          char v112 = (char *)v11 + v37;
          unint64_t __dsta = (int *)v36;
          uint64_t v38 = (char *)v12 + v37;
          uint64_t v39 = sub_1C9BEAE48();
          __srca = v38;
          uint64_t v40 = (uint64_t)v38;
          uint64_t v41 = v39;
          if (__swift_getEnumTagSinglePayload(v40, 1, v39))
          {
            uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v112, __srca, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v112, __srca, v41);
            __swift_storeEnumTagSinglePayload((uint64_t)v112, 0, 1, v41);
          }
          uint64_t v61 = __dsta[6];
          uint64_t v62 = (void *)((char *)v11 + v61);
          uint64_t v63 = (void *)((char *)v12 + v61);
          uint64_t v114 = v63[1];
          *uint64_t v62 = *v63;
          v62[1] = v114;
          uint64_t v64 = __dsta[7];
          uint64_t v65 = (char *)v11 + v64;
          uint64_t v66 = (char *)v12 + v64;
          v65[4] = v66[4];
          *(_DWORD *)uint64_t v65 = *(_DWORD *)v66;
          uint64_t v67 = (int *)type metadata accessor for LinkParse();
          uint64_t v68 = v67[5];
          uint64_t v69 = (void *)((char *)v11 + v68);
          uint64_t v70 = (void *)((char *)v12 + v68);
          uint64_t v71 = v70[1];
          *uint64_t v69 = *v70;
          v69[1] = v71;
          uint64_t v72 = v67[6];
          uint64_t v73 = (void *)((char *)v11 + v72);
          uint64_t v74 = (void *)((char *)v12 + v72);
          uint64_t v75 = v74[1];
          *uint64_t v73 = *v74;
          v73[1] = v75;
          uint64_t v76 = v67[7];
          uint64_t v77 = (void *)((char *)v11 + v76);
          uint64_t v78 = (void *)((char *)v12 + v76);
          uint64_t v79 = v78[1];
          *uint64_t v77 = *v78;
          v77[1] = v79;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 8u:
          uint64_t v43 = sub_1C9BEC928();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v11, v12, v43);
          uint64_t v44 = type metadata accessor for NLRouterParse();
          uint64_t v45 = *(int *)(v44 + 20);
          uint64_t v46 = (void *)((char *)v11 + v45);
          uint64_t v47 = (void *)((char *)v12 + v45);
          uint64_t v48 = v47[1];
          *uint64_t v46 = *v47;
          v46[1] = v48;
          __srcb = (int *)v44;
          uint64_t v49 = *(int *)(v44 + 24);
          __dstb = (char *)v11 + v49;
          uint64_t v50 = (char *)v12 + v49;
          uint64_t v51 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          uint64_t v113 = v51;
          if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
          {
            uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v50, *(void *)(*(void *)(v52 - 8) + 64));
          }
          else
          {
            uint64_t v80 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(__dstb, v50, v80);
            uint64_t v81 = *(int *)(v51 + 20);
            uint64_t v106 = v50;
            uint64_t v107 = &__dstb[v81];
            int v82 = &v50[v81];
            uint64_t v83 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
            {
              uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v107, v82, *(void *)(*(void *)(v84 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v107, v82, v83);
              __swift_storeEnumTagSinglePayload((uint64_t)v107, 0, 1, v83);
            }
            uint64_t v85 = *(int *)(v113 + 24);
            uint64_t v86 = &__dstb[v85];
            id v87 = &v106[v85];
            uint64_t v88 = *((void *)v87 + 1);
            *(void *)uint64_t v86 = *(void *)v87;
            *((void *)v86 + 1) = v88;
            uint64_t v89 = *(int *)(v113 + 28);
            long long v90 = &__dstb[v89];
            long long v91 = &v106[v89];
            v90[4] = v91[4];
            *(_DWORD *)long long v90 = *(_DWORD *)v91;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v113);
          }
          uint64_t v92 = __srcb[7];
          long long v93 = *(void **)((char *)v12 + v92);
          *(void *)((char *)v11 + v92) = v93;
          id v94 = v93;
          goto LABEL_34;
        case 9u:
          uint64_t v53 = sub_1C9BEC8F8();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v11, v12, v53);
LABEL_34:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
      *(uint64_t *)((char *)a1 + v9[6]) = *(uint64_t *)((char *)a2 + v9[6]);
      uint64_t v95 = v9[7];
      uint64_t v96 = (char *)a1 + v95;
      uint64_t v97 = (uint64_t)a2 + v95;
      uint64_t v98 = *(uint64_t *)((char *)a2 + v95 + 24);
      swift_bridgeObjectRetain();
      if (v98)
      {
        uint64_t v99 = *(void *)(v97 + 32);
        *((void *)v96 + 3) = v98;
        *((void *)v96 + 4) = v99;
        (**(void (***)(char *, uint64_t, uint64_t))(v98 - 8))(v96, v97, v98);
      }
      else
      {
        long long v100 = *(_OWORD *)(v97 + 16);
        *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
        *((_OWORD *)v96 + 1) = v100;
        *((void *)v96 + 4) = *(void *)(v97 + 32);
      }
      *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v101 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v102 = (uint64_t *)((char *)a1 + v101);
      uint64_t v103 = (uint64_t *)((char *)a2 + v101);
      uint64_t v104 = v103[1];
      *uint64_t v102 = *v103;
      v102[1] = v104;
      v102[2] = v103[2];
      sub_1C9BEC838();
    case 4u:
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      a1[2] = a2[2];
      sub_1C9BEC838();
    case 5u:
      uint64_t v16 = (void *)*a2;
      uint64_t v17 = (void *)a2[1];
      char v18 = *((unsigned char *)a2 + 16);
      sub_1C97AB650(v16, v17, v18);
      *a1 = (uint64_t)v16;
      a1[1] = (uint64_t)v17;
      *((unsigned char *)a1 + 16) = v18;
      break;
    case 6u:
      uint64_t v19 = *a2;
      id v20 = (id)*a2;
      *a1 = v19;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      break;
    default:
      uint64_t v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      a1[2] = a2[2];
      sub_1C9BEC838();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_1C9ADDB0C(uint64_t a1)
{
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      goto LABEL_2;
    case 3u:
      uint64_t v3 = sub_1C9BEAB08();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = type metadata accessor for Input(0);
      uint64_t v5 = (void **)(a1 + *(int *)(v4 + 20));
      type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v6 = sub_1C9BEC028();
          goto LABEL_32;
        case 1u:
          uint64_t v10 = sub_1C9BEC028();
          (*(void (**)(void **, uint64_t))(*(void *)(v10 - 8) + 8))(v5, v10);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          swift_release();
          break;
        case 2u:
          swift_bridgeObjectRelease();
          goto LABEL_24;
        case 3u:
          swift_unknownObjectRelease();
          break;
        case 4u:
          uint64_t v6 = sub_1C9BEAC48();
          goto LABEL_32;
        case 5u:
          uint64_t v11 = *v5;
          goto LABEL_30;
        case 6u:
          uint64_t v12 = sub_1C9BEAF18();
          (*(void (**)(void **, uint64_t))(*(void *)(v12 - 8) + 8))(v5, v12);
          uint64_t v13 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v14 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v13, 1, v14)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          }
          goto LABEL_24;
        case 7u:
          uint64_t v15 = sub_1C9BEAF18();
          (*(void (**)(void **, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
          uint64_t v16 = (uint64_t)v5 + *(int *)(type metadata accessor for USOParse() + 20);
          uint64_t v17 = sub_1C9BEAE48();
          if (!__swift_getEnumTagSinglePayload(v16, 1, v17)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
          }
          swift_bridgeObjectRelease();
          type metadata accessor for LinkParse();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_24:
          swift_bridgeObjectRelease();
          break;
        case 8u:
          uint64_t v18 = sub_1C9BEC928();
          (*(void (**)(void **, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
          uint64_t v19 = type metadata accessor for NLRouterParse();
          swift_bridgeObjectRelease();
          uint64_t v20 = (uint64_t)v5 + *(int *)(v19 + 24);
          uint64_t v21 = type metadata accessor for USOParse();
          if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
          {
            uint64_t v22 = sub_1C9BEAF18();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
            uint64_t v23 = v20 + *(int *)(v21 + 20);
            uint64_t v24 = sub_1C9BEAE48();
            if (!__swift_getEnumTagSinglePayload(v23, 1, v24)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
            }
            swift_bridgeObjectRelease();
          }
          uint64_t v11 = *(void **)((char *)v5 + *(int *)(v19 + 28));
LABEL_30:

          break;
        case 9u:
          uint64_t v6 = sub_1C9BEC8F8();
LABEL_32:
          (*(void (**)(void **, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = a1 + *(int *)(v4 + 28);
      if (*(void *)(v25 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(v25);
      }
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      a1 += *(int *)(swift_getTupleTypeMetadata2() + 48);
LABEL_2:
      swift_release();

      uint64_t v2 = *(void **)(a1 + 16);
      goto LABEL_4;
    case 5u:
      uint64_t v7 = *(void **)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      char v9 = *(unsigned char *)(a1 + 16);
      sub_1C97ABD08(v7, v8, v9);
      return;
    case 6u:
      uint64_t v2 = *(void **)a1;
LABEL_4:

      break;
    default:
      return;
  }
}

uint64_t sub_1C9ADE128(uint64_t a1, uint64_t a2)
{
  type metadata accessor for SiriKitWaitToContinueFlow.State();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      uint64_t v6 = sub_1C9BEAB08();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Input(0);
      uint64_t v8 = v7[5];
      char v9 = (void *)(a1 + v8);
      uint64_t v10 = (void *)(a2 + v8);
      uint64_t v11 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
          goto LABEL_30;
        case 1u:
          uint64_t v18 = sub_1C9BEC028();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v9, v10, v18);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)((char *)v9 + *(int *)(v19 + 48)) = *(void *)((char *)v10 + *(int *)(v19 + 48));
          sub_1C9BEC838();
        case 2u:
          uint64_t v20 = v10[1];
          *char v9 = *v10;
          v9[1] = v20;
          v9[2] = v10[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_30;
        case 3u:
          *char v9 = *v10;
          swift_unknownObjectRetain();
          goto LABEL_30;
        case 4u:
          uint64_t v21 = sub_1C9BEAC48();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v9, v10, v21);
          goto LABEL_30;
        case 5u:
          uint64_t v22 = (void *)*v10;
          *char v9 = *v10;
          id v23 = v22;
          goto LABEL_30;
        case 6u:
          uint64_t v24 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v9, v10, v24);
          uint64_t v25 = type metadata accessor for USOParse();
          uint64_t v26 = *(int *)(v25 + 20);
          uint64_t v107 = v25;
          unint64_t __dst = (char *)v9 + v26;
          uint64_t v27 = (char *)v10 + v26;
          uint64_t v28 = sub_1C9BEAE48();
          __src = v27;
          uint64_t v29 = (uint64_t)v27;
          uint64_t v30 = v28;
          if (__swift_getEnumTagSinglePayload(v29, 1, v28))
          {
            uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dst, __src, *(void *)(*(void *)(v31 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(__dst, __src, v30);
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v30);
          }
          uint64_t v51 = *(int *)(v107 + 24);
          uint64_t v52 = (void *)((char *)v9 + v51);
          uint64_t v53 = (void *)((char *)v10 + v51);
          uint64_t v54 = v53[1];
          *uint64_t v52 = *v53;
          v52[1] = v54;
          uint64_t v55 = *(int *)(v107 + 28);
          long long v56 = (char *)v9 + v55;
          uint64_t v57 = (char *)v10 + v55;
          v56[4] = v57[4];
          *(_DWORD *)long long v56 = *(_DWORD *)v57;
          swift_bridgeObjectRetain();
          goto LABEL_30;
        case 7u:
          uint64_t v32 = sub_1C9BEAF18();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v9, v10, v32);
          uint64_t v33 = type metadata accessor for USOParse();
          uint64_t v34 = *(int *)(v33 + 20);
          uint64_t v108 = v33;
          unint64_t __dsta = (char *)v9 + v34;
          uint64_t v35 = (char *)v10 + v34;
          uint64_t v36 = sub_1C9BEAE48();
          __srca = v35;
          uint64_t v37 = (uint64_t)v35;
          uint64_t v38 = v36;
          if (__swift_getEnumTagSinglePayload(v37, 1, v36))
          {
            uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __srca, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(__dsta, __srca, v38);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v38);
          }
          uint64_t v58 = *(int *)(v108 + 24);
          uint64_t v59 = (void *)((char *)v9 + v58);
          uint64_t v60 = (void *)((char *)v10 + v58);
          __dstc = (void *)v60[1];
          *uint64_t v59 = *v60;
          v59[1] = __dstc;
          uint64_t v61 = *(int *)(v108 + 28);
          uint64_t v62 = (char *)v9 + v61;
          uint64_t v63 = (char *)v10 + v61;
          v62[4] = v63[4];
          *(_DWORD *)uint64_t v62 = *(_DWORD *)v63;
          uint64_t v64 = (int *)type metadata accessor for LinkParse();
          uint64_t v65 = v64[5];
          uint64_t v66 = (void *)((char *)v9 + v65);
          uint64_t v67 = (void *)((char *)v10 + v65);
          uint64_t v110 = v67[1];
          *uint64_t v66 = *v67;
          v66[1] = v110;
          uint64_t v68 = v64[6];
          uint64_t v69 = (void *)((char *)v9 + v68);
          uint64_t v70 = (void *)((char *)v10 + v68);
          uint64_t v71 = v70[1];
          *uint64_t v69 = *v70;
          v69[1] = v71;
          uint64_t v72 = v64[7];
          uint64_t v73 = (void *)((char *)v9 + v72);
          uint64_t v74 = (void *)((char *)v10 + v72);
          uint64_t v75 = v74[1];
          *uint64_t v73 = *v74;
          v73[1] = v75;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_30;
        case 8u:
          uint64_t v40 = sub_1C9BEC928();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v9, v10, v40);
          uint64_t v41 = type metadata accessor for NLRouterParse();
          uint64_t v42 = *(int *)(v41 + 20);
          uint64_t v43 = (void *)((char *)v9 + v42);
          uint64_t v44 = (void *)((char *)v10 + v42);
          uint64_t v45 = v44[1];
          *uint64_t v43 = *v44;
          v43[1] = v45;
          uint64_t v102 = v9;
          uint64_t v103 = v41;
          uint64_t v46 = *(int *)(v41 + 24);
          uint64_t v109 = (char *)v10 + v46;
          __dstb = (char *)v9 + v46;
          uint64_t v47 = type metadata accessor for USOParse();
          swift_bridgeObjectRetain();
          __srcb = (int *)v47;
          if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v47))
          {
            uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(__dstb, v109, *(void *)(*(void *)(v48 - 8) + 64));
            uint64_t v49 = v102;
          }
          else
          {
            uint64_t v76 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(__dstb, v109, v76);
            uint64_t v77 = *(int *)(v47 + 20);
            uint64_t v101 = &__dstb[v77];
            uint64_t v78 = &v109[v77];
            uint64_t v79 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v78, 1, v79))
            {
              uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v101, v78, *(void *)(*(void *)(v80 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v101, v78, v79);
              __swift_storeEnumTagSinglePayload((uint64_t)v101, 0, 1, v79);
            }
            uint64_t v49 = v102;
            uint64_t v81 = __srcb[6];
            int v82 = &__dstb[v81];
            uint64_t v83 = &v109[v81];
            uint64_t v84 = *((void *)v83 + 1);
            *(void *)int v82 = *(void *)v83;
            *((void *)v82 + 1) = v84;
            uint64_t v85 = __srcb[7];
            uint64_t v86 = &__dstb[v85];
            id v87 = &v109[v85];
            v86[4] = v87[4];
            *(_DWORD *)uint64_t v86 = *(_DWORD *)v87;
            swift_bridgeObjectRetain();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, (uint64_t)__srcb);
          }
          uint64_t v88 = *(int *)(v103 + 28);
          uint64_t v89 = *(void **)((char *)v10 + v88);
          *(void *)((char *)v49 + v88) = v89;
          id v90 = v89;
          goto LABEL_30;
        case 9u:
          uint64_t v50 = sub_1C9BEC8F8();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v9, v10, v50);
LABEL_30:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      *(void *)(a1 + v7[6]) = *(void *)(a2 + v7[6]);
      uint64_t v91 = v7[7];
      uint64_t v92 = a1 + v91;
      uint64_t v93 = a2 + v91;
      uint64_t v94 = *(void *)(a2 + v91 + 24);
      swift_bridgeObjectRetain();
      if (v94)
      {
        uint64_t v95 = *(void *)(v93 + 32);
        *(void *)(v92 + 24) = v94;
        *(void *)(v92 + 32) = v95;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v94 - 8))(v92, v93, v94);
      }
      else
      {
        long long v96 = *(_OWORD *)(v93 + 16);
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
        *(_OWORD *)(v92 + 16) = v96;
        *(void *)(v92 + 32) = *(void *)(v93 + 32);
      }
      *(unsigned char *)(a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v97 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v98 = (void *)(a1 + v97);
      uint64_t v99 = (void *)(a2 + v97);
      uint64_t v100 = v99[1];
      *uint64_t v98 = *v99;
      v98[1] = v100;
      v98[2] = v99[2];
      sub_1C9BEC838();
    case 5u:
      id v13 = *(id *)a2;
      uint64_t v14 = *(void **)(a2 + 8);
      char v15 = *(unsigned char *)(a2 + 16);
      sub_1C97AB650(v13, v14, v15);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(unsigned char *)(a1 + 16) = v15;
      break;
    case 6u:
      id v16 = *(id *)a2;
      id v17 = *(id *)a2;
      *(void *)a1 = v16;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_1C9BEC838();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1C9ADEB20(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = type metadata accessor for SiriKitWaitToContinueFlow.State();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 3u:
        uint64_t v5 = sub_1C9BEAB08();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        uint64_t v6 = (int *)type metadata accessor for Input(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = (uint64_t *)((char *)a1 + v7);
        char v9 = (uint64_t *)((char *)a2 + v7);
        uint64_t v10 = type metadata accessor for Parse(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v11 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
            goto LABEL_33;
          case 1u:
            uint64_t v17 = sub_1C9BEC028();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v8, v9, v17);
            uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
            *(void *)((char *)v8 + *(int *)(v18 + 48)) = *(void *)((char *)v9 + *(int *)(v18 + 48));
            sub_1C9BEC838();
          case 2u:
            *uint64_t v8 = *v9;
            v8[1] = v9[1];
            v8[2] = v9[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 3u:
            *uint64_t v8 = *v9;
            swift_unknownObjectRetain();
            goto LABEL_33;
          case 4u:
            uint64_t v19 = sub_1C9BEAC48();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v8, v9, v19);
            goto LABEL_33;
          case 5u:
            uint64_t v20 = (void *)*v9;
            *uint64_t v8 = *v9;
            id v21 = v20;
            goto LABEL_33;
          case 6u:
            uint64_t v22 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v8, v9, v22);
            uint64_t v23 = type metadata accessor for USOParse();
            uint64_t v24 = *(int *)(v23 + 20);
            uint64_t v102 = v23;
            unint64_t __dst = (char *)v8 + v24;
            uint64_t v25 = (char *)v9 + v24;
            uint64_t v26 = sub_1C9BEAE48();
            __src = v25;
            uint64_t v27 = (uint64_t)v25;
            uint64_t v28 = v26;
            if (__swift_getEnumTagSinglePayload(v27, 1, v26))
            {
              uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(__dst, __src, *(void *)(*(void *)(v29 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(__dst, __src, v28);
              __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
            }
            uint64_t v48 = *(int *)(v102 + 24);
            uint64_t v49 = (void *)((char *)v8 + v48);
            uint64_t v50 = (void *)((char *)v9 + v48);
            *uint64_t v49 = *v50;
            v49[1] = v50[1];
            uint64_t v51 = *(int *)(v102 + 28);
            uint64_t v52 = (char *)v8 + v51;
            uint64_t v53 = (char *)v9 + v51;
            int v54 = *(_DWORD *)v53;
            v52[4] = v53[4];
            *(_DWORD *)uint64_t v52 = v54;
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 7u:
            uint64_t v30 = sub_1C9BEAF18();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v8, v9, v30);
            uint64_t v31 = type metadata accessor for USOParse();
            uint64_t v32 = *(int *)(v31 + 20);
            uint64_t v103 = (char *)v8 + v32;
            unint64_t __dsta = (int *)v31;
            uint64_t v33 = (char *)v9 + v32;
            uint64_t v34 = sub_1C9BEAE48();
            __srca = v33;
            uint64_t v35 = (uint64_t)v33;
            uint64_t v36 = v34;
            if (__swift_getEnumTagSinglePayload(v35, 1, v34))
            {
              uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v103, __srca, *(void *)(*(void *)(v37 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v103, __srca, v36);
              __swift_storeEnumTagSinglePayload((uint64_t)v103, 0, 1, v36);
            }
            uint64_t v55 = __dsta[6];
            long long v56 = (void *)((char *)v8 + v55);
            uint64_t v57 = (void *)((char *)v9 + v55);
            *long long v56 = *v57;
            v56[1] = v57[1];
            uint64_t v58 = __dsta[7];
            uint64_t v59 = (char *)v8 + v58;
            uint64_t v60 = (char *)v9 + v58;
            int v61 = *(_DWORD *)v60;
            v59[4] = v60[4];
            *(_DWORD *)uint64_t v59 = v61;
            uint64_t v62 = (int *)type metadata accessor for LinkParse();
            uint64_t v63 = v62[5];
            uint64_t v64 = (void *)((char *)v8 + v63);
            uint64_t v65 = (void *)((char *)v9 + v63);
            void *v64 = *v65;
            v64[1] = v65[1];
            uint64_t v66 = v62[6];
            uint64_t v67 = (void *)((char *)v8 + v66);
            uint64_t v68 = (void *)((char *)v9 + v66);
            *uint64_t v67 = *v68;
            v67[1] = v68[1];
            uint64_t v69 = v62[7];
            uint64_t v70 = (void *)((char *)v8 + v69);
            uint64_t v71 = (void *)((char *)v9 + v69);
            *uint64_t v70 = *v71;
            v70[1] = v71[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_33;
          case 8u:
            uint64_t v38 = sub_1C9BEC928();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v8, v9, v38);
            uint64_t v39 = type metadata accessor for NLRouterParse();
            uint64_t v40 = *(int *)(v39 + 20);
            uint64_t v41 = (void *)((char *)v8 + v40);
            uint64_t v42 = (void *)((char *)v9 + v40);
            void *v41 = *v42;
            v41[1] = v42[1];
            __srcb = (int *)v39;
            uint64_t v43 = *(int *)(v39 + 24);
            __dstb = (char *)v8 + v43;
            uint64_t v44 = (char *)v9 + v43;
            uint64_t v45 = type metadata accessor for USOParse();
            swift_bridgeObjectRetain();
            uint64_t v104 = v45;
            if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45))
            {
              uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
              memcpy(__dstb, v44, *(void *)(*(void *)(v46 - 8) + 64));
            }
            else
            {
              uint64_t v72 = sub_1C9BEAF18();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(__dstb, v44, v72);
              uint64_t v73 = *(int *)(v45 + 20);
              uint64_t v97 = v44;
              uint64_t v98 = &__dstb[v73];
              uint64_t v74 = &v44[v73];
              uint64_t v75 = sub_1C9BEAE48();
              if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
              {
                uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
                memcpy(v98, v74, *(void *)(*(void *)(v76 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v98, v74, v75);
                __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v75);
              }
              uint64_t v77 = *(int *)(v104 + 24);
              uint64_t v78 = &__dstb[v77];
              uint64_t v79 = &v97[v77];
              *(void *)uint64_t v78 = *(void *)v79;
              *((void *)v78 + 1) = *((void *)v79 + 1);
              uint64_t v80 = *(int *)(v104 + 28);
              uint64_t v81 = &__dstb[v80];
              int v82 = &v97[v80];
              int v83 = *(_DWORD *)v82;
              v81[4] = v82[4];
              *(_DWORD *)uint64_t v81 = v83;
              swift_bridgeObjectRetain();
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v104);
            }
            uint64_t v84 = __srcb[7];
            uint64_t v85 = *(void **)((char *)v9 + v84);
            *(void *)((char *)v8 + v84) = v85;
            id v86 = v85;
            goto LABEL_33;
          case 9u:
            uint64_t v47 = sub_1C9BEC8F8();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v8, v9, v47);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
        uint64_t v87 = v6[7];
        uint64_t v88 = (char *)a1 + v87;
        uint64_t v89 = (long long *)((char *)a2 + v87);
        uint64_t v90 = *(uint64_t *)((char *)a2 + v87 + 24);
        swift_bridgeObjectRetain();
        if (v90)
        {
          *((void *)v88 + 3) = v90;
          *((void *)v88 + 4) = *((void *)v89 + 4);
          (**(void (***)(char *, long long *, uint64_t))(v90 - 8))(v88, v89, v90);
        }
        else
        {
          long long v91 = *v89;
          long long v92 = v89[1];
          *((void *)v88 + 4) = *((void *)v89 + 4);
          *(_OWORD *)uint64_t v88 = v91;
          *((_OWORD *)v88 + 1) = v92;
        }
        *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
        swift_getAssociatedTypeWitness();
        swift_getAssociatedTypeWitness();
        type metadata accessor for IntentResolutionRecord();
        uint64_t v93 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v94 = (uint64_t *)((char *)a1 + v93);
        uint64_t v95 = (uint64_t *)((char *)a2 + v93);
        *uint64_t v94 = *v95;
        v94[1] = v95[1];
        v94[2] = v95[2];
        sub_1C9BEC838();
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
      case 5u:
        uint64_t v12 = (void *)*a2;
        id v13 = (void *)a2[1];
        char v14 = *((unsigned char *)a2 + 16);
        sub_1C97AB650(v12, v13, v14);
        *a1 = (uint64_t)v12;
        a1[1] = (uint64_t)v13;
        *((unsigned char *)a1 + 16) = v14;
        break;
      case 6u:
        uint64_t v15 = *a2;
        id v16 = (id)*a2;
        *a1 = v15;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        sub_1C9BEC838();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_1C9ADF654(unsigned char *a1, unsigned char *a2)
{
  uint64_t v4 = type metadata accessor for SiriKitWaitToContinueFlow.State();
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v5 = sub_1C9BEAB08();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = (int *)type metadata accessor for Input(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = &a1[v7];
    char v9 = &a2[v7];
    uint64_t v10 = type metadata accessor for Parse(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v11 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
        goto LABEL_24;
      case 1u:
        uint64_t v12 = sub_1C9BEC028();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
        *(void *)&v8[*(int *)(v13 + 48)] = *(void *)&v9[*(int *)(v13 + 48)];
        goto LABEL_24;
      case 4u:
        uint64_t v14 = sub_1C9BEAC48();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
        goto LABEL_24;
      case 6u:
        uint64_t v15 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
        uint64_t v16 = type metadata accessor for USOParse();
        uint64_t v17 = *(int *)(v16 + 20);
        uint64_t v64 = &v8[v17];
        unint64_t __dst = (int *)v16;
        uint64_t v18 = &v9[v17];
        uint64_t v19 = sub_1C9BEAE48();
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(v64, v18, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v64, v18, v19);
          __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v19);
        }
        *(_OWORD *)&v8[__dst[6]] = *(_OWORD *)&v9[__dst[6]];
        uint64_t v34 = __dst[7];
        uint64_t v35 = &v8[v34];
        uint64_t v36 = &v9[v34];
        v35[4] = v36[4];
        *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
        goto LABEL_24;
      case 7u:
        uint64_t v21 = sub_1C9BEAF18();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v8, v9, v21);
        uint64_t v22 = type metadata accessor for USOParse();
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v65 = v22;
        unint64_t __dsta = &v8[v23];
        uint64_t v24 = &v9[v23];
        uint64_t v25 = sub_1C9BEAE48();
        __src = v24;
        uint64_t v26 = (uint64_t)v24;
        uint64_t v27 = v25;
        if (__swift_getEnumTagSinglePayload(v26, 1, v25))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
          memcpy(__dsta, __src, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(__dsta, __src, v27);
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v27);
        }
        *(_OWORD *)&v8[*(int *)(v65 + 24)] = *(_OWORD *)&v9[*(int *)(v65 + 24)];
        uint64_t v37 = *(int *)(v65 + 28);
        uint64_t v38 = &v8[v37];
        uint64_t v39 = &v9[v37];
        v38[4] = v39[4];
        *(_DWORD *)uint64_t v38 = *(_DWORD *)v39;
        uint64_t v40 = (int *)type metadata accessor for LinkParse();
        *(_OWORD *)&v8[v40[5]] = *(_OWORD *)&v9[v40[5]];
        *(_OWORD *)&v8[v40[6]] = *(_OWORD *)&v9[v40[6]];
        *(_OWORD *)&v8[v40[7]] = *(_OWORD *)&v9[v40[7]];
        goto LABEL_24;
      case 8u:
        uint64_t v29 = sub_1C9BEC928();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v8, v9, v29);
        uint64_t v30 = type metadata accessor for NLRouterParse();
        *(_OWORD *)&v8[*(int *)(v30 + 20)] = *(_OWORD *)&v9[*(int *)(v30 + 20)];
        uint64_t v31 = *(int *)(v30 + 24);
        __srca = (int *)v30;
        uint64_t v66 = &v8[v31];
        __dstb = &v9[v31];
        int v61 = (int *)type metadata accessor for USOParse();
        if (__swift_getEnumTagSinglePayload((uint64_t)__dstb, 1, (uint64_t)v61))
        {
          uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
          memcpy(v66, __dstb, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v41 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v66, __dstb, v41);
          uint64_t v42 = v61[5];
          uint64_t v60 = &v66[v42];
          uint64_t v43 = &__dstb[v42];
          uint64_t v44 = sub_1C9BEAE48();
          uint64_t v59 = v43;
          uint64_t v45 = (uint64_t)v43;
          uint64_t v46 = v44;
          if (__swift_getEnumTagSinglePayload(v45, 1, v44))
          {
            uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v60, v59, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v60, v59, v46);
            __swift_storeEnumTagSinglePayload((uint64_t)v60, 0, 1, v46);
          }
          *(_OWORD *)&v66[v61[6]] = *(_OWORD *)&__dstb[v61[6]];
          uint64_t v48 = v61[7];
          uint64_t v49 = &v66[v48];
          uint64_t v50 = &__dstb[v48];
          v49[4] = v50[4];
          *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
          __swift_storeEnumTagSinglePayload((uint64_t)v66, 0, 1, (uint64_t)v61);
        }
        *(void *)&v8[__srca[7]] = *(void *)&v9[__srca[7]];
        goto LABEL_24;
      case 9u:
        uint64_t v33 = sub_1C9BEC8F8();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v8, v9, v33);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v51 = v6[7];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    long long v54 = *((_OWORD *)v53 + 1);
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
    *((_OWORD *)v52 + 1) = v54;
    *((void *)v52 + 4) = *((void *)v53 + 4);
    a1[v6[8]] = a2[v6[8]];
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    type metadata accessor for IntentResolutionRecord();
    uint64_t v55 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    long long v56 = &a1[v55];
    uint64_t v57 = &a2[v55];
    *(_OWORD *)long long v56 = *(_OWORD *)v57;
    *((void *)v56 + 2) = *((void *)v57 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_1C9ADFE68(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    uint64_t v4 = type metadata accessor for SiriKitWaitToContinueFlow.State();
    uint64_t v5 = *(void *)(v4 - 8);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(a1, v4);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_1C9BEAB08();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Input(0);
      uint64_t v8 = v7[5];
      char v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for Parse(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
          goto LABEL_25;
        case 1u:
          uint64_t v13 = sub_1C9BEC028();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
          uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
          *(void *)&v9[*(int *)(v14 + 48)] = *(void *)&v10[*(int *)(v14 + 48)];
          goto LABEL_25;
        case 4u:
          uint64_t v15 = sub_1C9BEAC48();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
          goto LABEL_25;
        case 6u:
          uint64_t v16 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v9, v10, v16);
          uint64_t v17 = type metadata accessor for USOParse();
          uint64_t v18 = *(int *)(v17 + 20);
          uint64_t v62 = &v9[v18];
          unint64_t __dst = (int *)v17;
          uint64_t v19 = &v10[v18];
          uint64_t v20 = sub_1C9BEAE48();
          if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
          {
            uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(v62, v19, *(void *)(*(void *)(v21 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v62, v19, v20);
            __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v20);
          }
          *(_OWORD *)&v9[__dst[6]] = *(_OWORD *)&v10[__dst[6]];
          uint64_t v35 = __dst[7];
          uint64_t v36 = &v9[v35];
          uint64_t v37 = &v10[v35];
          v36[4] = v37[4];
          *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
          goto LABEL_25;
        case 7u:
          uint64_t v22 = sub_1C9BEAF18();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v9, v10, v22);
          uint64_t v23 = type metadata accessor for USOParse();
          uint64_t v24 = *(int *)(v23 + 20);
          uint64_t v63 = v23;
          unint64_t __dsta = &v9[v24];
          uint64_t v25 = &v10[v24];
          uint64_t v26 = sub_1C9BEAE48();
          __src = v25;
          uint64_t v27 = (uint64_t)v25;
          uint64_t v28 = v26;
          if (__swift_getEnumTagSinglePayload(v27, 1, v26))
          {
            uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
            memcpy(__dsta, __src, *(void *)(*(void *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(__dsta, __src, v28);
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v28);
          }
          *(_OWORD *)&v9[*(int *)(v63 + 24)] = *(_OWORD *)&v10[*(int *)(v63 + 24)];
          uint64_t v38 = *(int *)(v63 + 28);
          uint64_t v39 = &v9[v38];
          uint64_t v40 = &v10[v38];
          v39[4] = v40[4];
          *(_DWORD *)uint64_t v39 = *(_DWORD *)v40;
          uint64_t v41 = (int *)type metadata accessor for LinkParse();
          *(_OWORD *)&v9[v41[5]] = *(_OWORD *)&v10[v41[5]];
          *(_OWORD *)&v9[v41[6]] = *(_OWORD *)&v10[v41[6]];
          *(_OWORD *)&v9[v41[7]] = *(_OWORD *)&v10[v41[7]];
          goto LABEL_25;
        case 8u:
          uint64_t v30 = sub_1C9BEC928();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v9, v10, v30);
          uint64_t v31 = type metadata accessor for NLRouterParse();
          *(_OWORD *)&v9[*(int *)(v31 + 20)] = *(_OWORD *)&v10[*(int *)(v31 + 20)];
          uint64_t v32 = *(int *)(v31 + 24);
          __srca = (int *)v31;
          uint64_t v64 = &v9[v32];
          __dstb = &v10[v32];
          uint64_t v59 = (int *)type metadata accessor for USOParse();
          if (__swift_getEnumTagSinglePayload((uint64_t)__dstb, 1, (uint64_t)v59))
          {
            uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5928A0);
            memcpy(v64, __dstb, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            uint64_t v42 = sub_1C9BEAF18();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v64, __dstb, v42);
            uint64_t v43 = v59[5];
            uint64_t v58 = &v64[v43];
            uint64_t v44 = &__dstb[v43];
            uint64_t v57 = sub_1C9BEAE48();
            if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v57))
            {
              uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78F28);
              memcpy(v58, v44, *(void *)(*(void *)(v45 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *))(*(void *)(v57 - 8) + 32))(v58, v44);
              __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v57);
            }
            *(_OWORD *)&v64[v59[6]] = *(_OWORD *)&__dstb[v59[6]];
            uint64_t v46 = v59[7];
            uint64_t v47 = &v64[v46];
            uint64_t v48 = &__dstb[v46];
            v47[4] = v48[4];
            *(_DWORD *)uint64_t v47 = *(_DWORD *)v48;
            __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, (uint64_t)v59);
          }
          *(void *)&v9[__srca[7]] = *(void *)&v10[__srca[7]];
          goto LABEL_25;
        case 9u:
          uint64_t v34 = sub_1C9BEC8F8();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v9, v10, v34);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      uint64_t v49 = v7[7];
      uint64_t v50 = &a1[v49];
      uint64_t v51 = &a2[v49];
      long long v52 = *((_OWORD *)v51 + 1);
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
      *((_OWORD *)v50 + 1) = v52;
      *((void *)v50 + 4) = *((void *)v51 + 4);
      a1[v7[8]] = a2[v7[8]];
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      type metadata accessor for IntentResolutionRecord();
      uint64_t v53 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      long long v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      *(_OWORD *)long long v54 = *(_OWORD *)v55;
      *((void *)v54 + 2) = *((void *)v55 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v5 + 64));
    }
  }
  return a1;
}

uint64_t sub_1C9AE06BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SiriKitWaitToContinueFlow.State();

  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t sub_1C9AE0708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SiriKitWaitToContinueFlow.State();

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v6);
}

uint64_t OUTLINED_FUNCTION_11_75()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_18_57()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_20_62()
{
  return v0;
}

void *sub_1C9AE07A8(void *a1, long long *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C9BEAB08();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEAAF8();
  sub_1C9BEAAB8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  v3[8] = sub_1C9658304(8);
  v3[9] = v11;
  v3[10] = v12;
  v3[11] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5892D8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5992D0);
  swift_allocObject();
  v3[2] = sub_1C9AE09E8(a1);
  sub_1C95FD5D8(a2, (uint64_t)(v3 + 3));
  return v3;
}

void *sub_1C9AE0914(void *a1)
{
  v1[16] = *a1;
  v1[2] = sub_1C9AEDA5C;
  v1[3] = a1;
  v1[4] = &unk_1EA599348;
  v1[5] = a1;
  v1[6] = &unk_1EA599358;
  v1[7] = a1;
  v1[8] = &unk_1EA599368;
  v1[9] = a1;
  v1[10] = &unk_1EA599378;
  v1[11] = a1;
  v1[12] = &unk_1EA599388;
  v1[13] = a1;
  v1[14] = &unk_1EA599398;
  v1[15] = a1;
  swift_retain_n();
  return v1;
}

void *sub_1C9AE09E8(void *a1)
{
  v1[16] = *a1;
  v1[2] = sub_1C9AEC0E4;
  v1[3] = a1;
  v1[4] = &unk_1EA5992E0;
  v1[5] = a1;
  v1[6] = &unk_1EA5992F0;
  v1[7] = a1;
  v1[8] = &unk_1EA599300;
  v1[9] = a1;
  v1[10] = &unk_1EA599310;
  v1[11] = a1;
  v1[12] = &unk_1EA599320;
  v1[13] = a1;
  v1[14] = &unk_1EA599330;
  v1[15] = a1;
  swift_retain_n();
  return v1;
}

uint64_t sub_1C9AE0ABC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C9B87B28();
}

uint64_t sub_1C9AE0B68(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C969EA2C;
  return sub_1C9AE88D4(a1);
}

uint64_t sub_1C9AE0C00()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C9B88BE8();
}

uint64_t sub_1C9AE0CC4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C9AE8E60();
}

uint64_t sub_1C9AE0D60()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C9B894A0();
}

uint64_t sub_1C9AE0DFC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9AEB534(a1);
}

uint64_t sub_1C9AE0E94()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return sub_1C9B89794();
}

uint64_t sub_1C9AE0F40(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C9615888;
  return sub_1C9AEB64C(a1);
}

unint64_t sub_1C9AE0FD8(char a1)
{
  if (a1 < 0)
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_16();
    unint64_t v3 = v1;
  }
  else
  {
    sub_1C9BEE188();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_16();
    unint64_t v3 = 0xD000000000000011;
  }
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1C9AE10F8()
{
  return sub_1C9AE0FD8(*v0);
}

uint64_t sub_1C9AE1100(char a1, uint64_t a2, char a3)
{
  type metadata accessor for PromptForSiriLocationAccessStrategy();
  sub_1C95FD5F0(a2, (uint64_t)v7);
  return sub_1C9AE1158(a1, (uint64_t)v7, a3);
}

uint64_t sub_1C9AE1158(char a1, uint64_t a2, char a3)
{
  sub_1C95FD5F0(a2, (uint64_t)v18);
  uint64_t v6 = type metadata accessor for ResponseFactory();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 40) = &type metadata for DialogUsageProvider;
  *(void *)(v7 + 48) = &protocol witness table for DialogUsageProvider;
  uint64_t v16 = v6;
  uint64_t v17 = &protocol witness table for ResponseFactory;
  uint64_t v13 = &type metadata for TCCLocationAccessTemplates;
  uint64_t v14 = &off_1F23F6EE0;
  *(void *)&long long v15 = v7;
  type metadata accessor for PromptForSiriLocationAccessStrategy();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, (uint64_t)&type metadata for TCCLocationAccessTemplates);
  MEMORY[0x1F4188790](v9, v9);
  OUTLINED_FUNCTION_6_0();
  (*(void (**)(void))(v10 + 16))();
  *(void *)(v8 + 136) = &type metadata for TCCLocationAccessTemplates;
  *(void *)(v8 + 144) = &off_1F23F6EE0;
  *(unsigned char *)(v8 + 16) = a1;
  sub_1C95FD5D8(v18, v8 + 24);
  sub_1C95FD5D8(&v15, v8 + 72);
  *(unsigned char *)(v8 + 64) = a3;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v8;
}

unint64_t sub_1C9AE1290()
{
  unint64_t v1 = 0xD000000000000011;
  sub_1C9AECE24(v0, (uint64_t)v9);
  switch(v10)
  {
    case 1:
    case 3:
      return v1;
    case 2:
      unint64_t v1 = 0x6F5479646165722ELL;
      break;
    case 4:
      swift_release();
      unint64_t v1 = 0xD000000000000014;
      break;
    case 5:
      unint64_t v2 = *((void *)&v9[0] + 1);
      unint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
      sub_1C9BEE188();
      sub_1C9BED6B8();
      sub_1C9BED5D8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      v4[0] = v2;
      sub_1C96E9444(v2);
      sub_1C9BED5D8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      sub_1C9BED6B8();
      sub_1C96E9474(v2);
      goto LABEL_6;
    case 6:
      sub_1C95FD5D8(v9, (uint64_t)&v7);
      v4[0] = 0;
      v4[1] = 0xE000000000000000;
      sub_1C9BEE188();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000023;
      unint64_t v6 = 0x80000001C9C2C870;
      sub_1C95FD5F0((uint64_t)&v7, (uint64_t)v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599288);
      sub_1C9BED5D8();
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
      unint64_t v1 = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
      break;
    default:
      sub_1C9BEE188();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD000000000000014;
      unint64_t v8 = 0x80000001C9C2C940;
      sub_1C9BED6B8();
      swift_bridgeObjectRelease();
LABEL_6:
      unint64_t v1 = v7;
      break;
  }
  return v1;
}

unint64_t sub_1C9AE1550()
{
  unint64_t v2 = *(os_unfair_lock_s **)(v0 + 216);
  uint64_t v3 = (uint64_t)&v2[4];
  OUTLINED_FUNCTION_107_6(v2);
  sub_1C9AEDF34(v3, (uint64_t)v13);
  os_unfair_lock_unlock(v1);
  sub_1C9AECE24((uint64_t)v13, (uint64_t)v10);
  if (v11 == 6)
  {
    sub_1C95FD5D8(v10, (uint64_t)v12);
    unint64_t v4 = *__swift_project_boxed_opaque_existential_1(v12, v12[3]);
    sub_1C96E9444(v4);
    sub_1C9AED138((uint64_t)v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1C9AED138((uint64_t)v10);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    unint64_t v6 = OUTLINED_FUNCTION_34(v5, (uint64_t)qword_1EBC7A520);
    os_log_type_t v7 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_4(v7))
    {
      unint64_t v8 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v8);
      OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v6, OS_LOG_TYPE_DEFAULT, "#SiriLocationAccessCheckFlow exitValue - unexpected premature usage of exitValue");
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C9AED138((uint64_t)v13);
    return 0xF000000000000006;
  }
  return v4;
}

uint64_t sub_1C9AE1694()
{
  OUTLINED_FUNCTION_24();
  v1[57] = v2;
  v1[58] = v0;
  uint64_t v3 = type metadata accessor for ExecuteResponse(0);
  v1[59] = v3;
  OUTLINED_FUNCTION_22(v3);
  v1[60] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C9AE1714()
{
  uint64_t v50 = v0;
  unint64_t v1 = *(os_unfair_lock_s **)(*(void *)(v0 + 464) + 216);
  uint64_t v2 = (uint64_t)&v1[4];
  uint64_t v3 = v1 + 15;
  os_unfair_lock_lock(v1 + 15);
  sub_1C9AE2214(v2, v0 + 16);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v0 + 112;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v48 = v0 + 160;
  uint64_t v5 = sub_1C9BECF88();
  *(void *)(v0 + 488) = __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
  sub_1C9AECE24(v0 + 16, v0 + 64);
  uint64_t v6 = sub_1C9BECF78();
  os_log_type_t v7 = sub_1C9BEDC78();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_67();
    v49[0] = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_1C9AECE24(v0 + 64, v0 + 256);
    uint64_t v9 = sub_1C9BED5D8();
    *(void *)(v0 + 448) = sub_1C95FF228(v9, v10, v49);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138(v0 + 64);
    _os_log_impl(&dword_1C95F9000, v6, v7, "#SiriLocationAccessCheckFlow execute - executing under state=%s", v8, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v4 = v0 + 112;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C9AED138(v0 + 64);
  }

  sub_1C9AECE24(v0 + 16, v4);
  switch(*(unsigned char *)(v0 + 152))
  {
    case 1:
    case 3:
      sub_1C9AECE24(v0 + 16, v48);
      char v11 = (void *)sub_1C9BECF78();
      os_log_type_t v12 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_123_0(v12))
      {
        uint64_t v13 = (_DWORD *)OUTLINED_FUNCTION_67();
        v49[0] = OUTLINED_FUNCTION_35_0();
        *uint64_t v13 = 136315138;
        sub_1C9AECE24(v48, v0 + 208);
        uint64_t v14 = sub_1C9BED5D8();
        *(void *)(v0 + 440) = sub_1C95FF228(v14, v15, v49);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9AED138(v48);
        OUTLINED_FUNCTION_249(&dword_1C95F9000, v16, v17, "#SiriLocationAccessCheckFlow execute - unexpected execute()-run during state=%s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {

        sub_1C9AED138(v48);
      }
      sub_1C9AED138(v0 + 16);
      uint64_t v39 = *(void *)(v0 + 472);
      uint64_t v40 = *(void *)(v0 + 456);
      uint64_t v41 = v40 + *(int *)(v39 + 36);
      uint64_t v42 = type metadata accessor for PluginAction();
      OUTLINED_FUNCTION_37_1(v41, v43, v44, v42);
      *(unsigned char *)uint64_t v40 = 1;
      *(void *)(v40 + 8) = 0;
      *(void *)(v40 + 24) = 0;
      *(unsigned char *)(v40 + 16) = 0;
      *(unsigned char *)(v40 + 32) = 7;
      uint64_t v45 = (_OWORD *)(v40 + *(int *)(v39 + 40));
      *uint64_t v45 = 0u;
      v45[1] = 0u;
      goto LABEL_23;
    case 2:
      sub_1C9AE32B4(*(unsigned __int8 *)(v0 + 112));
    case 4:
      *(unsigned char *)(v0 + 57) = *(unsigned char *)(v0 + 112);
      *(void *)(v0 + 512) = *(void *)(v0 + 120);
      uint64_t v23 = (void *)sub_1C9BECF78();
      os_log_type_t v24 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_105(v24))
      {
        uint64_t v25 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_176(v25);
        OUTLINED_FUNCTION_121(&dword_1C95F9000, v26, v27, "#SiriLocationAccessCheckFlow execute - waiting for TCC's updated result...");
        OUTLINED_FUNCTION_11_4();
      }

      uint64_t v28 = (void *)swift_task_alloc();
      *(void *)(v0 + 520) = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
      *uint64_t v28 = v0;
      v28[1] = sub_1C9AE1E50;
      OUTLINED_FUNCTION_6_11();
      return MEMORY[0x1F4187DA0]();
    case 5:
      unint64_t v30 = *(void *)(v0 + 120);
      sub_1C9AE71DC(v30, (os_unfair_lock_s *)*(unsigned __int8 *)(v0 + 112), *(void *)(v0 + 456));
      sub_1C96E9474(v30);
      uint64_t v31 = v0 + 16;
      goto LABEL_20;
    case 6:
      uint64_t v32 = *(void *)(v0 + 472);
      uint64_t v33 = *(void *)(v0 + 456);
      sub_1C9AED138(v0 + 16);
      uint64_t v34 = v33 + *(int *)(v32 + 36);
      uint64_t v35 = type metadata accessor for PluginAction();
      OUTLINED_FUNCTION_37_1(v34, v36, v37, v35);
      *(unsigned char *)uint64_t v33 = 1;
      *(void *)(v33 + 8) = 0;
      *(void *)(v33 + 24) = 0;
      *(unsigned char *)(v33 + 16) = 0;
      *(unsigned char *)(v33 + 32) = 7;
      uint64_t v38 = (_OWORD *)(v33 + *(int *)(v32 + 40));
      *uint64_t v38 = 0u;
      v38[1] = 0u;
      uint64_t v31 = v4;
LABEL_20:
      sub_1C9AED138(v31);
LABEL_23:
      swift_task_dealloc();
      OUTLINED_FUNCTION_22_0();
      OUTLINED_FUNCTION_6_11();
      __asm { BRAA            X1, X16 }
      return result;
    default:
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 496) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_1C9AE1CF0;
      OUTLINED_FUNCTION_6_11();
      return sub_1C9AE2518(v19, v20);
  }
}

uint64_t sub_1C9AE1CF0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 504) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AE1DCC()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AED138(v0 + 16);
  uint64_t v1 = OUTLINED_FUNCTION_33_1();
  sub_1C965C658(v1, v2, v3);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v4();
}

uint64_t sub_1C9AE1E50()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AE1F18()
{
  OUTLINED_FUNCTION_26_0();
  unint64_t v1 = *(void *)(v0 + 400);
  char v2 = *(unsigned char *)(v0 + 408);
  if (v2) {
    unint64_t v3 = v1 | 0x8000000000000000;
  }
  else {
    unint64_t v3 = *(void *)(v0 + 400);
  }
  sub_1C9AE71DC(v3, (os_unfair_lock_s *)*(unsigned __int8 *)(v0 + 57), *(void *)(v0 + 456));
  swift_release();
  sub_1C9AEDA50((id)v1, v2);
  sub_1C9AED138(v0 + 16);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v4();
}

uint64_t sub_1C9AE1FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_48_3();
  a23 = v26;
  a24 = v27;
  OUTLINED_FUNCTION_72_1();
  a22 = v24;
  uint64_t v28 = (uint64_t)(v24 + 2);
  uint64_t v29 = (void *)v24[63];
  sub_1C9AECE24((uint64_t)(v24 + 2), (uint64_t)(v24 + 44));
  id v30 = v29;
  id v31 = v29;
  uint64_t v32 = sub_1C9BECF78();
  os_log_type_t v33 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_65_0(v33))
  {
    a10 = v24 + 52;
    a11 = v24 + 54;
    uint64_t v34 = (void *)v24[63];
    uint64_t v35 = swift_slowAlloc();
    a12 = v24 + 2;
    a13 = OUTLINED_FUNCTION_39_3();
    *(_DWORD *)uint64_t v35 = 136315394;
    sub_1C9AECE24((uint64_t)(v24 + 44), (uint64_t)(v24 + 38));
    uint64_t v36 = sub_1C9BED5D8();
    v24[52] = sub_1C95FF228(v36, v37, &a13);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)(v24 + 44));
    *(_WORD *)(v35 + 12) = 2080;
    v24[53] = v34;
    id v38 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v39 = sub_1C9BED5D8();
    v24[54] = sub_1C95FF228(v39, v40, &a13);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C95F9000, v32, v25, "#SiriLocationAccessCheckFlow execute - failed during state=%s; error=%s",
      (uint8_t *)v35,
      0x16u);
    swift_arrayDestroy();
    uint64_t v28 = (uint64_t)(v24 + 2);
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v41 = (void *)v24[63];
    sub_1C9AED138((uint64_t)(v24 + 44));
  }
  uint64_t v42 = (void *)v24[63];
  uint64_t v43 = v24[57];
  id v44 = v42;
  sub_1C9AE2240(v43);

  sub_1C9AED138(v28);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_94();
  return v46(v45, v46, v47, v48, v49, v50, v51, v52, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_1C9AE2214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C9AECE24(a1, a2);
}

double sub_1C9AE2240@<D0>(uint64_t a1@<X8>)
{
  OUTLINED_FUNCTION_107_6(*(os_unfair_lock_s **)(v1 + 216));
  uint64_t v4 = OUTLINED_FUNCTION_99_7();
  sub_1C9AEDA30(v4);
  os_unfair_lock_unlock(v2);
  return static ExecuteResponse.complete()(a1);
}

uint64_t sub_1C9AE229C(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 a4)
{
  sub_1C9AED120((long long *)a1, v21);
  sub_1C9AEC23C(a3, a4, (unint64_t *)a1);
  *(unsigned char *)(a1 + 40) = 6;
  sub_1C9AECE24(a1, (uint64_t)v20);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C9BECF88();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
  sub_1C9AECE24((uint64_t)v20, (uint64_t)v19);
  sub_1C9AECE24((uint64_t)v21, (uint64_t)v18);
  uint64_t v8 = sub_1C9BECF78();
  os_log_type_t v9 = sub_1C9BEDC78();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_1C9AECE24((uint64_t)v19, (uint64_t)v17);
    uint64_t v12 = sub_1C9BED5D8();
    v17[0] = sub_1C95FF228(v12, v13, &v22);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v19);
    *(_WORD *)(v10 + 12) = 2080;
    sub_1C9AECE24((uint64_t)v18, (uint64_t)v17);
    uint64_t v14 = sub_1C9BED5D8();
    v17[0] = sub_1C95FF228(v14, v15, &v22);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v18);
    _os_log_impl(&dword_1C95F9000, v8, v9, "#SiriLocationAccessCheckFlow exitWithValue - transitioned to state=%s; \n lastState=%s",
      (uint8_t *)v10,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v11, -1, -1);
    MEMORY[0x1CB78C440](v10, -1, -1);
  }
  else
  {

    sub_1C9AED138((uint64_t)v18);
    sub_1C9AED138((uint64_t)v19);
  }
  sub_1C9AED138((uint64_t)v20);
  return sub_1C9AED138((uint64_t)v21);
}

uint64_t sub_1C9AE2518(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 48) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AE2534);
}

uint64_t sub_1C9AE2534()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_21_1((void *)(*(void *)(v0 + 24) + 56), *(void *)(*(void *)(v0 + 24) + 80));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9AE25CC;
  return sub_1C98CA894();
}

uint64_t sub_1C9AE25CC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  *uint64_t v3 = *v1;
  *(void *)(v2 + 40) = v4;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_22_0();
    return v5();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
}

uint64_t sub_1C9AE26CC()
{
  OUTLINED_FUNCTION_24();
  unint64_t v1 = *(void *)(v0 + 40);
  if ((~v1 & 0xF000000000000006) == 0) {
    sub_1C9AE2778();
  }
  if ((v1 & 0x8000000000000000) == 0 && (v1 & 1) == 0 && *(unsigned char *)(v0 + 48)) {
    sub_1C9AE2778();
  }
  sub_1C9AE2240(*(void *)(v0 + 16));
  sub_1C96E945C(v1);
  OUTLINED_FUNCTION_90();
  return v2();
}

void sub_1C9AE2778()
{
  uint64_t v1 = v0;
  sub_1C95FD5F0(v0 + 16, (uint64_t)v12);
  type metadata accessor for GuardedAuthenticationFlow();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 104) = &type metadata for LocationAccessUnlockDeviceStrategy;
  *(void *)(v2 + 112) = &off_1F23F6F08;
  *(unsigned char *)(v2 + 16) = 1;
  *(unsigned char *)(v2 + 120) = 0;
  *(void *)(v2 + 24) = sub_1C9AED990;
  *(void *)(v2 + 32) = v0;
  sub_1C95FD5D8(v12, v2 + 40);
  uint64_t v3 = *(os_unfair_lock_s **)(v0 + 216);
  os_log_type_t v4 = (_BYTE)v3 + 16;
  uint64_t v5 = v3 + 15;
  swift_retain_n();
  os_unfair_lock_lock(v5);
  uint64_t v6 = OUTLINED_FUNCTION_99_7();
  sub_1C9AED998(v6);
  os_unfair_lock_unlock(v5);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1C9BECF88();
  uint64_t v8 = OUTLINED_FUNCTION_34(v7, (uint64_t)qword_1EBC7A520);
  os_log_type_t v9 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_105(v9))
  {
    uint64_t v10 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1C95F9000, v8, v4, "#SiriLocationAccessCheckFlow waitForUnlock - waiting for confirmed, unlocked device...", v10, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C9AED9C0;
  *(void *)(v11 + 24) = v1;
  sub_1C9BEC838();
}

void sub_1C9AE2950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C9B26778(a1, a2, a3, a4, a5, a6);
  sub_1C95FD5F0(a1 + 16, (uint64_t)v12);
  sub_1C95FD5F0(a1 + 96, (uint64_t)v10);
  type metadata accessor for UnlockDeviceFlowAsync(0);
  swift_allocObject();
  uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
  MEMORY[0x1F4188790](v7, v7);
  (*(void (**)(unsigned char *))(v9 + 16))(&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  sub_1C9B27E44();
}

void sub_1C9AE2AA4(char a1)
{
}

void sub_1C9AE2ACC(char a1)
{
  int v2 = a1 & 1;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C9BECF88();
  os_log_type_t v4 = OUTLINED_FUNCTION_34(v3, (uint64_t)qword_1EBC7A520);
  os_log_type_t v5 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_62_5(v5))
  {
    uint64_t v6 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v7 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v13 = v7;
    if (v2) {
      uint64_t v8 = 1818845542;
    }
    else {
      uint64_t v8 = 1936941424;
    }
    sub_1C95FF228(v8, 0xE400000000000000, &v13);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v4, (os_log_type_t)v1, "#SiriLocationAccessCheckFlow onUnlockResult - unlock guardFlow result=%s", v6, 0xCu);
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }

  MEMORY[0x1F4188790](v9, v10);
  uint64_t v12 = (uint64_t)&v11[4];
  OUTLINED_FUNCTION_107_6(v11);
  sub_1C9AED970(v12);
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1C9AE2C64(uint64_t a1, char a2)
{
  sub_1C9AECE24(a1, (uint64_t)v38);
  sub_1C9AECE24(a1, (uint64_t)v36);
  if (v37 != 1)
  {
    sub_1C9AED138((uint64_t)v36);
    sub_1C9AECE24(a1, (uint64_t)v36);
    if (v37 == 6)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v5 = sub_1C9BECF88();
      __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
      sub_1C9AECE24((uint64_t)v38, (uint64_t)v35);
      uint64_t v6 = sub_1C9BECF78();
      os_log_type_t v7 = sub_1C9BEDC88();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        v33[0] = v9;
        *(_DWORD *)uint64_t v8 = 136315138;
        sub_1C9AECE24((uint64_t)v35, (uint64_t)v34);
        uint64_t v10 = sub_1C9BED5D8();
        v34[0] = sub_1C95FF228(v10, v11, v33);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9AED138((uint64_t)v35);
        uint64_t v12 = "#SiriLocationAccessCheckFlow onUnlockResult - ignoring late unlockResult during state=%s";
LABEL_22:
        _os_log_impl(&dword_1C95F9000, v6, v7, v12, v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1CB78C440](v9, -1, -1);
        MEMORY[0x1CB78C440](v8, -1, -1);

LABEL_26:
        sub_1C9AED138((uint64_t)v38);
        id v31 = v36;
        return sub_1C9AED138((uint64_t)v31);
      }
    }
    else
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1C9BECF88();
      __swift_project_value_buffer(v28, (uint64_t)qword_1EBC7A520);
      sub_1C9AECE24((uint64_t)v38, (uint64_t)v35);
      uint64_t v6 = sub_1C9BECF78();
      os_log_type_t v7 = sub_1C9BEDC88();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        uint64_t v9 = swift_slowAlloc();
        v33[0] = v9;
        *(_DWORD *)uint64_t v8 = 136315138;
        sub_1C9AECE24((uint64_t)v35, (uint64_t)v34);
        uint64_t v29 = sub_1C9BED5D8();
        v34[0] = sub_1C95FF228(v29, v30, v33);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9AED138((uint64_t)v35);
        uint64_t v12 = "#SiriLocationAccessCheckFlow onUnlockResult - unsupported unlockResult during state=%s";
        goto LABEL_22;
      }
    }

    sub_1C9AED138((uint64_t)v35);
    goto LABEL_26;
  }
  sub_1C9AED138(a1);
  unsigned __int8 v4 = v36[0];
  if (a2)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1C9BECF88();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EBC7A520);
    uint64_t v14 = sub_1C9BECF78();
    os_log_type_t v15 = sub_1C9BEDC68();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_1C95F9000, v14, v15, "#SiriLocationAccessCheckFlow onUnlockResult - cannot issue privacy prompt with locked device", v16, 2u);
      MEMORY[0x1CB78C440](v16, -1, -1);
    }

    sub_1C9AED0D4();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = 0;
    sub_1C9AEC23C(v17 | 0x8000000000000000, v4, (unint64_t *)v36);

    char v37 = 6;
    sub_1C9AED120(v36, (_OWORD *)a1);
  }
  else
  {
    *(unsigned char *)a1 = v36[0];
    *(unsigned char *)(a1 + 40) = 2;
  }
  sub_1C9AECE24(a1, (uint64_t)v36);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C9BECF88();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
  sub_1C9AECE24((uint64_t)v36, (uint64_t)v35);
  sub_1C9AECE24((uint64_t)v38, (uint64_t)v34);
  char v20 = sub_1C9BECF78();
  os_log_type_t v21 = sub_1C9BEDC78();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v39 = v23;
    *(_DWORD *)uint64_t v22 = 136315394;
    sub_1C9AECE24((uint64_t)v35, (uint64_t)v33);
    uint64_t v24 = sub_1C9BED5D8();
    v33[0] = sub_1C95FF228(v24, v25, &v39);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v35);
    *(_WORD *)(v22 + 12) = 2080;
    sub_1C9AECE24((uint64_t)v34, (uint64_t)v33);
    uint64_t v26 = sub_1C9BED5D8();
    v33[0] = sub_1C95FF228(v26, v27, &v39);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v34);
    _os_log_impl(&dword_1C95F9000, v20, v21, "#SiriLocationAccessCheckFlow onUnlockResult - transitioned to state=%s; \n lastState=%s",
      (uint8_t *)v22,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v23, -1, -1);
    MEMORY[0x1CB78C440](v22, -1, -1);
  }
  else
  {

    sub_1C9AED138((uint64_t)v34);
    sub_1C9AED138((uint64_t)v35);
  }
  sub_1C9AED138((uint64_t)v36);
  id v31 = (long long *)v38;
  return sub_1C9AED138((uint64_t)v31);
}

void sub_1C9AE32B4(uint64_t a1)
{
  int v2 = v1;
  unsigned __int8 v4 = (os_unfair_lock_s *)(v1[27] + 60);
  os_unfair_lock_lock(v4);
  uint64_t v5 = OUTLINED_FUNCTION_99_7();
  sub_1C9AED554(v5);
  os_unfair_lock_unlock(v4);
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v6);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7))
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C9BECF88();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_34(v8, (uint64_t)qword_1EBC7A520);
    os_log_type_t v10 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v10))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_161(&dword_1C95F9000, v11, v12, "#SiriLocationAccessCheckFlow executeAccessPrompt - TCC_Task skipped on carPlay");
      OUTLINED_FUNCTION_11_4();
    }

    ((void (*)(uint64_t, void *, void))v2[22])(a1, v2 + 2, *((unsigned __int8 *)v2 + 192));
    sub_1C95FD5F0((uint64_t)(v2 + 12), (uint64_t)v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5892A0);
    swift_allocObject();
    sub_1C9BEC838();
  }
  sub_1C9AE3880(a1);
}

uint64_t sub_1C9AE350C(uint64_t a1, char a2, char a3, const char *a4)
{
  sub_1C9AED120((long long *)a1, v22);
  *(unsigned char *)a1 = a2;
  *(unsigned char *)(a1 + 40) = a3;
  sub_1C9AECE24(a1, (uint64_t)v21);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_1C9BECF88();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
  sub_1C9AECE24((uint64_t)v21, (uint64_t)v20);
  sub_1C9AECE24((uint64_t)v22, (uint64_t)v19);
  uint64_t v9 = sub_1C9BECF78();
  os_log_type_t v10 = sub_1C9BEDC78();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    sub_1C9AECE24((uint64_t)v20, (uint64_t)v18);
    uint64_t v13 = sub_1C9BED5D8();
    sub_1C95FF228(v13, v14, &v23);
    OUTLINED_FUNCTION_105_6();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v20);
    *(_WORD *)(v11 + 12) = 2080;
    sub_1C9AECE24((uint64_t)v19, (uint64_t)v18);
    uint64_t v15 = sub_1C9BED5D8();
    sub_1C95FF228(v15, v16, &v23);
    OUTLINED_FUNCTION_105_6();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v19);
    _os_log_impl(&dword_1C95F9000, v9, v10, a4, (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v12, -1, -1);
    MEMORY[0x1CB78C440](v11, -1, -1);
  }
  else
  {

    sub_1C9AED138((uint64_t)v19);
    sub_1C9AED138((uint64_t)v20);
  }
  sub_1C9AED138((uint64_t)v21);
  return sub_1C9AED138((uint64_t)v22);
}

void sub_1C9AE375C(uint64_t *a1)
{
  __int16 v1 = *((_WORD *)a1 + 4);
  uint64_t v2 = *a1;
  __int16 v3 = v1;
  sub_1C9AE5004((uint64_t)&v2);
}

void sub_1C9AE379C()
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v3 = OUTLINED_FUNCTION_22(v2);
  MEMORY[0x1F4188790](v3, v4);
  OUTLINED_FUNCTION_34_0();
  if (*(unsigned char *)(v1 + 208) == 1)
  {
    *(unsigned char *)(v1 + 208) = 0;
    OUTLINED_FUNCTION_21_1((void *)(v1 + 56), *(void *)(v1 + 80));
    uint64_t v5 = sub_1C9BEDA58();
    OUTLINED_FUNCTION_37_1(v0, v6, v7, v5);
    sub_1C9AED410(v1, (uint64_t)v10);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = 0;
    long long v9 = v10[1];
    *(_OWORD *)(v8 + 32) = v10[0];
    *(_OWORD *)(v8 + 48) = v9;
    *(void *)(v8 + 64) = v11;
    sub_1C96B9288();
    swift_release();
  }
}

void sub_1C9AE3880(char a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v4 = OUTLINED_FUNCTION_22(v3);
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_6_0();
  uint64_t v8 = v7 - v6;
  *(unsigned char *)(v1 + 208) = 1;
  uint64_t v9 = sub_1C9BEDA58();
  OUTLINED_FUNCTION_37_1(v8, v10, v11, v9);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = v1;
  *(unsigned char *)(v12 + 40) = a1;
  sub_1C9BEC838();
}

uint64_t sub_1C9AE3954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 224) = a5;
  *(void *)(v5 + 152) = a4;
  return MEMORY[0x1F4188298](sub_1C9AE3978, 0, 0);
}

uint64_t sub_1C9AE3978()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  *(void *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = (void *)sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "#SiriLocationAccessCheckFlow startTCCRequest - issuing TCC prompt to request location access; waiting for response...");
    OUTLINED_FUNCTION_11_4();
  }
  unsigned int v7 = *(unsigned __int8 *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 152);

  OUTLINED_FUNCTION_21_1((void *)(v8 + 56), *(void *)(v8 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C9AE3AAC;
  return sub_1C98CB284(v7 >> 7);
}

uint64_t sub_1C9AE3AAC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v3 = v2;
  *os_log_type_t v3 = *v1;
  *(void *)(v2 + 176) = v4;
  *(void *)(v2 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

void sub_1C9AE3B90()
{
  OUTLINED_FUNCTION_98();
  unint64_t v25 = v0;
  unint64_t v1 = v0[22];
  sub_1C96E9444(v1);
  sub_1C96E9444(v1);
  uint64_t v2 = (void *)sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_105(v3))
  {
    unint64_t v4 = v0[22];
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_67();
    uint64_t v6 = OUTLINED_FUNCTION_35_0();
    *uint64_t v5 = 136315138;
    v24[0] = v6;
    v0[17] = v4;
    sub_1C96E9444(v4);
    uint64_t v7 = sub_1C9BED5D8();
    v0[18] = sub_1C95FF228(v7, v8, v24);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C96E9474(v4);
    sub_1C96E9474(v4);
    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v9, v10, "#SiriLocationAccessCheckFlow startTCCRequest - location access request tccResult=%s");
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    unint64_t v11 = v0[22];
    sub_1C96E9474(v11);
    sub_1C96E9474(v11);
  }

  unint64_t v12 = v0[22];
  uint64_t v13 = v0[23];
  v0[24] = v12;
  unint64_t v14 = *(os_unfair_lock_s **)(v0[19] + 216);
  *(void *)(swift_task_alloc() + 16) = v12;
  uint64_t v15 = (uint64_t)&v14[4];
  v14 += 15;
  os_unfair_lock_lock(v14);
  sub_1C9AED3AC(v15, (BOOL *)v24);
  os_unfair_lock_unlock(v14);
  if (!v13)
  {
    char v16 = v24[0];
    swift_task_dealloc();
    if (v16) {
      sub_1C9AE4EBC();
    }
    uint64_t v17 = (void *)sub_1C9BECF78();
    os_log_type_t v18 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_105(v18))
    {
      uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_176(v19);
      OUTLINED_FUNCTION_121(&dword_1C95F9000, v20, v21, "#SiriLocationAccessCheckFlow startTCCRequest - no need to cancel Siri prompt");
      OUTLINED_FUNCTION_11_4();

      sub_1C96E9474(v12);
    }
    else
    {
      sub_1C96E9474(v12);
    }
    OUTLINED_FUNCTION_22_0();
    OUTLINED_FUNCTION_1_40();
    __asm { BRAA            X1, X16 }
  }
  OUTLINED_FUNCTION_1_40();
}

void sub_1C9AE3EE0()
{
  uint64_t v48 = v0;
  unint64_t v1 = *(void **)(v0 + 184);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = (void *)(v0 + 72);
  id v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
  type metadata accessor for AFLocationServiceError(0);
  os_log_type_t v5 = v4;
  char v6 = swift_dynamicCast();
  uint64_t v7 = *(void **)(v0 + 184);
  if (v6)
  {
    unint64_t v8 = (unint64_t *)(v0 + 80);

    unint64_t v9 = (unint64_t)*(id *)(v0 + 24);
    uint64_t v10 = sub_1C9BECF78();
    os_log_type_t v11 = sub_1C9BEDC88();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)OUTLINED_FUNCTION_67();
      v47[0] = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)unint64_t v12 = 136315138;
      *(void *)(v0 + 120) = v9;
      id v13 = (id)v9;
      uint64_t v14 = sub_1C9BED5D8();
      *(void *)(v0 + 128) = sub_1C95FF228(v14, v15, v47);
      sub_1C9BEDF68();

      unint64_t v8 = (unint64_t *)(v0 + 80);
      uint64_t v2 = (void *)(v0 + 72);
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C95F9000, v10, v11, "#SiriLocationAccessCheckFlow startTCCRequest - location access request failed; AFLocationServiceError=%s",
        v12,
        0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
    }
    *unint64_t v8 = v9;
    sub_1C9AED3C8((unint64_t *)&qword_1EA588528, 255, type metadata accessor for AFLocationServiceError);
    sub_1C9BEA888();
    if (*v2 == 1 || (OUTLINED_FUNCTION_109_6(), *(void *)(v0 + 88) == 2))
    {
      unint64_t v27 = sub_1C9BECF78();
      os_log_type_t v28 = sub_1C9BEDC88();
      unint64_t v29 = 0xC000000000000008;
      if (OUTLINED_FUNCTION_96(v28))
      {
        unint64_t v30 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_49(v30);
        OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v27, v5, "#SiriLocationAccessCheckFlow startTCCRequest - request-ending cancelation");
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
      }
      char v31 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_109_6();
      if (*(void *)(v0 + 104) == 3)
      {
        unint64_t v29 = 0xC000000000000008;
        unint64_t v40 = sub_1C9BECF78();
        os_log_type_t v41 = sub_1C9BEDC88();
        if (OUTLINED_FUNCTION_96(v41))
        {
          uint64_t v42 = (_WORD *)OUTLINED_FUNCTION_19();
          OUTLINED_FUNCTION_49(v42);
          OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v40, v5, "#SiriLocationAccessCheckFlow startTCCRequest - timeout cancelation");
          OUTLINED_FUNCTION_11_4();
        }
        else
        {
        }
        char v31 = 0;
      }
      else
      {
        char v31 = 0;
        unint64_t v29 = v9 | 0x8000000000000000;
      }
    }
  }
  else
  {

    id v16 = v7;
    id v17 = v7;
    os_log_type_t v18 = sub_1C9BECF78();
    os_log_type_t v19 = sub_1C9BEDC88();
    BOOL v20 = OUTLINED_FUNCTION_96(v19);
    uint64_t v21 = *(void **)(v0 + 184);
    if (v20)
    {
      uint64_t v22 = (uint8_t *)OUTLINED_FUNCTION_67();
      uint64_t v23 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)uint64_t v22 = 136315138;
      v47[0] = v23;
      *(void *)(v0 + 56) = v21;
      id v24 = v21;
      uint64_t v25 = sub_1C9BED5D8();
      *(void *)(v0 + 64) = sub_1C95FF228(v25, v26, v47);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C95F9000, v18, v5, "#SiriLocationAccessCheckFlow startTCCRequest - location access request failed; error=%s",
        v22,
        0xCu);
      OUTLINED_FUNCTION_201();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
    }
    char v31 = 0;
    unint64_t v29 = *(void *)(v0 + 184) | 0x8000000000000000;
  }
  *(void *)(v0 + 192) = v29;
  uint64_t v32 = *(os_unfair_lock_s **)(*(void *)(v0 + 152) + 216);
  *(void *)(swift_task_alloc() + 16) = v29;
  os_unfair_lock_lock(v32 + 15);
  sub_1C9AED3AC((uint64_t)&v32[4], (BOOL *)v47);
  os_unfair_lock_unlock(v32 + 15);
  int v33 = LOBYTE(v47[0]);
  swift_task_dealloc();
  if (v31)
  {
    uint64_t v34 = (void *)sub_1C9BECF78();
    os_log_type_t v35 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v35))
    {
      uint64_t v36 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v36);
      uint64_t v39 = "#SiriLocationAccessCheckFlow startTCCRequest - no active request to cancel Siri prompt";
LABEL_26:
      OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v37, v38, v39);
      OUTLINED_FUNCTION_11_4();

      sub_1C96E9474(v29);
      goto LABEL_28;
    }
  }
  else
  {
    if (v33) {
      sub_1C9AE4EBC();
    }
    uint64_t v34 = (void *)sub_1C9BECF78();
    os_log_type_t v43 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v43))
    {
      id v44 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v44);
      uint64_t v39 = "#SiriLocationAccessCheckFlow startTCCRequest - no need to cancel Siri prompt";
      goto LABEL_26;
    }
  }
  sub_1C96E9474(v29);

LABEL_28:
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_38_5();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_1C9AE4588()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  void *v2 = *v0;
  *(unsigned char *)(v1 + 225) = v3;
  *(void *)(v1 + 216) = v4;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9AE465C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v24;
  a22 = v25;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  unint64_t v26 = *(void **)(v22 + 216);
  if (v26)
  {
    id v27 = v26;
    id v28 = v26;
    id v29 = v26;
    unint64_t v30 = sub_1C9BECF78();
    os_log_type_t v31 = sub_1C9BEDC88();
    BOOL v32 = OUTLINED_FUNCTION_96(v31);
    unint64_t v33 = *(void *)(v22 + 192);
    uint64_t v34 = *(void **)(v22 + 200);
    if (v32)
    {
      a10 = *(void *)(v22 + 192);
      a9 = *(void **)(v22 + 200);
      os_log_type_t v35 = (uint8_t *)OUTLINED_FUNCTION_67();
      a11 = OUTLINED_FUNCTION_35_0();
      *(_DWORD *)os_log_type_t v35 = 136315138;
      *(void *)(v22 + 40) = v26;
      id v36 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
      uint64_t v37 = sub_1C9BED5D8();
      *(void *)(v22 + 48) = sub_1C95FF228(v37, v38, &a11);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C95F9000, v30, v23, "#SiriLocationAccessCheckFlow startTCCRequest - cancel Siri prompt failed; error=%s",
        v35,
        0xCu);
      OUTLINED_FUNCTION_201();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

LABEL_12:
      sub_1C96E9474(a10);
      goto LABEL_16;
    }

    sub_1C96E9474(v33);
  }
  else
  {
    unint64_t v30 = sub_1C9BECF78();
    os_log_type_t v39 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v39))
    {
      int v40 = *(unsigned __int8 *)(v22 + 225);
      a9 = *(void **)(v22 + 200);
      a10 = *(void *)(v22 + 192);
      os_log_type_t v41 = (_DWORD *)OUTLINED_FUNCTION_67();
      uint64_t v42 = OUTLINED_FUNCTION_35_0();
      _DWORD *v41 = 136315138;
      a11 = v42;
      if (v40) {
        uint64_t v43 = 1702195828;
      }
      else {
        uint64_t v43 = 0x65736C6166;
      }
      if (v40) {
        unint64_t v44 = 0xE400000000000000;
      }
      else {
        unint64_t v44 = 0xE500000000000000;
      }
      *(void *)(v22 + 32) = sub_1C95FF228(v43, v44, &a11);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_25(&dword_1C95F9000, v45, v46, "#SiriLocationAccessCheckFlow startTCCRequest - cancelled Siri prompt; abortResult=%s");
      OUTLINED_FUNCTION_201();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      goto LABEL_12;
    }
    uint64_t v47 = *(void **)(v22 + 200);
    sub_1C96E9474(*(void *)(v22 + 192));
  }
LABEL_16:
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_10_1();
  return v49(v48, v49, v50, v51, v52, v53, v54, v55, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_1C9AE491C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, BOOL *a3@<X8>)
{
  sub_1C9AECE24(a1, (uint64_t)v37);
  sub_1C9AECE24(a1, (uint64_t)v35);
  int v6 = v36;
  if (v36 == 3)
  {
    sub_1C9AED138(a1);
    *(unsigned char *)a1 = v35[0];
    *(void *)(a1 + 8) = a2;
    *(unsigned char *)(a1 + 40) = 5;
    sub_1C9AECE24(a1, (uint64_t)v35);
    sub_1C96E9444(a2);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_1C9BECF88();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
    sub_1C9AECE24((uint64_t)v35, (uint64_t)v34);
    sub_1C9AECE24((uint64_t)v37, (uint64_t)v33);
    unint64_t v8 = sub_1C9BECF78();
    os_log_type_t v9 = sub_1C9BEDC78();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v38 = v11;
      *(_DWORD *)uint64_t v10 = 136315394;
      sub_1C9AECE24((uint64_t)v34, (uint64_t)v32);
      uint64_t v12 = sub_1C9BED5D8();
      v32[0] = sub_1C95FF228(v12, v13, &v38);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9AED138((uint64_t)v34);
      *(_WORD *)(v10 + 12) = 2080;
      sub_1C9AECE24((uint64_t)v33, (uint64_t)v32);
      uint64_t v14 = sub_1C9BED5D8();
      v32[0] = sub_1C95FF228(v14, v15, &v38);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9AED138((uint64_t)v33);
      _os_log_impl(&dword_1C95F9000, v8, v9, "#SiriLocationAccessCheckFlow startTCCRequest - transitioned to state=%s; \n lastState=%s",
        (uint8_t *)v10,
        0x16u);
      swift_arrayDestroy();
      uint64_t v16 = v11;
      int v6 = 3;
      MEMORY[0x1CB78C440](v16, -1, -1);
      MEMORY[0x1CB78C440](v10, -1, -1);
    }
    else
    {

      sub_1C9AED138((uint64_t)v33);
      sub_1C9AED138((uint64_t)v34);
    }
    sub_1C9AED138((uint64_t)v35);
    os_log_type_t v18 = v37;
    goto LABEL_22;
  }
  sub_1C9AED138((uint64_t)v35);
  sub_1C9AECE24(a1, (uint64_t)v35);
  if (v36 != 4)
  {
    sub_1C9AED138((uint64_t)v35);
    sub_1C9AECE24(a1, (uint64_t)v35);
    if (v36 == 6)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v19 = sub_1C9BECF88();
      __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
      sub_1C9AECE24((uint64_t)v37, (uint64_t)v34);
      BOOL v20 = sub_1C9BECF78();
      os_log_type_t v21 = sub_1C9BEDC88();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        int v31 = v6;
        uint64_t v23 = swift_slowAlloc();
        v32[0] = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        sub_1C9AECE24((uint64_t)v34, (uint64_t)v33);
        uint64_t v24 = sub_1C9BED5D8();
        v33[0] = sub_1C95FF228(v24, v25, v32);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9AED138((uint64_t)v34);
        unint64_t v26 = "#SiriLocationAccessCheckFlow startTCCRequest - ignoring late TCC result during state=%s";
LABEL_19:
        _os_log_impl(&dword_1C95F9000, v20, v21, v26, v22, 0xCu);
        swift_arrayDestroy();
        uint64_t v30 = v23;
        int v6 = v31;
        MEMORY[0x1CB78C440](v30, -1, -1);
        MEMORY[0x1CB78C440](v22, -1, -1);

LABEL_21:
        sub_1C9AED138((uint64_t)v37);
        os_log_type_t v18 = v35;
LABEL_22:
        uint64_t result = sub_1C9AED138((uint64_t)v18);
        goto LABEL_23;
      }
    }
    else
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v27 = sub_1C9BECF88();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EBC7A520);
      sub_1C9AECE24((uint64_t)v37, (uint64_t)v34);
      BOOL v20 = sub_1C9BECF78();
      os_log_type_t v21 = sub_1C9BEDC88();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        int v31 = v6;
        uint64_t v23 = swift_slowAlloc();
        v32[0] = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        sub_1C9AECE24((uint64_t)v34, (uint64_t)v33);
        uint64_t v28 = sub_1C9BED5D8();
        v33[0] = sub_1C95FF228(v28, v29, v32);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9AED138((uint64_t)v34);
        unint64_t v26 = "#SiriLocationAccessCheckFlow startTCCRequest - unsupported TCC result during state=%s";
        goto LABEL_19;
      }
    }

    sub_1C9AED138((uint64_t)v34);
    goto LABEL_21;
  }
  sub_1C9AED138((uint64_t)v37);
  uint64_t result = swift_release();
LABEL_23:
  *a3 = v6 == 3;
  return result;
}

void sub_1C9AE4EBC()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  OUTLINED_FUNCTION_134_0();
  DeviceState.asInvocationContext.getter();
}

void sub_1C9AE5004(uint64_t a1)
{
  unint64_t v1 = *(void *)a1;
  uint64_t v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 9);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_1C9BECF88();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EBC7A520);
  OUTLINED_FUNCTION_87_13();
  OUTLINED_FUNCTION_87_13();
  uint64_t v5 = (void *)sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_123_0(v6))
  {
    uint64_t v7 = (_DWORD *)OUTLINED_FUNCTION_67();
    uint64_t v18 = OUTLINED_FUNCTION_35_0();
    *uint64_t v7 = 136315138;
    OUTLINED_FUNCTION_87_13();
    uint64_t v8 = sub_1C9725800(v1, v2 | (v3 << 8));
    unint64_t v10 = v9;
    OUTLINED_FUNCTION_86_14();
    sub_1C95FF228(v8, v10, &v18);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C972978C(v1, v2, v3);
    OUTLINED_FUNCTION_86_14();
    OUTLINED_FUNCTION_249(&dword_1C95F9000, v11, v12, "#SiriLocationAccessCheckFlow onSiriPromptResult - Siri prompt result=%s");
    OUTLINED_FUNCTION_201();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C972978C(v1, v2, v3);
    OUTLINED_FUNCTION_86_14();
  }

  MEMORY[0x1F4188790](v13, v14);
  uint64_t v16 = (uint64_t)&v15[4];
  id v17 = v15 + 15;
  os_unfair_lock_lock(v15 + 15);
  sub_1C9AED2A4(v16);
  os_unfair_lock_unlock(v17);
  sub_1C9AE379C();
}

uint64_t sub_1C9AE5208(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  sub_1C9AECE24(a1, (uint64_t)v30);
  sub_1C9AECE24(a1, (uint64_t)&v27);
  if (v29 == 3)
  {
    sub_1C9AED138(a1);
    char v7 = v27;
    uint64_t v27 = a3;
    LOWORD(v28) = a4;
    sub_1C9AE5804(&v27, v7);
  }
  sub_1C9AED138((uint64_t)&v27);
  sub_1C9AECE24(a1, (uint64_t)&v27);
  if (v29 == 5)
  {
    sub_1C96E9474(v28);
    goto LABEL_7;
  }
  if (v29 == 6)
  {
    sub_1C9AED138((uint64_t)&v27);
LABEL_7:
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C9BECF88();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
    sub_1C9AECE24((uint64_t)v30, (uint64_t)&v27);
    unint64_t v9 = sub_1C9BECF78();
    os_log_type_t v10 = sub_1C9BEDC88();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      v25[0] = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_1C9AECE24((uint64_t)&v27, (uint64_t)v26);
      uint64_t v13 = sub_1C9BED5D8();
      v26[0] = sub_1C95FF228(v13, v14, v25);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9AED138((uint64_t)&v27);
      _os_log_impl(&dword_1C95F9000, v9, v10, "#SiriLocationAccessCheckFlow onSiriPromptResult - ignoring late Siri prompt result during state=%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v12, -1, -1);
      MEMORY[0x1CB78C440](v11, -1, -1);
    }
    else
    {

      sub_1C9AED138((uint64_t)&v27);
    }
    uint64_t v22 = (uint64_t *)v30;
    return sub_1C9AED138((uint64_t)v22);
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C9BECF88();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBC7A520);
  sub_1C9AECE24((uint64_t)v30, (uint64_t)v26);
  uint64_t v16 = sub_1C9BECF78();
  os_log_type_t v17 = sub_1C9BEDC88();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v24[0] = v19;
    *(_DWORD *)uint64_t v18 = 136315138;
    sub_1C9AECE24((uint64_t)v26, (uint64_t)v25);
    uint64_t v20 = sub_1C9BED5D8();
    v25[0] = sub_1C95FF228(v20, v21, v24);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v26);
    _os_log_impl(&dword_1C95F9000, v16, v17, "#SiriLocationAccessCheckFlow onSiriPromptResult - unsupported Siri prompt result during state=%s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v19, -1, -1);
    MEMORY[0x1CB78C440](v18, -1, -1);
  }
  else
  {

    sub_1C9AED138((uint64_t)v26);
  }
  sub_1C9AED138((uint64_t)v30);
  uint64_t v22 = &v27;
  return sub_1C9AED138((uint64_t)v22);
}

void sub_1C9AE5804(uint64_t *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  uint64_t v7 = OUTLINED_FUNCTION_22(v6);
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = *a1;
  char v13 = *((unsigned char *)a1 + 9);
  char v14 = *((unsigned char *)a1 + 8);
  uint64_t v15 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v15);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  *(void *)(v16 + 24) = 0;
  *(void *)(v16 + 32) = v3;
  *(void *)(v16 + 40) = v12;
  *(unsigned char *)(v16 + 48) = v14;
  *(unsigned char *)(v16 + 49) = v13;
  *(unsigned char *)(v16 + 50) = a2;
  __swift_getEnumTagSinglePayload(v11, 1, v15);
  sub_1C9BEC838();
}

uint64_t sub_1C9AE5A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, char a7)
{
  *(unsigned char *)(v7 + 218) = a7;
  *(_WORD *)(v7 + 216) = a6;
  *(void *)(v7 + 120) = a4;
  *(void *)(v7 + 128) = a5;
  *(void *)(v7 + 112) = a1;
  return MEMORY[0x1F4188298](sub_1C9AE5A3C, 0, 0);
}

uint64_t sub_1C9AE5A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  __int16 v25 = *(_WORD *)(v22 + 216);
  char v26 = *(unsigned char *)(v22 + 218);
  a10 = *(void *)(v22 + 128);
  LOWORD(a11) = v25;
  unint64_t v27 = sub_1C9AE7094((uint64_t)&a10, v26);
  unint64_t v29 = v27;
  *(void *)(v22 + 136) = v27;
  *(unsigned char *)(v22 + 219) = v28;
  if (!v28)
  {
    sub_1C96E9444(v27);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v42 = sub_1C9BECF88();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EBC7A520);
    sub_1C96E9444(v29);
    sub_1C96E9444(v29);
    uint64_t v43 = (void *)sub_1C9BECF78();
    os_log_type_t v44 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_65_0(v44))
    {
      uint64_t v45 = (_DWORD *)OUTLINED_FUNCTION_67();
      a10 = OUTLINED_FUNCTION_35_0();
      *uint64_t v45 = 136315138;
      *(void *)(v22 + 88) = v29;
      sub_1C96E9444(v29);
      uint64_t v46 = sub_1C9BED5D8();
      *(void *)(v22 + 72) = sub_1C95FF228(v46, v47, &a10);
      OUTLINED_FUNCTION_135_2();
      swift_bridgeObjectRelease();
      sub_1C9AED294(v29, 0);
      sub_1C9AED294(v29, 0);
      OUTLINED_FUNCTION_12(&dword_1C95F9000, v48, v49, "#SiriLocationAccessCheckFlow startTCCUpdateTask - Siri prompt error result=%s");
      OUTLINED_FUNCTION_11();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C9AED294(v29, 0);
      sub_1C9AED294(v29, 0);
    }

    sub_1C9AED294(v29, 0);
    goto LABEL_22;
  }
  if (v28 == 1)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C9BECF88();
    int v31 = (void *)OUTLINED_FUNCTION_34(v30, (uint64_t)qword_1EBC7A520);
    os_log_type_t v32 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_65_0(v32))
    {
      unint64_t v33 = (_DWORD *)OUTLINED_FUNCTION_67();
      a10 = OUTLINED_FUNCTION_35_0();
      *unint64_t v33 = 136315138;
      *(void *)(v22 + 96) = v29;
      type metadata accessor for AFUserSelectedLocationAuthorizationStyle(0);
      uint64_t v34 = sub_1C9BED5D8();
      *(void *)(v22 + 104) = sub_1C95FF228(v34, v35, &a10);
      OUTLINED_FUNCTION_135_2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12(&dword_1C95F9000, v36, v37, "#SiriLocationAccessCheckFlow startTCCUpdateTask - forwarding user selection; style=%s");
      OUTLINED_FUNCTION_11();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }

    OUTLINED_FUNCTION_21_1((void *)(*(void *)(v22 + 120) + 56), *(void *)(*(void *)(v22 + 120) + 80));
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v22 + 144) = v38;
    *uint64_t v38 = v22;
    v38[1] = sub_1C9AE5F8C;
    OUTLINED_FUNCTION_10_1();
    return sub_1C98CC090(v39);
  }
  if ((v27 & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_1C9BECF88();
    uint64_t v51 = (void *)OUTLINED_FUNCTION_34(v50, (uint64_t)qword_1EBC7A520);
    os_log_type_t v52 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_13(v52))
    {
      *(_DWORD *)swift_slowAlloc() = 67109120;
      *(_DWORD *)(v22 + 212) = 0;
      sub_1C9BEDF68();
      OUTLINED_FUNCTION_120_4(&dword_1C95F9000, v53, v54, "#SiriLocationAccessCheckFlow startTCCUpdateTask - not forwarding user selection; isAllowed=%{BOOL}d");
      OUTLINED_FUNCTION_11_4();
    }

    unint64_t v29 = 0;
LABEL_22:
    **(void **)(v22 + 112) = v29;
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_10_1();
    return v56(v55, v56, v57, v58, v59, v60, v61, v62, a9, a10, a11, a12, a13, a14);
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v63 = sub_1C9BECF88();
  uint64_t v64 = (void *)OUTLINED_FUNCTION_34(v63, (uint64_t)qword_1EBC7A520);
  os_log_type_t v65 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v65))
  {
    *(_DWORD *)swift_slowAlloc() = 67109120;
    *(_DWORD *)(v22 + 208) = 1;
    sub_1C9BEDF68();
    OUTLINED_FUNCTION_120_4(&dword_1C95F9000, v66, v67, "#SiriLocationAccessCheckFlow startTCCUpdateTask - forwarding user selection; isAllowed=%{BOOL}d");
    OUTLINED_FUNCTION_11_4();
  }

  OUTLINED_FUNCTION_21_1((void *)(*(void *)(v22 + 120) + 56), *(void *)(*(void *)(v22 + 120) + 80));
  uint64_t v68 = (void *)swift_task_alloc();
  *(void *)(v22 + 160) = v68;
  *uint64_t v68 = v22;
  v68[1] = sub_1C9AE6470;
  OUTLINED_FUNCTION_10_1();
  return sub_1C98CC6B8(v69);
}

uint64_t sub_1C9AE5F8C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AE6068()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = (void *)sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "#SiriLocationAccessCheckFlow startTCCUpdateTask - forwarding user selection completed");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v7 = v0[15];

  OUTLINED_FUNCTION_21_1((void *)(v7 + 56), *(void *)(v7 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[23] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C9AE682C;
  return sub_1C98CA894();
}

#error "1C9AE6330: call analysis failed (funcsize=173)"

uint64_t sub_1C9AE6470()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

#error "1C9AE66EC: call analysis failed (funcsize=173)"

uint64_t sub_1C9AE682C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v3 = v2;
  *os_log_type_t v3 = *v1;
  *(void *)(v2 + 192) = v4;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v5, v6, v7);
}

uint64_t sub_1C9AE6910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  OUTLINED_FUNCTION_48_3();
  a23 = v25;
  a24 = v26;
  OUTLINED_FUNCTION_72_1();
  a22 = v24;
  if ((~*(void *)(v24 + 192) & 0xF000000000000006) != 0)
  {
    sub_1C9AED294(*(void *)(v24 + 136), *(unsigned char *)(v24 + 219));
    **(void **)(v24 + 112) = *(void *)(v24 + 192);
    OUTLINED_FUNCTION_90();
  }
  else
  {
    unint64_t v27 = (id *)(v24 + 24);
    char v28 = (void **)(v24 + 32);
    a11 = v24 + 56;
    unint64_t v29 = (void *)sub_1C9BECF78();
    os_log_type_t v30 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_105(v30))
    {
      a9 = v24 + 80;
      uint64_t v31 = *(void *)(v24 + 192);
      a10 = (_DWORD *)(v24 + 32);
      os_log_type_t v32 = (_DWORD *)OUTLINED_FUNCTION_67();
      a12 = OUTLINED_FUNCTION_35_0();
      *os_log_type_t v32 = 136315138;
      *(void *)(v24 + 16) = v31;
      uint64_t v33 = sub_1C9BED5D8();
      *(void *)(v24 + 80) = sub_1C95FF228(v33, v34, &a12);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v35, v36, "#SiriLocationAccessCheckFlow startTCCUpdateTask - unexpected status following updated user selection; status=%s");
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      char v28 = (void **)(v24 + 32);
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C98CE2A4();
    uint64_t v37 = (void *)swift_allocError();
    *uint64_t v38 = 1;
    swift_willThrow();
    *unint64_t v27 = v37;
    id v39 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    type metadata accessor for AFLocationServiceError(0);
    if (swift_dynamicCast())
    {

      uint64_t v40 = *v28;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v41 = sub_1C9BECF88();
      __swift_project_value_buffer(v41, (uint64_t)qword_1EBC7A520);
      id v42 = v40;
      uint64_t v43 = (void *)sub_1C9BECF78();
      os_log_type_t v44 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_96(v44))
      {
        a10 = (_DWORD *)(v24 + 64);
        uint64_t v45 = (_DWORD *)OUTLINED_FUNCTION_67();
        a12 = OUTLINED_FUNCTION_35_0();
        *uint64_t v45 = 136315138;
        *(void *)(v24 + 56) = v42;
        id v46 = v42;
        uint64_t v47 = sub_1C9BED5D8();
        *(void *)(v24 + 64) = sub_1C95FF228(v47, v48, &a12);
        OUTLINED_FUNCTION_135_2();
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_25(&dword_1C95F9000, v49, v50, "#SiriLocationAccessCheckFlow startTCCUpdateTask - forwarding user selection failed; AFLocationServiceError=%s");
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
      }
      unint64_t v63 = *(void *)(v24 + 136);
      char v64 = *(unsigned char *)(v24 + 219);
      id v65 = v42;
      swift_willThrow();
      sub_1C9AED294(v63, v64);
    }
    else
    {

      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C9BECF88();
      __swift_project_value_buffer(v51, (uint64_t)qword_1EBC7A520);
      id v52 = v37;
      id v53 = v37;
      uint64_t v54 = (void *)sub_1C9BECF78();
      os_log_type_t v55 = sub_1C9BEDC88();
      if (OUTLINED_FUNCTION_123_0(v55))
      {
        long long v56 = (_DWORD *)OUTLINED_FUNCTION_67();
        OUTLINED_FUNCTION_35_0();
        OUTLINED_FUNCTION_47_0();
        *long long v56 = 136315138;
        a10 = v56 + 1;
        *(void *)(v24 + 40) = v37;
        id v57 = v37;
        uint64_t v58 = sub_1C9BED5D8();
        uint64_t v60 = sub_1C95FF228(v58, v59, &a12);
        OUTLINED_FUNCTION_9_41(v60);
        swift_bridgeObjectRelease();

        OUTLINED_FUNCTION_249(&dword_1C95F9000, v61, v62, "#SiriLocationAccessCheckFlow startTCCUpdateTask - forwarding user selection failed; error=%s");
        OUTLINED_FUNCTION_201();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
      }
      unint64_t v66 = *(void *)(v24 + 136);
      char v67 = *(unsigned char *)(v24 + 219);
      swift_willThrow();
      sub_1C9AED294(v66, v67);
    }
    OUTLINED_FUNCTION_22_0();
  }
  OUTLINED_FUNCTION_94();
  return v69(v68, v69, v70, v71, v72, v73, v74, v75, a9, a10, a11, a12, a13, a14, a15, a16);
}

#error "1C9AE6F54: call analysis failed (funcsize=173)"

uint64_t sub_1C9AE7094(uint64_t a1, char a2)
{
  unint64_t v2 = 0xC000000000000008;
  unint64_t v3 = *(void *)a1;
  if (*(unsigned char *)(a1 + 9))
  {
    if (*(unsigned char *)(a1 + 9) == 1)
    {
      unint64_t v2 = v3 | 0x8000000000000000;
      id v4 = (id)v3;
    }
  }
  else
  {
    unint64_t v6 = v3 >> 62;
    if (a2 < 0)
    {
      if (v6 >= 2)
      {
        if (v6 == 2)
        {
LABEL_11:
          sub_1C96E9444(*(void *)a1);
          return v3;
        }
        else if (v3 == 0xC000000000000000)
        {
          sub_1C96E9444(0xC000000000000000);
          return 0;
        }
        else
        {
LABEL_17:
          if (v3 == 0xC000000000000001)
          {
            unint64_t v2 = 0xC000000000000001;
            unint64_t v7 = 0xC000000000000001;
          }
          else
          {
            unint64_t v7 = 0xC000000000000008;
          }
          sub_1C96E9444(v7);
        }
      }
      else
      {
        sub_1C96E9444(*(void *)a1);
        return 1;
      }
    }
    else
    {
      switch((int)v6)
      {
        case 1:
          sub_1C96E9444(*(void *)a1);
          unint64_t v2 = 2;
          break;
        case 2:
          goto LABEL_11;
        case 3:
          if (v3 != 0xC000000000000000) {
            goto LABEL_17;
          }
          sub_1C96E9444(0xC000000000000000);
          unint64_t v2 = 0;
          break;
        default:
          sub_1C96E9444(*(void *)a1);
          unint64_t v2 = 1;
          break;
      }
    }
  }
  return v2;
}

double sub_1C9AE71DC@<D0>(unint64_t a1@<X0>, os_unfair_lock_s *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  if ((a2 & 0x80) != 0
    || (a1 & 0x8000000000000000) != 0
    || (a1 & 1) != 0
    || (a2 & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_1C9BECF88();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EBC7A520);
    sub_1C96E9444(a1);
    sub_1C96E9444(a1);
    uint64_t v24 = (void *)sub_1C9BECF78();
    os_log_type_t v25 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_123_0(v25))
    {
      uint64_t v26 = (_DWORD *)OUTLINED_FUNCTION_67();
      v31[0] = OUTLINED_FUNCTION_35_0();
      *uint64_t v26 = 136315138;
      uint64_t v32 = a1;
      sub_1C96E9444(a1);
      uint64_t v27 = sub_1C9BED5D8();
      uint64_t v32 = sub_1C95FF228(v27, v28, v31);
      OUTLINED_FUNCTION_135_2();
      swift_bridgeObjectRelease();
      sub_1C96E9474(a1);
      sub_1C96E9474(a1);
      OUTLINED_FUNCTION_249(&dword_1C95F9000, v29, v30, "#SiriLocationAccessCheckFlow handleTCCResult - received TCC result=%s");
      OUTLINED_FUNCTION_201();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C96E9474(a1);
      sub_1C96E9474(a1);
    }

    return sub_1C9AE2240(a3);
  }
  else
  {
    sub_1C9AEC23C(a1, a2, (unint64_t *)v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C9BECF88();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_34(v8, (uint64_t)qword_1EBC7A520);
    os_log_type_t v10 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_62_5(v10))
    {
      uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_176(v11);
      OUTLINED_FUNCTION_12_2(&dword_1C95F9000, v12, v13, "#SiriLocationAccessCheckFlow handleTCCResult - need to do one-time prompt for temp, precise access permissions");
      OUTLINED_FUNCTION_11_4();
    }

    char v14 = *(os_unfair_lock_s **)(v4 + 216);
    uint64_t v15 = (uint64_t)&v14[4];
    OUTLINED_FUNCTION_107_6(v14);
    sub_1C9AE74A0(v15);
    os_unfair_lock_unlock(a2);
    uint64_t v16 = type metadata accessor for ExecuteResponse(0);
    uint64_t v17 = a3 + *(int *)(v16 + 36);
    uint64_t v18 = type metadata accessor for PluginAction();
    OUTLINED_FUNCTION_37_1(v17, v19, v20, v18);
    *(unsigned char *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 24) = 0;
    *(unsigned char *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 32) = 7;
    unint64_t v21 = (_OWORD *)(a3 + *(int *)(v16 + 40));
    double result = 0.0;
    *unint64_t v21 = 0u;
    v21[1] = 0u;
  }
  return result;
}

uint64_t sub_1C9AE74A0(uint64_t a1)
{
  sub_1C9AED120((long long *)a1, v16);
  *(unsigned char *)a1 = -127;
  *(unsigned char *)(a1 + 40) = 2;
  sub_1C9AECE24(a1, (uint64_t)v15);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  sub_1C9AECE24((uint64_t)v15, (uint64_t)v14);
  sub_1C9AECE24((uint64_t)v16, (uint64_t)v13);
  uint64_t v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = v6;
    *(_DWORD *)uint64_t v5 = 136315394;
    sub_1C9AECE24((uint64_t)v14, (uint64_t)v12);
    uint64_t v7 = sub_1C9BED5D8();
    v12[0] = sub_1C95FF228(v7, v8, &v17);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v14);
    *(_WORD *)(v5 + 12) = 2080;
    sub_1C9AECE24((uint64_t)v13, (uint64_t)v12);
    uint64_t v9 = sub_1C9BED5D8();
    v12[0] = sub_1C95FF228(v9, v10, &v17);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AED138((uint64_t)v13);
    _os_log_impl(&dword_1C95F9000, v3, v4, "#SiriLocationAccessCheckFlow handleTCCResult - transitioned to state=%s; \n lastState=%s",
      (uint8_t *)v5,
      0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v6, -1, -1);
    MEMORY[0x1CB78C440](v5, -1, -1);
  }
  else
  {

    sub_1C9AED138((uint64_t)v13);
    sub_1C9AED138((uint64_t)v14);
  }
  sub_1C9AED138((uint64_t)v15);
  return sub_1C9AED138((uint64_t)v16);
}

uint64_t sub_1C9AE7704()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C9AE7754()
{
  sub_1C9AE7704();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SiriLocationAccessCheckFlow()
{
  return self;
}

uint64_t sub_1C9AE77AC()
{
  return sub_1C9AE1690();
}

uint64_t sub_1C9AE77D0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  return sub_1C9AE1694();
}

unint64_t sub_1C9AE7860@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C9AE1550();
  *a1 = result;
  return result;
}

void sub_1C9AE788C(uint64_t a1@<X0>, char *a2@<X8>)
{
  OUTLINED_FUNCTION_4_0();
  os_log_type_t v6 = v5;
  type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = (uint64_t *)(v10 - v9);
  uint64_t v12 = type metadata accessor for Input(0);
  sub_1C98C83FC(a1 + *(int *)(v12 + 20), (uint64_t)v11, (void (*)(void))type metadata accessor for Parse);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v13 = *v11;
    uint64_t v14 = v11[1];
    swift_bridgeObjectRetain();
    unsigned __int8 v15 = sub_1C9AF69A0(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15 - 1 < 3) {
      goto LABEL_15;
    }
    if (!v15)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_1C9BECF88();
      uint64_t v17 = OUTLINED_FUNCTION_34(v16, (uint64_t)qword_1EBC7A520);
      os_log_type_t v18 = sub_1C9BEDC78();
      if (!OUTLINED_FUNCTION_62_5(v18))
      {
        char v20 = 0;
        goto LABEL_17;
      }
      uint64_t v19 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v19);
      OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v17, v6, "#PromptForSiriLocationAccessStrategy actionForInput - received abort signal");
      char v20 = 0;
LABEL_14:
      OUTLINED_FUNCTION_11_4();
LABEL_17:

      goto LABEL_18;
    }
  }
  else
  {
    sub_1C965E978((uint64_t)v11, (void (*)(void))type metadata accessor for Parse);
  }
  unint64_t v21 = sub_1C9AE7AF4(a1, *(unsigned __int8 *)(v2 + 16));
  sub_1C96E945C(v21);
  if ((~v21 & 0xF000000000000006) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C9BECF88();
    uint64_t v17 = OUTLINED_FUNCTION_34(v22, (uint64_t)qword_1EBC7A520);
    os_log_type_t v23 = sub_1C9BEDC88();
    char v20 = 2;
    if (!OUTLINED_FUNCTION_62_5(v23)) {
      goto LABEL_17;
    }
    uint64_t v24 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v24);
    OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v17, v6, "#PromptForSiriLocationAccessStrategy actionForInput - ignoring unsupported input");
    goto LABEL_14;
  }
LABEL_15:
  char v20 = 1;
LABEL_18:
  *a2 = v20;
}

unint64_t sub_1C9AE7AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v131 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79450);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_33_0();
  uint64_t v129 = v7;
  OUTLINED_FUNCTION_47();
  unint64_t v8 = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  uint64_t v128 = v9;
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_68_0();
  uint64_t v14 = (char *)(v12 - v13);
  MEMORY[0x1F4188790](v15, v16);
  int v133 = (char *)&v124 - v17;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v18, v19);
  uint64_t v125 = (char *)&v124 - v20;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v126 = (char *)&v124 - v23;
  OUTLINED_FUNCTION_47();
  uint64_t v24 = type metadata accessor for USOParse();
  uint64_t v25 = OUTLINED_FUNCTION_22(v24);
  MEMORY[0x1F4188790](v25, v26);
  OUTLINED_FUNCTION_33_0();
  uint64_t v132 = v27;
  uint64_t v28 = OUTLINED_FUNCTION_47();
  uint64_t v29 = type metadata accessor for Input(v28);
  uint64_t v30 = v29 - 8;
  MEMORY[0x1F4188790](v29, v31);
  OUTLINED_FUNCTION_34_0();
  uint64_t v134 = type metadata accessor for Parse(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v32, v33);
  OUTLINED_FUNCTION_2_0();
  uint64_t v135 = v34;
  OUTLINED_FUNCTION_3();
  uint64_t v37 = MEMORY[0x1F4188790](v35, v36);
  id v39 = (char *)&v124 - v38;
  uint64_t v41 = MEMORY[0x1F4188790](v37, v40);
  uint64_t v43 = (char *)&v124 - v42;
  MEMORY[0x1F4188790](v41, v44);
  id v46 = (char *)&v124 - v45;
  sub_1C98C83FC(a1 + *(int *)(v30 + 28), (uint64_t)&v124 - v45, (void (*)(void))type metadata accessor for Parse);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_1C9BECF88();
  uint64_t v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1EBC7A520);
  uint64_t v49 = OUTLINED_FUNCTION_33_1();
  sub_1C98C83FC(v49, v50, v51);
  sub_1C98C83FC((uint64_t)v46, (uint64_t)v43, (void (*)(void))type metadata accessor for Parse);
  id v52 = sub_1C9BECF78();
  os_log_type_t v53 = sub_1C9BEDC78();
  BOOL v54 = os_log_type_enabled(v52, v53);
  unint64_t v136 = v8;
  uint64_t v124 = v14;
  if (v54)
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v127 = v46;
    uint64_t v56 = v55;
    uint64_t v57 = OUTLINED_FUNCTION_39_3();
    uint64_t v130 = v48;
    uint64_t v138 = v57;
    *(_DWORD *)uint64_t v56 = 136315394;
    uint64_t v58 = Input.description.getter();
    uint64_t v137 = sub_1C95FF228(v58, v59, &v138);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C965E978(v2, (void (*)(void))type metadata accessor for Input);
    *(_WORD *)(v56 + 12) = 2080;
    sub_1C98C83FC((uint64_t)v43, (uint64_t)v39, (void (*)(void))type metadata accessor for Parse);
    uint64_t v60 = sub_1C9BED5D8();
    uint64_t v137 = sub_1C95FF228(v60, v61, &v138);
    unint64_t v8 = v136;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C965E978((uint64_t)v43, (void (*)(void))type metadata accessor for Parse);
    _os_log_impl(&dword_1C95F9000, v52, v53, "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - received Input=%s \n\n Input Parse=%s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    uint64_t v48 = v130;
    OUTLINED_FUNCTION_11_4();
    id v46 = v127;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C965E978(v2, (void (*)(void))type metadata accessor for Input);
    sub_1C965E978((uint64_t)v43, (void (*)(void))type metadata accessor for Parse);
  }

  uint64_t v62 = v135;
  sub_1C98C83FC((uint64_t)v46, v135, (void (*)(void))type metadata accessor for Parse);
  unint64_t v63 = &loc_1C9BEF000;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA592650);
      swift_release();
      sub_1C9BEC028();
      OUTLINED_FUNCTION_8_4();
      (*(void (**)(uint64_t))(v69 + 8))(v62);
      goto LABEL_12;
    case 2u:
      id v83 = *(id *)v62;
      unint64_t v82 = *(void *)(v62 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if (sub_1C9AF69A0((uint64_t)v83, v82) != 4)
      {
        swift_bridgeObjectRelease();
        unint64_t v8 = 0xC000000000000000;
        switch(v88)
        {
          case 1:
            goto LABEL_28;
          case 2:
            if ((v131 & 0x80u) != 0) {
              unint64_t v8 = 0x4000000000000001;
            }
            else {
              unint64_t v8 = v131 & 1 | 0x4000000000000000;
            }
            goto LABEL_18;
          case 3:
            goto LABEL_18;
          default:
            os_log_type_t v64 = v48;
            id v65 = sub_1C9BECF78();
            os_log_type_t v89 = sub_1C9BEDC88();
            if (!OUTLINED_FUNCTION_4(v89)) {
              goto LABEL_16;
            }
            uint64_t v90 = (_WORD *)OUTLINED_FUNCTION_19();
            OUTLINED_FUNCTION_49(v90);
            uint64_t v68 = "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - unexported abort";
            goto LABEL_14;
        }
      }
      swift_bridgeObjectRetain();
      id v65 = sub_1C9BECF78();
      os_log_type_t v84 = sub_1C9BEDC88();
      if (os_log_type_enabled(v65, v84))
      {
        uint64_t v85 = (uint8_t *)OUTLINED_FUNCTION_67();
        uint64_t v138 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)uint64_t v85 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v137 = sub_1C95FF228((uint64_t)v83, v82, &v138);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C95F9000, v65, v84, "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - unsupported DirectInvocation identifier=%s", v85, 0xCu);
        OUTLINED_FUNCTION_11();
        unint64_t v63 = (void *)&loc_1C9BEF000;
        OUTLINED_FUNCTION_11_4();
        goto LABEL_15;
      }

      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    case 3u:
      self;
      if (swift_dynamicCastObjCClass())
      {
        swift_unknownObjectRelease();
LABEL_28:
        OUTLINED_FUNCTION_85_13();
      }
      else
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          unint64_t v8 = 0xC000000000000000;
        }
        else
        {
          self;
          uint64_t v123 = swift_dynamicCastObjCClass();
          swift_unknownObjectRelease();
          if (v123)
          {
            unint64_t v8 = 0xC000000000000008;
          }
          else
          {
LABEL_8:
            os_log_type_t v64 = v48;
            id v65 = sub_1C9BECF78();
            os_log_type_t v66 = sub_1C9BEDC88();
            if (OUTLINED_FUNCTION_4(v66))
            {
              char v67 = (_WORD *)OUTLINED_FUNCTION_19();
              OUTLINED_FUNCTION_49(v67);
              uint64_t v68 = "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - unsupported Input Parse";
LABEL_14:
              OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v65, v64, v68);
LABEL_15:
              OUTLINED_FUNCTION_11_4();
            }
LABEL_16:

LABEL_17:
            sub_1C9AED0D4();
            uint64_t v72 = swift_allocError();
            *uint64_t v73 = 1;
            unint64_t v8 = v72 | 0x8000000000000000;
          }
        }
      }
      goto LABEL_18;
    case 4u:
    case 7u:
    case 8u:
    case 9u:
      sub_1C965E978(v62, (void (*)(void))type metadata accessor for Parse);
      goto LABEL_8;
    case 5u:

      goto LABEL_8;
    case 6u:
      sub_1C965C658(v62, v132, (void (*)(void))type metadata accessor for USOParse);
      uint64_t v86 = sub_1C9BEAEC8();
      uint64_t v87 = v129;
      sub_1C9612ECC(v86);
      if (__swift_getEnumTagSinglePayload(v87, 1, v8) == 1)
      {
        sub_1C95FE81C(v87, &qword_1EBC79450);
      }
      else
      {
        uint64_t v91 = v128;
        long long v92 = v126;
        (*(void (**)(char *, uint64_t, unint64_t))(v128 + 32))(v126, v87, v8);
        unint64_t v93 = sub_1C9AEB764();
        unint64_t v94 = v8;
        unint64_t v8 = v93;
        (*(void (**)(char *, unint64_t))(v91 + 8))(v92, v94);
        if ((~v8 & 0xF000000000000006) != 0)
        {
          sub_1C965E978(v132, (void (*)(void))type metadata accessor for USOParse);
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      uint64_t v130 = v48;
      uint64_t v95 = *(void *)(v86 + 16);
      if (!v95)
      {
        swift_bridgeObjectRelease();
        goto LABEL_51;
      }
      uint64_t v127 = v46;
      uint64_t v96 = *(void *)(v128 + 16);
      uint64_t v134 = v86;
      uint64_t v135 = v96;
      unint64_t v97 = v86 + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
      uint64_t v98 = *(void *)(v128 + 72);
      uint64_t v99 = (void (**)(char *, unint64_t))(v128 + 8);
      swift_bridgeObjectRetain();
      unint64_t v8 = v97;
      uint64_t v129 = v95;
      uint64_t v100 = v95;
      uint64_t v101 = v125;
      unint64_t v102 = v136;
      break;
    case 0xAu:
      unint64_t v8 = 0xF000000000000006;
      goto LABEL_21;
    default:
      sub_1C965E978(v62, (void (*)(void))type metadata accessor for Parse);
LABEL_12:
      os_log_type_t v64 = v48;
      id v65 = sub_1C9BECF78();
      os_log_type_t v70 = sub_1C9BEDC88();
      if (!OUTLINED_FUNCTION_4(v70)) {
        goto LABEL_16;
      }
      uint64_t v71 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v71);
      uint64_t v68 = "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - unsupported NLv3 Parse; (tester should check"
            " NL asset(s)' availability)";
      goto LABEL_14;
  }
  do
  {
    OUTLINED_FUNCTION_77_15();
    v103();
    char v104 = sub_1C9BEAF88();
    uint64_t v105 = *v99;
    (*v99)(v101, v102);
    if (v104)
    {
      swift_bridgeObjectRelease();
      sub_1C965E978(v132, (void (*)(void))type metadata accessor for USOParse);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_85_13();
LABEL_64:
      id v46 = v127;
      unint64_t v63 = (void *)&loc_1C9BEF000;
      goto LABEL_18;
    }
    v8 += v98;
    --v100;
  }
  while (v100);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v106 = v97;
  uint64_t v107 = v129;
  uint64_t v108 = v133;
  unint64_t v109 = v136;
  do
  {
    OUTLINED_FUNCTION_77_15();
    v110();
    char v111 = sub_1C9BEAF98();
    v105(v108, v109);
    if (v111)
    {
      swift_bridgeObjectRelease();
      sub_1C965E978(v132, (void (*)(void))type metadata accessor for USOParse);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xC000000000000000;
      goto LABEL_64;
    }
    v106 += v98;
    --v107;
  }
  while (v107);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  unint64_t v112 = v136;
  uint64_t v113 = v124;
  uint64_t v114 = v129;
  do
  {
    OUTLINED_FUNCTION_77_15();
    v115();
    char v116 = sub_1C9BEAFA8();
    v105(v113, v112);
    if (v116)
    {
      unint64_t v8 = 0xC000000000000008;
      swift_bridgeObjectRelease_n();
      sub_1C965E978(v132, (void (*)(void))type metadata accessor for USOParse);
      goto LABEL_64;
    }
    v97 += v98;
    --v114;
  }
  while (v114);
  swift_bridgeObjectRelease_n();
  id v46 = v127;
  unint64_t v63 = (void *)&loc_1C9BEF000;
LABEL_51:
  os_log_type_t v117 = v130;
  uint64_t v118 = sub_1C9BECF78();
  os_log_type_t v119 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_4(v119))
  {
    unint64_t v120 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v120);
    OUTLINED_FUNCTION_16_10(&dword_1C95F9000, v118, v117, "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - unsupported USOParse");
    OUTLINED_FUNCTION_11_4();
  }

  sub_1C9AED0D4();
  uint64_t v121 = swift_allocError();
  unsigned char *v122 = 1;
  sub_1C965E978(v132, (void (*)(void))type metadata accessor for USOParse);
  unint64_t v8 = v121 | 0x8000000000000000;
LABEL_18:
  sub_1C96E9444(v8);
  sub_1C96E9444(v8);
  uint64_t v74 = sub_1C9BECF78();
  os_log_type_t v75 = sub_1C9BEDC78();
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v76 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v77 = OUTLINED_FUNCTION_35_0();
    uint64_t v137 = v8;
    uint64_t v138 = v77;
    *(_DWORD *)uint64_t v76 = v63[172];
    sub_1C96E9444(v8);
    uint64_t v78 = sub_1C9BED5D8();
    uint64_t v137 = sub_1C95FF228(v78, v79, &v138);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C96E9474(v8);
    sub_1C96E9474(v8);
    _os_log_impl(&dword_1C95F9000, v74, v75, "#PromptForSiriLocationAccessStrategy parseAuthorizationResult - parsed authorizationResult=%s", v76, 0xCu);
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();

    uint64_t v80 = (uint64_t)v46;
  }
  else
  {

    sub_1C96E9474(v8);
    sub_1C96E9474(v8);
LABEL_21:
    uint64_t v80 = (uint64_t)v46;
  }
  sub_1C965E978(v80, (void (*)(void))type metadata accessor for Parse);
  return v8;
}

uint64_t sub_1C9AE88D4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  OUTLINED_FUNCTION_4_0();
  v2[4] = v3;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AE88FC);
}

uint64_t sub_1C9AE88FC()
{
  OUTLINED_FUNCTION_24();
  unint64_t v1 = sub_1C9AE7AF4(v0[2], *(unsigned __int8 *)(v0[3] + 16));
  uint64_t v2 = (uint64_t (*)(unint64_t))v0[1];
  return v2(v1);
}

void sub_1C9AE8964(uint64_t a1@<X8>)
{
  v38[18] = a1;
  sub_1C9BEB148();
  OUTLINED_FUNCTION_0_2();
  v38[9] = v2;
  v38[10] = v1;
  MEMORY[0x1F4188790](v1, v3);
  OUTLINED_FUNCTION_33_0();
  v38[8] = v4;
  OUTLINED_FUNCTION_47();
  v38[17] = sub_1C9BEAF68();
  OUTLINED_FUNCTION_0_2();
  v38[7] = v5;
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_2_0();
  v38[4] = v8;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v9, v10);
  v38[6] = (char *)v38 - v11;
  OUTLINED_FUNCTION_47();
  v38[16] = sub_1C9BEB018();
  OUTLINED_FUNCTION_0_2();
  v38[5] = v12;
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_2_0();
  v38[3] = v15;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v16, v17);
  v38[14] = (char *)v38 - v18;
  OUTLINED_FUNCTION_47();
  v38[15] = sub_1C9BEB1B8();
  OUTLINED_FUNCTION_0_2();
  v38[13] = v19;
  MEMORY[0x1F4188790](v20, v21);
  OUTLINED_FUNCTION_68_0();
  MEMORY[0x1F4188790](v22, v23);
  v38[11] = (char *)v38 - v24;
  OUTLINED_FUNCTION_47();
  v38[12] = sub_1C9BEAEA8();
  OUTLINED_FUNCTION_0_2();
  MEMORY[0x1F4188790](v25, v26);
  OUTLINED_FUNCTION_68_0();
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58B4B8);
  uint64_t v30 = OUTLINED_FUNCTION_22(v29);
  MEMORY[0x1F4188790](v30, v31);
  OUTLINED_FUNCTION_6_0();
  sub_1C9BEBD18();
  swift_allocObject();
  uint64_t v32 = sub_1C9BEBD08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C9BF02F0;
  *(void *)(v33 + 32) = v32;
  v38[21] = v33;
  sub_1C9BED8A8();
  sub_1C9BEB678();
  uint64_t v34 = OUTLINED_FUNCTION_95_14();
  __swift_storeEnumTagSinglePayload(v34, v35, v36, v37);
  sub_1C9BEC838();
}

uint64_t sub_1C9AE8E60()
{
  OUTLINED_FUNCTION_24();
  v1[2] = v2;
  v1[3] = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58D608);
  OUTLINED_FUNCTION_22(v3);
  v1[4] = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

void sub_1C9AE8EE0()
{
}

uint64_t sub_1C9AE8F8C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v8 = v7;
  *(void *)(v3 + 48) = v0;
  swift_task_dealloc();
  sub_1C95FE81C(v6, &qword_1EA58D608);
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v9, v10, v11);
  }
  else
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v12();
  }
}

void sub_1C9AE90BC()
{
  OUTLINED_FUNCTION_24();
  v1[33] = v2;
  v1[34] = v0;
  v1[32] = v3;
  sub_1C9BEC708();
}

void sub_1C9AE9254()
{
  if (qword_1EBC781E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(uint64_t **)(v0 + 392);
  uint64_t v2 = *(int **)(v0 + 384);
  uint64_t v3 = qword_1EBC781D0;
  uint64_t v4 = *(void *)algn_1EBC781D8;
  *((unsigned char *)v1 + v2[6]) = 0;
  *((unsigned char *)v1 + v2[7]) = 0;
  uint64_t v20 = v3;
  *((unsigned char *)v1 + v2[10]) = 0;
  uint64_t v5 = type metadata accessor for NLContextUpdate();
  uint64_t v6 = OUTLINED_FUNCTION_95_14();
  __swift_storeEnumTagSinglePayload(v6, v7, v8, v5);
  *(uint64_t *)((char *)v1 + v2[12]) = 0;
  uint64_t v9 = (uint64_t *)((char *)v1 + v2[13]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = (uint64_t *)((char *)v1 + v2[14]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *((unsigned char *)v1 + v2[15]) = 0;
  *(uint64_t *)((char *)v1 + v2[17]) = 0;
  uint64_t v11 = (char *)v1 + v2[18];
  *(void *)uint64_t v11 = 0;
  *((_WORD *)v11 + 4) = 512;
  *((unsigned char *)v1 + v2[19]) = 0;
  *((unsigned char *)v1 + v2[20]) = 0;
  *((unsigned char *)v1 + v2[21]) = 0;
  *((unsigned char *)v1 + v2[22]) = 0;
  *((unsigned char *)v1 + v2[23]) = 0;
  uint64_t v12 = (uint64_t *)((char *)v1 + v2[24]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  *(uint64_t *)((char *)v1 + v2[25]) = 0;
  *(uint64_t *)((char *)v1 + v2[26]) = MEMORY[0x1E4FBC860];
  uint64_t v13 = (char *)v1 + v2[27];
  uint64_t v14 = *MEMORY[0x1E4FA24B8];
  sub_1C9BEC958();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(char *, uint64_t))(v15 + 104))(v13, v14);
  uint64_t v16 = (uint64_t)v1 + v2[28];
  uint64_t v17 = sub_1C9BEC908();
  OUTLINED_FUNCTION_37_1(v16, v18, v19, v17);
  *uint64_t v1 = v20;
  v1[1] = v4;
  swift_bridgeObjectRetain();
  sub_1C965C4EC();
}

uint64_t sub_1C9AE9AB0()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = (uint64_t)(v2 + 7);
  v2[23] = v1;
  v2[24] = v5;
  v2[25] = v0;
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v7 = v6;
  *(void *)(v8 + 416) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v4);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

uint64_t sub_1C9AE9BA0()
{
  uint64_t v1 = OUTLINED_FUNCTION_37_32();
  if ((v2(v1) & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v7 = OUTLINED_FUNCTION_115_4();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
    swift_retain_n();
    uint64_t v8 = sub_1C9BECF78();
    os_log_type_t v9 = sub_1C9BEDC78();
    if (os_log_type_enabled(v8, v9))
    {
      OUTLINED_FUNCTION_16_55();
      OUTLINED_FUNCTION_39_3();
      OUTLINED_FUNCTION_74_16(1.5048e-36);
      OUTLINED_FUNCTION_65_20();
      ResponseMode.description.getter();
    }
    swift_release_n();

    sub_1C9BEC838();
  }
  if ((*(char *)(v0 + 637) & 0x80000000) == 0)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C9AEA7B4;
    OUTLINED_FUNCTION_55_1();
    return static TCCTemplates.accessLocationUsingSiriLabel(deviceState:)(v4);
  }
  *(_OWORD *)(v0 + 480) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  id v10 = objc_msgSend(*(id *)(v0 + 440), sel_dialog);
  sub_1C96044C4(0, &qword_1EA58B518);
  unint64_t v11 = sub_1C9BED878();

  if (v11 >> 62)
  {
    OUTLINED_FUNCTION_57_27();
    sub_1C9BEE3C8();
    OUTLINED_FUNCTION_75_17();
    if (v10) {
      goto LABEL_13;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    sub_1C9705CC8(0, (v11 & 0xC000000000000001) == 0, v11);
    if ((v11 & 0xC000000000000001) != 0) {
      MEMORY[0x1CB78B3A0](0, v11);
    }
    else {
      id v12 = *(id *)(v11 + 32);
    }
    OUTLINED_FUNCTION_75_17();
    id v13 = objc_msgSend((id)(v11 & 0xC000000000000001), sel_fullPrint);

    sub_1C9BED568();
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  OUTLINED_FUNCTION_79_15();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v14;
  void *v14 = v0;
  v14[1] = sub_1C9AEAA68;
  OUTLINED_FUNCTION_56_26();
  OUTLINED_FUNCTION_55_1();
  return static TCCTemplates.accessLocationOnceLabel(deviceState:)(v15);
}

uint64_t sub_1C9AEA07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  sub_1C965E978(*(void *)(v12 + 400), (void (*)(void))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_10_71();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_1C9AEA138()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  v2[26] = v1;
  v2[27] = v4;
  v2[28] = v0;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v7 + 432) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v8, v9, v10);
}

uint64_t sub_1C9AEA21C()
{
  uint64_t v1 = OUTLINED_FUNCTION_37_32();
  if ((v2(v1) & 1) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v7 = OUTLINED_FUNCTION_115_4();
    __swift_project_value_buffer(v7, (uint64_t)qword_1EBC7A520);
    swift_retain_n();
    uint64_t v8 = sub_1C9BECF78();
    os_log_type_t v9 = sub_1C9BEDC78();
    if (os_log_type_enabled(v8, v9))
    {
      OUTLINED_FUNCTION_16_55();
      OUTLINED_FUNCTION_39_3();
      OUTLINED_FUNCTION_74_16(1.5048e-36);
      OUTLINED_FUNCTION_65_20();
      ResponseMode.description.getter();
    }
    swift_release_n();

    sub_1C9BEC838();
  }
  if ((*(char *)(v0 + 637) & 0x80000000) == 0)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 448) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1C9AEA7B4;
    OUTLINED_FUNCTION_55_1();
    return static TCCTemplates.accessLocationUsingSiriLabel(deviceState:)(v4);
  }
  *(_OWORD *)(v0 + 480) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  id v10 = objc_msgSend(*(id *)(v0 + 440), sel_dialog);
  sub_1C96044C4(0, &qword_1EA58B518);
  unint64_t v11 = sub_1C9BED878();

  if (v11 >> 62)
  {
    OUTLINED_FUNCTION_57_27();
    sub_1C9BEE3C8();
    OUTLINED_FUNCTION_75_17();
    if (v10) {
      goto LABEL_13;
    }
  }
  else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    sub_1C9705CC8(0, (v11 & 0xC000000000000001) == 0, v11);
    if ((v11 & 0xC000000000000001) != 0) {
      MEMORY[0x1CB78B3A0](0, v11);
    }
    else {
      id v12 = *(id *)(v11 + 32);
    }
    OUTLINED_FUNCTION_75_17();
    id v13 = objc_msgSend((id)(v11 & 0xC000000000000001), sel_fullPrint);

    sub_1C9BED568();
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  OUTLINED_FUNCTION_79_15();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v14;
  void *v14 = v0;
  v14[1] = sub_1C9AEAA68;
  OUTLINED_FUNCTION_56_26();
  OUTLINED_FUNCTION_55_1();
  return static TCCTemplates.accessLocationOnceLabel(deviceState:)(v15);
}

uint64_t sub_1C9AEA6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  sub_1C965E978(*(void *)(v12 + 400), (void (*)(void))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_10_71();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v14(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10, a11, a12);
}

uint64_t sub_1C9AEA7B4()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_17_3();
  *id v10 = v9;
  v7[57] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v7[58] = v3;
    v7[59] = v5;
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1C9AEA8B0()
{
  OUTLINED_FUNCTION_33();
  unint64_t v2 = *(void *)(v0 + 464);
  uint64_t v1 = *(void *)(v0 + 472);
  if (!v2)
  {
    uint64_t v1 = 0;
    unint64_t v2 = 0xE000000000000000;
  }
  *(void *)(v0 + 496) = 0xD000000000000053;
  *(void *)(v0 + 504) = 0x80000001C9C2CAC0;
  *(void *)(v0 + 480) = v1;
  *(void *)(v0 + 488) = v2;
  id v3 = objc_msgSend(*(id *)(v0 + 440), sel_dialog);
  sub_1C96044C4(0, &qword_1EA58B518);
  unint64_t v4 = sub_1C9BED878();

  if (v4 >> 62)
  {
    OUTLINED_FUNCTION_57_27();
    sub_1C9BEE3C8();
    OUTLINED_FUNCTION_75_17();
    if (v3) {
      goto LABEL_5;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    sub_1C9705CC8(0, (v4 & 0xC000000000000001) == 0, v4);
    if ((v4 & 0xC000000000000001) != 0) {
      MEMORY[0x1CB78B3A0](0, v4);
    }
    else {
      id v5 = *(id *)(v4 + 32);
    }
    OUTLINED_FUNCTION_75_17();
    id v6 = objc_msgSend((id)(v4 & 0xC000000000000001), sel_fullPrint);

    sub_1C9BED568();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_10:
  OUTLINED_FUNCTION_79_15();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C9AEAA68;
  uint64_t v8 = OUTLINED_FUNCTION_56_26();
  return static TCCTemplates.accessLocationOnceLabel(deviceState:)(v8);
}

uint64_t sub_1C9AEAA68()
{
  OUTLINED_FUNCTION_33();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v10 = v9;
  v7[67] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_1C964FD64(v7[60], v7[61]);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
  else
  {
    v7[68] = v3;
    v7[69] = v5;
    uint64_t v14 = (void *)swift_task_alloc();
    v7[70] = (uint64_t)v14;
    void *v14 = v9;
    v14[1] = sub_1C9AEABD4;
    uint64_t v15 = OUTLINED_FUNCTION_56_26();
    return static TCCTemplates.accessLocationDoNotLabel(deviceState:)(v15);
  }
}

uint64_t sub_1C9AEABD4()
{
  OUTLINED_FUNCTION_26_0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  OUTLINED_FUNCTION_0_1();
  uint64_t v7 = v6;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v8 = v7;
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v10 = v9;
  v7[71] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v13 = v7 + 60;
    uint64_t v12 = v7[60];
    uint64_t v11 = v13[1];
    swift_bridgeObjectRelease();
    sub_1C964FD64(v12, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7[72] = v3;
    v7[73] = v5;
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v14, v15, v16);
}

void sub_1C9AEAD20()
{
  uint64_t v1 = *(void *)(v0 + 584);
  unint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = (void *)(*(void *)(v0 + 400) + *(int *)(*(void *)(v0 + 384) + 56));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_16();
  *uint64_t v3 = 0xD000000000000033;
  v3[1] = v4;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C9BECF88();
  id v6 = (void *)OUTLINED_FUNCTION_34(v5, (uint64_t)qword_1EBC7A520);
  os_log_type_t v7 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v7))
  {
    uint64_t v8 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v8);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v9, v10, "#PromptForSiriLocationAccessStrategy makePromptForValue - issuing locationAccessCarPlayPrompt");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v11 = *(void *)(v0 + 552);
  if (v2) {
    unint64_t v12 = v2;
  }
  else {
    unint64_t v12 = 0xE000000000000000;
  }
  if (v2) {
    uint64_t v13 = v1;
  }
  else {
    uint64_t v13 = 0;
  }
  uint64_t v35 = v13;
  unint64_t v36 = v12;
  unint64_t v14 = *(void *)(v0 + 544);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v17 = *(void *)(v0 + 504);
  uint64_t v16 = *(void *)(v0 + 512);
  uint64_t v18 = *(void *)(v0 + 496);
  long long v34 = *(_OWORD *)(v0 + 480);
  uint64_t v37 = *(void **)(v0 + 440);
  uint64_t v19 = *(void *)(v0 + 272);

  __swift_project_boxed_opaque_existential_1((void *)(v19 + 72), *(void *)(v19 + 96));
  if (v14) {
    uint64_t v20 = v11;
  }
  else {
    uint64_t v20 = 0;
  }
  if (v14) {
    unint64_t v21 = v14;
  }
  else {
    unint64_t v21 = 0xE000000000000000;
  }
  *(void *)(v0 + 120) = &type metadata for SiriKitUIModel;
  *(void *)(v0 + 128) = sub_1C9AED024();
  uint64_t v22 = (void *)swift_allocObject();
  *(void *)(v0 + 96) = v22;
  uint64_t v22[2] = v16;
  _OWORD v22[3] = v15;
  v22[4] = v20;
  v22[5] = v21;
  OUTLINED_FUNCTION_22_16();
  *(void *)(v23 + 48) = v25;
  *(void *)(v23 + 56) = v24;
  *(_OWORD *)(v23 + 64) = v34;
  *(void *)(v23 + 80) = v18;
  *(void *)(v23 + 88) = v17;
  *(void *)(v23 + 96) = v35;
  *(void *)(v23 + 104) = v36;
  OUTLINED_FUNCTION_22_16();
  *(void *)(v26 + 112) = v28;
  *(void *)(v26 + 120) = v27;
  *(unsigned char *)(v26 + 128) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C9BF02F0;
  *(void *)(v29 + 32) = v37;
  uint64_t v38 = v29;
  sub_1C9BED8A8();
  *(void *)(v0 + 592) = v38;
  id v30 = v37;
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 600) = v31;
  void *v31 = v0;
  v31[1] = sub_1C9AEB018;
  OUTLINED_FUNCTION_45_0();
  __asm { BRAA            X7, X16 }
}

uint64_t sub_1C9AEB018()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  uint64_t v3 = v1 + 96;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9AEB104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_98();
  uint64_t v15 = *(void *)(v14 + 400);
  uint64_t v26 = *(void *)(v14 + 304);
  uint64_t v27 = *(void *)(v14 + 296);
  uint64_t v16 = *(void *)(v14 + 256);

  sub_1C95FD5D8((long long *)(v14 + 16), v16);
  sub_1C965E978(v15, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_10_1();
  return v18(v17, v18, v19, v20, v21, v22, v23, v24, a9, v26, v27, a12, a13, a14);
}

uint64_t sub_1C9AEB1F8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AEB2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  uint64_t v13 = *(void *)(v12 + 400);

  sub_1C965E978(v13, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_10_71();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_1C9AEB3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  uint64_t v13 = *(void *)(v12 + 400);

  sub_1C965E978(v13, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_10_71();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_1C9AEB46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  OUTLINED_FUNCTION_21();
  OUTLINED_FUNCTION_135();
  uint64_t v13 = *(void *)(v12 + 400);

  sub_1C965E978(v13, (void (*)(void))type metadata accessor for OutputGenerationManifest);
  OUTLINED_FUNCTION_10_71();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  OUTLINED_FUNCTION_25_0();
  return v15(v14, v15, v16, v17, v18, v19, v20, v21, a9, a10, a11, a12);
}

uint64_t sub_1C9AEB534(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AEB54C);
}

uint64_t sub_1C9AEB54C()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  unint64_t v2 = (void *)OUTLINED_FUNCTION_34(v1, (uint64_t)qword_1EBC7A520);
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "#PromptForSiriLocationAccessStrategy makeFlowCancelledResponse - suppressing default dialog output");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v7 = *(uint64_t **)(v0 + 16);

  uint64_t v8 = type metadata accessor for EmptyOutput();
  uint64_t v9 = swift_allocObject();
  v7[3] = v8;
  v7[4] = (uint64_t)&protocol witness table for EmptyOutput;
  *uint64_t v7 = v9;
  OUTLINED_FUNCTION_90();
  return v10();
}

uint64_t sub_1C9AEB64C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AEB664);
}

uint64_t sub_1C9AEB664()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  unint64_t v2 = (void *)OUTLINED_FUNCTION_34(v1, (uint64_t)qword_1EBC7A520);
  os_log_type_t v3 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_13(v3))
  {
    uint64_t v4 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v4);
    OUTLINED_FUNCTION_9_0(&dword_1C95F9000, v5, v6, "#PromptForSiriLocationAccessStrategy makeErrorResponse - suppressing default dialog output");
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v7 = *(uint64_t **)(v0 + 16);

  uint64_t v8 = type metadata accessor for EmptyOutput();
  uint64_t v9 = swift_allocObject();
  v7[3] = v8;
  v7[4] = (uint64_t)&protocol witness table for EmptyOutput;
  *uint64_t v7 = v9;
  OUTLINED_FUNCTION_90();
  return v10();
}

unint64_t sub_1C9AEB764()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5992A0);
  MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v2 = sub_1C9BEB8E8();
  uint64_t v4 = MEMORY[0x1F4188790](v2, v3);
  uint64_t v6 = MEMORY[0x1F4188790](v4, v5);
  uint64_t v8 = MEMORY[0x1F4188790](v6, v7);
  MEMORY[0x1F4188790](v8, v9);
  unint64_t v10 = sub_1C9BEB238();
  unint64_t v16 = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C9BEE3C8();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_9:
      sub_1C9705CC8(0, (v16 & 0xC000000000000001) == 0, v16);
      if ((v16 & 0xC000000000000001) == 0) {
        sub_1C9BEC838();
      }
      MEMORY[0x1CB78B3A0](0, v16);
      swift_bridgeObjectRelease();
      sub_1C9BEC838();
    }
  }
  else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C9BECF88();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EBC7A520);
  uint64_t v12 = sub_1C9BECF78();
  os_log_type_t v13 = sub_1C9BEDC78();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1C95F9000, v12, v13, "#PromptForSiriLocationAccessStrategy parseDefinedValueResult - no definedValue found", v14, 2u);
    MEMORY[0x1CB78C440](v14, -1, -1);
  }

  return 0xF000000000000006;
}

uint64_t sub_1C9AEC05C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return v0;
}

uint64_t sub_1C9AEC08C()
{
  sub_1C9AEC05C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PromptForSiriLocationAccessStrategy()
{
  return self;
}

uint64_t sub_1C9AEC0E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C96ED108;
  return sub_1C9AE88D4(a2);
}

uint64_t sub_1C9AEC180()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return sub_1C9AE8E60();
}

void sub_1C9AEC218()
{
  sub_1C9AEC44C(0x20000000000uLL);
  *(unsigned char *)(v0 + 56) = 1;
}

void sub_1C9AEC23C(unint64_t a1@<X0>, unsigned __int8 a2@<W1>, unint64_t *a3@<X8>)
{
  if (*(unsigned char *)(v3 + 56) == 1)
  {
    *(unsigned char *)(v3 + 56) = 0;
    switch(a1 >> 62)
    {
      case 1uLL:
        uint64_t v6 = 0;
        uint64_t v7 = 3;
        goto LABEL_10;
      case 2uLL:
        id v15 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
        id v16 = (id)(a1 & 0x3FFFFFFFFFFFFFFFLL);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
        if ((swift_dynamicCast() & 1) != 0 && v20 != 1)
        {
          uint64_t v6 = 0x10000000000;
          unint64_t v14 = 3;
        }
        else
        {
          unint64_t v14 = 0;
          uint64_t v6 = 0x10000000000;
        }
        break;
      case 3uLL:
        uint64_t v6 = 0x10000000000;
        unint64_t v14 = 2;
        unint64_t v17 = 0x10000000000;
        uint64_t v18 = 5;
        if ((a2 & 0x80u) == 0) {
          uint64_t v18 = 0x200000001;
        }
        if (a2 <= 0xFDu) {
          unint64_t v19 = v18;
        }
        else {
          unint64_t v19 = 0;
        }
        if (a2 <= 0xFDu) {
          unint64_t v17 = (unint64_t)(a2 & 0x80) << 33;
        }
        if (a1 != 0xC000000000000001)
        {
          unint64_t v14 = 1;
          uint64_t v6 = 0x10000000000;
        }
        if (a1 == 0xC000000000000000)
        {
          unint64_t v14 = v19;
          uint64_t v6 = v17;
        }
        break;
      default:
        uint64_t v6 = 0;
        uint64_t v7 = 2;
LABEL_10:
        unint64_t v14 = v7 & 0xFFFFFFFEFFFFFFFFLL | ((a1 & 1) << 32);
        break;
    }
    sub_1C9AEC44C(v6 | v14);
  }
  else
  {
    sub_1C96E9444(a1);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C9BECF88();
    uint64_t v9 = (void *)OUTLINED_FUNCTION_34(v8, (uint64_t)qword_1EBC7A520);
    os_log_type_t v10 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_62_5(v10))
    {
      uint64_t v11 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_176(v11);
      OUTLINED_FUNCTION_12_2(&dword_1C95F9000, v12, v13, "#PermissionPromptSchemaLogger emitResult - no corresponding start message emitted");
      OUTLINED_FUNCTION_11_4();
    }
  }
  a3[3] = (unint64_t)&type metadata for PermissionPromptSchemaLogger.LoggedResult;
  a3[4] = (unint64_t)&off_1F23F6F20;
  *a3 = a1;
}

void sub_1C9AEC44C(unint64_t a1)
{
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA0498]), sel_init);
  if (!v8) {
    return;
  }
  if (BYTE5(a1))
  {
    if (BYTE5(a1) == 1)
    {
      id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA04A8]), sel_init);
      if (v3)
      {
        uint64_t v4 = v3;
        objc_msgSend(v3, sel_setFailureReason_, a1);
        uint64_t v5 = &selRef_setFailed_;
        goto LABEL_13;
      }
      goto LABEL_14;
    }
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA04B0]), sel_init);
    if (v7)
    {
      uint64_t v4 = v7;
      uint64_t v5 = &selRef_setStartedOrChanged_;
      goto LABEL_13;
    }
  }
  else
  {
    id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FA04A0]), sel_init);
    if (v6)
    {
      uint64_t v4 = v6;
      objc_msgSend(v6, sel_setPermissionStatusResult_, a1);
      if ((a1 & 0xFF00000000) != 0x200000000) {
        objc_msgSend(v4, sel_setIsPreciseLocationResult_, HIDWORD(a1) & 1);
      }
      uint64_t v5 = &selRef_setEnded_;
LABEL_13:
      objc_msgSend(v8, *v5, v4);

      __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
      sub_1C9AECE5C((uint64_t)v8);
    }
  }
LABEL_14:
}

uint64_t sub_1C9AEC5B4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PermissionPromptSchemaLogger()
{
  return self;
}

void destroy for SiriLocationAccessCheckFlow.State(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 7) {
    unsigned int v1 = *(_DWORD *)a1 + 7;
  }
  switch(v1)
  {
    case 4u:
      swift_release();
      break;
    case 5u:
      unint64_t v2 = *(void *)(a1 + 8);
      sub_1C96E9474(v2);
      break;
    case 6u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for SiriLocationAccessCheckFlow.State(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 7) {
    unsigned int v3 = *(_DWORD *)a2 + 7;
  }
  switch(v3)
  {
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v4 = 1;
      goto LABEL_11;
    case 2u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v4 = 2;
      goto LABEL_11;
    case 3u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      char v4 = 3;
      goto LABEL_11;
    case 4u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 40) = 4;
      sub_1C9BEC838();
    case 5u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      unint64_t v5 = *(void *)(a2 + 8);
      sub_1C96E9444(v5);
      *(void *)(a1 + 8) = v5;
      char v4 = 5;
      goto LABEL_11;
    case 6u:
      long long v6 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t))(v6 - 8))(a1);
      char v4 = 6;
LABEL_11:
      *(unsigned char *)(a1 + 40) = v4;
      break;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(unsigned char *)(a1 + 40) = 0;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for SiriLocationAccessCheckFlow.State(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)a1 + 7;
    }
    switch(v4)
    {
      case 4u:
        swift_release();
        break;
      case 5u:
        sub_1C96E9474(*(void *)(a1 + 8));
        break;
      case 6u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)a2 + 7;
    }
    switch(v5)
    {
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 1;
        goto LABEL_18;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 2;
        goto LABEL_18;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 3;
        goto LABEL_18;
      case 4u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 40) = 4;
        sub_1C9BEC838();
      case 5u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        unint64_t v7 = *(void *)(a2 + 8);
        sub_1C96E9444(v7);
        *(void *)(a1 + 8) = v7;
        char v6 = 5;
        goto LABEL_18;
      case 6u:
        uint64_t v8 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v8;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
        char v6 = 6;
LABEL_18:
        *(unsigned char *)(a1 + 40) = v6;
        break;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 40) = 0;
        break;
    }
  }
  return a1;
}

uint64_t assignWithTake for SiriLocationAccessCheckFlow.State(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 7) {
      unsigned int v4 = *(_DWORD *)a1 + 7;
    }
    switch(v4)
    {
      case 4u:
        swift_release();
        break;
      case 5u:
        sub_1C96E9474(*(void *)(a1 + 8));
        break;
      case 6u:
        __swift_destroy_boxed_opaque_existential_1(a1);
        break;
      default:
        break;
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 7) {
      unsigned int v5 = *(_DWORD *)a2 + 7;
    }
    switch(v5)
    {
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 1;
        break;
      case 2u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 2;
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        char v6 = 3;
        break;
      case 4u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 4;
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v6 = 5;
        break;
      case 6u:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v6 = 6;
        break;
      default:
        char v6 = 0;
        *(unsigned char *)a1 = *(unsigned char *)a2;
        break;
    }
    *(unsigned char *)(a1 + 40) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for SiriLocationAccessCheckFlow.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 7) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SiriLocationAccessCheckFlow.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C9AECBA4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 7) {
    return (*(_DWORD *)a1 + 7);
  }
  return result;
}

uint64_t sub_1C9AECBC0(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 7;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SiriLocationAccessCheckFlow.State()
{
  return &type metadata for SiriLocationAccessCheckFlow.State;
}

uint64_t getEnumTagSinglePayload for PromptMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7F)
  {
    if (a2 + 129 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 129) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 130;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v5 >= 0x7E) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *storeEnumTagSinglePayload for PromptMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *uint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AECD64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

uint64_t sub_1C9AECD8C(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_1C9AECD98(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_1C9AECDA8(unsigned char *result, char a2)
{
  *uint64_t result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for PromptMode()
{
  return &type metadata for PromptMode;
}

uint64_t sub_1C9AECDCC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C9AED3C8(&qword_1EA599280, a2, (void (*)(uint64_t))type metadata accessor for SiriLocationAccessCheckFlow);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C9AECE24(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C9AECE5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SiriKitEventPayload(0);
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EBC78750 != -1) {
    swift_once();
  }
  type metadata accessor for SiriKitEvent(0);
  *uint64_t v5 = a1;
  swift_storeEnumTagMultiPayload();
  sub_1C9BEC838();
}

void sub_1C9AECF6C()
{
}

unint64_t sub_1C9AED024()
{
  unint64_t result = qword_1EA599290;
  if (!qword_1EA599290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599290);
  }
  return result;
}

uint64_t sub_1C9AED070()
{
  sub_1C9AD5C08(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(unsigned char *)(v0 + 128));

  return swift_deallocObject();
}

unint64_t sub_1C9AED0D4()
{
  unint64_t result = qword_1EA599298;
  if (!qword_1EA599298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599298);
  }
  return result;
}

_OWORD *sub_1C9AED120(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1C9AED138(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C9AED168()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1C972978C(*(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned char *)(v0 + 49));

  return swift_deallocObject();
}

uint64_t sub_1C9AED1B8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  char v2 = *(unsigned char *)(v0 + 50);
  __int16 v3 = *(_WORD *)(v0 + 48);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = (void *)OUTLINED_FUNCTION_17_0(v4);
  *uint64_t v5 = v6;
  v5[1] = sub_1C9615888;
  uint64_t v7 = OUTLINED_FUNCTION_22_30();
  return sub_1C9AE5A10(v7, v8, v9, v10, v1, v3, v2);
}

unint64_t sub_1C9AED278(unint64_t result, uint64_t a2, char a3)
{
  if (a3 == 1) {
    return (unint64_t)(id)result;
  }
  if (!a3) {
    return sub_1C96E9444(result);
  }
  return result;
}

void sub_1C9AED294(unint64_t a1, char a2)
{
  if (!a2) {
    sub_1C96E9474(a1);
  }
}

uint64_t sub_1C9AED2A4(uint64_t a1)
{
  return sub_1C9AE5208(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(_WORD *)(v1 + 32));
}

uint64_t sub_1C9AED2C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AED304()
{
  OUTLINED_FUNCTION_26_0();
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  __int16 v3 = (void *)OUTLINED_FUNCTION_17_0(v2);
  *__int16 v3 = v4;
  v3[1] = sub_1C9615010;
  uint64_t v5 = OUTLINED_FUNCTION_22_30();
  return sub_1C9AE3954(v5, v6, v7, v8, v1);
}

uint64_t sub_1C9AED3AC@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1C9AE491C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C9AED3C8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C9AED410(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C9AED46C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_1C9AED4AC()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = (void *)OUTLINED_FUNCTION_17_0(v5);
  *uint64_t v6 = v7;
  v6[1] = sub_1C9615888;
  return sub_1C98CCC7C(v2, v3, v4, v0 + 32);
}

uint64_t sub_1C9AED554(uint64_t a1)
{
  return sub_1C9AE350C(a1, *(unsigned char *)(v1 + 16), 3, "#SiriLocationAccessCheckFlow executeAccessPrompt - transitioned to state=%s; \n lastState=%s");
}

void sub_1C9AED57C(uint64_t *a1)
{
}

uint64_t sub_1C9AED584(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C96E811C;
  return sub_1C9AE0B68(a2);
}

uint64_t sub_1C9AED624()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_1();
  return v4(v3);
}

uint64_t sub_1C9AED6C0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C9AE0CC4();
}

uint64_t sub_1C9AED748()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C9AE0CC4();
}

uint64_t sub_1C9AED7D0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C96FF800();
}

uint64_t sub_1C9AED858()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_54();
  return sub_1C9AE0DFC(v3);
}

uint64_t sub_1C9AED8E0()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  uint64_t v3 = OUTLINED_FUNCTION_7_1();
  return sub_1C9AE0F40(v3);
}

uint64_t sub_1C9AED970(uint64_t a1)
{
  return sub_1C9AE2C64(a1, *(unsigned char *)(v1 + 16));
}

void sub_1C9AED990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1C9AE2950(v6, a2, a3, a4, a5, a6);
}

uint64_t sub_1C9AED998(uint64_t a1)
{
  return sub_1C9AE350C(a1, *(unsigned char *)(v1 + 16), 1, "#SiriLocationAccessCheckFlow waitForUnlock - transitioned to state=%s; \n lastState=%s");
}

void sub_1C9AED9C0(char a1)
{
}

uint64_t sub_1C9AED9CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AEDA04(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1C9AEDA30(uint64_t a1)
{
  return sub_1C9AE229C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

void sub_1C9AEDA50(id a1, char a2)
{
  if (a2) {

  }
  else {
    sub_1C96E9474((unint64_t)a1);
  }
}

uint64_t sub_1C9AEDA60()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_7_1();
  return sub_1C9AE0ABC();
}

uint64_t sub_1C9AEDAF0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C9AE0C00();
}

uint64_t sub_1C9AEDB78()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C9AE0C00();
}

uint64_t sub_1C9AEDC00()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C9AE0C00();
}

uint64_t sub_1C9AEDC88()
{
  OUTLINED_FUNCTION_24();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615888;
  OUTLINED_FUNCTION_54();
  return sub_1C9AE0D60();
}

uint64_t sub_1C9AEDD10()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_82();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C9615010;
  OUTLINED_FUNCTION_7_1();
  return sub_1C9AE0E94();
}

ValueMetadata *type metadata accessor for TCCLocationAccessTemplates()
{
  return &type metadata for TCCLocationAccessTemplates;
}

ValueMetadata *type metadata accessor for AnalyticsSchemaLogger()
{
  return &type metadata for AnalyticsSchemaLogger;
}

ValueMetadata *type metadata accessor for LocationAccessUnlockDeviceStrategy()
{
  return &type metadata for LocationAccessUnlockDeviceStrategy;
}

unsigned char *storeEnumTagSinglePayload for SiriLocationAccessCheckFlowError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AEDE9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriLocationAccessCheckFlowError()
{
  return &type metadata for SiriLocationAccessCheckFlowError;
}

ValueMetadata *type metadata accessor for PermissionPromptSchemaLogger.LoggedResult()
{
  return &type metadata for PermissionPromptSchemaLogger.LoggedResult;
}

unint64_t sub_1C9AEDEE8()
{
  unint64_t result = qword_1EA5993A0;
  if (!qword_1EA5993A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5993A0);
  }
  return result;
}

uint64_t sub_1C9AEDF34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C9AE2214(a1, a2);
}

uint64_t OUTLINED_FUNCTION_10_71()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_16_55()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_34_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  *(_WORD *)(v21 + 18) = v22;
  uint64_t v23 = *(void *)(v20 + 48);
  __swift_project_boxed_opaque_existential_1(a20, v23);
  return v23;
}

uint64_t OUTLINED_FUNCTION_38_27()
{
  return swift_dynamicCast();
}

id OUTLINED_FUNCTION_49_24()
{
  *(void *)(v1 + 24) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_51_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return a21;
}

uint64_t OUTLINED_FUNCTION_56_26()
{
  return v0 + 24;
}

uint64_t OUTLINED_FUNCTION_57_27()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_58_24(float *a1, float a2)
{
  *a1 = a2;
  *int v3 = *(unsigned __int8 *)(v2 + 64);
  return sub_1C9BEDF68();
}

id OUTLINED_FUNCTION_63_22(float a1)
{
  *uint64_t v1 = a1;
  *(void *)(v2 + 56) = v3;
  return v3;
}

uint64_t OUTLINED_FUNCTION_65_20()
{
  *(_WORD *)(v0 + 8) = 2080;
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_67_17(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v6, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_71_20(char a1)
{
  *uint64_t v1 = a1 & 1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_74_16(float a1)
{
  float *v2 = a1;
  *(_DWORD *)(v1 + 632) = v3;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_75_17()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_84_12()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_86_14()
{
  sub_1C972978C(v2, v1, v0);
}

unint64_t OUTLINED_FUNCTION_87_13()
{
  return sub_1C9AED278(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_91_8(uint64_t a1)
{
  *(void *)(v1 + 248) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_92_14(uint64_t a1)
{
  *(void *)(v1 + 240) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_95_14()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_101_9()
{
  return sub_1C9BED5D8();
}

uint64_t OUTLINED_FUNCTION_102_7(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = *(void *)(v2 - 88);
  *(void *)(v2 - 80) = a1;
  return sub_1C9BED8A8();
}

void OUTLINED_FUNCTION_107_6(os_unfair_lock_s *a1@<X8>)
{
  os_unfair_lock_lock(a1 + 15);
}

uint64_t OUTLINED_FUNCTION_108_5()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_109_6()
{
  *uint64_t v0 = v1;
  return sub_1C9BEA888();
}

uint64_t OUTLINED_FUNCTION_111_8()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_114_3()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_115_4()
{
  return sub_1C9BECF88();
}

void OUTLINED_FUNCTION_120_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v5, v4, a4, v6, 8u);
}

void OUTLINED_FUNCTION_122_3(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, os_log_type_t type)
{
  _os_log_impl(a1, v18, type, a4, v19, 0x1Cu);
}

void OUTLINED_FUNCTION_124_1(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xEu);
}

id sub_1C9AEE3CC()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return objc_msgSend(v0, sel_init);
}

void SiriLocationAccessGuardFlow.__allocating_init(needsPreciseLocation:)()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)&v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v0);
  sub_1C9BEC838();
}

void SiriLocationAccessGuardFlow.__allocating_init(needsPreciseLocation:strategy:)()
{
  if (qword_1EBC760D8 != -1) {
    swift_once();
  }
  sub_1C960E058((uint64_t)v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v0);
  sub_1C9BEC838();
}

uint64_t type metadata accessor for SiriLocationAccessGuardFlow()
{
  return self;
}

unint64_t LocationAccessFailureReason.debugDescription.getter()
{
  uint64_t v1 = 0x68747541746F6E2ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656C65636E61632ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000020;
  }
}

uint64_t LocationAccessFailureReason.hash(into:)()
{
  return sub_1C9BEE748();
}

BOOL static LocationAccessFailureReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t LocationAccessFailureReason.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C9AEE784()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615888;
  return SiriLocationAccessGuardFlowStrategy.makeFailureResponse(deviceState:requestingPreciseLocation:)();
}

uint64_t sub_1C9AEE834(uint64_t a1, uint64_t a2, char a3)
{
  v3[19] = a1;
  uint64_t v6 = sub_1C9BEAB08();
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = type metadata accessor for OutputGenerationManifest();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[26] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C9AEE97C;
  return static TCCTemplates.errorSiriNeedsLocationAccess(deviceState:requestingPreciseLocation:)(a2, a3);
}

uint64_t sub_1C9AEE97C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v4 = v3;
  *os_log_type_t v4 = *v1;
  *(void *)(v3 + 216) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v6();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
}

uint64_t sub_1C9AEEAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void **)(v22 + 216);
  uint64_t v26 = sub_1C9BECF88();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
  id v27 = v25;
  uint64_t v28 = (void *)sub_1C9BECF78();
  os_log_type_t v29 = sub_1C9BEDC78();
  BOOL v30 = OUTLINED_FUNCTION_105(v29);
  uint64_t v31 = *(void **)(v22 + 216);
  if (v30)
  {
    OUTLINED_FUNCTION_67();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_41_28(4.8149e-34);
    objc_msgSend(v31, sel_catId);
    sub_1C9BED568();
    OUTLINED_FUNCTION_67_18();
    uint64_t v34 = OUTLINED_FUNCTION_66_13(v32, v33, &a11);
    OUTLINED_FUNCTION_65_21(v34);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v35, v36, "#SiriLocationAccessGuardFlowStrategy makeFailureResponse - failure catId=%s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  id v37 = objc_msgSend(*(id *)(v22 + 216), sel_dialog);
  sub_1C96044C4(0, &qword_1EA58B518);
  unint64_t v38 = sub_1C9BED878();

  if (v38 >> 62)
  {
    OUTLINED_FUNCTION_57_27();
    sub_1C9BEE3C8();
    OUTLINED_FUNCTION_75_17();
    if (v37) {
      goto LABEL_8;
    }
  }
  else
  {
    id v37 = *(id *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v37)
    {
LABEL_8:
      OUTLINED_FUNCTION_47_1();
      MEMORY[0x1CB78B3A0](0, v38);
      OUTLINED_FUNCTION_75_17();
      id v39 = objc_msgSend(v37, sel_fullPrint);

      uint64_t v40 = sub_1C9BED568();
      unint64_t v42 = v41;

      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = 0;
  unint64_t v42 = 0xE000000000000000;
LABEL_11:
  *(void *)(v22 + 224) = v40;
  *(void *)(v22 + 232) = v42;
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v22 + 240) = v43;
  *uint64_t v43 = v22;
  v43[1] = sub_1C9AEED30;
  OUTLINED_FUNCTION_10_1();
  return static TCCTemplates.locationServicesSettingsLabel()();
}

uint64_t sub_1C9AEED30()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *os_log_type_t v4 = v3;
  OUTLINED_FUNCTION_76_15(v5, v6);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v8 = v7;
  *(void *)(v3 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1C9AEEE10()
{
  if (qword_1EBC78230 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_16_56();
  *(unsigned char *)(v0 + *(int *)(v1 + 24)) = 0;
  *(unsigned char *)(v0 + *(int *)(v1 + 28)) = 0;
  uint64_t v2 = OUTLINED_FUNCTION_13_72();
  OUTLINED_FUNCTION_1_92(v2);
  OUTLINED_FUNCTION_40_31(v3);
  sub_1C9BEC958();
  OUTLINED_FUNCTION_0_33();
  uint64_t v4 = OUTLINED_FUNCTION_28_34();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_6_80(v6, v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1C965C4EC();
}

uint64_t sub_1C9AEF024()
{
  OUTLINED_FUNCTION_33();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AEF0A4()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  uint64_t v3 = v1 + 72;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9AEF1B4()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 200);

  sub_1C965EA78(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t SiriLocationAccessGuardFlowStrategy.makeFailureResponse(deviceState:requestingPreciseLocation:)()
{
  OUTLINED_FUNCTION_33();
  char v2 = v1;
  uint64_t v4 = v3;
  v0[19] = v5;
  uint64_t v6 = sub_1C9BEAB08();
  v0[20] = v6;
  OUTLINED_FUNCTION_5_0(v6);
  v0[21] = v7;
  v0[22] = swift_task_alloc();
  v0[23] = type metadata accessor for OutputGenerationManifest();
  v0[24] = swift_task_alloc();
  v0[25] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[26] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1C9AEF35C;
  return static TCCTemplates.errorSiriNeedsLocationAccess(deviceState:requestingPreciseLocation:)(v4, v2);
}

uint64_t sub_1C9AEF35C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 216) = v5;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_22_0();
    return v6();
  }
  else
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v8, v9, v10);
  }
}

uint64_t sub_1C9AEF484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void **)(v22 + 216);
  uint64_t v26 = sub_1C9BECF88();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EBC7A520);
  id v27 = v25;
  uint64_t v28 = (void *)sub_1C9BECF78();
  os_log_type_t v29 = sub_1C9BEDC78();
  BOOL v30 = OUTLINED_FUNCTION_105(v29);
  uint64_t v31 = *(void **)(v22 + 216);
  if (v30)
  {
    OUTLINED_FUNCTION_67();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_41_28(4.8149e-34);
    objc_msgSend(v31, sel_catId);
    sub_1C9BED568();
    OUTLINED_FUNCTION_67_18();
    uint64_t v34 = OUTLINED_FUNCTION_66_13(v32, v33, &a11);
    OUTLINED_FUNCTION_65_21(v34);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v35, v36, "#SiriLocationAccessGuardFlowStrategy makeFailureResponse - failure catId=%s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  id v37 = objc_msgSend(*(id *)(v22 + 216), sel_dialog);
  sub_1C96044C4(0, &qword_1EA58B518);
  unint64_t v38 = sub_1C9BED878();

  if (v38 >> 62)
  {
    OUTLINED_FUNCTION_57_27();
    sub_1C9BEE3C8();
    OUTLINED_FUNCTION_75_17();
    if (v37) {
      goto LABEL_8;
    }
  }
  else
  {
    id v37 = *(id *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v37)
    {
LABEL_8:
      OUTLINED_FUNCTION_47_1();
      MEMORY[0x1CB78B3A0](0, v38);
      OUTLINED_FUNCTION_75_17();
      id v39 = objc_msgSend(v37, sel_fullPrint);

      uint64_t v40 = sub_1C9BED568();
      unint64_t v42 = v41;

      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v40 = 0;
  unint64_t v42 = 0xE000000000000000;
LABEL_11:
  *(void *)(v22 + 224) = v40;
  *(void *)(v22 + 232) = v42;
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v22 + 240) = v43;
  *uint64_t v43 = v22;
  v43[1] = sub_1C9AEF710;
  OUTLINED_FUNCTION_10_1();
  return static TCCTemplates.locationServicesSettingsLabel()();
}

uint64_t sub_1C9AEF710()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  OUTLINED_FUNCTION_76_15(v5, v6);
  uint64_t v7 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v8 = v7;
  *(void *)(v3 + 248) = v0;
  swift_task_dealloc();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v9, v10, v11);
}

void sub_1C9AEF7F0()
{
  if (qword_1EBC78230 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_16_56();
  *(unsigned char *)(v0 + *(int *)(v1 + 24)) = 0;
  *(unsigned char *)(v0 + *(int *)(v1 + 28)) = 0;
  uint64_t v2 = OUTLINED_FUNCTION_13_72();
  OUTLINED_FUNCTION_1_92(v2);
  OUTLINED_FUNCTION_40_31(v3);
  sub_1C9BEC958();
  OUTLINED_FUNCTION_0_33();
  uint64_t v4 = OUTLINED_FUNCTION_28_34();
  v5(v4);
  uint64_t v6 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_6_80(v6, v7, v8, v9, v10, v11, v12, v13, v14);
  sub_1C965C4EC();
}

uint64_t sub_1C9AEFA04()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  void *v2 = v1;
  uint64_t v3 = v1 + 72;
  uint64_t v4 = *v0;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9AEFB14()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C9615010;
  return SiriLocationAccessGuardFlowStrategy.makeErrorResponse(error:)();
}

uint64_t sub_1C9AEFBAC(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = sub_1C9BEAB08();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  v1[14] = type metadata accessor for OutputGenerationManifest();
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9AEFCAC, 0, 0);
}

void sub_1C9AEFCAC()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 136) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9AEFDF8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 168) = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1C9AEFEEC()
{
  uint64_t v29 = v0;
  swift_release();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 168);
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  id v4 = v2;
  uint64_t v5 = (void *)sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC78();
  BOOL v7 = OUTLINED_FUNCTION_105(v6);
  uint64_t v8 = *(void **)(v0 + 168);
  if (v7)
  {
    OUTLINED_FUNCTION_67();
    uint64_t v1 = OUTLINED_FUNCTION_35_0();
    uint64_t v28 = v1;
    OUTLINED_FUNCTION_70_20(4.8149e-34);
    id v9 = objc_msgSend(v8, sel_catId);
    sub_1C9BED568();
    OUTLINED_FUNCTION_67_18();
    uint64_t v12 = OUTLINED_FUNCTION_66_13(v10, v11, &v28);
    OUTLINED_FUNCTION_58_25(v12);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v13, v14, "#SiriLocationAccessGuardFlowStrategy makeErrorResponse - error catId=%s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  if (qword_1EBC78230 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_37();
  *((unsigned char *)v8 + *(int *)(v1 + 24)) = 0;
  *((unsigned char *)v8 + *(int *)(v1 + 28)) = 0;
  uint64_t v15 = OUTLINED_FUNCTION_13_72();
  OUTLINED_FUNCTION_1_92(v15);
  OUTLINED_FUNCTION_40_31(v16);
  sub_1C9BEC958();
  OUTLINED_FUNCTION_0_33();
  uint64_t v17 = OUTLINED_FUNCTION_28_34();
  v18(v17);
  uint64_t v19 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_6_80(v19, v20, v21, v22, v23, v24, v25, v26, v27);
  sub_1C965C4EC();
}

uint64_t sub_1C9AF01E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t sub_1C9AF028C()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_30_34();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C9AF037C()
{
  OUTLINED_FUNCTION_33();
  uint64_t v1 = *(void *)(v0 + 128);

  sub_1C965EA78(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v2();
}

uint64_t SiriLocationAccessGuardFlowStrategy.makeErrorResponse(error:)()
{
  OUTLINED_FUNCTION_24();
  v0[10] = v1;
  uint64_t v2 = sub_1C9BEAB08();
  v0[11] = v2;
  OUTLINED_FUNCTION_5_0(v2);
  v0[12] = v3;
  v0[13] = swift_task_alloc();
  v0[14] = type metadata accessor for OutputGenerationManifest();
  v0[15] = swift_task_alloc();
  v0[16] = swift_task_alloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

void sub_1C9AF04D8()
{
  OUTLINED_FUNCTION_33();
  if (qword_1EA588018 != -1) {
    swift_once();
  }
  *(void *)(v0 + 136) = qword_1EA5C2788;
  sub_1C9BEC838();
}

uint64_t sub_1C9AF0624()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  *uint64_t v4 = *v1;
  *(void *)(v3 + 168) = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

void sub_1C9AF0718()
{
  uint64_t v29 = v0;
  swift_release();
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 168);
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  id v4 = v2;
  uint64_t v5 = (void *)sub_1C9BECF78();
  os_log_type_t v6 = sub_1C9BEDC78();
  BOOL v7 = OUTLINED_FUNCTION_105(v6);
  uint64_t v8 = *(void **)(v0 + 168);
  if (v7)
  {
    OUTLINED_FUNCTION_67();
    uint64_t v1 = OUTLINED_FUNCTION_35_0();
    uint64_t v28 = v1;
    OUTLINED_FUNCTION_70_20(4.8149e-34);
    id v9 = objc_msgSend(v8, sel_catId);
    sub_1C9BED568();
    OUTLINED_FUNCTION_67_18();
    uint64_t v12 = OUTLINED_FUNCTION_66_13(v10, v11, &v28);
    OUTLINED_FUNCTION_58_25(v12);
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v13, v14, "#SiriLocationAccessGuardFlowStrategy makeErrorResponse - error catId=%s");
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
  if (qword_1EBC78230 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_36_37();
  *((unsigned char *)v8 + *(int *)(v1 + 24)) = 0;
  *((unsigned char *)v8 + *(int *)(v1 + 28)) = 0;
  uint64_t v15 = OUTLINED_FUNCTION_13_72();
  OUTLINED_FUNCTION_1_92(v15);
  OUTLINED_FUNCTION_40_31(v16);
  sub_1C9BEC958();
  OUTLINED_FUNCTION_0_33();
  uint64_t v17 = OUTLINED_FUNCTION_28_34();
  v18(v17);
  uint64_t v19 = OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_6_80(v19, v20, v21, v22, v23, v24, v25, v26, v27);
  sub_1C965C4EC();
}

uint64_t sub_1C9AF0A14()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_30_34();
  uint64_t v2 = v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v3 = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v0);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v4, v5, v6);
}

uint64_t sub_1C9AF0B04(uint64_t a1, uint64_t a2, char a3)
{
  id v9 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_1EA599470 + dword_1EA599470);
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_1C9615888;
  return v9(a1, a2, a3);
}

uint64_t sub_1C9AF0BC8(uint64_t a1, uint64_t a2)
{
  BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EA599468 + dword_1EA599468);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C9615888;
  return v7(a1, a2);
}

uint64_t sub_1C9AF0C80()
{
  if (qword_1EA5881E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = qword_1EA5C2950;
  if (*(void *)(qword_1EA5C2950 + 16) && (uint64_t v1 = sub_1C975C4C8(), (v2 & 1) != 0))
  {
    char v3 = *(unsigned char *)(*(void *)(v0 + 56) + v1);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    uint64_t v6 = &unk_1F23F7160;
    unint64_t v7 = sub_1C9AF60B4();
    char v3 = sub_1C9BEAD08();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  return v3 & 1;
}

void sub_1C9AF0D4C()
{
  uint64_t v1 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  char v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v9 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1C9AF5DF0(*(id *)(v1 + 184), *(id *)(v1 + 192), *(unsigned char *)(v1 + 200));
    uint64_t v7 = sub_1C9BED5D8();
    sub_1C95FF228(v7, v8, &v9);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v3, v4, "#SiriLocationAccessGuardFlow transitioned to state=%s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v6, -1, -1);
    MEMORY[0x1CB78C440](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

id sub_1C9AF0F18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 184);
  char v3 = *(void **)(v1 + 192);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 200);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1C9AF5DF0(v2, v3, v4);
}

void sub_1C9AF0F2C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  unint64_t v4 = *(void *)(v1 + 184);
  char v3 = *(void **)(v1 + 192);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)a1;
  char v5 = *(unsigned char *)(v1 + 200);
  *(unsigned char *)(v1 + 200) = v2;
  sub_1C9AF5840(v4, v3, v5);

  sub_1C9AF0D4C();
}

uint64_t sub_1C9AF0F70()
{
  sub_1C9AF0FEC((uint64_t)v2);
  uint64_t v0 = v2[0];

  return v0;
}

void sub_1C9AF0FAC(unsigned char *a1@<X8>)
{
  sub_1C9AF0FEC((uint64_t)v3);
  char v2 = v3[1];

  *a1 = v2;
}

uint64_t sub_1C9AF0FEC@<X0>(uint64_t a1@<X8>)
{
  sub_1C9AF0F18((uint64_t)&v6);
  uint64_t result = v6;
  uint64_t v3 = (uint64_t)v7;
  if (v8 == 1)
  {
    unint64_t v4 = v6 >> 8;
    char v5 = v6 & 1;
  }
  else
  {
    sub_1C9AF5840(v6, v7, v8);
    sub_1C9AF6054();
    uint64_t result = swift_allocError();
    uint64_t v3 = result;
    LOBYTE(v4) = 3;
    char v5 = 1;
  }
  *(unsigned char *)a1 = v5;
  *(unsigned char *)(a1 + 1) = v4;
  *(void *)(a1 + 8) = v3;
  return result;
}

uint64_t sub_1C9AF1074(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  v2[18] = *v1;
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v3, v4, v5);
}

uint64_t sub_1C9AF10C0()
{
  uint64_t v29 = v0;
  uint64_t v1 = v0 + 16;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  *(void *)(v0 + 152) = __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  swift_retain_n();
  uint64_t v3 = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v26 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1C9AF0F18((uint64_t)v27);
    char v6 = v28;
    *(_OWORD *)(v0 + 64) = *(_OWORD *)v27;
    *(unsigned char *)(v0 + 80) = v6;
    uint64_t v7 = sub_1C9BED5D8();
    *(void *)(v0 + 120) = sub_1C95FF228(v7, v8, &v26);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_153_0();
    _os_log_impl(&dword_1C95F9000, v3, v4, "#SiriLocationAccessGuardFlow execute - executing with state=%s", v5, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v1 = v0 + 16;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_153_0();
  }

  sub_1C9AF0F18(v1);
  unint64_t v9 = *(void *)(v0 + 16);
  unint64_t v10 = *(void *)(v0 + 24);
  *(void *)(v0 + 160) = v9;
  *(void *)(v0 + 168) = v10;
  if (*(unsigned char *)(v0 + 32))
  {
    if (*(unsigned char *)(v0 + 32) == 1)
    {
      uint64_t v11 = *(void *)(v0 + 128);
      sub_1C9AF5840(v9, (id)v10, 1);
      uint64_t v12 = v11;
    }
    else
    {
      if (!(v9 | v10))
      {
        *(_OWORD *)uint64_t v27 = xmmword_1C9BF2260;
        char v28 = 2;
        sub_1C9AF0F2C((uint64_t)v27);
        sub_1C9AF1D1C();
      }
      swift_retain_n();
      uint64_t v19 = sub_1C9BECF78();
      os_log_type_t v20 = sub_1C9BEDC88();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)OUTLINED_FUNCTION_67();
        uint64_t v26 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)uint64_t v21 = 136315138;
        sub_1C9AF0F18((uint64_t)v27);
        char v22 = v28;
        *(_OWORD *)(v0 + 40) = *(_OWORD *)v27;
        *(unsigned char *)(v0 + 56) = v22;
        uint64_t v23 = sub_1C9BED5D8();
        *(void *)(v0 + 112) = sub_1C95FF228(v23, v24, &v26);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_153_0();
        _os_log_impl(&dword_1C95F9000, v19, v20, "#SiriLocationAccessGuardFlow execute - unexpected execute()-run during state=%s", v21, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        OUTLINED_FUNCTION_153_0();
      }

      uint64_t v12 = *(void *)(v0 + 128);
    }
    static ExecuteResponse.complete()(v12);
    OUTLINED_FUNCTION_22_0();
    return v25();
  }
  else
  {
    sub_1C9AF1824(v9, *(unsigned char *)(*(void *)(v0 + 136) + 16), (uint64_t)v27);
    uint64_t v13 = LOBYTE(v27[0]);
    uint64_t v14 = BYTE1(v27[0]);
    id v15 = v27[1];
    *(id *)(v0 + 176) = v27[1];
    v27[0] = (id)(v13 | (v14 << 8));
    v27[1] = v15;
    char v28 = 1;
    id v16 = v15;
    sub_1C9AF0F2C((uint64_t)v27);
    *(unsigned char *)(v0 + 88) = v13;
    *(unsigned char *)(v0 + 89) = v14;
    *(void *)(v0 + 96) = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1C9AF1508;
    return sub_1C9AF27B0();
  }
}

uint64_t sub_1C9AF1508()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AF15E4()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AF5840(*(void *)(v0 + 160), *(id *)(v0 + 168), 0);
  uint64_t v1 = *(void *)(v0 + 128);

  static ExecuteResponse.complete()(v1);
  OUTLINED_FUNCTION_22_0();
  return v2();
}

uint64_t sub_1C9AF1654()
{
  uint64_t v1 = *(void **)(v0 + 192);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 192);
    unint64_t v7 = *(void *)(v0 + 160);
    id v15 = *(id *)(v0 + 168);
    uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v6;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 104) = v11;
    sub_1C9BEDF68();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_1C95F9000, v4, v5, "#SiriLocationAccessGuardFlow execute - failed to issue response; error=%@",
      v8,
      0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
    sub_1C9AF5840(v7, v15, 0);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 192);
    sub_1C9AF5840(*(void *)(v0 + 160), *(id *)(v0 + 168), 0);
  }
  uint64_t v12 = *(void *)(v0 + 128);

  static ExecuteResponse.complete()(v12);
  OUTLINED_FUNCTION_22_0();
  return v13();
}

void sub_1C9AF1824(unint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((~a1 & 0xF000000000000006) == 0)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    uint64_t v6 = (void *)OUTLINED_FUNCTION_34(v5, (uint64_t)qword_1EBC7A520);
    os_log_type_t v7 = sub_1C9BEDC88();
    if (OUTLINED_FUNCTION_105(v7))
    {
      *(_WORD *)OUTLINED_FUNCTION_19() = 0;
      OUTLINED_FUNCTION_248(&dword_1C95F9000, v8, v9, "#SiriLocationAccessGuardFlow convertOutcomeFrom - unexpected missing LocationAuthorizationResult");
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C9AF6054();
    uint64_t v10 = swift_allocError();
    *(_WORD *)a3 = 769;
    *(void *)(a3 + 8) = v10;
    return;
  }
  if ((a1 >> 62) < 2)
  {
    if (a2)
    {
      if ((a1 >> 62) > 1) {
        int v12 = 0;
      }
      else {
        int v12 = a1 & 1;
      }
    }
    else
    {
      int v12 = 1;
    }
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_1C9BECF88();
    uint64_t v31 = OUTLINED_FUNCTION_34(v30, (uint64_t)qword_1EBC7A520);
    os_log_type_t v32 = sub_1C9BEDC68();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 67109120;
      LODWORD(v34) = v12;
      sub_1C9BEDF68();
      _os_log_impl(&dword_1C95F9000, v31, v32, "#SiriLocationAccessGuardFlow convertOutcomeFrom - user authorize Siri for location data with sufficient precision=%{BOOL}d", v33, 8u);
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C96E945C(a1);
    if (v12) {
      __int16 v24 = 768;
    }
    else {
      __int16 v24 = 1;
    }
LABEL_39:
    *(_WORD *)a3 = v24;
    *(void *)(a3 + 8) = 0;
    return;
  }
  if (a1 >> 62 != 2)
  {
    if (a1 >> 1 == 0x6000000000000000)
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v20 = sub_1C9BECF88();
      uint64_t v21 = OUTLINED_FUNCTION_34(v20, (uint64_t)qword_1EBC7A520);
      os_log_type_t v22 = sub_1C9BEDC68();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_176(v23);
        _os_log_impl(&dword_1C95F9000, v21, v22, "#SiriLocationAccessGuardFlow convertOutcomeFrom - user does NOT authorize Siri for location data", v3, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      sub_1C96E945C(a1);
      __int16 v24 = 257;
    }
    else
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C9BECF88();
      uint64_t v26 = (void *)OUTLINED_FUNCTION_34(v25, (uint64_t)qword_1EBC7A520);
      os_log_type_t v27 = sub_1C9BEDC68();
      if (OUTLINED_FUNCTION_105(v27))
      {
        *(_WORD *)OUTLINED_FUNCTION_19() = 0;
        OUTLINED_FUNCTION_248(&dword_1C95F9000, v28, v29, "#SiriLocationAccessGuardFlow convertOutcomeFrom - user or system canceled the prompt for location data");
        OUTLINED_FUNCTION_11_4();

        sub_1C96E945C(0xC000000000000008);
      }
      else
      {
      }
      __int16 v24 = 513;
    }
    goto LABEL_39;
  }
  uint64_t v13 = a1 & 0x3FFFFFFFFFFFFFFFLL;
  sub_1C96E9444(a1);
  sub_1C96E9444(a1);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C9BECF88();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBC7A520);
  sub_1C96E9444(a1);
  sub_1C96E9444(a1);
  id v15 = sub_1C9BECF78();
  os_log_type_t v16 = sub_1C9BEDC88();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)OUTLINED_FUNCTION_67();
    uint64_t v34 = OUTLINED_FUNCTION_35_0();
    *(_DWORD *)uint64_t v17 = 136315138;
    sub_1C96E9444(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
    uint64_t v18 = sub_1C9BED5D8();
    sub_1C95FF228(v18, v19, &v34);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C96E945C(a1);
    sub_1C96E945C(a1);
    _os_log_impl(&dword_1C95F9000, v15, v16, "#SiriLocationAccessGuardFlow convertOutcomeFrom - error-LocationAuthorizationResult; error=%s",
      v17,
      0xCu);
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C96E945C(a1);
    sub_1C96E945C(a1);
  }

  sub_1C96E945C(a1);
  *(_WORD *)a3 = 769;
  *(void *)(a3 + 8) = v13;
}

void sub_1C9AF1D1C()
{
  char v1 = *(unsigned char *)(v0 + 16);
  sub_1C95FD5F0(v0 + 24, (uint64_t)v7);
  sub_1C95FD5F0(v0 + 64, (uint64_t)v6);
  sub_1C95FD5F0(v0 + 104, (uint64_t)v5);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4E4D0]), sel_init);
  v4[3] = sub_1C96044C4(0, &qword_1EA599408);
  v4[4] = &off_1F23E50A0;
  v4[0] = v2;
  sub_1C9AED410((uint64_t)v4, (uint64_t)v3);
  sub_1C9AF50A0(v1, (uint64_t)v7, (uint64_t)v3, (uint64_t)v6, (uint64_t)v5, 2u, (uint64_t)sub_1C9AE1100, 0);
}

void sub_1C9AF1E74(unint64_t a1)
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C9BECF88();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBC7A520);
  sub_1C98CE28C(a1);
  sub_1C98CE28C(a1);
  id v3 = (void *)sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_96(v4))
  {
    uint64_t v5 = (_DWORD *)OUTLINED_FUNCTION_67();
    unint64_t v11 = OUTLINED_FUNCTION_35_0();
    *uint64_t v5 = 136315138;
    sub_1C98CE28C(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589818);
    uint64_t v6 = sub_1C9BED5D8();
    sub_1C95FF228(v6, v7, (uint64_t *)&v11);
    OUTLINED_FUNCTION_80_15();
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_33_33();
    OUTLINED_FUNCTION_25(&dword_1C95F9000, v8, v9, "#SiriLocationAccessGuardFlow onAuthorizationResult - incoming authorizationResult=%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    OUTLINED_FUNCTION_33_33();
  }

  sub_1C9AF0F18((uint64_t)&v11);
  BOOL v10 = v13 == 2 && v11 == 1;
  if (!v10 || v12)
  {
    sub_1C9AF5840(v11, v12, v13);
    sub_1C9AF0F18((uint64_t)&v11);
    if (v13 == 1) {
      OUTLINED_FUNCTION_50_26();
    }
    sub_1C9AF5840(v11, v12, v13);
    OUTLINED_FUNCTION_50_26();
  }
  unint64_t v11 = a1;
  id v12 = 0;
  char v13 = 0;
  sub_1C98CE28C(a1);
  sub_1C9AF0F2C((uint64_t)&v11);
}

BOOL sub_1C9AF2350(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int v2 = a1[1];
  unint64_t v3 = *((void *)a1 + 1);
  int v4 = a2[1];
  unint64_t v5 = *((void *)a2 + 1);
  if (v2 != 3)
  {
    if (v4 != 3 && v2 == v4) {
      goto LABEL_4;
    }
    return 0;
  }
  if (v4 != 3) {
    return 0;
  }
LABEL_4:
  BOOL result = (v3 | v5) == 0;
  if (v3)
  {
    if (v5)
    {
      id v7 = (id)v5;
      id v8 = (id)v3;
      char v9 = sub_1C98093B8();

      return v9 & 1;
    }
  }
  return result;
}

unint64_t sub_1C9AF2400()
{
  char v1 = *(void **)(v0 + 8);
  sub_1C9BEE188();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599478);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  sub_1C9BED6B8();
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA589510);
  sub_1C9BED5D8();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  return 0xD000000000000010;
}

void sub_1C9AF254C(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C9BEAB08();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AC0]), sel_init);
  sub_1C9BEAAF8();
  uint64_t v6 = sub_1C9BEAAB8();
  uint64_t v8 = v7;
  char v9 = *(void (**)(uint64_t))(v3 + 8);
  uint64_t v10 = OUTLINED_FUNCTION_79_16();
  v9(v10);
  sub_1C97BA8E8(v6, v8, v5);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AD0]), sel_init);
  id v12 = v5;
  id v13 = v11;
  sub_1C9962F1C(v12);
  if (v14)
  {
    id v15 = (void *)sub_1C9BED538();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = 0;
  }
  objc_msgSend(v13, sel_setRefId_, v15);

  id v16 = v13;
  sub_1C9BEAAF8();
  uint64_t v17 = sub_1C9BEAAB8();
  uint64_t v19 = v18;
  uint64_t v20 = OUTLINED_FUNCTION_79_16();
  v9(v20);
  sub_1C97BA8E8(v17, v19, v16);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78EF0);
  uint64_t v21 = OUTLINED_FUNCTION_7_0();
  *(_OWORD *)(v21 + 16) = xmmword_1C9BF02F0;
  *(void *)(v21 + 32) = v16;
  uint64_t v24 = v21;
  sub_1C9BED8A8();
  id v22 = v16;
  sub_1C965FE10(v24, v12);
  uint64_t v23 = OUTLINED_FUNCTION_7_0();
  *(_OWORD *)(v23 + 16) = xmmword_1C9BF02F0;
  *(void *)(v23 + 32) = v12;
  sub_1C9BED8A8();
  a1[3] = type metadata accessor for AceOutput();
  a1[4] = (uint64_t)&protocol witness table for AceOutput;
  __swift_allocate_boxed_opaque_existential_0(a1);
  AceOutput.init(commands:flowActivity:)();
}

uint64_t sub_1C9AF27B0()
{
  OUTLINED_FUNCTION_24();
  uint64_t v3 = v2;
  *(void *)(v1 + 488) = v0;
  uint64_t v4 = sub_1C9BEE308();
  *(void *)(v1 + 496) = v4;
  OUTLINED_FUNCTION_5_0(v4);
  *(void *)(v1 + 504) = v5;
  *(void *)(v1 + 512) = swift_task_alloc();
  *(unsigned char *)(v1 + 640) = *(unsigned char *)v3;
  *(unsigned char *)(v1 + 641) = *(unsigned char *)(v3 + 1);
  *(void *)(v1 + 520) = *(void *)(v3 + 8);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v6, v7, v8);
}

uint64_t sub_1C9AF2860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v24;
  a22 = v25;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  *(_OWORD *)(v22 + 16) = 0u;
  uint64_t v26 = (_OWORD *)(v22 + 16);
  char v27 = *(unsigned char *)(v22 + 640);
  *(_OWORD *)(v22 + 32) = 0u;
  *(void *)(v22 + 48) = 0;
  if (v27)
  {
    if (*(unsigned char *)(v22 + 641) == 2)
    {
      sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
      *uint64_t v26 = 0u;
      *(_OWORD *)(v22 + 32) = 0u;
      *(void *)(v22 + 48) = 0;
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_1C9BECF88();
      *(void *)(v22 + 528) = __swift_project_value_buffer(v28, (uint64_t)qword_1EBC7A520);
      uint64_t v29 = sub_1C9BECF78();
      os_log_type_t v30 = sub_1C9BEDC78();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl(&dword_1C95F9000, v29, v30, "#SiriLocationAccessGuardFlow issueResponse - dismissing on cancel...", v31, 2u);
        OUTLINED_FUNCTION_11_4();
      }
      uint64_t v32 = *(void *)(v22 + 488);

      __swift_project_boxed_opaque_existential_1((void *)(v32 + 104), *(void *)(v32 + 128));
      *(void *)(v22 + 536) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96AE0]), sel_init);
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v22 + 544) = v33;
      sub_1C96044C4(0, (unint64_t *)&qword_1EBC77FF0);
      *uint64_t v33 = v22;
      v33[1] = sub_1C9AF3150;
      OUTLINED_FUNCTION_10_1();
      return AceServiceInvokerAsync.submit<A>(_:)();
    }
    else
    {
      id v46 = *(void **)(v22 + 520);
      if (v46)
      {
        id v47 = v46;
        if (qword_1EBC7A3B8 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_1C9BECF88();
        *(void *)(v22 + 584) = __swift_project_value_buffer(v48, (uint64_t)qword_1EBC7A520);
        id v49 = v46;
        id v50 = v46;
        uint64_t v51 = sub_1C9BECF78();
        os_log_type_t v52 = sub_1C9BEDC78();
        if (OUTLINED_FUNCTION_96(v52))
        {
          os_log_type_t v53 = (uint8_t *)OUTLINED_FUNCTION_67();
          OUTLINED_FUNCTION_35_0();
          OUTLINED_FUNCTION_93_1();
          *(_DWORD *)os_log_type_t v53 = 136315138;
          *(void *)(v22 + 464) = v46;
          id v54 = v46;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78DD0);
          uint64_t v55 = sub_1C9BED5D8();
          *(void *)(v22 + 472) = sub_1C95FF228(v55, v56, &a11);
          sub_1C9BEDF68();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1C95F9000, v51, v23, "#SiriLocationAccessGuardFlow issueResponse - for error=%s", v53, 0xCu);
          OUTLINED_FUNCTION_41_0();
          OUTLINED_FUNCTION_11_4();
          OUTLINED_FUNCTION_11_4();
        }
        else
        {
        }
        uint64_t v95 = *(void **)(v22 + 488);
        uint64_t v96 = v95[22];
        __swift_project_boxed_opaque_existential_1(v95 + 18, v95[21]);
        uint64_t v108 = *(void *)(v96 + 16) + **(int **)(v96 + 16);
        unint64_t v97 = (void *)swift_task_alloc();
        *(void *)(v22 + 592) = v97;
        *unint64_t v97 = v22;
        v97[1] = sub_1C9AF395C;
        OUTLINED_FUNCTION_10_1();
        return v103(v98, v99, v100, v101, v102, v103, v104, v105, v108, v96 + 16, a11, a12, a13, a14);
      }
      else
      {
        os_log_type_t v84 = *(void **)(v22 + 488);
        uint64_t v85 = v84[22];
        __swift_project_boxed_opaque_existential_1(v84 + 18, v84[21]);
        uint64_t v107 = *(void *)(v85 + 8) + **(int **)(v85 + 8);
        uint64_t v86 = (void *)swift_task_alloc();
        *(void *)(v22 + 608) = v86;
        *uint64_t v86 = v22;
        v86[1] = sub_1C9AF3E54;
        OUTLINED_FUNCTION_10_1();
        return v93(v87, v88, v89, v90, v91, v92, v93, v94, v107, v85 + 8, a11, a12, a13, a14);
      }
    }
  }
  else
  {
    sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
    *uint64_t v26 = 0u;
    *(_OWORD *)(v22 + 32) = 0u;
    *(void *)(v22 + 48) = 0;
    sub_1C99C54FC(v22 + 16, v22 + 136, &qword_1EA588550);
    uint64_t v36 = *(void *)(v22 + 160);
    sub_1C95FE7C0(v22 + 136, &qword_1EA588550);
    if (!v36)
    {
      uint64_t v37 = OUTLINED_FUNCTION_9_73();
      if (v38(v37))
      {
        sub_1C9AF254C((uint64_t *)(v22 + 376));
        sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
        OUTLINED_FUNCTION_57_28();
      }
    }
    sub_1C99C54FC(v22 + 16, v22 + 216, &qword_1EA588550);
    if (*(void *)(v22 + 240))
    {
      uint64_t v39 = v22 + 256;
      sub_1C95FD5D8((long long *)(v22 + 216), v22 + 176);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v40 = sub_1C9BECF88();
      __swift_project_value_buffer(v40, (uint64_t)qword_1EBC7A520);
      sub_1C95FD5F0(v22 + 176, v22 + 256);
      unint64_t v41 = sub_1C9BECF78();
      os_log_type_t v42 = sub_1C9BEDC78();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)OUTLINED_FUNCTION_67();
        a11 = OUTLINED_FUNCTION_35_0();
        *(_DWORD *)uint64_t v43 = 136315138;
        sub_1C95FD5F0(v39, v22 + 296);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
        uint64_t v44 = sub_1C9BED5D8();
        *(void *)(v22 + 456) = sub_1C95FF228(v44, v45, &a11);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1(v39);
        _os_log_impl(&dword_1C95F9000, v41, v42, "#SiriLocationAccessGuardFlow issueResponse - output=%s", v43, 0xCu);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1(v22 + 256);
      }

      uint64_t v71 = *(void **)(v22 + 488);
      uint64_t v72 = v71[12];
      __swift_project_boxed_opaque_existential_1(v71 + 8, v71[11]);
      uint64_t v106 = *(void *)(v72 + 8) + **(int **)(v72 + 8);
      uint64_t v73 = swift_task_alloc();
      uint64_t v74 = (void *)OUTLINED_FUNCTION_77_16(v73);
      *uint64_t v74 = v75;
      v74[1] = sub_1C9AF4330;
      OUTLINED_FUNCTION_10_1();
      return v80(v76, v77, v78, v79, v80, v81, v82, v83, v106, v72 + 8, a11, a12, a13, a14);
    }
    else
    {
      sub_1C95FE7C0(v22 + 216, &qword_1EA588550);
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v57 = sub_1C9BECF88();
      uint64_t v58 = (void *)OUTLINED_FUNCTION_34(v57, (uint64_t)qword_1EBC7A520);
      os_log_type_t v59 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_105(v59))
      {
        uint64_t v60 = (_WORD *)OUTLINED_FUNCTION_19();
        OUTLINED_FUNCTION_176(v60);
        OUTLINED_FUNCTION_121(&dword_1C95F9000, v61, v62, "#SiriLocationAccessGuardFlow issueResponse - none issued");
        OUTLINED_FUNCTION_11_4();
      }

      sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
      swift_task_dealloc();
      OUTLINED_FUNCTION_90();
      OUTLINED_FUNCTION_10_1();
      return v64(v63, v64, v65, v66, v67, v68, v69, v70, a9, a10, a11, a12, a13, a14);
    }
  }
}

uint64_t sub_1C9AF3150()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v5 = *(void **)(v4 + 536);
  uint64_t v6 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v7 = v6;
  *(void *)(v9 + 552) = v8;
  *(void *)(v9 + 560) = v0;
  swift_task_dealloc();

  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v10, v11, v12);
}

uint64_t sub_1C9AF324C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  id v25 = *(id *)(v22 + 552);
  uint64_t v26 = (void *)sub_1C9BECF78();
  os_log_type_t v27 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_105(v27))
  {
    uint64_t v28 = *(void **)(v22 + 552);
    OUTLINED_FUNCTION_67();
    a11 = OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_41_28(4.8149e-34);
    id v29 = v28;
    id v30 = objc_msgSend(v29, sel_description);
    uint64_t v31 = sub_1C9BED568();
    unint64_t v33 = v32;

    *(void *)(v22 + 480) = sub_1C95FF228(v31, v33, &a11);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();

    OUTLINED_FUNCTION_69_10(&dword_1C95F9000, v34, v35, "#SiriLocationAccessGuardFlow issueResponse - dismissed on cancel result=%s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v36 = *(void **)(v22 + 552);
  }
  sub_1C9BEE2F8();
  id v47 = (char *)&dword_1EA599418 + dword_1EA599418;
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v22 + 568) = v37;
  *uint64_t v37 = v22;
  v37[1] = sub_1C9AF3420;
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_10_1();
  return v43(v38, v39, v40, v41, v42, v43, v44, v45, a9, v47, a11, a12, a13, a14);
}

uint64_t sub_1C9AF3420()
{
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v5 = v4[64];
  uint64_t v6 = v4[63];
  uint64_t v7 = v4[62];
  uint64_t v8 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v9 = v8;
  *(void *)(v10 + 576) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v11, v12, v13);
}

uint64_t sub_1C9AF3558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;

  sub_1C99C54FC(v22 + 16, v22 + 136, &qword_1EA588550);
  uint64_t v25 = *(void *)(v22 + 160);
  sub_1C95FE7C0(v22 + 136, &qword_1EA588550);
  if (!v25)
  {
    uint64_t v26 = *(void **)(v22 + 488);
    uint64_t v27 = v26[6];
    uint64_t v28 = v26[7];
    __swift_project_boxed_opaque_existential_1(v26 + 3, v27);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28))
    {
      sub_1C9AF254C((uint64_t *)(v22 + 376));
      sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
      OUTLINED_FUNCTION_57_28();
    }
  }
  sub_1C99C54FC(v22 + 16, v22 + 216, &qword_1EA588550);
  if (*(void *)(v22 + 240))
  {
    sub_1C95FD5D8((long long *)(v22 + 216), v22 + 176);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1C9BECF88();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EBC7A520);
    sub_1C95FD5F0(v22 + 176, v22 + 256);
    id v30 = (void *)sub_1C9BECF78();
    os_log_type_t v31 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v31))
    {
      unint64_t v32 = (_DWORD *)OUTLINED_FUNCTION_67();
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_93_1();
      *unint64_t v32 = 136315138;
      sub_1C95FD5F0(v22 + 256, v22 + 296);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
      uint64_t v33 = sub_1C9BED5D8();
      uint64_t v35 = sub_1C95FF228(v33, v34, &a11);
      OUTLINED_FUNCTION_34_34(v35);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v22 + 256);
      OUTLINED_FUNCTION_25(&dword_1C95F9000, v36, v37, "#SiriLocationAccessGuardFlow issueResponse - output=%s");
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v22 + 256);
    }

    OUTLINED_FUNCTION_21_45();
    uint64_t v66 = (char *)v54 + *v54;
    uint64_t v67 = v53;
    uint64_t v55 = swift_task_alloc();
    unint64_t v56 = (void *)OUTLINED_FUNCTION_77_16(v55);
    *unint64_t v56 = v57;
    v56[1] = sub_1C9AF4330;
    OUTLINED_FUNCTION_35_36();
    OUTLINED_FUNCTION_10_1();
    return v62(v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, a11, a12, a13, a14);
  }
  else
  {
    sub_1C95FE7C0(v22 + 216, &qword_1EA588550);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v38 = sub_1C9BECF88();
    uint64_t v39 = (void *)OUTLINED_FUNCTION_34(v38, (uint64_t)qword_1EBC7A520);
    os_log_type_t v40 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_105(v40))
    {
      uint64_t v41 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_176(v41);
      OUTLINED_FUNCTION_121(&dword_1C95F9000, v42, v43, "#SiriLocationAccessGuardFlow issueResponse - none issued");
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_10_1();
    return v45(v44, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_1C9AF38E4()
{
  OUTLINED_FUNCTION_24();

  sub_1C95FE7C0(v0 + 16, &qword_1EA588550);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AF395C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 600) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AF3A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
  sub_1C9AA71B8(v22 + 416, v22 + 16);
  sub_1C99C54FC(v22 + 16, v22 + 336, &qword_1EA588550);
  if (*(void *)(v22 + 360))
  {

    sub_1C95FE7C0(v22 + 336, &qword_1EA588550);
  }
  else
  {
    sub_1C95FE7C0(v22 + 336, &qword_1EA588550);
    uint64_t v25 = sub_1C9BECF78();
    os_log_type_t v26 = sub_1C9BEDC78();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = *(void **)(v22 + 520);
    if (v27)
    {
      uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1C95F9000, v25, v26, "#SiriLocationAccessGuardFlow issueResponse - error response suppressed", v29, 2u);
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
    }
  }
  sub_1C99C54FC(v22 + 16, v22 + 136, &qword_1EA588550);
  uint64_t v30 = *(void *)(v22 + 160);
  sub_1C95FE7C0(v22 + 136, &qword_1EA588550);
  if (!v30)
  {
    uint64_t v31 = OUTLINED_FUNCTION_9_73();
    if (v32(v31))
    {
      sub_1C9AF254C((uint64_t *)(v22 + 376));
      sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
      OUTLINED_FUNCTION_57_28();
    }
  }
  sub_1C99C54FC(v22 + 16, v22 + 216, &qword_1EA588550);
  if (*(void *)(v22 + 240))
  {
    OUTLINED_FUNCTION_73_16();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1C9BECF88();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
    sub_1C95FD5F0(v22 + 16, v22 + 136);
    unint64_t v34 = (void *)sub_1C9BECF78();
    os_log_type_t v35 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v35))
    {
      OUTLINED_FUNCTION_67();
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_93_1();
      OUTLINED_FUNCTION_51_25(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
      uint64_t v36 = sub_1C9BED5D8();
      uint64_t v38 = sub_1C95FF228(v36, v37, &a11);
      OUTLINED_FUNCTION_34_34(v38);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v22 + 136);
      OUTLINED_FUNCTION_62_22(&dword_1C95F9000, v39, v40, "#SiriLocationAccessGuardFlow issueResponse - output=%s");
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1(v22 + 136);
    }

    OUTLINED_FUNCTION_21_45();
    uint64_t v69 = (char *)v57 + *v57;
    uint64_t v70 = v56;
    uint64_t v58 = swift_task_alloc();
    uint64_t v59 = (void *)OUTLINED_FUNCTION_77_16(v58);
    *uint64_t v59 = v60;
    v59[1] = sub_1C9AF4330;
    OUTLINED_FUNCTION_35_36();
    OUTLINED_FUNCTION_10_1();
    return v65(v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, a11, a12, a13, a14);
  }
  else
  {
    sub_1C95FE7C0(v22 + 216, &qword_1EA588550);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1C9BECF88();
    uint64_t v42 = (void *)OUTLINED_FUNCTION_34(v41, (uint64_t)qword_1EBC7A520);
    os_log_type_t v43 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_105(v43))
    {
      uint64_t v44 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_176(v44);
      OUTLINED_FUNCTION_121(&dword_1C95F9000, v45, v46, "#SiriLocationAccessGuardFlow issueResponse - none issued");
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C95FE7C0(v22 + 16, &qword_1EA588550);
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_10_1();
    return v48(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_1C9AF3E54()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 616) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AF3F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_40();
  a21 = v23;
  a22 = v24;
  OUTLINED_FUNCTION_98();
  a20 = v22;
  sub_1C95FE7C0((uint64_t)(v22 + 2), &qword_1EA588550);
  OUTLINED_FUNCTION_57_28();
  sub_1C99C54FC((uint64_t)(v22 + 2), (uint64_t)(v22 + 12), &qword_1EA588550);
  uint64_t v25 = v22[15];
  sub_1C95FE7C0((uint64_t)(v22 + 12), &qword_1EA588550);
  if (!v25)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1C9BECF88();
    BOOL v27 = OUTLINED_FUNCTION_34(v26, (uint64_t)qword_1EBC7A520);
    os_log_type_t v28 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v28))
    {
      uint64_t v29 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl(&dword_1C95F9000, v27, (os_log_type_t)((_BYTE)v22 + 96), "#SiriLocationAccessGuardFlow issueResponse - failure response suppressed", v29, 2u);
      OUTLINED_FUNCTION_11_4();
    }
  }
  sub_1C99C54FC((uint64_t)(v22 + 2), (uint64_t)(v22 + 17), &qword_1EA588550);
  uint64_t v30 = v22[20];
  sub_1C95FE7C0((uint64_t)(v22 + 17), &qword_1EA588550);
  if (!v30)
  {
    uint64_t v31 = OUTLINED_FUNCTION_9_73();
    if (v32(v31))
    {
      sub_1C9AF254C(v22 + 47);
      sub_1C95FE7C0((uint64_t)(v22 + 2), &qword_1EA588550);
      OUTLINED_FUNCTION_57_28();
    }
  }
  sub_1C99C54FC((uint64_t)(v22 + 2), (uint64_t)(v22 + 27), &qword_1EA588550);
  if (v22[30])
  {
    OUTLINED_FUNCTION_73_16();
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1C9BECF88();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EBC7A520);
    sub_1C95FD5F0((uint64_t)(v22 + 2), (uint64_t)(v22 + 17));
    unint64_t v34 = (void *)sub_1C9BECF78();
    os_log_type_t v35 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_96(v35))
    {
      OUTLINED_FUNCTION_67();
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_93_1();
      OUTLINED_FUNCTION_51_25(4.8149e-34);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EBC760E0);
      uint64_t v36 = sub_1C9BED5D8();
      uint64_t v38 = sub_1C95FF228(v36, v37, &a11);
      OUTLINED_FUNCTION_34_34(v38);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 17));
      OUTLINED_FUNCTION_62_22(&dword_1C95F9000, v39, v40, "#SiriLocationAccessGuardFlow issueResponse - output=%s");
      OUTLINED_FUNCTION_41_0();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v22 + 17));
    }

    OUTLINED_FUNCTION_21_45();
    uint64_t v69 = (char *)v57 + *v57;
    uint64_t v70 = v56;
    uint64_t v58 = swift_task_alloc();
    uint64_t v59 = (void *)OUTLINED_FUNCTION_77_16(v58);
    *uint64_t v59 = v60;
    v59[1] = sub_1C9AF4330;
    OUTLINED_FUNCTION_35_36();
    OUTLINED_FUNCTION_10_1();
    return v65(v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, a11, a12, a13, a14);
  }
  else
  {
    sub_1C95FE7C0((uint64_t)(v22 + 27), &qword_1EA588550);
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1C9BECF88();
    uint64_t v42 = (void *)OUTLINED_FUNCTION_34(v41, (uint64_t)qword_1EBC7A520);
    os_log_type_t v43 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_105(v43))
    {
      uint64_t v44 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_176(v44);
      OUTLINED_FUNCTION_121(&dword_1C95F9000, v45, v46, "#SiriLocationAccessGuardFlow issueResponse - none issued");
      OUTLINED_FUNCTION_11_4();
    }

    sub_1C95FE7C0((uint64_t)(v22 + 2), &qword_1EA588550);
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_10_1();
    return v48(v47, v48, v49, v50, v51, v52, v53, v54, a9, a10, a11, a12, a13, a14);
  }
}

uint64_t sub_1C9AF4330()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 632) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AF440C()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1C95FE7C0(v0 + 16, &qword_1EA588550);
  swift_task_dealloc();
  OUTLINED_FUNCTION_90();
  return v1();
}

uint64_t sub_1C9AF4480()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FE7C0(v0 + 16, &qword_1EA588550);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AF44EC()
{
  OUTLINED_FUNCTION_24();

  sub_1C95FE7C0(v0 + 16, &qword_1EA588550);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AF4564()
{
  OUTLINED_FUNCTION_24();
  sub_1C95FE7C0(v0 + 16, &qword_1EA588550);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AF45D0()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  sub_1C95FE7C0(v0 + 16, &qword_1EA588550);
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t SiriLocationAccessGuardFlow.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  sub_1C9AF5840(*(void *)(v0 + 184), *(id *)(v0 + 192), *(unsigned char *)(v0 + 200));
  return v0;
}

uint64_t SiriLocationAccessGuardFlow.__deallocating_deinit()
{
  SiriLocationAccessGuardFlow.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C9AF46C0()
{
  return sub_1C9AF1070();
}

uint64_t sub_1C9AF46E4()
{
  OUTLINED_FUNCTION_24();
  uint64_t v1 = v0;
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)OUTLINED_FUNCTION_17_0(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_1C9615888;
  return sub_1C9AF1074(v1);
}

uint64_t sub_1C9AF4774@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C9AF0F70();
  *a1 = result;
  return result;
}

void sub_1C9AF47A0()
{
  qword_1EA5C2950 = MEMORY[0x1E4FBC868];
}

const char *sub_1C9AF47B4()
{
  return "siri_location_services_prompting";
}

uint64_t sub_1C9AF47CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_1C9BEE2E8();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x1F4188298](sub_1C9AF48D0, 0, 0);
}

uint64_t sub_1C9AF48D0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_1C9BEE308();
  uint64_t v5 = sub_1C9AF600C(&qword_1EA599420, 255, MEMORY[0x1E4FBD1A8]);
  sub_1C9BEE6A8();
  sub_1C9AF600C(&qword_1EA599428, 255, MEMORY[0x1E4FBD178]);
  sub_1C9BEE318();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1C9AF4A78;
  uint64_t v8 = v0[11];
  return MEMORY[0x1F4188178](v8, v0 + 2, v4, v5);
}

uint64_t sub_1C9AF4A78()
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v5[12];
  uint64_t v7 = v5[11];
  uint64_t v8 = v5[8];
  uint64_t v9 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v10 = v9;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  v6(v7, v8);
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v11, v12, v13);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    OUTLINED_FUNCTION_90();
    return v14();
  }
}

uint64_t sub_1C9AF4BF8()
{
  OUTLINED_FUNCTION_24();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

void sub_1C9AF4C5C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, void *a9)
{
  int v24 = a6;
  v34[3] = &unk_1F23E5140;
  v34[4] = &off_1F23E5308;
  uint64_t v16 = swift_allocObject();
  long long v17 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v16 + 32) = v17;
  *(void *)(v16 + 48) = *(void *)(a3 + 32);
  unint64_t v32 = &type metadata for AnalyticsSchemaLogger;
  uint64_t v33 = &off_1F23F6EF8;
  v34[0] = v16;
  LOBYTE(v26[0]) = a1;
  LOBYTE(v27) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599410);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 60) = 0;
  sub_1C9AECE24((uint64_t)v26, v18 + 16);
  sub_1C9AED138((uint64_t)v26);
  a9[27] = v18;
  sub_1C95FD5F0(a2, (uint64_t)(a9 + 2));
  sub_1C95FD5F0((uint64_t)v34, (uint64_t)(a9 + 7));
  uint64_t v25 = a4;
  sub_1C95FD5F0(a4, (uint64_t)(a9 + 12));
  sub_1C95FD5F0(a5, (uint64_t)(a9 + 17));
  a9[22] = a7;
  a9[23] = a8;
  sub_1C95FD5F0((uint64_t)v31, (uint64_t)v26);
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v26[3]);
  MEMORY[0x1F4188790](v19, v19);
  (*(void (**)(void))(v20 + 16))();
  uint64_t v29 = &type metadata for AnalyticsSchemaLogger;
  uint64_t v30 = &off_1F23F6EF8;
  type metadata accessor for PermissionPromptSchemaLogger();
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v28, (uint64_t)&type metadata for AnalyticsSchemaLogger);
  MEMORY[0x1F4188790](v22, v22);
  (*(void (**)(void))(v23 + 16))();
  *(void *)(v21 + 40) = &type metadata for AnalyticsSchemaLogger;
  *(void *)(v21 + 48) = &off_1F23F6EF8;
  *(unsigned char *)(v21 + 56) = 0;
  sub_1C9BEC838();
}

void sub_1C9AF50A0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8)
{
  uint64_t v25 = a8;
  v29[3] = &unk_1F23E5140;
  v29[4] = &off_1F23E5308;
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v15 + 32) = v16;
  *(void *)(v15 + 48) = *(void *)(a3 + 32);
  uint64_t v27 = &type metadata for AnalyticsSchemaLogger;
  os_log_type_t v28 = &off_1F23F6EF8;
  v29[0] = v15;
  type metadata accessor for SiriLocationAccessCheckFlow();
  long long v17 = (void *)swift_allocObject();
  uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, (uint64_t)&unk_1F23E5140);
  MEMORY[0x1F4188790](v18, v18);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v21 + 16))(v20);
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, (uint64_t)&type metadata for AnalyticsSchemaLogger);
  MEMORY[0x1F4188790](v22, v22);
  (*(void (**)(void))(v23 + 16))();
  sub_1C9AF4C5C(a1, a2, (uint64_t)v20, a4, a5, a6, a7, v25, v17);
}

uint64_t sub_1C9AF52D4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, char a8, uint64_t a9)
{
  v38[4] = &protocol witness table for RefreshableDeviceState;
  v38[3] = type metadata accessor for RefreshableDeviceState();
  v38[0] = a2;
  v37[3] = &type metadata for OutputPublishers;
  v37[4] = &off_1F23E8350;
  v37[0] = a3;
  v36[3] = type metadata accessor for RefreshableAceServiceInvoker();
  v36[4] = &protocol witness table for RefreshableAceServiceInvoker;
  v36[0] = a4;
  *(unsigned char *)(a9 + 16) = a1;
  sub_1C95FD5F0((uint64_t)v38, a9 + 24);
  sub_1C95FD5F0((uint64_t)v37, a9 + 64);
  sub_1C95FD5F0((uint64_t)v36, a9 + 104);
  sub_1C99C54FC(a5, (uint64_t)&v32, &qword_1EA599438);
  if (v33)
  {
    sub_1C95FD5D8(&v32, (uint64_t)&v34);
    sub_1C95FD5D8(&v34, a9 + 144);
  }
  else
  {
    sub_1C95FE7C0((uint64_t)&v32, &qword_1EA599438);
    *(void *)(a9 + 168) = &type metadata for DefaultStrategy;
    *(void *)(a9 + 176) = &off_1F23F72B8;
  }
  if (a8 == -1)
  {
    if (RefreshableDeviceState.isHomePod.getter())
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1C9BECF88();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EBC7A520);
      uint64_t v25 = sub_1C9BECF78();
      os_log_type_t v26 = sub_1C9BEDC88();
      if (!os_log_type_enabled(v25, v26)) {
        goto LABEL_23;
      }
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      os_log_type_t v28 = "#SiriLocationAccessGuardFlow init - no support for NLv3+HomePod";
    }
    else
    {
      if (sub_1C9AF0C80())
      {
        sub_1C95FE7C0(a5, &qword_1EA599438);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        *(void *)(a9 + 184) = 0;
        *(void *)(a9 + 192) = 0;
        char v29 = 2;
LABEL_24:
        *(unsigned char *)(a9 + 200) = v29;
        goto LABEL_25;
      }
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1C9BECF88();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EBC7A520);
      uint64_t v25 = sub_1C9BECF78();
      os_log_type_t v26 = sub_1C9BEDC88();
      if (!os_log_type_enabled(v25, v26))
      {
LABEL_23:

        sub_1C95FE7C0(a5, &qword_1EA599438);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
        *(_OWORD *)(a9 + 184) = xmmword_1C9C0E870;
        char v29 = 1;
        goto LABEL_24;
      }
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      os_log_type_t v28 = "#SiriLocationAccessGuardFlow - feature is OFF";
    }
    _os_log_impl(&dword_1C95F9000, v25, v26, v28, v27, 2u);
    MEMORY[0x1CB78C440](v27, -1, -1);
    goto LABEL_23;
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1C9BECF88();
  __swift_project_value_buffer(v17, (uint64_t)qword_1EBC7A520);
  sub_1C9AF5DF0(a6, a7, a8);
  sub_1C9AF5DF0(a6, a7, a8);
  uint64_t v18 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC88();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(void *)&long long v32 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    *(void *)&long long v34 = a6;
    *((void *)&v34 + 1) = a7;
    char v35 = a8;
    sub_1C9AF5DF0(a6, a7, a8);
    uint64_t v22 = sub_1C9BED5D8();
    *(void *)&long long v34 = sub_1C95FF228(v22, v23, (uint64_t *)&v32);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C9AF60A0((unint64_t)a6, a7, a8);
    sub_1C9AF60A0((unint64_t)a6, a7, a8);
    _os_log_impl(&dword_1C95F9000, v18, v19, "#SiriLocationAccessGuardFlow - starting with overridden state=%s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v21, -1, -1);
    MEMORY[0x1CB78C440](v20, -1, -1);
  }
  else
  {

    sub_1C9AF60A0((unint64_t)a6, a7, a8);
    sub_1C9AF60A0((unint64_t)a6, a7, a8);
  }
  sub_1C95FE7C0(a5, &qword_1EA599438);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  *(void *)(a9 + 184) = a6;
  *(void *)(a9 + 192) = a7;
  *(unsigned char *)(a9 + 200) = a8;
LABEL_25:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return a9;
}

uint64_t sub_1C9AF57DC()
{
  sub_1C9AD5C08(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(unsigned char *)(v0 + 128));

  return swift_deallocObject();
}

void sub_1C9AF5840(unint64_t a1, id a2, char a3)
{
  if (a3 == 1)
  {
  }
  else if (!a3)
  {
    sub_1C96E945C(a1);
  }
}

unint64_t sub_1C9AF5864()
{
  unint64_t result = qword_1EA5993C8;
  if (!qword_1EA5993C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA5993C8);
  }
  return result;
}

uint64_t sub_1C9AF58B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C9AF600C(&qword_1EA5993D0, a2, (void (*)(uint64_t))type metadata accessor for SiriLocationAccessGuardFlow);
  *(void *)(a1 + 16) = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationAccessFailureReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AF59D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for LocationAccessFailureReason()
{
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlowStrategy.makeFailureResponse(deviceState:requestingPreciseLocation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C9615888;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlowStrategy.makeErrorResponse(error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v8 = swift_task_alloc();
  uint64_t v9 = (void *)OUTLINED_FUNCTION_17_0(v8);
  *uint64_t v9 = v10;
  v9[1] = sub_1C9615010;
  return v12(a1, a2, a3, a4);
}

uint64_t method lookup function for SiriLocationAccessGuardFlow(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriLocationAccessGuardFlow);
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlow.exitValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))() & 1;
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlow.failureReason.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlow.on(input:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlow.execute(completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SiriLocationAccessGuardFlow.execute()()
{
  OUTLINED_FUNCTION_33();
  uint64_t v2 = v1;
  uint64_t v7 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v0 + 200) + **(int **)(*(void *)v0 + 200));
  uint64_t v3 = swift_task_alloc();
  unsigned int v4 = (void *)OUTLINED_FUNCTION_17_0(v3);
  *unsigned int v4 = v5;
  v4[1] = sub_1C9615010;
  return v7(v2);
}

id sub_1C9AF5DF0(id result, id a2, char a3)
{
  if (a3 == 1) {
    return a2;
  }
  if (!a3) {
    return (id)sub_1C98CE28C((unint64_t)result);
  }
  return result;
}

void sub_1C9AF5E10(uint64_t a1)
{
}

uint64_t sub_1C9AF5E20(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C9AF5DF0(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1C9AF5E6C(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C9AF5DF0(*(id *)a2, v4, v5);
  unint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C9AF5840(v6, v7, v8);
  return a1;
}

uint64_t sub_1C9AF5EC4(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  unint64_t v4 = *(void *)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C9AF5840(v4, v5, v6);
  return a1;
}

void type metadata accessor for SiriLocationAccessGuardFlow.State()
{
}

uint64_t sub_1C9AF5F18(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C9AF5F70()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AF5FA8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1C9AF5FD4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C9AF600C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C9AF6054()
{
  unint64_t result = qword_1EA599430;
  if (!qword_1EA599430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599430);
  }
  return result;
}

void sub_1C9AF60A0(unint64_t a1, id a2, char a3)
{
  if (a3 != -1) {
    sub_1C9AF5840(a1, a2, a3);
  }
}

unint64_t sub_1C9AF60B4()
{
  unint64_t result = qword_1EA599440;
  if (!qword_1EA599440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599440);
  }
  return result;
}

void type metadata accessor for AFFeatureFlagDefinitions()
{
}

ValueMetadata *type metadata accessor for DefaultStrategy()
{
  return &type metadata for DefaultStrategy;
}

uint64_t sub_1C9AF6124(unsigned int *a1, int a2)
{
  if (!a2) {
    return OUTLINED_FUNCTION_59();
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_1C9AF6170(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9AF620CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SiriLocationAccessGuardFlowError()
{
}

void sub_1C9AF6244(uint64_t a1)
{
}

uint64_t sub_1C9AF624C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  int v3 = *(void **)(a2 + 8);
  id v4 = v3;
  *(void *)(a1 + 8) = v3;
  return a1;
}

uint64_t sub_1C9AF6290(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  int v3 = *(void **)(a1 + 8);
  id v4 = *(void **)(a2 + 8);
  id v5 = v4;
  *(void *)(a1 + 8) = v4;

  return a1;
}

uint64_t sub_1C9AF62E8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  int v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  return a1;
}

uint64_t sub_1C9AF632C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C9AF6380(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for SiriLocationAccessGuardFlow.Outcome()
{
}

unint64_t sub_1C9AF63E0()
{
  unint64_t result = qword_1EA599448;
  if (!qword_1EA599448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599448);
  }
  return result;
}

unint64_t sub_1C9AF6430()
{
  unint64_t result = qword_1EA599450;
  if (!qword_1EA599450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599450);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_92(uint64_t a1)
{
  uint64_t result = __swift_storeEnumTagSinglePayload(v3, 1, 1, a1);
  *(void *)(v1 + v2[12]) = 0;
  id v5 = (void *)(v1 + v2[13]);
  *id v5 = 0;
  v5[1] = 0;
  char v6 = (void *)(v1 + v2[14]);
  *char v6 = 0;
  v6[1] = 0;
  *(unsigned char *)(v1 + v2[15]) = 0;
  *(void *)(v1 + v2[17]) = 0;
  uint64_t v7 = v1 + v2[18];
  *(void *)uint64_t v7 = 0;
  *(_WORD *)(v7 + 8) = 512;
  *(unsigned char *)(v1 + v2[19]) = 0;
  *(unsigned char *)(v1 + v2[20]) = 0;
  *(unsigned char *)(v1 + v2[21]) = 0;
  *(unsigned char *)(v1 + v2[22]) = 0;
  *(unsigned char *)(v1 + v2[23]) = 0;
  char v8 = (void *)(v1 + v2[24]);
  *char v8 = 0;
  v8[1] = 0;
  *(void *)(v1 + v2[25]) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __swift_storeEnumTagSinglePayload(v9, 1, 1, a1);
  *uint64_t v10 = a9;
  v10[1] = v11;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_73()
{
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 24), v2);
  return v2;
}

uint64_t OUTLINED_FUNCTION_12_69()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_13_72()
{
  *(unsigned char *)(v0 + *(int *)(v1 + 40)) = 0;
  return type metadata accessor for NLContextUpdate();
}

uint64_t OUTLINED_FUNCTION_17_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  os_log_type_t v19 = (void *)(v15 + *(int *)(v16 + 64));
  *os_log_type_t v19 = v14;
  v19[1] = v17;
  return sub_1C965C7D4(v15, a14);
}

uint64_t OUTLINED_FUNCTION_20_63()
{
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_45()
{
  uint64_t v1 = *(void **)(v0 + 488);
  uint64_t v2 = v1[12];
  __swift_project_boxed_opaque_existential_1(v1 + 8, v1[11]);
  return v2 + 8;
}

double OUTLINED_FUNCTION_26_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(void *)(v19 + 72) = a1;
  *(void *)(a1 + 16) = a18;
  *(void *)(a1 + 24) = a19;
  *(void *)(a1 + 32) = a16;
  *(void *)(a1 + 40) = a17;
  double result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(unsigned char *)(a1 + 128) = v20;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_34()
{
  return v0;
}

void OUTLINED_FUNCTION_33_33()
{
  sub_1C96E945C(v0);
  sub_1C96E945C(v0);
}

uint64_t OUTLINED_FUNCTION_34_34(uint64_t a1)
{
  *(void *)(v1 + 456) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_38_28()
{
  return sub_1C9BEC908();
}

void OUTLINED_FUNCTION_40_31(uint64_t a1@<X8>)
{
  *(void *)(v2 + a1) = v1;
}

void OUTLINED_FUNCTION_41_28(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t OUTLINED_FUNCTION_46_27()
{
  return *(void *)(v0 + 152);
}

void OUTLINED_FUNCTION_49_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(unsigned char *)(v11 + a10) = 1;
  *(unsigned char *)(v11 + a11) = 0;
}

void OUTLINED_FUNCTION_50_26()
{
  sub_1C98CE28C(v0);
  sub_1C9BEC838();
}

uint64_t OUTLINED_FUNCTION_51_25(float a1)
{
  *uint64_t v1 = a1;
  return sub_1C95FD5F0(v2, v3);
}

uint64_t OUTLINED_FUNCTION_54_26(__n128 *a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21)
{
  a1[1] = a2;
  a1[2].n128_u64[0] = a21;
  *(void *)(v21 - 80) = a1;
  return sub_1C9BED8A8();
}

uint64_t OUTLINED_FUNCTION_55_27()
{
  return 20;
}

uint64_t OUTLINED_FUNCTION_56_27()
{
  return *(void *)(v0 + 80);
}

uint64_t OUTLINED_FUNCTION_57_28()
{
  return sub_1C9AA71B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_58_25(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
  return sub_1C9BEDF68();
}

uint64_t OUTLINED_FUNCTION_65_21(uint64_t a1)
{
  *(void *)(v1 + 144) = a1;
  return sub_1C9BEDF68();
}

void OUTLINED_FUNCTION_67_18()
{
}

uint64_t OUTLINED_FUNCTION_73_16()
{
  return sub_1C95FD5D8(v0, v1 + 176);
}

__n128 OUTLINED_FUNCTION_75_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long a13)
{
  return (__n128)a13;
}

uint64_t OUTLINED_FUNCTION_76_15(uint64_t result, uint64_t a2)
{
  v2[14] = v4;
  v2[15] = result;
  v2[16] = a2;
  v2[17] = v3;
  return result;
}

uint64_t sub_1C9AF69A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = qword_1F23D09A0;
  if (qword_1F23D09A0)
  {
    id v5 = &byte_1F23D09B0;
    while (1)
    {
      unsigned int v7 = *v5++;
      uint64_t v6 = v7;
      unint64_t v8 = 0x80000001C9C2CB20;
      unint64_t v9 = 0xD000000000000049;
      switch(v7)
      {
        case 1u:
          unint64_t v9 = 0xD00000000000004ELL;
          uint64_t v10 = ".firstTimePrompt/";
          goto LABEL_6;
        case 2u:
          unint64_t v9 = 0xD000000000000053;
          uint64_t v10 = "ationAccessStrategy.buttonDoNot";
LABEL_6:
          unint64_t v8 = (unint64_t)v10 | 0x8000000000000000;
          break;
        case 3u:
          unint64_t v9 = 0xD00000000000004FLL;
          unint64_t v8 = 0x80000001C9C2CA70;
          break;
        default:
          break;
      }
      if (v9 == a1 && v8 == a2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v12 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
      if (v12) {
        break;
      }
      if (!--v3) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 4;
  }
  return v6;
}

void sub_1C9AF6B2C()
{
  qword_1EBC7A500 = MEMORY[0x1E4FBC868];
}

const char *SiriNLUTypesFeatureFlag.domain.getter()
{
  return "Siri";
}

const char *SiriNLUTypesFeatureFlag.feature.getter()
{
  if (*v0) {
    return "SKESiriNLUTypesSDAAdoption";
  }
  else {
    return "SKESiriNLUTypesUserParseAdoption";
  }
}

uint64_t SiriNLUTypesFeatureFlag.isEnabled.getter()
{
  char v1 = *v0;
  if (qword_1EBC79CF8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_77();
  swift_beginAccess();
  uint64_t v2 = qword_1EBC7A500;
  if (*(void *)(qword_1EBC7A500 + 16) && (unint64_t v3 = sub_1C9604CCC(v1), (v4 & 1) != 0))
  {
    char v5 = *(unsigned char *)(*(void *)(v2 + 56) + v3);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    unint64_t v8 = &type metadata for SiriNLUTypesFeatureFlag;
    unint64_t v9 = sub_1C9AF6F78();
    v7[0] = v1;
    char v5 = sub_1C9BEAD08();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  return v5 & 1;
}

uint64_t SiriNLUTypesFeatureFlag.withForcedEnabled<A>(_:block:)(char a1, void (*a2)(uint64_t))
{
  char v5 = *v2;
  if (qword_1EBC79CF8 != -1) {
    swift_once();
  }
  OUTLINED_FUNCTION_0_77();
  swift_beginAccess();
  char v6 = sub_1C9606A28(v5, qword_1EBC7A500);
  swift_endAccess();
  swift_beginAccess();
  sub_1C9A7C160(a1 & 1, v5);
  uint64_t v7 = swift_endAccess();
  a2(v7);
  return sub_1C9AF6D4C(v6, v5);
}

uint64_t sub_1C9AF6D4C(char a1, char a2)
{
  char v3 = a2 & 1;
  if (a1 == 2)
  {
    if (qword_1EBC79CF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_1C9604CCC(v3);
    if (v4)
    {
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v6 = qword_1EBC7A500;
      qword_1EBC7A500 = 0x8000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA591E58);
      sub_1C9BEE358();
      sub_1C9AF7118();
      sub_1C9BEE378();
      qword_1EBC7A500 = v6;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1EBC79CF8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_1C9A7C160(a1 & 1, v3);
  }
  return swift_endAccess();
}

BOOL static SiriNLUTypesFeatureFlag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SiriNLUTypesFeatureFlag.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t SiriNLUTypesFeatureFlag.hashValue.getter()
{
  return sub_1C9BEE768();
}

const char *sub_1C9AF6F5C()
{
  return SiriNLUTypesFeatureFlag.feature.getter();
}

unint64_t sub_1C9AF6F78()
{
  unint64_t result = qword_1EBC79D00;
  if (!qword_1EBC79D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBC79D00);
  }
  return result;
}

unint64_t sub_1C9AF6FC8()
{
  unint64_t result = qword_1EA599480;
  if (!qword_1EA599480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599480);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SiriNLUTypesFeatureFlag(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C9AF70E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriNLUTypesFeatureFlag()
{
  return &type metadata for SiriNLUTypesFeatureFlag;
}

unint64_t sub_1C9AF7118()
{
  unint64_t result = qword_1EA599488;
  if (!qword_1EA599488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599488);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_77()
{
  return v0;
}

uint64_t sub_1C9AF7178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C9AF965C(a1, 0, 0, 0, 1, 0, 0);
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C9BED9E8();
    swift_unknownObjectRelease();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  return swift_task_create();
}

void sub_1C9AF7288()
{
}

Swift::Void __swiftcall SiriSuggestionsBroker.warmupForRequest()()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_1C9BECF88();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBC7A520);
  oslog = sub_1C9BECF78();
  os_log_type_t v1 = sub_1C9BEDC78();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl(&dword_1C95F9000, oslog, v1, "SiriSuggestionsBroker no-op default warmupForRequest", v2, 2u);
    OUTLINED_FUNCTION_11_4();
  }
}

uint64_t sub_1C9AF7378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v13 + 16) = v18;
  *uint64_t v18 = v13;
  v18[1] = sub_1C969EA2C;
  return SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:sourceDomainOwner:intentProperties:verb:executionProperties:dialogPhase:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:sourceDomainOwner:intentProperties:verb:executionProperties:dialogPhase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a13 + 32) + **(int **)(a13 + 32));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v13 + 32) = v17;
  *uint64_t v17 = v13;
  v17[1] = sub_1C9AF75CC;
  return v19(v13 + 16, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1C9AF75CC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v2 = *v1;
  OUTLINED_FUNCTION_17_3();
  *int v3 = v2;
  *(void *)(v4 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_1C9AF9844;
  }
  else {
    uint64_t v5 = sub_1C9AF984C;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C9AF76B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v12 + 16) = v16;
  *uint64_t v16 = v12;
  v16[1] = sub_1C973D55C;
  return SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:sourceDomainOwner:intentProperties:verb:executionProperties:dialogPhase:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:sourceDomainOwner:intentProperties:verb:executionProperties:dialogPhase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v13 + 160) = a12;
  *(void *)(v13 + 168) = v12;
  *(void *)(v13 + 152) = a11;
  *(_OWORD *)(v13 + 136) = a10;
  *(_OWORD *)(v13 + 120) = a9;
  *(void *)(v13 + 104) = a7;
  *(void *)(v13 + 112) = a8;
  *(void *)(v13 + 88) = a5;
  *(void *)(v13 + 96) = a6;
  *(void *)(v13 + 72) = a3;
  *(void *)(v13 + 80) = a4;
  *(void *)(v13 + 56) = a1;
  *(void *)(v13 + 64) = a2;
  return OUTLINED_FUNCTION_6_81((uint64_t)sub_1C9AF77E8);
}

void sub_1C9AF77E8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 144);
  *(void *)(v0 + 16) = *(void *)(v0 + 136);
  *(void *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  uint64_t v4 = *(void *)(v1 + 40) + **(int **)(v1 + 40);
  swift_bridgeObjectRetain();
  int v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v3;
  *int v3 = v0;
  v3[1] = sub_1C9AF792C;
  __asm { BRAA            X9, X16 }
}

uint64_t sub_1C9AF792C()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v3 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C9AF7A48, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v6 = *(uint64_t (**)(void))(v4 + 8);
    return v6();
  }
}

uint64_t sub_1C9AF7A48()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C9AF7AB4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1C965CED0;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C9AF7B78, 0, 0);
}

uint64_t SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:suggestionContextData:sourceDomainOwner:intentProperties:verb:executionProperties:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_6_81((uint64_t)sub_1C9AF7B78);
}

uint64_t sub_1C9AF7B78()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *uint64_t v1 = 0;
  v1[1] = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C9AF7B98()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C965CED0;
  return MEMORY[0x1F4188298](sub_1C9AF7C58, 0, 0);
}

uint64_t SiriSuggestionsBroker.submitEngagement(for:requestId:)()
{
  return MEMORY[0x1F4188298](sub_1C9AF7C58, 0, 0);
}

uint64_t sub_1C9AF7C58()
{
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC78();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)OUTLINED_FUNCTION_19();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_1C95F9000, v2, v3, "Siri suggestions submit failed", v4, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1C9AF7D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return SiriSuggestionsBroker.doContinuousConversationsHint(requestId:applicationSessionId:dialogPhase:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t SiriSuggestionsBroker.doContinuousConversationsHint(requestId:applicationSessionId:dialogPhase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v14[0] = a4;
  v14[1] = a5;
  char v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(a7 + 64);
  swift_bridgeObjectRetain();
  v11(a1, a2, a3, v14, a6, a7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C9AF7E2C(void *a1@<X8>)
{
}

void SiriSuggestionsBroker.doContinuousConversationsHint(requestId:applicationSessionId:suggestionContextData:)(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void __swiftcall SuggestionContextData.init(dialogPhase:hasAdditionalCommands:patternId:)(SiriKitFlow::SuggestionContextData *__return_ptr retstr, Swift::String_optional dialogPhase, Swift::Bool hasAdditionalCommands, Swift::String_optional patternId)
{
  retstr->dialogPhase = dialogPhase;
  retstr->hasAdditionalCommands = hasAdditionalCommands;
  retstr->patternId = patternId;
}

id HintsUI.snippet.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t HintsUI.supportingCommands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HintsUI.init(snippet:supportingCommands:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SuggestionContextData.dialogPhase.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SuggestionContextData.hasAdditionalCommands.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SuggestionContextData.patternId.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1C9AF7EFC()
{
}

id sub_1C9AF7F7C(void (*a1)(id))
{
  a1(objc_msgSend(v1, sel_lock));
  return objc_msgSend(v1, sel_unlock);
}

id sub_1C9AF7FF4()
{
  return sub_1C9AF7F7C((void (*)(id))sub_1C9AF8BD4);
}

void sub_1C9AF804C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 24;
  swift_beginAccess();
  sub_1C95FE60C(v3, (uint64_t)v9, &qword_1EBC77360);
  uint64_t v4 = v10;
  sub_1C95FE7C0((uint64_t)v9, &qword_1EBC77360);
  if (v4)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
    unsigned int v6 = sub_1C9BECF78();
    os_log_type_t v7 = sub_1C9BEDC68();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1C95F9000, v6, v7, "Suggestions sync broker instance is already set. No need to reevaluate", v8, 2u);
      MEMORY[0x1CB78C440](v8, -1, -1);
    }
  }
  else
  {
    sub_1C95FD5F0(a2, (uint64_t)v9);
    swift_beginAccess();
    sub_1C9AF8D14((uint64_t)v9, v3);
    swift_endAccess();
  }
}

uint64_t SiriSuggestionsSyncBrokerProvider.deinit()
{
  sub_1C95FE7C0(v0 + 24, &qword_1EBC77360);
  return v0;
}

uint64_t SiriSuggestionsSyncBrokerProvider.__deallocating_deinit()
{
  sub_1C95FE7C0(v0 + 24, &qword_1EBC77360);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9AF8234()
{
  *(void *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(void *)(v0 + 56) = 0;
  return v0;
}

double sub_1C9AF8278()
{
  type metadata accessor for SiriSuggestionsBrokerProvider();
  uint64_t v0 = (_OWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  double result = 0.0;
  *(_OWORD *)((char *)v0 + 137) = 0u;
  v0[7] = 0u;
  v0[8] = 0u;
  qword_1EBC77380 = (uint64_t)v0;
  return result;
}

uint64_t sub_1C9AF82C0()
{
  type metadata accessor for SiriSuggestionsSyncBrokerProvider();
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t result = sub_1C9AF8234();
  off_1EBC765E0 = v0;
  return result;
}

void static SiriSuggestionsBrokerProvider.syncInstance.getter()
{
}

uint64_t sub_1C9AF8320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v32 = a1;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C9BEDA58();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11, v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v20 = v4 + 112;
  OUTLINED_FUNCTION_7_74();
  sub_1C95FE60C(v20, (uint64_t)v37, &qword_1EBC77360);
  uint64_t v21 = v38;
  sub_1C95FE7C0((uint64_t)v37, &qword_1EBC77360);
  if (!v21 && (*(unsigned char *)(v5 + 152) & 1) == 0)
  {
    *(unsigned char *)(v5 + 152) = 1;
    sub_1C9BEDA28();
    if (sub_1C9AF8894())
    {
      if (qword_1EBC7A3B8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1C9BECF88();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
      os_log_type_t v26 = sub_1C9BECF78();
      os_log_type_t v27 = sub_1C9BEDC78();
      if (os_log_type_enabled(v26, v27))
      {
        os_log_type_t v28 = (uint8_t *)OUTLINED_FUNCTION_19();
        *(_WORD *)os_log_type_t v28 = 0;
        _os_log_impl(&dword_1C95F9000, v26, v27, "Boosting the Suggestion loading task priority to low", v28, 2u);
        OUTLINED_FUNCTION_11_4();
      }

      sub_1C9BEDA38();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v16, v11);
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v10, v19, v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v11);
    char v29 = (void *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v32;
    void v29[5] = a2;
    uint64_t v30 = v33;
    uint64_t v31 = v34;
    v29[6] = v5;
    v29[7] = v30;
    v29[8] = v31;
    sub_1C9BEC838();
  }
  sub_1C95FE60C(v20, (uint64_t)&v35, &qword_1EBC77360);
  if (!v36) {
    return sub_1C95FE7C0((uint64_t)&v35, &qword_1EBC77360);
  }
  sub_1C95FD5D8(&v35, (uint64_t)v37);
  uint64_t v22 = v38;
  uint64_t v23 = v39;
  __swift_project_boxed_opaque_existential_1(v37, v38);
  (*(void (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1C9AF86D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[15] = a7;
  unsigned char v8[16] = a8;
  v8[13] = a5;
  v8[14] = a6;
  v8[12] = a4;
  return MEMORY[0x1F4188298](sub_1C9AF86FC, 0, 0);
}

uint64_t sub_1C9AF86FC()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void))(v0 + 96))();
  uint64_t v1 = *(void *)(v0 + 112);
  if (*(void *)(v0 + 80))
  {
    sub_1C95FD5D8((long long *)(v0 + 56), v0 + 16);
    id v2 = sub_1C9AF87C0;
  }
  else
  {
    sub_1C95FE7C0(v0 + 56, &qword_1EBC77360);
    id v2 = sub_1C9AF87A4;
  }
  return MEMORY[0x1F4188298](v2, v1, 0);
}

uint64_t sub_1C9AF87A4()
{
  *(unsigned char *)(*(void *)(v0 + 112) + 152) = 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C9AF87C0()
{
  OUTLINED_FUNCTION_24();
  sub_1C9AF89E0(v0 + 16);
  return MEMORY[0x1F4188298](sub_1C9AF8828, 0, 0);
}

uint64_t sub_1C9AF8828()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void))(v0 + 120))();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1C9AF8894()
{
  uint64_t v0 = self;
  id result = objc_msgSend(v0, sel_isContinuousConversationSupported);
  if (result)
  {
    id result = objc_msgSend(v0, sel_isIOSDeviceSupportingBargeIn);
    if (result)
    {
      sub_1C9AF9804();
      id v2 = sub_1C9AF8964(0xD00000000000001ELL, 0x80000001C9C2CD60, 2);
      uint64_t v3 = (void *)sub_1C9BED538();
      unsigned int v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

      return (id)(v4 ^ 1);
    }
  }
  return result;
}

id sub_1C9AF8964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithStoreIdentifier_type_, v5, a3);

  return v6;
}

void sub_1C9AF89E0(uint64_t a1)
{
  uint64_t v3 = v1 + 112;
  OUTLINED_FUNCTION_7_74();
  sub_1C95FE60C(v3, (uint64_t)v9, &qword_1EBC77360);
  uint64_t v4 = v10;
  sub_1C95FE7C0((uint64_t)v9, &qword_1EBC77360);
  if (v4)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C9BECF88();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBC7A520);
    id v6 = sub_1C9BECF78();
    os_log_type_t v7 = sub_1C9BEDC68();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)OUTLINED_FUNCTION_19();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_1C95F9000, v6, v7, "Suggestions async broker instance is already set. No need to reevaluate", v8, 2u);
      OUTLINED_FUNCTION_11_4();
    }
  }
  else
  {
    sub_1C95FD5F0(a1, (uint64_t)v9);
    swift_beginAccess();
    sub_1C9AF8D14((uint64_t)v9, v3);
    swift_endAccess();
    if (qword_1EBC765E8 != -1) {
      swift_once();
    }
    sub_1C9AF7FF4();
  }
}

uint64_t SiriSuggestionsBrokerProvider.deinit()
{
  sub_1C95FE7C0(v0 + 112, &qword_1EBC77360);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SiriSuggestionsBrokerProvider.__deallocating_deinit()
{
  sub_1C95FE7C0(v0 + 112, &qword_1EBC77360);
  swift_defaultActor_destroy();

  return MEMORY[0x1F4188210](v0);
}

void sub_1C9AF8BD4()
{
  sub_1C9AF804C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C9AF8BF0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9AF8C40(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = (void *)OUTLINED_FUNCTION_17_0(v10);
  *uint64_t v11 = v12;
  v11[1] = sub_1C973D55C;
  return sub_1C9AF86D4(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1C9AF8D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC77360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of static SiriSuggestionsBroker.getInstance()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SiriSuggestionsBroker.warmupForRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:sourceDomainOwner:intentProperties:verb:executionProperties:dialogPhase:)()
{
  OUTLINED_FUNCTION_3_96();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C99FA4EC;
  OUTLINED_FUNCTION_11_76();
  return v7(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:sourceDomainOwner:intentProperties:verb:executionProperties:dialogPhase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a14 + 32) + **(int **)(a14 + 32));
  uint64_t v17 = swift_task_alloc();
  uint64_t v18 = (void *)OUTLINED_FUNCTION_17_0(v17);
  *uint64_t v18 = v19;
  v18[1] = sub_1C973D55C;
  return v21(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t dispatch thunk of SiriSuggestionsBroker.doSiriHints(requestId:applicationSessionId:suggestionContextData:sourceDomainOwner:intentProperties:verb:executionProperties:)()
{
  OUTLINED_FUNCTION_3_96();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)OUTLINED_FUNCTION_17_0(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_1C965CED0;
  OUTLINED_FUNCTION_4_83();
  OUTLINED_FUNCTION_11_76();
  return v8(v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of SiriSuggestionsBroker.submitEngagement(for:requestId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 48) + **(int **)(a4 + 48));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1C965CED0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SiriSuggestionsBroker.doContinuousConversationsHint(requestId:applicationSessionId:dialogPhase:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of SiriSuggestionsBroker.doContinuousConversationsHint(requestId:applicationSessionId:suggestionContextData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

void *initializeBufferWithCopyOfBuffer for HintsUI(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for HintsUI(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for HintsUI(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for HintsUI(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for SuggestionContextData()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SuggestionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SuggestionContextData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SuggestionContextData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SuggestionContextData(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SuggestionContextData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)id result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

void type metadata accessor for SuggestionContextData()
{
}

uint64_t type metadata accessor for SiriSuggestionsSyncBrokerProvider()
{
  return self;
}

uint64_t method lookup function for SiriSuggestionsSyncBrokerProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriSuggestionsSyncBrokerProvider);
}

uint64_t dispatch thunk of SiriSuggestionsSyncBrokerProvider.getBrokerInstance()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SiriSuggestionsSyncBrokerProvider.setBrokerInstance(brokerInstance:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t method lookup function for SiriSuggestionsBrokerProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SiriSuggestionsBrokerProvider);
}

uint64_t dispatch thunk of SiriSuggestionsBrokerProvider.initialize(initialize:postInit:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SiriSuggestionsBrokerProvider.setBrokerInstance(brokerInstance:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t sub_1C9AF965C(uint64_t a1, char a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C95FE60C(a1, (uint64_t)v17, &qword_1EBC774A0);
  uint64_t v18 = sub_1C9BEDA58();
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18) == 1)
  {
    sub_1C95FE7C0((uint64_t)v17, &qword_1EBC774A0);
    uint64_t result = 0;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    unsigned __int8 v20 = sub_1C9BEDA48();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
    uint64_t result = v20;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  result |= 0x100uLL;
  if (a3)
  {
LABEL_4:
    result |= 0x400uLL;
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  if ((a4 & 1) == 0)
  {
LABEL_5:
    if ((a5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_15:
  result |= 0x800uLL;
  if (a5) {
LABEL_6:
  }
    result |= 0x1000uLL;
LABEL_7:
  if (a6) {
    result |= 0x2000uLL;
  }
  if (a7) {
    return result | 0x4000;
  }
  return result;
}

uint64_t sub_1C9AF97CC()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_1C9AF9804()
{
  unint64_t result = qword_1EBC774D0;
  if (!qword_1EBC774D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBC774D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_4_83()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_81(uint64_t a1)
{
  return MEMORY[0x1F4188298](a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_7_74()
{
  return swift_beginAccess();
}

void SiriSuggestionsClient.submit(for:propertyKey:propertyValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a7;
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  OUTLINED_FUNCTION_0();
  uint64_t v12 = v11;
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x1F4188790](v15, v16);
  uint64_t v17 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC774A0);
  MEMORY[0x1F4188790](v18 - 8, v19);
  OUTLINED_FUNCTION_6_0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_1C9BEDA58();
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, v7, a6);
  sub_1C9AF9D0C(a5, (uint64_t)v36);
  unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v25 = (v14 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = (char *)swift_allocObject();
  *((void *)v27 + 2) = 0;
  *((void *)v27 + 3) = 0;
  uint64_t v28 = v32;
  *((void *)v27 + 4) = a6;
  *((void *)v27 + 5) = v28;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v27[v24], v17, a6);
  char v29 = &v27[v25];
  *(void *)char v29 = v33;
  *((void *)v29 + 1) = a2;
  uint64_t v30 = &v27[v26];
  uint64_t v31 = v35;
  *(void *)uint64_t v30 = v34;
  *((void *)v30 + 1) = v31;
  sub_1C9757D00(v36, &v27[(v26 + 23) & 0xFFFFFFFFFFFFFFF8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C96B93D8();
  swift_release();
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9AF9ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 16) + **(int **)(v17 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v13;
  *uint64_t v13 = v8;
  v13[1] = sub_1C9AF9BFC;
  return v15(a5, a6, a7, a8);
}

uint64_t sub_1C9AF9BFC()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  OUTLINED_FUNCTION_14_3();
  *unint64_t v3 = v2;
  uint64_t v4 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v5 = v4;
  *(void *)(v6 + 32) = v0;
  swift_task_dealloc();
  if (v0) {

  }
  OUTLINED_FUNCTION_15();
  return MEMORY[0x1F4188298](v7, v8, v9);
}

uint64_t sub_1C9AF9CE0()
{
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 32) != 0;
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AF9D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C9AF9D70()
{
  uint64_t v1 = *(void *)(v0 + 32);
  OUTLINED_FUNCTION_0();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (((((*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v6);
  OUTLINED_FUNCTION_10();
  return swift_deallocObject();
}

uint64_t sub_1C9AF9E54(uint64_t a1)
{
  OUTLINED_FUNCTION_0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = v1 + v4;
  uint64_t v11 = (uint64_t *)(v1 + v6);
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  uint64_t v14 = *(void *)(v1 + v7);
  uint64_t v15 = *(void *)(v1 + v7 + 8);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C9615010;
  return sub_1C9AF9ABC(a1, v8, v9, v10, v12, v13, v14, v15);
}

uint64_t sub_1C9AF9FA0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x1F41817F8]();
}

uint64_t ProtectedSiriSuggestionsClient.delegate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C95FD5F0(v1 + 24, a1);
}

uint64_t ProtectedSiriSuggestionsClient.__allocating_init(delegate:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = 0;
  sub_1C95FD5D8(a1, v2 + 24);
  return v2;
}

uint64_t ProtectedSiriSuggestionsClient.init(delegate:)(long long *a1)
{
  *(void *)(v1 + 16) = 0;
  sub_1C95FD5D8(a1, v1 + 24);
  return v1;
}

void sub_1C9AFA024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C9BED368();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v11, v12);
  OUTLINED_FUNCTION_6_0();
  sub_1C9BED3B8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_6_0();
  uint64_t v15 = *(void **)(v5 + 16);
  if (v15)
  {
    sub_1C9AF9D0C(a5, (uint64_t)v25);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v5;
    *(void *)(v16 + 24) = a1;
    *(void *)(v16 + 32) = a2;
    *(void *)(v16 + 40) = a3;
    *(void *)(v16 + 48) = a4;
    sub_1C9757D00(v25, (_OWORD *)(v16 + 56));
    aBlock[4] = sub_1C9AFC3DC;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C9A68990;
    aBlock[3] = &block_descriptor_11;
    _Block_copy(aBlock);
    id v17 = v15;
    sub_1C9BEC838();
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_1C9BECF88();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EBC7A520);
  uint64_t v23 = sub_1C9BECF78();
  os_log_type_t v19 = sub_1C9BEDC88();
  if (os_log_type_enabled(v23, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_1C95F9000, v23, v19, "Trying to invoke methods on the Suggestions Client before it is assigned to the provider lifecycle. Please call SiriSuggestionsClientProvider.setInstance with this instance from the runtime initialization prior to using", v20, 2u);
    MEMORY[0x1CB78C440](v20, -1, -1);
  }
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9AFA3A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = a1[6];
  uint64_t v12 = a1[7];
  __swift_project_boxed_opaque_existential_1(a1 + 3, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a2, a3, a4, a5, a6, v11, v12);
}

uint64_t sub_1C9AFA434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AFA454);
}

uint64_t sub_1C9AFA454()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = v1[7];
  __swift_project_boxed_opaque_existential_1(v1 + 3, v1[6]);
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C9AFA564;
  uint64_t v4 = OUTLINED_FUNCTION_136(v0[2]);
  return v6(v4);
}

uint64_t sub_1C9AFA564()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v1 = *v0;
  OUTLINED_FUNCTION_17_3();
  void *v2 = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v3();
}

uint64_t ProtectedSiriSuggestionsClient.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t ProtectedSiriSuggestionsClient.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_1C9AFA68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1C9615010;
  return sub_1C9AFA434(a1, a2, a3, a4, a5);
}

uint64_t static SiriSuggestionsClientConstants.executionParamPrefix.getter()
{
  return 0x5F5F636578655F5FLL;
}

uint64_t SiriSuggestionsClient.submitExecutionParam(for:propertyKey:propertyValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[14] = a7;
  v8[15] = v7;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AFA790);
}

uint64_t sub_1C9AFA790()
{
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 112);
  sub_1C9BED6B8();
  *(void *)(v0 + 128) = 0xE800000000000000;
  uint64_t v2 = v1[5];
  long long v9 = *(_OWORD *)(v1 + 3);
  uint64_t v3 = v1[3];
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v1, v3);
  *(_OWORD *)(v0 + 40) = v9;
  *(void *)(v0 + 56) = v2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_0, v4, v3);
  uint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(v11 + 16) + **(int **)(v11 + 16));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_1C9AFA944;
  uint64_t v7 = OUTLINED_FUNCTION_136(*(void *)(v0 + 64));
  return v10(v7);
}

uint64_t sub_1C9AFA944()
{
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *unint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9AFAA70()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t SiriSuggestionsClient.submitDialogTemplate(for:templatingResult:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = *a3;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 56) = v7;
  *(_OWORD *)(v6 + 64) = *(_OWORD *)(a3 + 1);
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AFAAFC);
}

uint64_t sub_1C9AFAAFC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4;
  *(_OWORD *)(v4 + 16) = xmmword_1C9BEF570;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v1;
  uint64_t v6 = *(void *)(v2 + 16);
  if (v6)
  {
    uint64_t v20 = v4;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C963C340();
    unint64_t v7 = *(void *)(v21 + 16);
    uint64_t v8 = 16 * v7;
    uint64_t v9 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v11 = *(v9 - 1);
      uint64_t v10 = *v9;
      unint64_t v12 = *(void *)(v21 + 24);
      swift_bridgeObjectRetain();
      if (v7 >= v12 >> 1) {
        sub_1C963C340();
      }
      *(void *)(v21 + 16) = v7 + 1;
      uint64_t v13 = v21 + v8;
      *(void *)(v13 + 32) = v11;
      *(void *)(v13 + 40) = v10;
      v8 += 16;
      v9 += 28;
      ++v7;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = v20;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1C965F860();
  v0[10] = v5;
  uint64_t v14 = (void *)swift_task_alloc();
  v0[11] = (uint64_t)v14;
  void *v14 = v0;
  v14[1] = sub_1C9AFACD4;
  uint64_t v15 = OUTLINED_FUNCTION_136(v0[2]);
  return SiriSuggestionsClient.submit(for:dialogID:)(v15, v16, v5, v17, v18);
}

uint64_t sub_1C9AFACD4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9AFADD4()
{
  OUTLINED_FUNCTION_24();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_0();
  return v0();
}

uint64_t SiriSuggestionsClient.submit(for:dialogID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[14] = a5;
  v6[15] = v5;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AFAE50);
}

uint64_t sub_1C9AFAE50()
{
  uint64_t v20 = v0;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C9BECF88();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1C9BECF78();
  os_log_type_t v3 = sub_1C9BEDC68();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[11];
  if (v4)
  {
    uint64_t v15 = v0[10];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x1CB78AA50](v7, MEMORY[0x1E4FBB1A0]);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[8] = sub_1C95FF228(v8, v10, &v19);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[9] = sub_1C95FF228(v15, v5, &v19);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C95F9000, v2, v3, "Submitting dialogID: %s for requestId: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v17, -1, -1);
    MEMORY[0x1CB78C440](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v18 = v0[14];
  uint64_t v11 = v0[12];
  v0[5] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786E0);
  v0[6] = sub_1C9851648(&qword_1EA5927B0);
  v0[7] = sub_1C9851648(&qword_1EBC78680);
  v0[2] = v11;
  uint64_t v16 = (uint64_t (*)(uint64_t))(*(void *)(v18 + 16) + **(int **)(v18 + 16));
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[16] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1C9AFB1F8;
  uint64_t v13 = OUTLINED_FUNCTION_136(v0[10]);
  return v16(v13);
}

uint64_t sub_1C9AFB1F8()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *BOOL v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t sub_1C9AFB2F8()
{
  OUTLINED_FUNCTION_24();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t SiriSuggestionsClient.submitSiriKitIntent<A>(for:siriKitIntent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[15] = a8;
  v9[16] = v8;
  v9[13] = a6;
  v9[14] = a7;
  v9[11] = a4;
  v9[12] = a5;
  v9[9] = a2;
  v9[10] = a3;
  v9[8] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AFB37C);
}

uint64_t sub_1C9AFB37C()
{
  OUTLINED_FUNCTION_7_75();
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  id v3 = v2;
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *BOOL v4 = v0;
  v4[1] = sub_1C9AFB494;
  uint64_t v5 = OUTLINED_FUNCTION_136(*(void *)(v0 + 64));
  return v7(v5);
}

uint64_t sub_1C9AFB494()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *BOOL v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t SiriSuggestionsClient.submitSiriKitIntentResponse<A>(for:sirikitInResponse:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[15] = a8;
  v9[16] = v8;
  v9[13] = a6;
  v9[14] = a7;
  v9[11] = a4;
  v9[12] = a5;
  v9[9] = a2;
  v9[10] = a3;
  v9[8] = a1;
  return OUTLINED_FUNCTION_13_4((uint64_t)sub_1C9AFB5BC);
}

uint64_t sub_1C9AFB5BC()
{
  OUTLINED_FUNCTION_7_75();
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v1 + *v1);
  id v3 = v2;
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v4;
  *BOOL v4 = v0;
  v4[1] = sub_1C9AFB6D4;
  uint64_t v5 = OUTLINED_FUNCTION_136(*(void *)(v0 + 64));
  return v7(v5);
}

uint64_t sub_1C9AFB6D4()
{
  OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_0_1();
  uint64_t v3 = v2;
  OUTLINED_FUNCTION_14_3();
  *BOOL v4 = v3;
  uint64_t v5 = *v1;
  OUTLINED_FUNCTION_17_3();
  *uint64_t v6 = v5;
  *(void *)(v3 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    OUTLINED_FUNCTION_15();
    return MEMORY[0x1F4188298](v7, v8, v9);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(v3 + 16);
    OUTLINED_FUNCTION_22_0();
    return v10();
  }
}

uint64_t static SuggestionErrors.== infix(_:_:)()
{
  return 1;
}

uint64_t SuggestionErrors.hash(into:)()
{
  return sub_1C9BEE748();
}

uint64_t SuggestionErrors.hashValue.getter()
{
  return sub_1C9BEE768();
}

uint64_t sub_1C9AFB848()
{
  return SuggestionErrors.hashValue.getter();
}

uint64_t sub_1C9AFB860()
{
  return SuggestionErrors.hash(into:)();
}

uint64_t sub_1C9AFB878()
{
  uint64_t v0 = sub_1C9BEDCF8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2);
  BOOL v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C9BEDCE8();
  MEMORY[0x1F4188790](v5, v6);
  uint64_t v7 = sub_1C9BED3B8();
  MEMORY[0x1F4188790](v7 - 8, v8);
  sub_1C97DA3EC();
  sub_1C9BED3A8();
  v10[1] = MEMORY[0x1E4FBC860];
  sub_1C9613944(&qword_1EBC76408, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC763B0);
  sub_1C9AFC9FC((unint64_t *)&qword_1EBC763B8, &qword_1EBC763B0);
  sub_1C9BEE038();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x1E4FBCC58], v0);
  uint64_t result = sub_1C9BEDD38();
  qword_1EA599510 = result;
  return result;
}

double sub_1C9AFBABC()
{
  qword_1EA5C2978 = 0;
  double result = 0.0;
  xmmword_1EA5C2958 = 0u;
  unk_1EA5C2968 = 0u;
  return result;
}

uint64_t static SiriSuggestionsClientProvider.getInstance()()
{
  if (qword_1EA5881F0 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599558);
  return sub_1C9BEDD18();
}

uint64_t sub_1C9AFBB6C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EA5881F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1C9AFC880((uint64_t)&xmmword_1EA5C2958, (uint64_t)&v7);
  if (v8) {
    return sub_1C95FD5D8(&v7, a1);
  }
  sub_1C9AFC8E8((uint64_t)&v7);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  BOOL v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C95F9000, v4, v5, "Siri suggestions has not be initialized. Insure that setInstance has been called by the runtime prior to getting any client instance", v6, 2u);
    MEMORY[0x1CB78C440](v6, -1, -1);
  }

  sub_1C9AFC9B0();
  swift_allocError();
  return swift_willThrow();
}

void static SiriSuggestionsClientProvider.setInstance(client:)(uint64_t a1)
{
  if (qword_1EA5881F0 != -1) {
    swift_once();
  }
  sub_1C95FD5F0(a1, (uint64_t)v5);
  uint64_t v2 = swift_allocObject();
  sub_1C95FD5D8(v5, v2 + 16);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1C9AFC440;
  *(void *)(v3 + 24) = v2;
  aBlock[4] = sub_1C981A588;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C9AFC018;
  aBlock[3] = &block_descriptor_25;
  _Block_copy(aBlock);
  sub_1C9BEC838();
}

{
  uint64_t v2;
  void v3[6];

  if (qword_1EA5881F0 != -1) {
    swift_once();
  }
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1C9AFC44C;
  *(void *)(v2 + 24) = a1;
  v3[4] = sub_1C9824D90;
  void v3[5] = v2;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 1107296256;
  v3[2] = sub_1C9AFC018;
  v3[3] = &block_descriptor_32;
  _Block_copy(v3);
  sub_1C9BEC838();
}

void sub_1C9AFBE8C(uint64_t a1)
{
  if (qword_1EA5881F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1C9AFC880((uint64_t)&xmmword_1EA5C2958, (uint64_t)v7);
  uint64_t v2 = v8;
  sub_1C9AFC8E8((uint64_t)v7);
  if (v2)
  {
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v3 = sub_1C9BECF88();
    __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
    BOOL v4 = sub_1C9BECF78();
    os_log_type_t v5 = sub_1C9BEDC88();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1C95F9000, v4, v5, "An attempt was made to reset the suggestions client instance. The lifecycle does not permit reassignment", v6, 2u);
      MEMORY[0x1CB78C440](v6, -1, -1);
    }
  }
  else
  {
    sub_1C95FD5F0(a1, (uint64_t)v7);
    swift_beginAccess();
    sub_1C9AFC948((uint64_t)v7, (uint64_t)&xmmword_1EA5C2958);
    swift_endAccess();
  }
}

uint64_t sub_1C9AFC018(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_1C9AFC1AC(uint64_t a1)
{
  if (qword_1EA5881F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1C9AFC880((uint64_t)&xmmword_1EA5C2958, (uint64_t)v7);
  uint64_t v2 = v8;
  sub_1C9AFC8E8((uint64_t)v7);
  if (!v2)
  {
    uint64_t v8 = type metadata accessor for ProtectedSiriSuggestionsClient();
    uint64_t v9 = &protocol witness table for ProtectedSiriSuggestionsClient;
    v7[0] = a1;
    swift_beginAccess();
    sub_1C9BEC838();
  }
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EBC7A520);
  BOOL v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1C95F9000, v4, v5, "An attempt was made to reset the suggestions client instance. The lifecycle does not permit reassignment", v6, 2u);
    MEMORY[0x1CB78C440](v6, -1, -1);
  }
}

uint64_t sub_1C9AFC38C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1C9AFC3DC()
{
  return sub_1C9AFA3A0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v0 + 56);
}

void block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  sub_1C9BEC838();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1C9AFC408()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocObject();
}

void sub_1C9AFC440()
{
  sub_1C9AFBE8C(v0 + 16);
}

void sub_1C9AFC44C()
{
  sub_1C9AFC1AC(v0);
}

unint64_t sub_1C9AFC45C()
{
  unint64_t result = qword_1EA599568;
  if (!qword_1EA599568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA599568);
  }
  return result;
}

uint64_t dispatch thunk of SiriSuggestionsClient.submit(for:propertyKey:propertyValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of SiriSuggestionsClient.submitAsync(for:propertyKey:propertyValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 16)
                                                                                              + **(int **)(a7 + 16));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1C9615888;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t type metadata accessor for ProtectedSiriSuggestionsClient()
{
  return self;
}

uint64_t method lookup function for ProtectedSiriSuggestionsClient(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ProtectedSiriSuggestionsClient);
}

uint64_t dispatch thunk of ProtectedSiriSuggestionsClient.__allocating_init(delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ProtectedSiriSuggestionsClient.submit(for:propertyKey:propertyValue:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ProtectedSiriSuggestionsClient.submitAsync(for:propertyKey:propertyValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 144)
                                                                            + **(int **)(*(void *)v5 + 144));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_1C9615010;
  return v14(a1, a2, a3, a4, a5);
}

void type metadata accessor for SiriSuggestionsClientConstants()
{
}

unsigned char *storeEnumTagSinglePayload for SuggestionErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C9AFC840);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void type metadata accessor for SuggestionErrors()
{
}

void type metadata accessor for SiriSuggestionsClientProvider()
{
}

uint64_t sub_1C9AFC880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9AFC8E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C9AFC948(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C9AFC9B0()
{
  unint64_t result = qword_1EA599588;
  if (!qword_1EA599588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA599588);
  }
  return result;
}

uint64_t sub_1C9AFC9FC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_7_75()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  *(void *)(v0 + 40) = *(void *)(v0 + 96);
  *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 112);
  *(void *)(v0 + 16) = v2;
  return v1 + 16;
}

void sub_1C9AFCA84()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
  MEMORY[0x1F4188790](v0 - 8, v1);
  uint64_t v2 = sub_1C9BEAB08();
  MEMORY[0x1F4188790](v2, v3);
  sub_1C9BEC328();
}

uint64_t sub_1C9AFD078()
{
  OUTLINED_FUNCTION_24();
  v0[15] = v1;
  v0[16] = v2;
  v0[13] = v3;
  v0[14] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
  v0[17] = swift_task_alloc();
  uint64_t v5 = sub_1C9BEAB08();
  v0[18] = v5;
  v0[19] = *(void *)(v5 - 8);
  v0[20] = swift_task_alloc();
  v0[21] = type metadata accessor for OutputGenerationManifest();
  v0[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C9AFD198, 0, 0);
}

void sub_1C9AFD198()
{
  uint64_t v1 = *(void *)(v0 + 112);
  unint64_t v2 = *(void *)(v1 + *(int *)(*(void *)(v0 + 168) + 48));
  if (v2)
  {
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C9BEE3C8();
      swift_bridgeObjectRelease();
      uint64_t v1 = *(void *)(v0 + 112);
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v4 = v3 != 0;
  }
  else
  {
    BOOL v4 = 0;
  }
  *(unsigned char *)(v0 + 248) = v4;
  uint64_t v5 = *(void *)(v0 + 128);
  sub_1C965D8AC(v1, *(void *)(v0 + 176));
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 128);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 176);
    uint64_t v9 = (uint64_t *)(v7 + *(int *)(*(void *)(v0 + 168) + 56));
    uint64_t v6 = *v9;
    uint64_t v8 = v9[1];
    swift_bridgeObjectRetain();
  }
  *(void *)(v0 + 184) = v6;
  *(void *)(v0 + 192) = v8;
  unint64_t v10 = *(void **)(v0 + 112);
  swift_bridgeObjectRetain();
  sub_1C965EA78(v7);
  *(void *)(v0 + 200) = *v10;
  *(void *)(v0 + 208) = v10[1];
  sub_1C9BEC328();
}

uint64_t sub_1C9AFD554()
{
  OUTLINED_FUNCTION_24();
  sub_1C965CC28(v0 + 16);
  return MEMORY[0x1F4188298](sub_1C9AFD5BC, 0, 0);
}

uint64_t sub_1C9AFD5BC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    uint64_t v2 = *(void *)(v0 + 208);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 192);
    char v5 = *(unsigned char *)(v0 + 248);
    uint64_t v6 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
    *(void *)(v0 + 56) = v3;
    *(void *)(v0 + 64) = v2;
    *(unsigned char *)(v0 + 72) = v5;
    *(void *)(v0 + 80) = v4;
    *(void *)(v0 + 88) = v12;
    uint64_t v11 = *(void *)(v6 + 40) + **(int **)(v6 + 40);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1C9AFD7E4;
    __asm { BRAA            X9, X16 }
  }
  uint64_t v8 = *(void **)(v0 + 104);
  (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C95FE7C0(v0 + 16, &qword_1EBC77360);
  *uint64_t v8 = 0;
  v8[1] = 0;
  OUTLINED_FUNCTION_1_93();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v9();
}

uint64_t sub_1C9AFD7E4()
{
  OUTLINED_FUNCTION_24();
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C9AFD990;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C9AFD908;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C9AFD908()
{
  OUTLINED_FUNCTION_24();
  (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  OUTLINED_FUNCTION_1_93();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v1();
}

uint64_t sub_1C9AFD990()
{
  uint64_t v1 = *(void **)(v0 + 240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C9BECF78();
  os_log_type_t v5 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_105(v5))
  {
    uint64_t v6 = *(void **)(v0 + 240);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 96) = v10;
    sub_1C9BEDF68();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_1C95F9000, v4, (os_log_type_t)(v0 + 16), "Error when getting suggestions: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 240);
  }
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v12 = *(void *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 144);
  uint64_t v15 = *(void **)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  *uint64_t v15 = 0;
  v15[1] = 0;
  OUTLINED_FUNCTION_1_93();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_22_0();
  return v16();
}

uint64_t OUTLINED_FUNCTION_1_93()
{
  return swift_task_dealloc();
}

uint64_t (*SnippetEventHandling.handler(for:)(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v4 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_2();
  uint64_t v9 = v8;
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v12, v13);
  uint64_t v15 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v16);
  uint64_t v18 = (char *)v23 - v17;
  swift_getAssociatedConformanceWitness();
  sub_1C9BEC8A8();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v19(v15, v18, AssociatedTypeWitness);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  *((void *)v21 + 2) = a2;
  *((void *)v21 + 3) = a3;
  *((void *)v21 + 4) = v4;
  v19(&v21[v20], v15, AssociatedTypeWitness);
  swift_unknownObjectRetain();
  return sub_1C9AFDF5C;
}

uint64_t sub_1C9AFDEA8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_0_2();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_1C9AFDF5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v2 + 40))(v0 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), v1, v2);
}

uint64_t dispatch thunk of SnippetEventHandling.handle(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of EncoreSnippetModel.asEncoreEvent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1C9AFE020(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(a3 + 48);
    uint64_t v7 = MEMORY[0x1E4FBC860];
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v9 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v10 = *v6;
      v19[0] = v9;
      v19[1] = v8;
      long long v19[2] = v10;
      swift_bridgeObjectRetain();
      char v11 = a1(v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v20 = v7;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C963C1C0();
          uint64_t v7 = v20;
        }
        unint64_t v13 = *(void *)(v7 + 16);
        unint64_t v14 = v13 + 1;
        if (v13 >= *(void *)(v7 + 24) >> 1)
        {
          sub_1C963C1C0();
          unint64_t v14 = v13 + 1;
          uint64_t v7 = v20;
        }
        *(void *)(v7 + 16) = v14;
        uint64_t v15 = (void *)(v7 + 24 * v13);
        v15[4] = v9;
        v15[5] = v8;
        v15[6] = v10;
        uint64_t v4 = a3;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v5;
      v6 += 3;
      if (v17 == v5) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C9AFE1A8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for SnippetManager.SnippetRecord(0);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7 - 8, v8);
  uint64_t v25 = (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v9, v11);
  unint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v27 = MEMORY[0x1E4FBC860];
  uint64_t v24 = *(void *)(a3 + 16);
  if (v24)
  {
    unint64_t v16 = 0;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    v22[1] = a2;
    uint64_t v23 = a3;
    v22[0] = a1;
    while (v16 < *(void *)(a3 + 16))
    {
      unint64_t v18 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v15 = *(void *)(v26 + 72);
      sub_1C9B048F0(a3 + v18 + v15 * v16, (uint64_t)v14);
      char v19 = a1(v14);
      if (v3)
      {
        sub_1C9B02F9C((uint64_t)v14, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        swift_release();
        swift_bridgeObjectRelease();
        return v15;
      }
      if (v19)
      {
        sub_1C9B04A8C((uint64_t)v14, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C963C260(0, *(void *)(v17 + 16) + 1, 1);
        }
        uint64_t v17 = v27;
        unint64_t v21 = *(void *)(v27 + 16);
        unint64_t v20 = *(void *)(v27 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1C963C260(v20 > 1, v21 + 1, 1);
          uint64_t v17 = v27;
        }
        *(void *)(v17 + 16) = v21 + 1;
        uint64_t result = sub_1C9B04A8C(v25, v17 + v18 + v21 * v15);
        a3 = v23;
        a1 = (uint64_t (*)(char *))v22[0];
      }
      else
      {
        uint64_t result = sub_1C9B02F9C((uint64_t)v14, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
      }
      if (v24 == ++v16)
      {
        uint64_t v15 = v27;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

uint64_t sub_1C9AFE440@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1C9AFE584();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1C9B04980;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

uint64_t sub_1C9AFE4B0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_1C9B04978;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1C99CE064(v1);
  return sub_1C9AFE5C4((uint64_t)v4, v3);
}

uint64_t sub_1C9AFE540(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  v5[0] = a1;
  v5[1] = a2;
  a3(&v4, v5);
  return v4;
}

uint64_t sub_1C9AFE584()
{
  OUTLINED_FUNCTION_84_1();
  uint64_t v0 = OUTLINED_FUNCTION_134_0();
  sub_1C99CE064(v0);
  return OUTLINED_FUNCTION_134_0();
}

uint64_t sub_1C9AFE5C4(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_1_0();
  uint64_t v5 = *(void *)(v2 + 32);
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return sub_1C9629FFC(v5);
}

void sub_1C9AFE610()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SnippetManager.SnippetManagerState(0);
  MEMORY[0x1F4188790](v2, v3);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA5881B8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C9BECF88();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EA5C2928);
  swift_retain_n();
  uint64_t v7 = sub_1C9BECF78();
  os_log_type_t v8 = sub_1C9BEDC78();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v15 = v10;
    uint64_t v11 = v1 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state;
    swift_beginAccess();
    sub_1C9B048F0(v11, (uint64_t)v5);
    uint64_t v12 = sub_1C9BED5D8();
    v14[1] = sub_1C95FF228(v12, v13, &v15);
    sub_1C9BEDF68();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v7, v8, "Set SnippetManager.state to %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1CB78C440](v10, -1, -1);
    MEMORY[0x1CB78C440](v9, -1, -1);
  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1C9AFE850(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state;
  swift_beginAccess();
  sub_1C9B049E0(a1, v3);
  swift_endAccess();
  sub_1C9AFE610();
  return sub_1C9B02F9C(a1, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
}

uint64_t sub_1C9AFE8D4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendAddViews);
  OUTLINED_FUNCTION_84_1();
  return *v1;
}

void sub_1C9AFE914(uint64_t a1)
{
  char v2 = a1;
  sub_1C9AFEA24(a1, "Setting SnippetManager#canSendAddViews=%{BOOL}d");
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendAddViews);
  OUTLINED_FUNCTION_1_0();
  *uint64_t v3 = v2;
  sub_1C9AFF8FC();
}

void (*sub_1C9AFE970())(uint64_t a1)
{
  char v2 = malloc(0x28uLL);
  *(void *)(OUTLINED_FUNCTION_43_31((uint64_t)v2) + 24) = v0;
  uint64_t v3 = (unsigned char *)(v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendAddViews);
  OUTLINED_FUNCTION_84_1();
  *(unsigned char *)(v1 + 32) = *v3;
  return sub_1C9AFE9E4;
}

void sub_1C9AFE9E4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  sub_1C9AFE914(*(unsigned __int8 *)(*(void *)a1 + 32));

  free(v1);
}

void sub_1C9AFEA24(uint64_t a1, const char *a2)
{
  if (qword_1EA5881B8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1C9BECF88();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EA5C2928);
  oslog = sub_1C9BECF78();
  os_log_type_t v4 = sub_1C9BEDC78();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, oslog, v4, a2, v5, 8u);
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
  }
}

uint64_t sub_1C9AFEB64()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendXPCUpdates);
  OUTLINED_FUNCTION_84_1();
  return *v1;
}

uint64_t sub_1C9AFEBA4(uint64_t a1)
{
  char v2 = a1;
  sub_1C9AFEA24(a1, "Setting SnippetManager#canSendXPCUpdates=%{BOOL}d");
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendXPCUpdates);
  uint64_t result = OUTLINED_FUNCTION_1_0();
  *uint64_t v3 = v2;
  return result;
}

void (*sub_1C9AFEBF4())(uint64_t a1)
{
  char v2 = malloc(0x30uLL);
  uint64_t v3 = OUTLINED_FUNCTION_43_31((uint64_t)v2);
  uint64_t v4 = OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendXPCUpdates;
  *(void *)(v3 + 24) = v0;
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = (unsigned char *)(v0 + v4);
  OUTLINED_FUNCTION_1_0();
  *(unsigned char *)(v1 + 40) = *v5;
  return sub_1C9AFEC68;
}

void sub_1C9AFEC68(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  uint64_t v3 = *(void *)(*(void *)a1 + 32);
  unsigned __int8 v4 = *(unsigned char *)(*(void *)a1 + 40);
  sub_1C9AFEA24(v4, "Setting SnippetManager#canSendXPCUpdates=%{BOOL}d");
  *(unsigned char *)(v2 + v3) = v4;

  free(v1);
}

uint64_t sub_1C9AFECC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
  uint64_t v5 = OUTLINED_FUNCTION_22(v4);
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_3_59();
  uint64_t v7 = v1 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state;
  OUTLINED_FUNCTION_84_1();
  OUTLINED_FUNCTION_34_35();
  sub_1C9608D98(v7 + v8, v2, &qword_1EBC773E0);
  uint64_t v9 = type metadata accessor for SnippetManager.SnippetRecord(0);
  if (__swift_getEnumTagSinglePayload(v2, 1, v9) == 1)
  {
    sub_1C95FE81C(v2, &qword_1EBC773E0);
    uint64_t v10 = 1;
  }
  else
  {
    swift_getObjectType();
    sub_1C9BEE1A8();
    sub_1C9B02F9C(v2, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
    uint64_t v10 = 0;
  }
  uint64_t v11 = sub_1C9BEAB08();
  return __swift_storeEnumTagSinglePayload(a1, v10, 1, v11);
}

void sub_1C9AFEDF4()
{
}

void *sub_1C9AFEE78(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
  uint64_t v6 = OUTLINED_FUNCTION_22(v5);
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_6_0();
  uint64_t v10 = v9 - v8;
  v2[4] = 0;
  v2[5] = 0;
  uint64_t v11 = (void *)((char *)v2 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state);
  uint64_t v12 = type metadata accessor for SnippetManager.SnippetRecord(0);
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v12);
  *uint64_t v11 = MEMORY[0x1E4FBC860];
  OUTLINED_FUNCTION_34_35();
  sub_1C985A8C0(v10, (uint64_t)v11 + v13, &qword_1EBC773E0);
  *((unsigned char *)v2 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendAddViews) = 0;
  *((unsigned char *)v2 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendXPCUpdates) = 1;
  v2[2] = a1;
  v2[3] = a2;
  return v2;
}

void sub_1C9AFEF68()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v3 = type metadata accessor for SnippetManager.SnippetManagerState(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_4_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_15_59();
  MEMORY[0x1F4188790](v8, v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = (uint64_t *)(v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state);
  OUTLINED_FUNCTION_84_1();
  sub_1C9608D98((uint64_t)v12 + *(int *)(v3 + 20), (uint64_t)v11, &qword_1EBC773E0);
  if (qword_1EA5881B8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_1C9BECF88();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EA5C2928);
  sub_1C9608D98((uint64_t)v11, v1, &qword_1EBC773E0);
  unint64_t v14 = sub_1C9BECF78();
  os_log_type_t v15 = sub_1C9BEDC68();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    char v29 = v2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v30 = v0;
    uint64_t v32 = v18;
    uint64_t v28 = v12;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v19 = sub_1C9BEDED8();
    uint64_t v31 = sub_1C95FF228(v19, v20, &v32);
    uint64_t v12 = v28;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease();
    sub_1C95FE81C(v1, &qword_1EBC773E0);
    _os_log_impl(&dword_1C95F9000, v14, v15, "Snippet Disappeared: OnScreen == %s", v17, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v2 = v29;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {
    sub_1C95FE81C(v1, &qword_1EBC773E0);
  }

  uint64_t v21 = *v12;
  MEMORY[0x1F4188790](v22, v23);
  *(&v27 - 2) = (uint64_t)v11;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C9AFE1A8((uint64_t (*)(char *))sub_1C9AFFF14, (uint64_t)(&v27 - 4), v21);
  uint64_t v25 = (uint64_t)v2 + *(int *)(v3 + 20);
  uint64_t v26 = type metadata accessor for SnippetManager.SnippetRecord(0);
  __swift_storeEnumTagSinglePayload(v25, 1, 1, v26);
  uint64_t *v2 = v24;
  sub_1C9AFE850((uint64_t)v2);
  sub_1C95FE81C((uint64_t)v11, &qword_1EBC773E0);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9AFF284(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1C9BEAB08();
  uint64_t v39 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v4);
  unint64_t v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58AEC0);
  MEMORY[0x1F4188790](v6, v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
  MEMORY[0x1F4188790](v10 - 8, v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC79488);
  uint64_t v16 = MEMORY[0x1F4188790](v14 - 8, v15);
  uint64_t v38 = (uint64_t)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16, v18);
  uint64_t v21 = (char *)&v36 - v20;
  MEMORY[0x1F4188790](v19, v22);
  uint64_t v24 = (char *)&v36 - v23;
  uint64_t v25 = type metadata accessor for SnippetManager.SnippetRecord(0);
  uint64_t v26 = *(void *)(a1 + *(int *)(v25 + 20));
  swift_getObjectType();
  uint64_t v41 = v26;
  sub_1C9BEE1A8();
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v3);
  sub_1C9608D98(v40, (uint64_t)v13, &qword_1EBC773E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v25) == 1)
  {
    sub_1C95FE81C((uint64_t)v13, &qword_1EBC773E0);
    uint64_t v27 = 1;
  }
  else
  {
    uint64_t v28 = *(void *)&v13[*(int *)(v25 + 20)];
    swift_getObjectType();
    uint64_t v41 = v28;
    sub_1C9BEE1A8();
    sub_1C9B02F9C((uint64_t)v13, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
    uint64_t v27 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v21, v27, 1, v3);
  uint64_t v29 = (uint64_t)&v9[*(int *)(v6 + 48)];
  sub_1C9608D98((uint64_t)v24, (uint64_t)v9, &qword_1EBC79488);
  sub_1C9608D98((uint64_t)v21, v29, &qword_1EBC79488);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3) != 1)
  {
    uint64_t v31 = v38;
    sub_1C9608D98((uint64_t)v9, v38, &qword_1EBC79488);
    if (__swift_getEnumTagSinglePayload(v29, 1, v3) != 1)
    {
      uint64_t v32 = v39;
      uint64_t v33 = v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v37, v29, v3);
      sub_1C9B04A44(&qword_1EA58AEC8, 255, MEMORY[0x1E4F27990]);
      LODWORD(v40) = sub_1C9BED528();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v32 + 8);
      v34(v33, v3);
      sub_1C95FE81C((uint64_t)v21, &qword_1EBC79488);
      sub_1C95FE81C((uint64_t)v24, &qword_1EBC79488);
      v34((char *)v31, v3);
      sub_1C95FE81C((uint64_t)v9, &qword_1EBC79488);
      char v30 = v40 ^ 1;
      return v30 & 1;
    }
    sub_1C95FE81C((uint64_t)v21, &qword_1EBC79488);
    sub_1C95FE81C((uint64_t)v24, &qword_1EBC79488);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v31, v3);
    goto LABEL_9;
  }
  sub_1C95FE81C((uint64_t)v21, &qword_1EBC79488);
  sub_1C95FE81C((uint64_t)v24, &qword_1EBC79488);
  if (__swift_getEnumTagSinglePayload(v29, 1, v3) != 1)
  {
LABEL_9:
    sub_1C95FE81C((uint64_t)v9, &qword_1EA58AEC0);
    char v30 = 1;
    return v30 & 1;
  }
  sub_1C95FE81C((uint64_t)v9, &qword_1EBC79488);
  char v30 = 0;
  return v30 & 1;
}

void sub_1C9AFF750(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  __swift_project_boxed_opaque_existential_1(a4, a4[3]);

  sub_1C9B0291C();
}

uint64_t sub_1C9AFF7C4()
{
  OUTLINED_FUNCTION_31_7();
  uint64_t v2 = sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_21_22();
  MEMORY[0x1F4188790](v7, v8);
  uint64_t v9 = OUTLINED_FUNCTION_39_35();
  type metadata accessor for SnippetManager.SnippetRecord(v9);
  swift_getObjectType();
  sub_1C9BEE1A8();
  swift_getObjectType();
  sub_1C9BEE1A8();
  char v10 = sub_1C9BEAAD8();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v11(v0, v2);
  v11(v1, v2);
  return v10 & 1;
}

void sub_1C9AFF8FC()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995D0);
  uint64_t v4 = OUTLINED_FUNCTION_22(v3);
  MEMORY[0x1F4188790](v4, v5);
  OUTLINED_FUNCTION_5_1();
  uint64_t v6 = type metadata accessor for SnippetManager.SnippetManagerState(0);
  uint64_t v7 = OUTLINED_FUNCTION_22(v6);
  MEMORY[0x1F4188790](v7, v8);
  OUTLINED_FUNCTION_6_0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for SnippetManager.SnippetManagerAction(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_2_0();
  uint64_t v55 = v15;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_48_5();
  uint64_t v54 = v18;
  OUTLINED_FUNCTION_3();
  uint64_t v21 = MEMORY[0x1F4188790](v19, v20);
  uint64_t v23 = (char *)v53 - v22;
  MEMORY[0x1F4188790](v21, v24);
  uint64_t v26 = (char *)v53 - v25;
  if (qword_1EA5881B8 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C9BECF88();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EA5C2928);
  uint64_t v28 = sub_1C9BECF78();
  os_log_type_t v29 = sub_1C9BEDC78();
  if (os_log_type_enabled(v28, v29))
  {
    char v30 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v30);
    _os_log_impl(&dword_1C95F9000, v28, v29, "Checking if action is needed", v2, 2u);
    OUTLINED_FUNCTION_11_4();
  }

  uint64_t v31 = (uint64_t)&v2[OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state];
  OUTLINED_FUNCTION_84_1();
  sub_1C9B048F0(v31, v11);
  sub_1C9AFFF34();
  sub_1C9B02F9C(v11, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
  if (__swift_getEnumTagSinglePayload(v1, 1, v12) == 1)
  {
    sub_1C95FE81C(v1, &qword_1EA5995D0);
    uint64_t v32 = (void *)sub_1C9BECF78();
    os_log_type_t v33 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_4(v33))
    {
      uint64_t v34 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v34);
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v35, v36, "No action needed");
      OUTLINED_FUNCTION_11_4();
    }
  }
  else
  {
    sub_1C9B04A8C(v1, (uint64_t)v26);
    sub_1C9B048F0((uint64_t)v26, (uint64_t)v23);
    unint64_t v37 = sub_1C9BECF78();
    os_log_type_t v38 = sub_1C9BEDC78();
    BOOL v39 = os_log_type_enabled(v37, v38);
    _OWORD v53[2] = v12;
    if (v39)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      v53[1] = v2;
      *(_DWORD *)uint64_t v40 = 136315138;
      v53[0] = v40 + 4;
      sub_1C9B048F0((uint64_t)v23, v54);
      uint64_t v41 = sub_1C9BED5D8();
      uint64_t v43 = sub_1C95FF228(v41, v42, v56);
      OUTLINED_FUNCTION_106_5(v43);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9B02F9C((uint64_t)v23, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerAction);
      _os_log_impl(&dword_1C95F9000, v37, v38, "Performing action: %s", v40, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      sub_1C9B02F9C((uint64_t)v23, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerAction);
    }

    sub_1C9B0033C();
    sub_1C9B048F0((uint64_t)v26, v55);
    uint64_t v44 = sub_1C9BECF78();
    os_log_type_t v45 = sub_1C9BEDC78();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v47 = v55;
      sub_1C9B048F0(v55, v54);
      uint64_t v48 = sub_1C9BED5D8();
      uint64_t v50 = sub_1C95FF228(v48, v49, v56);
      OUTLINED_FUNCTION_106_5(v50);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9B02F9C(v47, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerAction);
      _os_log_impl(&dword_1C95F9000, v44, v45, "Action completed: %s)", v46, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_11_4();

      uint64_t v51 = (uint64_t)v26;
      uint64_t v52 = type metadata accessor for SnippetManager.SnippetManagerAction;
    }
    else
    {

      sub_1C9B02F9C(v55, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerAction);
      uint64_t v51 = OUTLINED_FUNCTION_134_0();
    }
    sub_1C9B02F9C(v51, (void (*)(void))v52);
  }
  OUTLINED_FUNCTION_10();
}

uint64_t type metadata accessor for SnippetManager.SnippetManagerState(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EBC773F0);
}

uint64_t type metadata accessor for SnippetManager.SnippetRecord(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EBC773D0);
}

uint64_t sub_1C9AFFF14(uint64_t a1)
{
  return sub_1C9AFF284(a1, *(void *)(v1 + 16)) & 1;
}

void sub_1C9AFFF34()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v6 = v5;
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v52 = v8;
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7, v9);
  OUTLINED_FUNCTION_2_0();
  uint64_t v51 = v10;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v11, v12);
  uint64_t v13 = OUTLINED_FUNCTION_38_29();
  uint64_t v14 = type metadata accessor for SnippetManager.SnippetRecord(v13);
  OUTLINED_FUNCTION_0_2();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v17, v18);
  OUTLINED_FUNCTION_15_59();
  MEMORY[0x1F4188790](v19, v20);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995D8);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v24, v25);
  OUTLINED_FUNCTION_5_1();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
  uint64_t v27 = OUTLINED_FUNCTION_22(v26);
  MEMORY[0x1F4188790](v27, v28);
  OUTLINED_FUNCTION_3_59();
  if (*(void *)(*(void *)v0 + 16))
  {
    sub_1C9B048F0(*(void *)v0 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v1);
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = 1;
  }
  __swift_storeEnumTagSinglePayload(v1, v29, 1, v14);
  OUTLINED_FUNCTION_34_35();
  uint64_t v30 = v4 + *(int *)(v23 + 48);
  sub_1C985A8C0(v1, v4, &qword_1EBC773E0);
  uint64_t v31 = OUTLINED_FUNCTION_134_0();
  sub_1C9608D98(v31, v32, &qword_1EBC773E0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v4, 1, v14);
  int v34 = __swift_getEnumTagSinglePayload(v30, 1, v14);
  int v35 = v34;
  if (EnumTagSinglePayload != 1)
  {
    if (v34 == 1)
    {
      sub_1C9B04A8C(v4, v6);
      uint64_t v40 = type metadata accessor for SnippetManager.SnippetManagerAction(0);
    }
    else
    {
      sub_1C9B04A8C(v4, (uint64_t)v22);
      sub_1C9B04A8C(v30, v3);
      if (sub_1C9BEAAD8())
      {
        sub_1C9B02F9C(v3, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9B02F9C((uint64_t)v22, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        type metadata accessor for SnippetManager.SnippetManagerAction(0);
        uint64_t v41 = OUTLINED_FUNCTION_37_33();
LABEL_13:
        __swift_storeEnumTagSinglePayload(v41, v42, v43, v44);
        goto LABEL_14;
      }
      uint64_t v45 = *(void *)&v22[*(int *)(v14 + 20)];
      swift_getObjectType();
      uint64_t v54 = v45;
      sub_1C9BEE1A8();
      uint64_t v46 = *(void *)(v3 + *(int *)(v14 + 20));
      swift_getObjectType();
      uint64_t v54 = v46;
      uint64_t v47 = v51;
      sub_1C9BEE1A8();
      sub_1C9BEAAD8();
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      uint64_t v49 = v47;
      uint64_t v50 = v53;
      v48(v49, v53);
      v48(v2, v50);
      sub_1C9B02F9C(v3, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
      sub_1C9B04A8C((uint64_t)v22, v6);
      uint64_t v40 = type metadata accessor for SnippetManager.SnippetManagerAction(0);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v6;
    uint64_t v42 = 0;
    uint64_t v43 = 1;
    uint64_t v44 = v40;
    goto LABEL_13;
  }
  type metadata accessor for SnippetManager.SnippetManagerAction(0);
  uint64_t v36 = OUTLINED_FUNCTION_37_33();
  __swift_storeEnumTagSinglePayload(v36, v37, v38, v39);
  if (v35 != 1) {
    sub_1C95FE81C(v30, &qword_1EBC773E0);
  }
LABEL_14:
  OUTLINED_FUNCTION_10();
}

void sub_1C9B0033C()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v4 = v0;
  uint64_t v5 = OUTLINED_FUNCTION_31_7();
  uint64_t v125 = type metadata accessor for SnippetManager.SnippetManagerState(v5);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v6, v7);
  OUTLINED_FUNCTION_7_37();
  uint64_t v10 = MEMORY[0x1F4188790](v8, v9);
  OUTLINED_FUNCTION_21_46(v10, v11, v12, v13, v14, v15, v16, v17, v118);
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v123 = v19;
  uint64_t v124 = v18;
  MEMORY[0x1F4188790](v18, v20);
  OUTLINED_FUNCTION_6_0();
  uint64_t v122 = v22 - v21;
  uint64_t v127 = type metadata accessor for SnippetManager.SnippetRecord(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v23, v24);
  uint64_t v120 = (uint64_t)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_3();
  uint64_t v28 = MEMORY[0x1F4188790](v26, v27);
  uint64_t v30 = (char *)&v118 - v29;
  MEMORY[0x1F4188790](v28, v31);
  OUTLINED_FUNCTION_48_5();
  uint64_t v121 = v32;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v33, v34);
  OUTLINED_FUNCTION_48_5();
  uint64_t v119 = v35;
  OUTLINED_FUNCTION_3();
  uint64_t v38 = MEMORY[0x1F4188790](v36, v37);
  uint64_t v40 = (char *)&v118 - v39;
  MEMORY[0x1F4188790](v38, v41);
  OUTLINED_FUNCTION_48_5();
  uint64_t v43 = v42;
  OUTLINED_FUNCTION_3();
  uint64_t v46 = MEMORY[0x1F4188790](v44, v45);
  uint64_t v48 = (char *)&v118 - v47;
  MEMORY[0x1F4188790](v46, v49);
  uint64_t v50 = OUTLINED_FUNCTION_38_29();
  type metadata accessor for SnippetManager.SnippetManagerAction(v50);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v51, v52);
  OUTLINED_FUNCTION_4_4();
  sub_1C9B048F0(v0, v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C9B04A8C(v3, (uint64_t)v40);
    uint64_t v53 = v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state;
    OUTLINED_FUNCTION_84_1();
    sub_1C9B048F0(v53, (uint64_t)v1);
    uint64_t v54 = (unsigned char *)(v4 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendXPCUpdates);
    OUTLINED_FUNCTION_84_1();
    uint64_t v55 = (uint64_t)v1;
    uint64_t v56 = (uint64_t)v40;
    if (*v54 == 1)
    {
      uint64_t v57 = *v1;
      uint64_t v58 = v126;
      uint64_t v59 = (uint64_t)v126 + *(int *)(v125 + 20);
      sub_1C9B048F0(v56, v59);
      uint64_t v60 = v127;
      __swift_storeEnumTagSinglePayload(v59, 0, 1, v127);
      *uint64_t v58 = v57;
      swift_bridgeObjectRetain();
      sub_1C9AFE850((uint64_t)v58);
      if (qword_1EA5881B8 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C9BECF88();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EA5C2928);
      uint64_t v62 = v119;
      sub_1C9B048F0(v56, v119);
      uint64_t v63 = v121;
      sub_1C9B048F0(v56, v121);
      uint64_t v64 = sub_1C9BECF78();
      os_log_type_t v65 = sub_1C9BEDC78();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = OUTLINED_FUNCTION_56_1();
        uint64_t v67 = OUTLINED_FUNCTION_39_3();
        uint64_t v126 = (void *)v55;
        uint64_t v120 = v67;
        v130[0] = v67;
        *(_DWORD *)uint64_t v66 = 136315394;
        long long v129 = *(_OWORD *)(v62 + *(int *)(v60 + 20));
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995C8);
        uint64_t v68 = sub_1C9BED5D8();
        uint64_t v125 = v56;
        *(void *)&long long v129 = sub_1C95FF228(v68, v69, v130);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9B02F9C(v62, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        *(_WORD *)(v66 + 12) = 2080;
        uint64_t v70 = (uint64_t *)(v63 + *(int *)(v60 + 20));
        uint64_t v71 = *v70;
        unint64_t v72 = v70[1];
        swift_getObjectType();
        *(void *)&long long v129 = v71;
        uint64_t v73 = v122;
        sub_1C9BEE1A8();
        sub_1C9B04A44(qword_1EBC76730, 255, MEMORY[0x1E4F27990]);
        sub_1C9BEE5A8();
        OUTLINED_FUNCTION_31_36();
        OUTLINED_FUNCTION_37();
        v74();
        *(void *)&long long v129 = sub_1C95FF228(v73, v72, v130);
        uint64_t v60 = v127;
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        uint64_t v56 = v125;
        sub_1C9B02F9C(v63, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        _os_log_impl(&dword_1C95F9000, v64, v65, "Updating snippet from flow %s with id %s over XPC", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        uint64_t v55 = (uint64_t)v126;
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        sub_1C9B02F9C(v62, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9B02F9C(v63, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
      }

      sub_1C9BEC8D8();
      unint64_t v112 = (void *)sub_1C9BEC8B8();
      id v113 = *(id *)(v56 + *(int *)(v60 + 24));
      sub_1C9BEC8C8();

      sub_1C9B02F9C(v55, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
      uint64_t v105 = v56;
    }
    else
    {
      uint64_t v91 = v127;
      if (qword_1EA5881B8 != -1) {
        swift_once();
      }
      uint64_t v92 = sub_1C9BECF88();
      __swift_project_value_buffer(v92, (uint64_t)qword_1EA5C2928);
      sub_1C9B048F0((uint64_t)v40, (uint64_t)v30);
      uint64_t v93 = (uint64_t)v40;
      uint64_t v94 = v120;
      sub_1C9B048F0(v93, v120);
      uint64_t v95 = sub_1C9BECF78();
      os_log_type_t v96 = sub_1C9BEDC78();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = OUTLINED_FUNCTION_56_1();
        uint64_t v121 = OUTLINED_FUNCTION_39_3();
        v130[0] = v121;
        *(_DWORD *)uint64_t v97 = 136315394;
        long long v129 = *(_OWORD *)&v30[*(int *)(v91 + 20)];
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995C8);
        uint64_t v125 = v56;
        uint64_t v98 = sub_1C9BED5D8();
        uint64_t v126 = (void *)v55;
        *(void *)&long long v129 = sub_1C95FF228(v98, v99, v130);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9B02F9C((uint64_t)v30, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        *(_WORD *)(v97 + 12) = 2080;
        uint64_t v100 = (uint64_t *)(v94 + *(int *)(v91 + 20));
        uint64_t v101 = *v100;
        unint64_t v102 = v100[1];
        swift_getObjectType();
        *(void *)&long long v129 = v101;
        uint64_t v103 = v122;
        sub_1C9BEE1A8();
        sub_1C9B04A44(qword_1EBC76730, 255, MEMORY[0x1E4F27990]);
        sub_1C9BEE5A8();
        OUTLINED_FUNCTION_31_36();
        OUTLINED_FUNCTION_37();
        v104();
        *(void *)&long long v129 = sub_1C95FF228(v103, v102, v130);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9B02F9C(v94, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        _os_log_impl(&dword_1C95F9000, v95, v96, "Not sending XPC update from flow %s with id %s since SnippetManager#canSendXPCUpdates is false", (uint8_t *)v97, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();

        sub_1C9B02F9C((uint64_t)v126, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
        uint64_t v105 = v125;
      }
      else
      {

        sub_1C9B02F9C(v94, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9B02F9C((uint64_t)v30, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9B02F9C((uint64_t)v1, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
        uint64_t v105 = v56;
      }
    }
  }
  else
  {
    sub_1C9B04A8C(v3, v2);
    uint64_t v121 = v0;
    uint64_t v75 = (unsigned char *)(v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_canSendAddViews);
    OUTLINED_FUNCTION_84_1();
    uint64_t v76 = v2;
    if (*v75 == 1)
    {
      if (qword_1EA5881B8 != -1) {
        swift_once();
      }
      uint64_t v77 = sub_1C9BECF88();
      int v78 = __swift_project_value_buffer(v77, (uint64_t)qword_1EA5C2928);
      sub_1C9B048F0(v2, (uint64_t)v48);
      uint64_t v79 = v43;
      sub_1C9B048F0(v2, v43);
      uint64_t v80 = sub_1C9BECF78();
      os_log_type_t v81 = sub_1C9BEDC78();
      if (OUTLINED_FUNCTION_4(v81))
      {
        uint64_t v82 = OUTLINED_FUNCTION_56_1();
        *(void *)&long long v129 = OUTLINED_FUNCTION_39_3();
        *(_DWORD *)uint64_t v82 = 136315394;
        LODWORD(v119) = v78;
        uint64_t v83 = v127;
        long long v128 = *(_OWORD *)&v48[*(int *)(v127 + 20)];
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995C8);
        uint64_t v84 = sub_1C9BED5D8();
        uint64_t v120 = v2;
        *(void *)&long long v128 = sub_1C95FF228(v84, v85, (uint64_t *)&v129);
        sub_1C9BEDF68();
        swift_bridgeObjectRelease();
        sub_1C9B02F9C((uint64_t)v48, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        *(_WORD *)(v82 + 12) = 2080;
        uint64_t v118 = v82 + 14;
        uint64_t v86 = *(void *)(v79 + *(int *)(v83 + 20));
        swift_getObjectType();
        *(void *)&long long v128 = v86;
        sub_1C9BEE1A8();
        sub_1C9B04A44(qword_1EBC76730, 255, MEMORY[0x1E4F27990]);
        uint64_t v87 = sub_1C9BEE5A8();
        unint64_t v89 = v88;
        OUTLINED_FUNCTION_37();
        v90();
        *(void *)&long long v128 = sub_1C95FF228(v87, v89, (uint64_t *)&v129);
        sub_1C9BEDF68();
        uint64_t v76 = v120;
        swift_bridgeObjectRelease();
        sub_1C9B02F9C(v79, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        _os_log_impl(&dword_1C95F9000, v80, (os_log_type_t)v119, "Rendering new snippet from flow %s with id %s over Ace", (uint8_t *)v82, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_11_4();
      }
      else
      {
        sub_1C9B02F9C((uint64_t)v48, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9B02F9C(v43, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);

        uint64_t v83 = v127;
      }
      uint64_t v114 = (uint64_t *)(v121 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state);
      OUTLINED_FUNCTION_84_1();
      uint64_t v115 = *v114;
      char v116 = v126;
      uint64_t v117 = (uint64_t)v126 + *(int *)(v125 + 20);
      sub_1C9B048F0(v76, v117);
      __swift_storeEnumTagSinglePayload(v117, 0, 1, v83);
      *char v116 = v115;
      swift_bridgeObjectRetain();
      sub_1C9AFE850((uint64_t)v116);
      sub_1C9BEC838();
    }
    if (qword_1EA5881B8 != -1) {
      swift_once();
    }
    uint64_t v106 = sub_1C9BECF88();
    __swift_project_value_buffer(v106, (uint64_t)qword_1EA5C2928);
    uint64_t v107 = (void *)sub_1C9BECF78();
    os_log_type_t v108 = sub_1C9BEDC78();
    if (OUTLINED_FUNCTION_4(v108))
    {
      unint64_t v109 = (_WORD *)OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_49(v109);
      OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v110, v111, "SnippetManager needs to send an AddViews, but can't send snippets right now. Will retry once SnippetManager#canSendAddViews is set to true");
      OUTLINED_FUNCTION_11_4();
    }

    uint64_t v105 = v2;
  }
  sub_1C9B02F9C(v105, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
  OUTLINED_FUNCTION_10();
}

void sub_1C9B0112C(void *a1, char a2)
{
  if (a2)
  {
    id v3 = a1;
    if (qword_1EA5881B8 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C9BECF88();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EA5C2928);
    id v5 = a1;
    id v6 = a1;
    oslog = sub_1C9BECF78();
    os_log_type_t v7 = sub_1C9BEDC88();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      id v10 = a1;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C9BEDF68();
      *uint64_t v9 = v12;
      sub_1C97183F4(a1, 1);
      sub_1C97183F4(a1, 1);
      _os_log_impl(&dword_1C95F9000, oslog, v7, "Got an error submitted an AddViews. This may or may not be an issue depending on the error: %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA5942D0);
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v9, -1, -1);
      MEMORY[0x1CB78C440](v8, -1, -1);

      sub_1C97183F4(a1, 1);
    }
    else
    {
      sub_1C97183F4(a1, 1);
      sub_1C97183F4(a1, 1);
    }
  }
}

void sub_1C9B01334()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v4 = v3;
  id v6 = v5;
  uint64_t v34 = v7;
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9A8);
  uint64_t v13 = OUTLINED_FUNCTION_5_0(v12);
  uint64_t v15 = v14;
  MEMORY[0x1F4188790](v13, v16);
  OUTLINED_FUNCTION_21_22();
  MEMORY[0x1F4188790](v17, v18);
  uint64_t v19 = OUTLINED_FUNCTION_39_35();
  uint64_t v20 = type metadata accessor for SnippetManager.SnippetRecord(v19);
  uint64_t v21 = OUTLINED_FUNCTION_5_0(v20);
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v21, v24);
  OUTLINED_FUNCTION_4_4();
  uint64_t v36 = sub_1C9660A88(v9, v6, v4);
  swift_bridgeObjectRetain();
  sub_1C966DCB8(&v36);
  swift_bridgeObjectRelease();
  uint64_t v25 = v36;
  uint64_t v26 = *(void *)(v36 + 16);
  if (v26)
  {
    uint64_t v33 = v11;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    uint64_t v27 = v25;
    sub_1C963C260(0, v26, 0);
    uint64_t v28 = v27 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v35 = *(void *)(v15 + 72);
    uint64_t v29 = v36;
    do
    {
      sub_1C9608D98(v28, v1, &qword_1EA58A9A8);
      sub_1C9B048F0(v1, v0);
      sub_1C9B04A8C(v0, v2);
      sub_1C95FE81C(v1, &qword_1EA58A9A8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C963C260(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v36;
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1C963C260(v30 > 1, v31 + 1, 1);
        uint64_t v29 = v36;
      }
      *(void *)(v29 + 16) = v31 + 1;
      sub_1C9B04A8C(v2, v29+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v31);
      v28 += v35;
      --v26;
    }
    while (v26);
    swift_release();
    uint64_t v11 = v33;
  }
  else
  {
    swift_release();
    uint64_t v29 = MEMORY[0x1E4FBC860];
  }
  OUTLINED_FUNCTION_34_35();
  sub_1C9608D98(v34, (uint64_t)v11 + v32, &qword_1EBC773E0);
  *uint64_t v11 = v29;
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9B015DC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1C9BEAB08();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x1F4188790](v7, v8);
  id v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for SnippetManager.SnippetRecord(0);
  uint64_t v13 = MEMORY[0x1F4188790](v11, v12);
  uint64_t v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x1F4188790](v13, v16);
  uint64_t v19 = &v42[-v18];
  uint64_t v20 = a2(*(void *)(a1 + *(int *)(v17 + 20)), *(void *)(a1 + *(int *)(v17 + 20) + 8));
  if (v21)
  {
    uint64_t v45 = v3;
    uint64_t v46 = a3;
    if (qword_1EA5881B8 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_1C9BECF88();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EA5C2928);
    sub_1C9B048F0(a1, (uint64_t)v19);
    sub_1C9B048F0(a1, (uint64_t)v15);
    uint64_t v27 = sub_1C9BECF78();
    os_log_type_t v28 = sub_1C9BEDCA8();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v50 = v44;
      *(_DWORD *)uint64_t v30 = 136315394;
      int v43 = v29;
      long long v49 = *(_OWORD *)&v19[*(int *)(v11 + 20)];
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995C8);
      uint64_t v31 = sub_1C9BED5D8();
      *(void *)&long long v49 = sub_1C95FF228(v31, v32, &v50);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9B02F9C((uint64_t)v19, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v33 = *(void *)&v15[*(int *)(v11 + 20)];
      swift_getObjectType();
      *(void *)&long long v49 = v33;
      sub_1C9BEE1A8();
      sub_1C9B04A44(qword_1EBC76730, 255, MEMORY[0x1E4F27990]);
      uint64_t v34 = v27;
      uint64_t v35 = v48;
      uint64_t v36 = sub_1C9BEE5A8();
      unint64_t v38 = v37;
      (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v10, v35);
      *(void *)&long long v49 = sub_1C95FF228(v36, v38, &v50);
      sub_1C9BEDF68();
      swift_bridgeObjectRelease();
      sub_1C9B02F9C((uint64_t)v15, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
      _os_log_impl(&dword_1C95F9000, v34, (os_log_type_t)v43, "Dropping SnippetRecord for Snippet since Flow is not in the stack. Flow %s with ID: %s", (uint8_t *)v30, 0x16u);
      uint64_t v39 = v44;
      swift_arrayDestroy();
      MEMORY[0x1CB78C440](v39, -1, -1);
      MEMORY[0x1CB78C440](v30, -1, -1);
    }
    else
    {
      sub_1C9B02F9C((uint64_t)v19, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
      sub_1C9B02F9C((uint64_t)v15, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
    }
    uint64_t v40 = v46;
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9A8);
    return __swift_storeEnumTagSinglePayload(v40, 1, 1, v41);
  }
  else
  {
    uint64_t v22 = v20;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9A8);
    uint64_t v24 = *(int *)(v23 + 48);
    sub_1C9B048F0(a1, a3);
    *(void *)(a3 + v24) = v22;
    return __swift_storeEnumTagSinglePayload(a3, 0, 1, v23);
  }
}

uint64_t sub_1C9B01A80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C9BEAB08();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t SnippetManager.deinit()
{
  swift_release();
  sub_1C9629FFC(*(void *)(v0 + 32));
  sub_1C9B02F9C(v0 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
  return v0;
}

uint64_t SnippetManager.__deallocating_deinit()
{
  SnippetManager.deinit();

  return swift_deallocClassInstance();
}

void sub_1C9B01B8C()
{
}

uint64_t sub_1C9B01BB8(uint64_t a1)
{
  OUTLINED_FUNCTION_1_0();
  *(void *)(v1 + 16) = a1;
  return swift_release();
}

void sub_1C9B01BF8()
{
}

void sub_1C9B01C24()
{
}

void sub_1C9B01C50()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599598);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C9B04A44(&qword_1EA5995A0, v0, (void (*)(uint64_t))type metadata accessor for SnippetManagerProvider);
  sub_1C9BEC788();
}

void sub_1C9B01D10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599598);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C9B04A44(&qword_1EA5995A0, v0, (void (*)(uint64_t))type metadata accessor for SnippetManagerProvider);
  sub_1C9BEC838();
}

void sub_1C9B01DD8()
{
  uint64_t v1 = malloc(0x38uLL);
  OUTLINED_FUNCTION_43_31((uint64_t)v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599598);
  *(void *)(v0 + 32) = swift_getKeyPath();
  *(void *)(v0 + 40) = swift_getKeyPath();
  sub_1C9B04A44(&qword_1EA5995A0, v2, (void (*)(uint64_t))type metadata accessor for SnippetManagerProvider);
  sub_1C9BEC778();
}

void sub_1C9B01EB8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995A8);
  MEMORY[0x1F4188790](v2, v3);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a1);
  sub_1C9B01F88((uint64_t)v5);
}

void sub_1C9B01F88(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995A8);
  OUTLINED_FUNCTION_0_2();
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v5, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = v8 - v7;
  OUTLINED_FUNCTION_84_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v9, a1, v2);
  sub_1C9BEC838();
}

void sub_1C9B0206C()
{
  uint64_t v2 = malloc(0x28uLL);
  *(void *)OUTLINED_FUNCTION_43_31((uint64_t)v2) = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995A8);
  v1[1] = v3;
  OUTLINED_FUNCTION_5_0(v3);
  v1[2] = v4;
  size_t v6 = *(void *)(v5 + 64);
  v1[3] = malloc(v6);
  v1[4] = malloc(v6);
  sub_1C975B6F8();
}

void sub_1C9B02110(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void, void, void))(*(void *)(*(void *)a1 + 16) + 16))(*(void *)(*(void *)a1 + 24), *(void *)(*(void *)a1 + 32), *(void *)(*(void *)a1 + 8));
    sub_1C9B01F88(v2);
  }
  sub_1C9B01F88(*(void *)(*(void *)a1 + 32));
}

void SnippetManagerProvider.__allocating_init(snippetManager:)()
{
}

void SnippetManagerProvider.init(snippetManager:)()
{
}

void SnippetManagerProvider.__allocating_init(storage:)()
{
}

void SnippetManagerProvider.init(storage:)()
{
}

uint64_t SnippetManagerProvider.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t SnippetManagerProvider.__deallocating_deinit()
{
  SnippetManagerProvider.deinit();

  return swift_deallocClassInstance();
}

void sub_1C9B02360()
{
}

void sub_1C9B023D8()
{
  type metadata accessor for SnippetManagerProvider();

  while (1)
    ;
}

void sub_1C9B02424()
{
  type metadata accessor for SnippetManagerProvider();

  sub_1C9BEC838();
}

uint64_t sub_1C9B02474@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for SnippetManagerProvider();
  uint64_t result = sub_1C9BED188();
  *a1 = result;
  return result;
}

void SiriEnvironment.snippetManagerProvider.getter()
{
  type metadata accessor for SnippetManagerProvider();
  sub_1C9B04A44(&qword_1EA5995B0, v0, (void (*)(uint64_t))type metadata accessor for SnippetManagerProvider);

  sub_1C9BEC338();
}

void sub_1C9B02524(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A9A8);
  uint64_t v10 = MEMORY[0x1F4188790](v58, v9);
  uint64_t v57 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v12);
  uint64_t v56 = (uint64_t)&v48 - v13;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  int64_t v16 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_77;
  }
  int64_t v18 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_78;
  }
  uint64_t v20 = v16 / v15;
  uint64_t v21 = v18 / v15;
  if (v16 / v15 >= v18 / v15)
  {
    sub_1C9634148(a2, v18 / v15);
    unint64_t v23 = a4 + v21 * v15;
    if (v21 * v15 < 1 || a1 >= a2) {
      goto LABEL_71;
    }
    uint64_t v49 = v4;
    uint64_t v50 = v15;
    unint64_t v52 = a4;
    uint64_t v53 = -v15;
    unint64_t v51 = a1;
    while (1)
    {
      unint64_t v26 = a3;
      uint64_t v27 = v53;
      a3 += v53;
      unint64_t v55 = v23 + v53;
      uint64_t v28 = v56;
      sub_1C9608D98(v23 + v53, v56, &qword_1EA58A9A8);
      unint64_t v54 = a2 + v27;
      uint64_t v29 = v57;
      sub_1C9608D98(a2 + v27, v57, &qword_1EA58A9A8);
      uint64_t v30 = *(int *)(v58 + 48);
      uint64_t v31 = *(void *)(v28 + v30);
      uint64_t v32 = *(void *)(v29 + v30);
      sub_1C95FE81C(v29, &qword_1EA58A9A8);
      sub_1C95FE81C(v28, &qword_1EA58A9A8);
      if (v32 >= v31)
      {
        if (v26 >= v23 && a3 < v23)
        {
          unint64_t v35 = v51;
          a4 = v52;
          if (v26 == v23)
          {
            unint64_t v23 = v55;
            goto LABEL_43;
          }
          unint64_t v23 = v55;
LABEL_40:
          swift_arrayInitWithTakeBackToFront();
          goto LABEL_43;
        }
        unint64_t v23 = v55;
      }
      else
      {
        if (v26 >= a2 && a3 < a2)
        {
          unint64_t v35 = v51;
          a4 = v52;
          if (v26 == a2)
          {
            a2 = v54;
            goto LABEL_43;
          }
          a2 = v54;
          goto LABEL_40;
        }
        a2 = v54;
      }
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v35 = v51;
      a4 = v52;
LABEL_43:
      uint64_t v15 = v50;
      if (v23 <= a4 || a2 <= v35) {
        goto LABEL_71;
      }
    }
  }
  sub_1C9634148(a1, v16 / v15);
  uint64_t v22 = v20 * v15;
  unint64_t v23 = a4 + v20 * v15;
  unint64_t v55 = a3;
  if (v22 >= 1 && a2 < a3)
  {
    uint64_t v49 = v4;
    unint64_t v54 = v23;
    uint64_t v38 = v56;
    uint64_t v37 = v57;
    do
    {
      sub_1C9608D98(a2, v38, &qword_1EA58A9A8);
      sub_1C9608D98(a4, v37, &qword_1EA58A9A8);
      uint64_t v39 = *(int *)(v58 + 48);
      uint64_t v40 = *(void *)(v38 + v39);
      uint64_t v41 = *(void *)(v37 + v39);
      sub_1C95FE81C(v37, &qword_1EA58A9A8);
      sub_1C95FE81C(v38, &qword_1EA58A9A8);
      if (v41 >= v40)
      {
        if (a1 < a4 || a1 >= a4 + v15)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v42 = a2;
        a4 += v15;
      }
      else
      {
        unint64_t v42 = a2 + v15;
        if (a1 < a2 || a1 >= v42)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v23 = v54;
      a1 += v15;
      BOOL v45 = a4 >= v54 || v42 >= v55;
      a2 = v42;
    }
    while (!v45);
  }
LABEL_71:
  int64_t v46 = v23 - a4;
  if (v15 != -1 || v46 != 0x8000000000000000)
  {
    sub_1C9634148(a4, v46 / v15);
    return;
  }
LABEL_79:
  __break(1u);
}

void sub_1C9B0291C()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  id v78 = v9;
  uint64_t v80 = v10;
  uint64_t v12 = v11;
  uint64_t v75 = type metadata accessor for SnippetManager.SnippetManagerState(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v13, v14);
  OUTLINED_FUNCTION_7_37();
  uint64_t v17 = MEMORY[0x1F4188790](v15, v16);
  uint64_t v25 = OUTLINED_FUNCTION_21_46(v17, v18, v19, v20, v21, v22, v23, v24, v70[0]);
  uint64_t v77 = type metadata accessor for SnippetManager.SnippetRecord(v25);
  OUTLINED_FUNCTION_0_2();
  uint64_t v74 = v26;
  MEMORY[0x1F4188790](v27, v28);
  uint64_t v73 = (uint64_t)v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1F4188790](v30, v31);
  uint64_t v33 = (char *)v70 - v32;
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_0_2();
  uint64_t v72 = v34;
  MEMORY[0x1F4188790](v35, v36);
  OUTLINED_FUNCTION_5_1();
  v85[3] = v4;
  v85[4] = v2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v85);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(boxed_opaque_existential_0, v8, v4);
  if (qword_1EA5881B8 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C9BECF88();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EA5C2928);
  swift_unknownObjectRetain_n();
  uint64_t v40 = sub_1C9BECF78();
  os_log_type_t v41 = sub_1C9BEDC68();
  BOOL v42 = os_log_type_enabled(v40, v41);
  uint64_t v76 = v0;
  if (v42)
  {
    uint64_t v43 = OUTLINED_FUNCTION_56_1();
    v70[0] = OUTLINED_FUNCTION_39_3();
    v82[0] = v70[0];
    *(_DWORD *)uint64_t v43 = 136315394;
    v70[1] = v39;
    uint64_t v83 = v12;
    uint64_t v84 = v80;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995C8);
    uint64_t v44 = sub_1C9BED5D8();
    uint64_t v71 = v6;
    uint64_t v46 = sub_1C95FF228(v44, v45, v82);
    OUTLINED_FUNCTION_42_23(v46);
    sub_1C9BEDF68();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    swift_getObjectType();
    uint64_t v83 = v12;
    sub_1C9BEE1A8();
    sub_1C9B04A44(qword_1EBC76730, 255, MEMORY[0x1E4F27990]);
    uint64_t v47 = sub_1C9BEE5A8();
    unint64_t v49 = v48;
    OUTLINED_FUNCTION_37();
    v50();
    uint64_t v51 = sub_1C95FF228(v47, v49, v82);
    OUTLINED_FUNCTION_42_23(v51);
    uint64_t v6 = v71;
    sub_1C9BEDF68();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v40, v41, "Got new snippet from flow %s with id %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  OUTLINED_FUNCTION_84_1();
  uint64_t v52 = *(void *)(v6 + 32);
  if (v52)
  {
    uint64_t v53 = v77;
    sub_1C95FD5F0((uint64_t)v85, (uint64_t)&v33[*(int *)(v77 + 28)]);
    swift_unknownObjectRetain();
    sub_1C99CE064(v52);
    id v54 = v78;
    sub_1C9BEAAF8();
    unint64_t v55 = (uint64_t *)&v33[*(int *)(v53 + 20)];
    uint64_t v56 = v80;
    *unint64_t v55 = v12;
    v55[1] = v56;
    *(void *)&v33[*(int *)(v53 + 24)] = v54;
    uint64_t v57 = v6 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state;
    OUTLINED_FUNCTION_84_1();
    uint64_t v58 = v79;
    sub_1C9B048F0(v57, (uint64_t)v79);
    os_log_type_t v81 = *v58;
    MEMORY[0x1F4188790](v81, v59);
    uint64_t v60 = &v70[-4];
    v70[-2] = (uint64_t)v33;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1C9862D1C((uint64_t (*)(unint64_t))sub_1C9B049C0);
    if (v81[2] < v61)
    {
      __break(1u);
    }
    else
    {
      sub_1C98453A8(v61);
      uint64_t v12 = v73;
      sub_1C9B048F0((uint64_t)v33, v73);
      uint64_t v60 = v81;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_9:
        uint64_t v62 = v76;
        unint64_t v64 = v60[2];
        unint64_t v63 = v60[3];
        if (v64 >= v63 >> 1) {
          uint64_t v60 = (uint64_t *)sub_1C96549BC(v63 > 1, v64 + 1, 1, (uint64_t)v60);
        }
        v60[2] = v64 + 1;
        sub_1C9B04A8C(v12, (uint64_t)v60+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(void *)(v74 + 72) * v64);
        os_log_type_t v81 = v60;
        sub_1C9B01334();
        swift_bridgeObjectRelease();
        sub_1C9AFE850(v62);
        sub_1C9AFF8FC();
        sub_1C9B02F9C((uint64_t)v58, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
        sub_1C9B02F9C((uint64_t)v33, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9629FFC(v52);
        goto LABEL_15;
      }
    }
    uint64_t v60 = (uint64_t *)sub_1C96549BC(0, v60[2] + 1, 1, (uint64_t)v60);
    goto LABEL_9;
  }
  os_log_type_t v65 = (void *)sub_1C9BECF78();
  os_log_type_t v66 = sub_1C9BEDC88();
  if (OUTLINED_FUNCTION_4(v66))
  {
    uint64_t v67 = (_WORD *)OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_49(v67);
    OUTLINED_FUNCTION_6_1(&dword_1C95F9000, v68, v69, "Received a new snippet before SnippetManager.positionLookup has been set. This is a noop; snippet will be ignored");
    OUTLINED_FUNCTION_11_4();
  }

LABEL_15:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  OUTLINED_FUNCTION_10();
}

uint64_t sub_1C9B02F9C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v3();
  return a1;
}

void sub_1C9B02FF0()
{
}

uint64_t type metadata accessor for SnippetManagerProvider()
{
  return self;
}

uint64_t sub_1C9B03040(uint64_t a1, uint64_t a2)
{
  return sub_1C9B04A44(&qword_1EA5995B0, a2, (void (*)(uint64_t))type metadata accessor for SnippetManagerProvider);
}

uint64_t sub_1C9B03088(uint64_t a1, uint64_t a2)
{
  return sub_1C9B04A44(&qword_1EA5995B8, a2, (void (*)(uint64_t))type metadata accessor for SnippetManagerProvider);
}

uint64_t sub_1C9B030D8()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AFE8D4();
  *uint64_t v0 = result & 1;
  return result;
}

void sub_1C9B03104(unsigned __int8 *a1)
{
}

uint64_t sub_1C9B0312C()
{
  OUTLINED_FUNCTION_8_14();
  uint64_t result = sub_1C9AFEB64();
  *uint64_t v0 = result & 1;
  return result;
}

uint64_t sub_1C9B03158(unsigned __int8 *a1)
{
  return sub_1C9AFEBA4(*a1);
}

void sub_1C9B03180()
{
}

void sub_1C9B031AC()
{
}

uint64_t sub_1C9B031D4()
{
  return type metadata accessor for SnippetManager(0);
}

uint64_t sub_1C9B031DC()
{
  uint64_t result = type metadata accessor for SnippetManager.SnippetManagerState(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SnippetManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SnippetManager);
}

uint64_t dispatch thunk of SnippetManager.positionLookup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SnippetManager.positionLookup.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SnippetManager.positionLookup.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SnippetManager.canSendAddViews.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SnippetManager.canSendAddViews.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of SnippetManager.canSendAddViews.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SnippetManager.canSendXPCUpdates.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of SnippetManager.canSendXPCUpdates.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SnippetManager.canSendXPCUpdates.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of SnippetManager.flowIdentifierOfCurrentSnippet.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of SnippetManager.snippetDisappeared()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of SnippetManager.registerSnippet(from:event:or:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t method lookup function for SnippetManagerProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SnippetManagerProvider);
}

uint64_t dispatch thunk of SnippetManagerProvider.mock.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of SnippetManagerProvider.mock.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of SnippetManagerProvider.mock.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of SnippetManagerProvider.snippetManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of SnippetManagerProvider.snippetManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of SnippetManagerProvider.snippetManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of SnippetManagerProvider.$snippetManager.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of SnippetManagerProvider.$snippetManager.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of SnippetManagerProvider.$snippetManager.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of SnippetManagerProvider.__allocating_init(snippetManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of SnippetManagerProvider.__allocating_init(storage:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

void *sub_1C9B035EC(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  *a1 = *a2;
  if ((v3 & 0x20000) != 0) {
    sub_1C9BEC838();
  }
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v8))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_1C9BEAB08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v7, v10);
    *(_OWORD *)&v6[v8[5]] = *(_OWORD *)&v7[v8[5]];
    uint64_t v11 = v8[6];
    uint64_t v12 = *(void **)&v7[v11];
    *(void *)&v6[v11] = v12;
    uint64_t v13 = v8[7];
    uint64_t v14 = &v6[v13];
    uint64_t v15 = &v7[v13];
    long long v16 = *(_OWORD *)(v15 + 24);
    *(_OWORD *)&v6[v13 + 24] = v16;
    uint64_t v17 = v16;
    uint64_t v18 = **(void (***)(char *, char *, uint64_t))(v16 - 8);
    swift_unknownObjectRetain();
    id v19 = v12;
    v18(v14, v15, v17);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, (uint64_t)v8);
  }
  return a1;
}

uint64_t sub_1C9B037BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for SnippetManager.SnippetRecord(0);
  uint64_t result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = sub_1C9BEAB08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
    swift_unknownObjectRelease();

    uint64_t v8 = v4 + *(int *)(v5 + 28);
    return __swift_destroy_boxed_opaque_existential_1(v8);
  }
  return result;
}

void *sub_1C9B03884(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C9BEAB08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v5, v6, v9);
    *(_OWORD *)&v5[v7[5]] = *(_OWORD *)&v6[v7[5]];
    uint64_t v10 = v7[6];
    uint64_t v11 = *(void **)&v6[v10];
    *(void *)&v5[v10] = v11;
    uint64_t v12 = v7[7];
    uint64_t v13 = &v5[v12];
    uint64_t v14 = &v6[v12];
    long long v15 = *(_OWORD *)(v14 + 24);
    *(_OWORD *)&v5[v12 + 24] = v15;
    uint64_t v16 = v15;
    uint64_t v17 = **(void (***)(char *, char *, uint64_t))(v15 - 8);
    swift_unknownObjectRetain();
    id v18 = v11;
    v17(v13, v14, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  return a1;
}

void *sub_1C9B03A08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      uint64_t v23 = sub_1C9BEAB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 24))(v7, v8, v23);
      uint64_t v24 = v9[5];
      uint64_t v25 = &v7[v24];
      uint64_t v26 = &v8[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      *((void *)v25 + 1) = v27;
      uint64_t v28 = v9[6];
      uint64_t v29 = *(void **)&v8[v28];
      uint64_t v30 = *(void **)&v7[v28];
      *(void *)&v7[v28] = v29;
      id v31 = v29;

      __swift_assign_boxed_opaque_existential_1(&v7[v9[7]], &v8[v9[7]]);
      return a1;
    }
    sub_1C9B02F9C((uint64_t)v7, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
    memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1C9BEAB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
  *(_OWORD *)&v7[v9[5]] = *(_OWORD *)&v8[v9[5]];
  uint64_t v13 = v9[6];
  uint64_t v14 = *(void **)&v8[v13];
  *(void *)&v7[v13] = v14;
  uint64_t v15 = v9[7];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = *((void *)v17 + 3);
  *((void *)v16 + 3) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  id v19 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  swift_unknownObjectRetain();
  id v20 = v14;
  v19(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
  return a1;
}

void *sub_1C9B03C68(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, (uint64_t)v7))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1C9BEAB08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v5, v6, v9);
    *(_OWORD *)&v5[v7[5]] = *(_OWORD *)&v6[v7[5]];
    *(void *)&v5[v7[6]] = *(void *)&v6[v7[6]];
    uint64_t v10 = v7[7];
    int v11 = &v5[v10];
    uint64_t v12 = &v6[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)int v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    *((void *)v11 + 4) = *((void *)v12 + 4);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, (uint64_t)v7);
  }
  return a1;
}

void *sub_1C9B03D7C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  int EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, (uint64_t)v9);
  int v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, (uint64_t)v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      uint64_t v19 = sub_1C9BEAB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v7, v8, v19);
      uint64_t v20 = v9[5];
      uint64_t v21 = &v7[v20];
      uint64_t v22 = &v8[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      swift_unknownObjectRelease();
      *((void *)v21 + 1) = v23;
      uint64_t v24 = v9[6];
      uint64_t v25 = *(void **)&v7[v24];
      *(void *)&v7[v24] = *(void *)&v8[v24];

      uint64_t v26 = v9[7];
      uint64_t v27 = (uint64_t)&v7[v26];
      uint64_t v28 = &v8[v26];
      __swift_destroy_boxed_opaque_existential_1(v27);
      long long v29 = *((_OWORD *)v28 + 1);
      *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
      *(_OWORD *)(v27 + 16) = v29;
      *(void *)(v27 + 32) = *((void *)v28 + 4);
      return a1;
    }
    sub_1C9B02F9C((uint64_t)v7, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
    memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  uint64_t v12 = sub_1C9BEAB08();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
  *(_OWORD *)&v7[v9[5]] = *(_OWORD *)&v8[v9[5]];
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  uint64_t v13 = v9[7];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((void *)v14 + 4) = *((void *)v15 + 4);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, (uint64_t)v9);
  return a1;
}

uint64_t sub_1C9B03F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9B03F8C);
}

uint64_t sub_1C9B03F8C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return OUTLINED_FUNCTION_10_0(*a1);
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 20);

  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_1C9B0400C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9B04020);
}

void *sub_1C9B04020(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC773E0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)__swift_storeEnumTagSinglePayload(v8, a2, a2, v7);
  }
  return result;
}

void sub_1C9B040A4()
{
  sub_1C9B04140();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C9B04140()
{
  if (!qword_1EBC773E8)
  {
    type metadata accessor for SnippetManager.SnippetRecord(255);
    unint64_t v0 = sub_1C9BEDEE8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBC773E8);
    }
  }
}

void *sub_1C9B04198(void *a1, void *a2, int *a3)
{
  if ((*(_DWORD *)(*((void *)a3 - 1) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v8 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  int v11 = (char *)a2 + v9;
  long long v12 = *(_OWORD *)(v11 + 24);
  *(_OWORD *)((char *)a1 + v9 + 24) = v12;
  uint64_t v13 = v12;
  uint64_t v14 = **(void (***)(char *, char *, uint64_t))(v12 - 8);
  swift_unknownObjectRetain();
  id v15 = v8;
  v14(v10, v11, v13);
  return a1;
}

uint64_t sub_1C9B042E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_unknownObjectRelease();

  uint64_t v5 = a1 + *(int *)(a2 + 28);

  return __swift_destroy_boxed_opaque_existential_1(v5);
}

uint64_t sub_1C9B04374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  long long v12 = *(_OWORD *)(v11 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v12;
  uint64_t v13 = v12;
  uint64_t v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v12 - 8);
  swift_unknownObjectRetain();
  id v15 = v8;
  v14(v10, v11, v13);
  return a1;
}

uint64_t sub_1C9B04474(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v8[1] = v10;
  uint64_t v11 = a3[6];
  long long v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  __swift_assign_boxed_opaque_existential_1((void *)(a1 + a3[7]), (void *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_1C9B0453C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  return a1;
}

uint64_t sub_1C9B045DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  swift_unknownObjectRelease();
  v8[1] = v10;
  uint64_t v11 = a3[6];
  long long v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  __swift_destroy_boxed_opaque_existential_1(a1 + v13);
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  return a1;
}

uint64_t sub_1C9B046AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9B046C0);
}

uint64_t sub_1C9B046C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return OUTLINED_FUNCTION_10_0(*(void *)(a1 + *(int *)(a3 + 20)));
  }

  return __swift_getEnumTagSinglePayload(a1, a2, v6);
}

uint64_t sub_1C9B04740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9B04754);
}

void sub_1C9B04754(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  OUTLINED_FUNCTION_31_7();
  sub_1C9BEAB08();
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_1C9B047D8()
{
  uint64_t result = sub_1C9BEAB08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C9B04884()
{
  return sub_1C9B04A44((unint64_t *)&qword_1EBC76720, 255, MEMORY[0x1E4F27990]);
}

uint64_t type metadata accessor for SnippetManager.SnippetManagerAction(uint64_t a1)
{
  return sub_1C95FCC2C(a1, qword_1EA5995E0);
}

uint64_t sub_1C9B048F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_31_7();
  v4(v3);
  OUTLINED_FUNCTION_8_4();
  uint64_t v5 = OUTLINED_FUNCTION_228();
  v6(v5);
  return a2;
}

uint64_t sub_1C9B04940()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B04978(uint64_t a1, uint64_t a2)
{
  return sub_1C9AFE540(a1, a2, *(void (**)(uint64_t *__return_ptr, void *))(v2 + 16));
}

uint64_t sub_1C9B04980@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 16))(*a1, a1[1]);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t sub_1C9B049C0()
{
  return sub_1C9AFF7C4() & 1;
}

uint64_t sub_1C9B049E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SnippetManager.SnippetManagerState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9B04A44(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C9B04A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OUTLINED_FUNCTION_31_7();
  v4(v3);
  OUTLINED_FUNCTION_8_4();
  uint64_t v5 = OUTLINED_FUNCTION_229();
  v6(v5);
  return a2;
}

void *sub_1C9B04ADC(void *a1, void *a2, uint64_t a3)
{
  if ((*(_DWORD *)(*(void *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    sub_1C9BEC838();
  }
  swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1C9BEAB08();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  *(_OWORD *)((char *)a1 + v6[5]) = *(_OWORD *)((char *)a2 + v6[5]);
  uint64_t v7 = v6[6];
  uint64_t v8 = *(void **)((char *)a2 + v7);
  *(void *)((char *)a1 + v7) = v8;
  uint64_t v9 = v6[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  long long v12 = *(_OWORD *)(v11 + 24);
  *(_OWORD *)((char *)a1 + v9 + 24) = v12;
  uint64_t v13 = v12;
  uint64_t v14 = **(void (***)(char *, char *, uint64_t))(v12 - 8);
  swift_unknownObjectRetain();
  id v15 = v8;
  v14(v10, v11, v13);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C9B04C70(uint64_t a1)
{
  uint64_t v2 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for SnippetManager.SnippetRecord(0);
  swift_unknownObjectRelease();

  uint64_t v4 = a1 + *(int *)(v3 + 28);

  return __swift_destroy_boxed_opaque_existential_1(v4);
}

uint64_t sub_1C9B04D04(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  uint64_t v6 = v5[6];
  uint64_t v7 = *(void **)(a2 + v6);
  *(void *)(a1 + v6) = v7;
  uint64_t v8 = v5[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v11;
  uint64_t v12 = v11;
  uint64_t v13 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
  swift_unknownObjectRetain();
  id v14 = v7;
  v13(v9, v10, v12);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C9B04E3C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C9B02F9C(a1, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerAction);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C9BEAB08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
    *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
    uint64_t v6 = v5[6];
    uint64_t v7 = *(void **)(a2 + v6);
    *(void *)(a1 + v6) = v7;
    uint64_t v8 = v5[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    uint64_t v11 = *(void *)(v10 + 24);
    *(void *)(v9 + 24) = v11;
    *(void *)(v9 + 32) = *(void *)(v10 + 32);
    uint64_t v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8);
    swift_unknownObjectRetain();
    id v13 = v7;
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C9B04F9C(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C9BEAB08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
  *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  uint64_t v6 = v5[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C9B0506C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C9B02F9C(a1, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerAction);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C9BEAB08();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = (int *)type metadata accessor for SnippetManager.SnippetRecord(0);
    *(_OWORD *)(a1 + v5[5]) = *(_OWORD *)(a2 + v5[5]);
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    uint64_t v6 = v5[7];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    long long v9 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *(_OWORD *)(v7 + 16) = v9;
    *(void *)(v7 + 32) = *(void *)(v8 + 32);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C9B05160()
{
  uint64_t result = type metadata accessor for SnippetManager.SnippetRecord(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_21_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 208) = (char *)&a9 - v9;
  return 0;
}

void OUTLINED_FUNCTION_32_41()
{
  *(void *)(v0 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_34_35()
{
  return type metadata accessor for SnippetManager.SnippetManagerState(0);
}

uint64_t OUTLINED_FUNCTION_38_29()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_39_35()
{
  return 0;
}

id sub_1C9B0528C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v63 = a7;
  uint64_t v64 = a8;
  uint64_t v65 = a3;
  uint64_t v11 = sub_1C9BEAB08();
  uint64_t v62 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v12);
  id v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C9BEACE8();
  if (v16 >> 60 == 15) {
    goto LABEL_4;
  }
  uint64_t v17 = v15;
  uint64_t v18 = (_DWORD *)v16;
  if (sub_1C968366C(v15, v16))
  {
    sub_1C963F610(v17, (unint64_t)v18);
LABEL_4:
    if (qword_1EBC7A3B8 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_1C9BECF88();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EBC7A520);
    uint64_t v20 = sub_1C9BECF78();
    os_log_type_t v21 = sub_1C9BEDC88();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_1C95F9000, v20, v21, "ResponseFactory: SnippetPluginModel has no Data. Unable to build ACEView.", v22, 2u);
      OUTLINED_FUNCTION_11_4();
    }

    return 0;
  }
  unint64_t v61 = a4;
  uint64_t v58 = a5;
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1C9BECF88();
  uint64_t v60 = __swift_project_value_buffer(v25, (uint64_t)qword_1EBC7A520);
  uint64_t v26 = sub_1C9BECF78();
  os_log_type_t v27 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_62_5(v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl(&dword_1C95F9000, v26, (os_log_type_t)a4, "ResponseFactory: Building snippet for Response", v28, 2u);
    OUTLINED_FUNCTION_11_4();
  }
  uint64_t v59 = v17;

  swift_bridgeObjectRetain_n();
  long long v29 = (void *)sub_1C9BECF78();
  os_log_type_t v30 = sub_1C9BEDC78();
  if (OUTLINED_FUNCTION_62_5(v30))
  {
    swift_slowAlloc();
    uint64_t v66 = OUTLINED_FUNCTION_4_84();
    unint64_t v56 = a6;
    *uint64_t v18 = 136315138;
    v55[1] = v18 + 1;
    unint64_t v31 = v61;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C95FF228(v65, v31, &v66);
    OUTLINED_FUNCTION_62_3(v32);
    a6 = v56;
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_2_99(&dword_1C95F9000, v33, v34, "ResponseFactory: VisualLocation is set to %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    uint64_t v18 = v57;
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F96B40]), sel_init);
  sub_1C9BEAAF8();
  sub_1C9BEAAB8();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v11);
  uint64_t v36 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setAceId_, v36);

  id v37 = v35;
  uint64_t v38 = (void *)sub_1C9BED538();
  objc_msgSend(v37, sel_setViewId_, v38);

  sub_1C9BEACB8();
  uint64_t v39 = (void *)sub_1C9BED538();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setBundleName_, v39);

  id v23 = v37;
  uint64_t v40 = (void *)sub_1C9BED538();
  objc_msgSend(v23, sel_setItemType_, v40);

  uint64_t v41 = v59;
  BOOL v42 = (void *)sub_1C9BEA9B8();
  objc_msgSend(v23, sel_setModelData_, v42);

  if (a6)
  {
    swift_bridgeObjectRetain();
    uint64_t v43 = v58;
    uint64_t v44 = (void *)sub_1C9BED538();
    objc_msgSend(v23, sel_setResponseViewId_, v44);

    swift_bridgeObjectRetain();
    unint64_t v45 = (void *)sub_1C9BECF78();
    os_log_type_t v46 = sub_1C9BEDC78();
    if (!OUTLINED_FUNCTION_62_5(v46))
    {
      sub_1C963F610(v41, (unint64_t)v18);

      swift_bridgeObjectRelease_n();
      return v23;
    }
    swift_slowAlloc();
    uint64_t v66 = OUTLINED_FUNCTION_4_84();
    *uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1C95FF228(v43, a6, &v66);
    OUTLINED_FUNCTION_62_3(v47);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_2_99(&dword_1C95F9000, v48, v49, "ResponseFactory: ResponseViewId is set to %s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();

    uint64_t v50 = v41;
    unint64_t v51 = (unint64_t)v57;
  }
  else
  {
    uint64_t v52 = sub_1C9BECF78();
    os_log_type_t v53 = sub_1C9BEDC78();
    if (!OUTLINED_FUNCTION_62_5(v53))
    {
      sub_1C963F610(v41, (unint64_t)v18);

      return v23;
    }
    id v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v54 = 0;
    _os_log_impl(&dword_1C95F9000, v52, (os_log_type_t)v37, "ResponseFactory: ResponseViewId is nil, not set by domain", v54, 2u);
    OUTLINED_FUNCTION_11_4();

    uint64_t v50 = v41;
    unint64_t v51 = (unint64_t)v18;
  }
  sub_1C963F610(v50, v51);
  return v23;
}

void OUTLINED_FUNCTION_2_99(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_4_84()
{
  *(void *)(v1 - 168) = v0;
  return swift_slowAlloc();
}

void sub_1C9B05930()
{
  OUTLINED_FUNCTION_11_1();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v31 = v5;
  uint64_t v32 = v4;
  uint64_t v33 = v6;
  OUTLINED_FUNCTION_0();
  uint64_t v8 = v7;
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v11, v12);
  os_log_type_t v30 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 56))(v40, v14, v13);
  sub_1C95FD5F0((uint64_t)v40, (uint64_t)v39);
  uint64_t v15 = OUTLINED_FUNCTION_45_28();
  uint64_t v16 = OUTLINED_FUNCTION_45_28();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = OUTLINED_FUNCTION_43_32();
  uint64_t v19 = OUTLINED_FUNCTION_43_32();
  uint64_t v34 = v15;
  uint64_t v35 = v16;
  uint64_t v36 = AssociatedConformanceWitness;
  uint64_t v37 = v18;
  uint64_t v38 = v19;
  type metadata accessor for SnippetPresenter();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_37();
  v20();
  v29[1] = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v39[3]);
  os_log_type_t v21 = v30;
  OUTLINED_FUNCTION_82_2();
  v22();
  unint64_t v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v24 = (v10 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v3;
  *(void *)(v25 + 24) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v23, v21, v3);
  uint64_t v26 = v32;
  *(void *)(v25 + v24) = v31;
  os_log_type_t v27 = (void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v28 = v33;
  *os_log_type_t v27 = v26;
  v27[1] = v28;
  sub_1C9BEC838();
}

void SnippetPresenter.init<A>(_:reducer:eventHandler:)()
{
  type metadata accessor for Resolvable();
  Resolvable.resolvedValuePublisher.getter(&v0);
}

void SnippetPresenter.init<A, B>(_:_:reducer:eventHandler:)()
{
  OUTLINED_FUNCTION_11_1();
  sub_1C9BEDEE8();
  uint64_t v0 = OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_27_40();
  v3[0] = v0;
  v3[1] = OUTLINED_FUNCTION_5_83();
  v3[2] = swift_getWitnessTable();
  v3[3] = swift_getWitnessTable();
  sub_1C9BED078();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v1, v2);
  type metadata accessor for Resolvable();
  Resolvable.resolvedValuePublisher.getter(v3);
}

uint64_t sub_1C9B05FC0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1C9B0604C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B06084(uint64_t a1)
{
  return sub_1C9B05FC0(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 72));
}

void SnippetPresenter.init<A, B, C>(_:_:_:reducer:eventHandler:)()
{
  OUTLINED_FUNCTION_11_1();
  sub_1C9BEDEE8();
  uint64_t v0 = OUTLINED_FUNCTION_2_100();
  OUTLINED_FUNCTION_18_58();
  uint64_t v1 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_26_44();
  v4[0] = v0;
  v4[1] = v1;
  v4[2] = OUTLINED_FUNCTION_1_94();
  v4[3] = swift_getWitnessTable();
  v4[4] = swift_getWitnessTable();
  void v4[5] = swift_getWitnessTable();
  sub_1C9BED098();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_68_14();
  Resolvable.resolvedValuePublisher.getter(v4);
}

uint64_t sub_1C9B06418(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata3 + 48), a1 + *(int *)(TupleTypeMetadata3 + 64));
}

uint64_t sub_1C9B064D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B06508()
{
  OUTLINED_FUNCTION_48_34();
  return sub_1C9B06418(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 80));
}

void SnippetPresenter.init<A, B, C, D>(_:_:_:_:reducer:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_34_36(a22);
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_2_100();
  OUTLINED_FUNCTION_27_40();
  OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_18_58();
  OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_26_44();
  OUTLINED_FUNCTION_1_94();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C9BED0B8();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v22, v23);
  OUTLINED_FUNCTION_61_25();
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_64_18();
  OUTLINED_FUNCTION_68_14();
  OUTLINED_FUNCTION_12_70();
}

uint64_t sub_1C9B0692C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a1, a1 + TupleTypeMetadata[12], a1 + TupleTypeMetadata[16], a1 + TupleTypeMetadata[20]);
}

uint64_t sub_1C9B06A04()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B06A3C()
{
  OUTLINED_FUNCTION_48_34();
  return sub_1C9B0692C(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 88));
}

void SnippetPresenter.init<A, B, C, D, E>(_:_:_:_:_:reducer:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_13_73(v29, v30, v31, v32);
  OUTLINED_FUNCTION_34_36(a29);
  OUTLINED_FUNCTION_54_0(a22);
  OUTLINED_FUNCTION_40_1(a23);
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_5_83();
  sub_1C9BEDEE8();
  OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_27_40();
  OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_18_58();
  uint64_t v33 = OUTLINED_FUNCTION_5_83();
  OUTLINED_FUNCTION_42_24(v33, (uint64_t)v48);
  sub_1C9BEDEE8();
  uint64_t v47 = OUTLINED_FUNCTION_5_83();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = swift_getWitnessTable();
  OUTLINED_FUNCTION_58_26(v34);
  uint64_t v45 = swift_getWitnessTable();
  uint64_t v44 = swift_getWitnessTable();
  v48[0] = v47;
  v48[1] = WitnessTable;
  v48[2] = v34;
  v48[3] = v45;
  v48[4] = v44;
  sub_1C9BED0B8();
  swift_getWitnessTable();
  v48[0] = swift_getWitnessTable();
  sub_1C9BED078();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v35, v36);
  OUTLINED_FUNCTION_52_27(v37, v43);
  MEMORY[0x1F4188790](v38, v39);
  OUTLINED_FUNCTION_68_0();
  MEMORY[0x1F4188790](v40, v41);
  OUTLINED_FUNCTION_70_14();
  OUTLINED_FUNCTION_18_16(v42);
  OUTLINED_FUNCTION_61_25();
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_68_14();
  OUTLINED_FUNCTION_12_70();
}

uint64_t sub_1C9B070D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(uint64_t, char *, char *, char *, char *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v28 = a7;
  uint64_t v29 = a6;
  uint64_t v25 = a5;
  uint64_t v26 = a8;
  uint64_t v27 = a1;
  uint64_t v30 = sub_1C9BEDEE8();
  uint64_t v31 = sub_1C9BEDEE8();
  uint64_t v32 = sub_1C9BEDEE8();
  uint64_t v33 = sub_1C9BEDEE8();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v12 = *((void *)TupleTypeMetadata - 1);
  MEMORY[0x1F4188790](TupleTypeMetadata, v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a2, v16);
  uint64_t v17 = &v15[TupleTypeMetadata[12]];
  uint64_t v18 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a3, v18);
  uint64_t v19 = &v15[TupleTypeMetadata[16]];
  uint64_t v20 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a4, v20);
  os_log_type_t v21 = &v15[TupleTypeMetadata[20]];
  uint64_t v22 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, v25, v22);
  v29(v27, v15, v17, v19, v21);
  return (*(uint64_t (**)(char *, int *))(v12 + 8))(v15, TupleTypeMetadata);
}

uint64_t sub_1C9B07348@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1C9B070D0(a1, a2, a3, a4, a5, *(void (**)(uint64_t, char *, char *, char *, char *))(v6 + 96), *(void *)(v6 + 104), a6);
}

uint64_t sub_1C9B07390(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48), a1 + *(int *)(TupleTypeMetadata2 + 48) + TupleTypeMetadata[12], a1 + *(int *)(TupleTypeMetadata2 + 48) + TupleTypeMetadata[16], a1 + *(int *)(TupleTypeMetadata2 + 48) + TupleTypeMetadata[20]);
}

uint64_t sub_1C9B074A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B074DC()
{
  OUTLINED_FUNCTION_36_6();
  return sub_1C9B07390(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 96));
}

void SnippetPresenter.init<A, B, C, D, E, F>(_:_:_:_:_:_:reducer:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  OUTLINED_FUNCTION_11_1();
  v69[7] = v31;
  OUTLINED_FUNCTION_13_73(v32, v33, v34, v35);
  OUTLINED_FUNCTION_34_36(a22);
  OUTLINED_FUNCTION_54_0(a31);
  OUTLINED_FUNCTION_40_1(a24);
  v69[8] = a30;
  uint64_t v68 = a28;
  v69[0] = a29;
  v69[5] = a27;
  v69[6] = a26;
  v69[1] = a25;
  sub_1C9BEDEE8();
  uint64_t v36 = OUTLINED_FUNCTION_2_100();
  OUTLINED_FUNCTION_18_58();
  uint64_t v65 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_26_44();
  uint64_t v64 = OUTLINED_FUNCTION_1_94();
  uint64_t v37 = v36;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v39 = OUTLINED_FUNCTION_40_32(WitnessTable, (uint64_t)v69);
  uint64_t v62 = OUTLINED_FUNCTION_41_29(v39, (uint64_t)&v68);
  uint64_t v74 = v37;
  uint64_t v75 = v65;
  uint64_t v76 = v64;
  uint64_t v77 = WitnessTable;
  uint64_t v78 = v39;
  uint64_t v79 = v62;
  uint64_t v40 = sub_1C9BED098();
  OUTLINED_FUNCTION_27_40();
  uint64_t v67 = OUTLINED_FUNCTION_1_94();
  sub_1C9BEDEE8();
  uint64_t v41 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_42_24(v41, (uint64_t)v73);
  sub_1C9BEDEE8();
  uint64_t v42 = OUTLINED_FUNCTION_1_94();
  uint64_t v43 = OUTLINED_FUNCTION_38_30(v42, (uint64_t)&v72);
  uint64_t v44 = OUTLINED_FUNCTION_17_62(v43, (uint64_t)&v71);
  uint64_t v63 = OUTLINED_FUNCTION_39_36(v44, (uint64_t)&v70);
  uint64_t v74 = v67;
  uint64_t v75 = v41;
  uint64_t v76 = v42;
  uint64_t v77 = v43;
  uint64_t v78 = v44;
  uint64_t v79 = v63;
  uint64_t v45 = sub_1C9BED098();
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = OUTLINED_FUNCTION_58_26(v46);
  uint64_t v74 = v40;
  uint64_t v75 = v45;
  uint64_t v76 = v66;
  uint64_t v77 = v47;
  sub_1C9BED078();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v48, v49);
  OUTLINED_FUNCTION_52_27(v50, v61);
  v69[4] = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v51, v52);
  OUTLINED_FUNCTION_68_0();
  MEMORY[0x1F4188790](v53, v54);
  OUTLINED_FUNCTION_70_14();
  OUTLINED_FUNCTION_8_77(v55);
  v69[2] = v56;
  MEMORY[0x1F4188790](v57, v58);
  OUTLINED_FUNCTION_4_77();
  MEMORY[0x1F4188790](v59, v60);
  OUTLINED_FUNCTION_70_14();
  OUTLINED_FUNCTION_25_43();
  OUTLINED_FUNCTION_61_25();
  OUTLINED_FUNCTION_64_18();
  v73[1] = a29;
  type metadata accessor for Resolvable();
  Resolvable.resolvedValuePublisher.getter(&v74);
}

uint64_t sub_1C9B07C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void (*a7)(char *, char *, char *, char *, char *, char *)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v37 = a8;
  uint64_t v38 = a7;
  uint64_t v35 = a9;
  uint64_t v36 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = a3;
  uint64_t v29 = a2;
  uint64_t v10 = sub_1C9BEDEE8();
  uint64_t v28 = sub_1C9BEDEE8();
  uint64_t v30 = sub_1C9BEDEE8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v32 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata3, v12);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = sub_1C9BEDEE8();
  uint64_t v16 = sub_1C9BEDEE8();
  uint64_t v17 = sub_1C9BEDEE8();
  uint64_t v18 = swift_getTupleTypeMetadata3();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20);
  uint64_t v22 = (char *)&v28 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))((char *)&v28 - v21, a1, v15);
  uint64_t v23 = &v22[*(int *)(v18 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v23, v29, v16);
  uint64_t v24 = &v22[*(int *)(v18 + 64)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v24, v31, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v14, v33, v10);
  uint64_t v25 = &v14[*(int *)(TupleTypeMetadata3 + 48)];
  (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 16))(v25, v34);
  uint64_t v26 = &v14[*(int *)(TupleTypeMetadata3 + 64)];
  (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 16))(v26, v36);
  v38(v22, v23, v24, v14, v25, v26);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v14, TupleTypeMetadata3);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
}

uint64_t sub_1C9B07FF4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B0802C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_1C9B07C68(a1, a2, a3, a4, a5, a6, *(void (**)(char *, char *, char *, char *, char *, char *))(v7 + 104), *(void *)(v7 + 112), a7);
}

uint64_t sub_1C9B08070(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v5 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v6 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  uint64_t v7 = swift_getTupleTypeMetadata3();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, v5, v6, a1 + *(int *)(TupleTypeMetadata2 + 48), a1 + *(int *)(TupleTypeMetadata2 + 48) + *(int *)(v7 + 48), a1 + *(int *)(TupleTypeMetadata2 + 48) + *(int *)(v7 + 64));
}

uint64_t sub_1C9B081BC()
{
  OUTLINED_FUNCTION_36_6();
  return sub_1C9B08070(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 104));
}

void SnippetPresenter.init<A, B, C, D, E, F, G>(_:_:_:_:_:_:_:reducer:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_54_0(v32);
  OUTLINED_FUNCTION_34_36(a22);
  v70[3] = v33;
  OUTLINED_FUNCTION_40_1(a23);
  v71[0] = a31;
  v71[1] = a32;
  v69[0] = a30;
  v68[1] = a29;
  v69[1] = a28;
  uint64_t v70[2] = a27;
  v70[1] = a26;
  sub_1C9BEDEE8();
  uint64_t v34 = OUTLINED_FUNCTION_2_100();
  OUTLINED_FUNCTION_18_58();
  uint64_t v35 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_42_24(v35, (uint64_t)v69);
  sub_1C9BEDEE8();
  uint64_t v62 = OUTLINED_FUNCTION_1_94();
  uint64_t v36 = v34;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = OUTLINED_FUNCTION_17_62(WitnessTable, (uint64_t)v68);
  uint64_t v60 = OUTLINED_FUNCTION_41_29(v38, (uint64_t)&v67);
  uint64_t v74 = v36;
  uint64_t v75 = v35;
  uint64_t v76 = v62;
  uint64_t v77 = WitnessTable;
  uint64_t v78 = v38;
  uint64_t v79 = v60;
  uint64_t v39 = sub_1C9BED098();
  OUTLINED_FUNCTION_27_40();
  uint64_t v65 = OUTLINED_FUNCTION_1_94();
  sub_1C9BEDEE8();
  uint64_t v40 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_42_24(v40, (uint64_t)v73);
  sub_1C9BEDEE8();
  uint64_t v41 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_58_26(v41);
  sub_1C9BEDEE8();
  uint64_t v42 = OUTLINED_FUNCTION_1_94();
  uint64_t v43 = OUTLINED_FUNCTION_38_30(v42, (uint64_t)&v72);
  uint64_t v44 = OUTLINED_FUNCTION_17_62(v43, (uint64_t)v71);
  uint64_t v45 = OUTLINED_FUNCTION_40_32(v44, (uint64_t)v70);
  uint64_t v61 = OUTLINED_FUNCTION_39_36(v45, (uint64_t)&v66);
  uint64_t v74 = v65;
  uint64_t v75 = v40;
  uint64_t v76 = v41;
  uint64_t v77 = v42;
  uint64_t v78 = v43;
  uint64_t v79 = v44;
  uint64_t v80 = v45;
  uint64_t v81 = v61;
  uint64_t v46 = sub_1C9BED0B8();
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v74 = v39;
  uint64_t v75 = v46;
  uint64_t v67 = v39;
  v68[0] = v46;
  uint64_t v76 = v64;
  uint64_t v77 = v63;
  sub_1C9BED078();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v47, v48);
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_18_16(v49);
  v70[0] = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v50, v51);
  OUTLINED_FUNCTION_68_0();
  MEMORY[0x1F4188790](v52, v53);
  OUTLINED_FUNCTION_70_14();
  OUTLINED_FUNCTION_8_77(v54);
  v69[2] = v55;
  MEMORY[0x1F4188790](v56, v57);
  OUTLINED_FUNCTION_4_77();
  MEMORY[0x1F4188790](v58, v59);
  OUTLINED_FUNCTION_64_18();
  OUTLINED_FUNCTION_61_25();
  OUTLINED_FUNCTION_25_43();
  OUTLINED_FUNCTION_60_23();
  v73[3] = v65;
  type metadata accessor for Resolvable();
  OUTLINED_FUNCTION_12_70();
}

uint64_t sub_1C9B08A28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (*a8)(char *, char *, char *, char *, char *, char *, char *)@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v50 = a9;
  uint64_t v51 = a7;
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v41 = a2;
  uint64_t v52 = a10;
  uint64_t v53 = a8;
  uint64_t v45 = a4;
  uint64_t v46 = a19;
  uint64_t v43 = a3;
  uint64_t v44 = a18;
  uint64_t v54 = sub_1C9BEDEE8();
  uint64_t v55 = sub_1C9BEDEE8();
  uint64_t v56 = sub_1C9BEDEE8();
  uint64_t v57 = sub_1C9BEDEE8();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v47 = *((void *)TupleTypeMetadata - 1);
  MEMORY[0x1F4188790](TupleTypeMetadata, v21);
  uint64_t v23 = (char *)&v41 - v22;
  uint64_t v24 = sub_1C9BEDEE8();
  uint64_t v25 = sub_1C9BEDEE8();
  uint64_t v26 = sub_1C9BEDEE8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v42 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata3, v28);
  uint64_t v30 = (char *)&v41 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))((char *)&v41 - v29, a1, v24);
  uint64_t v31 = &v30[*(int *)(TupleTypeMetadata3 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v31, v41, v25);
  uint64_t v32 = &v30[*(int *)(TupleTypeMetadata3 + 64)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v32, v43, v26);
  uint64_t v33 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v23, v45, v33);
  uint64_t v34 = &v23[TupleTypeMetadata[12]];
  uint64_t v35 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v34, v48, v35);
  uint64_t v36 = &v23[TupleTypeMetadata[16]];
  uint64_t v37 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v36, v49, v37);
  uint64_t v38 = &v23[TupleTypeMetadata[20]];
  uint64_t v39 = sub_1C9BEDEE8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v38, v51, v39);
  v53(v30, v31, v32, v23, v34, v36, v38);
  (*(void (**)(char *, int *))(v47 + 8))(v23, TupleTypeMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v30, TupleTypeMetadata3);
}

uint64_t sub_1C9B08E40()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B08E78()
{
  OUTLINED_FUNCTION_32_42();
  uint64_t v22 = v0;
  uint64_t v20 = v1;
  uint64_t v21 = v2;
  OUTLINED_FUNCTION_57_29();
  return sub_1C9B08A28(v3, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
}

uint64_t sub_1C9B08EC4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v4 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  uint64_t v5 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  sub_1C9BEDEE8();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, v4, v5, a1 + *(int *)(TupleTypeMetadata2 + 48), a1 + *(int *)(TupleTypeMetadata2 + 48) + TupleTypeMetadata[12], a1 + *(int *)(TupleTypeMetadata2 + 48) + TupleTypeMetadata[16], a1 + *(int *)(TupleTypeMetadata2 + 48) + TupleTypeMetadata[20]);
}

uint64_t sub_1C9B09034()
{
  OUTLINED_FUNCTION_19_57();
  return sub_1C9B08EC4(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 112));
}

void SnippetPresenter.init<A, B, C, D, E, F, G, H>(_:_:_:_:_:_:_:reducer:modelTransformer:snippetEventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  OUTLINED_FUNCTION_11_1();
  v79[7] = v39;
  uint64_t v74 = v40;
  v79[11] = v41;
  v79[12] = a24;
  v79[8] = a23;
  OUTLINED_FUNCTION_34_36(a22);
  OUTLINED_FUNCTION_54_0(v42);
  OUTLINED_FUNCTION_40_1(a39);
  v79[4] = a38;
  v79[3] = a37;
  v79[10] = a25;
  v79[1] = a26;
  v79[2] = a36;
  v79[21] = a30;
  v79[18] = a35;
  v79[19] = a29;
  v79[0] = a27;
  v79[20] = a28;
  v79[16] = a33;
  v79[17] = a34;
  v79[15] = a32;
  v79[14] = a31;
  sub_1C9BEDEE8();
  uint64_t v43 = OUTLINED_FUNCTION_2_100();
  sub_1C9BEDEE8();
  v78[0] = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_26_44();
  uint64_t v77 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_18_58();
  uint64_t v76 = OUTLINED_FUNCTION_1_94();
  v78[1] = v43;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = OUTLINED_FUNCTION_41_29(WitnessTable, (uint64_t)v81);
  uint64_t v75 = OUTLINED_FUNCTION_40_32(v45, (uint64_t)&v80);
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v47 = OUTLINED_FUNCTION_58_26(v46);
  uint64_t v82 = v43;
  uint64_t v83 = v78[0];
  uint64_t v84 = v77;
  uint64_t v85 = v76;
  uint64_t v86 = WitnessTable;
  uint64_t v87 = v45;
  uint64_t v88 = v75;
  uint64_t v89 = v47;
  uint64_t v48 = sub_1C9BED0B8();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v49, v50);
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_18_16(v51);
  sub_1C9BEDEE8();
  uint64_t v52 = OUTLINED_FUNCTION_1_94();
  OUTLINED_FUNCTION_42_24(v52, (uint64_t)v79);
  sub_1C9BEDEE8();
  uint64_t v70 = OUTLINED_FUNCTION_1_94();
  sub_1C9BEDEE8();
  uint64_t v53 = OUTLINED_FUNCTION_1_94();
  uint64_t v54 = OUTLINED_FUNCTION_38_30(v53, (uint64_t)v78);
  uint64_t v55 = OUTLINED_FUNCTION_17_62(v54, (uint64_t)&v77);
  uint64_t v69 = OUTLINED_FUNCTION_39_36(v55, (uint64_t)&v76);
  uint64_t v82 = v52;
  uint64_t v83 = v70;
  uint64_t v84 = v53;
  uint64_t v85 = v54;
  uint64_t v86 = v55;
  uint64_t v87 = v69;
  uint64_t v73 = sub_1C9BED098();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v56, v57);
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_18_16(v58);
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v71 = swift_getWitnessTable();
  uint64_t v82 = v73;
  uint64_t v83 = v48;
  uint64_t v84 = v72;
  uint64_t v85 = v71;
  sub_1C9BED078();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v59, v60);
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_18_16(v61);
  swift_getWitnessTable();
  sub_1C9BED128();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v62, v63);
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_18_16(v64);
  swift_getWitnessTable();
  sub_1C9BED118();
  OUTLINED_FUNCTION_0();
  OUTLINED_FUNCTION_12_4();
  MEMORY[0x1F4188790](v65, v66);
  OUTLINED_FUNCTION_19_13();
  OUTLINED_FUNCTION_18_16(v67);
  uint64_t v68 = *v74;
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_64_18();
  v81[1] = v68;
  OUTLINED_FUNCTION_68_14();
  OUTLINED_FUNCTION_12_70();
}

uint64_t sub_1C9B099D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C9B09A08()
{
  OUTLINED_FUNCTION_32_42();
  uint64_t v22 = v0;
  uint64_t v20 = v1;
  uint64_t v21 = v2;
  OUTLINED_FUNCTION_57_29();
  return sub_1C9B08A28(v3, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
}

uint64_t sub_1C9B09A64()
{
  OUTLINED_FUNCTION_19_57();
  return sub_1C9B08EC4(v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 128));
}

uint64_t sub_1C9B09AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t type metadata accessor for SnippetPresenter()
{
  return swift_getGenericMetadata();
}

uint64_t dispatch thunk of SnippetPresenting.snippet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of SnippetPresenting.isSnippetInFocus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

void sub_1C9B09AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v8[14] = a5;
  v8[13] = a4;
  v8[15] = a3;
  v8[20] = a2;
  v8[23] = a1;
  uint64_t v5 = type metadata accessor for AceOutput();
  MEMORY[0x1F4188790](v5 - 8, v6);
  unsigned char v8[16] = (char *)v8 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C9BEC4F8();
}

uint64_t sub_1C9B0A6EC()
{
  OUTLINED_FUNCTION_37();
  v0();
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1C9B0A79C()
{
  OUTLINED_FUNCTION_0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v4 = (*(void *)(v3 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1C9B09AE8(v5, v0 + v2, *(void *)(v0 + v4), *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1C9B0A7F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v67 = a3;
  uint64_t v69 = a2;
  uint64_t v8 = type metadata accessor for SnippetManager.SnippetManagerState(0);
  uint64_t v10 = MEMORY[0x1F4188790](v8, v9);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10, v13);
  uint64_t v15 = (uint64_t *)((char *)&v56 - v14);
  uint64_t v66 = type metadata accessor for SnippetManager.SnippetRecord(0);
  uint64_t v63 = *(void *)(v66 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v66, v16);
  uint64_t v62 = (uint64_t)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17, v19);
  uint64_t v68 = (char *)&v56 - v20;
  uint64_t v21 = sub_1C9BEAB08();
  uint64_t v61 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21, v22);
  uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74[3] = type metadata accessor for AceOutput();
  v74[4] = (uint64_t)&protocol witness table for AceOutput;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v74);
  sub_1C9B0AF64(a4, (uint64_t)boxed_opaque_existential_0);
  if (qword_1EA5881B8 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C9BECF88();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EA5C2928);
  swift_unknownObjectRetain_n();
  uint64_t v60 = v27;
  uint64_t v28 = sub_1C9BECF78();
  os_log_type_t v29 = sub_1C9BEDC68();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v64 = v8;
  uint64_t v65 = v12;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v58 = v15;
    uint64_t v57 = v32;
    v71[0] = v32;
    *(_DWORD *)uint64_t v31 = 136315394;
    uint64_t v72 = a1;
    uint64_t v73 = v69;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA5995C8);
    uint64_t v59 = a5;
    uint64_t v33 = sub_1C9BED5D8();
    uint64_t v72 = sub_1C95FF228(v33, v34, v71);
    sub_1C9BEDF68();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2080;
    swift_getObjectType();
    uint64_t v72 = a1;
    sub_1C9BEE1A8();
    sub_1C97D13C8();
    uint64_t v35 = sub_1C9BEE5A8();
    unint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v24, v21);
    uint64_t v72 = sub_1C95FF228(v35, v37, v71);
    sub_1C9BEDF68();
    swift_unknownObjectRelease_n();
    a5 = v59;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C95F9000, v28, v29, "Got new snippet from flow %s with id %s", (uint8_t *)v31, 0x16u);
    uint64_t v38 = v57;
    swift_arrayDestroy();
    uint64_t v15 = v58;
    MEMORY[0x1CB78C440](v38, -1, -1);
    MEMORY[0x1CB78C440](v31, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v39 = (uint64_t)v68;
  swift_beginAccess();
  uint64_t v40 = *(void *)(a5 + 32);
  if (v40)
  {
    uint64_t v41 = v66;
    sub_1C95FD5F0((uint64_t)v74, v39 + *(int *)(v66 + 28));
    swift_unknownObjectRetain();
    sub_1C99CE064(v40);
    id v42 = v67;
    sub_1C9BEAAF8();
    uint64_t v43 = (uint64_t *)(v39 + *(int *)(v41 + 20));
    uint64_t v44 = v69;
    *uint64_t v43 = a1;
    v43[1] = v44;
    *(void *)(v39 + *(int *)(v41 + 24)) = v42;
    uint64_t v45 = a5 + OBJC_IVAR____TtC11SiriKitFlow14SnippetManager_state;
    swift_beginAccess();
    sub_1C9B0AF64(v45, (uint64_t)v15);
    uint64_t v70 = *v15;
    MEMORY[0x1F4188790](v70, v46);
    *(&v56 - 2) = v39;
    swift_bridgeObjectRetain();
    uint64_t v47 = 0;
    uint64_t v48 = sub_1C9862D1C((uint64_t (*)(unint64_t))sub_1C9B049C0);
    if (*(void *)(v70 + 16) < v48)
    {
      __break(1u);
    }
    else
    {
      sub_1C98453A8(v48);
      a1 = v62;
      sub_1C9B0AF64(v39, v62);
      uint64_t v47 = v70;
      if (swift_isUniquelyReferenced_nonNull_native())
      {
LABEL_9:
        unint64_t v50 = *(void *)(v47 + 16);
        unint64_t v49 = *(void *)(v47 + 24);
        if (v50 >= v49 >> 1) {
          uint64_t v47 = sub_1C96549BC(v49 > 1, v50 + 1, 1, v47);
        }
        *(void *)(v47 + 16) = v50 + 1;
        sub_1C965C6B8(a1, v47+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v50);
        uint64_t v70 = v47;
        uint64_t v51 = (uint64_t)v65;
        sub_1C9B01334();
        swift_bridgeObjectRelease();
        sub_1C9AFE850(v51);
        sub_1C9AFF8FC();
        sub_1C965E9CC((uint64_t)v15, (void (*)(void))type metadata accessor for SnippetManager.SnippetManagerState);
        sub_1C965E9CC(v39, (void (*)(void))type metadata accessor for SnippetManager.SnippetRecord);
        sub_1C9629FFC(v40);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
      }
    }
    uint64_t v47 = sub_1C96549BC(0, *(void *)(v47 + 16) + 1, 1, v47);
    goto LABEL_9;
  }
  uint64_t v52 = sub_1C9BECF78();
  os_log_type_t v53 = sub_1C9BEDC88();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl(&dword_1C95F9000, v52, v53, "Received a new snippet before SnippetManager.positionLookup has been set. This is a noop; snippet will be ignored",
      v54,
      2u);
    MEMORY[0x1CB78C440](v54, -1, -1);
  }

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
}

uint64_t sub_1C9B0AF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OUTLINED_FUNCTION_31_7();
  v5(v4);
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a2, v2);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_94()
{
  return sub_1C9BED1F8();
}

uint64_t OUTLINED_FUNCTION_2_100()
{
  return sub_1C9BED1F8();
}

uint64_t OUTLINED_FUNCTION_4_85()
{
  return v0 - 160;
}

uint64_t OUTLINED_FUNCTION_5_83()
{
  return sub_1C9BED1F8();
}

void OUTLINED_FUNCTION_8_77(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

void OUTLINED_FUNCTION_11_77()
{
  Resolvable.resolvedValuePublisher.getter((void *)(v0 - 168));
}

void OUTLINED_FUNCTION_12_70()
{
  Resolvable.resolvedValuePublisher.getter((void *)(v0 - 152));
}

uint64_t OUTLINED_FUNCTION_13_73(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 - 256) = a4;
  *(void *)(v5 - 456) = a3;
  *(void *)(v5 - 464) = a2;
  *(void *)(v5 - 472) = result;
  return result;
}

void OUTLINED_FUNCTION_14_69(uint64_t a1@<X8>)
{
  *(void *)(v2 + 40) = v1;
  *(void *)(v2 + 48) = a1;
}

void OUTLINED_FUNCTION_15_60()
{
  *(void *)(v0 - 208) = *(void *)(v0 - 200);
}

uint64_t OUTLINED_FUNCTION_17_62@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_18_58()
{
  return sub_1C9BEDEE8();
}

__n128 OUTLINED_FUNCTION_19_57()
{
  return *(__n128 *)(v0 + 56);
}

void OUTLINED_FUNCTION_22_42()
{
  Resolvable.resolvedValuePublisher.getter((void *)(v0 - 184));
}

void OUTLINED_FUNCTION_23_41()
{
  *(void *)(v0 - 192) = *(void *)(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_24_40()
{
  return sub_1C9BED128();
}

uint64_t OUTLINED_FUNCTION_26_44()
{
  return sub_1C9BEDEE8();
}

uint64_t OUTLINED_FUNCTION_27_40()
{
  return sub_1C9BEDEE8();
}

uint64_t OUTLINED_FUNCTION_28_35()
{
  return v0 - 144;
}

void OUTLINED_FUNCTION_29_37()
{
  *(void *)(v0 - 176) = *(void *)(v0 - 168);
}

uint64_t OUTLINED_FUNCTION_33_34()
{
  return v0 - 160;
}

void OUTLINED_FUNCTION_34_36(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_38_30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_39_36@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_40_32@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_41_29@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 256) = a1;
  return swift_getWitnessTable();
}

uint64_t OUTLINED_FUNCTION_45_28()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_46_28()
{
  *(void *)(v1 - 176) = *(void *)(v1 - 168);
  *(void *)(v1 - 192) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_47_25()
{
  *(void *)(v1 - 176) = *(void *)(v1 - 168);
  *(void *)(v1 - 192) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_49_26()
{
  *(void *)(v1 - 160) = *(void *)(v1 - 152);
  *(void *)(v1 - 176) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_50_27()
{
  *(void *)(v1 - 160) = *(void *)(v1 - 152);
  *(void *)(v1 - 176) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_51_26()
{
  *(void *)(v1 - 160) = *(void *)(v1 - 152);
  *(void *)(v1 - 176) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_56_28@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a2 - 256);
  return sub_1C95FD5D8(a1, v3);
}

uint64_t OUTLINED_FUNCTION_58_26(uint64_t result)
{
  *(void *)(v1 - 448) = result;
  return result;
}

void OUTLINED_FUNCTION_59_17()
{
  Resolvable.resolvedValuePublisher.getter((void *)(v0 - 200));
}

void sub_1C9B0B374()
{
}

Swift::Int __swiftcall DialogUsageProvider.usageCount(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v3 = self;
  uint64_t v4 = (void *)sub_1C9BED538();
  id v5 = objc_msgSend(v3, sel_getDialogStateUseCase_, v4);

  signed int v6 = objc_msgSend(v5, sel_usageCount);
  if (qword_1EBC7A3B8 != -1) {
    swift_once();
  }
  Swift::Int v7 = v6;
  uint64_t v8 = sub_1C9BECF88();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EBC7A520);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_1C9BECF78();
  os_log_type_t v10 = sub_1C9BEDC78();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_1C95FF228(countAndFlagsBits, (unint64_t)object, &v13);
    sub_1C9BEDF68();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2048;
    sub_1C9BEDF68();
    _os_log_impl(&dword_1C95F9000, v9, v10, "DialogUsageProvider: CAT %s has usage count: %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_11_4();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v7;
}

Swift::Int sub_1C9B0BF1C(uint64_t a1, uint64_t a2)
{
  return DialogUsageProvider.usageCount(for:)(*(Swift::String *)&a1);
}

uint64_t dispatch thunk of DialogUsageProviding.usageCount(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for DialogUsageProvider()
{
  return &type metadata for DialogUsageProvider;
}

ValueMetadata *type metadata accessor for SonicResponseManager()
{
  return &type metadata for SonicResponseManager;
}

uint64_t OUTLINED_FUNCTION_2_101()
{
  uint64_t v2 = *(void *)(v0 - 88);
  *(void *)(v0 - 96) = *(void *)(v0 - 96);
  *(void *)(v0 - 88) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_97()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_4_86(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return v1 - 104;
}

void *sub_1C9B0BFB8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9B0E5EC((uint64_t)a1, (void (*)(void))type metadata accessor for RelationshipLabel);
    type metadata accessor for RelationshipLabel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A200) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C9BEAB58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C9B0C0E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C9B0E5EC((uint64_t)a1, (void (*)(void))type metadata accessor for RelationshipLabel);
    uint64_t v6 = type metadata accessor for RelationshipLabel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA58A200) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C9BEAB58();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C9B0C210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C9B0C224);
}

uint64_t sub_1C9B0C224()
{
  OUTLINED_FUNCTION_13_9();
  type metadata accessor for RelationshipLabel();
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return OUTLINED_FUNCTION_10_0(*(void *)(v0 + *(int *)(v2 + 20) + 8));
  }

  return __swift_getEnumTagSinglePayload(v0, v1, v3);
}

uint64_t sub_1C9B0C29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C9B0C2B0);
}

void sub_1C9B0C2B0()
{
  OUTLINED_FUNCTION_9_6();
  type metadata accessor for RelationshipLabel();
  OUTLINED_FUNCTION_1_2();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = OUTLINED_FUNCTION_3_9();
    __swift_storeEnumTagSinglePayload(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
  }
}

uint64_t type metadata accessor for StartCallUnsetRelationshipFlowConfig(uint64_t a1)
{
  return sub_1C95FCC2C(a1, (uint64_t *)&unk_1EA599670);
}

uint64_t sub_1C9B0C340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C96FE0E4(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for RelationshipLabel);
}

uint64_t sub_1C9B0C360()
{
  uint64_t v2 = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC78D38);
  MEMORY[0x1F4188790](v3 - 8, v4);
  OUTLINED_FUNCTION_222();
  sub_1C9BEBFE8();
  uint64_t v5 = sub_1C9BEB748();
  if (__swift_getEnumTagSinglePayload(v1, 1, v5) == 1)
  {
    sub_1C95FE76C(v1, &qword_1EBC78D38);
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC88();
    sub_1C9BECE78();
    char v6 = 0;
  }
  else
  {
    uint64_t v7 = sub_1C9BEB738();
    uint64_t v9 = v8;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v1, v5);
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC78();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C9BEF570;
    *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v10 + 64) = sub_1C9604B38();
    *(void *)(v10 + 32) = v7;
    *(void *)(v10 + 40) = v9;
    swift_bridgeObjectRetain();
    sub_1C9BECE78();
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)(v2 + *(int *)(type metadata accessor for StartCallUnsetRelationshipFlowConfig(0) + 20));
    if (*v11 == v7 && v11[1] == v9)
    {
      swift_bridgeObjectRelease();
      char v6 = 1;
    }
    else
    {
      char v6 = sub_1C9BEE618();
      swift_bridgeObjectRelease();
    }
  }
  return v6 & 1;
}

uint64_t sub_1C9B0C5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA599690);
  MEMORY[0x1F4188790](v5 - 8, v6);
  OUTLINED_FUNCTION_6_0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for PhoneIntent(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v10, v11);
  OUTLINED_FUNCTION_6_0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for PhoneIntent.Contact(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v16, v17);
  OUTLINED_FUNCTION_222();
  sub_1C9BEC028();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v18 + 16))(v14, a1);
  if (qword_1EA588210 != -1) {
    swift_once();
  }
  sub_1C9B0E664(&qword_1EA599680, (void (*)(uint64_t))type metadata accessor for PhoneIntent);
  sub_1C9B0E664(&qword_1EA599698, (void (*)(uint64_t))type metadata accessor for PhoneIntent.Contact);
  uint64_t v19 = sub_1C9BEB708();
  sub_1C9B0E5EC(v14, (void (*)(void))type metadata accessor for PhoneIntent);
  sub_1C9612CF0(v19, v9);
  swift_bridgeObjectRelease();
  if (__swift_getEnumTagSinglePayload(v9, 1, v15) == 1)
  {
    uint64_t result = sub_1C95FE76C(v9, &qword_1EA599690);
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    *(_OWORD *)a2 = xmmword_1C9BF06F0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
  }
  else
  {
    sub_1C9B0E6AC(v9, v2);
    sub_1C9B0E664(&qword_1EA5996A0, (void (*)(uint64_t))type metadata accessor for PhoneIntent.Contact);
    OUTLINED_FUNCTION_11_45();
    uint64_t v27 = sub_1C9BEB888();
    uint64_t v35 = v28;
    uint64_t v36 = v27;
    OUTLINED_FUNCTION_11_45();
    uint64_t v29 = sub_1C9BEB868();
    uint64_t v34 = v30;
    OUTLINED_FUNCTION_11_45();
    uint64_t v21 = sub_1C9BEB848();
    uint64_t v22 = v31;
    OUTLINED_FUNCTION_11_45();
    uint64_t v23 = sub_1C9BEB858();
    uint64_t v24 = v32;
    OUTLINED_FUNCTION_11_45();
    uint64_t v25 = sub_1C9BEB878();
    uint64_t v26 = v33;
    uint64_t result = sub_1C9B0E5EC(v2, (void (*)(void))type metadata accessor for PhoneIntent.Contact);
    *(void *)a2 = v36;
    *(void *)(a2 + 8) = v35;
    *(void *)(a2 + 16) = v29;
    *(void *)(a2 + 24) = v34;
  }
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v24;
  *(void *)(a2 + 64) = v25;
  *(void *)(a2 + 72) = v26;
  return result;
}

uint64_t sub_1C9B0C90C(uint64_t a1)
{
  type metadata accessor for PhoneIntent(0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x1F4188790](v2, v3);
  OUTLINED_FUNCTION_6_0();
  uint64_t v6 = v5 - v4;
  sub_1C9BEC028();
  OUTLINED_FUNCTION_8_4();
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v6, a1);
  if (qword_1EA588220 != -1) {
    swift_once();
  }
  sub_1C9B0E664(&qword_1EA599680, (void (*)(uint64_t))type metadata accessor for PhoneIntent);
  sub_1C9BEB728();
  if (v9 == 4)
  {
    if (qword_1EBC7A3B0 != -1) {
      swift_once();
    }
    sub_1C9BEDC88();
    sub_1C9BECE78();
    sub_1C9B0E5EC(v6, (void (*)(void))type metadata accessor for PhoneIntent);
    return 0;
  }
  else
  {
    sub_1C9B0E5EC(v6, (void (*)(void))type metadata accessor for PhoneIntent);
    return 0x10001u >> (8 * v9);
  }
}

uint64_t sub_1C9B0CAEC@<X0>(uint64_t a1@<X8>)
{
  NLContextUpdate.init()(a1);
  unint64_t v2 = sub_1C9B0CC38(0);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = v2;
  *(void *)(a1 + 192) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_49(v5, (__n128)xmmword_1C9BEF570);
  OUTLINED_FUNCTION_7_44();
  OUTLINED_FUNCTION_3_61();
  swift_bridgeObjectRelease();
  sub_1C9B0CC38(4);
  OUTLINED_FUNCTION_1_52();
  sub_1C9BED618();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5[2].n128_u64[0] = v10;
  v5[2].n128_u64[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C9BF0BB0;
  *(void *)(v6 + 32) = sub_1C9B0CC38(2);
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = sub_1C9B0CC38(3);
  *(void *)(v6 + 56) = v8;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = v6;
  *(unsigned char *)(a1 + 176) = 1;
  return result;
}

unint64_t sub_1C9B0CC38(char a1)
{
  return 0xD000000000000012;
}

uint64_t sub_1C9B0CCDC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  NLContextUpdate.init()(a2);
  unint64_t v4 = sub_1C9B0CC38(0);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  *(void *)(a2 + 184) = v4;
  *(void *)(a2 + 192) = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t v7 = (__n128 *)swift_allocObject();
  OUTLINED_FUNCTION_13_49(v7, (__n128)xmmword_1C9BEF570);
  OUTLINED_FUNCTION_7_44();
  OUTLINED_FUNCTION_3_61();
  swift_bridgeObjectRelease();
  sub_1C9B0CC38(4);
  OUTLINED_FUNCTION_1_52();
  sub_1C9BED618();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7[2].n128_u64[0] = v13;
  v7[2].n128_u64[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)(a2 + 168) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C9BF0BB0;
  *(void *)(v8 + 32) = sub_1C9B0CC38(2);
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = sub_1C9B0CC38(3);
  *(void *)(v8 + 56) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a2 + 160) = v8;
  *(unsigned char *)(a2 + 176) = 1;
  uint64_t v11 = sub_1C9B0CE54(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 104) = v11;
  return result;
}

uint64_t sub_1C9B0CE54(unint64_t a1)
{
  v3._object = (void *)0x80000001C9C2CF00;
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  OrdinalDisplayHintsBuilder.init(referenceNode:)(&v76, v3);
  rawValue = v76.numericOrdinalValues._rawValue;
  uint64_t countAndFlagsBits = v76.last._countAndFlagsBits;
  object = v76.last._object;
  uint64_t v67 = v76.secondToLast._countAndFlagsBits;
  uint64_t v71 = v76.secondToLast._object;
  uint64_t v66 = v76.thirdToLast._countAndFlagsBits;
  uint64_t v70 = (char *)v76.thirdToLast._object;
  uint64_t v65 = (void *)v76.referenceNodeSemantic._countAndFlagsBits;
  uint64_t v69 = v76.referenceNodeSemantic._object;
  uint64_t v80 = MEMORY[0x1E4FBC860];
  uint64_t v81 = MEMORY[0x1E4FBC860];
  if (qword_1EBC7A3B0 != -1) {
    goto LABEL_41;
  }
  while (1)
  {
    sub_1C9BEDC78();
    unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v5 = sub_1C9BECE78();
    MEMORY[0x1F4188790](v5, v6);
    uint64_t v61 = v1;
    sub_1C972A8C8((void (*)(uint64_t *__return_ptr, id *))sub_1C9B0E524, (uint64_t)v59, a1);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 + 16);
    if (!v9) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v11 = 32;
    uint64_t v1 = &type metadata for DisplayHint;
    while (1)
    {
      uint64_t v12 = v8;
      uint64_t v13 = *(void *)(v8 + v11);
      uint64_t v14 = *(void *)(v13 + 16);
      a1 = *(void *)(v10 + 16);
      BOOL v15 = __OFADD__(a1, v14);
      swift_bridgeObjectRetain();
      if (v15) {
        break;
      }
      if (!swift_isUniquelyReferenced_nonNull_native()
        || (int64_t)(a1 + v14) > *(void *)(v10 + 24) >> 1)
      {
        sub_1C9654794();
        uint64_t v10 = v16;
      }
      if (*(void *)(v13 + 16))
      {
        uint64_t v17 = *(void *)(v10 + 16);
        if ((*(void *)(v10 + 24) >> 1) - v17 < v14) {
          goto LABEL_39;
        }
        unint64_t v18 = v10 + 96 * v17 + 32;
        if (v13 + 32 < v18 + 96 * v14 && v18 < v13 + 32 + 96 * v14)
        {
          LODWORD(v61) = 0;
          uint64_t v60 = 1092;
          v59[0] = 2;
          uint64_t result = sub_1C9BEE408();
          __break(1u);
          return result;
        }
        swift_arrayInitWithCopy();
        if (v14)
        {
          uint64_t v20 = *(void *)(v10 + 16);
          BOOL v21 = __OFADD__(v20, v14);
          uint64_t v22 = v20 + v14;
          if (v21) {
            goto LABEL_40;
          }
          *(void *)(v10 + 16) = v22;
        }
      }
      else if (v14)
      {
        goto LABEL_38;
      }
      swift_bridgeObjectRelease();
      v11 += 56;
      --v9;
      uint64_t v8 = v12;
      if (!v9)
      {
        swift_bridgeObjectRelease();
        unint64_t v4 = (void *)MEMORY[0x1E4FBC860];
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_once();
  }
LABEL_24:
  sub_1C965F4AC();
  uint64_t v23 = *(void *)(v8 + 16);
  if (v23)
  {
    v76.numericOrdinalValues._rawValue = v4;
    sub_1C963C2E0();
    uint64_t v24 = v76.numericOrdinalValues._rawValue;
    *(void *)&long long v64 = v8;
    uint64_t v25 = (uint64_t *)(v8 + 80);
    do
    {
      uint64_t v26 = *(v25 - 5);
      uint64_t v27 = *(v25 - 4);
      uint64_t v29 = *(v25 - 3);
      uint64_t v28 = *(v25 - 2);
      uint64_t v30 = *v25;
      uint64_t v74 = (void *)*(v25 - 1);
      uint64_t v75 = v26;
      v76.numericOrdinalValues._rawValue = v24;
      unint64_t v32 = v24[2];
      unint64_t v31 = v24[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v32 >= v31 >> 1)
      {
        sub_1C963C2E0();
        uint64_t v24 = v76.numericOrdinalValues._rawValue;
      }
      v25 += 7;
      uint64_t v24[2] = v32 + 1;
      uint64_t v33 = &v24[6 * v32];
      v33[4] = v75;
      v33[5] = v27;
      void v33[6] = v29;
      v33[7] = v28;
      v33[8] = v74;
      v33[9] = v30;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C965F3B0((uint64_t)v24);
  v76.numericOrdinalValues._rawValue = rawValue;
  v76.last._uint64_t countAndFlagsBits = countAndFlagsBits;
  v76.last._object = object;
  v76.secondToLast._uint64_t countAndFlagsBits = v67;
  v76.secondToLast._object = v71;
  v76.thirdToLast._uint64_t countAndFlagsBits = v66;
  v76.thirdToLast._object = v70;
  v76.referenceNodeSemantic._uint64_t countAndFlagsBits = (uint64_t)v65;
  v76.referenceNodeSemantic._object = v69;
  uint64_t v34 = v80;
  uint64_t v35 = swift_bridgeObjectRetain();
  OrdinalDisplayHintsBuilder.build(for:)(v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C965F4AC();
  uint64_t v36 = v81;
  unint64_t v37 = *(char **)(v81 + 16);
  if (v37)
  {
    uint64_t v63 = v34;
    swift_bridgeObjectRetain_n();
    uint64_t v62 = v36;
    uint64_t v38 = v36 + 64;
    long long v64 = xmmword_1C9BEF570;
    do
    {
      uint64_t v70 = v37;
      uint64_t v39 = *(void **)(v38 - 32);
      uint64_t v40 = *(void *)(v38 - 24);
      id v42 = *(void **)(v38 - 16);
      uint64_t v41 = *(void *)(v38 - 8);
      uint64_t v43 = *(void **)(v38 + 8);
      uint64_t v74 = *(void **)v38;
      uint64_t v75 = v41;
      uint64_t v45 = *(void **)(v38 + 24);
      object = *(void **)(v38 + 16);
      uint64_t v44 = (uint64_t)object;
      rawValue = v43;
      uint64_t v71 = v45;
      uint64_t v46 = *(void *)(v38 + 40);
      uint64_t v65 = *(void **)(v38 + 32);
      uint64_t v47 = *(void *)(v38 + 48);
      uint64_t v48 = *(void *)(v38 + 56);
      uint64_t v69 = (void *)qword_1EBC7A518;
      sub_1C960114C((uint64_t)v39, v40);
      uint64_t v49 = (uint64_t)v45;
      uint64_t v50 = v46;
      sub_1C960114C(v44, v49);
      LODWORD(countAndFlagsBits) = sub_1C9BEDC78();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBC786F0);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = v64;
      uint64_t v67 = (uint64_t)v39;
      v76.numericOrdinalValues._rawValue = v39;
      v76.last._uint64_t countAndFlagsBits = v40;
      v76.last._object = v42;
      v76.secondToLast._uint64_t countAndFlagsBits = v75;
      uint64_t v52 = (uint64_t)object;
      v76.secondToLast._object = v74;
      v76.thirdToLast._uint64_t countAndFlagsBits = (uint64_t)rawValue;
      uint64_t v53 = (uint64_t)v71;
      v76.thirdToLast._object = object;
      v76.referenceNodeSemantic._uint64_t countAndFlagsBits = (uint64_t)v71;
      v76.referenceNodeSemantic._object = v65;
      uint64_t v77 = v50;
      uint64_t v66 = v50;
      uint64_t v78 = v47;
      uint64_t v79 = v48;
      sub_1C960114C((uint64_t)v39, v40);
      sub_1C960114C(v52, v53);
      uint64_t v54 = sub_1C9BED5D8();
      uint64_t v56 = v55;
      *(void *)(v51 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v51 + 64) = sub_1C9604B38();
      *(void *)(v51 + 32) = v54;
      *(void *)(v51 + 40) = v56;
      sub_1C9BECE78();
      swift_bridgeObjectRelease();
      uint64_t v57 = v70;
      sub_1C9603BCC(v67, v40);
      sub_1C9603BCC((uint64_t)object, (uint64_t)v71);
      v38 += 96;
      unint64_t v37 = v57 - 1;
    }
    while (v37);
    swift_bridgeObjectRelease();
    uint64_t v36 = v62;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v36;
}

uint64_t sub_1C9B0D524@<X0>(uint64_t a1@<X8>)
{
  NLContextUpdate.init()(a1);
  unint64_t v2 = sub_1C9B0CC38(0);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = v2;
  *(void *)(a1 + 192) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBC7A0B0);
  uint64_t v5 = (__n128 *)swift_allocObject();
  uint64_t v11 = OUTLINED_FUNCTION_13_49(v5, (__n128)xmmword_1C9BF0BB0);
  unint64_t v13 = v6;
  sub_1C9604BD0();
  OUTLINED_FUNCTION_6_49();
  swift_bridgeObjectRelease();
  sub_1C9B0CC38(4);
  OUTLINED_FUNCTION_1_52();
  sub_1C9BED618();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5[2].n128_u64[0] = v11;
  v5[2].n128_u64[1] = v13;
  uint64_t v12 = sub_1C9BED618();
  unint64_t v14 = v7;
  OUTLINED_FUNCTION_6_49();
  swift_bridgeObjectRelease();
  sub_1C9B0CC38(4);
  OUTLINED_FUNCTION_1_52();
  sub_1C9BED618();
  sub_1C9BED6B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5[3].n128_u64[0] = v12;
  v5[3].n128_u64[1] = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = v5;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C9BEF570;
  *(void *)(v8 + 32) = sub_1C9B0CC38(4);
  *(void *)(v8 + 40) = v9;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = v8;
  *(unsigned char *)(a1 + 176) = 1;
  return result;
}